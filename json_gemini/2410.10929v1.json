{"title": "ASTM : Autonomous Smart Traffic Management System Using Artificial Intelligence CNN and LSTM", "authors": ["Christofel Rio Goenawan", "Prof. Haar-Dong Soo"], "abstract": "In the modern world, the development of Artificial Intelligence (AI) has contributed to improvements in various areas, including automation, computer vision, fraud detection, and more. AI can be leveraged to enhance the efficiency of Autonomous Smart Traffic Management (ASTM) systems and reduce traffic congestion rates. This paper presents an Au-tonomous Smart Traffic Management (STM) system that uses AI to improve traffic flow rates. The system employs the YOLO V5 Convolutional Neural Network to detect vehicles in traffic management images. Additionally, it predicts the number of vehicles for the next 12 hours using a Recurrent Neural Network with Long Short-Term Memory (RNN-LSTM). The Smart Traffic Management Cycle Length Analysis manages the traffic cycle length based on these vehicle predictions, aided by AI. From the results of the RNN-LSTM model for predicting vehicle numbers over the next 12 hours, we observe that the model predicts traffic with a Mean Squared Error (MSE) of 4.521 vehicles and a Root Mean Squared Error (RMSE) of 2.232 vehicles. After simulating the STM system in the CARLA simulation environment, we found that the Traffic Management Congestion Flow Rate with ASTM (21 vehicles per minute) is 50% higher than the rate without STM (around 15 vehicles per minute). Additionally, the Traffic Management Vehicle Pass Delay with STM (5 seconds per vehicle) is 70% lower than without STM (around 12 seconds per vehicle). These results demonstrate that the STM system using AI can increase traffic flow by 50% and reduce vehicle pass delays by 70%.", "sections": [{"title": "I. INTRODUCTION", "content": "The development of Artificial Intelligence (AI) began in 1943 when neurophysiologist Warren McCulloch and mathe-matician Walter Pitts published a paper introducing Artificial Neural Networks (ANN) to the world [4]. The development of AI started to gain attention when British polymath Alan Turing published his paper \"Can Machines Think?\u201d in 1950, where Turing suggested that machines can do the same things as humans, using available information and reasoning to solve problems and make decisions [4]. The development of AI officially started after Allen Newell, Cliff Shaw, and Herbert Simon published the proof of concept in the first AI program named Logic Theorist in 1955 [4]. After that, until 1974, AI grew rapidly because a lot of investment was put into the field, and computers could store more information and became faster, cheaper, and more accessible. However, at the start of 1980, AI entered the \"dark era\" due to many obstacles, such as a lack of computational power to do anything substantial; computers simply couldn't store enough information or process it fast enough, which discouraged many investors and researchers from delving deeper into this field. Until the end of the 20th century, AI development went through a roller coaster of success and setbacks, including famous \"deep learning\" techniques that allowed computers to learn using experience, popularized by John Hopfield and David Rumelhart in the 1980s [7]. In 1997, AI regained hype after IBM's Deep Blue, a chess-playing computer program, defeated reigning world chess champion and grandmaster Garry Kasparov [4]. However, it was not until 2012 that AlexNet, a CNN architecture by Alex Krizhevsky and his team, won the 2012 ImageNet annual image recognition challenge by a huge margin, reigniting development in the AI field [3]. To this day, numerous developments have emerged in AI, attributed to the vast amount of data available to train models, tremendous increases in computing power since the 1990s, and the introduction of revolutionary AI architectures with significantly higher performance and usability. Nowadays, Artificial Intelligence (AI) development has con-tributed to improvements in various areas, including scientific research, industry, environmental sectors, and governmental and social issues. For example, AI has proven effective in solving a variety of practical problems such as disease detec-tion [5], language translation [6], autonomous self-driving cars [2], and customer behavior prediction [8]. However, AI development has been hampered by difficulties in sharing ML models and differences in dependencies and machine environments, making it challenging to deploy a model across different machines [1]. Usually, ML models contain multi-stage, complex pipelines with procedures that are sequentially entangled and mixed together, such as pre-"}, {"title": "A. Artificial Intelligence", "content": "The development of Artificial Intelligence (AI) began in 1943 when neurophysiologist Warren McCulloch and mathe-matician Walter Pitts published a paper introducing Artificial Neural Networks (ANN) to the world [4]. The development of AI started to gain attention when British polymath Alan Turing published his paper \"Can Machines Think?\u201d in 1950, where Turing suggested that machines can do the same things as humans, using available information and reasoning to solve problems and make decisions [4]. The development of AI officially started after Allen Newell, Cliff Shaw, and Herbert Simon published the proof of concept in the first AI program named Logic Theorist in 1955 [4]. After that, until 1974, AI grew rapidly because a lot of investment was put into the field, and computers could store more information and became faster, cheaper, and more accessible. However, at the start of 1980, AI entered the \"dark era\" due to many obstacles, such as a lack of computational power to do anything substantial; computers simply couldn't store enough information or process it fast enough, which discouraged many investors and researchers from delving deeper into this field. Until the end of the 20th century, AI development went through a roller coaster of success and setbacks, including famous \"deep learning\" techniques that allowed computers to learn using experience, popularized by John Hopfield and David Rumelhart in the 1980s [7]. In 1997, AI regained hype after IBM's Deep Blue, a chess-playing computer program, defeated reigning world chess champion and grandmaster Garry Kasparov [4]. However, it was not until 2012 that AlexNet, a CNN architecture by Alex Krizhevsky and his team, won the 2012 ImageNet annual image recognition challenge by a huge margin, reigniting development in the AI field [3]. To this day, numerous developments have emerged in AI, attributed to the vast amount of data available to train models, tremendous increases in computing power since the 1990s, and the introduction of revolutionary AI architectures with significantly higher performance and usability."}, {"title": "B. Object Detection using Computer Vision", "content": "Object Detection using Computer Vision involves detecting objects around Artificial Intelligence Sensor Image Cameras. In computer vision, convolutional neural networks (CNNs) are very popular for tasks like image classification, object detection, image segmentation, drivable area detection [2], and more. Image classification is one of the most needed techniques in today's era; it is used across various domains like healthcare and business. Thus, knowing and creating your own state-of-the-art computer vision model is a must if you're in the AI domain. Most computer vision algorithms utilize something called a convolutional neural network (CNN). A CNN is a model used in machine learning to extract features, like texture and edges, from spatial data. Like basic feedforward neural networks, CNNs learn from inputs, adjusting their parameters (weights and biases) to make accurate predictions. However, what makes CNNs special is their ability to extract features from images. Take an image of a car, for example. In a normal feedforward neural network, the image would be flattened into a feature vector. However, CNNs can treat images like matrices and extract spatial features, such as texture, edges, and depth. They accomplish this through convolutional layers and pooling. The architecture of the Artificial Intelligence Convolutional Neural Network can be seen below."}, {"title": "C. Traffic Congestion Prediction using Artificial Intelligence", "content": "One application of Artificial Intelligence is predicting traffic congestion. By analyzing traffic time, traffic jam conditions, and weather conditions, AI can predict traffic congestion ef-fectively. Recurrent neural networks (RNNs) are deep learning models typically used to solve problems with sequential input data, such as time series. RNNs retain a memory of previously processed inputs and learn from these iterations during training [1]. To understand RNNs, consider that they are a class of artificial neural networks where connections between nodes form a directed graph along a temporal sequence. This allows them to exhibit temporal dynamic behavior. Unlike feedfor-ward neural networks, which do not retain memory, RNNs can process variable-length sequences of inputs [8]. RNNs share parameters across each layer of the network, and while they adjust weights during training, they often face challenges such as exploding and vanishing gradients [21]. The architecture of the Recurrent Neural Network for predicting traffic congestion can be seen below."}, {"title": "D. Smart Traffic Management Systems", "content": "One cornerstone of smart city design is having an inte-grated smart transportation solution. It can be argued that a city is not completely intelligent without a smart traffic management system. Intelligent transportation systems (ITS) or smart traffic management systems (Figure 1) provide an organized, integrated approach to minimizing congestion and improving safety on city streets through connected technology. The intelligent traffic management system market is expected to grow to $19.91 billion by 2028 at a 10.1% CAGR, according to PR Newswire. The demand and increased adoption rate of smart traffic management solutions can be attributed to the rise of smart city technology. Guidehouse Insights reports that there are more than 250 smart city projects globally. Symmetry Electronics supplier, Digi International, defines smart traffic management systems as technology solutions that municipalities can integrate into their traffic cabinets and inter-sections today for fast, cost-effective improvements in safety and traffic flow on their city streets. Efficient and success-ful smart traffic management systems utilize next-generation hardware and software to optimize traffic infrastructure (Figure 2). The architecture of the Smart Traffic Management System using Artificial Intelligence can be seen below. Transportation plays a crucial role in any community, connecting people to jobs, services, and opportunities. Mon-itoring key metrics can provide valuable insight into how a transportation system is performing and whether it meets the needs of those who rely on it. This section explores some key transportation metrics to analyze in any community, including measures of mobility, road safety, and accessibil-ity. By understanding these metrics, community leaders and transportation professionals can make informed decisions to improve transportation systems and enhance the overall quality of life for residents. Metrics to Measure Traffic Congestion in Smart Traffic Management can be seen below.\n1) Average Daily Traffic (ADT) and Annual Average Daily Traffic (AADT): ADT and AADT quantify how busy a stretch of road or highway is, reporting the number of vehicles passing through over a day or year, respectively. They have many applications within traffic engineering, such as signal timing and determining where infrastruc-ture investments should go.\n2) Corridor Travel Times: Corridor Travel Times help transportation agencies understand how long it takes to travel between two points and allow them to identify bottlenecks and improve planning and programming.\n3) Speed: A common measure of traffic congestion is the speed at which vehicles travel on a roadway. It can be averaged over specific time intervals or collected for an entire day, providing insight into how traffic conditions change throughout the day.\n4) Travel Time Index (TTI): TTI is a ratio of the travel time during peak hours to the travel time during free-flow conditions. TTI identifies congestion and can help agencies determine the effectiveness of congestion man-agement strategies.\n5) Delay: Delay is the difference between the time a vehicle would take to travel in free-flow conditions and the time taken to travel under congested conditions. It helps identify congestion levels and improve roadway operations.\n6) Level of Service (LOS): LOS is a grading system from A to F used to evaluate traffic flow, where A indicates free-flow conditions and F indicates heavy congestion.\n7) Peak Period: The peak period is the time when con-gestion is at its highest level, usually occurring dur-ing morning and evening rush hours. Identifying peak periods can help agencies optimize traffic management strategies. It is essential to analyze metrics to identify existing issues and prioritize solutions. Advanced traffic management systems can continuously collect data from the street network and dynamically respond to changing traffic conditions. Traffic signal timing can be adapted based on current congestion levels, and information can be provided to drivers in real time through digital signs or mobile applications. As technology continues to advance, the capabilities of smart traffic manage-ment systems will continue to expand, ultimately leading to safer, more efficient roadways."}, {"title": "II. METHODOLOGY", "content": "In this project, the author proposes a novel architecture for a Smart Traffic Management System by using Artificial Intel-ligence to intelligently manage traffic. First, we use Artificial Intelligence to detect vehicles in traffic management system images. After detecting vehicles, we predict the number of vehicles using Artificial Intelligence to estimate the traffic den-sity. Then, the system manages the traffic cycle length based on fuzzy decision-making for traffic flow. The architecture of the autonomous Smart Traffic Management System using Artificial Intelligence is illustrated in Figure 4."}, {"title": "A. Smart Traffic Management System Vehicle Detection using Convolutional Neural Network", "content": "First, we detect vehicles in traffic management system images using a Convolutional Neural Network (CNN). The CNN detects vehicles by analyzing the pixels and colors in the images. For vehicle detection, the author uses the Road Vehicle Image Dataset of Bangladesh Traffic, created by Ashfak Yeafi in 2017. This dataset contains annotated images of Bangladesh road vehicles, with separate folders for training and validation images. The dataset includes over a million images, captured from January to December 2017. For the vehicle detection task, the author uses the YOLOV5 CNN model. YOLOv5 is widely used for object detection tasks and comes in four versions: small (s), medium (m), large (1), and extra-large (x), each offering progressively higher accuracy. YOLOv5 works by extracting features from images and predicting bounding boxes and class labels for detected objects. It connects the process of predicting bounding boxes and class labels in an end-to-end differentiable network. The YOLO network consists of three main components:\n1) Backbone: A convolutional neural network that aggre-gates and forms image features at different granularities.\n2) Neck: A series of layers to mix and combine image features before passing them forward to prediction.\n3) Head: Consumes features from the neck and performs the final box and class prediction. The architecture of YOLOv5 for Smart Traffic Management System vehicle detection using CNN is shown below."}, {"title": "B. Traffic Vehicle Prediction using Recurrent Neural Network", "content": "After determining the number of vehicles, the author pre-dicts the next 12 hours of traffic using a Recurrent Neural Network (RNN). Specifically, a Long Short-Term Memory (LSTM) model is used to predict future traffic flow. LSTMs are designed to handle long-term dependencies in sequential data, making them suitable for tasks like time series forecasting. An LSTM has a memory cell controlled by three gates: the input gate, the forget gate, and the output gate. These gates manage the flow of information, allowing the LSTM to selectively retain important data over time. This makes LSTMs ideal for traffic prediction tasks. The architecture of the RNN with LSTM for predicting traffic in a Smart Traffic Management System is shown in Figure 7."}, {"title": "C. Smart Traffic Management Traffic Cycle Length Analysis using Fuzzy Decision Making", "content": "The Smart Traffic Management Traffic Cycle Length is managed based on vehicle prediction using Artificial Intelli-gence. The traffic cycle length is the total signal time required to serve all signal phases, including green time and any change intervals. Longer cycles accommodate more vehicles per hour but also produce higher average delays. The optimal cycle length can be determined using Webster's formula, which minimizes intersection delay:\n$C = \\frac{(1.5 \\times L + 5)}{(1.0 - SY)}$\nWhere: C = optimal cycle length in seconds (rounded to the nearest 5 seconds), L = unusable time per cycle (e.g., signal change intervals), SY\u2081 = critical lane volume for each phase/saturation flow. The saturation flow is typically between 1500 and 1800 vehicles per hour. This formula can be used to calculate the signal timing for planning purposes. After determining the cycle length, the green time can be proportioned for each phase based on critical lane volumes."}, {"title": "D. Evaluating the Smart Traffic Management System using Artificial Intelligence with the Traffic Management Simulator CARLA", "content": "After determining the Smart Traffic Management System Traffic Cycle Length using Smart Traffic Cycle Length Fuzzy Decision Making, the user will simulate the Smart Traffic Management System using Artificial Intelligence in the Smart Traffic Management Simulator CARLA. CARLA is an open-source autonomous driving simulator. It was built from scratch to serve as a modular and flexible API to address a range of tasks involved in the problem of autonomous driving. One of the main goals of CARLA is to help democratize autonomous driving R&D, serving as a tool that can be easily accessed and customized by users. To do so, the simulator must meet the requirements of different use cases within the general problem of driving (e.g., learning driving policies, training perception algorithms, etc.). CARLA is based on Unreal Engine to run the simulation and uses the OpenDRIVE standard (1.4 as of today) to define roads and urban settings. Control over the simulation is granted through an API handled in Python and C++ that is constantly being improved as the project evolves. In order to smooth the process of developing, training, and validating driving systems, CARLA has evolved into an ecosystem of projects, built around the main platform by the community. In this context, it is important to understand how CARLA works to fully comprehend its capabilities. First, the author tunes the hyperparameters of the YOLO V5 Convolutional Neural Network to detect Smart Traffic Management System vehicles. The tuning process for the YOLO V5 Convolutional Neural Network hyperparameters for detecting vehicles in the Smart Traffic Management System is shown in Figure 8."}, {"title": "III. CONCLUSION", "content": "This paper presents an Autonomous Smart Traffic Manage-ment System using Artificial Intelligence to improve traffic congestion flow rates. The system utilizes the YOLO V5 Convolutional Neural Network to detect vehicles in traffic management images. The hyperparameters of the YOLO V5 model, including the learning rate, momentum, mosaic param-eter, rotation degree, scale, and weight decay, were optimized. The best hyperparameter settings resulted in a mean average precision (MAP) of 0.4034, which is almost 50 The Smart Traffic Management System also predicts the number of vehicles over the next 12 hours using a Recurrent Neural Network Long Short-Term Memory (RNN-LSTM). The model predicts vehicle numbers with an MSE of 4.521 and an RMSE of 2.232, accurately predicting traffic trends for the next 12 hours. Finally, the Smart Traffic Management System is evaluated using the CARLA simulator. The results show that the Traffic Management Congestion Flow Rate with the Smart Traffic Management System (21 vehicles per minute) is 50"}]}