{"title": "DrugWatch: A Comprehensive Multi-Source Data Visualisation Platform\nfor Drug Safety Information", "authors": ["Artem Bobrov", "Domantas Saltenis", "Zhaoyue Sun", "Gabriele Pergola", "Yulan He"], "abstract": "Drug safety research is crucial for maintaining\npublic health, often requiring comprehensive\ndata support. However, the resources currently\navailable to the public are limited and fail to\nprovide a comprehensive understanding of the\nrelationship between drugs and their side ef-\nfects. This paper introduces DrugWatch, an\neasy-to-use and interactive multi-source infor-\nmation visualisation platform for drug safety\nstudy. It allows users to understand common\nside effects of drugs and their statistical in-\nformation, flexibly retrieve relevant medical\nreports, or annotate their own medical texts\nwith our automated annotation tool. Supported\nby NLP technology and enriched with inter-\nactive visual components, we are committed\nto providing researchers and practitioners with\na one-stop information analysis, retrieval, and\nannotation service.", "sections": [{"title": "1 Introduction", "content": "The use of medications is a cornerstone of modern\ndisease management, yet their potential for adverse\nreactions can pose safety risks. Adverse drug re-\nactions (ADRs) have been reported to be the most\ncommon cause of hospitalisation and rank as the\nfourth or sixth leading cause of death (Lazarou\net al., 1998). In addition to the inherent risks of\nmedications themselves, certain drugs may exhibit\nunpredictable sensitivities in specific patient pop-\nlations (World Health Organization, 2004). Fur-\nthermore, there is also a risk of interactions when\nmultiple medications are used concurrently. There-\nfore, to ensure public health safety, professionals\nsuch as physicians, drug developers, and regulatory\nofficials often need to comprehensively understand,\nassess, and monitor medication safety information\nfrom various sources.\nTo benefit the monitoring of adverse drug events,\nthe World Health Organization (WHO) and numer-\nous countries or regions have established databases\nfor spontaneous case reporting, such as VigiBase\n(Uppsala Monitoring Centre, 2024), FDA Ad-\nverse Event Reporting System (FAERS; U.S. Food\nand Drug Administration 2024), and EudraVigi-\nlance (European Medicines Agency, 2024). These\ndatabases typically offer interactive query tools to\nassist users in visualising statistical data from the\nreporting system. For example, the FAERS Dash-\nboard enable users to search for specific drug prod-\nucts or reaction terms, and offers visual charts il-\nlustrating the distribution of corresponding reports\nby year, demographic details, reaction categories,\netc. These databases serve as crucial sources of\ninformation for drug safety research.\nHowever, the presence of reports in spontaneous\nreporting systems does not imply a causal relation-\nship between the drug and the reported adverse\nreactions. The context in which adverse reactions\noccur is often complex and may be related to the\nunderlying disease, concurrent medication use, or\nother factors. Therefore, relying solely on statis-\ntical information from spontaneous reporting sys-\ntems is insufficient for a deeper understanding of\ndrug-induced adverse reactions. Researchers often\nneed access to more detailed information for anal-\nysis, much of which is embedded within textual\ndescriptions.\nIn this paper, we introduce DrugWatch, a multi-\nsource data visualisation platform that integrates\ninformation from structured, textual and user-held\ndata on drug safety. It comprises two primary sub-\nplatforms: DrugWatch Search and DrugWatch\nAnnotate. DrugWatch Search offers users visu-\nalised statistical data sourced from FAERS and\nPubMed, along with robust support for fine-grained\nPubMed medical case report retrieval. Drug Watch"}, {"title": "2 Architecture of DrugWatch", "content": "Drug Watch consists of two sub-platforms: Drug-\nWatch Search and DrugWatch Annotate. The over-\nall architecture is illustrated in Figure 1.\nDrugWatch Search is designed for flexible drug\nand ADE search. It presents not only fundamental\ninformation about drugs but also statistical infor-\nmation from the FAERS database and PubMed lit-\nerature collections. Additionally, it enables users\nto access relevant ADE case reports seamlessly.\nIts front-end is implemented using React (Meta\nPlatforms, Inc., 2024), creating a smooth and in-\nteractive user experience. On the server side, we\nutilise the Flask (Pallets, 2024) framework to man-\nage API requests and handle data processing from\nlocal databases.\nDrugWatch Annotate provides automated predic-\ntion and visualisation services for user-held data.\nUsers can instantly or in bulk extract ADEs from\ntheir data using our built-in fine-tuned models or\nLLMs. They can easily visualise the event argu-\nments extracted for each data instance, compare\nprediction results from different models, and conve-\nniently filter results. We preload the PHEE dataset\nfor direct comparison purposes. The front-end of\nDrugWatch Annotate is built with SvelteKit (Rich\nHarris, 2024), ensuring fast responsiveness and a"}, {"title": "3 User Interaction Design", "content": "clear, visually appealing user experience. The back-\nend continues to utilise Flask."}, {"title": "3.1 DrugWatch Search Sub-platform", "content": "DrugWatch Search is a search-centric multi-source\ninformation display platform that allows users to\nsearch for drugs or side effects flexibly. It not only\npresents basic drug information for users but also\nsupports the visualisation of interactive statistical\ninformation. The integrated event extraction algo-\nrithm further enables the platform to retrieve and\ndisplay relevant PubMed literature based on flexi-\nble search options."}, {"title": "Flexible Search", "content": "Users can search for individual\ndrugs or side effects and their respective combi-\nnations. A combination search for drugs and side\neffects is currently not available from the search\nentrance, but users can filter search results by side\neffects (or drugs). Furthermore, for any queried\ndrug or side effect, the platform provides the op-\ntion to refine search results based on specific demo-\ngraphic filters, including patient gender, age group\n(or exact age), and nationality."}, {"title": "Drug Information Display", "content": "When searching for\ndrugs, our platform first presents users with ba-\nsic drug information collected from DrugBank.\nThis includes structural diagrams, IUPAC name,\nchemical class, and chemical formula of the drug\nmolecule. Additionally, we display information\nrelated to drug use such as indication, half-life, and\nbrand names. When users query multiple drugs at\nonce, the information for each drug is displayed\nsequentially."}, {"title": "Statistical Information Display", "content": "We provide sta-\ntistical information for reports meeting customised\nsearch criteria on the main results page, and of-\nfer a breakdown of demographic information of\nthe searched drug or side effects in a pop-up win-\ndow. For both cases, users can compare informa-\ntion from FAERS and PubMed with a single click.\nOn the main results page, we initially display a\nline chart showing the variation in the number\nof reports matching the search criteria over\nthe years. Additionally, we present the most rele-\nvant side effects (or drugs) associated with the drug\n(or side effect) queried by the user. We present this\ninformation in two different ways. Firstly, users can\nobserve the top 50 side effects (or drugs) with the\nhighest frequency in the reports, along with their\nrespective counts and proportions (by mouseover),\nthrough a bar chart. For easier viewing, the results\nare divided into 5 pages, with different colours in-\ndicating the rarity of the terms. Secondly, users\ncan visually grasp the distribution of related terms\nthrough a word cloud."}, {"title": "Pubmed Case Report Retrieval", "content": "We simultane-\nously present users with relevant PubMed case re-\nports on the search results page, allowing them\nto quickly grasp contextual information surround-\ning the adverse drug reactions. By default, we\ndisplay information such as the literature titles, ab-\nstracts, keywords etc., that match the search cri-\nteria, along with links for quick access to the re-\nspective PubMed entries. Users' search terms are\nhighlighted in the abstracts for easier browsing. In\naddition, we have designed a flexible interaction\nmethod, allowing users to dynamically adjust the\nliterature search criteria as needed. For example,\nthey can interact with the bar chart or word cloud\nchart depicting the distribution of adverse reactions\non the search page to obtain a list of literature asso-\nciated with both the searched drug and an adverse\nreaction. They can also specify any other filtering\nterms by manual input"}, {"title": "3.2 DrugWatch Annotate Sub-platform", "content": "DrugWatch Annotate provides users with auto-\nmated annotation capabilities for adverse events,\nfacilitating the visualisation of annotated results.\nIt features a live annotation interface for real-time\ncheck of individual data entries and a bulk annota-\ntion interface for efficient assessment of uploaded\nbatch data. The annotation platform lays the foun-\ndation for users to conduct in-depth analysis of\ntheir private data subsequently."}, {"title": "Live Annotation", "content": "Users can freely input sen-\ntences they wish to analyse into the text window\nand then select the model they want to apply. Cur-\nrently, three models (i.e., Flan-T5, UIE, Mistral-\n7B) are available for annotation. The page displays\nvisual results of the model's predictions in real-\ntime, presenting arguments in different colours for\neasy browsing. Users can also view and copy the\nresults in JSON format"}, {"title": "Bulk Annotation", "content": "Users can upload their data in\nbatches and visualise all annotation results. They\nmay view annotation results for any single model\nor compare results from two models side by side\nWe default to loading the PHEE dataset\nand specifically provide manual annotations on this\ndataset for users to compare the effects of differ-\nent models and make selections accordingly. We\nalso allow users to search annotation results to only\nview results containing a specific argument type\n(e.g., subject's age) or containing a specific argu-\nment span (e.g., \"6 years old\"). Similarly, users\nmay check and export model outputs in JSON for-\nmat. A more comprehensive illustration of the bulk\nannotation interface is shown"}, {"title": "4 Backend Implementation", "content": ""}, {"title": "4.1 Data Storage and Retrieval", "content": "For DrugWatch Search, to retrieve statistical data\nor article information from the back-end, the front-\nend service makes a series of REST API requests\nto various endpoints implemented in our backend.\nData from the FAERS system is directly fetched\nfrom the front-end through the OpenFDA API, while text and statistical information from PubMed\nare processed and stored in the local file system\nand retrieved from the back-end. This integrated\napproach effectively reduces the server's workload\nand ensures the speed. Specifically, the PubMed\ndata are stored in JSON files and loaded into RAM\nto expedite the search process. We transform the\nresults of the extraction method described in sub-\nsection 4.2 and remove fields that will not be used\nin the search. Once a search request is submitted,\nthe algorithm iterates through the extracted event ar-\nguments of the loaded data, and if a match is found,\nappends the article ID to the response. Finally, the\nmetadata for each retrieved article is fetched with\nBiopython and returned to the front-end."}, {"title": "4.2 Relevant Medical Case Reports Integration", "content": "To integrate user query-related medical case reports\nfrom PubMed into our platform, we first retrieve\nand download abstracts of adverse event case re-\nports from PubMed, and train a classifier to filter\nsentences mentioning adverse events from these\nabstracts. Subsequently, we utilise an event extrac-\ntion model to extract fine-grained event arguments\nfrom the filtered sentences and store the extraction\nresults and their relevant PubMed IDs locally. We\nthen normalise the extracted arguments using regu-\nlarisation methods, match them with user queries\nand return relevant PubMed IDs. Finally, we pro-\nvide a preview of the list and abstracts of the re-\ntrieved articles."}, {"title": "Case Reports Collection", "content": "The initial stage in-\nvolves obtaining abstracts from PubMed that per-\ntain to adverse events. We use Biopython to fetch\ndata from PubMed. During retrieval, we obtain\nrecords containing the keywords \"adverse event\",\n\"adverse effect\", \"adverse reaction\", or \"side ef-\nfect\", while restricting the publication type to \"case\nreport\", the language to English, and the presence\nof an abstract. Our platform has currently collected\nand analysed case reports up to December 2023,\nand allows for incremental data updates over time.\nIn total of ~184k articles are collected at this stage."}, {"title": "Sentence Classification", "content": "To extract more gran-\nular adverse event information, we first filter out\nsentences mentioning adverse events from the col-\nlected abstracts. We train a binary classifier based\non SciBert (Beltagy et al., 2019) and apply it to all\nsentences. The classifier was trained on the ADE\ndataset (Gurulingappa et al., 2012). Around 78k\npublications, which contain 220k sentences related\nto ADEs, remained after classification."}, {"title": "Adverse Event Extraction", "content": "We then extract fine-\ngrained structured information from the selected\nsentences related to ADEs, including drug names,\nadverse reactions, drug administration information,\npatient demographic information, etc. These ex-\ntracted arguments are later used to support flexible\nretrieval functionalities. We utilise the fine-tuned\nFlan-T5 model introduced in our previous work\n(Sun et al., 2024) to extract arguments of adverse\nevents sentence by sentence. The model converts\nstructured event information into linearised text se-\nquences to train a Seq-to-Seq model on the PHEE\n(Sun et al., 2022) dataset."}, {"title": "Result Normalisation and Linking", "content": "The final\nstep is to map the extracted results to the user's\nquery and return the corresponding publication\nlinks and abstracts. The results of event extrac-\ntion are first transformed into structured data, re-\nmoving fields that are not relevant for search, and\nmerging extraction results from the same article by\ndrug. Subsequently, as the text-based extraction\nresults are free-text spans with rich expressions, we\nassociate them with search terms through normali-\nsation. Specifically, for age and gender fields, we\ncollected all expressions appearing in the database,\nmapped them to a range or specific value using\nGPT-4, and verified them manually. For drug and\nside effect terms, we cleaned them using regular\nexpressions based on manual rules and dictionaries.\nFinally, when receiving a query, we traverse the\nentire database to search for matching arguments\nand return the associated PubMed IDs."}, {"title": "4.3 Annotation Models", "content": "We provide several models for the user to anno-\ntate pharmacovigilance events of their own data\nthrough the DrugWatch Annotate platform. For the\nfine-tuned models, we utilise the UIE and Flan-T5\nmodels trained by Sun et al. (2024) on the PHEE\ndataset, which have been reported to achieve good\nperformance and are easy to use. The application\nfor these models is similar to that described in\nsubsection 4.2. For the LLM, we supply Mistral-\n7B (Mistral AI, 2023). We deploy the model on\nour local server and perform inference using the"}, {"title": "5 Model Evaluation", "content": ""}, {"title": "ADE Classification Evaluation", "content": "The classifier is\ntrained and evaluated on the ADE dataset (Gurulin-\ngappa et al., 2012). It contains approximately 4k\nADE-related sentences and 16k negative sentences.\nWe sample an equal number of negative sentences\nas the positive ones for training and evaluation. The\ndata is split by 7/1/2 for training/validation/testing.\nThe classification evaluation result is presented in\nTable 1."}, {"title": "ADE Extraction Evaluation", "content": "We use the PHEE\n(Sun et al., 2022) dataset to train and evaluate the\nevent extraction model. The dataset contains an-\nnotations for PTEs and ADEs, and hierarchically\nannotates the main arguments and sub-arguments\nof the events. In total around 5k sentences are in-\ncluded in the dataset, and are split by 6/2/2 for\ntraining/validation/testing.\nTable 2 presents the performance of our event\nextraction model applied to DrugWatch Annotate.\nHere, EM_F1 measures the exact match of the\nargument span, while Token_F1 measures the\nmatched tokens in the arguments. Constrained by\nthe available hardware and the size of models that\ncan run on it, the performance of the LLM (Mistral-\n7B) still lags far behind fine-tuned smaller models.\nAfter upgrading our equipment in the future, we\nwill deploy more powerful models which may re-\nsult in better performance.\nWe employ the Flan-T5 model for event extrac-\ntion in DrugWatch Search. We keep the model\ntrained on the original data but only use partial\nresults as needed. Specifically, we leverage the"}, {"title": "6 Conclusion and Future Work", "content": "DrugWatch is a multi-source data visualisation and\nannotation platform for drug safety research. It\naims to provide a comprehensive, interactive infor-\nmation retrieval experience. We are committed to\nalleviating the inconvenience researchers often face\nwhen navigating multiple platforms to access infor-\nmation on drug adverse reactions. To achieve this,\nwe integrate statistical and textual information from\nthe spontaneous case report systems (i.e., FAERS)\nand medical literature databases (i.e., PubMed), al-\nlowing users to conduct interactive searches. We\nalso support users to annotate and visualise their\nown text, laying the foundation for subsequent in-\ndepth private data analysis.\nIn future work, we will consider further expand-\ning data sources and supporting more granular\nsearches. In particular, we currently do not sup-\nport statistical analysis of users' private data due\nto data security considerations, which is an issue\nwe are actively working to address. Furthermore,\nwe are considering integrating literature summaries\nor question-answer components into the system to\nsupport summarisation or questioning of retrieved\nPubMed texts, enabling users to learn diverse infor-\nmation seamlessly."}, {"title": "Limitations", "content": "DrugWatch Search currently does not support\nsearching for a combination of drugs and adverse\nreactions, e.g., users cannot search for both \"Ac-\netaminophen\" and \"nausea\" simultaneously. This\nlimitation arises from restriction calling OpenFDA\nAPI (i.e., specific search types must be specified)\nand the display logic. To compensate for this, we al-\nlow users to conveniently navigate to demographic\ninformation pages related to associated side effects\nwhen searching for drugs, and vice versa. Addition-\nally, through dynamic article searching, filtering\nretrieved PubMed literature by combined search\nterms can be performed.\nIn addition, our visualisation of FAERS data\nrelies on the OpenFDA API. Therefore, when API\naccess is restricted or reaches its limit, it may fail\nto display information from the FAERS database.\nFurthermore, when users utilise DrugWatch An-\nnotate for batch data prediction, considering the\nsensitivity of medical data, we avoid storing user\ndata on the server side. This means that all data pro-\ncessing will occur within a single session, and users\nmay need to wait online for processing results. The\nduration of the wait depends on the server hardware\ninfrastructure and the amount of text uploaded by\nthe user.\nMoreover, users currently can only upload data\nin the format specified by us, which is a text\nfile with one sentence per line. Additionally, the\nextracted events must adhere to our predefined\nschema. In the future, with the integration of more\npowerful LLMs, we will allow users to customize\nthe structure of the events they want to extract."}, {"title": "Ethics Statement", "content": "Neither spontaneous case reports from FAERS\nnor medical reports from PubMed suggest a di-\nrect causal relationship between the drug and the\nadverse effect. Users should avoid relying on our\nplatform to make healthcare decisions. Particularly,\nalthough we provide visualisations of PubMed case\nreport statistics, users should note the sparse nature\nof ADE reports from medical literature and the\npotential for statistical bias therein.\nIn terms of user data annotation, while we pri-\noritise the security of user data and refrain from\nstoring any on our servers, these data must still\ntransmit through the network, posing inherent risks.\nUsers should acknowledge these risks and consider\nusing de-identified or synthetic data when starting\nwith our platform."}, {"title": "A Related Work", "content": "Several resources and tools have already been\navailable to researchers and practitioners in phar-\nmacovigilance for understanding adverse drug re-\nactions. One important category is spontaneous\nreporting systems, which allow patients, physi-\ncians, or other practitioners to spontaneously sub-\nmit ADE case reports to the database. These\ndatabases include VigiBase (Uppsala Monitoring\nCentre, 2024), FAERS (U.S. Food and Drug Ad-\nministration, 2024), and EudraVigilance (European\nMedicines Agency, 2024), etc. They collect large\namounts of structured information on ADES, serv-\ning as primary sources for adverse reaction mon-\nitoring. Some spontaneous reporting systems are\nalso equipped with sophisticated visualisation tools,\ne.g., FAERS Dashboard, helping users visualise sta-\ntistical information related to adverse reactions in\ngraphical form. However, these charts only pro-\nvide an overview of adverse reactions from a data\nperspective, while specific descriptions of adverse\nreactions including their causes are often hidden in\ntexts. This requires researchers to search for addi-\ntional literature to learn more detailed information\nabout the adverse event. Therefore, we are com-\nmitted to integrating text information retrieval with\nstatistical information visualisation on the same\nplatform, providing convenient and unified interac-\ntive design to save users time across platforms.\nAnother useful category of resources is knowl-\nedge bases related to drugs and adverse reactions.\nAmong them, DrugBank (DrugBank, 2023) pro-\nvides detailed information on drug pharmacology\nand properties et al., but adverse reaction data is\nnot publicly available and is only presented in\nstructured data tables for known adverse reactions.\nThe SIDER (Kuhn et al., 2015) database is open-\nsourced and provides drug-adverse reaction pairs\nextracted from drug package inserts. Another plat-\nform with a similar intention to ours, also dedicated\nto comprehensive adverse reaction information ser-\nvices, is MetaADEDB (Yu et al., 2020). How-\never, its design resembles more of a knowledge\nbase, presenting known knowledge including syn-\nonyms, indications, and ADRs ever reported in the\nFAERS system. MetaADEDB 2.0 also includes\na prediction system, but it focuses on molecular\nstructure-based ADR prediction, which is differ-\nent from our text-based event extraction tool. The\nmain difference between these knowledge-based\ntools and our platform is that they focus on existing"}, {"title": "BUI Supplementaries", "content": "Figure Al presents the visual of the main search\npage. When users type in the names of drugs or side\neffects, a dropdown window will automatically pop\nup with suggested search items. Users add search\nterms by clicking on the suggested items. They\ncan also type and select multiple drug or side effect\nnames in succession for a combined search."}]}