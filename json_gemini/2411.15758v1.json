{"title": "Decoding Urban Industrial Complexity: Enhancing Knowledge-Driven Insights via IndustryScopeGPT", "authors": ["Siqi Wang", "Chao Liang", "Yunfan Gao", "Yang Liu", "Jing Li*", "Haofen Wang*"], "abstract": "Industrial parks are critical to urban economic growth. Yet, their development often encounters challenges stemming from imbalances between industrial requirements and urban services, underscoring the need for strategic planning and operations. This paper introduces IndustryScopeKG, a pioneering large-scale multi-modal, multi-level industrial park knowledge graph, which integrates diverse urban data including street views, corporate, socio-economic, and geospatial information, capturing the complex relationships and semantics within industrial parks. Alongside this, we present the IndustryScopeGPT framework, which leverages Large Language Models (LLMs) with Monte Carlo Tree Search to enhance tool-augmented reasoning and decision-making in Industrial Park Planning and Operation (IPPO). Our work significantly improves site recommendation and functional planning, demonstrating the potential of combining LLMs with structured datasets to advance industrial park management. This approach sets a new benchmark for intelligent IPPO research and lays a robust foundation for advancing urban industrial development. The dataset and related code are available at https://github.com/Tongji-KGLLM/IndustryScope.", "sections": [{"title": "1 Introduction", "content": "Industrial parks are key engines driving economic growth and centers of innovation within cities. They connect the economy, living environments, and environmental sustainability, fostering the integration of technological innovation and urban life [30]. However, many face a significant imbalance between industrial growth and urban service provision, leading to unsustainable development patterns [2]. This imbalance highlights the urgent need for scientific planning and operation of industrial parks. Such operation requires a strategic consideration of local economic levels, infrastructure, and industrial foundations, aiming to provide optimization suggestion, public service facility site recommendation, and comprehensive industrial zone planning [3]. Traditional approaches, often based on empiricism and outdated surveys, fail to dynamically integrate rich urban data for deep analytical insights [1, 21].\nThe advancement of artificial intelligence enhances urban tasks such as traffic management [34], urban planning [22], urban function prediction [38], public safety [15], and site recommendation [10]. However, intelligent industrial park planning and operation (IPPO) remains largely untapped. The emergence of Large Language Models (LLMs) [19], with their robust language reasoning and in-context learning capabilities [28], offers new avenues for addressing urban complexities and developing unified, adaptive IPPO solutions.\nTo tackle the challenges mentioned, this paper introduces a pioneering work that constructs a multi-modal, multi-level large-scale industrial park knowledge graph, IndustryScopeKG. By extracting entities from diverse data sources and combining domain knowledge, a substantial industrial park knowledge base with various spatial and semantic relationships has been built. The IndustryScopeGPT framework is introduced to enable LLMs to dynamically adapt to the structure of knowledge graph and enhance decision-making capabilities through Monte Carlo Tree Search and reward information. The performance of the framework in IPPO tasks is validated through the development of IndustryScopeQA benchmark, demonstrating the reliability and advantages of the framework. Our contributions are summarized as follows:\n\u2022 We release the first open-source, multi-modal, multi-level (spatial and semantic level) large-scale knowledge graph dataset, IndustryScopeKG, for IPPO tasks.\n\u2022 We introduce the IndustryScopeGPT framework, which enhances LLMs' planning, action, and reasoning capabilities through the integration of graph databases and various tools, along with Monte Carlo Tree Search for optimal reasoning paths. It represents the inaugural implementation of LLMs' fusion with spatial computing and dynamic reasoning on graph databases containing external geographic data.\n\u2022 We introduce the IndustryScopeQA benchmark to evaluate the IndustryScopeGPT framework's performance. Experiments on site recommendation and industrial park planning confirm that the IndustryScopeKG dataset and framework enhances the efficiency and adaptability of LLMs."}, {"title": "2 Related Work", "content": null}, {"title": "2.1 Urban Intelligence and Dataset", "content": "Researchers utilize deep learning models to extract representations from urban data like satellite images, points of interest (POI), and road networks [23, 31, 32], but their lack of interpretability and generality across different tasks limits applications in urban settings. ReCo [6] provides dataset with precise coordinates for residential layout planning. However, the reliance on single data source restricts the integration of multi-modal data, impacting complex urban analysis. Initiatives like OpenSiteRec [10] and UUKG [18] employ heterogeneous graphs for brand site recommendations and spatio-temporal predictions. These urban knowledge graphs organize urban entities comprehensively but struggle with limited, task-specific datasets and a scarcity of public resources [17]. For a comparison of our dataset with other urban dataset, see Table 1."}, {"title": "2.2 LLMs Reasoning", "content": "LLMs exhibit strong capabilities through enhanced reasoning abilities via logical structures like chains [27], trees [36], and graphs [20]. Recent advancements enable large models to access internal and external knowledge for improved decision-making [7]. LLMs are increasingly used as central controllers for autonomous agents with human-like decision-making skills [25]. They have spurred innovation in urban research, such as developing mobility strategies [24], simulating disease spread [29], urban planning [40] and complex spatio-temporal question answering [11]. However, these methods primarily focus on textual spatio-temporal features, neglecting multi-modal urban knowledge."}, {"title": "3 IndustryScopeKG", "content": null}, {"title": "3.1 Data Collection and Pre-processing", "content": null}, {"title": "3.1.1 Data Acquisition.", "content": "We opted to acquire multi-source spatio-temporal data from the Shanghai, China, considering the richness and availability of information relevant to industrial parks. The data sources mainly come from three aspects:"}, {"title": "3.1.2 Data Pre-processing.", "content": "Extensive data preprocessing was necessary, focusing on geospatial tasks such as park vectorization, grid processing and spatial positioning, as illustrated in Figure 2. We manually outlined the vector boundaries of each industrial park using maps of Shanghai's industrial parks, converting text addresses into geocoded latitude and longitude coordinates. Additionally, we standardized the coordinate systems of the multi-source data to the Baidu system for accurate positioning within industrial park boundaries. Integrating visual models, we employed semantic segmentation of street view images to calculate visual metrics [26], used object detection to assess permeability, and trained models on street view charm value based on expert ratings."}, {"title": "3.2 Knowledge Graph Construction", "content": null}, {"title": "3.2.1 IndustryScopeKG. Definition.", "content": "We define the graph G =(E, S, Y), where E = {e1, e2, ..., eE} is a set of |E| entities, S denotes the set of relational triples, and Y encompasses the set of attributional triples. Specifically, (1) Relational Triples: S \u2282 E \u00d7 R \u00d7 E represents a collection of triples that delineate relationships between entities, with R constituting a set of |R| distinct relations. For instance, \u201cCompany - Located In - Industrial Park\u201d; (2) Attributional Triples: Y \u2282 E \u00d7 A \u00d7 V constitutes triples indicating attributes of entities, where A = {A1, A2,..., AA } represents a collection of |A| attributes, with each attribute Ai \u2208 A paired with a corresponding set of values Vi \u2208 V. For example, \u201cIndustrial Park Number of Companies \u2013 500\u201d. IndustryScopeKG was built following our construction pipeline, as shown in Figure 3."}, {"title": "3.2.2 Relational Triples Extraction. Entity Extraction.", "content": "For the IndustryScopeKG, we extract entities from 8 major categories and 32 sub-categories. The major categories include: (1) Industrial Parks, encompassing 264 industrial parks in Shanghai. (2) Grids, which are 128,866 fine-grained spatial grids derived from gridding industrial parks. (3) Grid Dominant Functions, identified from calculating the dominant POI within grids. It is then adjusted using AOI, resulting in 15 types of grid functions, e.g., business offices, commercial services, residential areas, among others. (4) POI, serving as the basic functional units and places, including 15 POI sub-categories such as residential, green spaces, business offices, commercial services, etc. (5) Enterprises, including entities of 1,058,656 enterprises within parks. (6) Enterprise Industries, comprising primary, secondary, tertiary industries, and scope of operations, divided into 4 sub-categories. (7) Industrial Park Industries, covering planned industries, leading primary, secondary, and tertiary industries, and scope of operations, divided into 5 sub-categories. These are established based on frequency and significance of their occurrence within enterprises in parks. For industrial park P, with enterprises set Ep, and industry categories C1,P, C2,P, C3,p corresponding to primary, secondary, and tertiary sectors, the leading industry and scope of operation are identified as:"}, {"title": "Relation Extraction.", "content": "We extracted spatial and semantic relationships. Spatial relationships include geographical containment and adjacency; semantic relationships cover similarity, industry correlations between industrial parks, and possession.\nGeographical Containment: This explains how one entity is located within another entity, categorized into three types: (1) POI/Enterprise Located in Grid, (2) POI/Enterprise Located in Industrial Park, and (3) Grid Located in Industrial Park.\nGeographical Adjacency: This refers to spatial proximity between entities, detailed in two types: (1) Grid Adjacent to Grid, indicating adjacency between grids; (2) Industrial Park Adjacent to Industrial Park, specifying proximity between parks.\nSimilarity: Indicates the resemblance between industrial parks, expressed as Industrial Park Similar to Industrial Park. We compute the embeddings for each industrial park's unique features and assess park similarities based on cosine distance.\nIndustry Correlation: Denotes the connection between industrial parks based on industry characteristics, expressed as Industrial Park Related to Industrial Park. We derive embeddings for each park's industry-related aspects, such as planned industries and leading industries. An industry correlation link is forged between two parks if their industry similarity surpasses a threshold of 0.9.\nPossession: Connects entities with what they possess. For example, Industrial Park Has Planned Industries, Grid Has Leading Primary Industries, and Enterprise Has Scope of Operations."}, {"title": "3.2.3 Attributional Triples Extraction.", "content": "To address the challenge of managing diverse entity attributes in a graph database, we use attributional edges for efficient navigation and analysis. Establishing a comprehensive evaluation system is crucial for the robust development of industrial parks, involving an in-depth exploration of urban vitality and industrial park evaluation frameworks [41]. By analyzing regions like Silicon Valley based on People, Economy, Society, Place, and Governance, detailed data reveals the importance of a quantifiable indicator system covering Industrial Development, Urban Life, and Innovation and Entrepreneurship.\nSpecifically, (1) Industrial Development: Includes number of enterprises, large-scale enterprises, average registered capital, state-owned enterprises, listed companies, and industrial agglomeration, match degree of planned industries, working population, GDP, office building area and its proportion, etc. (2) Urban Life: Includes accessibility to residential functions, public services, transportation stations, function diversity, density of public service functions, function richness, function compatibility, average housing price, work-life balance index, etc. (3) Innovation and Entrepreneurship: Includes number of newly registered enterprises, technology-based SMEs, high-tech enterprises, overseas (cooperative) companies, patents and copyrights, and industrial diversity, accessibility to innovation support functions, population with higher education, density of financial services and research functions, etc.\nWithin this framework, the industrial park encompasses 74 specific sub-indicators, while the grid is detailed through 48 sub-indicators. A correlative computational strategy allows us to integrate the attributes of smaller spatial units like grids into the analysis of larger entities such as industrial parks."}, {"title": "3.2.4 IndustryScopeKG Management.", "content": "Following the outlined process, we have constructed a knowledge graph that contains 2,232,037 entities and 51,684,939 triples (for statistical details, see Table 2, 3). To manage this expansive scale effectively, we employ the Neo4j graph database for storage, querying, and updates. A key advantage of Neo4j is its spatial capabilities, which greatly enhance our ability to perform spatial computations."}, {"title": "4 IndustryScopeGPT", "content": "Problem Formulation. When addressing user queries, we developed an LLM-driven agent that is capable of generating responses and interacting with external tools that facilitate interaction with graph database. Following action-reflection style work [39], we define the agent's action state at each step t as at \u2208 A, which is a combination of the text generation \u00c2t and the tool action \u0100t \u2208 T. Such a state pair is represented as at = (\u00c2t, \u0100t), where thought \u00c2t is intended to encapsulate an understanding of key information and guide the subsequent action \u0100t. This action is determined by the policy \u03c0(\u0100t | Q, a1, 01, . . ., at \u22121, Ot\u22121, \u00c2t). The initial input Q includes the user's query, task description, schema, tool instructions, and some few-shot examples. To balance exploration and exploitation in finding the best trajectory, we used Monte Carlo Tree Search (MCTS) [4]. This approach views the large planning space of IPPO-related decision-making tasks as a tree search process. This approach is necessary due to the agent's uncertainty, the improper use of tools or their execution failures, and the potential for better evaluation dimensions or solutions. In this process, each node state is S = [Q, a\u2081, . . ., at, 01, . . ., 0t]. The final answer is derived from the output of the last leaf node on the best trajectory. Each iteration of MCTS consists of four steps. Figure 4 provides a typical example of IndustryScopeGPT resolving IPPO processes."}, {"title": "4.1 Monte Carlo Tree Search Planner", "content": "Selection: The process initiates at the root node (initial state), employing an enhanced UCT (Upper Confidence bounds applied to Trees) [9] algorithm to guide the search towards promising areas for expansion. This approach dynamically balances exploration and exploitation based on aggregated rewards. The core of this refinement is the updated UCT formula:\n\nWhere represents the average reward of node s, calculated as the total value V(s) divided by the number of visits N(s). \u03c9 represents initial exploration weight, d is the decay factor that reduces exploration with each visit, encouraging more exploitation as the node becomes more familiar. N(p) denotes total visits to the parent node. The search progresses by selecting actions that resolve query or require further exploration until a termination condition is met. It ends when a solution is found, the maximum depth is reached, or if a tool is used more than four times in a row, preventing excessive and irrelevant searches and ensuring meaningful progress towards a solution.\nExpansion: During expansion, the search widens by generating new child nodes from feedback on executed actions, all recorded in a long-term memory. Each node undergoes a scalar evaluation to aid future node selection, focusing on simulations that highlight the most promising paths. This phase enables the parallel execution of the best k potential actions, thereby expanding the exploration domain and enhancing the decision tree's coverage.\nReflection: Post-action execution, outcomes are assessed, incorporating LLM based self-reflection and external feedback to score decisions. To avoid potential misinterpretations due to a lack of context-limited visibility to previous node information-the reflection process also leverages the trajectory's memory. This includes a history of executed actions and generated outcomes.\nBack-propagation: Node values along explored paths are updated based on simulations, integrating insights into decision-making to ensure gradual progress towards optimal solutions. This phase employs a recursive update mechanism,\n\nwhere V(s) and V' (s) represent the node s's value before and after the update, R is the reward from simulation, incrementally enhancing tree's accuracy and strategic depth each iteration."}, {"title": "4.2 Decision Support Tools", "content": "In crafting a multifaceted decision support system for IPPO, we've developed a suite of nuanced sub-task tools, as depicted in Figure 5. These tools interact with a Neo4j graph database to facilitate sophisticated queries, analyses, and recommendations, directly addressing the complex needs of urban planners, investors, and businesses.\nCypher Searcher: Tailored to generate and execute Cypher queries based on user inquiries, it sifts through graph database to provide detailed insights on industrial park attributes, facilities, and demographics, streamlining the data retrieval process.\nSimilarity Searcher: Based on semantic similarity, this tool searches and recommends parks with high similarity to the user's input, e.g., type of business. By analyzing the match between park features and user's specified business or operational criteria.\nGeo-encoder: It is designed to convert textual addresses into precise geographic locations, specifically identifying relevant grid IDs in graph database. This conversion allows for a seamless mapping of user-provided locations to the spatial framework of database.\nGeo-decoder: Conversely, the tool translates geographic grid IDs, obtained from spatial queries or system recommendations, back into human-readable textual addresses.\nRank Master: This tool integrates a non-parametric Borda Count rank aggregation method with LLM to rank parks or grids based on selected metrics like accessibility, POI density, and demographics. Formally, for potential sites C = $1, $2, ..., Sm and evaluation criteria V = 01, 02, ..., vn, each site si is assigned a Borda Count B(si) = \u03a3=1(m \u2013 rij), where rij is si's rank for criterion vj.\nFunction Planner: An assistant designed to propose functional planning suggestions for specified areas. Given a grid, it not only retrieves information for the designated and adjacent grids but also synthesizes these insights to offer strategic planning advice."}, {"title": "5 Experiment", "content": "To validate effectiveness of IndustryScopeKG and IndustryScopeGPT framework, we aim to address the following research questions:\nRQ1: Can the graph data provided by IndustryScopeKG effectively impact the performance of LLMs on IPPO?\nRQ2: How does IndustryScopeGPT perform on tasks based on IndustryScopeKG compared to existing LLM prompting paradigms?\nRQ3: How can IndustryScopeGPT aid park functional planning?\nTo explore these questions, we designed two typical IPPO tasks."}, {"title": "5.1 Multi-spatial Scale Facility Siting Recommendation (RQ1, RQ2)", "content": "To improve facility siting flexibility, we introduce a multi-spatial scale recommendation task that leverages LLM's reasoning abilities to analyze and filter spatial attribute features for optimal facility siting, regardless of scale or facility type.\nDataset. We created 20,000 siting questions across various spatial scales and facility categories, incorporating attribute data from industrial parks and grids in the IndustryScopeKG. LLM identified 5-8 key evaluation attributes for each question, resulting in three sets. Domain experts selected one set through consensus-building, and top areas were determined using an optimal ranking method, forming question-answer pairs. We used 200 question-answer pairs covering diverse spatial scopes and facility types for test.\nBaseline Methods (RQ1). To assess the effectiveness of IndustryScopeKG, we evaluated the performance of GPT-4 in various configurations: alone, with tabular input for structured data processing, integrated with a search engine to enhance data retrieval capabilities, and combined with Cypher for querying graph databases. This approach allowed us to compare the impact of different data integration methods on the model's ability to handle IPPO tasks.\nBaseline Methods (RQ2). For tool invocation, we contrasted IndustryScopeGPT with methods highlighting LLMs' external tool and graph database interaction capabilities. We compared classic prompting with CoT and ReAct methodologies, examining performance across varied siting tasks and spatial scales.\nExperiment Settings. The version of gpt-4-0125-preview was used across the experiments, with Cypher Searcher temperature set to 0 and QA model at 0.7. MCTS was calibrated to expand 2 child nodes at each level, with 5 maximum depth, 50 recursion limit.\nMetrics. We assessed whether the predicted locations matched those in dataset, measuring Accuracy, Precision, Recall and F1 score.\nResults. The evaluation demonstrated that GPT-4, whether operating independently or with tabulated data (where IndustryScopeKG data was structured into tables and embedded into a vector library for retrieval-augmented generation) or search engine, performed poorly in complex site recommendation tasks (RQ1). This highlights the significance of our dataset and graph structure. In contrast, IndustryScopeGPT exhibited superior performance (RQ2), significantly outperforming methods such as those using a Cypher searcher, CoT, and ReAct across most metrics (details in Table 4 - 7). For example, in the conditional park-level site recommendation, IndustryScopeGPT demonstrated its capability to effectively leverage structured industrial data, achieving a precision of 0.659, and F1 score of 0.590 (Table 5). This showcases its superior performance in optimizing decision-making for site recommendation tasks."}, {"title": "5.2 Industrial Park Functional Planning (RQ3)", "content": "This task focuses on the optimization of various grid functions within an industrial park, aiming to fulfill the foundational needs and balanced layout of functionalities. The planning process involves the examination of each grid within a specific industrial park, extracting information from targeted and adjacent grids and integrating these attribute insights to assign a function to each grid.\nBaseline Methods (RQ3). Traditional models such as Light-GBM [8] and GCN [35] were used for comparison to evaluate IndustryScopeGPT's performance in functional planning.\nDataset. For training LightGBM and GCN, datasets were prepared matching the input formats required by these models. All 128,866 grid attributes were used as features. For GCN, grid adjacency relationships were used to define edges, and grid functions pre-calculated in IndustryScopeKG, corresponding to 15 categories, served as labels. The data was split into 7:3 for training and testing.\nMetrics. Given the absence of uniform standards for planning evaluation, we focused on improvements to the existing functional layout. We utilized the Hill numbers formula [5] to quantify functional diversity, which is defined as:\n\nwhere pi represents the proportion of the i-th function type in park, and q determines the emphasis on abundance. Specifically, q = 0 quantifies the Richness, or the total count of distinct functional types; q = 1 corresponds to Shannon Entropy, which accounts for the proportion of each function; q = 2 is tied to Simpson's Index, focusing on the prevalence of dominant functions. These measures are vital for evaluating space utilization and ensuring integration of diverse functions to support industrial activities.\nCase study. We focused on three distinct parks: Zhangjiang Artificial Intelligence Island (Park A), Dachang Urban Industrial Park (Park B), and Xinyefang Global Sci-Tech Innovation District (Park C) (Figure 6). Each park was chosen for its unique characteristics and specific challenges it presents in terms of spatial planning. IndustryScopeGPT was tested against two classic models, as well as the real-world scenarios. The results showed that IndustryScopeGPT significantly outperformed these models in the metrics across the three parks. For example, in Park A, known for its focus on green space, IndustryScopeGPT was able to ensure a better balance between green areas and industrial development. In Park B, which combines residential, sports, and green areas, IndustryScopeGPT demonstrated superior ability to integrate diverse functions into a cohesive plan that supports both living and recreational activities. Similarly, in Park C, IndustryScopeGPT promotied an effective synergy between education and commercial activities (see Table 8)."}, {"title": "6 Conclusion", "content": "This study presents a transformative approach to intelligent planning and operation of industrial parks by integrating LLMs with the large-scale multi-modal, multi-level IndustryScopeKG. The IndustryScopeGPT framework, using advanced retrieval and reasoning strategies like Monte Carlo Tree Search, sets new standards in IPPO tasks, enhancing adaptability and interpretability. Empirical results confirm significant improvements in site recommendation and functional planning. This initiative underscores IndustryScopeKG's crucial role in advancing urban industrial applications and future LLMs integration into urban development strategies.\nLimitations and future work. IndustryScopeKG currently focuses on a single city and plans are in place to expand to more cities. Additionally, the framework's reliance on prompt token consumption and computational resources may present challenges. Tree-structured search may consume significantly more tokens compared to simpler prompting methods. Future improvements will focus on enhancing efficiency and reducing these costs."}]}