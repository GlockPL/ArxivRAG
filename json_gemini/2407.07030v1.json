{"title": "Trajectory Data Mining and Trip Travel Time Prediction on Specific Roads", "authors": ["Muhammad Awais Amin", "Jawad-ur-Rehman Chughtai", "Waqar Ahmad", "Waqas Haider Bangyal", "Irfan ul Haq"], "abstract": "Predicting a trip's travel time is essential for route planning and navigation applications. The majority of research is based on international data that does not apply to Pakistan's road conditions. We designed a complete pipeline for mining trajectories from sensors data. On this data, we employed state-of-the-art approaches, including a shallow artificial neural network, a deep multi-layered perceptron, and a long-short-term memory, to explore the issue of travel time prediction on frequent routes. The experimental results demonstrate an average prediction error ranging from 30 seconds to 1.2 minutes on trips lasting 10 minutes to 60 minutes on six most frequent routes in regions of Islamabad, Pakistan.", "sections": [{"title": "I. INTRODUCTION", "content": "An Intelligent Transport Systems (ITS) refers to the use of smart computing technology, in the transportation to introduce novel services across various areas of transportation. This includes managing modes of transportation and traffic control. ITS aims to enhance user awareness and ensure safer travel experiences. ITS is used in a range of applications, including traffic management tasks, like routing, regulating traffic signals, displaying communication indicators, recognizing license plates, providing intelligent speed measurements, implementing smart surveillance systems, automatically detecting incidents, smart braking systems, identifying vehicles, assisting with parking information and even forecasting weather conditions. These applications can involve real time data and input, from sources to handle complex scenarios. Additionally, with help of historical baseline data, predictive techniques are developed to allow advance modeling and comparison.\nTravel Time Prediction (TTP) is a vital part of Intelligent Transportation Systems (ITS), serving as an essential part of navigation applications and Advanced Traveller Information Systems (ATIS). TTP's significance lies in its capacity to offer precise travel time estimates, facilitating efficient trip planning and enhancing the overall user experience. The accuracy of ATIS, fortified by TTP, extends beyond individual convenience, holding profound implications for the operational efficiency of logistics and transportation companies. Through optimized route planning and resource allocation, a dependable ATIS contributes to streamlined operations, diminished congestion, and heightened sustainability. The incorporation of TTP into ITS underscores its status as a fundamental technology, shaping the future of transportation by fostering informed decision-making and effective resource management in day-to-day operations [1].\nRecently, there has been an increase in the use of data-driven techniques, specifically for predicting Travel Time as a regression problem. These approaches use historical data to directly estimate the Travel Time for whole paths or routes, effectively capturing and modeling the intricacies of traffic patterns. There are primarily two types of data driven approaches; methods based on trajectories and methods based on origin destination. Origin Destination based methodologies exclusively prioritize pickup and drop-off locations, disregarding intermediate paths [2]. In contrast, trajectory-based approaches take into account the complete trajectory information, covering the complexities of the entire travel path. While OD-based methods prove efficient in specific scenarios, they may miss vital details embedded in intermediate trajectories crucial for accurate Travel Time predictions. Conversely, trajectory-based approaches showcase a more comprehensive understanding by incorporating the entire travel path, allowing for a nuanced modeling of traffic complexities. This distinction in approach reflects the ongoing evolution and diversification of data-driven strategies in Travel Time prediction. Trajectory-based models, in particular, offer a comprehensive perspective that considers the subtleties of travel patterns, thereby enhancing prediction accuracy [3].\nIn this study, we trained three methodologies: a shallow artificial neural network, a deep neural network (particularly, a multi-layered perceptron), and a recurrent learning model (referred to as long-short-term memory). The models used"}, {"title": "II. RELATED WORK", "content": "ITS has the history of over 45 years through the develop-ment stages [4]. The most of earlier research on travel time prediction has been carried out using statistical approaches. Subsequently, data driven approaches become the hot cake of this field with plethora of algorithmic specifications. The recent trend emphasis on the empirical computational intelligence approaches, such as Machine Learning, Neural Net-works, Bayesian Networks, Fuzzy logic, Deep Learning, and Evolutionary techniques are considered necessary, particularly due to the demonstrated shortcomings and weaknesses of classical approaches in challenging traffic conditions, intricate road settings, and when working with extensive datasets con-taining both structured and unstructured data.\nThere are number of techniques for predicting trip time that might be divided into two main categories, parametric and non-parametric methodologies, parametric usually assume that relationship with travel time and factors that influence it, examples are linear regression, Kalman filter and ARIMA. In 1997, the Kalman filter was introduced for multivariate data [5]. Chien et al [6] made use of data from roadside terminals and implemented the Kalman Filter model to forecast travel time and Guin et al [7] employed the Box-Jenkins method for applying the ARIMA series of models.\nNon parametric approaches utilise the historical data learn the relationship of travel time and other factors. ANN, SVR and KNN regression models are examples. KNN utilised and evaluated using Wilcoxon signed-rank test [8]. Smith et al [9] implemented regression techniques with k-nearest neighbour model with adjusted and weighted output components.\nRecent advances in programming and application of intel-ligent transport system (ITS) applications contributed, orga-nization, and management of live data on large-scale trans-portation networks. This has opened up opportunities for using non-parametric methods in traffic forecasting. Usually, these models rely on data to make predictions so, the accuracy of their findings relies on the quality level of the available data. The primary goal is to detect clusters of data patterns that closely resemble the current traffic conditions within a specified prediction timeframe. A comparative analysis was undertaken in 1996, examining KNN regression, NN, the historical averaging, and the ARIMA. The findings revealed that K nearest neighbour regression outperformed the other models in terms of its capacity to transfer-ability and its robustness when applied to different data sets. [10].\nAdditionally, Amirian et al [11] used probe vehicles and Geographic Information System (GIS) technologies to calcu-late travel duration. Hidden Markov Models and other classical machine learning techniques have been presented to forecast the temporal progression of traffic conditions. [12]. Gradient Boosting, Random Forest, Linear Regression were implied in different research [13]-[17].\nArtificial neural networks (ANNs) are mathematical models driven by data and inspired by artificial intelligence. They possess remarkable abilities in classifying and recognising patterns. [18]. Artificial neural networks (ANNs) showed significant efficacy, in a variety of transportation applications., such as analysing driver behaviour, developing autonomous vehicles, estimating parameters, maintaining road surfaces, de-tecting and classifying vehicles, optimising freight operations, predicting traffic patterns, formulating transportation strategies and economic models, managing air and water transportation, operating submersible vehicles, overseeing metro services and controlling traffic. Because of their overall performance and durability, neural networks are capable of providing accurate predictions for traffic datasets. They can generate multi-step forecasts with less effort, are suitable for spatial and temporal datasets, and are capable of handling nonlinear relationships in multivariate contexts [19].\nThe WDR model is an amalgamation of the Wide and Deep models with recurrent models, the LSTM model is employed to collect the contextual information of the route, as described in the study by Wang et al. (2014) [20]. While recurrent structures provide the ability to learn the relationships be-tween different parts of a route, they have prohibitively high computation costs for enormous navigation solutions. Using a mix of GRUs and graph convolutional networks (GCNs), the temporal graph convolutional network (T-GCN) was proposed as a solution to address the issue of temporal and spatial interdependence in travel time prediction [21].\nPerforming travel time prediction on the whole categorised into two categories:\nOrigin-Destination based method: The travel time infor-mation for all OD pairs is required to support the routing decisions. OD-based methods are simpler and more computa-tionally efficient, making them suitable for real-time applica-tions. Young et al [22] tried to explain the reliability of this method. Scientists used this method to predict travel time on highways [23]. Lie et al [24] used open data to and chu et al [25] utilised this technique to make real time travel time prediction and demand of vehicle."}, {"title": "III. DATA MINING AND PREPARATION", "content": "We have an indigenous dataset of Islamabad City from April to October 2019 that contains hundreds of million entries. Each record contains the vehicle's id, timestamp, latitude, longitude, speed, and altitude, as well as the reason for the GPS timestamp recording. Chughtai et al. and Haq et al. utilised a different subset of the same dataset [1], [28], [29].\nA. Trajectory Mining\nWe have a raw data from GPS trackers. For mining trajec-tories, we converted all records into trips based on the reason \"Ignition On\" and \"Ignition Off\u201d including all GPS points. We have obtained around 0.85 million trips within the specified months.\nB. Data Reprocessing and Map Matching\nAccording to researches, GPS senors is not always accurate [30], Usually GPS have two kind of errors [31]: first mea-surement errors [32] and second is sampling error. Upon vi-sualizing trajectories on map we also have difference between exact location and GPS points visualised. To address issues (as shown in Figure 1), we have employed map-matching techniques.\nWe have employed an open street map (OSM) for map matching, usually used by most navigation services and map-ping service providers. We have added road features like bearing angle and nearest nodes based on GPS points. After setting up road features with GPS points, we utilized the state-of-the-art technique of the Open Street Routing Machine (OSRM) [33] server to find the nearest nodes against every GPS point using a bearing angle. After assigning the nodes, to visualize the trajectories on the map, we converted the nodes into GPS points again using OSRM. So, our GPS points are a more accurate and correct representation of trajectories after map-matching.\nThe final dataset we have compiled consists of all trip-related necessary information. This information includes ve-hicle identification (id of vehicle), details about the trip itself such as the distance traveled and the average speed, and geo-graphical coordinates for both the starting and ending nodes of the trip. Additionally, there is a representation of the route in form of poly-line, measurements regarding the duration of the trip, and temporal information such as the week's day number, month's day number, and month of the year. Than filtered out trajectories of busiest routes of Islamabad from dataset based on number of trips on every road and verified as well with local published articles by [34]-[36].\nWe applied Romar Douglas Peucker algorithm [37], [38] for simplifying trajectories to reduce amount of computation when we have more points they takes more time to assigning nodes, converting back into gps points and also for experimental processing. In our dataset, GPS points recorded based on the action, like turn, brakes, increase or decrease in speed or any action performed by driver. So there were lot of points even for short trips so we need simplified trajectories to utilise economical computations for better results with saving time. Example of trajectory before and after simplification is shown in Figure 2.\nC. Data Visualisation\nFinally, from 0.85 million trajectories, we shortlisted 258590 most frequent roads trips within the specified months, including 55215, 47810, 44043, 40199, 36943, and 34380 trips on the Islamabad Expressway, Srinagar Highway, Khayaban-e-Iqbal Road, Jinnah Avenue Road, Faisal Avenue Road, and Agha Shahi Road, respectively.\nWe used data exclusively between 6 a.m. and 11 p.m. to avoid abnormal excursions as highlighted in [29]. In addition to that, we excluded trips lasting more than 60 minutes on individual roads. Figure 4 provides some insights of data which we used in this study. Figure 4(a), 4(b), 4(c) and 4(d) illustrate the number of trips, distance of trips, duration of trips and average speed of trips respectively within the specified time frame on various weekdays."}, {"title": "IV. METHODOLOGIES", "content": "A. Artificial Neural Networks\nAn ANN design to represent the neurons of human brain similarly like human ANN also have input, nodes, weights and output. It also called shallow neural networks with one layer. ANNs alternatively referred to as neural networks. [39], [40].\n$$Output = f (k+\\sum_{i=1}^zt_iu_i)$$\nWhere:\nOutput: Output of the neuron\n$f()$: Activation function\nk: Bias term\n$t_i$: Input\n$u_i$: Weight associated with the input\nz: Number of inputs\nEquation 1 represents the output of a neuron in an Artificial Neural Network (ANN) by applying the activation function f to the weighted sum of inputs ($x_i$ weighted by $w_i$ and summed up with the bias term b). We constructed an ANN with a layer of 256 neurons and fed it 12 features as input. The model was trained for 200 epochs using a batch size of 128 as shown in Figure 5.\nB. Multi-layer Perceptron\nA MLP is advanced version of ANN with two or more layers. It belongs to the category of neural networks with a mapping between the inputs and outputs. A multi-layer perceptron is made up of an input layer, an output layer, and few hidden layers composed of several stacked neurons. [41]- [43]. In contrast to Perceptron neurons, which are restricted to using activation functions that enforce a threshold, such as ReLU or sigmoid, neurons in a Multi-layer Perceptron have the flexibility to employ any activation function.\nEquation of a two-layer Multilayer Perceptron (MLP):\n$$Output = f (U^{(3)} . f (U^{(2)} . f (U^{(1)} . x + k^{(1)}) + k^{(2)}) + k^{(3)})$$\nWhere:\nOutput: Final output of the MLP\n$f()$: Activation function\nx: Input vector\n$U^{(1)}$, $U^{(2)}$, $U^{(3)}$: Weight matrices\n$k^{(1)}$, $k^{(2)}$, $k^{(3)}$: Bias vectors\nEquation 2 represents the equation of a two-layer Multilayer Perceptron (MLP), which contains 64 and 32 neurons in layers, with relu serving as the activation function. The model was trained for 200 epochs using a batch size of 128 as shown in figure 6.\nC. Long short-term memory (LSTM)\nLSTM is a distinct type of RNN that incorporates the output from the previous stage into the current step. It addresses the issue of long-term dependencies of information stored in the long-term memory while also providing more pre-cise predictions based on prior knowledge. LSTMs designed specifically to handle sequential data as time series, speach and text. The ability to acquire and retain knowledge about complex relationships over extended periods of time in sequential data which make well suited for above mentioned tasks. (Figure 7)\nThe equations for gates in a recurrent neural network (RNN) are given by:\nInput Gate:\n$$i_t = \\sigma(x_tU_i + h_{t-1}W_i)$$\nForget Gate:\n$$f_t = \\sigma(x_tU_f + h_{t-1}W_f)$$\nOutput Gate:\n$$o_t = \\sigma(x_tU_o + h_{t-1}W_o)$$\nMemory Cell Candidate:\n$$\\check{C}_t = tanh(x_tU_c + h_{t-1}W_c)$$\nMemory Cell:\n$$C_t = \\sigma(f_t * C_{t-1} + i_t * \\check{C}_t)$$\nState Update:\n$$h_t = tanh(C_t) * o_t$$\nWhere:\n$i_t$, $f_t$, $o_t$: Input, Forget, Output Gates.\n$\\check{C}_t$: Memory Cell Candidate\n$C_t$: Memory Cell\n$h_t$: State\n$\\sigma(\\cdot)$: Activation function\n$tanh()$: Tanh activation function\nThe Forget gate, Candidate gate, Input gate, and Output gate are neural networks with a single layer and utilise the Sigmoid activation function. Nevertheless, the Candidate gate employs the Tanh activation function. The gates initially receive the input vector $x_t U$ and the prior hidden state $h_{t-1} W$, combine them, and subsequently employ the ac-tivation function [44]\nWe utilized two LSTM layers, each consisting of 64 neu-rons, and employed the ReLU activation function as shown in Figure 8."}, {"title": "V. RESULTS & DISCUSSION", "content": "We collected road data based on trip availability and separated it into subsets of roads. After performing certain fundamental operations of EDA on each dataset's subset, after ensuring the data's smoothness, we partitioned it into a training set and a validation set. For our experiments, we used five months of data: April, May, June, July, and August for model training, then September and October for testing/validation. After cleaning and ensuring smoothness, we moved towards experiments. We used 12 features in this study which are Vehicle ID, Trip Distance, Trip Avg Speed(km/hr), Start Lat, Start Lon, End Lat, End Lon, Minutes, Seconds, Day of week, Day of month, and Month of year We have employed the chosen models after assessing the characteristics of the data and conducting conclusive experiments on the selected features.\nDetermining these hyperparameters table I includes rounds of experimentation, where various combinations are tested and their performance is evaluated using validation sets. The objective is to find the setups that produce precise predictions without overfitting the training data. The choice of ReLU as the activation function and batch is intended to exploit benefits, including computing efficiency, minimization of vanishing gra-dients, and introduction of non-linearity, in order to improve training and performance, with the ultimate goal of achieving accurate traffic time prediction. The root mean square error was between 1.5 and 3 minutes on each road, and 109 seconds on all roads. The graph of actual vs predicted values obtained with ANN on most frequent roads is shown in Figure 9.\nIn addition to ANN, we employed MLP to forecast on the validation dataset after training. Each road had a root mean square error of half a minute (approximate), and all roads dataset had a root mean square error of 39 seconds. The graph of actual vs predicted values obtained with MLP on most frequent roads is shown in Figure 10.\nSimilarly, We trained an LSTM model on the same pre-processed data. Each road had a root mean square error of nearly 25 seconds, while the dataset for all roads had a root mean square error of 16.99 seconds. The graph of actual vs predicted values obtained using LSTM on most frequent roads is shown in Figure 11.\nThe three cutting-edge [45], [46] methods were evaluated based on their performance in terms of RMSE and MAE on the six most often used routes are shown in Table II. Observing the results, it's evident that the LSTM model regularly surpasses both ANN and MLP across all road segments in terms of both RMSE and MAE. LSTMs are highly effective in tasks that involve sequential data and long-term dependencies, making them especially suitable for predicting trip time. This is because they are able to understand the temporal dynamics and changing patterns in traffic data, which is essential in this context.\nDue to their capacity to effectively store and update data over time intervals, they surpass shallower networks such as ANNs and MLPs in recognising the complexity of traffic patterns and generating more precise forecasts for potentially offering valuable insights for transportation planning and man-agement."}, {"title": "CONCLUSION", "content": "Trip Time Prediction (TTP) is a crucial element of an Intelligent Transportation System. Accurately predicting TTP results in substantial enhancements in overall transportation-related matters. In this study, We used Islamabad, Pakistan, GPS data obtained from sensors. We performed extensive com-putations to refine the dataset and experimented with numerous tools for Map Matching and trajectory simplification. Finally, after weeks of data enrichment using OSM and OSRM APIS on local servers, we obtained map-matched trajectories. We identified six most frequent routes for this study. On those selected routes, we trained three state-of-the-art approaches namely, a shallow ANN, a deep MLP and an LSTM for TTP. We obtained significantly improved performance with LSTM as compared to ANN and MLP for trip time predictions due to the fact that LSTM is a specialized time-series model in contrast to ANN and MLP.\nIn the future, we will utilize our models to develop an application for Islamabad residents, as navigation companies have expressed interest in such solutions. Moreover, we also plan to extend this work by adding other exogenous features with traffic data."}]}