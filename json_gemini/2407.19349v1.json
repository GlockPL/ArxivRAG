{"title": "Predicting T-Cell Receptor Specificity", "authors": ["Tengyao Tu", "Kun Zhao", "Wei Zeng", "Zhenyu Zhang"], "abstract": "Researching the specificity of TCR contributes to the development of immunotherapy and provides new opportunities and strategies for personalized cancer immunotherapy. Therefore, we established a TCR generative specificity detection framework consisting of an antigen selector and a TCR classifier based on the Random Forest algorithm, aiming to efficiently screen out TCRs and target antigens and achieve TCR specificity prediction. Furthermore, we used the k-fold validation method to compare the performance of our model with ordinary deep learning methods. The result proves that adding a classifier to the model based on the random forest algorithm is very effective, and our model generally outperforms ordinary deep learning methods. Moreover, we put forward feasible optimization suggestions for the shortcomings and challenges of our model found during model implementation.", "sections": [{"title": "I. INTRODUCTION", "content": "Cancer is the leading cause of death worldwide. In 2022, there were an estimated 20 million new cancer cases and 9.7 million deaths [1]. Although traditional methods such as surgery and chemotherapy are effective in treating cancer to a certain extent, they are often not effective in preventing the metastatic spread of the disease through disseminated tumor cells [2]. With the deepening research on the immune system, immunotherapy that can harness the immune system to fight cancer has firmly established itself as a novel pillar of cancer care [3].\n\nThe specificity of T cell receptor (TCR) plays a crucial role in immunotherapy. As an essential class of lymphocytes in the immune system, T cells can recognize and bind to antigen peptides from the major histocompatibility complex (MHC) through the TCR on the surface to trigger an immune response to recognize and attack pathogens and abnormal cells. Researching the specificity of TCR contributes to the development of immunotherapy. Still, the various experimental methods used to identify the interactions between TCRs and peptides presented by MHC molecules (pMHCs) have limitations, such as being time-consuming, costly, or technically demanding [4]. Therefore, algorithms that can accurately identify and predict TCR specificity need to be developed.\n\nWe established a TCR generative specificity detection framework consisting of an antigen selector and a TCR classifier based on the Random Forest algorithm, which can efficiently predict TCR specificity."}, {"title": "II. LITERATURE REVIEW", "content": "We researched various computational models developed for TCR specificity prediction; then, these models were divided into three categories according to the working principle.\n\nThe first class of models predicts the specificity of TCR based on three-dimensional structural information of TCR and pMHC. These models perform well when there is a need for detailed knowledge and high-resolution prediction of binding patterns and specificity. However, the structural basis of TCR activation is poorly understood [5], which reduces the accuracy and feasibility of the model.\n\nThe second class of models is based on the sequence information of the TCR and pMHC. Developing high-throughput sequencing methods and single-cell RNA sequencing technologies has enabled efficient and rapid derivation of large numbers of TCR sequences from donor samples, which are collated into rich datasets [6]. It promotes the application of deep learning methods in the modeling of TCR-pMHC interactions. However, these models only utilize the sequence information of the TCR and ignore structural details. Therefore, the accuracy of this model class may not be ideal if structural features need to be considered in the prediction.\n\nThe third class of models combines the characteristics of the first two models, which can make full use of structure and sequence information to improve accuracy and reliability. In other words, it also has higher requirements for the variety and quantity of data. Therefore, these models may cause high computational costs and training difficulties if computing resources and training data are limited."}, {"title": "III. METHODOLOGY", "content": "The framework of our model is depicted in Figure 1. The model includes two key components: (1) antigen selector. It is used to calculate and edit the distance matrix of TRBS between the target TCR and other TCRs in the training database. Then, the antigen of the closest training data is selected as the target antigen. (2) TCR classifier based on the Random Forest algorithm. First, the chosen target antigen and CDR3 are encoded by N-gram. Then, the encoded CDR3\nEdit distance: Vujovic M [7] used the distance matrix of TCR for clustering in their paper. Inspired by this, the first part of our model framework also selects candidate antigens through the distance matrix of TCR.\n\nWhen calculating the distance between sequences, we consider the edit distance, the minimum number of times a sequence can transfer into another sequence by adding, deleting, and modifying characters. For each change in the sequence, three cases are considered. Through calculation, we can get the formula for editing distance as follows:\n\n$D[i, j] = D[i-1,j] + 1$ if the next step is deleting\n\n$D[i, j] = D[i, j-1] + 1$ if the next step is adding\n\n$D[i,j] = D[i-1,j-1]$ if next step is modifying and $S_{1}[i] == S_{2}[J]$\n\n$D[i, j] = D[i - 1.j-1] + 1$ if next step is modifying and $S_{1}[i]! = S_{2}[j]$\n\nFormula (1),(2),(3),(4), $S_{1}$ and $S_{2}$ represent the two sequences compared, respectively, and D[i,j] represents the distance from the first character to the 'i' in $S_{1}$ and the distance from the first character to the j in $S_{2}$.\n\nSince the distance from any string to the empty string is the length of the string itself, We have the following formula for initializing D:\n\nD[i, 0] = i and D[0, j] = j\n\nFrom (1), (2), (3), (4), (5) we can get the edit distance of the two sequences.\n\nRandom Forest: We will use the CDR3 and antigen sequence encoded by N-gram as feature inputs and labels as model outputs to construct a random forest model(RF).\nFold validation: Regarding model evaluation and comparison, we adopted k-fold validation rather than only through the model's performance in the test set. We divide the data into k subsets, one of which is the validation set, and the other K-1 subset is the training set. The training set is used to train the model, the validation set is used to calculate the performance, and the average performance of the k validation results is calculated. This approach reduces the risk of chance and leads to a more reliable assessment."}, {"title": "IV. DATA DESCRIPTION AND PREPARATION", "content": "Data Description\nVDJdb is a comprehensive antigen-specific TCR sequence database containing manually curated results of published T cell specificity assays[6]. This dataset is widely used in immunomics research, providing researchers with rich information for exploring and analyzing the interaction between immune receptors and antigens and contributing to the development of immunomics.\n\nBased on the detailed explanation of VDJDB[8], we have summarized the meanings of each attribute. Due to the detailed descriptions in the VDJDB documentation, the article will not repeat the meanings of each attribute. For the task of TCR specificity testing, the following 12 attributes are considered valuable: complex.id, cdr3, gene, v.segm, j.segm, antigen.Epitope, antigen.gene, species, vdjdb.Score, mhc. a, mhc. b, mhc.class.\n\nData preparation\nDataset preprocessing: We first need to detect missing values in the database,\nBased on the above analysis, our preprocessing steps are as follows:\n\nStep 1: retain only the complex.id, cdr3, gene, antigen.epitope, species, vdjdb.score, and mhc.class attributes.\n\nStep 2: Filter out data with mhc.class as MH\u0421\u0406.\n\nStep 3: Filter out paired data with complex.id not 0.\n\nStep 4: Filter out the data with species such as HomoSapien.\n\nStep 5: Filter out data with vdjdb.score not being 0.\n\nStep 6: Rearrange the paired datapoint and merge them into the same datapoint(cdr3 with TRA and cdr3 with TRB).\n\nTCR visualization based on PCA and t-SNE: After calculating TRA, TRB, and TRA-TRB separately, we obtained three different distance matrices D1, D2, and D3, based on edit distance. To speed up the subsequent nonlinear dimensionality reduction, we first use linear dimensionality reduction to reduce the size of the distance matrix. Then, we first use PCA to reduce the distance matrix to 50 dimensions and explain the variance"}, {"title": "V. RESULTS AND DISCUSSIONS", "content": "Result\nBased on our test set, we compared the results of our generative model with the proper antigen of TCR. The\nFrom the above model results, adding a classifier for discrimination is quite effective compared to antigen prediction using a distance matrix.\n\nThe disadvantage of classifiers is that we need to obtain both the antigen sequence and the TCR cdr3 sequence to make predictions, and the application scenarios are relatively small. Our model can better adapt to more application scenarios.\n\nDiscussion\nNext, we will discuss other methods to compare the performance of different models. We calculated the accuracy of other classifier models and encoding methods through k-fold validation (k=5)\nFrom the graph, we can see that N-gram+RF is the best-performing classifier.\n\nAt the same time, we also constructed two deep learning models, LSTM and CNN, for training. The accuracy of the test set is shown in Figure 13:"}, {"title": "VI. FURTHER WORK AND IMPROVEMENT", "content": "Enhancement of Datasets: For the task of TCR specificity detection, there are too few high-quality paired data with high reliability in the database (only a few hundred high-quality paired data with score=3). So, we need to enhance our dataset. Based on DeepImmuno-GAN [12], we can also improve the dataset through machine learning methods (GAN) or data from multiple databases. After enhancing the dataset, deep learning models may perform surprisingly.\n\nImprovement of antigen generation algorithm: Even though our algorithm for generating antigens based on edit distance has acceptable performance, for some TCRs, the algorithm efficiency is low due to excessive search times. We can use lower time complexity and more reliable distance algorithms or other generation algorithms to form the first part of the model."}, {"title": "VII. CONCLUSION", "content": "TCR specificity prediction technology has broad prospects in many fields, such as cancer immunotherapy and autoimmune disease treatment. Compared with experimental methods, the computational methods that use algorithms to achieve TCR-specific prediction have advantages like high efficiency, economy, and repeatability. Inspired by previous work, we established a TCR generative specificity detection framework to efficiently screen out TCRs and corresponding antigens through antigen selector and TCR classifier based on random forest. A series of comparisons and analyses indicate that our model outperforms ordinary algorithms.\n\nHowever, our model still needs to be improved and faces some challenges. First, scarcity and quality of data and high redundancy of the available data still exist (Montemurro et al., 2022b). On the one hand, relevant data collection work is required to obtain richer and higher-quality available data. On the other hand, it is feasible to enhance the dataset using machine learning methods (GAN) or data from multiple databases. Furthermore, the search time may be too long for some TCRs. If we have more time, we will optimize our model's algorithm for selecting target antigens."}]}