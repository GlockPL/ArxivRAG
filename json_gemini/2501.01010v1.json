{"title": "CryptoMamba: Leveraging State Space Models for Accurate Bitcoin Price Prediction", "authors": ["Mohammad Shahab Sepehri", "Asal Mehradfar", "Mahdi Soltanolkotabi", "Salman Avestimehr"], "abstract": "Predicting Bitcoin price remains a challenging problem due to the high volatility and complex non-linear dynamics of cryptocurrency markets. Traditional time-series models, such as ARIMA and GARCH, and recurrent neural networks, like LSTMs, have been widely applied to this task but struggle to capture the regime shifts and long-range dependencies inherent in the data. In this work, we propose CryptoMamba, a novel Mamba-based State Space Model (SSM) architecture designed to effectively capture long-range dependencies in financial time-series data. Our experiments show that CryptoMamba not only provides more accurate predictions but also offers enhanced generalizability across different market conditions, surpassing the limitations of previous models. Coupled with trading algorithms for real-world scenarios, CryptoMamba demonstrates its practical utility by translating accurate forecasts into financial outcomes. Our findings signal a huge advantage for SSMs in stock and cryptocurrency price forecasting tasks. The codebase is available in the following link: https://github.com/MShahabSepehri/CryptoMamba.", "sections": [{"title": "I. INTRODUCTION", "content": "Predicting Bitcoin [1] prices is a critical problem due to the high volatility and unpredictability of the cryptocurrency market [2]. With the growing influence of cryptocurrencies, the demand for reliable prediction models continues to rise, especially for those seeking to capitalize on market opportunities or safeguard against losses. A successful solution to this problem would benefit traders, institutions, and regulators by offering deeper insights into market behavior, enhancing decision-making, and improving the overall stability of cryptocurrency markets.\nThe main challenge in Bitcoin price prediction lies in capturing the complexity, nonlinearity, and long-range dependencies within the data. Bitcoin's price movements are driven by a wide range of factors, including market sentiment [3], regulatory developments [4], and macroeconomic trends [5]. These factors interact in unpredictable ways, introducing non-stationarity into the data, making accurate forecasting particularly difficult.\nAddressing these challenges requires models capable of effectively modeling temporal dependencies and adapting to dynamic market conditions. However, traditional statistical methods, such as ARIMA [6] and GARCH models [7], often fall short in handling complex non-linearities and sudden regime changes. In contrast, deep learning models like LSTMs (Long Short-Term Memory) [8] and Transformers [9] have shown promise in learning complex nonlinear patterns but remain limited in scalability and generalizability.\nState Space Models (SSMs) [10] offer a promising alternative by modeling time series data as a combination of latent states and observed variables. These models are particularly well-suited for handling the temporal and stochastic characteristics of financial data. Recently, advances in SSMs, such as [11], have demonstrated their capability to capture long-range dependencies in sequences more effectively than traditional recurrent models. Despite their success in natural language processing [12], [13] and computer vision [14], the application of SSMs to financial time series, particularly in cryptocurrency markets, remains unexplored.\nIn this work, we introduce CryptoMamba, which, to the best of our knowledge, is the first framework to leverage State Space Models (SSMs) to tackle the challenges of Bitcoin price prediction and among the first to apply Mamba-based models for time-series forecasting. Specifically, we:\n\u2022 Propose CryptoMamba, a robust novel Mamba-based SSM architecture for capturing long-range dependencies in financial time-series data.\n\u2022 Investigate the effects of volume as an input on the accuracy of the prediction.\n\u2022 Define and evaluate two trading algorithms, Vanilla and Smart, to assess the real-world application of predictions.\n\u2022 Compare CryptoMamba against multiple baselines, demonstrating its superior performance in forecasting accuracy, financial returns, and computational efficiency.\nOur work bridges the gap between advancements in SSMs and their practical applications in financial prediction, paving the way for future research in adaptive and robust market forecasting techniques."}, {"title": "II. RELATED WORK", "content": "Early attempts at Bitcoin price forecasting predominantly employed classical time series models such as ARIMA (AutoRegressive Integrated Moving Average) and GARCH (Generalized Autoregressive Conditional Heteroskedasticity), which have been widely used for financial time series prediction due to their ability to model linear relationships and volatility clustering, respectively. While ARIMA models, introduced by [6], are commonly used in financial forecasting [15]\u2013[17], they assume constant variance for the data, limiting their ability to model time-varying volatility. To address this limitation, GARCH models [7] have been employed, as they excel at capturing volatility clustering, a key feature in financial markets. For instance, [18], [19] applied GARCH to model Bitcoin's volatility, demonstrating its effectiveness for short-term forecasting. However, both ARIMA and GARCH struggle with the non-linearities and sudden regime changes that are typical of cryptocurrency markets.\nTo address these limitations, more recent studies have turned to machine learning techniques [20], [21] for time-series prediction tasks. Among these, LSTM (Long Short-Term Memory) networks and GRU (Gated Recurrent Units) have gained prominence due to their ability to model sequential dependencies. [22] uses LSTMs to forecast cryptocurrency prices and shows that deep learning models can outperform traditional methods in capturing complex temporal dependencies. [23] compares the effectiveness of three deep learning models, LSTM, GRU, and Bi-Directional LSTM (Bi-LSTM), for predicting cryptocurrency prices. Focusing on Bitcoin, Ethereum, and Litecoin, the study finds that Bi-LSTM provides the most accurate predictions, outperforming the other models. Nonetheless, these models are often prone to overfitting and require large amounts of data to generalize well, limiting their applicability in highly volatile markets with limited data, such as Bitcoin.\nAdditionally, [24] applies various machine learning algorithms, including Support Vector Machines (SVM), Artificial Neural Networks (ANN), Na\u00efve Bayes (NB), and Random Forest (RF), to the Bitcoin price prediction task. This study underscores the effectiveness of machine learning techniques in forecasting cryptocurrency prices and highlights the potential for improving prediction accuracy through modern modeling approaches. Similarly, [25] utilizes machine learning classification models to predict whether Bitcoin prices will increase or decrease, providing insights into their application for real-time trading decisions.\nDespite the advancements in machine learning and time series models, existing approaches often struggle to effectively capture the long-range dependencies and regime shifts that characterize cryptocurrency markets. One promising approach to address the stochastic nature of Bitcoin prices is the use of State Space Models (SSMs) [10], [11]. SSMs offer a robust framework for time series analysis, particularly well-suited for capturing long-range dependencies [11], making them strong candidates for Bitcoin price prediction. Unlike traditional methods such as ARIMA and GARCH, which focus on linear relationships and short-term dependencies [15], [19], SSMs provide greater flexibility in modeling non-linearities and complex temporal interactions. Furthermore, compared to recurrent neural networks (e.g., LSTMs and GRUs), SSMs are computationally efficient, making them better suited for learning dependencies across longer time horizons. These advantages motivate the investigation of SSMs in the context of Bitcoin price forecasting.\nRecently, Mamba [12], a novel variant of SSM, has gained attention for its ability to address the challenges of sequence modeling by introducing a selectivity mechanism that adapts to input data. Building on this foundation, [26] proposed S-Mamba, a model specifically designed for time series forecasting. S-Mamba employs a bidirectional Mamba layer to encode inter-variate correlations and a feed-forward network to extract temporal dependencies. S-Mamba not only outperforms state-of-the-art models in accuracy but also significantly reduces computational overhead, making it particularly effective for high-dimensional time series forecasting tasks. These advancements suggest Mamba-based models as promising candidates for financial applications like Bitcoin price forecasting."}, {"title": "III. BACKGROUND", "content": "State Space Models (SSMs) [10], [11] are a recent class of sequence models with roots in control theory [27]. SSMs combine the advantages of Recurrent Neural Networks (RNNs) and Convolutional Neural Networks (CNNs), making them highly effective for capturing long-range dependencies in time series data. In particular, SSMs process 1-D input sequences, where each element of the array can interact with previously scanned elements through a low-dimensional hidden state. These models are discretizations of continuous-time systems described by:\n\n$\\begin{aligned}\n\\dot{x} &= A x(t) + B u(t) \\\\\ny(t) &= C x(t) + D u(t),\n\\end{aligned}$\n\nwhere u \u2208 R is the input, x \u2208 RN is the hidden state, y \u2208 R is the output, and A\u2208 RN\u00d7N, B\u2208 RN\u00d71, C\u2208 R1\u00d7N, and D\u2208 R are model parameters. In discrete time, these equations become:\n\n$\\begin{aligned}\nx_{k} &= \\bar{A} x_{k-1}+ \\bar{B} u_{k} \\\\\ny_{k} &= C x_{k} + D u_{k},\n\\end{aligned}$\n\nwhere $\\bar{A}$, $\\bar{B}$, and C are derived through discretization methods like zero-order hold for a given time step \u2206, and D is often omitted.\nTraditional SSMs are linear time-invariant (LTI) systems where model dynamics do not depend on the inputs. Mamba [12] added context awareness to SSMs by making B, C, and A input-dependent, creating a time-varying system. Moreover, Mamba leverages a hardware-aware algorithm to maintain computational efficiency, and as a result, its computational cost scales linearly with sequence length (similar to traditional SSMs). Empirical results demonstrate that Mamba achieves state-of-the-art performance in language, audio, and genomic tasks, outperforming both standard SSMs and Transformers. Inspired by Mamba's advancements, our approach is designing a custom Mamba-based architecture tailored for time-series forecasting."}, {"title": "IV. METHODOLOGY", "content": "CryptoMamba leverages Mamba-based SSMs to tackle the challenges of Bitcoin price prediction, offering a robust approach to capturing long-range dependencies in highly volatile financial data. This section provides an overview of the dataset utilized, the components of CryptoMamba, and the metrics employed to evaluate its performance against baseline models.\nA. Dataset\nA critical gap in Bitcoin price prediction literature is the inconsistent datasets, with studies often focusing on either early adoption periods [18] or more recent years with higher trading volumes [23]. These inconsistencies hinder the accurate assessment of the models' generalization capabilities. To address this, we use the most recent publicly available dataset, reflecting current market trends, and evaluate CryptoMamba against baseline models to assess its effectiveness under real-world conditions.\nWe use historical daily Bitcoin price data from Yahoo Finance covering the period from September 17, 2018, to September 17, 2024, for our experiments. The data was partitioned into distinct intervals as shown in Table I. For our experiments, we isolate the test and the validation sets to evaluate model performance on genuinely unseen data, enabling a more robust assessment of the model's generalization capacity.\nB. CryptoMamba Architecture\nCryptoMamba is a Mamba-based architecture specifically designed for financial time-series prediction, leveraging Mamba blocks to handle long-range dependencies in sequential data. The model consists of several stacked computational blocks, referred to as C-Blocks, followed by a final Merge block that generates the prediction output. The input to CryptoMamba is the features of a fixed number of past days, and the output is the predicted closing value for the next day. The overall architecture is depicted in Figure 1.\nEach C-Block is composed of multiple CMBlocks and a Multi-Layer Perceptron (MLP). A CMBlock includes a normalization layer followed by a Mamba block. The output of each CMBlock feeds into subsequent CMBlocks within the same C-Block, allowing hierarchical feature extraction. The MLP at the end of each C-Block is a linear layer that adjusts the sequence length to prepare the output for the next C-Block. The outputs of all C-Blocks are aggregated by the Merge block, which is a simple linear layer to integrate the extracted features and produce the final prediction.\nThe hierarchical structure of CryptoMamba enables it to progressively refine features across multiple C-Blocks, capturing both short-term and long-term temporal dependencies. Additionally, the Mamba block's input-dependent dynamics ensure adaptability to the variability and stochastic nature of financial data.\nC. Metric\nFor evaluating the forecasting accuracy of our models, we use three standard metrics: Root Mean Squared Error (RMSE), Mean Absolute Percentage Error (MAPE), and Mean Absolute Error (MAE). The formulas for these metrics are presented in Table III, where yi represents the actual value, \u0177r is the predicted value, and n is the total number of predictions."}, {"title": "V. EXPERIMENTS", "content": "To evaluate the effectiveness of CryptoMamba in Bitcoin price prediction, we conduct comprehensive experiments comparing its performance with several baseline models: LSTM, Bi-LSTM, GRU, and S-Mamba. The evaluation focuses on two aspects: prediction accuracy, measured using RMSE, MAPE, and MAE, and model efficiency, quantified by the number of parameters. Additionally, we assess the impact of incorporating trading volume as a feature by conducting experiments under two setups: with and without volume. This section presents the experimental setup, results, and analysis, providing insights into the advantages of CryptoMamba over traditional and state-of-the-art baselines.\nA. Setup\nTo evaluate the performance of CryptoMamba, we compare it with four widely used baseline models: LSTM, Bi-LSTM, GRU, and S-Mamba. These models represent a diverse set of approaches for time-series forecasting, ranging from traditional recurrent architectures to advanced state space models.\n\u2022 LSTM (Long Short-Term Memory) [23], [22]: Configured with 3 layers and a hidden size of 100. LSTM is a popular recurrent neural network architecture and is chosen for its ability at capturing long-term dependencies in sequential data. It is widely used in financial forecasting tasks.\n\u2022 Bi-LSTM (Bidirectional LSTM) [23]: Configured with 3 layers and a hidden size of 100. The bidirectional setup allows the model to learn both forward and backward temporal dependencies, potentially capturing richer patterns and contextual dependencies in the data.\n\u2022 GRU (Gated Recurrent Unit) [23]: Uses 3 layers and a hidden size of 100. The GRU model is a variant of LSTM that achieves comparable performance with fewer parameters. It is included as a lightweight alternative for evaluating the trade-off between accuracy and model complexity.\n\u2022 S-Mamba [26]: Configured with d_model 128, d_state 32, d_ff 128, 0.1 dropout, and e_layers 2. S-Mamba has not been previously applied to Bitcoin price prediction or other cryptocurrency datasets. We include S-Mamba to assess CryptoMamba's performance against a state-of-the-art model with similar underlying principles.\n\u2022 CryptoMamba: Configured with 3 C-Blocks, each containing 4 CMBlocks. The sequence lengths for the C-Blocks are 14, 16, and 32, respectively, with a state dimension (d_state) of 64 for the Mamba blocks.\nIn the experiments, each model receives data from the previous 14 days as input to predict the close value for the following day. To ensure consistency across models, we use the Adam optimizer [28] with RMSE loss as the loss function. All models are trained with a batch size of 32. Additionally, we employ a learning rate scheduler and weight decay to mitigate overfitting and tune these hyperparameters for each model. Early stopping is applied, and the model checkpoint with the best validation loss is selected to avoid overfitting.\nAll models use the same train-validation-test split to enable fair comparisons. To avoid data contamination, our predictions in each data split period start from 14 days after the start of that period. This means that, for example, for validation samples, our prediction starts with a 14-day delay to avoid using training samples in the input. This gap ensures that each set remains completely isolated, preventing any overlap and enabling a more accurate assessment of each model's performance on unseen data. Additionally, we conduct experiments under two different setups: with and without trading volume as a feature. This allows us to analyze the impact of volume on prediction accuracy and assess the robustness of the models under varying input configurations.\nFor all baselines, we use hyperparameters that align with their respective best practices, ensuring a fair comparison. Additionally, to maintain reproducibility, we set a fixed random seed for all experiments.\nB. Evaluation\nThe results of our experiments, conducted with and without trading volume on the test data, are summarized in Table IV. These results show that CryptoMamba consistently outperforms all baseline models, including LSTM, Bi-LSTM, GRU, and S-Mamba, across all evaluation metrics. This demonstrates CryptoMamba's superior ability to capture the complex dynamics of Bitcoin price movements with high generalization. Notably, CryptoMamba-v, the volume-inclusive variant, achieves the best performance with an RMSE of 1598.1, a MAPE of 0.02034, and an MAE of 1120.7. Even without volume, CryptoMamba surpasses the volume-inclusive versions of all baseline models, highlighting its robustness.\nAmong the baselines, S-Mamba performs competitively, particularly in the volume-inclusive setup, with an RMSE of 1651.6. This highlights the strength of advanced state space models in capturing long-range dependencies. However, CryptoMamba's tailored architecture further improves upon these results, demonstrating the benefits of its design for financial time-series forecasting. Similarly, Bi-LSTM and LSTM show significant improvements when volume data is included, whereas GRU sees minimal gains, indicating that the impact of volume depends on the model architecture.\nOverall, the results confirm CryptoMamba's effectiveness in both setups, with the inclusion of volume data consistently enhancing prediction accuracy across most models. This highlights the importance of trading volume as a feature in capturing market dynamics, particularly in highly volatile settings like Bitcoin price forecasting."}, {"title": "VI. APPLICATION IN REAL-WORLD TRADING", "content": "In this section, we evaluate the practical utility of CryptoMamba by applying its predictions in a real-world trading scenario. Using two trading algorithms, we simulate trading with an initial balance of 100 dollars at the beginning of the validation and test period. The goal is to compute the net worth at the end of each period and compare the profits of different models.\nTo evaluate model predictions, we use two trading algorithms: Vanilla and Smart. Algorithm 1 describes the Vanilla Trading Algorithm, which makes simple buy or sell decisions based on the predicted and actual prices. At its core, the algorithm computes the ratio of the absolute difference between the predicted price and today's price to today's price. This ratio, referred to as the change ratio d, determines whether any trading action is required. If the change ratio is below a predefined threshold (0.01 in our case), the algorithm refrains from making any trades. This safeguard is introduced to account for transaction fees, which can render small trades unprofitable, especially when the predicted price change is minor. However, if the change ratio meets or exceeds the threshold, the algorithm takes decisive action.\nAlgorithm 2, the Smart Trading Algorithm, introduces a risk-aware approach by considering an interval around the predicted price, determined by a risk percentage (set to 2% based on the validation MAPE of the models). This interval, defined by an upper bound (ymax) and a lower bound (ymin), accounts for prediction uncertainty and provides a range within which tomorrow's price is likely to fall:\n\n$\\begin{aligned}\nY_{max} &= y \\cdot \\left(1 + \\frac{risk}{100} \\right) \\\\\nY_{min} &= y \\cdot \\left(1 - \\frac{risk}{100} \\right)\n\\end{aligned}$\n\nwhere y is the predicted price.\nThe algorithm makes decisions based on the position of today's price (x) relative to this interval:\n\u2022 If x > Ymax: Sell all shares, as tomorrow's price is expected to drop significantly.\n\u2022 If y < x \u2264 Ymax: Sell a fraction of shares, proportional to the difference between x and y.\n\u2022 If x < Ymin: Buy with all available money, as tomorrow's price is expected to rise significantly.\n\u2022 If Ymin < x < y: Buy a fraction of available funds, proportional to the difference between y and x.\nBy dynamically adjusting trading actions based on this interval, the Smart Trading Algorithm balances risk and returns, offering a more adaptive and realistic trading strategy compared to the threshold-based Vanilla algorithm."}, {"title": "VII. CONCLUSION AND FUTURE WORK", "content": "In this work, we introduced CryptoMamba, a novel Mamba-based architecture tailored for financial time-series forecasting, and demonstrated its effectiveness in predicting Bitcoin prices. Leveraging state space models (SSMs) with Mamba enhancements, CryptoMamba efficiently captures long-range dependencies and outperforms traditional models such as LSTM, Bi-LSTM, GRU, and S-Mamba in both predictive accuracy and financial performance. Our results show that CryptoMamba, especially in its volume-inclusive variant, achieves the highest returns in real-world trading scenarios, highlighting the importance of incorporating volume data for enhanced market insights.\nThe trading simulations using Vanilla and Smart algorithms emphasize the practical utility of CryptoMamba in real-world trading. By employing trading algorithms as evaluation tools, we were able to effectively compare prediction models in terms of their financial impact, moving beyond regression metrics alone. CryptoMamba design not only proves its capability in modeling cryptocurrency markets but also showcases its potential for forecasting other time series data, such as stocks or commodities, where long-range dependencies are critical.\nFuture work could explore extending CryptoMamba to other financial assets and testing its adaptability to multi-asset portfolios. Additionally, refining trading algorithms to better leverage prediction intervals and incorporating external factors, such as sentiment analysis or macroeconomic indicators, may further improve performance. While CryptoMamba demonstrates strong generalization and profitability, further research into integrating risk management strategies within the architecture itself could provide even greater robustness in highly volatile markets."}]}