{"title": "GUITAR CHORD DIAGRAM SUGGESTION FOR WESTERN POPULAR MUSIC", "authors": ["Alexandre D'HOOGE", "Louis BIGO", "Ken D\u00c9GUERNEL", "Nicolas MARTIN"], "abstract": "Chord diagrams are used by guitar players to show where and how to play a chord on the fretboard. They are useful to beginners learning chords or for sharing the hand positions required to play a song. However, the diagrams presented on guitar learning tools are usually selected from an existing database of common positions and rarely represent the actual positions used by performers. In this paper, we propose a tool which suggests a chord diagram given a chord label, taking into account the diagram of the previous chord. Based on statistical analysis of the DadaGP and mySongBook datasets, we show that some guitar chord diagrams are over-represented in Western popular music and that some chords can be played in up to 108 different ways. We argue that taking the previous position into account as context can improve the variety and the quality of chord diagram suggestion, and compare this approach with a model taking only the current chord label into account. We show that adding previous context improves the F1-score on this task by up to 32% and reduces the propensity of the model to suggest standard open chords. We also define the notion of texture in the context of chord diagrams and show through a variety of metrics that our model improves texture consistency with the previous diagram.", "sections": [{"title": "1. INTRODUCTION", "content": "On the guitar, a chord can be played in multiple ways, each position having its own pitch, timbral and biomechanical specificities. Chord diagrams can be used to represent the position at which a chord is played. They can be notated with a graphical representation as shown in Figure 1, or in text form (compatible with ASCII tablatures) with a number indicating which fret is played on each string. For instance, the chord diagrams from Figure 1 can be annotated, respectively, as x.0.2.2.1.0, and 5.7.7.5.5.5. The former contains both an open (0) and a muted (x) string and is the most common shape, used by beginners for its simplicity and in pop music for the resonance of open strings. The latter is a barr\u00e9 chord and is harder to play, but can be shifted along the fretboard to play other minor chords without changing hand shapes.\nWe propose the task of chord diagram suggestion to assist composition. Chord diagram suggestion research has so far been focusing on playability [1-3] with limited ability to take into account the relationship between consecutive chords. We can see similar problems in the suggestions of the most popular guitar learning services, which only provide catalogs of standard chord diagrams. While such an approach provides agency to the user, it might also drive beginners towards using the same diagrams over and over again. In this paper, we propose a model that suggests a chord diagram, given a chord label and the previous notated diagram. The contributions of this work are as follows: (i) a context-aware approach for guitar chord diagram suggestion; (ii) a set of metrics to assess performance in this task and characterize texture for guitar chord diagrams; (iii) an illustrative application of this task for rhythm guitar tablature continuation; (iv) openly released code and data for all of the above. The rest of this paper is organized as follows: In section 2, we present related work on symbolic music for guitar in Western popular music repertoire. We then present our proposed approach and models in section 3. In section 4, we discuss in details the datasets and the data augmentation procedure we used. After discussing evaluation metrics, we finally share our results in section 5, before showing how it could be used for rhythm guitar continuation in section 6."}, {"title": "2. RELATED WORKS", "content": "A large part of research on guitar focuses on tablatures as a notation system, especially when studying Western popular music. From the audio realm, tablatures are often the output medium for guitar transcription [4-6], but they can even be used as a source of additional data to improve automatic transcription [7, 8]. In a field related to audio transcription, chord recognition from audio is an important task in Music Information Retrieval [9], as attested by its recurring occurrence in MIREX \u00b9 and ongoing research in\nor scores\nto play the notes, which will ultimately be influenced by the fingers used to press the strings and the accompanying biomechanical constraints. This problem has been tackled by a graph-search approach [22] or HMM-like models [23-25] and can then be used for tasks like automatic arrangement [26]. When it comes to guitar chord diagrams however, they are mostly studied with playability considerations in mind [1-3] or in a musicological analysis of their use [27]. In this paper, we consider chord diagram suggestion as an assisted composition task, to help beginner guitar players choose how to play a new chord in a preexisting sequence, or assist composers in creating guitar accompaniment parts."}, {"title": "3. METHODOLOGY", "content": ""}, {"title": "3.1 Proposed Model", "content": "In this work, we suggest a diagram dt for a chord, based on its label lt and the previous diagram dt-1 (Figure 2).\nThe task consists in finding the diagram which probability is highest in the provided context. To do so, we convert the chord labels and diagrams into vectors and train a neural network on chord pairs. For each chord label, we first extract its bass note, which might be different from its root note in case of inverted chords. This bass note information is then converted into a one-hot vector of size 12 where enharmonic equivalents of the twelve-tone equal temperament are merged together (the Bass Note Vector). Then, the pitch-class content of the chord is converted into a many-hot vector of size 12 (the Chord Nature Vector)."}, {"title": "3.2 Implementation Details", "content": "We use a fully connected neural network as an architecture. Hyperparameters were tuned \u2013 through manual exploration \u2013 to maximize performance of both the baseline and the proposed model, ending up with no hidden layer for the baseline and one hidden layer of size 150 for the full model. Performance is evaluated with a Binary Cross-Entropy loss on the output, the model using a Sigmoid activation function, and string-wise normalization of the predictions (to enforce a single prediction per string). Training uses the Adam optimizer with (\u03b21, \u03b22) = (0.9, 0.999), and a learning rate \u03bb = 0.001. The training is stopped whenever the validation loss does not improve by at least \u03b4 = 0.001 for two consecutive epochs. Full training of the model can be done in a few minutes on a standard laptop CPU. The Python implementation is openly available, along with a demonstration website, at algomus.fr/code."}, {"title": "4. DATA", "content": ""}, {"title": "4.1 Corpora", "content": "This study is conducted on two corpora of guitar tablatures containing chord diagram information. The first one is DadaGP [14], a community-based corpus of more than 25000 songs spanning a wide variety of styles, though mostly focusing on rock and metal. The second one is the proprietary dataset mySongBook2 (MSB), which consists of about 2500 songs professionally transcribed."}, {"title": "4.2 Statistical Analyses", "content": "In this subsection, we provide detailed statistics of the chords used in the datasets. This analysis aims at emphasizing the bias towards more common diagrams and key signatures, due to guitar affordance. Furthermore, because of the considered repertoire, and the large amount of pop/rock/metal tracks, some chord natures are more common than others. However, we also want to underline that this bias is not at the expense of variety, but results in highly unbalanced datasets.\nA first dimension to analyze on chords is on what root note they are built. Observation shows that the distributions of root notes are similar between datasets with more than half the chords having A, G, D, C or E as root."}, {"title": "4.3 Data Augmentation Strategy", "content": "The previous statistical analyses showed that a wide variety of diagrams and labels are represented in both datasets. However, more common chords are over-represented and might prevent the model to suggest less used diagrams. We want to improve the robustness of the proposed approach and reduce its bias towards key signatures more frequent in the datasets so that the model can suggest diagrams even for rare tonalities and chord nature. To do so, we apply the augmentation technique from [12]. For each chord pair, both diagrams are shifted one fret down and the chord labels transposed one semitone down accordingly, until one of the diagrams contains an open string. Similarly, chord pairs are also shifted one fret up until reaching the 15th fret. This maximum is chosen based on the highest diagrams observed in data and to prevent the model from suggesting chords on higher frets, which are used far less in rhythm guitar. Using this augmentation strategy makes the training sets more than three times larger."}, {"title": "5. EXPERIMENTS", "content": ""}, {"title": "5.1 Metrics", "content": "Like most tasks on probability estimation, we can evaluate the performance of the model through its Precision (P), Recall (R) and F1-score. However, in the case of this musical task, it could be argued that the so-called ground-truth is not perfect nor the only acceptable answer. For instance, a G major chord can be played with the following diagrams: 3.2.0.0.0.3 and 3.2.0.0.3.3 either repeating the B or the D, and they might be considered equivalent by guitar players. For this reason, we propose hereafter several automated metrics to account for the different errors that can be encountered on diagram prediction.\nPitch Metrics Similarly to [6], we want to measure to which extent the model suggests diagrams that contain all the expected notes for a given chord label. For this purpose, we compute for a chord diagram d the set of pitch classes it contains and compare it with the pitch classes associated with the chord label l.\nFrom these sets, we can compute Pitch Precision (PP), Pitch Recall (Rp) and a Pitch F1-score (F1p).\nTablature Metrics Drawing insights from [6], we also define metrics to measure how similar the model suggestions are to the reference diagrams, when comparing them on the fretboard. Similarly to the pitch metrics, we compute the set of string/fret (SF) pairs on the predicted diagram and compare them with those of the expected diagram. We can use those sets to compute String/Fret Precision (PSF), String/Fret Recall (RSF) and the corresponding F1-score (F1SF).\nDetect Unplayable Diagrams To evaluate how often the model can return an unplayable diagram, we implement a playability metric inspired by [2]. In this paper, the authors define an anatomical score to evaluate the ease of playing a chord. They use a custom fitness function that penalizes chords containing uncomfortable stretches between fingers based on an optimal fingering computed beforehand. This metric allows us to detect unplayable diagrams when obtaining a low anatomical score, like in chords spanning over 5 frets or more. We settled for a threshold of t = 0.2 after manual analysis of anatomical scores and playability of the model's suggestions.\nEase of Transition While it is necessary that the suggested diagrams are playable, playability of chord sequences also depends on the chord transitions involved. To assess the ease of the transitions suggested, we also implement the chord change (CC) metric proposed in [4]. This metric analyzes the transition between the diagrams d1, d2 through two movements: wrist movement mw, which is obtained as the absolute difference of the index finger fret in the two chords; and the fingers movement mf, defined as the Manhattan distance between the positions of each finger. The final value is inversely proportional to these movements measures and is highest (1) when the chord change is easy (m < 1) and close to 0 when the transition is very hard (m > 1)."}, {"title": "5.2 Results", "content": "For the experiments, we apply a 60-20-20 train, validation, test split to both datasets and average the results over four different splits The data augmentation strategy presented subsection 4.3 is used for the full model but not for the baseline as it decreased its performance. This observation suggests that the results of the baseline should be taken with care, as prediction quality might decrease significantly on data not represented in the training set.\nUnplayability and transition ease of the ground-truth and the models' prediction are shown in\ntransition ease measured in the datasets, showing that the transitions are still too complicated.\nOverall, one can note that performance is similar on MSB and DadaGP. We still decided to share results on both datasets because we deemed relevant the fact that the proposed approach improves diagram suggestion even when training on noisier data. It also shows that a larger amount of chord pairs with an unbalanced distribution does not significantly increase the bias towards common diagrams."}, {"title": "5.3 Diagram Texture Consistency", "content": "We want to evaluate here if the texture change observed when using a suggested diagram is similar to the one from the reference. To measure this texture, we implement some of the sound quality measures of [2] and variations of them. More precisely, for each diagram, we extract: the ratio of open strings; the ratio of muted strings; the string centroid; and the ratio of unique notes i.e. counting only once notes that are repeated on several octaves. We also compute the difference of these metrics from one chord to the next to assess how consistent they are through a transition.\nAll values go from 0 to 1. A first observation is that the performances of the full models trained and tested on DadaGP and MSB are similar. However, this experiment does show slight differences in the datasets, on the amount of muted notes and the string centroids in particular. The biggest difference is the improvement of the baseline's performance on individual chord metrics for MSB, which could be due to the fact that the dataset is smaller and less varied. From the 8 values for both datasets, it appears that the metrics are rather consistent from one chord to the next. We can also observe that the baseline trained on DadaGP tends to play too many notes on each chord (lower ratio of muted notes) probably by repeating them on different octaves (lower ratio of unique notes). Finally, an encouraging result is that the model using context suggests diagrams with a texture similar to the ground-truth (lower \u03b4 values). It should however be noted that it also tends to repeat more notes than necessary, while still missing some."}, {"title": "6. DISCUSSION", "content": ""}, {"title": "6.1 Application to Rhythm Guitar Continuation", "content": "As introduced in [28], a chord diagram suggestion tool could be used in a larger framework for rhythm guitar continuation. Provided with a chord sequence and a tablature prompt, a guitar player might be interested in generating the continuation of the prompt. The model introduced in this paper could be used as a first step to choose chord diagrams that are consistent with the prompt, before generating a tablature showing how to strum the new chords. An example of this usage on three different chord sequences is given\nChord label sequences are generated with the tool from [21] and the first diagram is sampled from the probability distribution of all diagrams for the corresponding label. Subsequent diagrams are generated successively using our trained model. To illustrate potential tablature applications, strumming patterns were proposed by the authors for the first bar, and then uniformly generalized to following bars. As discussed in subsection 5.2, the system sometimes suggests unplayable diagrams and does not always include all the notes expected in a chord. However, we think that the sequences are consistent in terms of texture and usually contain diagrams less common than standard open chords and barr\u00e9 chords. For instance, in the first sequence, the B7 diagram contains an open string that would help maintain the sound quality of the first chord, unlike the more common barr\u00e9 shapes that are x.2.4.2.4.2 or 7.9.7.8.7.7. In the second sequence, though the"}, {"title": "6.2 Conclusions and Future Work", "content": "In this paper, we have shown that chords used in the Western popular guitar repertoire are varied but also highly unbalanced, with some common chords and diagrams being used much more frequently than more complex ones. From this observation, we proposed a new approach to suggest guitar chord diagrams for Western popular music. We showed with several metrics that adding context information through the previous diagram improves the quality of the suggestions while also maintaining a better consistency of texture between chords. All experiments were conducted on two datasets, one proprietary and one public, to further guarantee the validity of the conclusions. Finally, we also gave an example application of the proposed tool in rhythm guitar continuation, where it could help beginners play more interesting and varied chords, or ease the process of writing accompaniment tracks.\nStudying this application in more details is a possibility for future work, as well as improving the current suggestion tool, for instance by conditioning the suggestions on musical style. It would also be relevant to increase the number of previous diagrams provided as context. This could allow seeing how far back the system needs to look to maximize the quality of the suggestions, and show when and how continuity in texture is broken. Besides, it is likely that the suggestion system could be improved by musically relevant features on the context like harmony or instrumentation, as other instruments affect greatly the diagrams chosen by guitar players. Finally, while we studied texture consistency through several metrics, it would also be interesting to check how the diagrams suggested affect the voices from one chord to the other and whether the transitions respect some voice-leading principles."}]}