{"title": "Pensieve Discuss:\nScalable Small-Group CS Tutoring System with AI", "authors": ["Yoonseok Yang", "Jack Liu", "J.D. Zamfirescu-Pereira", "John DeNero"], "abstract": "Small-group tutoring in Computer Science (CS) is effective, but\npresents the challenge of providing a dedicated tutor for each group\nand encouraging collaboration among group members at scale. We\npresent Pensieve Discuss, a software platform that integrates syn-\nchronous editing for scaffolded programming problems with online\nhuman and AI tutors, designed to improve student collaboration\nand experience during group tutoring sessions. Our semester-long\ndeployment to 800 students in a CS1 course demonstrated con-\nsistently high collaboration rates, positive feedback about the AI\ntutor's helpfulness and correctness, increased satisfaction with the\ngroup tutoring experience, and a substantial increase in question\nvolume. The use of our system was preferred over an interface lack-\ning AI tutors and synchronous editing capabilities. Our experiences\nsuggest that small-group tutoring sessions are an important avenue\nfor future research in educational AI.", "sections": [{"title": "1 Introduction", "content": "Small-group tutoring sessions involve a single human tutor or\nteaching assistant working with a small group of students to re-\nview course material and solve example problems. Research has\ndemonstrated that this mode of instruction is effective for collab-\norative learning, resistance to forgetting, and instructional effi-\nciency [5, 11, 17, 18]. Collaborative systems have been shown to\nsignificantly enhance learning gains compared to non-collaborative\nsystems in CS education [5].\nHowever, resource constraints can make it impractical to assign\na dedicated tutor for each small-group tutoring session in a large\ncourse. When a single TA must oversee multiple small groups simul-\ntaneously, it can be challenging to monitor each student's progress\nand provide sufficient support and feedback. The increasing inter-\nest in CS courses has exacerbated this issue, making it difficult for\neducators to maintain high-quality instruction and support during\nscheduled group tutoring sessions.\nMoreover, encouraging collaboration among group members\nposes another challenge. When each student in a small group is\nusing a computer to write and test code using their own individual\neditors or writing code on individual worksheets, they may work\nat different paces and focus their attention on their own individual\nanswers rather than group discussion. Individually distributed web\npages or worksheets inhibit students from easily seeing each other's\napproaches, making collaboration more difficult.\nWe present Pensieve Discuss, a software platform designed to\nfacilitate small-group CS problem solving sessions at scale by com-\nbining synchronous editing of scaffolded fill-in-the-blank problems\nwith AI and online human feedback. Students can form small groups\nin Pensieve Discuss and work on problems together using a code\neditor with shared content. When they are stuck, they can get re-\nsponsive expert help from an AI Tutor or human TAs. Human TAs\ncan monitor student progress and AI tutor responses in real-time\nthrough the platform and assist students as needed.\nWe deployed Pensieve Discuss in a CS1 course that had weekly\n80 minute in-person discussion sections. These discussion sections\nwere conducted in the format of small-group tutoring sessions, with\ngroups of up to seven students supervised by a TA who supported\nmultiple groups simultaneously. Prior to introducing Pensieve Dis-\ncuss, students in these groups used individual code editors to write\ndown their answers to questions and check their work, and there\nwas only human TA feedback available rather than both human\nand AI feedback. Pensieve Discuss was deployed to 800 students for\nthe entire Spring 2024 semester. Students had the option of using\nPensive Discuss or the individual code editor used previously.\nTo our knowledge, Pensieve Discuss is the first LLM-based system\ndesigned to be used in real-time CS small-group discussions along-\nside teaching assistants. Our main contributions are as follows:\n\u2022 We present the Pensieve Discuss system, which provides\ncollaborative and scalable small-group tutoring for CS1\ncourses.\n\u2022 We share our findings from student surveys, analysis of\nusage data, and teaching assistant interviews, which show"}, {"title": "2 Related Work", "content": "2.1 Small-group tutoring\nSmall-group tutoring in CS education is a resource-efficient alter-\nnative to one-on-one tutoring. One-on-one tutoring from a human\nexpert is one of the most effective ways for novices to develop\nrobust mental models of programming [2, 4]. Expert tutors can\nprovide timely, targeted, and proactive help based on a close exam-\nination of the student's code, addressing individual learning needs\npromptly and accurately. However, assigning a TA to each student\nis impractical in higher education due to the limited availability\nof TAs. Small-group tutoring presents a promising alternative in\nterms of scalability.\nSmall-group tutoring can also increase student engagement\nthrough collaboration. Research has shown that collaborative learn-\ning environments facilitated by small-group tutoring can increase\nstudent engagement and make the learning experience more enjoy-\nable [11, 17]. Some researchers argue that it is even more effective\nthan one-on-one tutoring due to its instructional efficiency, resis-\ntance to forgetting, and promotion of cooperative learning [18].\nHowever, tools specifically designed for small-group tutoring\nhave been rarely developed. Researchers have developed tools like\nCodeopticon [4] and VizProg [22] to provide real-time, one-to-many\ntutoring interfaces, enabling instructors to support multiple stu-\ndents more efficiently. However, these tools do not explicitly foster\nstudent collaboration, as each student is expected to work inde-\npendently in a non-synced editor. Moreover, without Al assistants,\nthese tools cannot fully eliminate delays in assisting students, as a\nsingle human tutor has limited capacity."}, {"title": "2.2 LLM-Based Tools in CS Education", "content": "Large introductory CS courses in higher education have increas-\ningly adopted Large Language Models (LLMs) to provide responsive\nsupport to students and alleviate instructors' workloads. One promi-\nnent application is assisting students in debugging their program-\nming assignments [6, 7, 9, 10, 13, 16, 21]. LLMs can guide students\ntowards correct solutions with high accuracy, and students find\nthese tools helpful [7, 9, 16]. Additional uses of LLMs in CS educa-\ntion include answering students' questions in online course forums\n[10, 12, 19] and generating course materials [3, 14, 15, 20].\nLLM-based assistants are new, and so far as we are aware, no\nLLM tools have been developed specifically to support small-group\ntutoring sessions that are supported simultaneously by AI and hu-\nman tutors or teaching assistants. Compared to the individual use\nof AI assistants, AI tools for small-group tutoring sessions need to\nconsider collaborative features and human(TA)-in-the-loop compo-\nnents to maximize the learning benefit of each tutoring session."}, {"title": "3 System Description", "content": "Our system, Pensieve Discuss, was developed to provide an enhanced\nlearning experience to students during real-time in-person small\ngroup tutoring sessions that are part of a regular CS1 course offer-\ning and are overseen by a TA. Unlike most LLM assistants in CS\neducation intended only for student use, our system serves both\nstudents and TAs. In this section, we describe Pensieve Discuss in\ndetail for each user group."}, {"title": "3.1 Student Features", "content": "Figure 1 shows the student interface to the system. Students can\njoin a group and solve questions collaboratively.\nSynced Editor: Students use a synced editor to write their solu-\ntions to coding questions. Similar to Google Docs for programming,"}, {"title": "3.2 TA Features", "content": "Content Management System (CMS): TAs can use our CMS to\nupload questions. The CMS supports markdown, making it easy\nto import existing content into our platform. TAs can select the\nprogramming language and write test cases for the autograder.\nTA View: During development, TAs reported that it was very\ndifficult for them to track student progress in any problem-solving\nsession that involved them supervising a large number (such as 30)\nof students, whether they were in-person or online. To solve this\nproblem, we developed a TA view (Figure 2) where TAs can monitor\nstudent progress in real-time. They can click each room to observe\nstudents' progress, seeing changes in real-time, enabling remote\nsupport. When students send a chat to the TA or the AI Tutor,\nTAs are notified to review new messages. Rooms with unreviewed\nactivity are surfaced to the top of the room list, allowing TAs to\nprioritize those rooms.\nTA Feedback: TAs wanted an easy way to give feedback on\nAl chat messages. For instance, endorsing an Al message could\nhelp students trust the Al's advice. To support this, we developed\na TA feedback feature. For each AI message, TAs can provide one\nof three feedback types: read, endorse, or edit. If a TA endorses a\nmessage, students can see that it was endorsed by a TA. TAs can\nedit a message if it contains incorrect information or gives away\nthe answer to a problem. If TAs don't want to endorse or edit, they\ncan mark the message as \"read\" to remove the unread message\nnotification."}, {"title": "3.3 Implementation & Deployment Details", "content": "When students interact with our AI Tutor, we send a request to\nGPT-4 containing the question the group is solving, their current\nsolution, and the autograder result if they ran the grader. Each\nrequest includes a system prompt that guides GPT-4 on how to\nassist the group. To prevent GPT-4 from providing solutions, we\ndirect the model to guide them towards the solution by asking\nquestions and offering hints.\nPensieve Discuss was first deployed to 150 students for the final\nweek of the Fall 2023 semester, then to 800 students for the entire\nSpring 2024 semester. For both semesters, Pensieve Discuss was\nused during 80 minute in-person discussion sections with groups\nof up to 7 students. Discussion sections were conducted as small-\ngroup tutoring sessions, where TAs supervised multiple groups\nsimultaneously.\nFor the Spring 2024 semester, six TAs used our system to as-\nsist students. Student groups were formed based on scheduling"}, {"title": "4 Results", "content": "We analyze the data collected during this deployment by focusing\non the following Research Questions (RQs):\nRQ1: Did our system facilitate student collaboration?\nRQ2: Was the AI Tutor helpful and correct?\nRQ3: Did our system increase student satisfaction?\nRQ4: How much did the students and TAs use the chat interface?"}, {"title": "4.1 Data", "content": "The data presented in this section comes from three sources: 1) stu-\ndent surveys, 2) system usage data, and 3) TA interviews. Students\ncompleted short surveys each week directly after completing the\ndiscussion section of our CS1 course, in order to receive attendance\ncredit. For the TA interviews, we reached out via email to six TAs\nwho taught discussion sections during the Spring 2024 semester.\nTwo TAs were available for interviews, so we conducted 20-minute\nvirtual interviews with each of them. Both TAs had over two years\nof experience teaching this CS1 course and used Pensieve Discuss\nto run their remote discussion sections."}, {"title": "4.2 RQ1: Did our system facilitate student\ncollaboration?", "content": "To assess whether our system facilitated student collaboration,\nwe compared student survey data from the Spring 2024 semester\nwith data from the Fall 2023 semester. Pensieve Discuss was not\nused in the Fall 2023 semester, except for the last one (Discussion\n12), but the small-group format overseen by a TA was used in\nboth semesters. We added the survey question about collaboration\nstarting from Discussion 6 in Fall 2023, so we compared data from\nDiscussion 6 to 11 of both semesters; the problems and instructions\nused in these sessions had largely similar content.\nAs shown in Figure 3, student collaboration reported in surveys\nwas consistently higher during the semester when Pensieve Discuss\nwas used."}, {"title": "4.3 RQ2: Was the AI Tutor helpful & correct?", "content": "To determine whether the AI Tutor was helpful and correct, we\ncollected student feedback through surveys after each discussion\nsession. As shown in Table 1, a significant majority of students\nfound the AI Tutor to be helpful, with 41.8% rating it as Very Helpful\nand 35.3% as Helpful. Only 1.5% of the responses indicated that the\nAI Tutor was Not Helpful.\nMoreover, the AI Tutor's helpfulness was consistently rated high\nthroughout the semester, showing no noticeable trend of decline.\nThis indicates that the AI Tutor maintained a high level of usefulness\nand accuracy in assisting students with their queries.\nWe also analyzed the per-chat feedback labels provided by stu-\ndents for each chat message. Since the functionality to give per-chat\nfeedback was deployed after Discussion 2, 7084 out of 7516 AI mes-\nsages were able to be labeled. Out of these 7084 messages, only 336\n(4.7%) were labeled by students.\nAs shown from Figure 2, while Helpful was the most popular\nlabel, the proportion of negative labels (Unhelpful, Too much help,\nIncorrect) was more substantial compared to the aggregate help-\nfulness ratings shown in Table 1. We hypothesize that students\nare more likely to label negative interactions since helpful chats\nare considered the default expectation, as reflected in the survey\nfeedback.\nTAs corroborated the high accuracy of the AI Tutor during the\ninterview, stating that it was rarely wrong. However, they noted that"}, {"title": "4.4 RQ3: Did our system increase student\nsatisfaction?", "content": "the AI Tutor sometimes \"overcomplicated\" explanations, requiring\nTAs to intervene and simplify the information for students.\nthe synced editor over the non-synced editor, with 35% strongly\npreferring the synced editor.\nNext, we compare the survey results of Discussions without\nPensive Discuss (Discussion 1 - 11 in Fall 2023 semester) with the\nsurvey results of Discussions with Pensieve Discuss (Discussion\n1-11 in Spring 2024 semester). As shown from Figure 6, student\nsatisfaction is consistently higher for the semester (Spring 2024)\nthat used our system. We acknowledge that there is a difference\nin student populations from Fall 2023, which included mostly CS-\nintended majors, versus Spring 2024 which included students with\na much broader range of intended majors."}, {"title": "4.5 RQ4: How much did students & TAs use the\nsystem?", "content": "In this section, we analyze the interactions between students, TAs,\nand our platform.\n4.5.1 Student to Al Tutor interaction. Figure 7 shows the student-sent message distribution per group. It is worth noting that the\naverage of 5.87 questions per group per section (~0.84 question per\nstudent) only accounts for questions asked through the Pensieve\nDiscuss platform. Students were also able to ask questions via the\nvoice channel in Discord during the session, which was not captured\nfrom our usage data."}, {"title": "4.5.2 TA to Al Tutor interaction", "content": "Table 4 shows that approximately\n8% of AI Tutor messages were reviewed by TAs. About 30% of the\nreviewed messages were endorsed.\nDuring the interviews, both TAs mentioned that they tried their\nbest to review every message the AI Tutor sent to students, and\nestimated that they reviewed between 70% and 90% of the messages.\nHowever, they also acknowledged that they often forgot to mark\nmessages as read, which explains the discrepancy between the\nreview rate in the data and their testimonials."}, {"title": "4.5.3 TA to Student interaction", "content": "TAs testified that having the TA\nview in our system helped them understand each group's progress\nbetter than in semesters without our system, as they could see the\nstudents' code in real-time.\nHowever, TAs rarely used our system to send chat messages to\nthe students. Out of 1314 sessions, only 61 sessions (4.6%) included\ninstances where TAs sent messages to the student groups. Until\nDiscussion 9, TAs shared the same chat window with the AI Tutor.\nThis caused confusion, as TAs were unclear whether students were\ndirecting their questions to the AI Tutor or to the TA. Additionally,\nsince the AI Tutor responded to every question, even to the follow-\nup questions intended for the TA, the AI Tutor continued to send\nmessages in the same window as the TA.\nTo address this issue, we released a separate TA chat window\nstarting from Discussion 9. While TAs preferred the separate chat\nwindow, most students continued to use the AI Tutor chat window\nand rarely asked questions in the TA chat view.\nTAs were also able to communicate with students verbally by\nvisiting the group in-person or using Discord. These additional\ncommunication methods may have contributed to the low usage of\nthe chat interface for TA-student interactions within our system."}, {"title": "5 Limitations", "content": "Our study primarily examined the impact of Pensieve Discuss on\nstudent collaboration by comparing student survey results from\ndifferent semesters. While the mode of instruction and the small-\ngroup tutoring format of discussion sections remained the same,\naside from the introduction of our system, there are minor differ-\nences in problem descriptions that may have influenced the survey\nresults.\nWe also acknowledge that our Al Tutor might be less beneficial\nto students who are behind in the course content. During TA in-\nterviews, one TA mentioned that the system wasn't as helpful for\nstudents who were significantly behind in the lecture material, as\nthese students tended to over-rely on the AI Tutor."}, {"title": "6 Future Work", "content": "Pensieve Discuss has the capability to support multiple programming\nlanguages. Our CS1 course is taught primarily in Python with other\nlanguages, all of which are supported in Pensieve Discuss. Instructors\ncan easily select the desired language for each question in our\nsystem's Content Management System and upload their content\naccordingly.\nAdditionally, our system is not limited to CS courses. In the fu-\nture, we aim to leverage the scalability of Pensieve Discuss to expand\nits use to other courses within Computer Science and potentially\nto other disciplines."}, {"title": "7 Conclusion", "content": "We present Pensieve Discuss, a software platform designed for scal-\nable small-group CS tutoring. We deployed our platform in a large\nCS1 course with 800 students at a public university for an entire se-\nmester. Through student surveys, usage data analysis, and teaching\nassistant interviews, we found that Pensieve Discuss helps increase\nstudent collaboration, student satisfaction, and question volume\nduring small-group tutoring sessions.\nPensieve Discuss is a first attempt to integrate LLM to scale and\nimprove small-group tutoring section. We hope that the approach\ntaken by our system serves as a stepping stone for future research\nin the application of AI in small-group tutoring."}]}