{"title": "Human-Artificial Interaction in the Age of Agentic AI: A System-Theoretical Approach", "authors": ["Uwe M. Borghoff", "Paolo Bottoni", "Remo Pareschi"], "abstract": "This paper presents a novel perspective on human-computer interaction (HCI), framing it as a dynamic interplay between human and computational agents within a networked system. Going beyond traditional interface-based approaches, we emphasize the importance of coordination and communication among heterogeneous agents with different capabilities, roles, and goals. A key distinction is made between multi-agent systems (MAS) and Centaurian systems, which represent two different paradigms of human-AI collaboration. MAS maintain agent autonomy, with structured protocols enabling cooperation, while Centaurian systems deeply integrate human and AI capabilities, creating unified decision-making entities.\nTo formalize these interactions, we introduce a framework for communication spaces, structured into surface, observation, and computation layers, ensuring seamless integration between MAS and Centaurian architectures, where colored Petri nets effectively represent structured Centaurian systems and high-level reconfigurable networks address the dynamic nature of MAS.\nOur research has practical applications in autonomous robotics, human-in-the-loop decision making, and AI-driven cognitive architectures, and provides a foundation for next-generation hybrid intelligence systems that balance structured coordination with emergent behavior.", "sections": [{"title": "1 Introduction", "content": "Agentic AI systems-capable of iterative planning, autonomous task decomposition, and continuous learning\u2014are rapidly reshaping the landscape of human-computer interaction (HCI). Recent advances in Large Language Models (LLMs) and advanced conversational agents have revitalized the field of multi-agent systems, whose roots in Artificial Intelligence predate the current rise of generative AI. Historically, multi-agent systems relied on agents with relatively constrained capabilities; however, the emergence of powerful, conversationally"}, {"title": "2 Paradigms in Human-AI Integration", "content": "The emergence of agentic AI systems has given new life to two distinct approaches for human-AI collaboration: multi-agent architectures and Centaurian integration. This section examines these paradigms in detail, highlighting the distinct challenges each presents for system design and coordination.\nIndeed, although both paradigms involve interactions between intelligent entities, they represent fundamentally different approaches to human-artificial collaboration [46]. Multi-agent systems maintain distinct boundaries between components while enabling complex interactions, much like natural ecosystems. In contrast, Centaurian systems mirror the tight integration seen in biological organisms, where components merge functionally to create new capabilities [49]."}, {"title": "2.1 Architectural Differences", "content": "The primary architectural distinction lies in how these systems organize and maintain their identity [46].\nMulti-agent systems (MAS) emphasize functional independence, where agents -human or artificial operate as distinct entities with decision-making capabilities and dynamic collaboration. This design has allowed MAS implementations to thrive even with relatively simple AI agents, focusing on coordination rather than deep integration.\nCentaurian systems, by contrast, create unified composite entities where human and artificial components become functionally interdependent. Theoretical foundations for such systems trace back to [37] and [23], but their practical feasibility has emerged only recently with generative AI systems capable of complementing human cognitive functions.\nA key concept in both systems is that of communication spaces regions of interaction where information exchange and coordination occur. In biological systems, these are signaling pathways or neural networks; in human-machine systems, they manifest as protocols, interfaces, and shared representational spaces [14]. These spaces enable \u201cjoint activity\", characterized by inter-predictability, common ground, and directability."}, {"title": "2.2 Integration Paradigms, Operational Dynamics, and\nConvergence Points", "content": "Each paradigm embodies different principles from living systems theory:\nIn MAS, collaboration occurs through well-defined protocols between autonomous agents, resembling distinct organisms in an ecosystem. Effectiveness emerges from collective behavior while maintaining individual identities.\nIn Centaurian systems, integration blurs the boundaries between human and artificial components, forming functionally unified entities similar to biological organisms."}, {"title": "2.3 Implications for System Design", "content": "Viewing these paradigms through the lens of living systems theory has key design implications: The MAS design focus is on preserving agent autonomy, developing protocols for effective coordination, and ensuring system resilience through independent agents. Centaurian systems, on the other hand, have a design focus on emphasizing functional integration mechanisms, developing shared representational spaces, and encouraging emergent capabilities.\nSection 4 will introduce communication spaces as a unifying framework supporting both paradigms, thus enabling both the loose coupling of MAS and the tight integration of Centaurian systems while preserving their core attributes."}, {"title": "2.4 Situating Human-Machine Collaboration in the Context of\nAgentic AI", "content": "Advances in agentic AI heighten the relevance of multi-agent and Centaurian systems. Unlike traditional AI chatbots, agentic AI systems engage in sophisticated reasoning and iterative planning to solve complex, multi-step problems autonomously. These systems follow a four-step cycle of perception, reasoning, action, and learning, continuously improving over time.\nOur framework provides a theoretical foundation for integrating agentic AI into human-machine collaboration. The multi-agent paradigm aligns with contexts where agentic AI must maintain autonomy while coordinating with human and artificial agents via defined protocols such as in distributed customer service or collaborative software development. Conversely, the Centaurian paradigm is crucial for cases requiring deep integration with human operators, such as"}, {"title": "3 Technical Background: Petri nets", "content": "To provide a rigorous foundation for modeling the complex interactions in both multi-agent and Centaurian systems, we employ Petri nets as our core formal framework. Petri nets present several advantages for our purpose: they offer a clear graphical representation while maintaining mathematical precision, they naturally capture concurrent processes and synchronization requirements, and they can be extended to handle sophisticated data types and conditions through their colored variants. These properties make them especially well-suited for modeling interactions among heterogeneous agents, whether in loosely coupled multi-agent configurations or tightly integrated Centaurian systems. This section introduces the key concepts of Petri nets and their extensions, which will serve as the formal basis for our communication spaces framework.\nPetri nets are a well-established formalism for describing and analyzing the flow of information and control in concurrent systems. Originally introduced by [47], they have evolved into a family of models widely applied in computer science, systems engineering, and workflow management. A Petri net consists of places, transitions, and arcs connecting places to transitions (or vice versa), with the system's state captured by tokens that reside in places. As transitions fire, tokens move among places, thus modeling the progress of a process or distributed computation [41]."}, {"title": "3.1 Basic Concepts and Advantages", "content": "Graphical Clarity: One of the key strengths of Petri nets is their visual nature. Processes, resource constraints, and synchronization points are represented in a diagram, offering an intuitive view of concurrent interactions. This makes Petri nets well-suited for communicating system designs to both technical and non-technical stakeholders."}, {"title": "3.2 Colored Petri Nets and Typed Tokens", "content": "While classical Petri nets use indistinguishable tokens to mark places, colored Petri nets extend this model by assigning types or colors to tokens. Places become typed containers, and transitions can incorporate guard functions that enable more complex behaviors [29]. This extension allows designers to encode complex data structures and interaction protocols directly in the net, significantly increasing expressiveness. In the context of hybrid agent systems, colored Petri nets are especially advantageous for:\nHeterogeneous Agents: Different types of tokens can represent messages, tasks, or capabilities unique to human and synthetic agents.\nState and Context Tracking: Color sets can capture the internal state of agents or system contexts, allowing transitions to fire only when certain conditions (guards) on those states are met.\nProtocol Definition and Enforcement: Complex interaction sequences, including the dynamic creation and distribution of tasks, can be succinctly specified and analyzed.\nIntegration with Communication Spaces: As we will see in Section 4, communication spaces\u2014surface, observation, and computation can be mapped onto distinct parts of a colored Petri net, leveraging types to separate or coordinate different communication and processing domains."}, {"title": "3.4 Relevance to Hybrid Agent Systems", "content": "Petri nets, and particularly their colored variants, are ideally suited to represent the parallel and event-driven nature of interactions among humans and AI components. Their token-based semantics naturally handles concurrency, while the ability to extend tokens with data types makes them powerful enough to capture the complexities of heterogeneous, hybrid agent systems.\nAs we will see in the next section, Petri nets' properties-particularly their ability to model concurrent processes, handle heterogeneous data types, and support both loose and tight coupling-make them ideal for implementing the communication spaces framework, which addresses the coordination challenges identified in our discussion of multi-agent and Centaurian paradigms."}, {"title": "4 Communication Spaces and Agent Architectures", "content": "The contrasting requirements of multi-agent and Centaurian paradigms-maintaining clear boundaries in one case while enabling deep integration in the other-call for a unified framework that can support both approaches. While Petri nets provide a strong formal foundation for modeling processes and synchronization, we need to extend their capabilities to capture the complexities of human-AI collaboration fully. We introduce communication spaces as this unifying framework, building on Petri nets while adding specialized structures for handling varied communication styles, heterogeneous capabilities, and adaptive protocols."}, {"title": "4.1 Foundations and Rationale", "content": "Petri nets excel at modeling token flows among well-defined places, but in hybrid human-AI systems, we face additional challenges. Agents differ widely in perceiving, processing, and sharing information: humans communicate through natural language, AI systems through structured data, and physical devices through sensor signals. Moreover, these communication patterns must adapt dynamically as the system shifts between loose coupling (characteristic of multi-agent systems) and tight integration (needed in Centaurian configurations). These requirements call for a framework that can accommodate asymmetric interaction capabilities while supporting both autonomous operation and deep cognitive fusion."}, {"title": "A Mini-Example of Heterogeneous Agents", "content": "Consider a team as shown in Figure 3 with a human operator, an LLM-based conversational agent, and a swarm of simple robotic drones. The human and LLM exchange strategic decisions via text-based conversation, while the drones communicate real-time state updates in a lightweight sensor-data format. Additionally, the human observes a video feed of drone activity. Each of these \"channels\" imposes different synchronization rules, data formats, and reliability guarantees precisely the nuances communication spaces help formalize."}, {"title": "4.2 Core Ideas of Communication Spaces", "content": "Communication spaces group interactions into three conceptual layers [8]: surface, observation, and computation. Whether in a multi-agent (MAS) or a Centaurian system, each space encapsulates a coherent set of interaction rules and constraints."}, {"title": "4.3 Implementing Communication Spaces", "content": "Each of the three spaces can be mapped onto subsets of Petri net places (or sub-nets) with typed tokens indicating relevant data, tasks, or events. This approach partitions a net into self-contained \"zones\", each governed by specific interaction rules and constraints.\nMulti-Agent Architecture In a multi-agent system, surface agents manage user interactions and detect events from the environment, acting as the system's interface with external inputs. Observer agents ensure smooth communication by transforming and routing messages, enabling coherent collaboration among autonomous components. Meanwhile, executive agents operate within the computational space, executing specialized tasks and maintaining a partial system state to support overall functionality.\nA key benefit is clear boundary maintenance and scalability: each agent type can be added or removed with minimal impact on the others, provided communication protocols remain consistent.\nCentaurian Architecture In Centaurian systems, a unified interface layer merges human and AI sensory input within the surface space, creating a seamless interaction point. A shared observation layer acts as a bridge between human and AI representations, facilitating smooth cognitive fusion. Meanwhile, a hybrid processing layer integrates human reasoning with algorithmic methods, allowing for emergent collective problem-solving.\nSuch architectures thrive on adaptability, where boundaries are permeable and agents can fluidly exchange roles or data to optimize performance."}, {"title": "4.4 Formal Representation with Colored Petri Nets:\nCommunication Space Petri Net", "content": "We extend colored Petri nets to create a Communication Space Petri net, where places are partitioned into surface, observation, and computation categories. Tokens carry types or \"colors\" corresponding to data formats or message semantics relevant to each space. Transition guards incorporate rules for agent-specific capabilities (e.g., a color set may denote \"human text command\" vs. \"drone sensor data\")."}, {"title": "4.5 Implementation Considerations", "content": "Implementing communication spaces requires careful attention to the following aspects: State management ensures consistent updates across distributed agents or fused human-AI modules, especially in time-sensitive environments. Resource allocation deals with balancing computational load, bandwidth, and potential real-time constraints. Protocol adaptation supports switching between agent autonomy (MAS) and deeper integration (Centaurian) based on changing system goals or unexpected conditions."}, {"title": "5 Use Case 1: Multi-agent Interaction with Satellite and\nSwarm Robots", "content": "This use case demonstrates how our theoretical framework accommodates both multi-agent and Centaurian paradigms within a complex system. While predominantly exhibiting multi-agent characteristics through its distributed architecture, the system also incorporates Centaurian elements in specific human-AI interaction points. Figure 8 illustrates the data flow in an experiment with a semi-centralized coordinated swarm of robots, using both \"rigid\" optimization algorithms and \"flexible\" intervention through a large language model (LLM). This setup encapsulates a true multi-agent HCI interaction, integrating human operators, conversational AI, the satellite control unit, and swarm robots."}, {"title": "5.1 System Overview", "content": "The system exemplifies the multi-agent paradigm through its composition of distinct, autonomous components: a satellite control unit, a swarm of robotic agents, an LLM, and human operators.\nEach agent maintains its own decision-making capabilities while participating in the collective process. The satellite provides centralized coordination and processes the data collected by the swarm, while the LLM offers strategic advice on algorithm selection and parameter tuning. Human operators, rather than being mere supervisors, function as autonomous agents who monitor these interactions and intervene to guide the system through complex decision-making processes."}, {"title": "5.2 Integration with LLM and Human Operators", "content": "The integration layer demonstrates a hybrid approach combining both paradigms. Following the multi-agent paradigm, the LLM interacts with the blockchain and control algorithms as an independent agent, providing a flexible intelligence layer. However, the interaction between human operators and the LLM exhibits Centaurian characteristics, as it creates a tightly coupled decision-making unit where human judgment and AI recommendations are seamlessly integrated.\nThis dual-nature system remains robust and adaptive through both the independent operation of its components and the synergistic human-AI integration points."}, {"title": "5.3 Practical Applications", "content": "The practical applications highlight how the two paradigms complement each other. In path optimization and adaptive problem solving, the system primarily operates in a multi-agent mode, with the LLM functioning as an independent advisor. However, when human operators review and implement suggestions, the interaction shifts temporarily to a Centaurian mode, creating a tightly integrated human-AI decision-making unit.\nFor example, in path planning, the LLM can suggest changes to curve parameters based on detected obstacles or changes in terrain, maintaining its agent independence, while human operators review these suggestions through a Centaurian-style deep integration process."}, {"title": "5.4 Human-Agent Collaboration", "content": "The collaboration model in this system demonstrates the value of supporting both paradigms. While the overall architecture follows multi-agent principles, with human operators functioning as independent agents within the system, their interaction with the LLM and control systems often exhibits Centaurian characteristics. This flexible approach allows the system to leverage both the independence and coordination capabilities of the multi-agent paradigm and the deep integration benefits of the Centaurian approach. The result is a robust system that protects against the risks of automation while actively leveraging the unique strengths of both humans and machines, pushing the boundaries of what technology can achieve through this dual-paradigm approach."}, {"title": "6 Use Case 2: Large Action Models (LAMs) through\nFeedback Loops on HCI Interactions", "content": "While our first use case emphasized the multi-agent paradigm, this second use case demonstrates a stronger inclination toward the Centaurian approach, while still maintaining some multi-agent characteristics."}, {"title": "6.1 System Overview", "content": "The LAM framework at RABBIT API exemplifies the Centaurian paradigm through its core components: the LAM node, human users, and the HCI system, together with representations of the challenges this integration addresses and of the user experience. Rather than maintaining strict boundaries between these components, they evolve together through their interactions. The LAM node, while functioning as a computational agent, achieves a level of integration with human users that transcends traditional multi-agent relationships, using neuro-symbolic programming to create a unified decision-making entity."}, {"title": "6.2 Neuro-Symbolic Integration", "content": "The neuro-symbolic approach of LAM represents a key Centaurian characteristic: the seamless integration of different processing paradigms. By combining neural network capabilities for pattern recognition with symbolic AI for rule-based processing, LAM demonstrates how apparently distinct computational approaches can be unified into a coherent whole, much like the human-AI integration central to Centaurian systems. This integration enables complex task execution across multiple applications with high accuracy and minimal latency."}, {"title": "6.3 Human-Agent Interaction", "content": "The human-LAM interaction epitomizes the Centaurian ideal of symbiotic integration. Through a natural language-based user interface that processes spoken or typed commands, the system achieves a level of interaction where the boundaries between human intent and machine execution become increasingly blurred. The feedback system allows LAM to learn from each interaction, adapting its models to better match user preferences a hallmark of Centaurian systems where components evolve together rather than merely coordinating their actions."}, {"title": "6.4 Practical Applications and Challenges", "content": "LAM's approach to task management and problem solving demonstrates the advantages of Centaurian integration over purely multi-agent coordination. By anticipating user needs and providing proactive solutions, it shows how deep human-AI integration can surpass the capabilities of systems where components merely coordinate their actions. However, this tight integration brings unique challenges, including ensuring AI decision transparency and maintaining privacy challenges characteristic of Centaurian systems where the boundaries between human and artificial components become less distinct."}, {"title": "6.5 Key Takeaways", "content": "The feedback loops in LAM exemplify the evolutionary nature of Centaurian systems. Unlike multi-agent systems where components maintain fixed identities and interact through stable protocols, LAM's feedback loops create a dynamic system where human and artificial components grow together, continuously refining their interaction patterns. This approach to HCI demonstrates"}, {"title": "7 Related Work", "content": "The implementation of agent interactions has been explored through various computational approaches. Basic interaction protocols have been formalized for distributed computation [5], while more complex patterns have been developed for knowledge combination [4,11] and distributed problem-solving [10]. Recent work has focused on higher-level interactions, particularly in intention recognition [25,28], which is becoming increasingly important as artificial agents grow more sophisticated in their ability to understand and respond to human goals.\n[26] presents an innovative unsupervised clustering theory using self-organizing maps to classify MVC patterns based on software quality metrics in a continuous interaction process. Their goal is to identify quality features that determine the similarity of MVC applications without architectural bias. [36] use interdependence theory to determine whether convergence has a positive or negative effect in a competition between human and artificial agents, as in system dynamics models.\nMobile applications, as well as satellite and swarm robotics, have grown significantly in recent years, with architectural patterns playing a critical role in their success. To ensure the correct implementation of an MVC pattern, [21] propose an automated technique that analyzes and detects architectural issues using data from Software Development Kits (SDKs) specifically targeted at mobile code bases. To enhance coordination and security in swarm robotic systems, [17] introduce a semi-centralized framework that integrates blockchain technology, featuring a centralized control unit that coordinates the swarm, while blockchain technology ensures secure and decentralized data storage and communication. [33] take the opposite approach, extending pattern descriptions with a System of Systems (SoS) model to apply interactive dynamics to an MVC pattern.\nUsing the Internet of Things (IoT) paradigm as a complex distributed system that shares a 3-tier architecture consisting of embedded nodes, gateways that connect an embedded network to the wider internet, and data services in servers or the cloud, [48] propose a novel approach for programming applications across 3-tiers using a distributed extension of the MVC architecture. Also in the IoT context, with a focus on the gaming/sports arena, [18] sees potential for entertainment robots to recognize human posture through artificial intelligence. By detecting and monitoring users' movements in real time, these robots provide a personalized and interactive entertainment experience. [15] also discuss the interplay between games with personality and artificial intelligence. They use the term \"virtual human\" to describe a computer program that simulates a human in some aspects.\nWith the ubiquity of AI applications, HCI research is increasingly integrating these approaches, demonstrating that AI and HCI are mutually beneficial when"}, {"title": "8 Conclusion and Future Work", "content": "We have outlined a framework that systematically considers how human and artificial agents interact within a networked ecosystem. By articulating HCI not just as human-computer interactions but as dynamic interactions among different agents within a flexible, multi-agent system, we have highlighted the potential for more complex and effective interactions. The application of our multi-agent model to two different use cases- -satellite and swarm robotics, and Large Action Models (LAMs)\u2014has not only validated our theoretical constructs, but also underscored the practical implications of such interactions.\nIn the first use case, we observed how a semi-centralized system, enabled by a large language model, could improve decision-making processes and adaptability through real-time data-driven adjustments. This setup not only ensures efficiency, but also preserves human oversight, which is critical for managing complex, dynamic environments.\nThe second use case involving LAMs further highlighted the potential of integrating advanced computational agents to predict and shape human-computer interactions. Using neuro-symbolic programming, the LAM framework demonstrated its ability to refine its operations based on continuous feedback from human interactions, promoting an adaptive and responsive HCI system.\nWe have thus established a foundational framework for the design and analysis of HCI systems that views these interactions as a complex interplay among multiple agents. This approach allows us to better understand and harness the collective capabilities of different agents, thereby enhancing the system's adaptability and resilience. Importantly, this perspective aligns with emerging technology paradigms that foster a deep understanding and integration of human agents. Indeed, our contribution can be seen as a systemic evolution in design approaches, emphasizing the front-end to enhance usability and effectiveness. This contrasts with, but complements, systemic approaches that prioritize the back-end for security and robustness, as illustrated by [50]. Together, these perspectives synergistically improve the overall architecture of HCI systems. Ultimately, our study enriches the understanding of HCI as a dynamic and evolving field characterized by the complex yet symbiotic relationships between humans and machines. As we delve deeper into these interactions, the possibility of transforming human-computer interactions into more seamless and effective experiences becomes increasingly tangible. This promises a future in which the human and artificial dimensions are not merely aligned but fully integrated in a balanced and complementary manner. Such integration could pave the way for a new era of collective and hybrid intelligence where humans and machines work closely together-potentially the most significant and immediate outcome of current rapid technological advances."}, {"title": "Conflict of Interest Statement", "content": "The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest."}, {"title": "Author Contributions", "content": "All authors listed have made equal, substantial, direct, and intellectual contributions to the work and have approved it for publication."}]}