{"title": "Adaptive control of reaction-diffusion PDEs via neural operator-approximated gain kernels", "authors": ["Luke Bhan", "Yuanyuan Shi", "Miroslav Krstic"], "abstract": "Neural operator approximations of the gain kernels in PDE backstepping has emerged as a viable method for implementing controllers in real time. With such an approach, one approximates the gain kernel, which maps the plant coefficient into the solution of a PDE, with a neural operator. It is in adaptive control that the benefit of the neural operator is realized, as the kernel PDE solution needs to be computed online, for every updated estimate of the plant coefficient. We extend the neural operator methodology from adaptive control of a hyperbolic PDE to adaptive control of a benchmark parabolic PDE (a reaction-diffusion equation with a spatially-varying and unknown reaction coefficient). We prove global stability and asymptotic regulation of the plant state for a Lyapunov design of parameter adaptation. The key technical challenge of the result is handling the 2D nature of the gain kernels and proving that the target system with two distinct sources of perturbation terms, due to the parameter estimation error and due to the neural approximation error, is Lyapunov stable. To verify our theoretical result, we present simulations achieving calculation speedups up to 45\u00d7 relative to the traditional finite difference solvers for every timestep in the simulation trajectory.", "sections": [{"title": "1. Introduction", "content": "First introduced in [1], a new methodology has emerged for employing neural operator(NO) approximations of the gain kernels in PDE backstepping. The key advantage of this approach compared to traditional implementations of the kernel, as well as other approximation approaches such as [2], is the ability to produce the entire kernel in mere milliseconds for the online control law while the training process is decoupled to be precomputed offline. Therefore, perhaps the most valuable application of the neural operator approximated gain kernels is in adaptive control, where the kernel needs to be recomputed, online, for every new estimate of the plant parameter. This was first explored for hyperbolic PDEs in [3]. In this work, we extend the results of [3] to parabolic PDEs where the technical challenge arises both in the Lyapunov analysis of a more complex perturbed target system as well as in the computational implementation, where the neural operator must map functions on an 1D domain into a 2D triangle. Furthermore, from an application perspective, this paper enables real-time adaptive control of reaction-diffusion PDEs which govern a series of real-world applications including, but not limited to, chemical reactions [4], tubular reactor systems [5], multi-agent and social networking systems [6, 7], and Lithium-ion batteries [8].\nPDE backstepping for adaptive control. The first study of adaptive control for parabolic PDEs was in [9, 10, 11] which extended the adaptive backstepping results for nonlinear ODES [12] via three methodologies - the Lyapunov approach, passive identifier approach, and swapping approach. In this work, we focus on the Lyapunov approach which appears to exhibit superior transient performance as mentioned in [9] and [13]. This was then extended into hyperbolic PDEs which refer the reader to the rich set of literature [14, 15, 16, 17, 18]. In [19] the authors then explored delay-adaptive control which was later extended in [13] for unknown delays. For more complex systems, we refer the reader to adaptive backstepping schemes across a variety of challenging plants including coupled hyperbolic PDEs [20], coupled hyperbolic PDE-PDE-ODE cascades [21] and the wave equation [22]. Lastly, we mention the extensions into event-triggered adaptive control in [23], [24], [25].\nPaper organization. We first introduce, in Section 2, the nominal adaptive backstepping control scheme for reaction-diffusion PDEs to expose the reader to the type of result we aim to maintain under the neural operator kernel approximation. We then explore and prove a series of properties for the gain kernel and its time derivative in Section 3 in order to apply the universal approximation theorem [40] in Section 4, to prove the existence of neural operators for approximating the gain kernels to arbitrary desired accuracy. We then state and prove our main result namely a Lyapunov analysis of the full system with the NO approximated kernel, adaptive update law, and the backstepping control law in Section 5. Lastly, in Section 6, we conclude by presenting simulations demonstrating the efficacy of the proposed neural operator approximated control scheme on a parabolic PDE resembling molecular interactions in chemical reactions.\nNotation. We use $||\\cdot||_{\\infty}$ for the infinity-norm, that is $||u||_{\\infty} = \\sup_{x\\in[0,1]} |u(x)|$. Furthermore, we use $||u(x, t)||$ to be the spatial $L^2$ norm, $||u(x, t)|| = \\sqrt{\\int_0^1 u^2(x, t)dx}$. We use $C^n(U; V)$ to indicate functions from set U into set V that have n continuously differentiable derivatives."}, {"title": "2. Nominal controller for PDE backstepping", "content": "We begin by introducing the following 1D Reaction-Diffusion PDE with a spatially varying coefficient $\\lambda(x)$,\n$u_t(x, t) = u_{xx}(x, t) + \\lambda(x)u(x, t), \\quad x \\in (0, 1),$ (1)\n$u(0, t) = 0,$ (2)\n$u(1, t) = U(t),$ (3)\nwhere $u(x, t)$ is defined for all $t\\in \\mathbb{R}_+$ with initial condition $u(x, 0) = u_0(x) \\in H^2(0, 1)$ that is compatible with the boundary conditions. Further, $\\lambda(x) : [0, 1] \\rightarrow \\mathbb{R}$ is an unknown, spatially varying coefficient function that will be estimated online. The standard approach for controlling the PDE (1), (2), (3) is to introduce the backstepping transformation\n$w(x, t) = u(x, t) - \\int_0^x k(x, y)u(y, t)dy, $ (4)\nto convert the system into the stable target system\n$w_t = w_{xx},$ (5)\n$w(0, t) = 0,$ (6)\n$w(1, t) = 0,$ (7)\nunder the feedback control law\n$U(t) = \\int_0^1 k(1, y)u(y, t)dy.$ (8)\nTo ensure the transformation (4) converts (1), (2), (3) into (5), (6), (7), the kernel function k must satisfy\n$k_{xx}(x, y) - k_{yy}(x, y) = \\lambda(y)k(x, y), \\quad (x, y) \\in \\tilde{T},$ (9)\n$k(x, 0) = 0,$ (10)\n$k(x, x) = \\frac{1}{2} \\int_0^x \\lambda(y)dy,$ (11)\nwhere we define the triangular domains $\\tilde{T} = \\{0 < y \\leq x < 1\\}$ and $T = \\{0 \\leq y \\leq x \\leq 1\\}$. Note, the gain kernel, which is the solution to an infinite dimensional PDE that is not analytically solvable, is explicitly an operator mapping from functions of the spatially varying $\\lambda(x)$ into the PDE solution function $k(x, y)$. However, in the adaptive control case, $\\lambda(x)$ is unknown and thus needs to be estimated online via some approximation $\\hat{\\lambda}(x)$. Thus, the PDE kernel in (9), (10), (11) becomes a mapping from $\\hat{\\lambda}(x) \\leftrightarrow k(x, y)$ where the solution requires recomputation at every timestep. In what follows, we will denote the PDE solution"}, {"title": "3. Properties of gain kernel PDE", "content": "for $\\hat{\\lambda}$ at time t by $k(x, y, t)$, and denote the neural operator approximation of the PDE solution for $\\hat{\\lambda}$ at time t by $\\hat{k}(x, y, t)$. Further, to ensure the mapping from u into the w system is well defined, recall the inverse backstepping transformation,\n$u(x, t) = w(x, t) + \\int_0^x l(x, y)u(y, t)dy,$ (12)\nwhere we refer to l as the inverse backstepping kernel. Then, following Chapter 11 of [41], the estimator of $\\lambda$ is given by\n$\\hat{\\lambda}_t(x, t) := Proj(\\hat{\\lambda}(x, t), \\gamma(x, t)),$ (13)\n$\\gamma(x, t) := \\frac{u(x, t)}{\\gamma_1 + ||w||^2} \\times \\left(w(x, t) - \\int_x^1 k(y, x, t)w(y, t)dy\\right)$ (14)\nwhere $\\gamma, \\bar{\\lambda} > 0$ are constants, $||\\lambda||_{\\infty} \\leq \\bar{\\lambda}$, and the projection is defined as\n$Proj(a, b) := \\begin{cases}0, & \\text{if } b = \\bar{\\lambda} \\text{ and } ab > 0\\\\a, & \\text{otherwise}\\end{cases}$ (15)\nThus, noting that we introduced a bound on $\\lambda$, we formally state the only required assumption on $\\lambda$ as the following.\nAssumption 1. $\\lambda \\in C^1([0, 1])$ and there exists a constant $\\bar{\\lambda} > 0$ such that $|\\lambda|_\\infty \\leq \\bar{\\lambda}$.\nSuch an assumption is standard in the backstepping literature as $\\lambda \\in C^1([0,1])$ is needed to ensure well-posedness of the kernel PDE (9), (10), (11) and the bounded assumption is needed for the adaptive control estimate. Now, we state the main theorem for adaptive control of parabolic PDEs under the exact gains, which we aim to emulate under the neural operator approximated gains in this paper: under the feedback control scheme with the adaptive estimate $\\hat{\\lambda}$ and true kernel solution k, the closed-loop system is regulated asymptotically to 0.\nTheorem 1. ([41] Stabilization under exact adaptive control scheme). There exists a $\\gamma^*$ such that for $\\gamma\\in (0, \\gamma^*)$, for any initial estimate $\\hat{\\lambda}(x, 0) \\in C^1([0, 1])$ with $|\\hat{\\lambda}(x, 0)|_\\infty \\leq \\bar{\\lambda}$ and for any initial condition $u_0 \\in H^2(0, 1)$ compatbile with boundary conditions, the classical solution of the closed loop system $(u, \\lambda)$ consisting of the plant (1), (2), (3), the update law (13), (14), and the control law (8) is bounded for all $(x, t) \\in [0, 1] \\times \\mathbb{R}_+$ such that\n$\\lim_{t\\rightarrow\\infty} \\sup_{x\\in[0,1]} |u(x, t)| = 0.$ (16)\nIn order to approximate the gain kernel PDE for various $\\hat{\\lambda}$ estimates, we need to prove that both the time and spatial derivatives are well-defined, continuous and bounded. The exact use of these Lemmas will become clear in invoking the universal operator approximation theorem in Section 4 and the proof of our main result in Section 5. We will employ the standard approach of successive approximations on the integral representation of the kernel PDE. Thus, recall the integral representation of the kernel PDE as\n$G(\\xi, \\eta, t) = \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda(s, t)ds + \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_{\\eta}^{s} \\lambda(\\sigma, t) G(\\sigma, \\tau, t) d\\sigma d\\tau,$ (17)\nwhere\n$\\xi = x + y, \\eta = x - y,$ (18)\n$G(\\xi, \\eta, t) = k(\\frac{\\xi+\\eta}{2}, \\frac{\\xi-\\eta}{2}, t), \\quad (x, y) \\in T.$ (19)\nThen, for the reader's convenience, we briefly recall the following lemma whose proof is well known in the backstepping literature.\nLemma 1. ([42] Existence and bound for gain kernel.) Let $\\bar{\\lambda} > 0$ such that $|\\lambda|_\\infty \\leq \\bar{\\lambda}$ for all $(x, t) \\in [0, 1] \\times \\mathbb{R}_+$. Then, for any fixed $t \\in \\mathbb{R}_+$, and for every $\\lambda(x, t) \\in C^1 ([0, 1])$ at fixed t, the kernel governed by the PDE (9), (10), (11) with function $\\lambda$ has a unique $C^2(T)$ solution with the bound\n$||k(x, y, t)|| \\leq \\bar{\\lambda} e^{\\bar{\\lambda} \\epsilon^{\\bar{\\lambda} x}}.$ (20)\nLemma 2. (Existence and bound for $k_x(x, x, t)$) Let $\\bar{\\lambda} > 0$ such that $|\\lambda|_\\infty \\leq \\bar{\\lambda}, \\forall(x, t) \\in [0, 1] \\times \\mathbb{R}_+$. Then, for any fixed $t \\in \\mathbb{R}_+$, $k_x(x, x, t) \\in C^1[0, 1]$ with the bound\n$||k_x(x, x, t)|| \\leq \\frac{1}{2} \\bar{\\lambda}.$ (21)\nProof. One can show the existence and continuity of this derivative on all of $(x, y) \\in T$ by differentiating (17) and using the method of successive approximations. However, we only require a bound at the boundary condition $y = x$ and thus, one has\n$\\frac{\\partial}{\\partial x} k(x, x, t) = \\frac{1}{2} \\lambda(y, t)dy \\leq \\frac{1}{2} \\bar{\\lambda},\\quad \\forall (x, t) \\in [0, 1] \\times \\mathbb{R}_+.$ (22)\nLemma 3. (Existence and bound for $k_t(x, y, t)$) Let $\\bar{\\lambda} > 0$ such that $|\\lambda|_\\infty \\leq \\bar{\\lambda}, \\forall(x, t) \\in [0, 1] \\times \\mathbb{R}_+$. Then, for every $\\lambda(x, t) \\in C^1([0, 1] \\times \\mathbb{R}_+)$, $k_t(x, y, t)$ has a unique $C^0(T\\times \\mathbb{R}_+)$ solution with the bound\n$||k_t(t)|| \\leq M||\\lambda_t(t)||, \\forall t \\geq 0, $ (23)\n$M = e^{2\\bar{\\lambda}} (1 + \\lambda e^{2\\bar{\\lambda}}).$ (24)\nProof. We begin by showing existence and continuity. Differentiating (17) with respect to t yields\n$G_t(\\xi, \\eta, t) = \\frac{1}{4} \\lambda_t \\left(\\frac{\\xi+\\eta}{2}, t\\right)ds + \\left[\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)G(\\sigma, s, t)\n+ \\lambda \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)G_t(\\sigma, s, t)\\right]dsd\\sigma.$ (25)"}, {"title": "4. Neural operator approximation of the gain kernel", "content": "Define the iterate sequence\n$G_0(\\xi, \\eta, t) := -\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda_t \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)ds + \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)G(\\sigma, s, t),$ (26)\n$G^{n+1}(\\xi, \\eta, t) := \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_{\\eta}^{\\sigma} \\lambda(\\sigma, s, t) G^n(\\sigma, s, t) d\\sigma d\\tau,$ (27)\nand consider the difference sequence\n$\\Delta G^0 = G^1 = -\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda_t \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)ds + \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)G(\\sigma, s, t),$ (28)\n$\\Delta G^{n+1} = G^{n+1} - G^n = \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_{\\eta}^{\\sigma} \\lambda(\\sigma, s, t) \\Delta G^n(\\sigma, s, t) d\\sigma d\\tau.$ (29)\nThen it is clear $G_t = \\sum_{n=0}^{\\infty} \\Delta G^n$. We aim to show this series uniformly converges. For notational simplicity, we introduce the coefficient $\\alpha(T)$ which specifies the max of $\\lambda$ and its derivative up to a time T.\n$\\alpha(T) := \\max \\sup_{t\\in[0,T]} \\{\\|\\lambda_t(t)\\|, \\|\\lambda(t)\\|\\}.$ (30)\nThen, for any $T \\geq t$, the difference sequence satisfies the following bounds\n$|\\Delta G^0| \\leq \\frac{1}{4} \\alpha(T) (\\eta + \\xi) = \\frac{1}{2} \\alpha(T) x, $ (31)\n$|\\Delta G^n| \\leq \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_{\\eta}^{\\sigma} \\frac{\\alpha(T)^n (\\sigma + s)^n}{n!} ds d\\tau = \\frac{\\alpha(T)^{n+1} (\\eta + \\xi)^n}{n!}, $ (32)\nThe first bound comes from applying (30) to (28). The second bound can be shown via induction. Assume (32) holds for $G^n$. Then, substituting into (29) yields\n$|\\Delta G^{n+1}| \\leq \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_{\\eta}^{\\sigma} \\frac{\\lambda}{2} (\\frac{\\alpha(T)^{n+1} (\\sigma + s)^n}{n!}) ds d\\tau$\n$\\leq \\frac{\\lambda \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_{\\eta}^{\\sigma} \\frac{\\alpha(T)^{n+1} (T + \\xi)^n}{n!} ds d\\tau$ (33)\n$\\leq \\frac{\\lambda \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\frac{\\alpha(T)^{n+1} (\\sigma + s)^{n+1}}{n!} ds d\\tau$ (34)\n$\\leq \\lambda \\frac{\\alpha(T)^{n+2} (\\eta + \\xi)^{n+1}}{(n + 1)!}$ (35)\nThus, the series $\\sum_{n=0}^{\\infty} \\Delta G^n$ uniformly converges on $T\\times[0, T]$ for $T\\geq t$. Since there is a one-to-one correspondence between $G_t$ and $k_t$, this implies the existence and continuity of $k_t$ on $T\\times \\mathbb{R}_+$.\nOne could find a bound for $k_t$ by analyzing the convergence bound on the series in (31), (32), but for the future Lyapunov analysis, it is easier to work with a bound on $k_t$ in terms of the estimate $\\lambda$.\nFrom (25), the triangle inequality, Cauchy Schwarz, and the substitution of (20) we obtain\n$|G_t(\\xi, \\eta, t)| = \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda_t(t)ds + \\left[\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda(\\frac{\\xi+\\eta}{2}, s, t) G(\\sigma, s, t) + \\lambda (\\frac{\\xi+\\eta}{2}, s, t) dsd\\sigma\\right]$\n$\\leq \\|\\lambda_t(t)\\| + \\|\\lambda\\|^2 e^{\\lambda x}$ (36)\n$\\leq \\|\\lambda_t(t)\\| + \\|\\lambda\\|^2 e^{\\lambda x} \\int_{\\eta}^{\\xi} \\int_{0}^{\\sigma} |G_t(\\sigma, s, t)|dsd\\sigma.$ (37)\nNow, applying Fubini's theorem and noting the integrand is always non-negative yields\n$|G_t(\\xi, \\eta, t)| = \\|\\lambda_t(t)\\| + \\|\\lambda\\|^2 e^{\\lambda x}$\n$\\leq \\|\\lambda_t(t)\\| + \\|\\lambda\\|^2 e^{\\lambda x} \\int_{\\eta}^{\\xi} \\int_{0}^{\\sigma} |G_t(\\sigma, s, t)|dsd\\sigma$\n+ \\int_{\\eta}^{\\xi} \\int_{0}^{\\sigma} |G_t(\\sigma, s, t)|dsd\\sigma.$ (38)\n$\\leq \\|\\lambda_t(t)\\| + \\|\\lambda\\|^2 e^{\\lambda x} + \\int_{\\eta}^{\\xi} \\int_{0}^{\\sigma} |G_t(\\sigma, s, t)|dsd\\sigma.$ (39)\nNow we apply the Wendroff inequality (see Appendix A) first given in the book by Beckenbach and Bellman [43] as an extension to Gronwall's inequality in 2D to obtain the following result for $G_t$\n$|G_t(\\xi, \\eta, t)| \\leq \\|\\lambda_t(t)\\| (1 + \\lambda e^{2\\lambda}) e^{2\\bar{\\lambda}}.$ (40)\nThe final result then holds for $k_t$ given $G_t$ is an equivalent integral representation of the time derivative of the kernel PDE.\nWe aim to approximate the kernel mapping $\\lambda \\rightarrow k$ by a neural operator and thus begin by presenting a general universal approximation theorem for the nonlocal neural operator - a unifying framework that encompasses a series of operator learning architectures including both the popular FNO [44] and DeepONet [45] frameworks and their extensions such as NO-MAD [46] and the Laplace NO [47]. We give the details of the nonlocal-neural operator architecture in Appendix B (as well as its connections to FNO and DeepONet) and refer the reader to [40] for further details.\nTheorem 2. ([40, Theorem 2.1] Neural operator approximation theorem.) Let $\\Omega_u \\subset \\mathbb{R}^{d_u}$ and $\\Omega_v \\subset \\mathbb{R}^{d_v}$ be two bounded domains with Lipschitz boundary. Let $\\mathcal{G} : C^0(\\Omega_u; \\mathbb{R}^{d_{u2}}) \\rightarrow C^0(\\Omega_v; \\mathbb{R}^{d_{v2}})$ be a continuous operator and fix a compact set"}, {"title": "5. Stability under NO Approximated Gain Kernel", "content": "$\\mathcal{K} \\subset C^0(\\Omega_u; \\mathbb{R}^{d_{u2}})$. Then for any $\\epsilon > 0$, there exists a nonlocal neural operator $\\hat{\\mathcal{G}} : \\mathcal{K} \\rightarrow C^0(\\Omega_u; \\mathbb{R}^{d_{v2}})$ such that\n$\\sup_{y \\in \\Omega_v} |\\mathcal{G}(u)(y) - \\hat{\\mathcal{G}}(u)(y)| \\leq \\epsilon,$ (41)\nfor all values $y \\in \\Omega_v$.\nFor readers familiar with the previous explorations of neural operators in approximating kernel gain functions [1], we provide the following corollary for DeepONet.\nCorollary 1. (DeepONet universal approximation theorem; first proven in [48]) Consider the setting of Theorem 2. Then, for all $\\epsilon > 0$, there exists $p^*, m^*$ such that for all $p \\geq p^*, m \\geq m^*$, there exists neural network weights $\\phi^{(k)}, \\theta^{(k)}$ such that the neural networks (see [1], section III for definition) $g_N$ and $f_N$ in the DeepONet given by\n$G_N(u_m)(y) = \\sum_{k=1}^{N} g^N(u; \\phi^{(k)}) f^N(y; \\theta^{(k)}),$ (42)\nsatisfy\n$\\sup_{y \\in \\Omega_v} |\\mathcal{G}(u)(y) - G_N(u)(y)| \\leq \\epsilon,$ (43)\nfor all values $y \\in \\Omega_v$.\nNote that Theorem 2 has two main assumptions. First, the input function space is required to be compact. Second, the operator mapping to be approximated must be continuous. We now introduce the operator for $k$ that we aim to approximate, noting that the operator output includes $k$ as well as its derivatives $k_x, k_{xx}, k_t$ which is needed for proving stability under the neural operator approximation.\nDefine the set of functions\n$\\mathcal{K} = \\{k \\in C_{tx}^0 C^1_{xx}(T \\times \\mathbb{R}_+)|k(x, 0, t) = 0\\}, \\quad \\forall x \\in [0, 1], t \\in \\mathbb{R}_+.\\}$ (44)\nLet $\\Lambda$ be a compact set of $C^0([0, 1])$ with the supremum norm such that for every $\\lambda \\in \\Lambda, \\|\\lambda\\|_{\\infty} < M$ and $\\Lambda$ is $R$-Lipschitz where $M, R > 0$ are constants that can be as large as needed. Then, denote the operator $\\mathcal{K} : \\Lambda \\rightarrow \\mathcal{K}$ as\n$\\mathcal{K}(\\lambda(\\cdot, t)) := k(x, y, t) .$ (45)\nFurther, define the operator $\\mathcal{M} : \\Lambda \\rightarrow \\mathcal{K} \\times C^1([0, 1] \\times \\mathbb{R}_+) \\times C_{x}^1 C^0_{tx}(T \\times \\mathbb{R}_+)$ such that\n$\\mathcal{M}(\\lambda(\\cdot, t)) := (k(x, y, t), k_t(x, t), k_2(x, y, t)),$ (46)\nwhere\n$\\kappa_1(x, t) = \\frac{\\partial}{\\partial x} (k(x, x, t)) + \\lambda_t(x, t),$ (47)\n$\\kappa_2(x, y, t) = k_{xx}(x, y, t) - k_{yy}(x, y, t) - \\hat{\\lambda}(y, t) k(x, y, t) .$ (48)\nFor the Lyapunov analysis that follows, we also need to include $k_t$ in our approximation. Thus, define the operator $\\mathcal{K}_1 : \\Lambda^2 \\rightarrow C_{x}^1 C^0_{tx}(T \\times \\mathbb{R}_+)$ such that\n$\\mathcal{K}_1(\\lambda(\\cdot, t), \\lambda_1(\\cdot, t)) := k_t(x, y, t),$ (49)\nwhere under the transformations $\\xi = \\frac{x+y}{2}, \\eta = \\frac{x-y}{2}, \\forall (x, y) \\in T$, we have $k_t$ is the solution to the integral equation\n$\\hat{k} \\left(\\frac{\\xi+\\eta}{2}, \\frac{\\xi-\\eta}{2}\\right) = G_t(\\xi, \\eta, t),$ (50)\n$0 = -\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda_t \\left(\\frac{\\xi+\\eta}{2}, s, t\\right)ds$\n+ \\left[\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\lambda(\\frac{\\xi+\\eta}{2}, s, t) G(\\sigma, s, t)\n+ \\lambda (\\frac{\\xi+\\eta}{2}, s, t) \\hat{G}(\\sigma, s, t)\\right]dsd\\sigma,$ (51)\nwhere G is given by (17).\nLastly, consider the composition of the operators $\\mathcal{M}$ and $\\mathcal{K}_1$ given as $\\mathcal{N} : \\Lambda^2 \\rightarrow \\mathcal{K} \\times C^1([0, 1] \\times \\mathbb{R}_+) \\times C_{x}^1 C^0_{tx}(T \\times \\mathbb{R}_+) \\times C_{x}^1 C^0_{tx}(T \\times \\mathbb{R}_+)$ such that\n$\\mathcal{N}(\\lambda(\\cdot, t), \\hat{\\lambda}_1(\\cdot, t)) := (\\mathcal{M}(\\hat{\\lambda}(\\cdot, t)), \\mathcal{K}_1(\\lambda(\\cdot, t), \\hat{\\lambda}_1(\\cdot, t))).$ (52)\nWe now aim to approximate the operator $\\mathcal{N}$ which requires continuity of the operator. First, we note that $\\mathcal{M}$ was shown to be continuous in [32, Theorem 4]. Thus, it suffices to show $\\mathcal{K}_1$ is continuous.\nLemma 4. Fix $t \\geq 0$. Let $\\lambda_1(\\cdot, t), \\lambda_2(\\cdot, t) \\in \\Lambda$ and $k_1 = \\mathcal{K}(\\lambda_1), k_2 = \\mathcal{K}(\\lambda_2)$. Then, $\\mathcal{K}_1$ is Lipschitz continuous. Explicitly, there exists a Lipschitz constant $\\Lambda > 0$ such that\n$\\left\\|\\frac{\\partial}{\\partial t} \\mathcal{K}\\left(\\lambda_1, \\frac{\\partial}{\\partial t} \\lambda_1\\right) - \\frac{\\partial}{\\partial t} \\mathcal{K}\\left(\\lambda_1, \\frac{\\partial}{\\partial t} \\lambda_2\\right)\\right\\| \\leq \\Lambda \\|\\lambda_1 - \\lambda_2\\|_{\\infty}.$ (53)\nProof. Let $\\lambda_1, \\lambda_2 \\in \\Omega$. Let $k_1 = \\mathcal{K}(\\lambda_1), k_2 = \\mathcal{K}(\\lambda_2)$ and denote $G_1, G_2$ the corresponding transforms of $k_1, k_2$ in the integral form $G_i = k_t(\\frac{\\xi+\\eta}{2}, \\frac{\\xi-\\eta}{2}), i \\in \\{1, 2\\}$. Then, we have the following\n$\\delta \\lambda = \\lambda_1 - \\lambda_2,$ (54)\n$\\delta G = G_1 - G_2,$ (55)\n$\\delta \\hat{G} = -\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\delta \\lambda_t(t) ds$\n+ \\left[\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\delta \\lambda_t(t) G(\\sigma, s, t)\n+ \\lambda_2(\\sigma, s, t) \\delta \\hat{G}(\\sigma, s, t) + \\delta \\lambda (\\sigma, s, t) G_t(\\sigma, s, t) \\right] dsd\\sigma.$ (56)\nIn the proof that follows, will omit the arguments on $\\lambda$ and $G$ for conciseness. Define the sequence\n$\\delta G_0 = \\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\int_0^{\\sigma} \\lambda_2 \\delta Gdsd\\sigma,$ (57)\n$\\delta G^{n+1} = -\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\delta \\lambda_t(t) ds$\n+ \\left[\\frac{1}{4} \\int_{\\frac{\\xi-\\eta}{2}}^{\\frac{\\xi+\\eta}{2}} \\delta \\lambda_t(t) G_1 + \\lambda_2 \\delta \\hat{G}+ \\delta \\lambda \\frac{\\partial G_1}{\\partial t} dsd\\sigma.$ (58)"}]}