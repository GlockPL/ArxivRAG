{"title": "An Edge AI System Based on FPGA Platform for Railway Fault Detection", "authors": ["Jiale Li", "Yulin Fu", "Dongwei Yan", "Sean Longyu Ma", "Chiu-Wing Sham"], "abstract": "As the demands for railway transportation safety increase, traditional methods of rail track inspection no longer meet the needs of modern railway systems. To address the issues of automation and efficiency in rail fault detection, this study introduces a railway inspection system based on Field Programmable Gate Array (FPGA). This edge AI system collects track images via cameras and uses Convolutional Neural Networks (CNN) to perform real-time detection of track defects and automatically reports fault information. The innovation of this system lies in its high level of automation and detection efficiency. The neural network approach employed by this system achieves a detection accuracy of 88.9%, significantly enhancing the reliability and efficiency of detection. Experimental results demonstrate that this FPGA-based system is 1.39x and 4.67\u00d7 better in energy efficiency than peer implementation on the GPU and CPU platform, respectively.", "sections": [{"title": "I. INTRODUCTION", "content": "The safety and reliability of railway infrastructure are paramount given the global dependency on rail transportation for cargo and passenger movement [1]\u2013[4]. Traditional rail inspection methods are increasingly unable to meet the high standards required by modern rail systems. The limitations of manual inspection-such as its time-consuming nature and susceptibility to human error-necessitate more sophisticated, automated solutions [5]\u2013[7].\nRecent advancements in railway track fault detection leverage the capabilities of deep learning and neural networks [8]\u2013[12] to enhance the accuracy and efficiency of inspections. Techniques like CNNs have been proven to substantially improve fault detection performance by enabling real-time processing and analysis of complex image data captured from rail tracks [13], [14]. These methods have improved the detection rates and significantly reduced the need for human intervention, thus minimizing the risk of errors and oversights during inspections. Furthermore, the integration of FPGA technology with AI-based systems has opened new avenues for developing real-time, efficient, and highly reliable rail inspection systems [15]. FPGA platforms offer the necessary speed and flexibility to process large volumes of image data, making them ideal for applications requiring real-time analytics and decision-making [16].\nThis study builds on these technological advancements and proposes a novel FPGA-based rail inspection system. This system utilizes a combination of cameras and lightweight CNN models to detect and classify track surface defects with high accuracy. The application of FPGA primarily aims to ensure energy-efficient processing while maintaining high operational efficiency [17]\u2013[20], thereby significantly enhancing the system's capability to handle data on the fly and respond swiftly to detected anomalies in rail inspection. The main contributions of this study are as follows:\n\u2022 An edge AI system based on an FPGA platform for railway fault detection is proposed to replace tedious and inefficient manual inspection.\n\u2022 We designed a lightweight neural network for detecting rail faults, which achieved an accuracy of 88.9%.\n\u2022 According to our experiment, our work can achieve an energy efficiency of 3.41 GOPS/W, which is 1.39x and 4.67x more efficient than modern GPU and CPU, respectively."}, {"title": "II. SYSTEM ARCHITECTURE", "content": "The architecture of the edge AI system we propose, as depicted in Figure 1, consists of four main components: a camera, an FPGA platform, an ESP8266 module, and a computer equipped with a graphical user interface. The system operates by capturing track images via the camera. These images are then processed on the FPGA platform, which accelerates CNN inference for efficient defect detection. Detected results are transmitted wirelessly using the ESP8266 module and displayed on the computer's graphical interface for user interaction."}, {"title": "III. METHODOLOGY", "content": "The images in the dataset were collected from two sources: the Railway Track Fault Detection dataset and the Surface Defect Detection dataset. The combined dataset was then split into training, testing, and validation sets, with 88% (587 images) used for training, 6% (40 images) for testing, and 6% (40 images) for validation. The camera captures 128x128 pixel colour images, with each pixel value normalized from the original range of [0,255] to [0,1]. Figure 2 displays sample input images to the model and their corresponding confidence levels. The confidence levels indicate how confident the model is in its classification of each image. A higher confidence level suggests a more accurate classification by the model. In addition, during the training phase, image augmentation techniques such as blurring, noise addition, random flipping, and rotation are applied to enhance variability within the dataset."}, {"title": "B. CNN Model Design", "content": "As shown in Figure 3, this study employs a lightweight neural network to recognize patterns in rails and fasteners. Convolution layers are utilized to extract features from objects while pooling layers help reduce the dimensions of feature maps. Normalization layers and shortcut connections are incorporated to enhance the stability and efficiency of network training. A global average pooling layer is used to transform two-dimensional feature maps into one-dimensional feature vectors. Fully connected layers classify the images into distinct categories. The softmax layer converts input values into a probability distribution, and the ReLU activation function is used throughout the model to introduce non-linearity and facilitate efficient training."}, {"title": "C. Hardware Design", "content": "The neural network inference is implemented on the FPGA side, while other tasks are handled by other modules. The FPGA's Programmable Logic (PL) part plays a pivotal role in enabling the concurrent handling of multiple operations, significantly accelerating the matrix and vector calculations critical for neural network inference. This design uses loop tiling, layered quantization, and operator fusion to optimize processing speed. In the system's architecture, the Processing System (PS) part of the FPGA is responsible for interfacing with the camera to capture images. Upon detecting any damage on the railway tracks, the PS issues a command to the ESP8266, which then transmits the location and time data to the graphical user interface."}, {"title": "IV. EXPERIMENTAL RESULTS", "content": "The image recognition system is implemented on the Xilinx FPGA MPSoC ZCU104. This board uses the Zynq UltraScale+ XCZU7EV-2FFVC1156 MPSoC, which contains an embedded ARM CPU. ZCU104 is supported by PYNQ, which can import and invoke the accelerator as an overlay in a Python environment. This study uses Vivado 2022.2 for FPGA block design and synthesis, Vitis HLS 2022.2 for synthesizing C/C++ functions into register transfer level (RTL) code, and PYNQ for interaction between the PS and PL. A mixed encoding method utilizing both 12-bit and 22-bit fixed-point numbers was employed, achieving an accuracy of 88.9%, which is equivalent to that of 32-bit floating-point representations. Due to the mixed layered quantization, there is a significant reduction in hardware resource costs while maintaining nearly unchanged accuracy."}, {"title": "V. CONCLUSIONS", "content": "This study presented a novel FPGA-based edge AI system designed for the efficient and reliable detection of faults in railway infrastructure. The system integrates a lightweight neural network, achieving a commendable accuracy of 88.9%. Notably, the system's energy efficiency significantly surpasses similar implementations on GPU and CPU platforms, demonstrating improvements of 1.39\u00d7 and 4.67\u00d7, respectively. These results underscore the benefits of using FPGA platforms for real-time, energy-efficient railway track inspection, especially in edge scenarios where power consumption and processing speed are critical."}]}