{"title": "A Survey of Retrieval Algorithms in Ad and Content Recommendation Systems", "authors": ["Yu Zhao"], "abstract": "This survey examines the most effective retrieval algorithms utilized in ad recommendation and content recommendation systems. Ad targeting algorithms rely on detailed user profiles and behavioral data to deliver personalized advertisements, thereby driving revenue through targeted placements. Conversely, organic retrieval systems aim to improve user experience by recommending content that matches user preferences. This paper compares these two applications and explains the most effective methods employed in each.", "sections": [{"title": "Introduction", "content": "In the age of digital information, the ability to deliver personalized organic content and advertisements has become a cornerstone of user engagement and revenue generation strategies. Ad recommendation and content recommendation systems, powered by sophisticated retrieval algorithms, are at the forefront of this endeavor. Ad targeting aims to maximize user engagement and conversion rates by delivering highly personalized advertisements based on detailed user profiles and behavioral data. On the other hand, organic retrieval systems enhance user experience by suggesting content that aligns with users' interests and preferences.\nThis paper provides a brief survey of retrieval algorithms used in ad recommendation and content recommendation systems. It explores the underlying mechanisms of these algorithms, including content-based filtering, collaborative filtering, and hybrid systems. The two-tower model, a prominent deep learning architecture in recommendation systems, is examined in detail, along with its training, inference, and retrieval processes. Additionally, the paper discusses the challenges and considerations associated with these systems, such as the cold start problem, data quality, and privacy concerns. By comparing ad targeting and organic retrieval, the survey aims to shed light on their unique objectives, data utilization methods, and impact on user experience.\nWhile we do not explore this idea further in this paper, it is worth noting that the retrieval methods discussed bear a strong resemblance to Retrieval-Augmented Generation (RAG) [Hu and Lu, 2024] for large language models (LLMs). In RAG, a retrieval component is used to fetch relevant documents or data points, which are then used to inform and enhance the generation process of the LLM. Similarly, in recommendation systems, retrieval methods serve to bring forth pertinent user and item data, which can then be leveraged by the recommendation algorithms to produce highly personalized and accurate recommendations. This parallel highlights the potential for cross-pollination of techniques between retrieval-based recommendation systems and LLM-enhanced retrieval-augmented generation models."}, {"title": "Ad Targeting Models", "content": "Ad targeting is a vital tool for modern digital marketing, aiming to deliver personalized advertisements to specific audiences to maximize engagement and conversion rates. One of the key methodologies behind ad targeting is the use of machine learning and inverted index, a data structure widely used in information retrieval systems to efficiently match user profiles with relevant ads. We will explore the concept of ad targeting in detail, including its implementation through and various targeting strategies such as age, gender, re-targeting, keyword targeting, behavioral targeting, and contextual targeting. [Yan et al., 2009] proved the effectiveness of behavior targeting through controlled experimentation."}, {"title": "Inverted Index", "content": "Ad targeting leverages the inverted index [Scholer et al., 2002] to enhance the efficiency and accuracy of delivering personalized advertisements. An inverted index is a data structure that maps content (such as ads) to its associated keywords or attributes, enabling fast and efficient search and retrieval operations.\nIn the context of ad targeting, an inverted index works as follows:\n1. Index Creation: The first step involves creating an index from the available ads. Each ad is broken down into a set of keywords or attributes that describe its content and target audience. These keywords can include demographic information, interests, behaviors, and contextual relevance.\n2. User Profiling: Users are profiled based on their online activities, such as search queries, browsing history, social media interactions, and purchase behavior. Each user's profile is similarly decomposed into a set of keywords or attributes that represent their interests and preferences.\n3. Matching Process: When a user visits a website or engages with a platform, the ad targeting system retrieves the user's profile and matches it against the inverted index. This process involves looking up the keywords associated with the user in the index to find ads that have matching or closely related keywords.\nThis approach allows for real-time ad targeting, ensuring that users see ads that are most relevant to their current interests and needs. The inverted index structure is highly efficient, enabling quick lookup and retrieval operations, even for large datasets."}, {"title": "Age Targeting", "content": "Age targeting involves delivering ads to users based on their age group. This strategy is particularly effective for products and services that are age-specific, such as toys for children, educational resources for teenagers, or retirement plans for seniors.\n\u2022 Data Collection: Age data is often collected during user registration processes, through user-provided information, or inferred from behavior and interests (e.g., browsing history, content consumption).\n\u2022 Indexing: Ads targeting specific age groups are indexed with age-related keywords. For example, an ad for a college savings plan might be indexed with keywords related to young adults and parents.\n\u2022 Matching: The inverted index matches the user's age profile with relevant ads, ensuring that users see advertisements tailored to their age group."}, {"title": "Gender Targeting", "content": "Gender targeting aims to deliver ads based on the user's gender, a crucial demographic factor for many products and services.\n\u2022 Data Collection: Gender information is collected through user profiles, social media interactions, and inferred from behavior (e.g., types of products viewed or purchased).\n\u2022 Indexing: Ads are indexed with gender-related keywords. For instance, an ad for men's grooming products would be indexed with keywords related to male users.\n\u2022 Matching: The system matches the user's gender profile with relevant ads, ensuring that users receive advertisements that are likely to be more appealing to their gender."}, {"title": "Re-targeting", "content": "Re-targeting, also known as remarketing, focuses on users who have previously interacted with a website or app but did not complete a desired action, such as making a purchase.\n\u2022 Data Collection: User interaction data is collected through cookies, tracking pixels, and other tracking technologies. This data includes pages visited, products viewed, and actions taken.\n\u2022 Indexing: Ads are indexed based on the specific actions users took. For example, an ad for a product left in a shopping cart might be indexed with keywords related to that product and the action of adding to the cart.\n\u2022 Matching: When a user who has been re-targeted returns to the site or browses the web, the system matches their previous interactions with relevant ads, reminding them of the products or services they showed interest in."}, {"title": "Keyword Targeting", "content": "Keyword targeting involves delivering ads based on specific keywords that users have entered in search queries or content they are currently viewing.\nLarge language models (LLMs) can significantly enhance keyword targeting by rewriting and expanding keywords, thereby improving the precision and reach of ad campaigns. LLMs like GPT-4 can generate a diverse set of keyword variations that capture different ways users might express their search intent. For example, an LLM can transform a single keyword like \"running shoes\" into multiple related phrases such as \u201cathletic footwear,\u201d \u201cjogging sneakers,\u201d and \"marathon trainers.\u201d This keyword expansion allows advertisers to cover a broader range of search queries, increasing the likelihood of matching user intent and improving ad relevance. Additionally, LLMs can refine and optimize keywords based on contextual understanding, ensuring that the generated keywords align with the overall theme and target audience of the ad campaign. [Zhao et al., ] applied LLM in this fashion to analyze legal documents and produce numerical features from text data. By leveraging LLMs for keyword rewriting, advertisers can enhance their targeting strategies,"}, {"title": "Behavioral Targeting", "content": "Behavioral targeting is a key technique used in ad recommendation systems. It involves tracking users' online behavior to deliver personalized ads.\n\u2022 Data Collection: Behavioral data is collected through user activities such as browsing history, search queries, social media interactions, and purchase behavior. This data is often aggregated over time to build comprehensive user profiles.\n\u2022 Indexing: Ads are indexed based on behavioral patterns. For example, an ad for outdoor equipment might be indexed with keywords related to activities like hiking, camping, and adventure sports.\n\u2022 Matching: The system analyzes the user's behavior and matches it with relevant ads. For instance, if a user frequently searches for hiking gear, the system will show ads for outdoor equipment. This method increases the likelihood of ad engagement by presenting users with ads that match their interests and needs.\nBehavioral targeting improves ad relevance and effectiveness by focusing on users' demonstrated interests and preferences rather than relying solely on static demographic data."}, {"title": "Contextual Targeting", "content": "Contextual targeting involves displaying ads based on the content of the webpage a user is currently viewing.\n\u2022 Data Collection: Contextual data is collected from the content of the webpage, including text, images, and metadata. Natural language processing (NLP) and other content analysis techniques are used to understand the context.\n\u2022 Indexing: Ads are indexed with keywords related to specific contexts. For example, an ad for gym memberships might be indexed with keywords related to fitness, health, and exercise.\n\u2022 Matching: The system matches the content of the webpage with relevant ads. For instance, an article about fitness might feature ads for gym memberships or sportswear. This method ensures that ads are relevant to the user's immediate context, enhancing their effectiveness.\nContextual targeting is particularly effective for capturing user attention when they are already engaged with related content, increasing the chances of ad interaction and conversion."}, {"title": "Retrieval and Ad Targeting", "content": "Ad targeting focuses on delivering personalized advertisements to users based on their profiles and behaviors, aiming to maximize engagement and conversion rates. Organic retrieval, on the other hand, emphasizes improving user experience by recommending content or products that align with users' preferences without any direct monetary influence."}, {"title": "Organic Retrieval", "content": "Organic retrieval, also known as organic recommendation systems, aims to enhance user experience by providing personalized content or product recommendations without direct monetary influence. These systems analyze user data to suggest items that align with users' preferences and behaviors.\nOrganic retrieval systems are used in various domains, including e-commerce, streaming services, and social media platforms. For example, Netflix's recommendation system suggests movies and shows that align with users' viewing habits, while Spotify's Discover Weekly playlist introduces users to new music based on their listening history.\nOrganic retrieval systems face several challenges, including data sparsity, the cold start problem, and maintaining diversity in recommendations. Data sparsity occurs when there is insufficient data to make accurate recommendations, while the cold start problem arises with new users or items that lack historical data. Maintaining diversity is crucial to prevent the system from becoming too narrow in its suggestions, which can lead to user fatigue."}, {"title": "Mechanisms of Organic Retrieval", "content": "\u2022 Content-Based Filtering\nContent-based filtering focuses on the characteristics of items. For instance, if a user has shown interest in science fiction books, the system will recommend other books in the same genre.\n\u2022 Collaborative Filtering\nCollaborative filtering makes recommendations based on the preferences of similar users. It identifies patterns and correlations among users' behaviors and suggests items that users with similar tastes have liked. There are two main types of collaborative filtering: user-based and item-based.\n\u2022 Hybrid Systems\nMany modern recommendation systems use a hybrid approach, combining both content-based and collaborative filtering techniques to improve accuracy and relevance. These systems can provide more nuanced recommendations by leveraging the strengths of both methods."}, {"title": "Two-Tower Network for Retrieval", "content": "The two-tower model, also known as the dual-tower model, is a deep learning architecture widely used in recommendation systems for content retrieval. It expands the matrix factorization model [Koenigstein et al., 2012] by introducing diverse types of features into the model. It consists of two separate neural networks (towers): one for encoding user features and the other for encoding item features. The key idea behind this model is to project users and items into a shared latent space where their compatibility can be measured. [Agarwal and Gurevich, 2012] provides a introductory explanation on top-k retrieval using model based recommendation."}, {"title": "Architecture of the Two-Tower Model", "content": "The two-tower model comprises two main components:\nUser Tower\nThe user tower is designed to capture and encode user features. These features can include demographic information, browsing history, past interactions, and explicit preferences. The user tower typically consists of multiple layers of neural networks that transform the raw input features into a dense vector representation in the latent space. The architecture may include:\n\u2022 Embedding Layers: These layers are used to convert categorical features (e.g., user ID, gender, age group) into dense vectors.\n\u2022 Fully Connected Layers: These layers perform non-linear transformations on the embedded features, capturing complex relationships and interactions between different user attributes.\n\u2022 Normalization and Regularization: Techniques such as batch normalization and dropout are employed to improve the model's generalization ability and prevent overfitting.\nItem Tower\nThe item tower operates similarly to the user tower but focuses on encoding item features. These features can include item metadata (e.g., title, category, tags), content characteristics (e.g., text, images), and contextual information (e.g., time of interaction, device type). The item tower also transforms the raw input features into a dense vector representation in the same latent space as the user tower. The architecture may include:\n\u2022 Embedding Layers: These layers convert categorical item features into dense vectors.\n\u2022 Feature Extractors: For content-rich items (e.g., text or images), specialized layers such as convolutional neural networks (CNNs) or recurrent neural networks (RNNs) may be used to extract meaningful features.\n\u2022 Fully Connected Layers: These layers transform the embedded features into dense vectors.\n\u2022 Normalization and Regularization: Similar techniques as in the user tower are applied to enhance the model's performance."}, {"title": "Training the Two-Tower Model", "content": "Training the two-tower model involves optimizing the latent representations such that the distance or similarity between user and item vectors accurately reflects their compatibility. The following steps outline the training process:\nPairing Users and Items\nDuring training, pairs of users and items are sampled from historical interaction data. Positive pairs consist of users and items with known interactions (e.g., a user watched a video), while negative pairs are sampled to represent non-interactions (e.g., a user did not watch a video). This sampling strategy helps the model learn to distinguish between relevant and irrelevant items for each user. Optimizations such as [Yang et al., 2020] can be applied to address the imbalance between positive and negative examples.\nLoss Function\nA common loss function used in training the two-tower model is the cross-entropy loss or the pairwise ranking loss. These loss functions measure the model's ability to correctly predict the relevance of items for users. The pairwise ranking loss, for example, aims to ensure that the score for positive pairs is higher than that for negative pairs by a certain margin.\nOptimization\nThe model parameters are optimized using gradient-based optimization algorithms such as stochastic gradient descent (SGD) or Adam. During each training iteration, the gradients of the loss function with respect to the model parameters are computed and used to update the weights of the neural networks.\nWhen attention-based architectures, such as Transformers, are employed within each tower of the two-tower model, the training process demands significantly more computational resources. Attention mechanisms enable the model to focus on relevant parts of the input data, improving its ability to capture intricate relationships between users and items. However, this comes at the cost of increased computational complexity, as each attention layer involves numerous matrix multiplications and operations that scale quadratically with"}, {"title": "Two-Tower Inference and Retrieval", "content": "Once the two-tower model is trained, it can be used for real-time content retrieval. The inference process involves:\nUser and Item Encoding\nFor a given user, the user tower generates a dense vector representation based on the user's features. Similarly, the item tower generates dense vector representations for all candidate items.\nSimilarity Computation\nThe similarity between the user vector and each item vector is computed using a similarity metric such as the dot product or cosine similarity. This step ranks the items based on their relevance to the user.\nTop-N Recommendation\nThe top-N items with the highest similarity scores are selected and recommended to the user. This approach ensures that the recommendations are tailored to the user's preferences and behaviors."}, {"title": "Advantages of the Two-Tower Model", "content": "The two-tower model offers several advantages for organic content retrieval:\nScalability\nThe decoupled architecture of the two-tower model allows for efficient scaling. Since the user and item towers are independent, new users and items can be added without retraining the entire model. This scalability is particularly beneficial for platforms with large and dynamic content libraries.\nFlexibility\nThe model's architecture is highly flexible and can accommodate various types of features and content modalities. Whether the items are text-based (e.g., articles), image-based (e.g., photos), or a combination of different media, the two-tower model can be adapted to encode and retrieve them effectively.\nPersonalization\nBy learning to represent users and items in a shared latent space, the two-tower model can capture complex and nuanced relationships between user preferences and item characteristics. This capability enables highly personalized recommendations that align with individual user interests."}, {"title": "Challenges and Considerations", "content": "While the two-tower model is powerful, it also presents certain challenges and considerations:\nCold Start Problem\nThe cold start problem refers to the difficulty of making accurate recommendations for new users or items with little or no historical interaction data. Addressing this issue may require incorporating additional features or leveraging transfer learning techniques. [Xin et al., 2021] applied multiple learning scheme to two-tower neural networks to address the cold start problem.\nData Quality\nThe effectiveness of the two-tower model relies heavily on the quality and quantity of the input data. Inaccurate or sparse data can lead to poor model performance and suboptimal recommendations. Ensuring high-quality data collection and preprocessing is crucial."}, {"title": "Possible Improvements to Two-Tower Model", "content": "Improving the traditional two-tower model can be achieved through several innovative approaches, such as implementing a multi-task two-tower model [Zhang and Yang, 2018] and developing a three-tower architecture.\nThe multi-task two-tower model enhances the original framework by enabling it to handle multiple tasks simultaneously. This is accomplished by sharing the representation space between different tasks, allowing the model to learn from varied data sources and contexts. For instance, in recommendation systems, this approach can combine tasks like click-through rate prediction and user engagement metrics, leading to more robust and generalized user embeddings. By leveraging shared representations, the multi-task model not only improves prediction accuracy but also enhances the model's ability to generalize across different tasks, ultimately providing a more comprehensive understanding of user preferences and behaviors.\nThe three-tower model introduces an additional tower to the traditional architecture, aimed at integrating more diverse information sources or auxiliary data. In the context of a recommendation system, while the original two towers might represent user and item embeddings, the third tower could incorporate contextual information such as temporal dynamics or location-based data. This extra tower helps to capture more complex interactions and dependencies that are not easily modeled with just two towers. By enriching the model with additional dimensions of data, the three-tower architecture can significantly improve the accuracy and relevance of recommendations. Furthermore, this approach allows for more fine-grained personalization by considering a broader spectrum of influencing factors, thereby enhancing the overall user experience and satisfaction."}, {"title": "Comparing Ad Targeting and Organic Retrieval", "content": "On a high level, ad targeting shares many similarities with organic retrieval, as both processes are fundamentally about matching user intent with the most relevant content. In ad targeting, algorithms analyze vast amounts of user data to predict and deliver ads that are most likely to engage the user, just as search engines analyze web content to rank and display the most relevant search results. Both systems rely heavily on data processing, pattern recognition, and machine learning to continually refine their accuracy and effectiveness. Whether through analyzing search queries and web content or user behavior and demographic information, the ultimate goal is to create a seamless and personalized user experience by presenting the most pertinent information, be it an advertisement or an organic search result. This convergence in methodology underscores the growing intersection between targeted advertising and content retrieval technologies.\nIndex-based ad targeting is similar to the inverted index commonly used in organic retrievals. Both techniques rely on the creation and use of a structured index to efficiently locate and serve relevant information. In ad targeting, advertisers build indices that categorize users based on their behaviors, interests, and demographics. This allows for precise targeting of ads to users who are most likely to be interested in the advertised product or service. Similarly, in organic retrieval, search engines use an inverted index to map content to keywords. This index allows the search engine to quickly retrieve and rank relevant documents in response to a user's query, ensuring that the most pertinent content appears in search results.\nTargeting options such as interest targeting and keyword targeting in advertising are akin to the different channels used to retrieve content in organic searches. Interest targeting involves showing ads to users based on their demonstrated interests and behaviors online, much like how a search engine retrieves content related to a user's query by analyzing the context and relevance of indexed pages. Keyword targeting, on the other hand, focuses on specific words or phrases, similar to how search engines match user queries with the indexed content that contains those keywords. Both advertising and organic retrieval systems aim to connect users with content that aligns with their interests or search intents, optimizing the relevance and effectiveness of the information delivered.\nNext, we will outline some key differences between the two retrieval systems."}, {"title": "Objectives", "content": "The primary objective of ad targeting is to drive revenue by delivering targeted advertisements to users. The focus is on optimizing ad placements to increase click-through rates and conversions, thereby generating revenue for both the platform and advertisers.\nIn contrast, the primary goal of organic retrieval is to enhance user satisfaction and retention by providing relevant and engaging content. These systems aim to improve user experience and foster long-term loyalty by helping users discover new items that align with their preferences."}, {"title": "Data Utilization", "content": "Ad targeting relies heavily on detailed user profiling and behavioral data. This includes demographic information, browsing history, search queries, social media activity, and purchase behavior. The aim is to build comprehensive user profiles that can be used to deliver highly personalized ads.\nOrganic retrieval systems also use user behavior data, but the focus is on historical interactions and preferences rather than demographic profiling. These systems analyze users' past behaviors to make personalized content or product recommendations."}, {"title": "Impact on User Experience", "content": "Ad targeting can significantly impact user experience by delivering highly relevant ads that match users' interests and needs. However, it can also lead to ad fatigue if users are bombarded with too many ads. Additionally, privacy concerns arise as users become more aware of how their data is being collected and used.\nOrganic retrieval systems aim to enhance user experience by providing personalized content or product recommendations. These systems help users discover new items and engage more deeply with the platform. However, challenges such as data sparsity and the cold start problem can affect the accuracy and relevance of recommendations."}, {"title": "Revenue Generation", "content": "Ad targeting is primarily focused on revenue generation. By delivering targeted ads, platforms can charge advertisers higher rates for ad placements, resulting in increased revenue. Real-time bidding further maximizes ad revenue by selling ad impressions to the highest bidder.\nOrganic retrieval systems do not directly generate revenue through ads. Instead, they enhance user engagement and retention, which can indirectly lead to increased revenue. For"}, {"title": "Privacy and Ethical Concerns", "content": "Ad targeting raises significant privacy concerns as it involves extensive data collection and profiling. Users may feel uncomfortable with the level of personal information being tracked and used for advertising purposes. There are also ethical concerns regarding the manipulation of user behavior through targeted ads [Goldfarb and Tucker, 2011].\nOrganic retrieval systems also collect and analyze user data, but the focus is on improving user experience rather than monetizing user profiles. While privacy concerns still exist, they are generally less pronounced compared to ads."}, {"title": "Metrics and Experimentation", "content": "Content recommendation systems primarily focus on metrics that reflect user engagement and retention, such as Monthly Active Users (MAU), Daily Active Users (DAU), and user retention rates. These systems aim to enhance the user experience by delivering personalized content that aligns with individual preferences, thereby encouraging more frequent and prolonged interactions with the platform. The ultimate goal is to increase user loyalty and satisfaction, leading to sustained growth in user base and activity levels.\nIn addition to these high-level metrics, more granular metrics like clicks, likes, and follows are also crucial. These metrics are particularly sensitive to algorithmic updates and provide immediate feedback on user engagement with the recommended content. They are closely monitored to gauge the effectiveness of the recommendation algorithms and to make timely adjustments that can further enhance user interaction and satisfaction.\nIn contrast, ad systems operate within a three-party ecosystem involving advertisers, the platform, and users. Each party has distinct interests and metrics for success. Advertisers are primarily concerned with metrics such as Cost Per Click (CPC) and conversion rates, which indicate the effectiveness and efficiency of their ad spend. The platform, on the other hand, measures revenue generated from ad placements, aiming to maximize overall profitability. Users' interests lie in the relevance and non-intrusiveness of the ads they encounter; high relevance can enhance user experience, while irrelevant or excessive ads can detract from it. Balancing these three sets of interests is crucial for the success of ad systems."}, {"title": "Controlled Experimentation Framework", "content": "To evaluate and optimize both content recommendation and ad systems, controlled A/B experimentation frameworks are commonly used [Kohavi and Longbotham, 2015]. In this setup, users are randomly divided into control and treatment groups. The control group continues to experience the system as usual, while the treatment group is exposed to a new feature or change being tested. By comparing the behavior and outcomes of these two groups, the impact of the new feature can be accurately assessed. [Knijnenburg and Willemsen, 2015]\nHowever, A/B experiments in these systems come with unique challenges. For user experiments in content recommendation, there is a risk of traffic stealing, where the treatment group may inadvertently attract users who would otherwise belong to the control group. This can skew the results, making it difficult to measure the true effect of the experiment. Metrics such as clicks, likes, and follows are particularly sensitive to algorithmic updates and need to be closely monitored during these experiments to assess the immediate impact on user engagement.\nWhen experimenting with content creators or advertisers, it's essential to separate users and creators to avoid \"ghost experimentation\" differences. This means ensuring that users and content creators (or advertisers) do not cross-contaminate the control and treatment groups. For instance, if an experiment is run with a subset of content creators, the audience for these creators should be evenly distributed between control and treatment groups to ensure accurate measurement of the experiment's impact.\nFor ad experiments, it is also critical to ensure that both the treatment and control groups have the same budget. This helps to maintain a fair comparison between the two groups and ensures that any differences in performance can be attributed to the experimental changes rather than budget discrepancies."}, {"title": "Conclusion", "content": "The landscape of retrieval algorithms in ad recommendation and content recommendation systems is vast and continually evolving. This survey has highlighted the critical role these algorithms play in enhancing user engagement, driving revenue, and improving overall user satisfaction. The two-tower model and its emerging variants, such as the multi-task and"}]}