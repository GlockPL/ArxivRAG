{"title": "MATHEMATICAL REASONING AND THE COMPUTER.", "authors": ["KEVIN BUZZARD"], "abstract": "Computers have already changed the way that humans do math-ematics: they enable us to compute efficiently. But will they soon be helping us to reason? And will they one day start reasoning themselves? We give an overview of recent developments in neural networks, computer theorem provers and large language models.", "sections": [{"title": "1. USING COMPUTERS TO COMPUTE", "content": "1.1. Humans as computers. In the early 1600s the Scottish mathematician John Napier constructed the first tables of logarithms. In his book ( [Nap89], p46) he reflected that \"the learned, who perchance may have plenty of pupils and comput-ers\", would be able to take things further. You might think that having plenty of computers was rather uncommon in the 1600s, but back then the word \"computer\" referred to a human who would calculate.\nThe achievements of human computers should not be underestimated. Let us just give one example. Two such computers, Felkel and Vega, published tables of the factorizations of the positive integers up to 408000 in 1776 and 1777\u00b9. As a consequence it became possible to create tables of the number of primes less than N, for N in this range. Based on these tables, Legendre conjectured in the late 1700s that the number of primes less than N was approximated by a function of the form N/(Clog(N) + D). In the 1808 edition of his book \u201cEssai sur la th\u00e9orie des nombres\" [Leg08] on number theory he conjectured that C = 1, and the statement of the prime number theorem was born (although the young Gauss had apparently independently come up with the same conjecture some years earlier). The theorem remained open for 100 years and its resolution, using complex analysis, by Hadamard and de la Vall\u00e9e Poussin was a triumph of late 19th century mathematics.\n1.2. Machines as computers. Early electronic computers were the size of a house and orders of magnitude less powerful than a modern phone. By the time the University of Cambridge bought an EDSAC II machine in 1957 they were small enough to fit into a large room, and in those pre-transistor days they relied on bulky vacuum tubes (or \u201cvalves\u201d, as they were called in the UK) as switches. During the day, the EDSAC II was being used by oceanographers to do calculations which led the way to modern plate tectonic theory, but in the evenings the young Peter Swinnerton-Dyer would show up with a pile of punch cards and hand them to the operator; the machine would then spend all night counting the number of solutions Np to equations such as y\u00b2 = x\u00b3 + x + 37 modulo prime numbers p < 100 at"}, {"title": "2. NEURAL NETWORKS IN MATHEMATICS", "content": "In this section we discuss various uses of neural networks in mathematics. We start by giving a basic description of deep learning, one of the things a neural network can be used for.\n2.1. Introduction to deep learning. The kind of problem which deep learn-ing (or just \"learning\") attempts to solve is the following. We have two finite-dimensional real vector spaces V = Rm and W = R"}, {"title": "2.2. Neural networks and knot theory.", "content": "Theorem (Davies, Juh\u00e1sz, Lackenby, Tomasev). There exists a constant c such that for any hyperbolic knot K,\n|2\u03c3(K) \u2013 slope(K)| \u2264 cvol(K) inj(K)-3.\nThe theorem relates the signature \u03c3(K) of a knot to its slope, volume and in-jectivity radius. For more information about this result, I would recommend Lack-enby's talk at the 2023 IPAM conference at UCLA [Lac]. Also highly recommended is Ernie Davis' rebuttal [Dav21] of the work, who argues that the role of deep learn-ing in this story has been over-stated and that a conventional statistical analysis would probably have sufficed. Davis also has something to say about our next example, coming from representation theory."}, {"title": "3. AUTOMATED AND INTERACTIVE THEOREM PROVERS", "content": "Our second example of new uses of computers in mathematics is an overview of the capabilities of ATPs (automated theorem provers) and ITPs (interactive theorem provers). These are both systems which know or can be told various axioms of a theory, and have a language rich enough to express theorems in the theory. The job of an automated theorem prover is to attempt to automatically generate proofs of theorems in the theory. The job of an interactive theorem prover is to offer a powerful front end where humans can type in their own proofs of theorems and the system will check that they are valid.\nDespite the superficial similarities between ATPs and ITPs, in practice they are used to perform very different tasks. Let us first give a brief overview of ATPs.\n3.1. Automated theorem provers. Automated theorem provers are typically used to prove (possibly very complex) theorems in a simple theory, perhaps using first order logic. An example might be the first order theory of groups. The system is given the axioms for a group, and a formula which is true in all groups, for example (ab)-1 = b-1a-1, and it attempts to prove the theorem from the axioms.\n3.2. Interactive theorem provers. Like automated theorem provers, interactive theorem provers (ITPs) know the rules of a logic and the axioms of a theory, and can be used to prove theorems in the theory. However typically now the logic and theory are richer and more complex, making it practical to formalise cutting-edge"}, {"title": "4. LARGE LANGUAGE MODELS", "content": "Large language models are neural network-based systems which provide a prob-ability distribution as an answer to the question \"what is the next token in this sequence of tokens?\" (where a token might be a word or perhaps a letter or num-ber). Applications of this technique include things such as \"write a paragraph of text answering a given question\" and \"write computer code in the language of an ITP proving a given theorem\". Recent breakthroughs in this area have got the systems to the state where they are capable of writing coherent, correct and rel-evant English sentences, something which a few years ago was a hard unsolved problem. Right now the most famous of these systems is undoubtedly OpenAI's ChatGPT [Ope], a large language model which one can access for free on the inter-net and which seems to have opened the eyes of the general public to the current power of these systems.\nIf you ask ChatGPT to prove that there are infinitely many primes, then (because it is trained on the internet) it will happily rattle off some variant of Euclid's proof. It may get a little confused in its treatment of the case where 1 + \u03a0-1 Pi is\ncomposite, but one could imagine that a random proof that one finds on the internet\nmight also be slightly confused at this point. However, what happens when we ask\nit for a proof of the much harder result that there are infinitely many primes which\nend in 7? Like a first year undergraduate faced with this question, it thinks about\nthe proof which it knows of the infinitude of primes, and tries to generalise it to\nthis situation. Unfortunately it is not true that an arbitrary number of the form\n10 \u041f\u0456\u0440\u0456 + 7 must have a prime factor which ends in 7, but this does not stop the\nmodel from confidently arguing that this is the case, like the undergraduate might.\nWorse - if asked to prove that there are infinitely many even numbers which end in\n7, the system might well try a similar strategy and write a nonsensical paragraph."}, {"title": "5. SUMMARY", "content": "Machines have already changed mathematics, by helping us to compute more quickly; this happened decades ago. But now we seem to be at the dawn of a new era, where computers are able to engage with the concept of proof. Neural networks have helped human mathematicians to discover new theorems and new counterex-amples. ITPs have helped humans to simplify the proofs of recent results in the literature, and in some areas of mathematics (for example additive combinatorics), formalizing a modern paper in a matter of months is now often possible. Large lan-guage models have currently had little effect on mathematics beyond school level, but if the current rate of improvement in the area continues, then they too will one day be playing a role in mathematical research."}]}