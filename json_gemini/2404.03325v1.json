{"title": "Embodied Neuromorphic Artificial Intelligence for Robotics: Perspectives, Challenges, and Research Development Stack", "authors": ["Rachmad Vidya Wicaksana Putra", "Alberto Marchisio", "Fakhreddine Zayer", "Jorge Dias", "Muhammad Shafique"], "abstract": "Abstract\u2014Robotic technologies have been an indispensable part for improving human productivity since they have been helping humans in completing diverse, complex, and intensive tasks in a fast yet accurate and efficient way. Therefore, robotic technologies have been deployed in a wide range of applications, ranging from personal to industrial use-cases. However, current robotic technologies and their computing paradigm still lack embodied intelligence to efficiently interact with operational environments, respond with correct/expected actions, and adapt to changes in the environments. Toward this, recent advances in neuromorphic computing with Spiking Neural Networks (SNN) have demonstrated the potential to enable the embodied intelligence for robotics through bio-plausible computing paradigm that mimics how the biological brain works, known as \"neuromorphic artificial intelligence (AI)\". However, the field of neuromorphic AI-based robotics is still at an early stage, therefore its development and deployment for solving real-world problems expose new challenges in different design aspects, such as accuracy, adaptability, efficiency, reliability, and security. To address these challenges, this paper will discuss how we can enable embodied neuromorphic AI for robotic systems through our perspectives: (P1) Embodied intelligence based on effective learning rule, training mechanism, and adaptability; (P2) Cross-layer optimizations for energy-efficient neuromorphic computing; (P3) Representative and fair benchmarks; (P4) Low-cost reliability and safety enhancements; (P5) Security and privacy for neuromorphic computing; and (P6) A synergistic development for energy-efficient and robust neuromorphic-based robotics. Furthermore, this paper identifies research challenges and opportunities, as well as elaborates our vision for future research development toward embodied neuromorphic AI for robotics.", "sections": [{"title": "I. INTRODUCTION", "content": "Robotic technologies have become critical and indispensable in everyday life for improving human productivity and quality of ser- vice, because robots have capabilities to complete diverse, complex, as well as intensive tasks faster, more accurate, and more efficient as compared to humans. Therefore, their deployments for solving real-world problems are widely spread from personal to industrial application use-cases. However, current robotic technologies and computing paradigm still lack \u201cintelligence\", which is defined as the capability to interact with operational environments, correctly interpret the sensors' signals (stimulus), respond the stimulus with proper actions to accomplish the goals within the expected time frame, then learn the impact of the actions and continuously adapt to changes in uncontrolled/dynamic operational environments in an ef- ficient manner [1]. Furthermore, apart from the above performance aspect (i.e., accuracy, adaptability, and efficiency), these robots are also expected to perform robust processing against reliability and security threats, thus providing reliable outputs under diverse operational environments. These requirements can potentially be fulfilled by the neuromorphic computing paradigm through Spiking Neural Networks (SNNs) [1]\u2013[3] due to the following reasons.\n\u2022 SNNs employ sparse spike-based data transmission and com- putation, thus enabling ultra-low power/energy consumption, including both the training and inference phases [2] [4]."}, {"title": "II. NEUROMORPHIC AI-BASED ROBOTICS", "content": "Neuromorphic AI-based robotics integrates neuromorphic com- puting with SNNs to realize artificial intelligence [6]. These robots need to autonomously interact with the environments [1], thereby necessitating efficient integration of the sensors, computation, and actuation modules, as shown in Fig. 2.\n1) Sensors Subsystem: This subsystem plays a pivotal role in the neuromorphic AI-based robotics for facilitating efficient interaction with the operational environments. These sensors encompass a wide"}, {"title": "III. NEUROMORPHIC COMPUTING WITH SNNS", "content": "SNNs offer high plausibility to the biological brain, since they employ spikes for transmitting information and spiking neurons for processing information. SNNs also have capabilities to learn spatial and temporal (spatio-temporal) information from the input samples. In SNN processing, input samples are converted into input spike trains using a neural coding. These input spikes are then fed to the SNN, which has a specific network architecture (topology). In each neuron, the input spikes will increase the neurons' membrane potential, and if the potential reaches the defined threshold, then the respective neuron generates output spikes. Details of the neuronal dynamics may differ across different neuron models. Afterward, the output spikes are decoded to interpret the information. In the training phase, a specific learning rule is employed for extracting information from input features and updating the weights (i.e.,"}, {"title": "\u2022 Neuron Model:", "content": "Several neuron models have been proposed in the literature, e.g., Hodgkin-Huxley, Integrate-and-Fire (IF), Leaky Integrate-and-Fire (LIF), and Izhikevich. LIF neuron model is employed widely in the neuromorphic community as it can provide diverse spike representations like brain signals with a relatively low computational complexity [4]; see LIF definition in Eq. 1. V denotes the neurons' membrane poten- tial, Vr denotes the reset potential, Vth denotes the threshold potential, X denotes the input, and 7 denotes time constant.\n\n$\\tau \\frac{dV (t)}{dt} = -(V(t) \u2013 V_r) + X(t)$    (1)\nwhen V\u2265 Vth then V\u2190 Vr"}, {"title": "IV. OUR PERSPECTIVES", "content": "We now present our perspectives regarding new challenges and opportunities introduced by the neuromorphic AI-based robotics in several aspects which are correlated closely, as the following.\nP1: Embodied Neuromorphic Intelligence for Robotics: \"En- abling neuromorphic intelligence in robotic systems requires novel design methods beyond the traditional ones which rely on the offline training and the SNN model deployment without any knowledge updates\".\nP2: HW/SW-level Optimizations for Energy-Efficient Neuro- morphic Computing: \"Maximizing energy efficiency of the neuromorphic computing in robotics needs to consider cross- layer optimizations covering both the HW and SW layers that complement each other\".\nP3: Representative and Fair Benchmarks for Robotics: \"It is required to provide representative and fair benchmarks for robotic developments that cover different sensory functions and objective tasks under diverse environment settings\".\nP4: Low-Cost Reliability and Safety Enhancements: \"Low-cost techniques are required to enhance the reliability and safety of the neuromorphic-based robotic systems, i.e., reliability against device faults to ensure safety of robots' behavior\".\nP5: Security and Privacy for Neuromorphic Computing: \"Cost- effective techniques are needed to ensure the security and pri- vacy of the neuromorphic-based robotic systems, i.e., security against attacks and privacy-preserving mechanism\".\nP6: A Synergistic Development for Energy-Efficient and Ro- bust Neuromorphic-based Robotic Systems: \u201cIt is important to have an end-to-end development framework and tools for the full processing pipeline of a robotic system (i.e., sensors, computation, and actuation) across the HW and SW layers\u201d.\nIn the following sub-sections, we elaborate these perspectives in more depth while providing some early evidences supporting our visions on how to move forward with the opportunities."}, {"title": "A. P1: Embodied Neuromorphic Intelligence for Robotics", "content": "Realizing the neuromorphic intelligence in robots needs the ca- pabilities to accomplish the targeted learning quality (e.g., accuracy or precision) and the adaptability to interact with the environments.\nLearning Quality: To accomplish the targeted learning quality, a robot requires to perform appropriate actions by relying on its perception and existing knowledge. The targeted quality typically depends on the application use-case, because different use-cases often require (1) different data types from sensors for perception, (2) different objective tasks to solve through appropriate training mechanism and learning rule, and (3) different expected actions. Therefore, in our perspective, it is important to design a specialized SNN processing pipeline for each application use-case to achieve the targeted learning quality through a synergistic design and/or selection of network architecture, learning rule, and neural coding. Center of this idea is to develop high quality learning rule and training mechanism that maximally learn the spatio-temporal infor- mation from the input samples. Here, multi-modality sensing will enrich the input information for guiding the training process better.\nAdaptability: The application use-case also defines the expected level of adaptability of the robot. For instance, a robot that operates in a controlled environment and execute repetitive actions (e.g., an industrial assembly robot) requires a lower adaptability level as compared to the one that has to continuously infer and adapt to dynamically-changing operational environments, including changes in the robotic platform itself (e.g., battery and thermal status). Such adaptive capabilities are important due to the following reasons.\n\u2022 Some application use-cases are physically too far away and/or dangerous for humans to explore (e.g., space, active vol- cano, deep forest, and open sea), thereby requiring smart autonomous agents/robots that can adapt to the unseen con- ditions [26].\n\u2022 The knowledge learned from the offline training may become obsolete over time, which leads to low accuracy at run time in dynamic environments; see 1 in Fig. 4(a).\n\u2022 Dynamic environments often have unseen data that need to be learned online. Hence, the robot requires knowledge updates through online training (learning) by leveraging unlabeled data that are gathered directly from the environments [5].\n\u2022 Robots also need to trade-off their performance (e.g., accuracy and latency) with processing power/energy for saving battery.\nRecent progress has demonstrated the SNN potentials for over- coming unsupervised continual learning challenges. For instance, recent works [11] [5] improve the accuracy of baseline network (with 32-bit weights and STDP rule) using learning rule enhance- ments; see in Fig. 4(b). The work of [11] enables unsupervised continual learning by leveraging spiking activities to enrich the STDP learning process [11]. Then, this concept is further extended in [5] by employing a guided fine-tuning on different learning pa- rameters to enable network with lower weight precision to achieve comparable accuracy to the ones with higher weight precision [5]. However, the state-of-the-art works still consider the MNIST dataset for evaluating their accuracy [5]. Therefore, in our perspective, it is important to develop high quality learning rules and training mechanism that can overcome diverse environments, by leveraging unlabeled data gathered during run time for updating the knowledge."}, {"title": "B. P2: HW/SW-level Optimizations for Energy-Efficient Neuro- morphic Computing", "content": "Energy efficiency is crucial for battery-powered robotic systems to enable a long service time. This necessitates HW and SW layers to be working together in an efficient manner. To achieve this, optimizations in the HW and SW layers should be performed in a way that they complement each other; otherwise, the optimization benefits will be sub-optimal. Therefore, in our perspective, it is important to perform conjoint HW/SW-level optimizations for maximizing energy efficiency of neuromorphic-based robotics.\nSW-level Optimizations: To decrease the compute and memory requirements of SNNs, model compression approach is usually employed, as it effectively reduces the memory footprint by in- troducing sparsity in weights and/or neurons. This approach in- cludes techniques such as weight pruning, neuron elimination and quantization [4] [27]. Another approach is optimizing the com- putational time of neuron operations through approximation [28] and timestep reduction [29] [30]. Energy efficiency improvements through neuron elimination and quantization are shown by in Fig. 5(a). Furthermore, another potential approach is to build a network through neural architecture search (NAS) [31]\u2013[34]; see 4 in Fig. 5(b). Moreover, incorporating HW constraints (e.g., memory budget) into the NAS process can guide the search to find a better network architecture [33]. Apart from model optimization, efficiency improvements can also be obtained by maximizing data reuse in the SNN processing dataflow considering the underlying HW platform. It aims at minimizing data movements, especially be- tween off-chip memory and on-chip processor, as memory accesses usually dominate the systems' energy consumption [35] [36].\nHW-level Optimizations: To expedite SNN processing as well as maximize its energy efficiency, researchers have proposed neu- romorphic HW accelerators that enable efficient spike transmission and computation [12]; see Fig. 6(a). Then, employments of opti- mized memories (e.g., approximate memories [38]) can add further efficiency benefits, because memory access is significantly more expensive than arithmetic operations [39] [40]. Besides CMOS- based technologies, researcher also explored non-volatile memory (NVM) technologies (e.g., RRAM: Resistive Random Access Mem- ory, MRAM: Magnetic RAM, and PCM: Phase Change Memory)"}, {"title": "C. P3: Representative and Fair Benchmarks for Robotics", "content": "Representative and fair benchmarks for robotics are developed across various frameworks and initiatives. Within ROS, benchmarks encompass tasks like object recognition, navigation, manipulation, and cover diverse environments. OpenAI Gym offers benchmark en- vironments for reinforcement learning tasks, including robotic arm manipulation and locomotion in complex settings [44]. Robotics challenges such as the DARPA Robotics Challenge and RoboCup provide scenarios for testing perception, manipulation, and interac- tion abilities in dynamic environments [45]. Meanwhile, research labs and consortia focus on specific domains such as object manip- ulation and human-robot interaction, offering tailored benchmarks for these areas [46]. Additionally, platforms like RoboHive facilitate collaborative robotic research and development, for contributing to the creation of standardized benchmarks and evaluation metrics within the community [47], as outlined in Fig. 7."}, {"title": "D. P4: Low-Cost Reliability and Safety Enhancements", "content": "Modern nano-scale computing platforms like neuromorphic pro- cessors in robotic systems are vulnerable to reliability issues. Common reliability threats include permanent faults due to process variations during the chip manufacturing process [54] [55], transient faults (soft errors) in form of bit flips due to high-energy particle strikes [43], and aging due to device/circuit wear out over time [42]. These HW faults can appear in both memories and compute units, inducing data errors that may propagate to application layer and affect the actions of robotic systems, such as threatening the safety of robotics' behavior.\nTherefore, in our perspective, it is important to mitigate such reliability threats in a cost-effective manner thereby preventing the systems' dysfunctionality even in the presence of errors [43], [54], [55]. Recent progress has demonstrated that these reliability threats can be mitigated, as shown in Fig. 8. Specifically, the recent work mitigates permanent faults in the weight memories by employing Fault-Aware Training (FAT), Fault-Aware Mapping (FAM), and Fault-Aware Training-and-Mapping (FATM) techniques [54]; see 6. To mitigate permanent faults in the compute engine, the recent work employs Fault-Aware Mapping (FAM) techniques [55]; see 6. Meanwhile, the recent work mitigates soft errors in the compute engine, by employing Re-execution and Bound-and-Protect (BnP) techniques [43]; see 7. However, these works have not considered robotic datasets in their training phase. Hence, we can leverage these fault mitigation techniques for robotics by considering the workloads and specific characteristics of the robotic applications."}, {"title": "E. P5: Security and Privacy for Neuromorphic Computing", "content": "Ensuring the correct functionality of SNNs in the presence of adverse conditions is fundamental for safety-critical applications. Such adverse conditions include both naturally noisy environments (e.g., fog, rain, and snow) and malicious agents that deliberately aim to fool the systems or infer confidential data. Malicious agent condi- tions can either be identified as backdoor attacks which aim to fool the system during the training phase), adversarial attacks which alter the systems' correct functionality during the inference phase, or privacy attacks which extract sensitive features of the training data or private information of the SNN model. Studies in [56] suggest that SNNs offer higher intrinsic robustness against large adversarial attack perturbations than their counterpart Convolutional"}, {"title": "F. P6: A Synergistic Development for Enabling Energy-Efficient and Robust Neuromorphic-based Robotic Systems", "content": "The neuromorphic AI-based robotics field is still at an early stage, hence its developments targeting different design objectives (e.g., performance, reliability, and security) are still developed separately. Therefore, making it challenging to build a complete neuromorphic- based robotic system that offers high efficiency and robustness. The reason is that, developing a system with a specific objective may force us to employ techniques that can aggravate other objectives. For instance, one prominent technique to mitigate soft errors in a computing hardware is through redundancy/re-execution approach, i.e., performing a task multiple times and select an appropriate result in the end through voting. This technique can be employed to improve the reliability of a system, but it significantly incurs more processing time and power/energy. Toward this, in our perspective, it is important to have and employ a synergistic development framework for building neuromorphic-based robotic systems, that maximizes benefits in terms of performance, reliability, and security."}, {"title": "V. CONCLUSION", "content": "In this paper, we elaborate new challenges and opportunities that arise from the emergence of neuromorphic AI-based robotics field. We also present our perspectives on different aspects that have important roles for moving the field forward. First, learning quality and adaptability are essential for realizing the neuromorphic intelligence. Second, a synergistic development encompassing op- timizations, fault mitigation, and defense mechanism, is crucial to ensure efficient and robust SNN processing. Third, representative and fair benchmarks are needed for continuous developments of the field. The preliminary empirical results align with our perspectives, thereby providing practical guidelines for future research develop- ments toward enabling neuromorphic AI-based robotics."}]}