{"title": "FRTP: Federating Route Search Records to Enhance Long-term Traffic Prediction", "authors": ["Hangli Ge", "Xiaojie Yang", "Itsuki Matsunaga", "Dizhi Huang", "Noboru Koshizuka"], "abstract": "Accurate traffic prediction, especially predicting traffic conditions several days in advance is essential for intelligent transportation systems (ITS). Such predictions enable mid- and long-term traffic optimization, which is crucial for efficient transportation planning. However, the inclusion of diverse external features, alongside the complexities of spatial relationships and temporal uncertainties, significantly increases the complexity of forecasting models. Additionally, traditional approaches have handled data preprocessing separately from the learning model, leading to inefficiencies caused by repeated trials of preprocessing and training. In this study, we propose a federated architecture capable of learning directly from raw data with varying features and time granularities or lengths. The model adopts a unified design that accommodates different feature types, time scales, and temporal periods. Our experiments focus on federating route search records and begin by processing raw data within the model framework. Unlike traditional models, this approach integrates the data federation phase into the learning process, enabling compatibility with various time frequencies and input/output configurations. The accuracy of the proposed model is demonstrated through evaluations using diverse learning patterns and parameter settings. The results show that online search log data is useful for forecasting long-term traffic, highlighting the model's adaptability and efficiency.", "sections": [{"title": "I. INTRODUCTION", "content": "Traffic forecasting is one of the most essential components of intelligent transportation systems (ITS). It facilitates many applications including traffic control, route guidance, congestion avoidance, dynamic pricing, etc. For instance, forecasting the traffic in long-term enables more flexible and intelligent travel plans, it further decreases traffic congestion and accidents, finally improves both time and economic efficiency by promoting dynamic pricing, and so on.\nWith the increasing availability of big traffic data, data-driven traffic prediction methods in ITS have shown considerable promise in recent years. However, the majority of these tasks focused on short-term prediction in which the timely result of several minutes later (e.g., 5 minutes or 60 minutes) is predicted. Long-term prediction, for instance, predicting the traffic conditions of one week ahead remains a challenging task. Additionally, when applying models across varying feature types, time granularities and time periods, there is a lack of unified model design that can feasibly federate all the features."}, {"title": "II. RELATED WORK", "content": "Previous methods for traffic prediction can be categorized into three types: classical statistical methods, machine learning methods, and deep learning methods [6]. In the early age, statistical methods including Kalman filtering [11], ARIMA [12] and VAR [13], and so on were prevalent because the stationarity-based mathematical theories are solid. However, these methods lacking flexibility are weak in traffic data that are highly non-linear and dynamic, resulting in poor performance in practice. Subsequently, traditional machine learning approaches such as Random Forest (RF) [14], K-Nearest Neighbors (KNN)[15], Support Vector Machine (SVM)[16] have been proposed as improvements. The machine learning methods are able to model non-linearity and extract more complex feature-correlations in traffic data, further learn flexibly for better performance.\nIn recent years, owing to the increasing volume of big data in the traffic domain as well as the improved computational power, deep learning methods have been widely employed for traffic prediction with high prediction accuracy. Among deep learning methods, Recurrent neural network (RNN) [2], Long short term memory network (LSTM)[17] are the most widely used because of their advantage in capturing temporal dependencies. On the other hand, Convolutional Neural Network (CNN) [4] becomes more popular in modeling and learning spatial dependencies. Also, a number of hybrid models that combine CNN and LSTM have been proposed to capture complex spatio-temporal dependencies in traffic data [18], [19], [20]. In particular, Graph Convolutional Networks (GCNs) excel at capturing the non-Euclidean characteristics of traffic networks, making them highly effective for traffic prediction tasks [21], [22]."}, {"title": "B. Data Sources", "content": "Sensor measurement datasets are prevalently utilized in existing works. Traffic information (e.g., traffic speed, amount, and occupancy) is generally collected during a short time interval by the detectors installed on the road network. There are several versions of open data in metropolises globally [6], such as PEMS (Performance Measurement System) data with its sub-versions, including PEM3/4/7/8 and PEMSD-BAY in California [23], Q-traffic in Beijing [24], LOOP dataset in Greater Seattle Area [25], and so on. These datasets are extremely valuable and have been widely used and further promote a series of excellent research. However, the datasets have limitations such as the collection periods, sensed area or scales, lacking correspondently external features which narrows the practicality and contributions of the research. To further improve the accuracy, proposals of incorporating external data, including calendar information [7], weather conditions: weather state (sunny/rainy/windy/cloudy, etc.), temperature, humidity, visibility [3], road construction attributes [8], search records [26], [27] have been proposed."}, {"title": "C. Spatio-temporal Dependencies for Long-term Prediction", "content": "Traffic time series generally demonstrate strong temporal dynamics. Several prediction targets, such as average speed, amount of vehicles, congestion status, travel time and so on, have been proposed. In normal situations, the traffic patterns may be cyclically recursive. On the other hand, abnormal traffic situations, for instance, congestion or accidents can result in the formation of non-stationary time series, rendering forecasts challenging. In particular, aiming for long-term predictions, the problem is more challenging because the correlation of the future statuses is difficult to capture. It is the reason that most of the existing studies have been conducted for traffic predicting of the next 5 min to 1h. Little research has been conducted to predict long-term, e.g., one day or one week later, because it is more challenging.\nTo summarize, long-term traffic prediction in practice presents several challenges, including: (1) developing a federation architecture that accommodates diverse feature data, and (2) effectively evaluating the impact of various input features. Notably, few studies have proposed methods for integrating input features with differing time granularities and lengths, which remains a significant gap in this research area. This motivates us to propose FLTP: a federated approach utilizing route search records to improve long-term traffic prediction."}, {"title": "III. PROBLEM DEFINITION AND NOTATIONS", "content": "The traffic of stations was considered to be a time-series. Suppose that we have T time slices, traffic can be denoted as $P\\in R^{N\\times T}$, and each road section has the history data of $[P_0, P_1, ..., P_{t-1}]$, and N is the number of road segments and Tis the length of all the historical data. The problem is to predict the traffic status at the next time $(P_t)$ based on the historical data with the length of T \u2013 1."}, {"title": "Hence, the prediction problem can be defined according to Equation 1:", "content": "$P_t = f(X_t, X_s, X_r, P_{t-n}, \u2026\u2026\u2026, P_{t\u22122}, P_{t-1})$\nwhere f() is the mapping function to be learned using the proposed deep-learning model. In addition, the optimization target is aiming to: minimize $|| P_t \u2013 P_t ||$ where the input of $X_t\\in R^{N\\times T_1}$ is the feature matrix of historical traffic data with the time length of $T_1$, $X_s \\in R^{N\\times T_2}$ denotes the feature matrix of historical search records with the time length of $T_2$ and $X_r \\in R^{N\\times 1}$ denotes the feature of road segments. $P_t$ is the predicted traffic volume, $P_t$ is the ground truth. Notice that $T_1$ would not be equal to $T_2$. Therefore, in this research, learning on data of different lengths increases the difficulty."}, {"title": "IV. DATASETS AND PRE-PROCESSING", "content": "With the collaboration of NEXCO East, two main types of datasets are provided: (1) traffic counter data (denoted as Xt in equation 1) in which the road network data (denoted as Xr) was included; (2) online route search records (denoted as Xs) collected by a route and toll search engine called 'Drive Plaza' [28]."}, {"title": "A. Traffic Counter Data", "content": "The traffic counter data is real-time sensed on the road. It includes the number of vehicles passing through, with the values of average speed and occupancy, etc., are recorded on each road section. The data is uniquely identified by the section ID and timestamp. The timestamp indicates the time when the data was measured. The traffic counter data was originally collected for each five minutes. We utilized the data of three expressways with the road codes of E4, E14 and E17 for the experiment and evaluation. The road network data is static and is used to describe the connection of road sections."}, {"title": "B. Online Route Search Records", "content": "Online search records are collected through the online search service called 'Drive Plaza' [28], which is an expressway toll and route search service provided by NEXCO East. Each raw search record consists of five fields: <departure IC, arrival IC, departure time, arrival time, search time>, in which the values of departure IC, arrival IC and search time are required to be specified and other variables setting are optional. Based on whether the user specified a depature or arrival datetime, we divided the search records into two types: time-specified search logs and non-time-specified search logs. The process of search records is as follows.\n1) Firstly, for all the route search records, we extracted the IC lists showing the shortest route between departure IC and arrival IC. For simplicity, the Dijkstra's method was used as the shortest route extraction method.\n2) If either departure time or arrival time was specified, we calculate the expected passage time for each IC segment within the route based on the specified datetime. We assume an average travel speed of 80 km/h on expressways, which is consistent with the speed limit on many expressways in Japan.\n3) If neither departure time nor arrival time was specified, we calculated the search records based on search time.\n4) Since the search records are irregular on the time line that is unsuitable as input for the model. We originally sampled the search records by 5 minutes. If a search record exists, 1 will be added to the values of all the IC pairs from the departure to arrival."}, {"title": "C. Analysis of Route Search Records", "content": "As shown in the example in Fig. 3, in which the historical traffic data and the structured time-specified search log data are resampled at one-hour intervals, the fluctuations in traffic volume and search volume closely align, capturing very similar behaviors. It demonstrates that the time-specified search log data captures the trend of actual traffic volume growth, especially during the morning hours.\nFig. 4 presents the distribution of the time-specified (left) and the non-time-specified (right) search count for weekdays, weekends, and holidays. The data shows that more searches are conducted on holidays and weekends compared to weekdays. This is likely because weekday travel is often work-related, whereas on holidays, people are more likely to travel for leisure to unfamiliar destinations, prompting them to search for routes in advance.\nFig. 5 presents a correlation matrix showing relationships between different variables such as day-of-week, is_holiday, hour, search count related feature, and others. We extracted several features which have correlation:\n\u2022 dayofweek: Weakly correlated with search variables like search_5min (0.149), search_1h (0.172).\n\u2022 is_holiday: Moderate positive correlation with search-related variables (0.22 to 0.25), indicating higher search activity around holidays.\n\u2022 degree_sum: Positively correlated with search variables, especially longer periods like search_unspec_10d (0.251).\n\u2022 KP (Kilo Post segment, approximately 2 kilometers: Strong negative correlation with search variables (-0.63 to -0.65). As the KP value increases, indicating a location farther from the city center, the search values gradually decrease, leading to a negative correlation coefficient.\n\u2022 OCC (Occupancy): Strong positive correlations with search variables (0.31 to 0.44), suggest that higher search values are associated with increased car presence and occupancy levels.\n\u2022 allCars: Similar to the value of OCC, moderate correlation with search variables (0.33to 0.48).\n\u2022 speed: Negatively correlated with search variables (-0.03) and moderately with OCC (-0.30), meaning speed decreases with higher occupancy.\n\u2022 search count variables (i.g., search_5min, search_1h, search_unspec_1d, etc.): Strong positive intercorrelations, with search activity across different time windows being highly correlated (up to 0.997 between search_unspec_7d and search_unspec_10d). Moderate positive correlation with OCC and allCars, suggesting that as occupancy and car counts increase, search activity increases as well.\nSimilarly, Fig. 6 illustrates traffic volume, speed, time-specified search count, and non-time-specified search count for a specific road segment across a weekday, weekend, and holiday. On weekday, there is minimal correlation between the time-specified search count and traffic volume or speed. However, on weekend and holiday, the search count data correlates with the future traffic trends, such as the rapid increase in traffic volume and the sudden drop in speed in the morning. The non-time-specified search count follows an ascending pattern from weekday to weekend to holiday, corresponding closely with overall traffic volume trends, suggesting it provides insight into future traffic conditions.\nIn summary, key insights include high correlations between search activity and variables like OCC and allCars, while KP negatively impacts many variables. This analysis suggests that structured online search records hold potential in prediction of future traffic demand. During periods of high online search activity, such as weekends and holidays, these records offer a more detailed projection of upcoming traffic conditions. Consequently, online search log data appear especially useful in forecasting unpredictable congestion, particularly during periods of unexpectedly high demand."}, {"title": "V. PROPOSED MODEL", "content": "In this research, we propose a federated architecture of novel training model that effectively exploits and learns on three-dimensional dependencies: spatial, temporal, and cyberspace dimensions. This approach differs from previous proposals, which relied on downsampling techniques to compress data in the temporal dimension. Our proposed federation architecture is designed to (1) process raw data with varying time granularities; and (2) enhance the long-term prediction accuracy of future traffic."}, {"title": "A. Convolutional LSTM based Learning Model", "content": "Our proposal is a combination of CNN and LSTM as the convolutional LSTM architecture. As illustrated in Fig. 7, our proposed model consists of convolution, maxpooling and LSTM (Long short-term memory) layers. The convolution operates on the feature dimensions, while the max-pooling layer and the LSTM work on the time dimension. Table I lists the related parameters of the proposed model.\nConvolution network: We first applied the convolution network, which is useful to handle datasets with autocorrelated observations. Rather than using a fixed sample rate for resampling data, the convolution layer provides to extract the most effective data, and more parameters can be learned flexibly. As shown in Fig. 7, the convolutional layer operates on the feature dimensions, which consist of three types. The number of features in each feature dimension is abstracted into different parameters, e.g., $F_{s\\_un}, F_s, F_{tra}$ with the detaled description listed in Table I. Regardless of the parameter value for the number of features, the convolutional layer will ultimately compress the input features into output features with a fixed number. In the experiment, we ultimately fixed the value at 1, as it achieved relatively strong performance while maintaining simplicity.\nMax-pooling layer: Max-pooling layers were applied to the feature data by extracting the maximum value within each interval of R. Additionally, the max-pooling layer operates with a stride of R, meaning it extracts the maximum value in each time interval of R. Also, regardless of how the input or output length scale changes, R is an encapsulated variable and can be used in all cases. For example, if the input data was 5-"}, {"title": "VI. EXPERIMENT AND EVALUATION", "content": "All experiments are trained and tested on a linux server (CPU: 128 AMD EPYC 7702P 64-Core Processor/128 thread 2.0 GHz; GPU: NVIDIA RTX A6000 with 48GB memory*4). All deep neural networks were implemented using Pytorch. The random number generation seed was fixed to 1100 for experimental reproducibility. All the input data of X was normalized using standard normalization, while the target y value of speed was normalized by min-max normalization.\nWe chose the following metrics to measure the performance of the models: mean absolute error (MAE, Equation 2). Here, the MAE was the result recovered from the normalized values, showing intuitive performance comparisons. The traffic speed value is the target of the prediction.\n$MAE = \\frac{1}{n} \\sum_{i=1}^{n} |y_i - \\hat{y_i}|$\nWe progressively conducted two experiments step by step for effectively filtering parameter settings. At first, an ablation study based on a relatively small amount of coarse-grained data of road E14 has been conducted. Table II summarizes the data details used in the ablation study. The input data is with 5-minute granularity and output data is with 1-hour granularity. To better examine the effectiveness of various features, we first conducted an ablation study. We compared the prediction results of various combinations of the features."}, {"title": "C. Evaluation Result", "content": "Based on the result of the ablation study, we utilized all the features for evaluation. The input data is with 5-minute granularity and output data is with 1-hour granularity. As listed in Table VI, we evaluated the following evaluation tasks, comparing the results for different values of input data size, prediction intervals (e.g., predicting the outcome for the next day or the same weekday of the following week), and the output data size. The goal was to determine the best combination of these parameters.\nTable VII summarizes the performance comparison results for the model tested on different roads: E4 and E17. For the test datasets, the input sizes are either 24 (one-day) or 168 (one-week), and the output size is fixed at 24 (one day). The table also shows day intervals of either 0 (denotes the prediction of the next day) or 6 (denotes the prediction of the same weekday of the next week) with the Mean Absolute Error (MAE) for each scenario.\n\u2022 For the road of E4: The MAE ranges from 3.354 to 3.904, with smaller input sizes (one-day data) generally leading to lower MAE values.\n\u2022 For the road of E17: The MAE ranges from 3.596 to 3.902, with similar patterns where the smaller input size of one-day results in slightly better performance than the larger input size of 168.\nIn both target roads, input patterns of one-day data to predict the result of the next day achieves the best result. 0-day interval results in slightly better performance than the 6-day interval for the same input size."}, {"title": "VII. CONCLUSION AND FUTURE WORK", "content": "This paper presented a novel model design for federating route search records for improving long-term traffic prediction. The proposed model is compatible with different data features and time granularities and lengths. It was practically evaluated using the latest real-world data in the collaboration with NEXCO East Japan. We also introduced a process of route search records and the analysis results show that these search records effectively capture trends in traffic status. Notably, time specified records exhibit a strong correlation with future traffic volume. The model was trained on more than two years of data, and the average speeds were predicted target. The ablation study demonstrated that incorporating all features, including the search count as input, achieved the best performance.\nAdditionally, we examined the results from multiple perspectives related to parameter settings within the time dimension. We evaluated varying input lengths, such as historical data from one day or one weekday, as well as different time intervals, including predictions for the next day or the same weekday of the following week. The results indicate that the best performance was achieved in most cases by using historical data to predict the outcome for the following day. Future research could explore applying this federation architecture to other feature dimensions, such as weather data, which could further enhance the effectiveness of our proposed model."}]}