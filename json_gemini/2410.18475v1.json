{"title": "Gene-Metabolite Association Prediction with Interactive Knowledge Transfer Enhanced Graph for Metabolite Production", "authors": ["Kexuan Xin", "Qingyun Wang", "Junyu Chen", "Pengfei Yu", "Huimin Zhao", "Heng Ji"], "abstract": "In the rapidly evolving field of metabolic engineering, the quest for efficient and precise gene target identification for metabolite production enhancement presents significant challenges. Traditional approaches, whether knowledge-based or model-based, are notably time-consuming and labor-intensive, due to the vast scale of research literature and the approximation nature of genome-scale metabolic model (GEM) simulations. Therefore, we propose a new task, Gene-Metabolite Association Prediction based on metabolic graphs, to automate the process of candidate gene discovery for a given pair of metabolite and candidate-associated genes, as well as presenting the first benchmark containing 2474 metabolites and 1947 genes of two commonly used microorganisms Saccharomyces cerevisiae (SC) and Issatchenkia orientalis (IO). This task is challenging due to the incompleteness of the metabolic graphs and the heterogeneity among distinct metabolisms. To overcome these limitations, we propose an Interactive Knowledge Transfer mechanism based on Metabolism Graph (IKT4Meta), which improves the association prediction accuracy by integrating the knowledge from different metabolism graphs. First, to build a bridge between two graphs for knowledge transfer, we utilize Pretrained Language Models (PLMs) with external knowledge of genes and metabolites to help generate inter-graph links, significantly alleviating the impact of heterogeneity. Second, we propagate intra-graph links from different metabolic graphs using inter-graph links as anchors. Finally, we conduct the gene-metabolite association prediction based on the enriched metabolism graphs, which integrate the knowledge from multiple microorganisms. Experiments on both types of organisms demonstrate that our proposed methodology outperforms baselines by up to 12.3% across various link prediction frameworks.", "sections": [{"title": "I. INTRODUCTION", "content": "METABOLIC engineering harbors the potential to engineer microorganisms into efficient cell factories for producing value-added products in an economical way, offering significant potential for advancements in medicine, agriculture, and bio-energy [1]. To achieve this, researchers increase metabolite production by overexpressing the upstream pathway genes or downregulating and knocking out the genes of competitive pathways [2]. Traditional manual pipelines for identifying gene targets include two types: the knowledge-based approach, which relies on human experts to extract relevant information and propose target genes from previous research papers [2]; and the model-based approach, which involves the curation and simulation of Genome-scale metabolic models (GEMs) [3]\u2013[5] to generate candidate genes. However, those manual pipelines have proved time-consuming and laborious [1], taking several months to years to complete. Moreover, many GEMs contain knowledge gaps, hindering their potential for predictive accuracy and usability [6]. For example, the current YeastGEM 9.0.0 for Saccharomyces cerevisiae contains only 1,162 genes [7], while 6,617 open reading frames are supposed to encode genes in Saccharomyces Genome Database [8]. Additionally, 2,476 genes are still annotated as unknown regarding their molecular function [9]. Therefore, scientists propose gap-filling methods to complete those knowledge gaps, through either topology [10]\u2013[12] or machine-learning methods [13].\nDespite this, previous gap-filling processes mainly focus on identifying the missing reactions for dead-end metabolites that cannot be produced or consumed. Moreover, no universally applicable method yet exists for predicting unknown reac-tions, particularly in non-model organisms. To address these bottlenecks, we propose a new task, gene-metabolite associa-tion prediction, replacing the laborious literature mining and database analysis with gene-metabolite association inference based on existing incomplete metabolic graphs, as shown in Figure 1. Specifically, given a potential gene-metabolite link in incomplete metabolic graphs, the model will predict whether such a link is valid.\nHowever, gene-metabolite association prediction based on metabolic graphs faces two challenges: incomplete metabolic graphs and disparity between different microorganisms. One major challenge is the unreliability of association predictions based solely on underexplored metabolic graph structures. For example, approximately 10%-20% of the genes from Issatchenkia orientalis have no information or have only ambiguous annotations. Inspired by the knowledge fusion tasks that transfer knowledge from well-studied objects to under-studied ones [14], [15], or integrate knowledge from multiple sources [16], [17], we can enrich the metabolic graphs by integrating knowledge across various metabolic graphs. Nevertheless, integrating graphs requires inter-graph links, which are a pair of vertices that are identical or highly similar, to connect two graphs for knowledge transfer. Detecting such inter-graph links is difficult due to the disparity between different microorganisms and the heterogeneous structure between their metabolic graphs. Meanwhile, vertices that fail to connect with counterparts in other graphs remain isolated and are referred to as \"danglings\u201d [18]. The existence of \u201cdanglings\" severely hinders the discovery of inter-graph links.\nFigure 1 demonstrates the heterogeneity between two metabolic subgraphs in Saccharomyces cerevisiae (SC) [19], Issatchenkia orientalis (IO) [20]. For instance, the uridine in two microorganisms has different neighbors. Additionally, the presence of \u201cdanglings\u201d complicates the inference of inter-graph links. For example, YDR020C and G_g514 are different 2-hop neighbors of the inter-graph link (YLR245C, G_g4580). Removing these \u201cdanglings\u201d would greatly simplify the dis-covery of inter-graph links. Moreover, identifying additional inter-graph links can help complete missing gene-metabolite associations. For instance, by resolving the inter-graph links (YNR012W, G_4593), it becomes straightforward to establish the intra-graph links from (uridine to YNR012W) and from (cytidine to G_G4593). Therefore, our primary task is to identify the inter-graph links and use them to enrich the intra-graph links.\nTo achieve this goal, we propose a new Interactive Knowledge Transfer on Metabolism Graph (IKT4Meta) frame-work with a graph enrichment stage and an association prediction stage. In the graph enrichment stage, we capture external knowledge of genes and metabolites and utilize structural and relational learning through structure encoders to understand patterns across different graphs. Specifically, due to the complementarity of text descriptions and graph structures (Figure 2), we propose a multi-modal encoder that"}, {"title": "II. METHODOLOGY", "content": "A. Problem Definition\nDefinition 1 (Metabolic graph). A metabolic graph consists of a series of metabolic reactions represented as follows:\n$C_1 ++C_k \\xrightarrow{g_1 ++ g_m} C_{k+1}++ C_n$\nThis equation illustrates that the metabolites on the left-hand side, denoted as compounds c\u2081 to ck, are catalyzed by enzymes produced by genes g1 to gm, resulting in the production of metabolites Ck+1 to Cn. Based on these reactions, we construct a series of triples for the metabolic graph M = {V, D,T}: C and G are sets of metabolites and genes, respectively, serving as vertices V = CUG; D denotes the direction between genes and metabolites (left for reactants and right for products); T is composed of tuples in C \u00d7 D \u00d7 G, with each tuple t = (c, d, g) containing c \u2208 C, d \u2208 D, and g \u2208 G. For example, from the HIS6 reaction C04896 \u2192 CO4916, we derive two triples: t1 = (C04896, left, HIS6) and t2 = (CO4916, right, HIS6). The metabolic graph M is a heterogeneous graph containing two types of vertices: metabolites (c) and genes (g), where each type can only establish connections with the other.\nDefinition 2 (Graph alignment). Given two distinct graphs from two microorganisms M\u2081 = {C1UG1, D1, T1} and M2 = {C2U G2, D2, T2}, we aim to identify any identical vertices between these graphs, denoted as inter-graph links $E_{inter} = {(c_1, c_2)|c_1 = c_2, c_1 \\in C_1, c_2 \\in C_2} \\cup{(g_1, g_2)|g_1 = g_2, g_1 \\in G_1, g_2 \\in G_2}$. Prior to analysis, we may already have a set of known inter-graph links, known as Enter, which are utilized as the training data for the graph alignment task.\nDefinition 3 (Gene-Metabolite Association Prediction). Given a metabolic graph M = {CUG, D,T}, the gene-metabolite association prediction task aims to predict missing triples t \u2208 T = (c \u2208 C, d \u2208 D,g \u2208 G). Formally, given any potential triple t \u2208 T = (c \u2208 C,d \u2208 D,g \u2208 G), the model needs to predict whether such triple is valid.\nB. Framework Overview\nFigure 3 illustrates our IKT4Meta framework, which com-prises two stages: enriching graph structures with external knowledge and predicting gene-metabolite associations using these enriched graphs. Given a pair of metabolic graphs M1, M2, we first use a multi-modal encoder to generate initial vertex embedding based on text, SMILE string of metabolites, and gene sequences. Then, we align two metabolic graphs M1, M2 and enrich their structures through graph alignment, \"dangling\" elimination, and interactive knowledge transfer. Finally, we conduct association predictions based on enriched metabolic graphs M1, M2.\nC. PLM-based multi-model encoder\nTo fully utilize the external knowledge of all metabolites and genes within the given metabolic graphs, we leverage the strong expressiveness of PLMs for vertex initialization. We incorporate various types of knowledge, integrating them as the prior knowledge for each vertex.\na) Text embedding: Text embedding forms the foundation of all multi-modal embedding processes. We select two types of textual context: surface form, which serves as the identifier of different vertices, and description, which reveals several key attributes detailing the structure, function, and role of various genes or metabolites. Given the text sequence including a set of words l = {W1,...,Wn}, we utilize a pre-trained state-of-the-art ScholarBERT [21] to obtain the contextualized hidden states. We then apply mean pooling to acquire the final embedding. The final text embedding for each vertex v\u03b9 (where v could be a metabolite vertex c or gene vertex g) is produced by concatenating the surface form embedding lsur with the description embedding ldes, expressed as $v_\\iota = [l_{sur}, l_{des}]$.\nb) External knowledge embedding: As some micro-organisms, such as Issatchenkia orientalis, are still understudied, the surface form information and description of some genes are often unavailable. We further incorporate external knowledge crucial for identifying the vertex pair-wise similarity. We choose the SMILE string for metabolites and the FASTA sequence for genes. Specifically, for molecules, we employ KV-PLM [23], pretrained to bridge the molecule structure with biomedical text, to generate molecule SMILE string embedding Csmile. For genes, we choose GenSLMs [22], specially designed for representing gene sequence, to generate gene embedding gseq.\nc) Multi-modal embedding fusion: Each modality-specific embedding characterizes the vertex identities from disparate aspects. Since the Csmile and gseq come from different PLMs, they are in different embedding spaces. To use them together, we first transform these embeddings into the same space through a linear projection layer \u0398:\n$\\hat{C}_{smile} = \\Theta_1(C_{smile})$\n$\\hat{g}_{seq} = \\Theta_2(g_{seq})$\nwhere \u03981, \u03982 are linear projection layers used to transform the embeddings of Csmile and gseq, respectively. The final vertex initialization is the combination of the literal embedding and the side information embedding:\n$\\hat{c} = \\Theta_3[Cl, C_{smile}]$\n$\\hat{g} = \\Theta_3[g_l, \\hat{g}_{seq}]$\nwhere [.] means concatenation, \u03983 is linear projection layer, and the concatenated embedding is linearly transformed by a shared layer.\nD. Interactive Knowledge Transfer\nAfter acquiring the vertex initialization from the multi-modal encoder, we use them for the following interactive knowledge transfer. We utilize graph alignment and association prediction to perform both inter-graph link and intra-graph transfer to boost the final association prediction performance.\na) Graph alignment: We employ GCN [24] as the base model to aggregate neighboring information in the metabolic graphs. Specifically, we incorporate a gating mechanism in the aggregation procedure to control noisy neighbors. We implement Highway gate [25] to balance the information flow between a vertex and its neighbors through a gated combination of its input and the original output. Assume vn represents the vertex embedding at n-th layer of GCN, the vertex embedding vn+1 at (n + 1)-th layer is:\n$v^{n+1} = GCN(v^n)$\nwhere GCN represents the neighbor aggregation of the GCN layer. The output embedding $\\hat{v}^{n+1}$ from the highway gate is:\n$gate(v^n) = \\sigma(\\Theta_4(v^n))$\n$\\hat{v}^{n+1} = gate(v^n)v^{n+1} + (1 - gate(v^n)) v^n$\nwhere o is a sigmoid function, and 4 is a linear projection layer. After the filter process of the highway gate process, we further enhance the influence of important neighboring vertices by using Graph Attention Network (GAT) [26], which dynamically assigns weight to each neighbor based on their attention scores:\n$v_{out} = [v, GAT(\\hat{v}^{n+1})]$\nwhere GAT denotes the weighted aggregation of the GAT layer.\nWe minimize the distance between the two vertices connected by known inter-graph links Einter by the margin-based ranking loss objective funciton [27]:\n$L_{GA} = \\sum_{(v_i, v_j) \\in E_{inter}} \\sum_{(v'_i, v'_j) \\in E'_{inter}} [(\\mathcal{d}(v_i,v_j) - \\mathcal{d}(v'_i, v'_j) + \\gamma]_+$\nwhere Enter denote the set of randomly sampled negative inter-graph links, y > 0 is the margin, [.]+ = max(., 0), and d(.) computes the Manhattan distance between two vertices.\nb) \"Dangling\" eliminating: To mitigate the negative impact of \"dangling\" vertices in the graph alignment task, we propose a \u201cdangling\u201d eliminating strategy. Leveraging the rich prior knowledge in vertex initializations from the multi-modal encoder, we generate an initial \u201cdangling", "dangling": "ertex is expected to be far from its surrounding vertices and should have a lower ranking than vertices in the other graph. Therefore, any vertex in the \u201cdangling\u201d candidate set should guarantee the following conditions:\n$\\alpha = \\frac{max \\mathcal{d}(v_i, v_j)}{(v_i, v_j) \\in E_{inter}}$\n$\\mathcal{d}(v, NN(v)) > \\alpha$\n$\\forall v' \\in V', R(v|v') > \\frac{\\alpha}{|V'|}$\nwhere vi, v denotes the vertex initial representations, which are the muli-modal embeddings, NN(.) denotes the nearest neighbors, and R(v|v') denotes the ranking position of vertex v in relation to vertex v', based on increasing distances among all vertices in the set V to v'. During alignment training, we continually update the \u201cdangling\u201d candidate set to reflect changes in the embedding distances.\nFor vertices in the dangling candidate set, we gradually reduce their influence by lowering their weight in the adja-cency calculations of connected vertices, thereby alleviating heterogeneity. For example, in figure 1, eliminating the dangling vertices YDR020C and G_G514 helps the neighboring vertices (1, 2-hops away) of YLR245C and G_G4580 to exhibit more similarity. This similarity facilitates easier discovery of inter-graph links between these vertices. When a vertex remains in the"}, {"dangling": "et for a specific number of epochs k, it is classified as formally \u201cdangling\u201d and is then permanently excluded from the neighbor lists of its connected vertices. This approach ensures that equivalent vertices across graphs develop increasingly similar neighboring contexts, reducing distances between them, which in turn facilitates more accurate discovery of new inter-graph links.\nc) Iteractive Knowledge Transfer: After establishing the inter-graph links as bridges between metabolic graphs, we perform the knowledge transfer through these bridges. The knowledge transfer process encompasses two primary aspects: intra-graph link transfer and inter-graph link transfer. These"}, {"title": "III. EXPERIMENT", "content": "A. Dataset setup\nTable I shows the statistics for the genome-scale metabolic models of two micro-organisms, Saccharomyces cerevisiae (SC) [19] and Issatchenkia orientalis (IO) [20]. SC is the most commonly used model organism, while IO is a non-model or-ganism known for its advantageous properties. As the metabolic information for IO is pre-annotated based on SC data, these two microorganisms share numerous genes and metabolites, which are identifiable as inter-graph links. We collect information on metabolic mechanisms from available sources12. This includes lists of genes and metabolites, biological reaction data, and references from official knowledge bases. Additionally, we extract multi-modal features such as textual content, SMILES strings, and gene sequences from existing knowledge bases34. For the gene-metabolite association prediction task, we split the intra-graph links of the metabolic graph into 60% for training, 30% for testing, and 10% for validation. In the graph alignment task, we forego traditional training data due to the unreliability and incompleteness of gene inter-graph links; instead, we rely on supervision signals derived from initial multi-modal embeddings. Table II shows the distribution of genes and metabolites, as well as the training, testing, and validation splits in our dataset.\nB. Implementation details\nThe framework is implemented based on PyTorch and Huggingface Transformer [29]. For the association prediction, we corrupted each correct test triple each correct test triple (g, d, c) by replacing the g with another g' or replacing the c with another c'. We set the negative sampling rate at 10 and the learning rate at 5e-4. During training, we use the validation set to select the best model. Our new task differs from traditional link prediction, which provides the subject vertices and relations; in our case, the model lacks prior knowledge of the candidate target objects. We utilize the classic evaluation metrics, which are precision, recall, and F1. During testing, the model was presented with both correct and corrupted triples and tasked with predicting their validity. We set the multi-modal embedding dimension to 512 for both the association prediction model and the graph alignment model. For the graph alignment task using a GCN-based model, we perform a grid search to select the optimal number of hidden layers (1, 2, 3),"}, {"title": "C. Main results", "content": "Table III illustrates the association prediction results for IKT4Meta and other strong baselines on SC and IO. Since our framework adapts to various structure encoders, we test its per-formance alongside popular link prediction models, including TransE [30], RotatE [31], and DisMult [32]. RotatE excels in modeling various relational patterns, while DisMult employs a diagonal assumption for relations. Overall, these three models incorporating our model can achieve an improvement from 8% to 12%. DisMult performs worse than TransE and RotatE in both settings, with or without IKT4Meta, due to its inability to model complex graph patterns effectivelly. Rotate and TransE perform similarly in both settings. The improvement in our model's performance is primarily attributed to its interactive knowledge transfer, which leverages prior knowledge to capture consistencies between SC and IO, thus enriching the metabolic graph structure and enhancing association prediction outcomes.\nD. Ablation Study\nTo evaluate the effectiveness of each proposed component, we test IKT4Meta by removing each component in turn. Since TransE is more lightweight, we use it for ablation study. Table IV shows the results. We include ScholarBERT+Classifier as an additional surface form-only baseline. We denote the per-formance of removing each component as \"w/o [component]\", where the components include knowledge transfer (kt), multi-model embeddings (mm), and \"dangling\u201d eliminating (de).\nImpact of interactive Knowledge transfer The multi-modal embeddings and the \u201cdangling\u201d eliminating components are used to build inter-graph links for knowledge transfer. There-fore, when removing the knowledge transfer component, we"}, {"title": "E. Case study", "content": "In this section, we conduct case studies to further demonstrate the effectiveness of our IKT4Meta, i.e., how the interactive knowledge transfer can be used to fix the incorrect prediction cases.\n1) For the first two lines of table V, without the in-teractive knowledge transfer, which means we perform the gene-metabolite association (G-M) prediction based on single metabolic graph information, the model failed to identify the given G-M link as correct for the IO graph. While the SC contains more complete metabolism information, the association prediction model of SC has higher performance. Thus, the SC's association prediction model successfully identifies this G-M association, as its confidence exceeds 0.5. When we add the knowledge transfer to integrate the information from both graphs, we can see the structure similarity between G_JL09_g616 and YDR483W (genes) is very high, and the structure similarity of M_akg_c and akg_c (metabolite) is also high. Although literal gene information is unavailable for G_JL09_g616, their gene sequences are highly similar (0.786). Additionally, it is clear that M_akg_c and akg_c refer to the same metabolite. Based on our knowl-edge transfer rule, we directly transfer the link (YDR483W, left, akg_c) to (G_JL09_g616, left, M_akg_c). After the knowledge transfer, our model successfully identifies this correct link.\n2) In this case, our model without the knowledge transfer failed to identify this correct G-M link again. Although it is easy to identify that M_nadph_m and nadph_m are the same metabolite, identifying the equivalence between gene G_JL09_g1308 and YER073W is very difficult. The structure similarity between the two genes is low, as these genes have a large ratio of different reactions in IO and SC, respectively. Manual evaluations reveal that G_JL09_g1308 is involved in almost twice as many reactions in IO as YER073W in SC. Addi-tionally, although their gene sequence similarity is high (0.695),"}, {"title": "IV. RELATED WORK", "content": "A. Gene-Protein-Reaction Association Prediction\nGene-protein-reaction (GPR) association prediction remains a central task in bioinformatics, aiming to identify gene structures within DNA sequences [33]. Traditional approaches often relied on manual curation and querying of the structural database, which predicts genes based solely on intrinsic DNA sequence data by exploiting known gene-like features and statistical models such as BLAST [34], Diamond [35], and HMMER [36]. With the advent of next-generation sequencing"}, {"title": "V. CONCLUSION", "content": "In this work, we propose a new task, Gene-Metabolite Association Prediction based on metabolic graphs, to automate the process of candidate gene discovery, which is the initial step for the target gene prediction in metabolic engineering. We design a new framework to improve the association prediction performance by enriching the metabolic graph structure. The enrichment process is conducted by integrating knowledge from different metabolic graphs. We resort to the power of PLMs to provide prior knowledge for inter-graph link discovery. Then, inter-graph links serve as bridges to integrate and enrich the metabolic graphs. Finally, the association prediction is performed on the enriched graph, leading to a large improvement in performance. In the future, we will consider incorporating reaction information in our constructed metabolic graphs."}]}