{"title": "Physics-informed neural networks need a physicist to be accurate: the case of mass and heat transport in Fischer-Tropsch catalyst particles", "authors": ["Tymofii Nikolaienko", "Harshil Patel", "Aniruddha Panda", "Subodh Madhav Joshi", "Stanislav Jaso", "Kaushic Kalyanaraman"], "abstract": "Physics-Informed Neural Networks (PINNs) have emerged as an influential technology, merging the swift and automated capabilities of machine learning with the precision and dependability of simulations grounded in theoretical physics. PINNs are often employed to solve algebraic or differential equations to replace some or even all steps of multi-stage computational workflows, leading to their significant speed-up. However, wide adoption of PINNs is still hindered by reliability issues, particularly at extreme ends of the input parameter ranges. In this study, we demonstrate this in the context of a system of coupled non-linear differential reaction-diffusion and heat transfer equations related to Fischer-Tropsch synthesis, which are solved by a finite-difference method with a PINN used in evaluating their source terms. It is shown that the testing strategies traditionally used to assess the accuracy of neural networks as function approximators can overlook the peculiarities which ultimately cause instabilities of the finite-difference solver. We propose a domain knowledge-based modifications to the PINN architecture ensuring its correct asymptotic behavior. When combined with an improved numerical scheme employed as an initial guess generator, the proposed modifications are shown to recover the overall stability of the simulations, while preserving the speed-up brought by PINN as the workflow component. We discuss the possible applications of the proposed hybrid transport equation solver in context of chemical reactors simulations.", "sections": [{"title": "INTRODUCTION", "content": "The outstanding abilities of neural networks (NNs) in approximating complex relations have resulted in their successful application in many fields, ranging from image recognition and text comprehension to mimicking the solutions of differential equations encountered in complex engineering problems\u00b9. One of the benefits brought by employing NNs as an alternative to traditional numerical methods is shifting the computational burden to the training phase, which is performed only once, thus enabling faster solution generation during the inference phase. This can be especially helpful in accelerating multi-stage simulations when the output of one computational method is used as an input to another one, as often encountered in engineering problems or digital twins designs 2,3.\nAn illustrative example can be found in chemical engineering problems related to ground-up modeling of chemical reactor or even entire chemical plants. In such applications, theoretical models are commonly available for finding the rates of both the micro-scale phenomena (e.g., molecular-level chemical reactions) and macro-scale phenomena (e.g., heat and mass transport). Their coupling results then in a system of equations which should be solved self-consistently, e.g., by solving the 'micro-scale' equations as a sub-task each time when the evaluation of the source terms in 'macro-scale' equations is required. Replacing solution of such sub-tasks with NNs is then an attractive option to accelerate the overal simulation.\nDespite their advantages, NNs, like many other models which learn from data, often lack interpretability. This makes their reliability in scientific or mission-critical applications questionable. Physics-informed neural network (PINN) approach has been proposed to partially overcome this drawback by incorporating the available theoretical knowledge into the NN training process4. This approach suggests using exact equations known from the theory as the objectives that the function approximated by NN is expected to satisfy. Imposing such"}, {"title": "DEFINING THE PROBLEM", "content": null}, {"title": "The challenge of simulating the Fisher-Tropsch synthesis process", "content": "As a chemical process used for converting synthesis gas which is a mixture of carbon monoxide (CO) and hydrogen (H2) into liquid hydrocarbons, Fischer-Tropsch Synthesis (FTS) plays an important role in the production of synthetic fuels and chemicals 9,10,11,12. It has become an invaluable tool in the chemical industry, offering a pathway to sustainable and diversified fuel sources, providing an alternative route to conventional petrochemical processes.\nAt its core, the FTS process involves the catalytic reaction, which starts from CO and H2, and forms a wide range of hydrocarbons, such as alkanes, alkenes. The overall chemical reactions in which FTS transformations can be summarized are:\n$nCO + (2n + 1)H_2 \\rightarrow C_nH_{2n+2} + nH_2O$ (1)\n$nCO + 2n H_2 \\rightarrow C_nH_{2n} + nH_2O$ (2)\nDetailed mechanism behind these overall reactions depends on thermodynamic conditions and the type of catalyst, and different models are available to describe their actual chemistry9.\nCatalysts play a central role in the FTS process as the reactions predominantly take place on the active sites which are present on the catalyst surface. A significant challenge in FTS is optimizing the reaction rates, which is facilitated by maximizing the surface area of these catalysts. For this purpose, porous catalyst particles are employed, offering a large surface area to volume ratio. This implies that the simulation of the FTS in practical setups should take both the reactions and species transport into account, thereby forming a reaction-diffusion type of the problem.\nIndustrial viability of the FTS process is tightly connected with the design of chemical reactors, which provide a controlled environment for the reactions, enhance catalyst performance and manage heat, allowing for efficient, scalable, safe, and flexible production of the hydrocarbons. Simulating the reactors used for running the FTS process serves multiple important purposes, such as optimizing reaction conditions to maximize their yield and selectivity, preventing undesirable phenomena, such as thermal runaway, ensuring safety and scalability.\nIn traditional approaches to simulating FTS reactors, the behavior of catalyst particles is often fitted using empirical formulae. However, these models necessitate re-parameterization whenever there are changes in particle characteristics such as, size, shape, or porosity. Moreover, empirical formulae typically provide reasonable accuracy within the limited range of reaction conditions, which further restricts the flexibility of process optimization under varied operating conditions."}, {"title": "Reaction-diffusion equations in ground-up modelling of Fischer-Tropsch synthesis process", "content": "The ground-up approach suggests breaking down the overall transformation eqs. (1), (2) into a series of interconnected elementary steps or stages. Each step is then described as an individual reaction with its own rate constant, using which the full reaction pathway kinetics is deduced. In the case of FTS, the processes described by the elementary steps typically include reactant adsorption, chain initiation, chain growth, and product formation/desorption. Such a description is typical for a 'microkinetic' approach 14,15,16,17, as the surface of a catalyst at which the chemical transformations of interest occur acts as a 'microdomain'. The rate constants and other parameters for these equations are estimated based on experimental data, empirical correlations, or ab initio modelling.\nIn this work, we adhere to the set of elementary reactions suggested in 18,19. This model follows CO insertion mechanism of FTS and considers the stationary state of the reacting system, when a dynamic equilibrium has been established between the rates at which different intermediate substances are produced and consumed. As a result, the balance constraints lead to a non-linear algebraic equation which needs to be solved in order to find the dependence of the overall transformation on the thermodynamic conditions 18,19:\n$\\frac{1}{[S]} = C_0 + C_S\\alpha_1(1 + \\alpha_2 + \\alpha_2\\alpha_3 + \\alpha_2\\alpha_3\\alpha_4 + ...)$ (3)\n(where the summation continues up to infinity and its properties will be discussed in more details in subsection 3.1). Here, the fraction of vacant catalytic sites [S] is the unknown which determines the overall reaction rates and is an implicit function of the coefficients\n$C_s = \\frac{1}{1 + K_1P_{CO} + \\sqrt{K_2P_{H_2}}}$, (4)\n$\\alpha_1 = \\frac{C_s}{1 + \\frac{P_{H_2O}}{K_3P_{H_2}} + \\sqrt{K_2P_{H_2}}}$, (5)\nThese coefficients, in turn, depend on the equilibrium constants\n$K_j = A_j \\cdot e^{-\\Delta H_j/(RT)}$\nas the properties of the elementary steps suggested by the CO insertion mechanism as well as thermodynamic conditions at the given point of the system. For convenience and for the sake of consistency with 18,19, we use partial pressures $P_{CO}$, $P_{H_2}$ and $P_{H_2O}$ of CO, H2 and H2O respectively, as well as the temperature T, to describe the thermodynamic conditions at"}, {"title": "RESULTS AND DISCUSSION", "content": null}, {"title": "Asymptotic behavior of CO insertion FTS model in low pressure region", "content": "As the first step in modifying the architecture of PINN, we analyze analytically the true asymptotics which the reaction rates have as the functions of the reactants partial pressures."}, {"title": "Post-processing transformation for SPINN output", "content": "It is known that vanishingly small concentrations of the FTS reactants are quite common in the inner region of the pellet. At the same time, most, if not all, of the data points which are fed into SPINN during its training process correspond to the partial pressures of the reactants which are noticeably non-zero due to pseudo-random sampling of training points. In other words, unless some non-standard training protocol is employed, the region of the SPINN input space which is of interest during the inference phase (e.g., when SPINN is invoked as a part of the diffusion equation solver) is broader than the one used during the training. It is thus critical to ensure that SPINN outputs exhibit correct asymptotic behavior as the functions of partial pressures, when H2 or CO partial pressures become small, i.e., when the inference is performed in an extrapolation regime.\nIn our approach, this requirement is fullfilled by introducing an ad hoc output layer, which we refer to as the post-processing transformation G. This transformation relates the 'raw output' of SPINN (implemented, e.g., as a fully-connected network with commonly used activation functions) to the ultimate quantity of interest [S] as\n$[S] = G(SPINN(X)) = G(y)$,\nwhere y is a 'raw' NN output, and\n$X = {\\frac{P_{CO}}{P_{CO}^{max}}, \\frac{P_{H_2}}{P_{H_2}^{max}}, \\frac{P_{H_2O}}{P_{H_2O}^{max}}, \\frac{T-T^{min}}{T^{max} - T^{min}} }$ (40)\ndenotes the non-dimensionalized thermodynamic conditions which are fed into SPINN as its inputs. Here, we used $P_{CO}^{max} = 6.0 MPa$, $P_{H_2}^{max} = 6.1 MPa$, $T^{min} = 473.15 K$, $T^{max} = 513.15 K$ as the ranges which reasonably reflect the thermodynamic conditions found in FTS chemical reactors (cf. 13).\nBased on the heuristics discussed in Appendix B, we constructed the post-processing transformation as a two-stage procedure. First, we introduce a 'naive' approximation for a2 as\n$\\tilde{\\alpha_2} = (\\alpha_2)_{[S]=\\sigma} = \\frac{K_{growth}}{K_{growth} + K_{par,long} + e^{-2c \\frac{K_{ole,short}}{[S]}} }$ (41)\nwhere $\\sigma(y) = \\frac{1}{C_0 + C_S \\alpha_1(1 + \\frac{K_{ole,short} }{K_{growth}} y)}$, is a 'naive'\ncounterpart of [S] (cf. (B12)) and $\\alpha_{\\infty} = \\frac{K_{growth}}{K_{par,long}}$. We then use it to relate the actual target quantity [S] to the NN output y as\n$[S] = G(y) = \\frac{K_{growth}}{K_{par,long}} \\frac{y}{1+\\alpha_2 + \\alpha_2\\frac{K_{growth}}{K_{ole,short}} y }$, (42)\nWhen $\\sigma$ is small, $\\tilde{\\alpha_2} = \\frac{K_{ole,short} }{C_0 C_S \\alpha_1(1 + \\frac{K_{ole,short}}{K_{growth}} y)} \\approx \\varepsilon^5$, which is small enough to 'damp' $y \\frac{K_{ole,short}}{K_{growth}} \\approx 1$, ensuring that $1 + \\tilde{\\alpha_2} + \\tilde{\\alpha_2} \\frac{K_{ole,short}}{K_{growth}} y \\approx 1$ for small $\\varepsilon$. Accordingly, the dependence of [S] on $\\varepsilon$ becomes determined by $C_S \\sim P_{H_2}^{-2}$ and thus in fact independent of y, as required. When $\\varepsilon$ is not as small (say, at the boundary of the interpolation region of SPINN inputs), $\\sigma$ can be expected to be a good guess for [S]. This is because $1 + \\tilde{\\alpha_2} + \\tilde{\\alpha_2} \\frac{K_{ole,short}}{K_{growth}} y = 1 + \\frac{K_{ole,short}}{K_{growth}} \\approx 1$, y is $\\sigma \\frac{K_{ole,short}}{K_{growth}}$ as soon as $\\varepsilon$ becomes larger than a plateau on which SPINN output y rests at small input pressures, and, as a result, $\\sigma$ follows the correct $\\sim \\varepsilon^4$ (as determined by $C_S \\sim P_{H_2}^{-2} \\sim \\varepsilon^4$) asymptotics, as opposed to $\\sigma \\sim \\varepsilon^5$ which took place at smaller $\\varepsilon$. In turn, when $\\sigma \\approx [S]$, $\\tilde{\\alpha_2} \\approx \\alpha_2$ can be anticipated as well, so that  now needs to approximate only $\\alpha_3 + \\alpha_3 \\alpha_4 + ...$, instead of $\\alpha_2 + \\alpha_2 \\alpha_3 + \\alpha_2 \\alpha_3 \\alpha_4 + ...$ as it was in (B12). This way, (B14) can properly account for the difference between $K_{ole,short}$ and $K_{ole,long}$, or $\\alpha_2$ and $\\alpha_n$ with n \u2265 3 as defined by (7) and (8) respectively.\nFrom the numerical implementation perspective, expression (B14) can be more conveniently rewritten in an equivalent form as\n$[S] = \\frac{K_{growth}}{C_0\\cdot K_{par,long} + C_S\\cdot \\alpha_1\\cdot (K_{par,long} + \\tilde{\\alpha_2}\\cdot (K_{par,long} + K_{growth}y))}$ (B15)"}, {"title": "Initial guess for a conventional equation solver", "content": "Due to its iterative nature, a numerical solver applied to the reaction-diffusion equation needs an initial guess for the functions of interest to start operating. In case of the problem at hands (25), the simplest option available for the initial guess is the constant equal to the value the concentration has at the pellet boundary. However, it appears that with such a naive guess, SciPy's solve_bvp with default settings converges in only ca. 30% of all cases, as we have found by running it for all possible combinations of 50 values of Pco and PH\u2082 equally spaced within 0 to 6 MPa and with PH\u2082O fixed to 0.5 MPa, T = 493.15K. The possible reasons for such a high failure rate with the naive guess are discussed in Appendix F. Specifically, we point out the shortcomings related to using a truncated Taylor series expansion for the source terms when building an implicit finite-difference scheme for the reaction-diffusion system of interest. To mitigate these issues and ensure the solver stability, particularly, preventing it from evaluating the source terms at unphysical negative concentrations, we propose an alternative problem-specific approach to creating the initial guess.\nTo formulate this approach, we introduce the superscripts old and new to denote the values of the target quantity at the two subsequent iterations, and use column-vector w to collectively represent its values at the points of some discrete grid covering the pellet. Given that grid, we also introduce matrix L so that the column-vector Lw contains the values of Laplacian of the target quantity at the grid points. The proposed method is built based on derivative-free linear approximation\n$s(w^{new}) = s(w^{old}) + \\frac{s(w^{old}) - s(0)}{w^{old} - 0}(w^{new} - w^{old}) = \\frac{s(w^{old})}{w^{old}}w^{new}$, (45)\nfor the dependence of the source term s on wnew, applied at each of the grid points. This approximation, enables the use of an implicit numerical scheme and can be viewed either as devising a 'local' \u2018slope\u2019 $a = \\frac{\\partial s}{\\partial w}$ for s(w) at each point of the pellet and then using it to approximate s(wnew), or as a result of imposing the constraint s(w = 0) = 0 and then building a two-point linear approximation for s, leading to $\\frac{s(w^{old})-s(0)}{w^{old}-0}$ as the value of $(\\frac{\\partial s}{\\partial w})_{w^{old}}$ in Taylor-series expansion around wnew.\nIt is worth noting that approximation (45) would have been unusable if $\\lim_{w \\rightarrow 0} s(w)$ was not finite. Therefore, when NN-based model is used to evaluate s(w), such model thus must ensure correct asymptotic behaviour in small-concentrations regions, so that the ratio $\\frac{s(w)}{w}$ remains finite when w \u2192 0 (cf. subsection 3.1)."}, {"title": "CONCLUSIONS", "content": "Design of a neural network trained in a physics-informed manner has been adapted to be usable for accelerating the solution of a multi-stage simulation problem related to Fischer-Tropsch gas-to-liquid chemical synthesis process. We have demonstrated that when the catalyst pellet as the key component of the chemical reactor running the synthesis is described with the system of reaction-diffusion equations, special care must be taken when replacing their exact source terms with numerically more efficient approximations, mimicking exact microkinetics model. Conventional feed-forward architecture of a neural network used as a core component for such an approximation has been found to be inapplicable, as it failed to reproduce correct asymptotic of the reaction rates under small reactants pressures conditions. To tackle this obstacle, we proposed a post-processing transformation, effectively acting as an additional problem-specific output layer of a neural network. We have found that with a properly designed initialization scheme, the proposed PINN architecture allows efficiently solving the system of reaction-diffusion equations for wide range of thermodynamics conditions on the boundary of the pellet.\nThe proposed combination of the PINN architecture and numerical solver initialization scheme can be further applied for ground-up modeling of FTS reactors, allowing for theory-based computation of the properties of chemical interest."}, {"title": "APPENDIX", "content": "A CORRECTIONS EXTRAPOLATING THE OVERALL REACTION RATES TO AN INFINITE $N_{max}$\nIn order to compensate for the error appearing in (16) and (17) due to the finite upper bound $N_{max}$ of summation, we first notice that each of the individual production rates given by (12)\u2013(15) is proportional to $n\\cdot \\Pi_{j=1}^n \\alpha_j$ (in case of paraffins) or $n e^{cn} \\cdot \\Pi_{j=1}^n \\alpha_j$ (in case of olefins). Specifically,\n$S_{par}^{sole} = \\frac{\\Sigma_{n=1}^{\\infty}(n R_{C_n H_{2n+2}}) - \\Sigma_{n=1}^{N_0}(n R_{C_n H_{2n+2}})}{K_{par,long}[S]^2} =  \\Sigma_{n=N_0+1}^{\\infty}n \\cdot \\Pi_{j=1}^{n} \\alpha_j$ (A1)\nand\n$S_{ole}^{sole} = \\frac{\\Sigma_{n=2}^{\\infty}(n R_{C_n H_{2n}}) - \\Sigma_{n=2}^{N_0}(n R_{C_n H_{2n}})}{K_{ole,long}[S]} = \\Sigma_{n=N_0+1}^{\\infty}(n \\cdot e^{cn}) \\cdot \\Pi_{j=1}^{n} \\alpha_j$ (A2)\ncan be introduced as the corrections related to truncations of the sums. Summation bound $N_0$ is introduced here as the threshold defined so that for j > $N_0$ the chain growth probabilities $\\alpha_j$, defined by (8), are essentially independent on j as a consequence of $e^{cj}$ becoming vanishingly small in (8). For j > $N_0$ we can thus put $\\alpha_j \\approx \\alpha_{N_0+1}$. It is further assumed that $N_{max}$ \u2265 $N_0$, i.e., $N_{max}$ used in (16) and (17) exceeds the threshold $N_0$. As (A1) can be considered as a partial case of (A2) with c = 0, it is sufficient to analyze (A2) only. By replacing $\\alpha_j$ with $\\alpha_{N_0+1}$ for j \u2265 $N_0 + 1$, we get for n \u2265 $N_0 + 1$\n$\\Pi_{j=1}^{n} \\alpha_j = (\\Pi_{j=1}^{N_0} \\alpha_j) \\cdot \\Pi_{j=N_0+1}^{n} \\alpha_j \\approx (\\Pi_{j=1}^{N_0} \\alpha_j) \\cdot \\alpha_{N_0+1}^{(n - N_0)} = (\\Pi_{j=1}^{N_0} \\alpha_j) \\cdot (\\frac{\\alpha_{N_0+1}}{e})^n$ (A3)\nIt is convenient to introduce $\\alpha_{N_0+1e} = \\frac{\\alpha_{N_0+1}}{e}$ as a shorthand notation. We thus have to compute\n$S_{ole}^{approx} = \\frac{(\\Pi_{j=1}^{N_0} \\alpha_j)}{\\alpha_{N_0+1}}\\Sigma_{n=N_0+1}^{\\infty} n(e \\alpha_{N_0+1})^n = \\frac{(\\Pi_{j=1}^{N_0} \\alpha_j)}{\\alpha_{N_0+1}}\\Sigma_{n=N_0+1}^{\\infty} n(\\frac{\\alpha_{N_0+1}}{e})^n$ (A4)"}, {"title": "HEURISTICS USED TO CONSTRUCT A POST-PROCESSING TRANSFORMATION FOR SPINN", "content": "We now turn to discussing some heuristics which are helpful for building the function G capable of ensuring that [S] has a correct asymptotic behaviour in the small pressures region and, therefore, the required extrapolation abilities. By considering (31) as a starting point, the simplest form of the post-processing transformation would be\n$G_{simple}(y) = \\frac{1}{C_0 + C_s \\cdot \\alpha_1 \\cdot (1 + y)}$\nso that with y = SPINN(X) we get $[S] = (C_0 + C_s \\cdot \\alpha_1 \\cdot (1 + SPINN(X)))^{-1}$. However, such form can require SPINN to output values much larger than unity, which is not desirable, as it would deviate the output from a standard normal distribution significantly. Another option could be using $\\alpha_{\\infty}$, in which 0  N_0\\alpha+1^{No} \\frac{L(\\varepsilon \\alpha_{N_0+1}, N_0)}{K_{par,long} [S]^2}$ (A7)\nwhere we used (12). Similarly to that, (14) can be used to represent (A6) as\n$S_{par}^{approx} = \\frac{R_{C_{N_0}H_{2N_0+2}}}{K_{ole, long [S]}} = e^{cN_0} \\alpha+1^{No} \\frac{L(\\varepsilon \\alpha_{N_0+1}, N_0)}{K_{ole, long [S]}$ (A8)\nTo estimate a lower bound for No, we should require that $e^{cN_0} < 1$. According to Eq.(6) of 18, $c = \\frac{\\Delta E}{RT}$, with Table 2 of the same paper suggesting $\\Delta E = 1.1 \\frac{kJ}{mol}$, so that for 513 K as as the upper boundary of the selected temperature range, we have $RT/\\Delta E \\approx 4$. Then, if we require that $- cN_0= -\\log(10^{-8}) \\approx 18$ (with the 'small value' of $10^{-8}$ being related to the machine epsilon round-off threshold of $2^{-23} \\approx 1.2 \\cdot 10^{-7}$ in case of 32-bit single precision representation of floating-point numbers), we conclude that any $N_0 > 4\\cdot 18 = 72$ should be a reasonable choice. We thus simply set $N_0$ equal to $N_{max}$ = 100.\nWhen combined with (A1) and (A2), results (A7) and (A8) now lead to the approximations\n$\\Sigma_{n=1}^{N_{max}}(n \\cdot R_{C_n H_{2n+2}}) \\approx \\Sigma_{n=1}^{N_0}(n \\cdot R_{C_n H_{2n+2}}) + L(\\alpha_{N_0+1}, N_{max}) \\cdot R_{C_{N_{max}} H_{2N_{max}+2}}$ (A9)\nfor paraffins and\n$\\Sigma_{n=2}^{N_{max}}(n \\cdot R_{C_n H_{2n}}) \\approx \\Sigma_{n=2}^{N_0}(n \\cdot R_{C_n H_{2n}}) + L(\\alpha_{N_0+1}, N_{max}) \\cdot R_{C_{N_{max}} H_{2N_{max}}}$ (A10)\nfor olefins. Furthermore, as discussed in 13,\n$\\Sigma_{n=N_0+1}^{\\infty} \\Pi_{j=1}^{n} \\alpha_j = \\frac{\\Pi_{j=1}^{N_0} \\alpha_j}{1 - \\alpha_{N_0+1}}$, (A11)\nimplying that\n$\\Sigma_{n=1}^{N_{max}}R_{C_n H_{2n+2}} -  \\Sigma_{n=1}^{N_0}R_{C_n H_{2n+2}} \\approx R_{C_{N_{max}}H_{2N_{max}+2}} \\cdot \\frac{1}{1 - \\alpha_{N_{max}+1}} $ (A11)\nResults (A9), (A10) and (A11) thus allow extrapolating $R_{CO}$ and $R_{H_2}$, defined in (16) and (17), to $N_{max}$ = \u221e."}, {"title": "Application Example", "content": "The developed multi-stage numerical scheme accelerated by PINN enabled us to compute several quantities of chemical interest as a function of non-dimensionalized reactants pressures $X_{CO} = p_{CO}/p_\\text{max}$ and $X_{H_2} = p_{H_2}/p_\\text{max}$ at fixed temperature of 493.15 K and H2O pressure of 0.5 MPa. Technically, for each of the 2500 considered combinations of H2 and CO pressures, the concentration profiles were obtained by solving the reaction-diffusion equation (25), and the resulting hydrocarbons formation rates were then analyzed. We considered such quantities as total consumption of CO by the pellet\n$R_{CO}^{tot} = \\int_0^{R_p} R_{CO}(P_{CO}(r), P_{H_2}(r), P_{H_2O}(r), T) 4 \\pi r^2 dr$, (D16)\n$C_{5+}$ fraction\n$C_{5+} = \\frac{\\Sigma_{n=5}^{N_{max}} R_{C_n H_{2n+2}}^{tot} + \\Sigma_{n=5}^{N_{max}} R_{C_n H_{2n}}^{tot}}{\\Sigma_{n=1}^{N_{max}} R_{C_n H_{2n+2}}^{tot} + \\Sigma_{n=2}^{N_{max}} R_{C_n H_{2n}}^{tot}}$ (D17)\nand the pellet effectiveness factor for CO consumption\n$\\eta_{CO} = \\frac{\\int_0^{R_p} R_{CO}(P_{CO}(r), P_{H_2}(r), P_{H_2O}(r), T) \\cdot 4\\pi r^2 dr}{R_{CO}(P_{CO}(R_p), P_{H_2}(R_p), P_{H_2O}(R_p), T)}$ (D18)"}, {"title": "Peculiarities of the source terms approximations in context of reaction-diffusion equation solver", "content": "Below we discuss the possible reasons for such a high failure rate with the naive guess and propose an alternative problem-specific approach to creating the initial guess.\nFor the pellet model, the reaction-diffusion differential equations which are to be solved can be generalized as\n$\\Delta w = -s(w)$,\ni.e., as the Poisson-type equation with the source term s(w) being a non-linear function of the target quantity 'profile' w(r) (the distribution of either temperature or concentration of one of the substances across the pellet). For the non-linear equation at hands, numerical methods are always iterative. Because of that and given the 'dissipative' nature of the diffusion and heat transfer processes, in a sense that they always tend to take system to a well-defined steady-state (a non-equilibrium one, in thermodynamic terms), it is quite natural to design the iterations of the solution process such that they mimic the time evolution of the system, starting from some an arbitrary initial guess, compatible with the boundary conditions. As mentioned in subsection 2.2, the problem statement at hands is aimed at finding the stationary concentration profiles, so that timesteps discussed below should rather be treated merely as a numerical heuristics, rather than a physical time.\nIn context of the iterative solution process, we will use superscripts old and new to denote the values of the target quantity at the two subsequent iterations (the moments of \u2018time') and use column-vector w to represent the values of the target quantity at the points of some discrete grid covering the pellet. As the derivatives in the finite-difference schemes are related to the components of w, we will use L to denote the matrix built so that the column-vector Lw contains the values of Laplacian of the target quantity w at the grid points.\nAccordingly, explicit and implicit schemes for finding wnew based on wold can be summarized as\n$\\frac{w^{new} - w^{old}}{\\tau} = Lw^{old} + s(w^{old})$ (F19)\n$\\frac{w^{new} - w^{old}}{\\tau} = Lw^{new} + s(w^{new})$ (F20)\nrespectively. In these equations, $\\tau$ is the 'time' step (in properly scaled units), and s(w) is the vector-function returning the values of the source terms s(w) on the grid points. If the latter function was linear, using either of (F19) or (F20) would both reduce to solving a system of linear equations at each iteration. However, in the pellet modeling problem the source term function is non-linear and, as a result, using (F20) to find wnew based on wold requires solving a system of non-linear equations, which complicates the procedure significantly. Therefore, to make the implicit scheme tractable, it is common to introduce approximations for r.h.s. of (F20) and to express the (small) changes in s (wnew) via the changes in w in a linear manner. The coefficients of their relationship can typically be updated at each iteration. It is the form of these linear approximations that can impact the stability and the performance of the ultimate method significantly.\nIn the FTS catalyst pellet modeling problem, the source term function (22) can be considered as a 'local', in a sense that its value at certain point of the pellet depends only on the values of substances concentrations or temperature at the same point. In other words, j-th component of column-vector s(w) depends only on j-th component of column-vector w (or parameters with respect to which no derivatives are taken in the considered differential equation). This feature simplifies the approximation of s (wnew), reducing it to a component-wise approximation problem. One common option for such approximation could be using the Taylor series expansion for $s_j(w_j^{new})$ in the vicinity of $w_j^{old}$ and terminating it after the linear terms, viz.\n$s_j(w_j^{new}) \\approx s_j(w_j^{old}) + \\frac{\\partial s_j}{\\partial w} |_\\text{old} (w_j^{new} - w_j^{old})$ (F21)\nWe have found, however, that this leads to unstable iterations which often fail to converge, especially if the solution contains a region of small concentrations. Therefore, more delicate approximation scheme is needed.\nTo this end, we consider the situation when the reactants penetrate into the pellet through its surface from the surrounding medium in a ratio when one of the reactants is consumed much more actively than the others. In that case, the closer to the pellet center, the more limited the overall chain of reactions will be by the availability of the actively consumed reactant. The rate of the elementary reaction in which it is consumed will then become the limiting factor for the the overall rate of chemical transformations. It can then be expected that this 'rate limiting'"}]}