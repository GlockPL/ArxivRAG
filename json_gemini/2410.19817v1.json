{"title": "Step Guided Reasoning: Improving Mathematical Reasoning using Guidance Generation and Step Reasoning", "authors": ["Lang Cao", "Chao Peng", "Yitong Li"], "abstract": "Mathematical reasoning has been a challenging aspect of large language models (LLMs). However, the introduction of step-by-step Chain-of-Thought (CoT) inference has significantly advanced the mathematical capabilities of LLMs. Despite this progress, current approaches either require massive inference datasets as training datasets or rely on few-shot methods that often sacrifice accuracy. To address this bottleneck in mathematical reasoning, we propose a novel method called Step Guidance Reasoning without involving further model finetuning. In this approach, LLMs reflect on small reasoning steps - similar to how humans deliberate on and focus attention on what to do next. By incorporating this reflective process into the inference stage, LLMs can effectively guide their reasoning from one step to the next. Our method significantly improved the math performance, raising the accuracy on the AMC23 dataset from 30% to 57.5%, a relative improvement of 91.7%, and on the sampled level 5 problem of the MATH dataset, we achieved a relative accuracy improvement of 55.8%, increasing from 43% to 67%.", "sections": [{"title": "1 Introduction", "content": "Since the introduction of Chain-of-Thought (COT) (Wei et al., 2022) reasoning on LLMs (Naveed et al., 2023; Zhao et al., 2023), complex problems can be broken down into smaller but more manageable reasoning steps during LLMs inference, much like how humans approach logical reasoning. However, complex mathematical reasoning remains as a significant challenge for LLMs (He et al., 2024). Even though the accuracy of LLMs in mathematical reasoning can be improved with the scaling of model parameters and that of the training data, the amount of high-quality COT data becomes the bottleneck (Hoffmann et al., 2022).\nTo tackle these, on one hand, cumulative reasoning (Zhang et al., 2023) has been proposed as a new method, which has made great improvements on MATH datasets. Cumulative reasoning significantly enhances problem-solving by decomposing the task into smaller, more manageable parts and utilizing previous propositions for effective combination. On the other hand, Zheng et al. proposed a \"Take one Step Back\u201d method, which introduced concepts and principles to guide the model reasoning using results from high-level descriptions of the original questions. Both of these schemes improve the accuracy of mathematical reasoning by generating intermediate but useful contexts, namely \"scratchpad\" (Nye et al., 2021), during the inference phase, scaling the test-time computation (Snell et al., 2024).\nHowever, both methods showed improvement on medium-difficulty datasets such as the MATH dataset (Hendrycks et al., 2021b) and MMLU Stem (Hendrycks et al., 2021a), but when coming to challenging math problems, such as competition level math (AI-MO, 2024b,a), neither of them work well. To be more specific, we observed that more challenging math tasks often require more thought reasoning steps (see analysis of Figure 2) to complete the answer. Inspired by these observations, we propose a method called Step Guidance Reasoning (SGR) that introduces guidance thought in step-by-step reasoning, and SGR can improve challenging math problems without the finetuning model. In more detail, in each reasoning step of our approach, the model is prompted to firstly self-question what to do next, secondly to self-answer this question that can help next-step generation, and lastly to use this reflection to guide the subsequent generation process. Through this method, we observe significant improvements in solving complex problems, particularly in multi-step tasks like the Olympic Mathematical Challenge, provided the model already demonstrates a certain level of accuracy on"}, {"title": "2 Method", "content": "Our SGR involves multiple thought steps during the inference time, each step consisting of two main generation components, a step guidance generation and a reasoning generation. The overall illustration of our method is shown in Figure 1, the model first generates a step guidance related to the given math problem and then uses the generated step guidance to make a one-step answer at the current step. This procedure terminates until the model generates the final answer or reaches the budget of iterations."}, {"title": "2.1 Step Definition", "content": "Since our method is based on an instruction model and does not require further finetuning, we describe how we define one step during inference. Theoretically, a step can be defined using different granularities, such as token level (Zelikman et al., 2024), sentence level (Jarrahi et al., 2023), paragraph level (Chalkidis et al., 2021), or block level\nIn detail, we found that for English outputs,\". \\n\\n\" can serve as an effective delimiter for logical inference for most instruction/chat models, such as GPT-4 and Qwen. However, directly splitting the reasoning at every \u201c.\\n\\n\u201d can cause repetitions in the model's generation that instead of progressing to the next step, the model tends to repeatedly analyze the first step, mistaking it as an instruction to reanalyze the problem. To mitigate this problem, we introduced a step length constraint, that each step, indicated by \". \\n\\n\", require a minimum number of tokens. Theoretically, each problem could require different step lengths, and even within one problem, different steps may vary in length. Ideally, we would finetune the LLMs over manually labelled data with a special step token to explicitly distinguish between steps, however, we do not consider this in this paper."}, {"title": "2.2 Step Guidance", "content": "The process of generating the step guidance involves two parts. For the first iteration, the LLM is asked the first step guidance question additionally, which is related to the query and includes its relevant knowledge. Then the LLM answers"}, {"title": "2.3 Reasoning", "content": "During the reasoning stage, the step guidance and the previously accumulated reasoning results are included in the prompt to facilitate continued reasoning, which is influenced by the step guidance's problem-solving format and strategies. The generation process is halted once it reaches the token \". \\n\\n\u201d with a minimum length, marking the completion of the current step. This approach resembles Reach-Augmented Generation (Gao et al., 2023), but the additional context is generated by the LLM itself rather than being pre-existing.\nThe above Step Guidance and Reasoning procedures terminate"}, {"title": "3 Experiments", "content": ""}, {"title": "3.1 Experimental Setups", "content": "Dataset For evaluation, we use three representative challenging math benchmarks, AMC23 (), level 5 test cases of MATH (Hendrycks et al., 2021b), and AIME24 (AI-MO, 2024b). Among AIME24, AMC23 and level 5 of MATH, \u0391\u0399\u039c\u039524 is the most challenging while level 5 of MATH is relatively easy. All three datasets provide the problem as a query and a reference answer, and we"}, {"title": "3.2 Experiment Results", "content": "Table 1 shows the overall results of the proposed methods. The results show that for both top_p setups, SGR consistently improves the performance over three datasets compared with standard CoT. With top_p equals 0.7, the relative improvement is 55.8% for the MATH test set, 62.5% for AMC23, and 94.0%.\nCompared with sota math-specific open-sourced models, Qwen2-Math-72B-instruct and Qwen2.5-Math-7B, we achieve comparable performance, while our SGR do not require finetuning data."}, {"title": "3.3 Analysis", "content": "Answer Step We first analyse the number of steps needed to ask a math problem across different datasets (see Figure 2). The number of steps in MATH is more concentrated in step 2 (37%), while answering AMC23 requires more steps, concentrated in step 3 and step 4 (46% in total).\nStep Length We experiment with the model performance with different step lengths, ranging from 100 to 600, over the MATH dataset. As illustrated in Figure 4, we observed that the accuracy improves as the step length increases from 59% at 100 to a peak of 67% at length 300. However, when step length further increases, the accuracy begins to fluctuate, and eventually reverting to 59% at 600 steps. Compared with standard CoT methods, SGR consistently outperforms CoT. This highlights the importance of identifying an optimal step length to achieve maximum accuracy and demonstrate the robustness of our method using different step lengths."}, {"title": "Case Study", "content": "To understand how our method improves the reasoning procedure, we demonstrate an example in Figure 3. Compared to standard CoT and SGR at step 1, when calculating the \"second train\", the step guidance generated by SGR can help the model to carry out the correct logical reasoning, while direct CoT reasoning makes an error."}, {"title": "4 Conclusion", "content": "We propose a step-by-step reasoning method incorporating guidance generation within each step for math problem tasks. Our method can be applied to a general instruction-finetuned model and does not require further fine-tuning. We demonstrate that SGR approach gains absolute accuracy improvement over MATH (level 5 problems), AMC23 and AIME24 benchmarks by 24%, 25% and 6.3% respectively, using qwen2-72B-instruct."}, {"title": "Limitations", "content": "Due to the limitation of our calculation resource in the inference stage, the test data in the experiment can only be sampled from a part of level 5 of MATH. In addition, the GPT4 evaluation results are limited in scope. Therefore, we used manual evaluation methods on the AMC23 and the AIME test datasets."}, {"title": "A Appendix", "content": ""}, {"title": "A.1 Prompt", "content": "Prompt 1:\n<<question>>>\nIf you need to solve a current problem for a current problem, what relevant knowledge do you need?\nAsk a question about relevant knowledge. Please note: You only need to ask the question, you do not need to answer it.\nPrompt 2:\nThe answers should be short, but organized and informative.\n<<Step Guider Question>>>\nPrompt 3:\nIf you need to solve the current problem for the current step, what relevant knowledge will be needed in the future?\nPrompt 4:\nNext for the current topic to continue the next step of the answer, be sure not to repeat the previous content, to answer according to the previous content.\n<<<Step Guidance\u00bb"}, {"title": "A.2 A full Context of Example", "content": "Question\nPaul is at a train station and is waiting for his train. He isn't sure how long he needs to wait, but he knows that the fourth train scheduled to arrive at the station is the one he needs to get on. The first train is scheduled to arrive in 10 minutes, and this train will stay in the station for 20 minutes. The second train is to arrive half an hour after the first train leaves the station, and this second train will stay in the station for a quarter of the amount of time that the first train stayed in the station. The third train is to arrive an hour after the second train leaves the station, and this third train is to leave the station immediately after it arrives. The fourth train will arrive 20 minutes after the third train leaves, and this is the train Paul will board. In total, how long, in minutes, will Paul wait for his train?\n\u2022 The First iteration\nStep Guidance Question\nWhat is the schedule and duration of stay for each train arriving at the station before Paul's train, and how does this affect the total waiting time for Paul's train?\nStep Guidance\nTo answer your question, I would need more specific information about which station and which trains you are referring to. However, I can provide a general explanation of how train schedules and durations of stay can affect waiting times.\nThe schedule of each train arriving at a station is typically determined by the train operator and can be found on their website or at the station. The duration of stay for each train, also known as the dwell time, is the time the train spends at the station for passengers to board and disembark. This can vary depending on the number of passengers and the type of train.\nIf Paul's train is scheduled to arrive after several other trains, the total waiting time for his train may be affected by the dwell times of the previous trains. If the previous trains have longer dwell times, this can cause delays for subsequent trains, including Paul's train. However, if the previous trains have shorter dwell times and are on schedule, Paul's train may arrive on time or even early.\nOverall, the schedule and duration of stay for each train can have a significant impact on the waiting time for subsequent trains, and it's important for train operators to manage these factors to minimize delays and ensure on-time performance.\nResponse for the First iteration\nTo calculate the total waiting time for Paul, we need to consider the arrival and departure times of each train and the duration of stay for each train.\n1. The first train arrives in 10 minutes and stays for 20 minutes. Therefore, it will depart 30 minutes after its arrival.\n2. The second train arrives 30 minutes after the first train leaves. Since the first train leaves 30 minutes after its arrival, the second train arrives 60 minutes after the first train's arrival. The second train stays for a quarter of the time the first train stayed, which is 5 minutes (20 minutes/4). Therefore, the second train will depart 65 minutes after the first train's arrival.\n\u2022 The Second iteration\nStep Guidance\n3. The third train arrives an hour after the second train leaves. Since the second train leaves 65 minutes after the first train's arrival, the third train arrives 125 minutes after the first train's arrival (65 minutes + 60 minutes). The third train leaves immediately after it arrives, so it doesn't add any additional waiting time for Paul.\n4. The fourth train, which is Paul's train, arrives 20 minutes after the third train leaves. Since the third train leaves immediately after it arrives, the fourth train arrives 145 minutes after the first train's arrival (125 minutes + 20 minutes).\nTo find out how long Paul waits for his train, we need to calculate the time from when he arrives at the station to when the fourth train arrives. Since the first train arrives in 10 minutes, Paul arrives at the station at this time. Therefore, Paul waits for his train for 135 minutes (145 minutes - 10 minutes).\nIn the future, to solve similar problems, you will need to know: - The schedule of the trains, including arrival and departure times. The duration of stay for each train. - The sequence of the trains that Paul needs to board. The time Paul arrives at the station.\nWith this information, you can calculate the total waiting time by determining the arrival time of the required train and subtracting the time Paul arrives at the station.\nResponse for the Second iteration Given the information provided:\n1. The first train arrives in 10 minutes and stays for 20 minutes, so it departs 30 minutes after its arrival.\n2. The second train arrives 30 minutes after the first train leaves, which is 60 minutes after the first train's arrival. It stays for 5 minutes (a quarter of the first train's stay), so it departs 65 minutes after the first train's arrival.\n\u2022 The third iteration\nStep Guidance\n3. The third train arrives an hour after the second train leaves. Since the second train departs 65 minutes after the first train's arrival, the third train arrives 125 minutes after the first train's arrival (65 minutes + 60 minutes). The third train leaves immediately after it arrives, so it doesn't add any additional waiting time for Paul.\n4. The fourth train, which is Paul's train, arrives 20 minutes after the third train leaves. Since the third train arrives and leaves immediately, the fourth train arrives 145 minutes after the first train's arrival (125 minutes + 20 minutes).\nTo find out how long Paul waits for his train, we need to calculate the time from when Paul arrives at the station to when the fourth train arrives. Since Paul arrives at the station at the same time the first train is scheduled to arrive (10 minutes from now), we can subtract the 10 minutes from the 145 minutes to find Paul's total waiting time.\nPaul's total waiting time = 145 minutes -\n10 minutes = 135 minutes.\nTherefore, Paul will wait for 135 minutes for his train to arrive. The relevant knowledge needed for future steps would be the ability to calculate time intervals, understand schedules, and perform basic arithmetic operations. Additionally, un-\nContinuing from the previous steps:\n3. The third train arrives an hour after the second train leaves. Since the second train departs 65 minutes after the first train's arrival, the third train arrives 125 minutes after the first train's arrival (65 minutes + 60 minutes). The third train leaves immediately after it arrives, so it doesn't add any additional waiting time for Paul.\n\u2022 The Forth iteration\nStep Guidance\n4. The fourth train, which is Paul's train, arrives 20 minutes after the third train leaves. Since the third train arrives and leaves at the same time, which is 125 minutes after the first train's arrival, the fourth train arrives 145 minutes after the first train's arrival.\nTo find out how long Paul waits for his train, we need to consider when he arrives at the station. Since the problem doesn't specify when Paul arrives, we can assume he arrives just before the first train is scheduled to arrive, which is at the 10-minute mark. Therefore, Paul's waiting time is the time from his arrival until the fourth train arrives.\nGiven that Paul arrives just before the first train arrives (at the 10-minute mark) and the fourth train arrives 145 minutes after the first train's arrival, Paul's total waiting time is 145 minutes.\nHowever, since Paul arrives 10 minutes before the first train, we need to subtract those 10 minutes from the 145 minutes to find the total time Paul actually waits from his arrival. Therefore, Paul's total waiting time is 135 minutes (145 minutes\n10 minutes).\nIn summary, the relevant knowledge needed to solve this problem includes understanding the schedule of each train, calculating the departure times based on arrival and stay times, and determining the total waiting time for Paul based on\nhis arrival time and the arrival time of his train.\nResponse for the Fourth iteration\nGiven the sequence of events and the timing for each train's arrival and departure:\n1. The first train arrives 10 minutes after Paul's arrival and stays for 20 minutes, departing 30 minutes after Paul's arrival. 2. The second train arrives 30 minutes after the first train leaves, which is 60 minutes after Paul's arrival, and stays for 5 minutes, departing 65 minutes after Paul's arrival. 3. The third train arrives an hour after the second train leaves, which is 125 minutes after Paul's arrival, and departs immediately.\n\u2022 The Fifth iteration\nStep Guidance\nTo find out how long Paul will wait for his train, we need to calculate the arrival time of the fourth train and compare it to the time Paul arrived at the station. Here's the breakdown:\n1. **First Train:** - Arrives 10 minutes after Paul's arrival. - Stays for 20 minutes. Departs 30 minutes after Paul's arrival.\n2. **Second Train:** - Arrives 30 minutes after the first train leaves, which is 60 minutes after Paul's arrival. - Stays for 5 minutes (a quarter of the first train's stay). - Departs 65 minutes after Paul's arrival.\n3. **Third Train:** - Arrives an hour after the second train leaves. Since the second train departs 65 minutes after Paul's arrival, the third train arrives 125 minutes after Paul's arrival (65 minutes +\n60 minutes). - Leaves immediately after it arrives.\n4. **Fourth Train:** - Arrives 20 minutes after the third train leaves. Since the third train arrives 125 minutes after Paul's arrival and leaves immediately, the fourth train arrives 145 minutes after Paul's arrival.\nGiven that Paul arrived at the station at time 0, the total waiting time for Paul is the time the fourth train arrives, which is 145 minutes. Therefore, Paul will wait for 145 minutes for his train to arrive. This calculation takes into account the arrival and departure times of each train and the duration of stay for each train, as well as the time between the departure of one train and the arrival of the next. This information is necessary to determine the exact waiting time for Paul.\nResponse for the Fifth iteration\nContinuing from the established sequence:\n4. The fourth train, which is the one Paul is waiting for, arrives 20 minutes after the third train leaves. Since the third train arrives 125 minutes after Paul's arrival and departs immediately, the fourth train arrives 145 minutes after Paul's arrival. Therefore, Paul's total waiting time is 145 minutes, which is the time it takes for the fourth train to arrive after he initially arrives at the station. This total includes the waiting times for all the preceding trains to arrive, depart, and the intervals between their departures and the arrivals of the subsequent trains."}]}