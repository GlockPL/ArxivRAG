{"title": "Physically Interpretable Probabilistic Domain Characterization", "authors": ["Ana\u00efs Halin", "S\u00e9bastien Pi\u00e9rard", "Renaud Vandeghen", "Beno\u00eet G\u00e9rin", "Maxime Zanella", "Martin Colot", "Jan Held", "Anthony Cioppa", "Emmanuel Jean", "Gianluca Bontempi", "Sa\u00efd Mahmoudi", "Beno\u00eet Macq", "Marc Van Droogenbroeck"], "abstract": "Characterizing domains is essential for models analyzing dynamic environments, as it allows them to adapt to evolving conditions or to hand the task over to backup systems when facing conditions outside their operational domain. Existing solutions typically characterize a domain by solving a regression or classification problem, which limits their applicability as they only provide a limited summarized description of the domain. In this paper, we present a novel approach to domain characterization by characterizing domains as probability distributions. Particularly, we develop a method to predict the likelihood of different weather conditions from images captured by vehicle-mounted cameras by estimating distributions of physical parameters using normalizing flows. To validate our proposed approach, we conduct experiments within the context of autonomous vehicles, focusing on predicting the distribution of weather parameters to characterize the operational domain. This domain is characterized by physical parameters (absolute characterization) and arbitrarily predefined domains (relative characterization). Finally, we evaluate whether a system can safely operate in a target domain by comparing it to multiple source domains where safety has already been established. This approach holds significant potential, as accurate weather prediction and effective domain adaptation are crucial for autonomous systems to adjust to dynamic environmental conditions.", "sections": [{"title": "1 Introduction", "content": "Advances in computer vision allow widespread camera monitoring, but diverse weather conditions lead to visually different data, sometimes impacting the per-"}, {"title": "2 Related Work", "content": ""}, {"title": "2.1 Predicting Weather Conditions from Images", "content": "Prediction of weather conditions from images was first formulated as a single-label classification task (e.g., sunny, cloudy, or foggy). In 2014, Lu et al. [28] proposed a binary classification task between sunny and cloudy weathers, using features extracted from visual cues such as the sky, shadows, reflections, contrast, and haze. Later, Guerra et al. [48] proposed a multi-class dataset extending the scope of the classification task to rain, snow, and fog. Recent works focus on optimizing Convolutional Neural Network (CNN) to obtain strong features for common and uncommon weather conditions [27,55]. However, weather conditions can hardly be represented by crisp classification due to its continuous nature. To reach a more realistic description of intricate relations between weather conditions, recent methods simultaneously regress several physical parameters [17, 18]. To increase interpretability, Li et al. [26] also assign cues of weather characteristics to each pixel. However, these methods still lack the ability to represent ambiguous scenarios (see Fig. 2). In this work, we predict the joint distribution of weather parameters by proposing a novel method based on normalizing flows."}, {"title": "2.2 Handling Weather Conditions for Autonomous Driving", "content": "Autonomous car driving systems need to be efficient under all weather condi-tions. Some methods propose to integrate a generalization step to the model to remove the environmental influences on the acquired images, by introducing a style layer inspired by images style-transfer neural networks [38] or through adversarial training [25]. Generalized features obtained from alignment of source and target domains tend to be suboptimal, as they do not consider the task. To improve the estimation, a solution is to add a domain adaptation step [24]. Jeon et al. [19] further improved their estimation by adding an unsupervised domain adaptation step after domain alignment.\nMany studies have also highlighted the importance of a strong ODD definition to properly assess the ability of automatic driving systems to work in given conditions regarding weather, location, other vehicles on the road, state of the car sensors and many other environmental parameters [3,12,33]. Many strategies have been proposed to evaluate different situations according to specific evaluations of potential damage cost [23,44] and define the boundaries of the ODD. In this work, we characterize the domain by a probability distribution focusing on weather parameters in autonomous driving environment."}, {"title": "2.3 Probabilistic Modeling of Parameters Distributions", "content": "We propose to leverage recent observations in the Simulation-Based Inference (SBI) literature [4,47] for domain characterization. This literature has seen a rapid expansion thanks to new density estimation techniques in problems where likelihood estimation was often intractable, especially for high dimensional data."}, {"title": "3 The Three Fundamental Tasks Behind the Physically Interpretable Probabilistic Domain Characterization", "content": "Our experiments are organized around three different tasks, involving a prediction of the distribution of weather conditions given some images acquired by color cameras placed in front of vehicles. Before elaborating on these tasks in Sec. 3.2, 3.3, and 3.4, we briefly introduce our framework in Sec. 3.1."}, {"title": "3.1 Framework", "content": "Mathematical Modeling. We denote the set of all possible values for the physical parameters (e.g. weather conditions) by W and the set of all observations of interest (e.g. images) by I. We adopt the probability theory of Kolmogorov [21,22] and consider a measurable space (\u03a9, \u03a3) as well as the (generalized) random variables W : \u03a9 \u2192 W for the physical parameters and I : \u03a9 \u2192 I for the observation. Following the mathematical modeling introduced in [35], we consider the set D(\u03a9,\u03a3) of domains d in which there is a probability measure Pd on (\u03a9, \u03a3). We see the ODD of a given autonomous system as the set of domains in which it can be used safely, no matter if this has been established by design or by testing. Thus, ODD \u2286 D(\u03a9,\u03a3)\u00b7\nData. All our experiments are performed on data generated using the CARLA software, an open-source simulator for autonomous driving research [6]. All images are acquired by a simulated camera placed in front of a vehicle called ego vehicle. The weather is controlled through 13 real-valued parameters (see Ta-ble 1). There are 6 parameters for which we make predictions. Thus, W \u2286 R6."}, {"title": "3.2 Task I: Predicting Distributions of Physical Parameters", "content": "The first task (see Fig. 3) consists in predicting how likely various physical parameters are, jointly. As these parameters cannot, in general, be measured directly, it is necessary to estimate the likelihood, i. e. the distribution of plausible values, based on an indirect observation.\nCase Study. We study here the particular case in which the physical parameters are relative to the weather conditions and the observations are color images i \u2208 I acquired by cameras placed in front of vehicles. We aim at learning, offline, a deep learning model i \u2192 Pdr(W|I = i), where dr denotes a domain of reference in which the probability measure on (\u03a9, \u03a3) is Pdr. This domain is arbitrarily chosen in such a way that Pdr has a large support.\nData. We use CARLA to generate a dataset with 635k images and the corresponding ground-truth values for the weather parameters. The dataset (Fig. 4) is split into a learning set (LS) with 600k images (500k for the training set and 100k for the validation set) and a test set (TS) with 35k images. Letting the"}, {"title": "3.3 Task II: Absolute Domain Characterization", "content": "The second task (see Fig. 7) consists in characterizing a domain in an easy-to-interpret way. For this, we opt for a distribution of physical parameters estimated based on a bag (a.k.a. multiset) of observations.\nCase Study. We characterize a domain d \u2208 D(\u03a9,\u03a3) by the estimated distribution Pa(W) of weather conditions based on a real-valued bag b (multiset) of arbitrarily weighted images acquired by cameras placed in front of vehicles. In the following, we denote the weight (multiplicity) of the image i \u2208 b by w(i). The images can either originate from a unique vehicle or from several, in case of vehicle-to-vehicle (V2V) communications. We want to establish b\u2192 Pa(W|B = b).\nData. We consider a bag b of 1,000 equally weighted images generated in maps already used in Task I. The weather parameters have been drawn at random from an arbitrary distribution Pa(W) for which we fixed all parameters but two, fog density and precipitation, that follow a mixture of Gaussians.\nMethod. We use the NPE model developed for task I and build our solution for task II on top of it. We implement the following estimator for Pa(W): Pa(W) = \u03a3i\u2208bw(i) Pdr(W|I = i). The motivation for this estimator is threefold. (1) It"}, {"title": "3.4 Task III: Relative Domain Characterization", "content": "The third task (see Fig. 9) consists in characterizing any target domain dr \u2208 D(\u03a9,\u03a3), relatively, w.r.t. to some arbitrarily chosen source domains ds1, ds2, ...dsns \u2208 D(\u03a9,\u03a3). Our motivation for this task originates from the importance of knowing if a system implementing a given many-to-one domain adaptation method can operate safely in the target domain dT when it is known to operate safely in the source domains ds1, S2, ...dSnS.\nCase Study. We discuss the case of Mixture Domain Adaptation (MDA) in which the system adapts to any target domain for which Pdr = \u2211ns k=1 \u03bbkPdsk with \u2211ns k=1 \u03bbk = 1 and \u03bbk > 0\u2200k (this is the mixture assumption). In this framework, the ODD is the convex hull of {Pds1,Pds2,...Pdsns}. An autonomous car implementing MDA is expected to drive safely when Pdr \u2208 ODD. So, our goal\nin this third task is to determine if the mixture assumption holds and if so, what the values of the mixture weights \u03bbk are.\nMDA supports many potential applications in the high-level tasks of the Sense pillar of the Sense-Plan-Act model [43]. While Mansour studied it generally [30], the application to the two-class classification task has been studied in [36], and the application to the semantic segmentation task of images acquired by vehicle-mounted cameras has been studied in [35]. These latter two works put an important emphasis on on-the-fly applicability and provide mathematically proven exact solutions. However, a critical limitation of these works is the need for the mixture weights to be known at adaptation time. Here, we remove this limitation by introducing a method that determines these weights automatically.\nData. We consider 4 subsets of the TS that we created for Task I: bo, b1, b2, and b3, containing 176, 27, 21, and 26 images, respectively. In the bag bk, the distribution of the ground-truth weather parameters follows a uniform distribution on Wk \u2286 W. These sets are such that Wo \u2229 (W1 \u222a W2 \u222a W3) = 0.\nMethod. We characterize the source and target domains with the method presented for Task II, using the same weather distribution predictive model for all domains. We define the mean squared gap between the target domain and the mixture of the source domains as:\n\u03b4(\u03bb1,...\u03bbns) = \u222bw [Pdr(W = w) \u2013 \u2211ns k=1 \u03bbkPds\u03ba(W = w)]2 Par (W = w)dw\n\u2248 1nw \u2211nwi [Pdr(W = wi) \u2013 \u2211ns k=1 \u03bbkPds\u03ba(W = wi)]2  (1)\nwith {wi} \u223c Pdr(W). We aim at finding the values of \u03bb1,... \u03bbns that minimize \u03b4(\u03bb1,... \u03bbns). This is a constrained least squares problem in which the constraints are \u2211ns k=1 \u03bbk = 1 and \u03bbk \u2265 0\u2200k. In order to use the CVXPY li-brary [1,5] to solve our problem, we converted our original problem into a convex quadratic programming problem, with the same constraints.\nEvaluation and Results. The goal of this experiment is twofold.\n1.  To show that it is possible to recover the mixture weights needed for the MDA technique presented in [35]. If the probability measure in the target domain is a mixture of the probability measures in the source domains, then we expect our characterization of the target domain to be a mixture of our characterizations for the source domains, with the same weights, as Pdr = \u2211ns k=1 \u03bbkPdsk \u2192 Pdr(W) = \u2211ns k=1 \u03bbkPdsk(W).\n2.  To show that it is possible to detect when the target domain is not a mixture of the source domains, which means that the target domain is out of the ODD for the MDA technique presented in [35]. If our characterization of the target domain is not a mixture of our characterizations for the source domains, then we expect that the probability measure in the target domain is not a mixture of the probability measures in the source domains, as we have Pdr (W) \u2260 \u2211ns k=1 \u03bbkPdsk(W) \u21d2 Pdr \u2260\u2211ns k=1 \u03bbkPdSk\nTo achieve this goal, we perform experiments in which we characterize target domains relatively to ns = 3 source domains. However, to study the robustness of our method, we let the probability measures in the target domains dr be mixtures not only of the probability measures in the source domains, but also in some domains that are out of the ODD. We use the bags b1, b2, and b3 for the source domains ds1, ds2, and ds3, respectively. We also use the bag b0 for domains d\u2208ODD that are, by construction, guaranteed to be out of the ODD. Putting this into equations, we have Pdr = (1 \u2013 \u03b7)Pd\u2208ODD + \u03b7Pd\u2209ODD with Pd\u2208ODD = \u03bb1Pds1 + \u03bb2Pds2 + \u03bb3Pds3. The quantity \u03b7 \u2208 [0, 1] is interpreted as a proportion of noise, which is the keystone to assess the robustness of our method.\nIn each experiment, the images in b1, b2, and b3 are equally weighted, whereas those in b0 are randomly weighted following a uniform distribution. The method introduced in Task II for the absolute characterization of domains is applied for ds1, ds2, ds3, and dr. We arbitrarily chose (\u03bb1, \u03bb2, \u03bb3) = (0.2, 0.3, 0.5). The mixture weights are optimized on nw = 16 points.\nThe overall experiment consists in (1) choosing a target domain at random, as described here-above, (2) computing its absolute characterization with the method of Task II, (3) executing the weight estimation algorithm, and (4) reporting both the mean square gap \u03b4(\u03bb1,... \u03bbns) and the Euclidean distance dE between (\u03bb1, \u03bb2, \u03bb3) and (\u03bb1, \u03bb2, \u03bb3). This experiment has been performed 330 times (30 times for 11 values of \u03b7). The results are shown in Fig. 10. The mean square gap achievable by chance is shown (baseline). Note that the target domain belongs to the ODD only when \u03b7 = 0. We observe that dE is negligible when dr \u2208 ODD and that the mean square gap is effective to detect when dr \u2209 ODD."}, {"title": "4 Conclusion", "content": "In this work, we present a novel approach to characterize domains by estimating the distribution of physical parameters. Our method enhances interpretability, facilitates domain adaptation, and provides safeguards for systems operating outside their ODD. Our experiments, organized around three tasks, are performed in the particular, but very important, case of autonomous vehicles and demonstrate how to obtain an absolute characterization of a domain by predicting a distribution of weather parameters (1) using a single image acquired by a vehicle-mounted camera and (2) using a bag of images. Our experiments also demonstrate (3) how to obtain a relative characterization of a target domain based on arbitrarily chosen source domains. Our approach includes two types of domain characterization: absolute and relative. The relative characterization is particularly valuable for domain adaptation, allowing the expression of a target domain in terms of source domains and verifying whether the current domain is part of the ODD. This is important for autonomous driving systems as well as for other fields requiring interpretable and trustworthy domain adaptation."}]}