{"title": "Preventing Non-intrusive Load Monitoring Privacy Invasion: A Precise Adversarial Attack Scheme for Networked Smart Meters", "authors": ["Jialing He", "Jiacheng Wang", "Ning Wang", "Shangwei Guo", "Liehuang Zhu", "Dusit Niyato", "Tao Xiang"], "abstract": "Smart grid, through networked smart meters employing the non-intrusive load monitoring (NILM) technique, can considerably discern the usage patterns of residential appliances. However, this technique also incurs privacy leakage. To address this issue, we propose an innovative scheme based on adversarial attack in this paper. The scheme effectively prevents NILM models from violating appliance-level privacy, while also ensuring accurate billing calculation for users. To achieve this objective, we overcome two primary challenges. First, as NILM models fall under the category of time-series regression models, direct application of traditional adversarial attacks designed for classification tasks is not feasible. To tackle this issue, we formulate a novel adversarial attack problem tailored specifically for NILM and providing a theoretical foundation for utilizing the Jacobian of the NILM model to generate imperceptible perturbations. Leveraging the Jacobian, our scheme can produce perturbations, which effectively misleads the signal prediction of NILM models to safeguard users' appliance-level privacy. The second challenge pertains to fundamental utility requirements, where existing adversarial attack schemes struggle to achieve accurate billing calculation for users. To handle this problem, we introduce an additional constraint, mandating that the sum of added perturbations within a billing period must be precisely zero. Experimental validation on real-world power datasets REDD and UK-DALE demonstrates the efficacy of our proposed solutions, which can significantly amplify the discrepancy between the output of the targeted NILM model and the actual power signal of appliances, and enable accurate billing at the same time. Additionally, our solutions exhibit transferability, making the generated perturbation signal from one target model applicable to other diverse NILM models.", "sections": [{"title": "INTRODUCTION", "content": "The smart grid, a prominent realization of advanced Internet of Things (IoT) systems, has significantly improved power efficiency through the integration of networked smart meters [1]. These smart meters, coupled with mobile technologies, enable real-time monitoring of household power consumption data, transmitted frequently to cloud servers for centralized processing [2]. This integration allows energy providers to accurately forecast future energy demands, ultimately enhancing the efficiency of the smart grid. However, this convenience comes at the cost of user privacy [3], [4]. For example, adversaries who eavesdrop on the transmission of power consumption data from mobile-connected smart meters to utility providers or exploit data made accessible to unauthorized personnel within utility companies could leverage advanced algorithms to infer detailed user behaviors and activities.\nNon-Intrusive Load Monitoring (NILM) is a pivotal technique utilized to infer power consumption patterns [5]. This approach leverages statistical models, such as Hid-"}, {"title": "RELATED WORK", "content": ""}, {"title": "DNN-based NILM models", "content": "Since the seminal work of NILM [5], numerous solutions have been proposed, primarily centered around statistical inference models like Hidden Markov Models (HMMs). However, these HMM-based approaches make the assumption that each observation (i.e., per power data) is independent of others, which is not reflective of real-life scenarios and hampers practicality. To overcome this limitation, the emergence of deep learning techniques has opened up new avenues for addressing NILM challenges. Leveraging the remarkable learning capabilities of neural networks, the NILM problem can be tackled by training a DNN to map the aggregated power signal to individual appliance power signals. The pioneering work of Kelly and Knottenbelt [9] introduced the Neural NILM architecture, incorporating Long Short-Term Memory (LSTM), CNN, and denoising autoencoders. This approach achieved significant advancements over previous statistical inference models. Subsequently, a series of DNN-based schemes aimed at further enhancing performance have been proposed. Notably, Zhang et al. [10] presented the Seq2seq architecture, a landmark model constructed using convolutional layers and dense layers. This simple yet effective architecture was able to extract latent features, including power thresholds and state change points, leading to substantial improvements. Building on Seq2seq, subsequent works employed various strategies to boost performance. Some of these strategies include adopting a sequence-to-point output strategy (i.e., outputting the middle point of a sequence instead of the entire sequence) [10], extracting appliance state information as auxiliary data [11], [12], [14], constructing hybrid models with multiple structures (such as CNN, LSTM, and GAN) [15], [16], and incorporating attention mechanisms [13]. These endeavors have further pushed the boundaries of NILM model performance."}, {"title": "Adversarial attacks", "content": "Adversarial attacks initially gained traction in the realm of image classification tasks, with the objective of altering model outputs by adding imperceptible noise. One of the seminal works in this area was the FGSM introduced by"}, {"title": "PRELIMINARIES", "content": ""}, {"title": "NILM Problem", "content": "The NILM problem aims to deduce the power consumption data of individual appliances from an aggregated power signal. Let $X = {X_1,X_2,...,X_T} \\in \\mathbb{R}_{+}^T$ denote the aggregated power signal, where $T \\in \\mathbb{N}_{+}$ represents the total measured time. The investigation considers $N$ appliances, and the power consumption of the $i$th appliance is denoted as $Y_i = {y_1, y_2, \u2026\u2026\u2026, y_T} \\in \\mathbb{R}_{+}^T$. A fundamental assumption in the NILM problem is that for all $i \\in [N]$ and $t\\in [T]$, where $[T] = {1,2,...,T}$ and $[N] = {1,2,..., N}$, we have: $x_t = \\sum_{i=1}^{N} Yi + Ut + vt$. $u_t$ represents the total power consumption data of all the other appliances that are out of the investigation's scope and $v_t$ is the noise signal."}, {"title": "Solution Model for NILM Problem", "content": "Given a set of instances of energy consumption data ${X,Y_1,Y_2, ...,Y_N }$, solution models for the NILM problem is to infer $y_i^t$ for all $i \\in [N]$ and $t \\in [T]$, and further generalize to unseen test power signal $X'$.\nFor the original power consumption data, a very long power sequence, solution models employ the sliding window method to operate. The original aggregated power signal is divided into several overlapping $w$-length segments, each of which is one input window for the solution model. Suppose $X_{t,w} = (X_{t-\\lfloor\\frac{w}{2}\\rfloor},\uff65\uff65\uff65,X_{t+\\lfloor\\frac{w}{2}\\rfloor-1})$ denote the input window and $f_\\theta^i: \\mathbb{R} \\rightarrow \\mathbb{R}$ (${\\theta}$ denotes the parameters of the model and is omitted for simplicity) represents the solution model for the ith ($i \\in [N]$) appliance, such that:\n$Y_{t,w}^i = f(X_{t,w}),$ (1)\nwhere $Y_{t,w}^i = (\\hat{y}_{t-\\lfloor\\frac{w}{2}\\rfloor},\uff65\uff65\uff65, \\hat{y}_{t+\\lfloor\\frac{w}{2}\\rfloor-1})$ is the output window, i.e., predicted power consumption for the $i$th appliance. A solution model for NILM problem can take the form of a statistic model such as HMMs [43], [44] or deep neural networks including CNNs, RNNs, and attention mechanisms [10]\u2013[14], [16], [45], [46]. For simplicity, we refer to the solution model for NILM problem as the NILM model in the subsequent section."}, {"title": "THREAT MODEL", "content": "As previously noted, the NILM model has the ability to deduce the power signal of installed appliances from the aggregated power reading recorded, thereby inferring the user's power consumption pattern. In this research, the objective for users is to generate a perturbation signal which, when superimposed on the original aggregated signal, can deceive the target NILM model into producing predictions that significantly deviate from the true appliances' signal. As a result, the actual power consumption patterns of users at the appliance-level can be effectively concealed. Since this method follows the adversarial attack paradigm, we refer to the user objective as the \u201cattack objective\" and the users' capabilities as the \u201cattack capabilities.\u201d\nAttack Objective. First, the primary attack objective is to deceive the target NILM model into producing appliance-level signals that significantly deviate from the true values. Furthermore, based on this attack objective, users are required to maintain the fundamental billing operation for the smart grid. This stipulates that the real-time added perturbation signal should not affect the accuracy of the cumulative sum of power within the billing period.\nAttack Capabilities. Both white-box [26] and black-box [47] attack settings are considered in this study. In the white-box setting, it is assumed that the user has access to the target NILM model $f(\u00b7)$, including its architecture and parameters $\\theta$. Consequently, the user can utilize the target model's parameters to generate the perturbation signal. Conversely, in the black-box setting, the user lacks access to the target NILM model. However, it is assumed that the user can train an alternative NILM model $f'(\u00b7)$, referred to as the shadow model, whose architecture may differ from $f(\u00b7)$. The user can subsequently generate perturbations using the trained model $f'(\u00b7)$. For both black-box and white-box settings, the allowable magnitude of the user-added perturbation is limited."}, {"title": "PROBLEM FORMULATION", "content": "In the preceding section, we have intuitively outlined the attack objective for users. In this section, we formally define the problem to realize this objective, terming it the adversarial NILM problem. Subsequently, we extend this formulation"}, {"title": "Adversarial NILM Problem", "content": "The adversarial NILM problem aims to generate a perturbed aggregated power signal that deceives the NILM solution model into producing a power signal that significantly deviates from the actual data of the target appliances. More formally, given an aggregated power signal $X_{t,w} = (X_{t-\\lfloor\\frac{w}{2}\\rfloor},...,X_{t+\\lfloor\\frac{w}{2}\\rfloor-1})$, the problem is, for $\\forall i\\in [N]$, finding the \"worst perturbation\" $E_{t,w}^i = (e_{t-\\lfloor\\frac{w}{2}\\rfloor},\u2026\u2026\u2026,e_{t+\\lfloor\\frac{w}{2}\\rfloor-1}) \\in \\mathbb{R}^w$ such that\n$E_{t,w}^i = arg \\underset{E_{t,w}^i \\in C_{t,w}}{max} || f^i(X_{t,w} + E_{t,w}^i) - Y_{t,w}^i ||_1, $ (2)\nwhere $C_{t,w}$ is a set that limits the amount of perturbation added and is defined as\n$C_{t,w}^i = {E_{t,w}^i \\in \\mathbb{R}^w| || E_{t,w}^i ||_\\infty \\leq \\delta }.$ (3)\nHere we use $Y_{t,w}^i = (Y_{t-\\lfloor\\frac{w}{2}\\rfloor}, Y_{t+\\lfloor\\frac{w}{2}\\rfloor-1})$ to denote the truth power consumption data for the $i$th appliance, $X'_{t,w} = X_{t,w} + E_{t,w} = (x_{t-\\lfloor\\frac{w}{2}\\rfloor},..., x_{t+\\lfloor\\frac{w}{2}\\rfloor-1})$ represents the generated adversarial power signal, $|| \\cdot ||_\\infty$ denotes the matrix norm, and $\\delta$ corresponds to the maximum allowed perturbation."}, {"title": "Practical Adversarial NILM Problem", "content": "Eq. (3) in the previous adversarial NILM problem limits the magnitude of the perturbation in real-time, specifically per time step. However, this constraint alone falls short of meeting the practical requirement. In real-world scenarios, it is crucial that the additional perturbation does not impact the billing operation. To ensure this, we propose the following constraint:\n$C'_{t,w} = {E_{t,w} \\in \\mathbb{R}^w | \\sum E_{t,w}^i = 0 },$ (4)\nwhere $\\sum E_{t,w}^i = e_{t-\\lfloor\\frac{w}{2}\\rfloor} + \u00b7\u00b7\u00b7 + e_{t+\\lfloor\\frac{w}{2}\\rfloor-1}$. It ensures that the sum of consecutive perturbations added within a window is zero. This guarantees that the accumulated perturbed power signal remains the same as the original signal, thereby preventing errors in the electricity bill calculation.\nWe are now ready to present the practical adversarial NILM problem. Formally, given an aggregated power signal $X_{t,w} = (X_{t-\\lfloor\\frac{w}{2}\\rfloor},...,X_{t+\\lfloor\\frac{w}{2}\\rfloor-1})$, the problem is, for $\\forall i \\in [N]$, finding the perturbation $E_{t,w}^i = (e_{t-\\lfloor\\frac{w}{2}\\rfloor},\u2026\u2026\u2026,e_{t+\\lfloor\\frac{w}{2}\\rfloor-1}) \\in \\mathbb{R}^w$:\n$E_{t,w}^i = arg \\underset{E_{t,w}^i \\in C_{t,w}}{max} || f^i(X_{t,w} + E_{t,w}^i) - Y_{t,w}^i ||_1,$ (5)\ns.t.$C_{t,w} = {E_{t,w}^i \\in \\mathbb{R}^w | || E_{t,w}^i ||_\\infty \\leq \\delta \\Lambda \\sum E_{t,w}^i = 0 }$"}, {"title": "ADVERSARIAL-NILM SOLUTION MODEL", "content": "The previous section provided a clear problem formulation of the adversarial NILM problem. In this section, we present our novel scheme, named ADV-NILM, designed to address the adversarial NILM problems. We provide an overview of the framework, followed by a detailed explanation of its individual components."}, {"title": "Overview", "content": "As Fig. 1 shows, the ADV-NILM seeks to produce well-crafted perturbed power signal to fool all the NILM models. More specifically, given a window of aggregated power signal, the NILM model can accurately dissect this original aggregated signal into per-appliance signals. ADV-NILM can produce perturbations to perturb the original aggregated signal and deceive the NILM models. The generated perturbations should be as small as possible (Eq. (3) gives the constraint for the perturbation) and the difference between the original output and perturbed output of NILM models should be as big as possible (Eq. (2) describes this problem). Details of the NILM models and the perturbed-signal generation process follow shortly in this section."}, {"title": "NILM Model Description", "content": "DNN-based NILM models have demonstrated remarkable capabilities in extracting per-appliance power signals, owing to the high expressibility and learnability of neural networks. The pioneering work of Kelly and Knottenbelt [9] introduced NeuralNILM, which served as the first deep neural network-based architecture for addressing the NILM problem. By integrating networks such as CNN, LSTM, and denoising autoencoders, NeuralNILM outperformed previous statistical and machine learning models, establishing a new benchmark in the field. Building upon this success, Zhang et al. [10] presented Seq2seq, a critical CNN-based NILM model that exhibited considerable performance improvements, subsequently inspiring numerous follow-up solutions. Given the reliability and effectiveness of Seq2seq, we have selected it as our target NILM model for generating perturbations in this study.\nSeq2seq employs one CNN $f_{power}: \\mathbb{R} \\rightarrow \\mathbb{R}$ to learn the mapping $P_{t,w} = f_{power}(X_{t,w})$. More details, please refer to [10]. The objective loss function to train Seq2seq is:\n$\\underset{\\theta}{arg \\ min} \\frac{1}{T} \\sum_{t=1}^{T}(f(X_{t,w}) - Y_{t,w})^2,$ (6)\nwhere $Y_{t,w}^i$ is the truth power signal of the ith appliance. Seq2seq is trained using the Stochastic Gradient Descent (SGD) optimization algorithm, which utilizes gradients to continuously update the model parameters for minimizing the loss function."}, {"title": "Perturbed Signal Generation", "content": "Gupta et al. [39] proposed an adversarial attacker for regression problems. However, the proposed attack objectives did not incorporate the constraints necessary for attacking NILM models. Motivated by the employed Jacobian property, we propose a novel Jacobian-based method to tackle adversarial NILM problems. We subsequently detail this method in two steps."}, {"title": "Problem reformulation", "content": "We follow the first-order Taylor expansion [48] to perform an approximation:\n$f'(X_{t,w} + E_{t,w}^i) \\thicksim f^i(X_{t,w}) + J(X_{t,w})E_{t,w}^i,$ (7)"}, {"title": "Problem solution", "content": "We have now reformulated the problem, as expressed in Eq. (11). For both white-box and black-box settings, the jacobian matrix $J(X)$ can be acquired by computing the partial deviates of Seq2seq output $f(X)$ respect to the test sample $X$.\nHence the obtained reformulated problem in Eq. (11) becomes an optimization problem. To search for the optimal $E'$ vector, we can use multiple rounds of random search. However, acquiring an exact optimal solution may be challenging due to the presence of randomness. As the process of randomly generating the vector $E'$ is stochastic, each round may yield different results. Analyzing the equation, we find that it can be interpreted as: the initial perturbation vector E is moved a sufficiently small step $\\delta$ in a certain"}, {"title": "EXPERIMENTS", "content": "We conduct extensive experiments to evaluate our ADV-NILM scheme, focusing on its effectiveness in generating perturbed power signals that significantly degrade the performance of a specific NILM model in both white-box and black-box settings. Additionally, we assess the practicality of our ADV-NILM for supporting accurate billing calculations."}, {"title": "Setup", "content": ""}, {"title": "Datasets", "content": "We evaluate our ADV-NILM using two classical household datasets: REDD [41] and UK-DALE [42].\nREDD includes power measurements from 6 US households over about 4 months. The aggregated and individual appliances' power signals are recorded every 1 and 3 seconds, respectively. After removing some abnormal and unusable records, we choose the data from houses 1, 2, and 3 for assessment. UK-DALE comprises power signals from 6 UK households over a period of 26 months. The aggregated and per-appliance power signals are both recorded every 6 seconds. For the UK-DALE dataset, we select data from houses 1 and 2 after excluding unusable data.\nFollowing previous studies on NILM, we select four main appliances to evaluate the proposed algorithms. Specifically, we set the data from houses 2 and 3 as the"}, {"title": "NILM models", "content": "As stated in Section 6.2, for white-box setting we use Seq2seq [10], a CNN-based NILM model, as our target model to generate perturbed signals. We assume that the architecture and all parameters of the target model are known to the authorized users for the perturbation-generating process. To evaluate in the black-box setting, we consider four state-of-the-art NILM models: SGN [11], MSDC [14], LDwA [16], and InFocus [12] are target models and their architectures and parameters are unknown for the user. The user applies the perturbation generated from Seq2seq to attack these four target models. These four models are selected as they represent typical solutions spanning across CNN, RNN, and attention mechanisms."}, {"title": "Metrics", "content": "We adopt four widely used metrics in the NILM domain [11], [12], [14], [16] as performance indicators: (1) Mean Absolute Error (MAE), (2) Root Mean Squared Error (RMSE), (3) Normalized Signal Aggregate Error (SAE), and (4) the Pearson Correlation Coefficient (CORR).\n$\\text{MAE} = \\frac{1}{T} \\sum_{t=1}^{T}|(Y_t - \\hat{y}_t)|$ (13)\n$\\text{RSME} = \\sqrt{\\frac{1}{T} \\sum_{t=1}^{T}(Y_t - \\hat{y}_t)^2 }$ (14)\n$\\text{SAE} = \\frac{| \\sum_{t=1}^{T} y_t - \\sum_{t=1}^{T} \\hat{y}_t |}{\\sum_{t=1}^{T} Y}$ (15)\n$\\text{CORR} = \\frac{\\sum_{t=1}^{T}(Y_t - \\bar{y}) (\\hat{y}_t - \\bar{\\hat{y}})}{\\sqrt{\\sum_{t=1}^{T}(Y_t - \\bar{y})^2 \\sum_{t=1}^{T}(\\hat{y}_t - \\bar{\\hat{y}})^2 } } $ (16)\nIn Eqs. 13-16, $y_t$ represents the estimated power signal given by the NILM model at time step $t$ and $\\hat{y}_t$ represents the truth power signal. $y = {y_1, \u2026\u2026\u2026, y_T }$, $\\hat{y} = {\\hat{y}_1, \u2026\u2026\u2026, \\hat{Y}_T }$, and $\\bar{y}$ and $\\bar{\\hat{y}}$ denote the means of $y$ and $\\hat{y}$, respectively.\nHigher values of MAE, RSME, and SAE indicate larger errors within the predictions. Conversely, a smaller absolute value of CORR signifies greater disparity between the ground truth and prediction. The primary objective of our proposed approach is thus to produce larger MAE, RSME, and SAE values, and a smaller absolute value of CORR. This would highlight a significant deviation between the model's output and the actual ground truth."}, {"title": "Parameter settings", "content": "All the involved NILM models are implemented using Python 3.6 and Pytorch 1.12.0+cu116 and trained on machines equipped with GTX 3090 (40G). The batch size for training is set to 32. The Adam optimizer utilized in Algorithm 1 is configured with a learning rate $lr = 0.1$, and the algorithm is executed for Num iterations varying from 1 to 10. The Jacobian matrix J of the NILM model is computed using the backward() function in Pytorch. The parameter d, which multiplies with the obtained vectors from Algorithm 1, is adjusted using multiple values (0.02, 0.05, 0.1, 0.15, 0.2). In alignment with previous research on NILM solutions, we establish the length of the input and output window, w, as 400 for the REDD, and 200 for the UK-DALE, respectively. These lengths approximately are equate to durations spanning several dozens of minutes."}, {"title": "Effectiveness in White-box Setting", "content": "We evaluate ADV-NILM in a white-box setting through the following three experiments: 1) Assessing whether the added perturbation effectively deviates the target NILM model; 2) Comparing ADV-NILM with other Differential Privacy (DP) mechanisms; 3) Comparing ADV-NILM with other adversarial attack strategies.\n1) With and without our perturbation. We select Seq2seq as the target model for perturbation generation and then input the perturbed power signal into Seq2seq to observe the resulting changes in the output signals. For evaluation, we focus on data from various appliances, namely, fridge, dishwasher, washing machine, and microwave. The corresponding results are presented in Table 1.\nThe term \"original output\" denotes the input to Seq2seq, specifically, the aggregated power signal, which corresponds to the raw data recorded by the smart meter. Conversely, \"perturbed output\" refers to the input of Seq2seq generated via our ADV-NILM model. As demonstrated in Table 1, the perturbed power signals generated by our ADV-NILM model markedly enhance the prediction error of Seq2seq. For the REDD dataset, the average results for MAE(Watt), RMSE(Watt), and SAE were altered from 24.15, 98.99, and 12.55% to 174.91, 236.30, and 695.00%, respectively, reflecting increases of 150.41, 236.30, and 682.45%. Concurrently, the average CORR decreased from 0.74 to 0.27, revealing a reduction of 0.47. In a similar pattern, for the UK-DALE dataset, the MAE, RSME, and SAE results were modified from 16.44, 83.95, and 39.52% to 137.35, 229.38, and 1190.45%, respectively, constituting increases of 120.91, 145.43, and 1150.93%. The average CORR decreased from 0.64 to 0.12, indicating a reduction of 0.52. These results validate the effectiveness of our ADV-NILM model in generating perturbations capable of misleading the target NILM model and yielding inaccurate power consumption data for appliances. Thus, our ADV-NILM model effectively thwarts adversaries from extracting users' appliance-level consumption patterns."}, {"title": "Optimization with Practical Consideration", "content": "Algorithm 1 provides a solution to address the adversarial NILM problem. However, it does not factor in the practical scenario that includes an additional constraint, specifically Eq. (4). In this section, we optimize the solution to satisfy all the constraints in the practical adversarial NILM problem. Our approach is to gradually eliminate the accumulated perturbation. Specifically, in each iteration, we compute the sum of vector E' and introduce - \u03a3\u0395' as an additional term to the total loss (thus, loss in line 11 of Algorithm 1 is modified as loss \u2190 mean(r) \u2013 \u03a3\u0395') to update E'. Intuitively, the subsequent update steps (Line 12 to line 17) for E' in Algorithm 1 can iteratively maximize loss, consequently reducing the sum of added perturbation \u03a3\u0395'. Additionally, we modify each element of E' by subtracting the mean of all elements of E' to ensure that the sum of E' equals zero in each iteration. This implies that we add the step E' \u2190 E' mean(E') after line 17 of Algorithm 1. Here, mean(E') = \u03a3=1, where E' = [e1, 2, ..., ew]. This process does not introduce significant computational overhead. Specifically, the perturbation computation in Algorithm 1 has a time complexity of O(Num\u00b7batch_size\u00b7w), where Num represents the number of iterations and w denotes the length of the perturbation vector. By adjusting the batch_size and w, we can ensure that the perturbation computation is completed in milliseconds, making it feasible for practical deployment."}, {"title": "EXPERIMENTS", "content": "We conduct extensive experiments to evaluate our ADV-NILM scheme, focusing on its effectiveness in generating perturbed power signals that significantly degrade the performance of a specific NILM model in both white-box and black-box settings. Additionally, we assess the practicality of our ADV-NILM for supporting accurate billing calculations."}, {"title": "Setup", "content": ""}, {"title": "Datasets", "content": "We evaluate our ADV-NILM using two classical household datasets: REDD [41] and UK-DALE [42].\nREDD includes power measurements from 6 US households over about 4 months. The aggregated and individual appliances' power signals are recorded every 1 and 3 seconds, respectively. After removing some abnormal and unusable records, we choose the data from houses 1, 2, and 3 for assessment. UK-DALE comprises power signals from 6 UK households over a period of 26 months. The aggregated and per-appliance power signals are both recorded every 6 seconds. For the UK-DALE dataset, we select data from houses 1 and 2 after excluding unusable data.\nFollowing previous studies on NILM, we select four main appliances to evaluate the proposed algorithms. Specifically, we set the data from houses 2 and 3 as the"}, {"title": "NILM models", "content": "As stated in Section 6.2, for white-box setting we use Seq2seq [10], a CNN-based NILM model, as our target model to generate perturbed signals. We assume that the architecture and all parameters of the target model are known to the authorized users for the perturbation-generating process. To evaluate in the black-box setting, we consider four state-of-the-art NILM models: SGN [11], MSDC [14], LDwA [16], and InFocus [12] are target models and their architectures and parameters are unknown for the user. The user applies the perturbation generated from Seq2seq to attack these four target models. These four models are selected as they represent typical solutions spanning across CNN, RNN, and attention mechanisms."}, {"title": "Metrics", "content": "We adopt four widely used metrics in the NILM domain [11], [12], [14], [16] as performance indicators: (1) Mean Absolute Error (MAE), (2) Root Mean Squared Error (RMSE), (3) Normalized Signal Aggregate Error (SAE), and (4) the Pearson Correlation Coefficient (CORR).\n$\\text{MAE} = \\frac{1}{T} \\sum_{t=1}^{T}|(Y_t - \\hat{y}_t)|$ (13)\n$\\text{RSME} = \\sqrt{\\frac{1}{T} \\sum_{t=1}^{T}(Y_t - \\hat{y}_t)^2 }$ (14)\n$\\text{SAE} = \\frac{| \\sum_{t=1}^{T} y_t - \\sum_{t=1}^{T} \\hat{y}_t |}{\\sum_{t=1}^{T} Y}$ (15)\n$\\text{CORR} = \\frac{\\sum_{t=1}^{T}(Y_t - \\bar{y}) (\\hat{y}_t - \\bar{\\hat{y}})}{\\sqrt{\\sum_{t=1}^{T}(Y_t - \\bar{y})^2 \\sum_{t=1}^{T}(\\hat{y}_t - \\bar{\\hat{y}})^2 } } $ (16)\nIn Eqs. 13-16, $y_t$ represents the estimated power signal given by the NILM model at time step $t$ and $\\hat{y}_t$ represents the truth power signal. $y = {y_1, \u2026\u2026\u2026, y_T }$, $\\hat{y} = {\\hat{y}_1, \u2026\u2026\u2026, \\hat{Y}_T }$, and $\\bar{y}$ and $\\bar{\\hat{y}}$ denote the means of $y$ and $\\hat{y}$, respectively.\nHigher values of MAE, RSME, and SAE indicate larger errors within the predictions. Conversely, a smaller absolute value of CORR signifies greater disparity between the ground truth and prediction. The primary objective of our proposed approach is thus to produce larger MAE, RSME, and SAE values, and a smaller absolute value of CORR. This would highlight a significant deviation between the model's output and the actual ground truth."}, {"title": "Parameter settings", "content": "All the involved NILM models are implemented using Python 3.6 and Pytorch 1.12.0+cu116 and trained on machines equipped with GTX 3090 (40G). The batch size for training is set to 32. The Adam optimizer utilized in Algorithm 1 is configured with a learning rate $lr = 0.1$, and the algorithm is executed for Num iterations varying from 1 to 10. The Jacobian matrix J of the NILM model is computed using the backward() function in Pytorch. The"}, {"title": "Effectiveness in White-box Setting", "content": "We evaluate ADV-NILM in a white-box setting through the following three experiments: 1) Assessing whether the added perturbation effectively deviates the target NILM model; 2) Comparing ADV-NILM with other Differential Privacy (DP) mechanisms; 3) Comparing ADV-NILM with other adversarial attack strategies.\n1) With and without our perturbation. We select Seq2seq as the target model for perturbation generation and then input the perturbed power signal into Seq2seq to observe the resulting changes in the output signals. For evaluation, we focus on data from various appliances, namely, fridge, dishwasher, washing machine, and microwave. The corresponding results are presented in Table 1.\nThe term \"original output\" denotes the input to Seq2seq, specifically, the aggregated power signal, which corresponds to the raw data recorded by the smart meter. Conversely, \"perturbed output\" refers to the input of Seq2seq generated via our ADV-NILM model. As demonstrated in Table 1, the perturbed power signals generated by our ADV-NILM model markedly enhance the prediction error of Seq2seq. For the REDD dataset, the average results for MAE(Watt), RMSE(Watt), and SAE were altered from 24.15, 98.99, and 12.55% to 174.91, 236.30, and 695.00%, respectively, reflecting increases of 150.41, 236.30, and 682.45%. Concurrently, the average CORR decreased from 0.74 to"}, {"title": "Optimization with Practical Consideration", "content": "Algorithm 1 provides a solution to address the adversarial NILM problem. However, it does not factor in the practical scenario that includes an additional constraint, specifically Eq. (4). In this section, we optimize the solution to satisfy all the constraints in the practical adversarial NILM problem. Our approach is to gradually eliminate the accumulated perturbation. Specifically, in each iteration, we compute the sum of vector E' and introduce - \u03a3\u0395' as an additional term to the total loss (thus, loss in line 11 of Algorithm 1 is modified as loss \u2190 mean(r) \u2013 \u03a3\u0395') to update E'. Intuitively, the subsequent update steps (Line 12 to line 17) for E'"}]}