{"title": "Galois groups of polynomials and neurosymbolic networks", "authors": ["Elira Shaska", "Tony Shaska"], "abstract": "This paper introduces a novel approach to understanding Galois theory, one of the foundational areas of algebra, through the lens of machine learning. By analyzing polynomial equations with machine learning techniques, we aim to streamline the process of determining solvability by radicals and explore broader applications within Galois theory. This summary encapsulates the background, methodology, potential applications, and challenges of using data science in Galois theory.\nMore specifically, we design a neurosymbolic network to classify Galois groups and show how this is more efficient than usual neural networks. We discover some very interesting distribution of polynomials for groups not isomorphic to the symmetric groups and alternating groups.", "sections": [{"title": "1 INTRODUCTION", "content": "Galois theory, a cornerstone of modern algebra, provides profound insights into the solvability of polynomial equations. Since its inception by \u00c9variste Galois, it has explained why there are no general formulas for polynomials of degree five or higher by radicals, unlike the well-known quadratic, cubic, and quartic formulas. While traditional methods allow us to determine solvability for lower-degree polynomials through invariants like discriminants, the complexity escalates dramatically for higher degrees, where the Galois group might not be solvable, leading to no radical solution.\nThis project embarks on a journey to merge the abstract realm of Galois theory with the practical capabilities of machine learning (ML). Our goal is to harness ML's pattern recognition and prediction abilities to address some of the most challenging aspects of Galois theory, potentially revolutionizing our understanding and approach to polynomial solvability and related problems.\nWe propose an approach where we generate datasets of polynomials with known Galois groups. Key to our approach will be identifying or creating features from polynomials that are indicative of Galois group properties or solvability. These might include traditional invariants of binary forms or novel features derived from root distributions or algebraic properties. Using supervised learning on neurosymbolic networks, we aim to predict the Galois group or solvability of polynomials. By learning from simpler polynomials, we hope to generalize these insights to more complex polynomials, possibly using techniques like transfer learning where models adapt knowledge from one task to another.\nThis integration could lead to automated solvability prediction, offering mathematicians tools to quickly assess if a polynomial can be solved by radicals, and might uncover patterns or invariants not yet recognized by traditional mathematics. The methodology could extend to other areas like field theory or algebraic geometry. However, several challenges loom, including the computational cost of handling high-degree polynomials, ensuring interpretability of ML models to enhance theoretical understanding, and balancing between providing practical tools and contributing to the theoretical body of Galois theory.\nThis project stands at the intersection of pure mathematics and cutting-edge computational science. By leveraging machine learning, we aim not only to solve practical problems within Galois theory but also to catalyze new theoretical advancements. This exploration could redefine how we approach some of the oldest and most fundamental questions in algebra, potentially opening new avenues for research in both mathematics and computer science.\nWe discovered that neurosymbolic networks are the most suitable approach for this type of problem. A neurosymbolic network is a type of artificial intelligence system that combines the strengths of neural networks (good at pattern recognition) with symbolic reasoning (based on logic and rules) to create models that can both learn from data and reason through complex situations, essentially mimicking human-like cognitive abilities by understanding and manipulating symbols to make decisions. This approach aims to overcome the limitations of either method alone, providing better explainability and adaptability in AI systems.\nThe basic foundation of Galois groups of polynomials over Q are briefly described. We cover in detail the solution of cubics, quartics, and quintics not only to put things in proper context but also to emphasize that each degree is different. There is no universal"}, {"title": "2 GALOIS GROUPS OF POLYNOMIALS", "content": "Let F be a perfect field. For simplicity we only consider the case when char F = 0. Let f(x) be a degree n = deg f irreducible polynomial in F[x] which is factored as follows:\n\n\\(f(x) = (x - \u03b1_1) ... (x \u2013 \u03b1_n)\\)\n\nin a splitting field Ef. Then, Ef/F is Galois because is a normal extension and separable. The group Gal (Ef/F) is called the Galois group of f(x) over F and denoted by Gal F(f). The elements of Gal F(f) permute roots of f(x). Thus, the Galois group of polynomial has an isomorphic copy embedded in Sn, determined up to conjugacy by f.\nLEMMA 1. The following are true:\n(1) deg f | |G|\n(2) Let G = Gal F(f) and H = G\u2229An. Then H = Gal (Ef/F(\u221a\u2206f)).\nIn particular, G is contained in the alternating group An if and only if the discriminant Af is a square in F."}, {"title": "2.1 Cubics", "content": "Let f(x) be an irreducible cubic in F[x]. Then [Ef : F] = 3 or 6. Thus, Gal F(f) = A3 if and only if \u2206f is a square in F, otherwise Gal F(f) = S3.\nLEMMA 3. Let f(x) \u2208 F[x] be an irreducible cubic. Then G = A3 if and only if Af is a square in F. Moreover,\n(1) Af > 0 if and only if f has three distinct real roots.\n(2) Af < 0 iff f has one real root and two non-real complex conjugate roots.\nSince both A3 and S3 are solvable, we should be able to determine formulas to give the roots of f(x) in terms of radicals. These formulas are known as Cardano's formulas. Hence, for cubics t we can determine the Galois group simply by conditions on invariants."}, {"title": "2.2 Quartics", "content": "Let f(x) \u2208 F[x] be an irreducible quartic. Then G := Gal (f) is a transitive subgroup of S4. Furthermore, 4 | |G|, see Lem. 1. So the order of G is 4, 8, 12, or 24. It can be easily checked that transitive subgroups of S4 of order 4, 8, 12, or 24 are isomorphic to one of\n\n\\(C_4, D_4, V_4, A_4, S_4.\\)\n\nAny quartic in F[x] can be normalized as\n\n\\(f(x) = x^2 + ax^2 + bx + c = (x \u2212 \u03b1_1) ... (x \u2212 \u03b1_4)\\)\n\nwith a, b, c \u2208 F. Let Ef = F(a1, ..., a4) be the splitting field of f over F. Since f has no x\u00b3-term, we have a\u2081 + \u00b7\u00b7\u00b7 + 4 = 0. We assume Af \u2260 0, so a\u2081, . . ., a4 are distinct. Let G = Gal F(f), viewed as a subgroup of S4 via permuting a1, ..., a4.\nThere are 3 partitions of {1,..., 4} into two pairs. S4 permutes these 3 partitions, with kernel\n\n\\(V_4 = {(12)(34), (13) (24), (14) (23), id}.\\)\n\nThus S4/V4 ~ S3, the full symmetric group on these 3 partitions. Associate with these partitions the elements\n\n\\(\u03b2\u2081 = \u03b1\u2081\u03b1\u2082 + \u03b1\u2083\u03b1\u2084, \u03b2\u2082 = \u03b1\u2081\u03b1\u2083 + \u03b1\u2082\u03b1\u2084, \u03b2\u2083 = \u03b1\u2081\u03b1\u2084 + \u03b1\u2082\u03b1\u2083\\)\n\nof Ef. If \u03b2\u2081 = \u03b22 then a\u2081(\u03b1\u2082 \u2212 \u03b1\u2083) = a4(a2 \u2013 a3), a contradiction. Similarly, B1, B2, B3 are 3 distinct elements. Then G acts as a subgroup of S4 on a1, ..., a4, and as the corresponding subgroup of"}, {"title": "2.2.1 Solving quartics", "content": "The element (\u03b1\u2081 + \u03b1\u2082) (\u03b1\u2083 + a\u2084) is fixed by GO V4, hence lies in K (B1, B2, B3). We find\n\n\\(-(\u03b1_1 + \u03b1_2)^2 = (\u03b1_1 + \u03b1_2) (\u03b1_3 + \u03b1_\u2084) = \u03b2_2 + \u03b2_3\\)\n\nBy this and symmetry we get Ferrari's formulas; see [16]. This completes the case for the quartics."}, {"title": "2.3 Quintics", "content": "We assume the reader is familiar with some of the classical works in Galois theory [1, 7, 8, 14, 21]\nLEMMA 6. Let f(x) \u2208 F[x] be an irreducible quintic. Then its Galois group is one of the following C5, D5, F5 = AGL(1, 5), A5, S5.\nPROOF. Gis transitive, hence its 5-Sylow subgroup is isomorphic to C5 (generated by a 5-cycle). If C5 is not normal, then G has at least 6 of 5-Sylow subgroups; then |G| \u2265 6.5 = 30, hence [S5: G] \u2264 4 which implies G = S5, A5. If C5 is normal in G then G is conjugate either C5, D5 (dihedral group of order 10) or F5 = AGL(1,5), the"}, {"title": "2.3.1 Solvable quintics", "content": "If G = S5, A5 then the equation f(x) = 0 is not solvable by radicals. We want to investigate here the case G is not isomorphic to S5 or A5. Let f (x) be an irreducible quintic in F[x] given by\n\n\\(f(x) = x + c_4x\u00b2 + \u00b7\u00b7\u00b7 + c_0 = (x \u2212 \u03b1_1) \u2026 (x \u2212 \u03b1_5)\\)\n\nLet G = Gal (f), viewed as a (transitive) subgroup of S5 via permuting the (distinct) roots a\u2081,\u2026\u2026, a5. As before Ef = F(a1,\u2026\u2026, \u03b15) denotes the splitting field.\nA 5-cycle in S5 = Sym({1,..., 5}) corresponds to an oriented pentagon with vertices 1,..., 5. A 5-cycle and its inverse correspond to a (non-oriented) pentagon, and the full C5 corresponds to a pentagon together with its \"opposite\"; see [16] for a visual illustration.\nThus F5, the normalizer of C5 in S5, is the subgroup permuting the pentagon and its opposite. D5 is the subgroup of F5 fixing the pentagon (symmetry group of the pentagon), and C5 is the subgroup of rotations. For example, F5 is generated by\n\n\\(F_5 = (\u03c3,\u03c4 | \u03c3^5 = \u03c4^2 = (\u03c3\u03c4)^4 = \u03c3\u03c3\u03c4\u03c3^{-1}\u03c4^{-1}),\\)\n\nwhere \u03c3 = (12345) and \u03c4 = (2453). Thus if G \u2264 F5 then G fixes\n\n\\(\u03b4\u2081 = (\u03b1\u2081 \u2212 \u03b1\u2082)\u00b2(\u03b1\u2082 \u2212 a\u2083)\u00b2 (\u03b1\u2083 \u2212 a\u2084)\u00b2 (\u03b1\u2084 \u2212 \u03b1\u2085)\u00b2 (\u03b1\u2085 \u2212 \u03b1\u2081)\u00b2 \u2013 (\u03b1\u2081 \u2013 \u03b1\u2083)\u00b2 (\u03b1\u2083 \u2013 a\u2085)\u00b2 (\u03b1\u2085 \u2013 a\u2082)\u00b2 (a\u2082 \u2013 \u03b1\u2084)\u00b2 (\u03b1\u2084 \u2013 \u03b1\u2081)\u00b2\\)\n\nwhere the first (resp., second) term corresponds to the edges of the pentagon (resp., its opposite). There are six 5-Sylow subgroups of S5: H\u2081 = ((1, 2, 3, 4, 5)), H\u2082 = ((1, 2, 3, 5, 4)), H3 = ((1, 2, 4, 5, 3)), H4 = ((1, 2, 4, 3, 5)), H5 = ((1, 2, 5, 3, 4)), H\u2081 = ((1, 3, 4, 5, 2)).\nTo see the full invariance properties, we need to \"projectivize\" and use the invariants of binary forms. Let y = 1 = \u03b2i. The generalized version of the 81's is 81, formed by replacing ai aj by\n\n\\(D_{ij} = det { \\begin{matrix} Yi & Bi \\\\ Yj & Bj \\end{matrix} }\\)\n\nin the formulas defining the di's. In particular,\n\n\\(\u03b4_1 = D_{12}D_{23}D_{34}D_{45}D_{51} \u2013 D_{13}D_{35}D_{52}D_{24}D_{41}\\)\n\nSince S5 has six 5-Sylow subgroups let 81, ..., 86 be the elements associated in this way to the six 5-Sylow's of S5, i.e., to the six pentagon-opposite pentagon pairs on five given letters; see [16].\nLEMMA 7. \u03b4 = di dhe d = di p\u00ebr i = 1, . . ., 6.\nClearly, G permutes 81, ..., 86. If G is conjugate to a subgroup of F5, it fixes one of 81,..., 86; this fixed di must then lie in F.\nThus, a necessary condition for the (irreducible) polynomial f(x) to be solvable by radicals is that one di lies in F, i.e., that the polynomial\n\n\\(g(x) = (x \u2013 \u03b4\u2081) \u00b7\u00b7\u00b7 (x \u2212 \u03b4\u2086) \u2208 F[x]\\)\n\nhas a root in F. It is also sufficient:\nLEMMA 8. If G fixes one di then G is conjugate to a subgroup of F5, provided that 81, ..., 86 are all distinct."}, {"title": "3 HIGHER DEGREE POLYNOMIALS", "content": "Next we want to compile some general rules for computing the Galois group of a degree n irreducible polynomial. We will focus mostly on transitive subgroups of the symmetric group, which"}, {"title": "3.1 Transitive groups", "content": "From the previous discussion we know that if f (x) is a degree n irreducible polynomial then its Galois group Gal (f) is a transitive subgroup of Sn. Using computational group theory and GAP, we can compute list of transitive subgroups for relatively large n. These precompiled lists for every n will be our candidates for Galois groups. Here is the number of transitive subgroups for n \u2264 47"}, {"title": "3.2 Reduction modulo p", "content": "The reduction method uses the fact that every polynomial with rational coefficients can be transformed into a monic polynomial with integer coefficients without changing the splitting field. Let f(x) \u2208 Q[x] be given by\n\n\\(f(x) = x\u00b2 + a_{n-1}x^{n-1} + \u00b7\u00b7\u00b7 + a_1x + a_0\\)\n\nLet d be the common denominator of all coefficients ao,..., an-1. Then g(x) := d. f() is a monic polynomial with integer coefficients. Clearly the splitting field of f(x) is the same as the splitting"}, {"title": "3.3 Polynomials with non-real roots", "content": "Let f(x) \u2208 Q[x] be an irreducible polynomial of degree n > 5. Denote by r the number of non-real roots of f (x). Since the complex conjugation permutes the roots then r is even, say r = 2s. By a reordering of the roots we may assume that if f(x) has r non-real roots then\n\n\\(a := (1, 2) (3, 4) \u00b7\u00b7\u00b7 (r \u2212 1, r) \u2208 Gal (f).\\)\n\nSince determining the number of non-real roots can be very fast, we would like to know to what extent the number of non-real roots of f(x) determines Gal (f). The complex conjugation assures that m(G) \u2264 r. The existence of a can narrow down the list of candidates for Gal (f). However, it is unlikely that the group can be determined only on this information unless p is \"large\" enough. In this case the number of non-real roots of f(x) can almost determine the Galois"}, {"title": "4 DATABASES OF POLYNOMIALS", "content": "In this section we want to create a database of irreducible polynomials f \u2208 Z[x] of degree deg f = n. Data will be stored in a Python dictionary. A polynomial f(x) = \u2211\u0390=0 aix\u00b9 will be represented by its corresponding binary form f (x, y) = \u2211=0 aix\u00b9yn\u2212i. Hence our points will be points in the projective space Pn, i.e. points with integer coordinates p = [an : \uff65\uff65\uff65 : ao] \u2208 Pn, such that gcd(ao, ..., an).\nSince f(x) is irreducible over and of degree deg f = n, then an \u2260 0 and a0 \u2260 0. Moreover, the discriminant Af \u2260 0.\nLet us now trying to generate a dataset with a bounded height h as defined in [16]. We will denote the set of such polynomials by Ph. In other words\nPh := {p = [an : \u2026\u2026\u2026 : ao] \u2208 Pn | aoan \u2260 0, \u2206f \u2260 0, HQ(p) \u2264 h}\nwhere Ho is defined as in [16]. To ensure that the points in the database are not repeated we key the dictionary by the tuples (a0,..., an). A dictionary in Python does not allow key duplicates, which ensures that there are no duplicates in our data. For given h, n the cardinality of Ph is bounded by\n\n\\(#P_h \u2264 4h\u00b2(2h + 1)^{n-2}\\)\n\nThe proof is a straightforward counting argument. For a degree d \u2265 3 and height h one can use Sagemath and creates such sets as:\nPP = ProjectiveSpace(d, QQ)\nrational_points = PP.rational_points(h)\nWe then normalize the data by clearing denominators. Hence, all our data has integer coordinates. Furthermore, we keep only those polynomials which are irreducible over Q. For every point p = [an: ..: ao] we will compute the following attributes\n(ao,..., an) : [H(f), [\u00a7o, ..., \u00a7n, \u2206f], Hk (p), sig, Gal q (f), ]"}, {"title": "4.1 Cubics", "content": "As a simple first exercise we start with irreducible cubics. We create a database of all rational points [Co : C1 : C2:C3] in P\u00b3 with projective height h\u2264 20 such that\n\n\\(f(x) = co + c1x + c2x\u00b2 + c3x\u00b3\\)\n\nis an irreducible polynomial in Q[x]. Since training a model for determining Gal (f) is trivial in this case we will focus mostly on comparing the naive height with the weighted moduli height and determining how the occurrence of A3 happens with the increase of h."}, {"title": "4.2 Quartics", "content": "All quartics are rational points [Co:C1:C2:C3: c4] in P\u00b3 with projective height h\u2264 20 such that\n\n\\(f(x) = co + c1x + c2x\u00b2 + c3x\u00b3 + c4x4\\)\n\nis an irreducible polynomial in Q[x]. Other than S4 the other possible Galois groups are C4, D4, V4, and A4. We refer to Eq. (7) for its invariants. However, to avoid denominators we define\n\n\\(J_2 = 36. \u03be_\u03bf, J_3 = 216 \u03be_1, J_6 = (f, x)\\)\n\nOne can verify that J6 = 7(43 \u2013 3). Notice that since J6 \u2260 0 we can also define the GL2(Q)-invariant or j-invariant\n\n\\(j = \\frac{J_2^3}{J_6} - 27\\)"}, {"title": "4.3 Quintics", "content": "Next we consider the irreducible quintics over Q. Again polynomial will be identified with points [co:C1:C2:C3:C4: C5] in P4. The Galois group of an irreducible quintic is one of the following C5, D5, F5 = AGL(1,5), A5, S5. From [17] the invariants are 50, 51, 52 of order 4, 8, 12 respectively. The expressions of such invariants suggest we use instead J4 = \u2212625 -625. 5o and Js = 1562500 \u00a71. There are two other invariants J12 and J18 and there is a degree 36 homogenous polynomial F(J4, J8, J12, J18) = 0. This is a homogenous polynomial of degree 36 in terms of coefficients. Hence, a degree 2 polynomial in J18. According to Dolgachev [6, pg. 152] the discriminant of the quintic is A = J \u2013 1288.\n\nThe increase of the number of polynomials with respect to height seems very comparable to degree 3 and 4 as it can be seen in Fig. 6. In [20] we give an estimate on the ratio of the moduli height over the naive height for binary sextics. Such bounds can be given for every degree d polynomial. In the case of quintics the minimum ratio is 0.5353 for the polynomial\n\n\\(f(x) = x^5 \u2013 5x^4 + 9x^3 \u2013 9x\u00b2 + 4x \u2212 1\\)\n\nand the maximum ratio is 3.7792 for\n\n\\(f(x) = x^5 - 2x^4 \u2013 2x^3 \u2013 x \u2013 2.\\)\n\nThe first quintic has Galois group D5 and the second F5."}, {"title": "5 NEUROSYMBOLIC NETWORKS", "content": "A neurosymbolic network is a type of artificial intelligence system that combines the strengths of neural networks (good at pattern recognition) with symbolic reasoning (based on logic and rules) to create models that can both learn from data and reason through complex situations, essentially mimicking human-like cognitive abilities by understanding and manipulating symbols to make decisions; this approach aims to overcome limitations of either method alone, providing better explainability and adaptability in AI systems. They seem to be the most reasonable choice for our approach since we can use all the theoretical knowledge that we have about polynomials and their Galois groups and somehow incorporate this into some machine learning model. The area of research on deep learning for symbolic mathematics is very active and has had a lot of activity in the last few years; [5, 10-12]\nLayers: Next we describe three symbolic layers that we implement in our model.\nReal roots layer: If the polynomial has enough real roots then from Section 3.3 the group is Ad or Sd. Computing the real roots is usually easy since it can be done with numerical methods. Hence, for high enough degree d it is usually an efficient method to compute the number of the real roots of f(x)."}, {"title": "6 CONCLUDING REMARKS", "content": "This paper introduces an innovative approach to Galois theory by leveraging machine learning techniques to address challenges in understanding polynomial properties and their Galois groups. Combining classical algebraic structures with computational tools opens new avenues for exploring the connections between mathematics and data science.\nWe have demonstrated the potential of supervised learning to predict Galois groups and polynomial solvability, while unsupervised learning reveals latent structures in polynomial datasets. A comprehensive database of irreducible polynomials with known Galois groups has been compiled, and classical invariants such as discriminants, root differences, and moduli heights have been explored as features for machine learning models. Reduction theories, including Julia and Hermite equivalence, were employed to streamline classification, and the role of polynomial heights in minimal forms and equivalence classes was investigated. The geometric interpretation of polynomial transformations within weighted projective spaces further enhances this framework.\nFuture work could extend the polynomial database to higher degrees, incorporate multivariable polynomials, and develop novel invariants derived from machine learning. Advanced models, such as graph neural networks, could refine the analysis of root interactions and symmetries, while transfer learning may generalize insights to more complex cases. Automation of reduction methods and interactive visualization tools could make these techniques accessible to a broader audience. Additionally, extending this framework to analyze field extensions and connections with algebraic geometry or physics could broaden its impact.\nThis work demonstrates the feasibility of integrating machine learning with classical mathematics, offering new tools for algebraists while uncovering deeper theoretical insights. By bridging abstract mathematics and computational science, this approach paves the way for a more interdisciplinary perspective in mathematical research."}]}