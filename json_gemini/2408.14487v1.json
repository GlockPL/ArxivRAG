{"title": "Active learning of digenic functions with boolean\nmatrix logic programming", "authors": ["Lun Ai", "Stephen H. Muggleton", "Shi-shun Liang", "Geoff S. Baldwin"], "abstract": "We apply logic-based machine learning techniques to facili-\ntate cellular engineering and drive biological discovery, based on compre-\nhensive databases of metabolic processes called genome-scale metabolic\nnetwork models (GEMs). Predicted host behaviours are not always cor-\nrectly described by GEMs. Learning the intricate genetic interactions\nwithin GEMs presents computational and empirical challenges. To ad-\ndress these, we describe a novel approach called Boolean Matrix Logic\nProgramming (BMLP) by leveraging boolean matrices to evaluate large\nlogic programs. We introduce a new system, BMLPactive, which effi-\nciently explores the genomic hypothesis space by guiding informative\nexperimentation through active learning. In contrast to sub-symbolic\nmethods, BMLPactive encodes a state-of-the-art GEM of a widely ac-\ncepted bacterial host in an interpretable and logical representation using\ndatalog logic programs. Notably, BMLPactive can successfully learn the\ninteraction between a gene pair with fewer training examples than ran-\ndom experimentation, overcoming the increase in experimental design\nspace. BMLPactive enables rapid optimisation of metabolic models and\noffers a realistic approach to a self-driving lab for microbial engineering.", "sections": [{"title": "1 Introduction", "content": "Our study explores the applicability of abductive reasoning and active learning\nto extensive biological systems. Given that biological relationships are commonly\ndescribed logically, ILP is particularly adept at operating on biological knowledge\nbases. We employ boolean matrices as underlying bottom-up evaluation mech-\nanisms of datalog programs to scale to state-of-the-art genome-scale metabolic\nnetwork model iML1515 [18]. The integration of abductive reasoning and active\nlearning via ILP was successfully demonstrated in the context of biological dis-\ncovery by the prominent Robot Scientist [13]. The Robot Scientist performed\nactive learning by strategically selecting key experiments to achieve more data-\nand cost-effective gene function learning than random experimentation. How-\never, this demonstration was limited to only 17 genes in the aromatic amino"}, {"title": "2 Related work", "content": "Computational systems [15,28,3,11,22] were primarily designed to formulate sym-\nbolic hypotheses from experimental results. One cannot directly employ these\nsystems for experimental planning. In contrast, the Robot Scientist [13,14] au-\ntomatically proposed explanatory hypotheses, actively devised validation exper-\niments and performed experiments using laboratory robotics. Experiments were\nactively selected to minimise the expected cost of experimentation for learning\ngene functions in yeast [4]. In comparison, we apply BMLPactive to a genome-\nscale metabolic network, which is significantly larger than the models in the\nRobot Scientist [13,14].\nOur BMLP approach uses boolean matrices for iterative bottom-up compu-\ntation. Obtaining the least Herbrand model of linear recursive datalog programs\ncan be reduced to computing the transitive closure of boolean matrices [21,7].\nFischer and Meyer [9] and Ioannidis [12] showed a divide-and-conquer boolean\nmatrix computation technique by viewing relational databases as graphs. An\nILP system called DeepLog [19] employed boolean matrices for choosing opti-\nmal background knowledge to derive a compact bottom clause. A great body\nof work [16,10,25,5,27,26] only studied the approximation of logic program eval-\nuation in tensor spaces. Solving certain recursive programs is difficult whereas\nthese can be solved by iterative bottom-up evaluations [25]."}, {"title": "3 Modelling a GEM with a Petri net", "content": "In an auxotrophic mutant experiment, a gene is removed from a cell. Some\nkey metabolic reactions might no longer be viable due to the removal, leading\nto insufficient cell growth. We model such metabolic mechanisms via genome-\nscale metabolic networks. A genome-scale metabolic network model contains\nbiochemical reactions of substances, which is often represented by Petri nets\n[24]. A GEM is a Petri net in the sense that reactions are transitions (edges in\na Petri net), and reactants and products are places (nodes in a Petri net). A\nreaction involves chemical substances xi and yj:\nIrreversible: $x_1 + x_2 + ... + x_m \\rightarrow y_1 + y_2 + ... + y_n$\nReversible: $x_1 + x_2 + ... + x_m \\leftrightharpoons y_1 + y_2 + ... + y_n$\nWe associate binary phenotypic effects, e.g. reduced cell growth between wild-\ntype and auxotrophic mutants, with reachability to key substances in the metabolic"}, {"title": "4 Boolean matrix logic programming", "content": "We propose the Boolean Matrix Logic Programming (BMLP) problem. In con-\ntrast to traditional logic program evaluation, BMLP uses boolean matrices to\nevaluate recursive datalog programs with arity at most two and at most two\nbody literals, namely the H2 program class [20].\nDefinition 1 (Boolean Matrix Logic Programming (BMLP) problem).\nLet P be a datalog program containing a set of clauses with the predicate symbol"}, {"title": "5 Active learning", "content": "Our active learning system BMLPactive selects experiments to minimise the ex-\npected value of a user-defined cost function and iteratively prunes hypotheses\ninconsistent with experimental outcomes. BMLPactive uses the Minimal De-\nscription Length principle [6] and the compression score of a hypothesis h [4] to\noptimise the posterior probability:\ncompression(h, E) = $\\frac{|E^+| - \\frac{E^+}{p_{ch}}(size(h) + f_{ph})}{\\sum_{h_i \\in H} 2^{compression(h_i,E)}}$ , p'(h/E) = $\\frac{2^{compression(h,E)}}{\\sum_{h_i \\in H} 2^{compression(h_i,E)}}$\nwhere E+ is the set of positive examples seen by the active learner, pch is the\npositive coverage by h and fph is false positives covered by h. This compression"}, {"title": "6 Experiments", "content": "We focused on re-discovering the function associated with the key gene tyrB in\nthe Tryptophan biosynthesis pathways. Overlapping functions between two genes\ntyrB and aspC is a digenic interaction since they are responsible for producing\nan important amino acid. We removed the metabolic reaction associated with\ntyrB from iML1515. This state-of-the-art GEM model iML1515 [18] was first\nrepresented as a datalog program and then as boolean matrices for computation.\nThe random selection strategy randomly sampled N instances from the instance\nspace. BMLPactive selected N experiments from this instance space to actively\nlearn from the hypothesis space. Both methods output the hypothesis with the\nhighest compression.\nIn Fig 1 we observed that BMLPactive provides higher information gain from\neach experiment and successfully guarantees recovery of the correct gene func-\ntion with as few as 20 experiments. This demonstrates BMLPactive's ability to\ndiscover digenic interactions in GEM. This result also shows that BMLPactive\nsignificantly reduced the number of experiments needed compared to random ex-"}, {"title": "7 Conclusion and future work", "content": "We integrated abductive reasoning and Bayesian active learning in the new ap-\nproach Boolean Matrix Logic Programming (BMLP), which utilises low-level\nboolean matrices encoded in Prolog to compute datalog programs. We applied\nour active learning system BMLPactive to learn a key digenic function in a state-\nof-the-art genome-scale metabolic network. Though we focused on a reduced\nset of hypotheses in the experiment, the combinatorial space was sufficiently\nlarge that random experiment selection became non-viable as an experimenta-\ntion strategy in a discovery process. The remarkable increase in efficiency with\nBMLPactive with this task demonstrates it has potential even as the experimen-\ntal design space grows exponentially.\nPetri nets complement knowledge representation with dynamic analysis. How-\never, the simulation of Petri nets in logic programming has been much less ex-\nplored. Future work will explore the natural link between Petri nets and Prob-\nabilistic Logic Programming [8]. Transitions could have firing likelihood con-\nstraints and this uncertainty can be modelled by probabilistic logic programs."}]}