{"title": "Quantum Circuit Design using a Progressive Widening Enhanced Monte Carlo Tree Search", "authors": ["Vincenzo Lipardi", "Domenica Dibenedetto", "Georgios Stamoulis", "Mark H.M. Winands"], "abstract": "The performance of Variational Quantum Algorithms (VQAs) strongly depends on the choice of the parameterized quantum circuit to optimize. One of the biggest challenges in VQAs is designing quantum circuits tailored to the particular problem and to the quantum hardware. This article proposes a gradient-free Monte Carlo Tree Search (MCTS) technique to automate the process of quantum circuit design. It introduces a novel formulation of the action space based on a sampling scheme and a progressive widening technique to explore the space dynamically. When testing our MCTS approach on the domain of random quantum circuits, MCTS approximates unstructured circuits under different values of stabilizer R\u00e9nyi entropy. It turns out that MCTS manages to approximate the benchmark quantum states independently from their degree of nonstabilizerness. Next, our technique exhibits robustness across various application domains, including quantum chemistry and systems of linear equations. Compared to previous MCTS research, our technique reduces the number of quantum circuit evaluations by a factor of 10 to 100 while achieving equal or better results. In addition, the resulting quantum circuits have up to three times fewer CNOT gates.", "sections": [{"title": "1 Introduction", "content": "The design of quantum algorithms to address practical problems in near-term quantum devices is a growing research field [1, 2, 3]. Variational Quantum Algorithms (VQAs) are among the most investigated methods for this purpose [4]. They are hybrid quantum-classical algorithms where the problem of interest is encoded into an optimization task over parameterized quantum circuits (PQCs). The computation is distributed between a quantum and a classical device. The evaluation of the objective function defined for quantum circuits is performed on the former, while the parameter optimization for the PQC is performed on the latter. The extensive research on VQAs can be attributed to two main reasons. First, VQAs are a hardware-tailored approach as users can design them considering the specifics of the quantum hardware at their disposal, in terms of the native universal gate set, quantum circuit depth, and connectivity between qubits. This property is crucial given the current limitations of quantum devices. Second, VQAs provide a framework for dealing with a wide range of applications, including quantum chemistry and condensed matter physics [5], combinatorial optimization [6], quantum machine learning [7], linear algebra [8, 9], and finance [10].\nThe choice of the PQC to optimize [4], commonly known as ansatz, is one of the biggest challenges in VQAs. Performance significantly depends on the ansatz chosen, which needs to be selected considering both the constraints imposed by the hardware and the structure of the problem. The goal is to design a PQC that is expressive and presents an easy-to-explore landscape for the parameter optimization task [11]."}, {"title": "2 Related Work", "content": "Neural Architecture Search (NAS) is the precursor of Quantum Architecture Search (QAS) within the domain of classical machine learning, which aims to automate the process of finding the architecture of artificial neural networks. According to these similarities, Zhang et al. [23] proposed a differentiable quantum architecture search inspired by the differentiable neural architecture search developed for NAS [24]. The same authors also developed a neural predictor-based method [25]. In this scenario, Du et al. [26] proposed an algorithm composed of two main parts. First, it initializes a set of PQCs, called supernet, by uniformly sampling them within the constraint of a fixed number of qubits, types of gates, and maximum circuit depth. The supernet is equipped with a weight-sharing strategy and then trained. Second, all the circuits of the supernet are ranked in terms of performance and the best are fine-tuned. Notably, this algorithm has been tested through both simulations and real experiments.\nAlthough QAS and NAS are closely related, the quantum and classical models can substantially differ in generalization and fundamental structure. A meta-learning approach has also been proposed, involving the discovery of a meta-heuristic that combines topology and parameters, followed by an adaptation phase for new tasks. [27].\nEvolutionary algorithms are also a promising approach to address QAS problems. The first attempt used genetic programming to find the quantum circuit implement-ing the quantum teleportation protocol [28]. Li et al. [29] implemented a genetic algorithm to find an approximate quantum circuit for quantum adders. Zhang et al. developed [30] an evolutionary-based quantum architecture search assisted by the quantum Fisher information matrix to remove redundant parameters in PQCs. It has been tested on classification tasks of the MNIST dataset, with experiments with three and four qubits. Chivilikhin et al. [31] proposed a multi-objective approach, composed of a genetic algorithm and an evolutionary strategy working on the topology and parameters of the PQC respectively. It has been tested on varia-tional quantum eigensolvers for several molecules. Evolutionary algorithms present typical advantages of population-based and derivative-free approaches, which help the search to avoid local minima. At the same time, they can be expensive in terms of computational resources on large problems. The topology of the searched PQC may have significant differences by varying the problem domain or even only changing instances in the same domain. However, in some applications, PQCs may present repeating patterns. It has been shown that a hierarchical representa-tion of quantum circuits can benefit the search for genetic algorithms on quantum machine-learning problems [32].\nReinforcement learning is also a promising approach for QAS as shown by dif-ferent frameworks developed for deep reinforcement learning agents [33, 34, 35, 36]. Those methods require a considerable amount of training data and computational resources. Moreover, deep reinforcement learning agents can easily get stuck in local minima as shown on the classical analogue NAS problems [37]. Recent advances in reinforcement learning also considered the effect of quantum noise in the QAS for the ground-state energy problem on three benchmark molecules [38].\nInspired by [39], NAS problems have also been formulated in a tree representa-tion to exploit Monte Carlo Tree Search (MCTS) techniques to design deep neural"}, {"title": "3 Progressive Widening enhanced Monte Carlo Tree Search", "content": "This section presents the Progressive Widening enhanced Monte Carlo Tree Search technique (PWMCTS) for the Quantum Architecture Search problem. In contrast to MCTS-based prior works [17, 18], we do not use gradient-based techniques during the search. It results in a gradient-free MCTS technique that designs both the topology and the parameters of PQCs. Note that, a gradient-based optimizer is employed for the standard fine-tuning of the parameters of the final circuit designed by MCTS.\nThe section is organized as follows. First, we formally define the QAS problem in Subsection 3.1. Then, we provide a general introduction to MCTS in Section 3.2. Finally, we present a detailed description of PWMCTS in Section 3.3."}, {"title": "3.1 Quantum Architecture Search", "content": "Quantum Architecture Search (QAS) aims to find a PQC that optimizes the given objective function. The problem encoded into the VQA framework specifies the ob-jective function and consequently the number of qubits n of the PQC. QAS involves designing the PQC topology, which consists of an ordered sequence of quantum gates V, their respective positions, and the corresponding angle parameters \u03b8.\nThe variational quantum state, $|\\psi(0)\\rangle = V(0) |0\\rangle$, can be generally prepared by initializing all qubits to |0) and subsequently applying an ordered sequence of"}, {"title": "3.2 Monte Carlo Tree Search", "content": "Monte Carlo Tree Search (MCTS) is a best-first search method that has achieved notable results on several search-based problems, especially in games [42, 43, 39]. Its basic implementation does not require any domain-specific knowledge. This trait is beneficial for the design of algorithms for artificial general intelligence [44, 45]. MCTS is based on a randomized exploration of the search space. Using the results of previous explorations, the algorithm gradually builds up a search tree in memory, and successively becomes better at accurately estimating the values of the most promising actions. It consists of four strategic steps [20], repeated as long as there is time left. (1) In the selection step the tree is traversed from the root node downwards until a state is chosen, which has not been stored in the tree. (2) Next, in the roll-out step, actions are chosen in self-play until a terminal state is reached."}, {"title": "3.3 Monte Carlo Tree Search for Quantum Architecture Search", "content": "PQCs naturally define a continuous search space when considering real-valued angle parameters. Then, we first define the action space using a sampling technique for PQCs, borrowed from a quantum evolutionary strategy, which discretizes the space [49]. Second, we equip our MCTS with a progressive widening technique to search within the infinite number of actions [20].\nWe propose a Progressive Widening enhanced MCTS (PWMCTS) placed in a framework where each node corresponds to an n-qubit quantum circuit and each action corresponds to a particular circuit modification. The reward for PWMCTS is a real-valued function R on the domain of n-qubit quantum circuits reaching its maximum value for the circuit's optimal configuration. The objective function C"}, {"title": "4 Applications", "content": "In this section, we discuss the application domains selected to test the PWMCTS technique. First, we present the structured problems, including the ground-state energy problem on three different molecules using VQE [5], Section 4.1, and solving systems of linear equations via VQLS [8], Section 4.2. Second, we present the unstructured problem of quantum oracle approximation, which consists of approxi-mating target quantum states defined in a dataset of random quantum circuits [21], Section 4.3. In each section, we introduce the problem, the experimental setup, and the related numerical results."}, {"title": "4.1 Variational Quantum Eigensolver", "content": "Ground state energy estimation is one of the most promising applications for quan-tum computing, with an expected exponential advantage over classical techniques [3, 55]. This has a major impact on the field of quantum chemistry for the study of molecules. The problem is fully described by the Hamiltonian H of the system. It takes into account the geometric structure of the molecule, given by the differ-ent atoms, their reciprocal positions, and the classical and quantum correlations existing between the elementary units composing that molecule.\nThe Variational Quantum Eigensolver (VQE) is a NISQ approach to the ground state energy problem [5]. The objective is to minimize the cost function C defined by the expectation value of the Hamiltonian H of the system on the variational state $|\\psi\\rangle = |\\psi(\\theta)\\rangle$:\n$C(|\\psi(\\theta)\\rangle) = \\langle \\psi| H |\\psi\\rangle$\n\nit physically represents the energy of the system in the state $|\\psi(\\theta)\\rangle)$. The minimum value $C_0$ corresponds to the ground-state energy\n$C_0 = \\min_\\psi \\langle \\psi| H |\\psi\\rangle\\rangle$\nThe reward function is defined as\n$R(|\\psi(\\theta)\\rangle) = -C(|\\psi(\\theta)\\rangle).$\nNote that, finding an ansatz with a 'good' overlap with the target quantum state is a fundamental requirement for many near-term quantum algorithms that aim to provide a greater than polynomial speedup [3]."}, {"title": "4.1.1 Experimental Results", "content": "The set of Hamiltonians used for all the experiments in this section have been generated from the quantum chemistry module in PennyLane [54] together with the electronic structure package PySCF. The Hamiltonian $H_\\mu$ of a molecule $\\mu$ is defined by fixing the atoms that compose it with their respective positions in the 3-dimensional Cartesian coordinate system, the number of active electrons, and the number of active orbitals. All the numerical results are provided in atomic units (au) for the lengths and Hartree (Ha) for the energies. We execute the algorithm 10 times for each experiment to collect statistics on independent events.\nThe results are compared with two classical benchmarks, the Self-Consistent Field (SCF) and the Full Configuration Interaction (FCI) methods. The SCF"}, {"title": "Ground State Energy of H2", "content": "In the three-dimensional space, the hydrogen molecule under study has two hydro-gen atoms placed with coordinates (0,0, -0.6614) and (0,0,0.6614). The number of active electrons, as well as the number of active orbitals, is 2. The number of qubits required is 4.\nshows the numerical results of PWMCTS on the ground-state problem for H2. It converges to an approximate solution with only 1000 iterations and less than 200 iterations with the Adam Optimizer on the angle parameters. Increasing the value of I, PWMCTS designs PQCs that require fewer steps of the classical optimizer to fine-tune the parameters. Note that it does not obtain a result as good as the FCI method, but improves upon the SCF method. Compared to related quantum approaches it reaches the same local minima using considerably fewer quantum circuit evaluations, see Table 2."}, {"title": "Ground State Energy of H2O", "content": "The water molecule studied has the two hydrogen atoms in (0, 0, 0) and (3.3609, 0, 0), while the oxygen atom in (1.6323,0.8641,0). The numbers of active electrons and active orbitals are both set to 4. The number of qubits required is 8.\nshows the numerical results of PWMCTS on the ground-state problem for H2O. Fixing $I > 5000$, PWMCTS achieves lower energies than the SCF method even without fine-tuning the parameters. After the fine-tuning, it converges consistently to the same value."}, {"title": "Ground State Energy of LiH", "content": "The Lithium hydride under study has a lithium atom in (0,0,0) and a hydrogen atom in (0,0, 2.969280527). The number of active electrons and active orbitals is set to 2 and 5, respectively. The number of qubits required is 10.\nshows the numerical results of PWMCTS on the ground-state problem for LiH. It converges to energies better than SCF with a I \u2265 5000 before the fine-tuning. After fine-tuning the parameters of the PQC designed, PWMCTS consistently improves the SCF results on LiH, see ."}, {"title": "4.2 Variational Quantum Linear Solver", "content": "Systems of linear equations promise to be the breeding ground for quantum com-puting as shown by the Harrow-Hassidim-Lloyd algorithm [56]. It provides an exponential speedup compared to classical algorithms under certain assumptions. However, as it makes use of quantum phase estimation it cannot be largely imple-mented in NISQ devices.\nBravo-Prieto et al. [8] proposed the variational quantum linear solver (VQLS) to solve systems of linear equations $Ax = b$ with a variational approach. They proved its efficient scaling in the linear system size, in the condition number of the matrix A, and in the error tolerance.\nThe problem is defined by a matrix $A\\in C^{2^n\\times2^n}$ and an n-qubit quantum state $|b\\rangle$ that can be efficiently prepared through quantum circuits. The quantum state is $|b\\rangle = U |0\\rangle$, with $U = H^{\\otimes n}$, while the matrix A is a complex linear combination of"}, {"title": "4.2.1 Experimental Results", "content": "The experiments have been carried out on the 4-qubit problem defined by the following linear system.\n$A = \\alpha_0 I + \\alpha_1 X_1 + \\alpha_2 X_2 + \\alpha_3 Z_3 Z_4$\n$|b\\rangle = H^{\\otimes 4} |0\\rangle^{\\otimes 4}$\nwith $\\alpha_0 = 0.1$, $\\alpha_1 = \\alpha_2 = 1$ and $\\alpha_3 = 0.2$."}, {"title": "4.3 Quantum Oracle Approximation", "content": "In this application, we test PWMCTS in an unstructured problem setting. A dataset of quantum circuits randomly generated defines the target solutions. The motivation for this application is twofold. On one hand, we test our approach on a problem that is free from underlying symmetries of particular domains. On the other hand, we analyze PWMCTS as a technique to design quantum circuits that are difficult to simulate on a classical computer.\nThe classical simulability of quantum states is fundamental to assessing achievable quantum advantage. In this context, nonstabilizerness, commonly known as quan-tum magic, is a measure for quantum states that describes their difficulty to be characterized and manipulated on a classical computer [13, 57, 58, 59]. For this reason, the target random quantum circuits, are ranked according to their level of relevance based on their value of stabilizer R\u00e9nyi entropy [22], chosen to measure the magic of quantum states because of its computational properties.\nGiven a pure quantum state |\u03c8), its a-R\u00e9nyi entropy is defined as\n$M_\\alpha(|\\psi\\rangle) = \\alpha(1 - \\alpha)^{-1} \\log \\sum_{P \\in P_n} \\langle \\psi|P|\\psi \\rangle^2 - \\log 2^n$\nwhere $\\Xi_P = \\langle \\psi|P|\\psi \\rangle$ and $P_n$ is the group of all the n-qubit Pauli strings with phases one [22]. Specifically, we calculated $M_2$ for all the generated quantum states"}, {"title": "4.3.1 Experimental Results", "content": "In this application, we have 30 different target circuits labeled by the number of qubits, n, number of gates, g, and stabilizer R\u00e9nyi entropy $M_2$. Each combination (n, g, $M_2$) defines a different problem for PWMCTS. For each experiment (n, g, $M_2$) we execute 10 independent runs.\nWe say that a variational quantum state |\u03c8) is an \\epsilon-approximation for the quantum state |$\\phi\\rangle$ if\n$|\\langle \\phi|\\psi\\rangle |^2 \\geq 1 - \\epsilon$.\nIn our experiments, we consider the algorithm successful when it manages to ap-proximate with $\\epsilon = 0.05$ the 4-qubits circuits, $\\epsilon = 0.1$ the 6-qubits circuits, $\\epsilon = 0.2$ the 8-qubits circuits. The difficulty of the problem increases with number of qubits. The choice of the values of \\epsilon and the size of quantum circuits allows to keep low the number of PWMCTS iterations I and consequently the computation time.\nThe performance of our technique improves by increasing the number of PWM-CTS iterations in all experiments (n, g, $M_2$), demonstrating the capabilities of our"}, {"title": "5 Discussion", "content": "The experiments described in previous sections demonstrate that PWMCTS suc-cessfully identifies near-optimal ansatz for variational quantum algorithms across various problems. PWMCTS shows a high level of automation given by the robust-ness of its results across different application domains with the fixed hyperparameter configuration. This robustness is mainly due to the reformulation of the problem and to the progressive widening technique. An adaptive branching factor is impor-tant as its optimal value differs substantially within the same domain and depends on the hyperparameters of PWMCTS. On the ground-state energy problem, the molecule of lithium hydride would require a branching factor of 5 and the molecule of water a branching factor of 50. shows the dependence of the best cost value on the branching factor. On the left, in blue, is the ground-state energy problem for the Lithium Hydride molecule. On the right, in red, is the ground-state energy problem for the Water molecule. Statistics have been collected over 10 independent runs for each branching factor value and problem. The scatter plot displays the mean cost values, and the shaded areas indicate the corresponding standard deviations.\nFurthermore, we extended the study to an unstructured problem where the goal is to approximate a random quantum state. We experimentally demonstrate that PWMCTS approximates quantum states from a dataset of random quantum cir-cuits. The dataset consists of quantum circuits with 4, 6, and 8 qubits, containing a total number of gates ranging between 5 and 30, selected from the set of Clifford generator gates and the CNOT gate. It is important to note that the universal"}, {"title": "5.1 Runtime Analysis", "content": "The performance analysis of QAS techniques takes into account the value of the cost function on the quantum circuit designed, the count of CNOT gates and param-eterized gates, the robustness of the hyperparameter configurations, and runtime.\nThe value of the cost function for the designed PQC measures the quality of the solution to the original problem compared to the optimal cost value. The count of CNOT and parameterized gates reflects the efficiency and complexity of the ansatz. A lower count of CNOT gates is desirable to execute the circuit on NISQ devices reliably, as the error rate of single-qubit gates is typically negligible compared to those of two-qubit gates. The count of parameterized gates affects the optimiza-tion difficulty of the ansatz. The robustness of the hyperparameter configuration of QAS techniques measures the degree of automation and adaptability to different problems and domains of application. The runtime analysis is performed in terms of the number of total quantum circuit evaluations $N_{eval}$. It refers to the number of quantum circuits executed on a quantum device to evaluate the cost function until a circuit providing a sufficiently good solution is successfully designed. The number of quantum circuit evaluations required by PWMCTS is\n$N_{eval} = I + 2 \\times l \\times T$.\nIt consists of two terms. The first relates to the gradient-free step performed with the tree search, while the second relates to the final fine-tuning with the Adam optimizer. We recall that I is the number of PWMCTS iterations, I is the number of parameterized quantum gates in the PQC, and T is the number of optimizer steps used to fine-tune these l circuit parameters."}, {"title": "5.2 Comparison with Nested Monte Carlo Tree Search", "content": "We benchmark PWMCTS with the Nested Monte Carlo Tree Search (NMCTS) approach proposed in [18] for two main reasons. First, both techniques inherently represent the QAS problem as a tree and solve it using an MCTS approach with an identical reward function. Second, NMCTS has been extensively tested in various domains and with up to 10 qubits, making it an appropriate testbed. In con-trast, the related works introduced in Section 2 based on different techniques have been primarily tested on small-scale problems within a limited set of application domains. Although both NMCTS and PWMCTS address QAS using MCTS, they"}, {"title": "6 Conclusions", "content": "This article investigated the role of MCTS in designing PQCs for the quantum architecture search problem. The main goal was the development of a problem-agnostic MCTS technique that could reduce the computational cost compared to"}]}