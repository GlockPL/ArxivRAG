{"title": "String Diagram of Optimal Transports", "authors": ["Kazuki Watanabe", "Noboru Isobe"], "abstract": "We propose a hierarchical framework of optimal transports (OTs), namely string diagrams of OTs. Our target problem is a safety problem on string diagrams of OTs, which requires proving or disproving that the minimum transportation cost in a given string diagram of OTs is above a given threshold. We reduce the safety problem on a string diagram of OTs to that on a monolithic OT by composing cost matrices. Our novel reduction exploits an algebraic structure of cost matrices equipped with two compositions: a sequential composition and a parallel composition. We provide a novel algorithm for the safety problem on string diagrams of OTs by our reduction, and we demonstrate its efficiency and performance advantage through experiments.", "sections": [{"title": "1 Introduction", "content": "Optimal transport (OT) is a classic problem in Operations Research, which nowadays attracts much attention from various fields. Kantrovich introduces the discrete OT formulated in linear programming (Kantrovich 1942); see e.g. (Peyr\u00e9 and Cuturi 2019). Solving the discrete OT amounts to computing the minimum transportation cost, constrained by two discrete distributions. Typically, algorithms that solve the discrete OT also provide a transportation plan (or coupling) along which the transport achieves the minimum cost. Therefore, we can consider the discrete OT as a planning problem that finds an optimal transportation plan, which has been well studied in the context of artificial intelligence; see e.g. (Russell and Norvig 2020).\nIn real-world problems, models, which are represented by cost matrices in the context of OT, often have hierarchical structures. For instance, buildings or maps consist of rooms or streets, respectively, and it is natural to assume that we can rely on such domain-specific knowledge about structures. Indeed, in hierarchical reinforcement learning (Barto and Mahadevan 2003; Pateria et al. 2022), hierarchical planning on such hierarchical models has been well studied.\nString diagrams (e.g. (Mac Lane 2013)) are a graphical language that can naturally capture such hierarchical structures with two algebraic compositions: a sequential composition $\\circ$; and a parallel composition $\\otimes$. In particular, string"}, {"title": "2 Overview", "content": "We start with an overview of our target problem and our approach; see Fig. 2 for the illustration.\nSetting. Consider the four connected boxes shown on the left side of Fig. 2, which model the example in Fig. 1. There are four regions denoted by A, B, C, D, and they are connected by interfaces shown by arrows, e.g., the region A is connected to the regions B and D. The variables above the arrows denote the number of connections, e.g., the interface between A and B has $n_A$ connections. Importantly, these number of connections must be consistent, e.g., the equality $n_A = m_B$ must hold.\nNow, suppose we have a pile of luggage\u2014we can imagine a pile of sand instead, following the classic example (e.g. (Peyr\u00e9 and Cuturi 2019))\u2014on the leftmost connection $m_A$, which is given by a distribution $a \\in \\Delta^{m_A}$. Our goal is to compute the minimum transportation cost from $a$ to the destination, the rightmost connections $n_C + k_D$, where the distribution of the pile of luggage on the destination is specified by $b \\in \\Delta^{n_C+k_D}$. We note the two important assumptions: (i) we can transfer the luggage through the connections from left to right; (ii) each region has its own cost matrix $C$ specifying the cost $C_{ij}$ of transfers from each interface $i$ on the left to each interface $j$ on the right, e.g., the cost matrix $C_A$ of A is $C_A \\in \\mathbb{R}^{m_A \\times (n_A + k_A)}$, and the cost matrix $C_B$ of B is $C_B \\in \\mathbb{R}^{m_B \\times (n_B + k_B)}$.\nTarget Problem. Given a threshold $\\lambda \\in \\mathbb{R}_{\\geq 0}$, our target problem for the diagram $\\mathcal{D}$ contains four regions A, B, C, D in Fig. 2 is the following safety problem: proving or disproving that the minimum transportation cost $OT(\\mathcal{D}, a, b)$ satisfies $\\lambda < OT(\\mathcal{D}, a, b)$, where $OT(\\mathcal{D}, a, b)$ is given as follows:\n$\\min_{P_A, P_B, P_C, P_D} \\sum_{R \\in \\{A,B,C,D\\}} (C_R, P_R),$ where transportation plans $P_A, P_B, P_C, P_D$ satisfy some consistency conditions. Here, we describe only a few conditions\u2014we formally define the problem $OT(\\mathcal{D}, a, b)$ in \u00a75\u2014(i) each transportation plan is consistent with the size of its connections, e.g., $P_A \\in \\mathbb{R}^{m_A \\times (n_A + k_A)}$; (ii) transportation plans are consistent with the specified distributions $a$ and $b$, e.g., $P_A 1_{n_A+k_A} = a$; (iii) each transportation plan is consistent with its composition along connections, e.g., $((P_A)^T 1_{m_A})_1^{n_A} = P_B 1_{n_B+k_B} \\in \\mathbb{R}^{n_A}$, where $(v)_1^{n_A}$ represents the first $n_A$ components of a vector $v \\in \\mathbb{R}^{n_A+k_A}$.\nOur Approach. We conclude the overview by showing the idea of our algorithm for the safety problem. The first idea is to describe the diagram $\\mathcal{D}$ as compositions of components; we call this representation string diagrams of OTs."}, {"title": "3 Compositions of Optimal Trasnports", "content": "In this section, we introduce two compositions of OTs, namely the sequential composition $\\circ$ and the parallel composition $\\otimes$.\nWe recall the standard discrete OT: given two distributions $a = (a_i)_{i=1}^m \\in \\Delta^m$ and $b = (b_j)_{j=1}^n \\in \\Delta^n$, and a cost matrix $C \\in \\mathbb{R}^{m \\times n}$, the $OT(C, a, b)$ is defined by\n$\\min_{P \\in \\mathbb{R}^{m \\times n}} \\langle C, P \\rangle \\text{ s.t. } P1_n = a, \\text{ and } P^T 1_m = b.$\n(1)\nWe then extend OTs to a compositional framework of OTs. The basic components in the compositional framework are open OTs. Formally, an open OT (oOT) A is a tuple $(m, n, C_A)$ of the sizes $m, n$ of the connections on the left and right, respectively, and the cost matrix $C_A \\in \\mathbb{R}^{m \\times n}$. We often write $A: m \\to n$ with explicitly denoting the size of connections. Importantly, oOTs do not have distributions $a \\in \\Delta^m, b \\in \\Delta^n$ on connections.\nSequentially Composed OT. Given two oOTs $A := (m,l, C_A)$ and $B := (l, n, C_B)$, and two distributions $a \\in \\Delta^m$ and $b \\in \\Delta^n$, we introduce the sequentially composed OT $SeqOT(A, B, a, b)$ as follows:\n$\\begin{aligned} & \\min_{P_A \\in \\mathbb{R}^{m \\times l}, P_B \\in \\mathbb{R}^{l \\times n}} \\langle C_A, P_A \\rangle + \\langle C_B, P_B \\rangle, \\text{ s.t. } & P_A1_l = a, (P_B)^T 1_l = b, \\text{ and } (P_A)^T 1_m = P_B 1_n. \\end{aligned}$\n(2)\nAn intuition of the sequential composition is the following: the two oOTs $A: m \\to l$ and $B: l \\to n$ are connected by the connections $l$. We minimize the transportation cost by optimally choosing a transportation plan while satisfying the consistencies with (i) the two distributions $a$ and $b$ (the first and second conditions of the constraints in Eq. (2)); (ii) the connections $l$ (the third condition in Eq. (2)).\nParallelly Composed OT. We move to the other composition, the parallel composition. Given two oOTs $A := (m, n, C_A)$ and $B := (k,l, C_B)$, and two distributions $a \\in \\Delta^{m+k}$ and $b \\in \\Delta^{n+l}$, we introduce a parallelly composed OT $ParOT(A \\otimes B, a, b)$ as follows:\n$\\begin{aligned} & \\min_{P_A \\in \\mathbb{R}^{m \\times n}, P_B \\in \\mathbb{R}^{k \\times l}} \\langle C_A, P_A \\rangle + \\langle C_B, P_B \\rangle, \\text{ s.t. } & P_A1_n = (a_i)_{i=1}^m, (P_A)^T 1_m = (b_j)_{j=1}^n, \\ & P_B1_l = (a_i)_{i=m+k}^m, (P_B)^T 1_k = (b_j)_{j=n+l}^n. \\end{aligned}$\n(3)\nwhere $P_A \\in \\mathbb{R}^{m \\times n}$ and $P_B \\in \\mathbb{R}^{k \\times l}$. In the parallelly composed OT $ParOT(A\\otimes B, a, b)$, unlike the sequentially composed OTs, there are no interactions between the two oOTs A and B. Therefore, we can solve $ParOT(A \\otimes B, a, b)$ by solving the two unbalanced OTs independently\u2014a generalization of OTs that does not require the sum of distributions to be 1 (e.g. (Chizat et al. 2018)). It is easy to see that the parallelly composed OT has a solution if they are essentially balanced, that is, the equation $\\sum_{i=1}^m a_i = \\sum_{j=1}^n b_j$ holds."}, {"title": "4 Duality", "content": "In this section, we show the dual problems of sequentially composed OTs and parallelly composed OTs, which shed light on an algebraic structure in OTs.\nDual Problem of Sequentially Composed OTS\nGiven two oOTs $A := (m,l, C_A)$ and $B := (l, n, C_B)$, and two distributions $a \\in \\Delta^m$ and $b \\in \\Delta^n$, the dual problem of $SeqOT(A, B, a, b)$ is given as follows."}, {"title": "Definition 4.1.", "content": "The dual problem of $SeqOT(A, B, a, b)$ is given by\n$\\begin{aligned} & \\sup_{f \\in \\mathbb{R}^m, g \\in \\mathbb{R}^n} \\sum_{i=1}^m f_i a_i + \\sum_{j=1}^n g_j b_j \\text{ s.t. } & f_i + g_j \\leq C_{ik}^A + C_{kj}^B, \\end{aligned}$\n(4)\n(5)\nfor any $i \\in [m], k \\in [l]$, and $j \\in [n]$.\nSince $SeqOT(A, B, a, b)$ has a feasible solution and all constraints are linear, the strong duality theorem holds. The proof is followed by the standard theory of linear programming (e.g. (Bertsimas and Tsitsiklis 1997, Theorem 4.4)); see the technical appendix (\u00a7A) for the proof.\nProposition 4.2 (strong duality). The dual problem defined in Def. 4.1 is equivalent to $SeqOT(A, B, a, b)$.\nInterestingly, the constraints shown in Eq. (5) are equivalent to the following inequalities\n$f_i + g_j \\leq \\min_{k \\in [l]} \\{C_{ik}^A + C_{kj}^B\\},$\n(6)\nfor any $i \\in [m]$, and $j \\in [n]$. In fact, the constraints shown in Eq. (6) are exactly those of the dual problem of the OT($C_A \\cdot C_B, a, b$), where the sequential composition $C_A \\cdot C_B$ of the cost matrices $C_A$ and $C_B$ is given by $(C_A \\cdot C_B)_{ij} := \\min_{k \\in [l]}\\{C_{ik}^A + C_{kj}^B\\}$. An informal interpretation of this fact can be the following: the cost matrix $C_A \\cdot C_B$ collects minimum \u201cpaths\u201d, corresponding to optimal choices of k, along which the cost is $C_{ik}^A + C_{kj}^B$, for each $i$ and $j$.\nWe can also think of the sequential composition as the multiplication of matrices over the min-tropical semiring $\\mathcal{M} := (\\mathbb{R},+_{\\mathbb{t}},\\cdot_{\\mathbb{t}})$: the addition $r_1 +_{\\mathbb{t}} r_2$ is defined by the min operator $r_1 +_{\\mathbb{t}} r_2 := \\min\\{r_1, r_2\\}$, and the multiplication $r_1 \\cdot_{\\mathbb{t}} r_2$ is defined by the sum operator $r_1 \\cdot_{\\mathbb{t}} r_2 := r_1+r_2$.\nProposition 4.3. The sequentially composed OT $SeqOT (A; B, a, b)$ is equivalent to the OT($C_A \\cdot C_B, a, b$).\nNote that the equivalence is with respect to minimum transportation costs, not with respect to optimal transportation plans\u2014we only care about minimum transportation costs since our target problem is the safety problem.\nDual Problem of Parallelly Composed OT\nGiven two oOTs $A := (m, n, C_A)$ and $B := (l, k, C_B)$, and two distributions $a \\in \\Delta^{m+l}$ and $b \\in \\Delta^{n+k}$, we show the dual problem of the parallelly composed OT $ParOT(A \\otimes B, a, b)$ as follows:"}, {"title": "Definition 4.4.", "content": "The dual problem of $ParOT(A \\otimes B, a, b)$ is given by\n$\\begin{aligned} & \\sup_{f \\in \\mathbb{R}^{m+l}, g \\in \\mathbb{R}^{n+k}} \\sum_{i=1}^{m+l} f_i a_i + \\sum_{j=1}^{n+k} g_j b_j, \\text{ s.t. } & f_i + g_j \\leq C_{ij}^A (\\forall i \\in [m] \\text{ and } j \\in [l]), \\ & f_{i+m} + g_{j+1} \\leq C_{ij}^B (\\forall i \\in [n] \\text{ and } j \\in [k]). \\end{aligned}$\n(7)"}, {"title": "Proposition 4.5 (strong duality).", "content": "Assume that $\\sum_{i=1}^m a_i = \\sum_{j=1}^n b_j$. The dual problem defined in Def. 4.4 is equivalent to $ParOT(A \\otimes B, a, b)$.\nSimilar to the sequentially composed OTs, the constraints shown in Eq. (7) also have a compositional interpretation. Given two cost matrices $C_A \\in \\mathbb{R}^{m \\times n}$ and $C_B \\in \\mathbb{R}^{l \\times k}$, the parallel composition $C_A \\otimes C_B$ is the cost matrix\n$\\begin{pmatrix} C_A & \\infty \\\\ \\infty & C_B \\end{pmatrix}.$\nFormally, it is given by (i) $(C_A \\otimes C_B)_{ij} := C_{ij}^A$ if $i \\in [m]$ and $j \\in [n]$, (ii) $(C_A \\otimes C_B)_{ij} := C_{(i-m)(j-n)}^B$ if $i \\in [m + 1, m+l]$ and $j \\in [n+1, n+k]$, and (iii) $(C_A \\otimes C_B)_{ij} := \\infty$ otherwise.\nThe intuition of the parallel composition should be obvious\u2014it imposes the penalties in order to prevent from jumping to the other oOT.\nProposition 4.6. Assume that $\\sum_{i=1}^m a_i = \\sum_{j=1}^n b_j$. The prallelly composed OT $ParOT(A \\otimes B, a, b)$ is equivalent to the OT($C_A \\otimes C_B, a, b$)."}, {"title": "5 Aligned String Diagram of OTs", "content": "In this section, we introduce aligned string diagrams of OTs by extending the sequentially and parallelly composed OTs. We exploit the underlying algebraic structure in cost matrices, which gives a simple formulation of the dual problem.\nAligned String Diagram of OTs\nWe introduce aligned string diagrams of OTs, which is a subclass of string diagrams of OTs defined later in \u00a76. The diagram shown in Fig. 2 is an aligned string diagram of OTs $A; (B \\otimes id_{k_A}) ; (C \\otimes D)$, where the oOT $id_{k_A}$ is given by $(k_A, k_A, id_{k_A})$ with the identity cost matrix $id_{k_A}$: (i) $(id_{k_A})_{ij} := 0$ if $i = j$, and (ii) $(id_{k_A})_{ij} := \\infty$ if $i \\neq j$.\nDefinition 5.1. Let $H$ be a positive integer. An aligned string diagram of OTs $\\mathcal{D}$ is a formula of oOTs given by\n$A ; (B_{11} \\otimes \\cdots \\otimes B_{1l_1}) ; \\cdots ; (B_{H1} \\otimes \\cdots B_{Hl_H})$\n(8)\nsuch that the compositions are consistent with connections,\n$\\begin{aligned} & n_A = \\sum_{i \\in [l_1]} m_{B_{1i}}, \\\\ & \\sum_{i \\in [l_j]} n_{B_{ji}} = \\sum_{i \\in [l_{j+1}]} m_{B_{j+1i}}, \\end{aligned}$\nfor each $j \\in [H - 1]$, where oOTs are given by $A := (m_A, n_A, C_A)$, and $B_{ji} := (m_{B_{ji}}, n_{B_{ji}}, C_{B_{ji}})$. Here we assume that (i) $C_A \\in \\mathbb{R}^{m_A \\times n_A}$; and (ii) $C_{B_{ji}} \\in \\mathbb{R}^{m_{B_{ji}} \\times n_{B_{ji}}}$ or $C_{B_{ji}} = id_{B_i}$ with $m_{B_{ji}} = n_{B_{ji}}$ for any $j$ and $i$.\nIt is important to note that we do not allow the leftmost OOT A to be replaced by $(B_{01} \\otimes \\cdots \\otimes B_{0l_0})$ to ensure the existence of a feasible solution. In addition, we require that there are no deadends in $\\mathcal{D}$, that is, $m_A, n_A, m_{B_{ji}}, n_{B_{ji}} > 1$ for any $j, i$. In \u00a76, we introduce string diagrams of OTs that allow, for example, a formula $A ; ((B ; C) \\otimes D)$.\nWe then define our OT on an aligned string diagram $\\mathcal{D}$."}, {"title": "Definition 5.2.", "content": "Let $a \\in \\Delta^{m_A}$ and $b \\in \\Delta^n$ be two distributions, where $n := \\sum_{i \\in [l_H]} n_{B_{Hi}}$. The OT($\\mathcal{D}, a, b$) on aligned string diagram $\\mathcal{D}$ is given by\n$\\min_{P_A, (P_{B_{ji}})_{j,i}} \\langle C_A, P_A \\rangle + \\sum_{j,i} \\langle C_{B_{ji}}, P_{B_{ji}} \\rangle,$\nwhere $P_A \\in \\mathbb{R}^{m_A \\times n_A}_{\\geq 0}$ and $P_{B_{ji}} \\in \\mathbb{R}^{m_{B_{ji}} \\times n_{B_{ji}}}_{\\geq 0}$, subject to the following constraints:\n1. $P_A 1_{n_A} = a$, and $(P_{B_H})^T 1_{m_{B_H}} = b$,\n2. $(P_A)^T 1_{m_A} = (P_{B_1}) 1_{n_{B_1}}$,\n3. $(P_{B_k})^T 1_{m_{B_k}} = (P_{B_{k+1}}) 1_{n_{B_{k+1}}}$,\nfor each $k \\in [H - 1]$. Here, the matrix $P_{B_k}$ is given by\n$\\begin{pmatrix} P_{B_{k1}} & & 0 \\\\ & \\ddots & \\\\ 0 & & P_{B_{kl_k}} \\end{pmatrix} \\in \\mathbb{R}^{m_{B_k} \\times n_{B_k}}$,\nand $m_{B_k} = \\sum_{i \\in [l_k]} m_{B_{ki}}$ and $n_{B_k} = \\sum_{i \\in [l_k]} n_{B_{ki}}$, for each $k \\in [H]$.\nEach oOT in a given aligned string diagram $\\mathcal{D}$ has its cost matrix C and its transportation plan P. The first constraints are the consistency conditions with the distributions a, b, and the second and third constraints are the consistency conditions with the compositions.\nWe move on to the dual problem of OT($\\mathcal{D}, a, b$)."}, {"title": "Definition 5.3.", "content": "The dual problem of OT($\\mathcal{D}, a, b$) is given by\n$\\begin{aligned} & \\sup_{f \\in \\mathbb{R}^m, g \\in \\mathbb{R}^n} \\sum_{i=1}^m f_i a_i + \\sum_{j=1}^n g_j b_j, \\text{ s.t. } & f_i + g_j \\leq C, \\end{aligned}$\n(9)\nwhere $m = m_A$, $n = \\sum_{i \\in [l_H]} n_{B_{Hi}}$ and the matrix $C^{\\mathcal{D}}$ is given by\n$C^A \\cdot (C_{B_{11}} \\otimes \\cdots \\otimes C_{B_{1l_1}} ) \\cdot \\cdots \\cdot (C_{B_{H1}} \\otimes \\cdots \\otimes C_{B_{Hl_H}}).$\nWe note that compositions ; and $\\otimes$ for cost matrices can be naturally extended to matrices whose elements can be $\\infty$. Strictly speaking, however, the definition of the matrix $C^{\\mathcal{D}}$ itself is not yet well-defined, because the order of the compositions is not defined. For instance, it is unclear whether the formula $C_{C_1} ; C_{C_2} ; C_{C_3}$ represents $C_{C_1} ; (C_{C_2} ; C_{C_3})$ or $(C_{C_1} ; C_{C_2}) ; C_{C_3}$. We address this issue by revealing the underlying algebraic structure in cost matrices\u2014the categorical structure.\nProposition 5.4. The cost matrices whose elements are real-value or $\\infty$ form a symmetric strict monoidal category (SSMC) whose objects are natural numbers and homomorphisms are cost matrices.\nWe do not recall the definition of SSMCs, and we instead show some properties that are useful for our development of string diagrams of OTs."}, {"title": "6 Algorithm", "content": "By Cor. 5.6, we can easily obtain an algorithm for the safety problem on an aligned string diagram. In Alg. 1, we show the pseudocode for computing the minimum transportation cost of the given aligned string diagram $\\mathcal{D}$. In line 2, we can use existing solvers for OTs. Given a threshold $\\lambda$, we can prove or disprove the inequality $\\lambda < OT(\\mathcal{D}, a, b)$ by running Alg. 1 that computes $OT(\\mathcal{D}, a, b)$.\nBeyond Aligned String Diagram\nSo far, we only focus on aligned string diagrams whose structures are $A; (B_{11} \\otimes \\cdots \\otimes B_{1l_1}); \\cdots ; (B_{H1} \\otimes \\cdots B_{Hl_H})$. We relax the restriction on the structure, allowing $A ; ((B ; C) \\otimes D)$, for instance. Here, we define general string diagrams on OTs. A string diagram $\\mathcal{D}$ is a formula generated by the typing rules shown in Fig. 3. The cost matrix $C^\\mathcal{D}$ of $\\mathcal{D}$ is also inductively defined by (i) $C^A$ if $\\mathcal{D} = A$; (ii) $id_n$ if $\\mathcal{D} = (n, n, id_n)$; (iii) $C_A ; C_B$ if $\\mathcal{D} = A ; B$; (iv) $C_A \\otimes C_B$ if $\\mathcal{D} = A \\otimes B$. Then, there is a simple reduction from a string diagram $A ; D_1$ to an aligned string diagram $A ; D_2$, which preserves the cost matrix. The string diagram $D_2$ is sequential normal form: $D_2$ is given by $D_2: (B_{11} \\cdot \\cdot \\cdot \\otimes B_{1l_1}) ; \\cdot \\cdot \\cdot ; (B_{H1} \\cdot \\cdot \\cdot B_{Hl_H})$."}, {"title": "7 Experiments", "content": "We demonstrate the efficiency of our approach by implementing a prototype in Python. We implemented three algorithms: (i) the composed LP approach (CompLP), which directly solves the LP shown in Def. 5.2; (ii) the monolithic LP approach (MonLP), which is based on Alg. 1 where we use an existing LP solver for the monolithic OT; (iii) the Sinkhorn approach (SH), which is based on Alg. 1 where we use the Sinkhorn algorithm (Cuturi 2013) for solving the monolithic OT. The questions that we pose are Q1: do our proposed monolithic approaches (MonLP and SH) perform better than the naive LP approach CompLP, Q2: what are the bottlenecks of MonLP and SH, and Q3: how does the complexity of compositional structures affect their performances?\nSetup. We ran experiments on a MacBook Pro Apple M1 chip 8-core CPU with a 16GB memory limit. We use the PuLP toolkit (Mitchell, OSullivan, and Dunning 2011) and the CBC solver (Forrest et al. 2023) for LPs, and the OTT-JAX library (Cuturi et al. 2022) for the Sinkhorn algorithm. We note that our algorithm is deterministic. Thus, we ran each algorithm once for all our benchmarks.\nBenchmarks. As a first set of benchmarks for string diagrams of OTs, we build four benchmarks BRooms, URooms, BChains, UChains that reflect common hierarchical structures found in real-world problems, particularly in hierarchical planning and network protocols (Watanabe et al. 2023, 2024a,b; Jothimurugan et al. 2021). Our benchmarks are inspired by the standard benchmarks for string diagrams of MDPs (Watanabe et al. 2024a). In fact, most of the benchmarks in (Watanabe et al. 2024a) take the"}, {"title": "8 Related Work", "content": "Optimal Transport with Structures. As OT finds increasing applications in machine learning, several chal-"}]}