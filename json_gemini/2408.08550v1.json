{"title": "String Diagram of Optimal Transports", "authors": ["Kazuki Watanabe", "Noboru Isobe"], "abstract": "We propose a hierarchical framework of optimal transports (OTs), namely string diagrams of OTs. Our target problem is a safety problem on string diagrams of OTs, which requires proving or disproving that the minimum transportation cost in a given string diagram of OTs is above a given threshold. We reduce the safety problem on a string diagram of OTs to that on a monolithic OT by composing cost matrices. Our novel reduction exploits an algebraic structure of cost matrices equipped with two compositions: a sequential composition and a parallel composition. We provide a novel algorithm for the safety problem on string diagrams of OTs by our reduction, and we demonstrate its efficiency and performance advantage through experiments.", "sections": [{"title": "1 Introduction", "content": "Optimal transport (OT) is a classic problem in Operations Research, which nowadays attracts much attention from various fields. Kantrovich introduces the discrete OT formulated in linear programming (Kantrovich 1942); see e.g. (Peyr\u00e9 and Cuturi 2019). Solving the discrete OT amounts to computing the minimum transportation cost, constrained by two discrete distributions. Typically, algorithms that solve the discrete OT also provide a transportation plan (or coupling) along which the transport achieves the minimum cost. Therefore, we can consider the discrete OT as a planning problem that finds an optimal transportation plan, which has been well studied in the context of artificial intelligence; see e.g. (Russell and Norvig 2020).\nIn real-world problems, models, which are represented by cost matrices in the context of OT, often have hierarchical structures. For instance, buildings or maps consist of rooms or streets, respectively, and it is natural to assume that we can rely on such domain-specific knowledge about structures. Indeed, in hierarchical reinforcement learning (Barto and Mahadevan 2003; Pateria et al. 2022), hierarchical planning on such hierarchical models has been well studied. See the left image in Fig. 1 as an illustration of a hierarchical model in a hierarchical extension of OT.\nString diagrams (e.g. (Mac Lane 2013)) are a graphical language that can naturally capture such hierarchical structures with two algebraic compositions: a sequential composition ; and a parallel composition \u2297. In particular, string"}, {"title": "2 Overview", "content": "We start with an overview of our target problem and our approach; see Fig. 2 for the illustration.\nSetting. Consider the four connected boxes shown on the left side of Fig. 2, which model the example in Fig. 1. There are four regions denoted by A, B, C, D, and they are connected by interfaces shown by arrows, e.g., the region A is connected to the regions B and D. The variables above the arrows denote the number of connections, e.g., the interface between A and B has $n_A$ connections. Importantly, these number of connections must be consistent, e.g., the equality $n_A = m_B$ must hold.\nNow, suppose we have a pile of luggage\u2014we can imagine a pile of sand instead, following the classic example (e.g. (Peyr\u00e9 and Cuturi 2019))\u2014on the leftmost connection $m_A$, which is given by a distribution $a \\in \\Delta^{m_A}$. Our goal is to compute the minimum transportation cost from $a$ to the destination, the rightmost connections $n_C + k_D$, where the distribution of the pile of luggage on the destination is specified by $b \\in \\Delta^{n_C+k_D}$. We note the two important assumptions: (i) we can transfer the luggage through the connections from left to right; (ii) each region has its own cost matrix $C$ specifying the cost $C_{ij}$ of transfers from each interface $i$ on the left to each interface $j$ on the right, e.g., the cost matrix $C_A$ of A is $C_A \\in \\mathbb{R}^{m_A \\times (n_A+k_A)}$, and the cost matrix $C_B$ of B is $C_B \\in \\mathbb{R}^{m_B \\times (n_B+k_B)}$.\nTarget Problem. Given a threshold $\\lambda \\in \\mathbb{R}_{\\geq 0}$, our target problem for the diagram D contains four regions A, B, C, D in Fig. 2 is the following safety problem: proving or dis-proving that the minimum transportation cost OT(D, a, b) satisfies $\\lambda \\leq OT(D, a, b)$, where OT(D, a, b) is given as follows:\n$\\min_{\n P_A, P_B, P_C, P_D} \\sum_{R \\in \\{A,B,C,D\\}} \\langle C_R, P_R \\rangle,$\nwhere transportation plans $P_A, P_B, P_C, P_D$ satisfy some consistency conditions. Here, we describe only a few conditions\u2014we formally define the problem OT(D, a, b) in \u00a75\u2014(i) each transportation plan is consistent with the size of its connections, e.g., $P_A \\in \\mathbb{R}^{m_A \\times (n_A+k_A)}$; (ii) transportation plans are consistent with the specified distributions $a$ and $b$, e.g., $P_A \\mathbf{1}_{n_A+k_A} = a$; (iii) each transportation plan is consistent with its composition along connections, e.g., $((P_A)^T \\mathbf{1}_{m_A})_1 = P_B \\mathbf{1}_{n_B+k_B} \\in \\mathbb{R}^{n_A}$, where $(v)_1$ represents the first $n_A$ components of a vector $v \\in \\mathbb{R}^{n_A+k_A}$.\nOur Approach. We conclude the overview by showing the idea of our algorithm for the safety problem. The first idea is to describe the diagram D as compositions of components; we call this representation string diagrams of OTS."}, {"title": "3 Compositions of Optimal Trasnports", "content": "In this section, we introduce two compositions of OTs, namely the sequential composition $;$ and the parallel composition $\\otimes$.\nWe recall the standard discrete OT: given two distributions $a = (a_i)_{i=1}^{m} \\in \\Delta^{m}$ and $b = (b_j)_{j=1}^{n} \\in \\Delta^{n}$, and a cost matrix $C \\in \\mathbb{R}^{m \\times n}$, the OT(C, a, b) is defined by\n$\\min_{P \\in \\mathbb{R}^{m\\times n}} \\langle C, P \\rangle  \\text{ s.t. } P \\mathbf{1}_{n} = a, \\text{ and } P^T \\mathbf{1}_{m} = b.$\nWe then extend OTs to a compositional framework of OTs. The basic components in the compositional framework are open OTs. Formally, an open OT (oOT) A is a tuple $(m, n, C_A)$ of the sizes $m, n$ of the connections on the left and right, respectively, and the cost matrix $C_A \\in \\mathbb{R}^{m \\times n}$.\nWe often write $A: m \\to n$ with explicitly denoting the size of connections. Importantly, oOTs do not have distributions $a \\in \\Delta^m, b \\in \\Delta^n$ on connections.\nSequentially Composed OT. Given two oOTs $A := (m, l, C_A)$ and $B := (l, n, C_B)$, and two distributions $a \\in \\Delta^m$ and $b \\in \\Delta^n$, we introduce the sequentially composed"}, {"title": "4 Duality", "content": "In this section, we show the dual problems of sequentially composed OTs and parallelly composed OTs, which shed light on an algebraic structure in OTs.\nDual Problem of Sequentially Composed OTS\nGiven two oOTs $A := (m, l, C_A)$ and $B := (l, n, C_B)$, and two distributions $a \\in \\Delta^m$ and $b \\in \\Delta^n$, the dual problem of SeqOT(A, B, a, b) is given as follows."}, {"title": "5 Aligned String Diagram of OTs", "content": "In this section, we introduce aligned string diagrams of OTS by extending the sequentially and parallelly composed OTs. We exploit the underlying algebraic structure in cost matrices, which gives a simple formulation of the dual problem.\nAligned String Diagram of OTs\nWe introduce aligned string diagrams of OTs, which is a subclass of string diagrams of OTs defined later in \u00a76. The diagram shown in Fig. 2 is an aligned string diagram of OTs $A;(B \\otimes id_{k_A});(C \\otimes D)$, where the oOT $id_{k_A}$ is given by $(k_A, k_A, id_{k_A})$ with the identity cost matrix $id_{k_A}$: (i) $(id_{k_A})_{ij} := 0$ if $i = j$, and (ii) $(id_{k_A})_{ij} := \\infty$ if $i \\neq j$.\nDefinition 5.1. Let $H$ be a positive integer. An aligned string diagram of OTs D is a formula of oOTs given by\n$A; (B_{11} \\otimes B_{1l_1}); ... ; (B_{H1} \\otimes ... \\otimes B_{Hl_H})$\nsuch that the compositions are consistent with connections,\n$\\begin{aligned}\nn_A &= \\sum_{i\\in[l_1]} m_{B_{1i}}, \\\\\n\\sum_{i\\in[l_j]} n_{B_{ji}} &= \\sum_{i\\in[l_{j+1}]} m_{B_{j+1i}}, \\\\\n\\end{aligned}$\nfor each $j \\in [H - 1]$, where oOTs are given by $A := (m_A, n_A, C_A)$, and $B_{ji} := (m_{B_{ji}}, n_{B_{ji}}, C_{B_{ji}})$. Here we assume that (i) $C_A \\in \\mathbb{R}^{m_A \\times n_A}$; and (ii) $C_{B_{ji}} \\in \\mathbb{R}^{m_{B_{ji}} \\times n_{B_{ji}}}$ or $C_{B_{ji}} = id_{B_i}$ with $m_{B_{ji}} = n_{B_{ji}}$ for any $j$ and $i$.\nIt is important to note that we do not allow the leftmost OOT A to be replaced by $(B_{01} \\otimes ... \\otimes B_{0l_0})$ to ensure the existence of a feasible solution. In addition, we require that there are no deadends in D, that is, $m_A, n_A, m_{B_{ji}}, n_{B_{ji}} > 1$ for any $j, i$. In \u00a76, we introduce string diagrams of OTs that allow, for example, a formula $A ; ((B ; C) \\otimes D)$.\nWe then define our OT on an aligned string diagram D."}, {"title": "6 Algorithm", "content": "By Cor. 5.6, we can easily obtain an algorithm for the safety problem on an aligned string diagram. In Alg. 1, we show the pseudocode for computing the minimum transportation cost of the given aligned string diagram D. In line 2, we can use existing solvers for OTs. Given a threshold $\\lambda$, we can prove or disprove the inequality $\\lambda \\leq OT(D, a, b)$ by running Alg. 1 that computes OT(D, a, b).\nBeyond Aligned String Diagram\nSo far, we only focus on aligned string diagrams whose structures are $A;(B_{11} \\otimes B_{1l_1});...;(B_{H1} \\otimes ... \\otimes B_{Hl_H})$. We relax the restriction on the structure, allowing $A ; ((B ; C) \\otimes D)$, for instance. Here, we define general string diagrams on OTs. A string diagram D is a formula generated by the typing rules shown in Fig. 3. The cost matrix $C_D$ of D is also inductively defined by (i) $C_A$ if $D = A$; (ii) $id_n$ if $D = (n, n, id_n)$; (iii) $C_A ; C_B$ if $D = A ; B$; (iv) $C_A \\otimes C_B$ if $D = A \\otimes B$. Then, there is a simple reduction from a string diagram $A ; D_1$ to an aligned string diagram $A ; D_2$, which preserves the cost matrix. The string diagram $D_2$ is sequential normal form: $D_2$ is given by\n$D_2: (B_{11} \\otimes ... \\otimes B_{1l_1}); ... ; (B_{H1} \\otimes ... \\otimes B_{Hl_H}).$"}, {"title": "7 Experiments", "content": "We demonstrate the efficiency of our approach by implementing a prototype in Python. We implemented three algorithms: (i) the composed LP approach (CompLP), which directly solves the LP shown in Def. 5.2; (ii) the monolithic LP approach (MonLP), which is based on Alg. 1 where we use an existing LP solver for the monolithic OT; (iii) the Sinkhorn approach (SH), which is based on Alg. 1 where we use the Sinkhorn algorithm (Cuturi 2013) for solving the monolithic OT.\nThe questions that we pose are Q1: do our proposed monolithic approaches (MonLP and SH) perform better than the naive LP approach CompLP, Q2: what are the bottlenecks of MonLP and SH, and Q3: how does the complexity of compositional structures affect their performances?"}, {"title": "8 Related Work", "content": "Optimal Transport with Structures. As OT finds increasing applications in machine learning, several challenges have emerged that classical discrete OT cannot address. One challenge arises when the (discrete) distributions are high-dimensional, and another occurs when there are more than three marginal distributions involved. The latter is known as the multi-marginal OT (MMOT), which is computationally challenging due to the exponential complexity with respect to the number of marginal distributions. See (Pass 2015; Lin et al. 2022).\nTo tackle these issues, efficient algorithms have been proposed by assuming certain structures in the distributions or cost matrices, such as hierarchy or symmetry of distributions (Hamri, Bennani, and Falih 2022; Schmitzer and Schn\u00f6rr 2013; Takeda et al. 2024), and submodularity of the cost matrix (Alvarez-Melis, Jaakkola, and Jegelka 2018). More recently, algorithms exploiting the hierarchical structure of distributions on graphs have been developed for MMOT in (Zeng et al. 2024).\nAs a comparison, we propose a planning-motivated variant of OT and discover the new algebraic structure.\nString Diagram. String diagrams (e.g. (Mac Lane 2013; Joyal and Street 1991; Selinger 2011)) have been widely studied as a graphical expression of monoidal categories. There are many applications of string diagrams, such as recurrent neural networks (Sprunger and Katsumata 2019), gradient-based learning (Cruttwell et al. 2022), quantum computation (Coecke and Kissinger 2017; Abramsky and Coecke 2004), and disentanglement in machine learning (Zhang and Sugiyama 2023).\nHierarchical Reinforcement Learning. The assumption of a hierarchical structure in models is popular in reinforcement learning. Hierarchical reinforcement learning (Barto and Mahadevan 2003; Pateria et al. 2022) performs high- (or macro-) and low-level (or micro-level) planning on such hierarchical models. Recently, such hierarchical planning on Markov decision processes (MDPs) has also attracted attention for verifying systems that work with unknown environments as well (Neary et al. 2022; Junges and Spaan 2022). String diagrams of MDPs (Watanabe et al. 2023, 2024a,b) use algebraic operations over MDPs to represent such hierarchical systems."}, {"title": "9 Conclusion", "content": "We introduce string diagrams as a hierarchical framework of OTs, and provide a new algorithm that exploits the algebraic structure over cost matrices. In experiments, our algorithm outperforms naive linear programming in all benchmarks.\nOne of the future works is to develop hierarchical planning algorithms on string diagrams of OTs. For instance, adding an entropy regularization to OTs on string diagrams and extending the Sinkhorn algorithm to string diagrams of OTs may be a promising future direction. Another interesting direction is to extend the framework of implicit Sinkhorn"}]}