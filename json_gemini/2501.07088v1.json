{"title": "MathReader : Text-to-Speech for Mathematical Documents", "authors": ["Sieun Hyeon", "Kyudan Jung", "Nam-Joon Kim", "Hyun Gon Ryu", "Jaeyoung Do"], "abstract": "TTS (Text-to-Speech) document reader from Microsoft, Adobe, Apple, and OpenAI have been serviced worldwide. They provide relatively good TTS results for general plain text, but sometimes skip contents or provide unsatisfactory results for mathematical expressions. This is because most modern academic papers are written in LaTeX, and when LaTeX formulas are compiled, they are rendered as distinctive text forms within the document. However, traditional TTS document readers output only the text as it is recognized, without considering the mathematical meaning of the formulas. To address this issue, we propose MathReader, which effectively integrates OCR, a fine-tuned T5 model, and TTS. MathReader demonstrated a lower Word Error Rate (WER) than existing TTS document readers, such as Microsoft Edge and Adobe Acrobat, when processing documents containing mathematical formulas. MathReader reduced the WER from 0.510 to 0.281 compared to Microsoft Edge, and from 0.617 to 0.281 compared to Adobe Acrobat. This will significantly contribute to alleviating the inconvenience faced by users who want to listen to documents, especially those who are visually impaired.", "sections": [{"title": "I. INTRODUCTION", "content": "When reading documents, we often find ourselves in sit- uations where we must rely on hearing rather than sight. This is especially true for visually impaired individuals as they cannot directly perceive text documents with their eyes and need someone to read them aloud. In such cases, a TTS document reader can be used. This technology provides the ability to automatically read text within documents, and for visually impaired individuals, it is essential to understand the content.\nMany current software applications provide these services. For example, programs such as Microsoft Edge [1] and Adobe Acrobat [2] offer a read aloud feature for documents saved in the PDF format. However, this functionality is not perfect, and we found that both programs output inaccurate speech when reading the formulas. This poses a significant barrier for visually impaired individuals trying to understand documents in which formulas, such as mathematics or physics, play a crucial role.\nThe main reason formulas are read inaccurately is that, in many modern academic documents, these formulas are typically written in LaTeX and then compiled. As a result, the formulas are displayed in a distinct format that is different from regular text. However, traditional TTS systems [3]-[8] read these formulas as simple texts without considering their mathematical meaning, leading to inaccurate speech that does not reflect the true meaning. Additionally, older documents were not written in LaTeX and only existed as images, which prevents the text from being recognized by TTS systems and thus results in the formulas not being read at all.\nOne solution to this problem is to convert all documents uniformly into markup text files. For this, we can use OCR (Optical Character Recognition) [9]-[13]. However, the text extracted from the document through OCR is not general English but LaTeX code containing special symbols. When this is directly input into a TTS system, general English without special symbols is converted into speech correctly, but the formula parts containing special symbols such as , [, and = are not output as speech. In other words, the formula parts extracted from the document cannot be converted into speech using a general TTS model. Therefore, we added a process that converted the LaTeX parts representing formulas into spoken English before passing the OCR results to the TTS system. An example of converting an LaTeX formula into spoken English is presented in Table 1."}, {"title": "II. RELATED WORKS", "content": "Most modern academic documents are written in LaTeX; in fields such as mathematics and science, where many formulas must be written, the use of LaTeX is essential. As a result, current Optical Character Recognition (OCR) technologies are being developed to convert academic documents into the LaTeX format, and advancements in deep learning-based neural network models [9]-[13] have achieved remarkable success in this field. With OCR technology based on computer vision models, even older academic documents, which have only been preserved as images and were not originally created on computers, can be converted into LaTeX format.\nHowever, editing or reading documents in LaTeX is ex- tremely challenging for visually impaired individuals, which has led to the development of various assistive technologies [15]\u2013[22]. One of the most prominent technologies is the conversion of LaTeX into speech using TTS (Text-to-Speech) technology. A study by [15] manually mapped a specific LaTeX code to spoken English for conversion into speech. However, this approach faces challenges in handling numerous exception cases. Our research utilized a small language model to correctly read all the formulas written in LaTeX without exceptions. [16] and [17] used Microsoft\u2019s TTS engine [23] in a LaTeX editing program developed for the visually impaired. However, their program was designed to assist visually im- paired users in creating and editing documents in LaTeX, and they did not develop a program for reading existing documents, especially older documents that only exist as images. [19] conducted research using GPT-4 [24] to make LaTeX content accessible to visually impaired individuals, but GPT-4 is too expensive, and its inference speed is too slow to be practical. We overcame this limitation by using a much smaller language model, T5-small."}, {"title": "III. METHOD", "content": "Our pipeline converts documents into voices through a 5- stage process. (See Figure 1).\nOptical Character Recognition (OCR) is a task that rec- ognizes characters in a document and converts them into textual data. With the advancement of neural networks, various attempts have been made to apply deep-learning models to OCR tasks. We used Nougat-small [10], which is based on the hierarchical vision transformer [25], Swin Transformer [26]. This allowed us to convert PDF documents into mmd files composed of a markup language.\nBecause Nougat accepts the PDF format as input, the document must be prepared in the PDF format. Because our goal is to obtain voice output from the document, we can input the text from the mmd file generated by Nougat into the TTS model to obtain the corresponding voice. However, current TTS models cannot read special characters. In other words, the TTS model cannot read LaTeX codes, which are written using numerous special characters in the mmd file. Therefore, we modified these LaTeX codes to make them readable using the TTS model.\nWhen Nougat converts the PDF into an mmd file, the mmd file contains both general English text and LaTeX codes representing the formulas. Nougat marks the LaTeX formulas in the mmd file using special characters like \\[ \\] or \\( \\). Using these special characters, we can locate all LaTeX formulas within the mmd file."}, {"title": "C. Fine-tuned T5", "content": "T5 is a pre-trained language model for various text-to-text tasks [14]. T5 has been pre-trained in different sizes and is widely used for translation tasks. According to previous research [27], converting LaTeX into spoken English text can be considered a type of \"translation\u201d task. Therefore, we used a fine-tuned T5 model to convert all LaTeX formulas in the mmd file into spoken English.\nTo fine-tune T5 for the LaTeX translation task, we needed a dataset composed of (LaTeX - Spoken English) pairs, and because such a dataset already exists publicly [27], we used it. Additionally, considering that using a large language model would result in slow inference speeds and reduced practicality, we used the smallest version, T5-small. Our experiments con- firmed that T5-small produces spoken English of sufficiently good quality."}, {"title": "D. Replace LaTeX with Spoken English", "content": "Once we converted all the LaTeX formulas into spoken English using T5, we replaced the LaTeX formulas in the mmd file with spoken English equivalents, making the text readable by the TTS model."}, {"title": "E. TTS", "content": "After converting all LaTeX formulas into spoken English in Step D, there are no formulas in the mmd file that the TTS model cannot read. Therefore, the TTS model outputs a voice without any errors. We connected VITS [3], a TTS model, to the pipeline.\nThe algorithm for implementing our proposed MathReader is as follows. (See Algorithm 1)"}, {"title": "IV. EXPERIMENTS", "content": "We collected documents available as open source for testing. However, while we could access the LaTeX sources of these documents, we could not find a dataset with the corresponding spoken English transcriptions. Therefore, we manually typed the LaTeX formulas in the documents in spoken English. Our dataset was made publicly available to anyone for access.\nWe used NVIDIA H100 for training T5. The model was trained for 20 epochs, and the model with the lowest validation loss was selected. The learning rate started at 1e-4 and was adjusted during training using a linear learning rate scheduler. The batch size was set to 48 and both the input and output sequence lengths were set to 325.\nWe first saved the wav files for the test dataset documents using our MathReader and the comparison TTS document readers, Microsoft Edge and Adobe Acrobat. Then, using Naver Clova Note, a Speech-To-Text (STT) platform [28], we converted all the spoken results into text and measured the Word Error Rate (WER) against the Ground Truth. In addition, owing to the nature of mathematical expressions, errors occur during speech-to-text conversion because of homophones. For example, y is sometimes outputted as why, or Tas Tee. Considering this, we also measured the Character Error Rate (CER)."}, {"title": "V. CONCLUSION", "content": "In this study, we propose MathReader, a pipeline designed to convert documents into voices more accurately. Composed of Nougat-small, T5-small, and VITS, MathReader addresses the issue of inaccurate formula reading that occurs in traditional TTS document readers, such as Microsoft Edge and Adobe Acrobat. MathReader demonstrated significantly lower WER and CER than other TTS document readers, and we confirmed that it can be used for real-time document reading services in a GPU environment. Our MathReader will significantly contribute to reducing the inconvenience faced by individuals who rely on speech to understand documents, especially those who are visually impaired."}]}