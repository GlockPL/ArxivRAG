{"title": "Revisiting Vacuous Reduct Semantics for Abstract Argumentation (Extended Version)", "authors": ["Lydia Bl\u00fcmela", "Matthias Thimmb"], "abstract": "We consider the notion of a vacuous reduct semantics for abstract argumentation frameworks, which, given two abstract argumentation semantics \u03c3 and \u03c4, refines o (base condition) by accepting only those o-extensions that have no non-empty \u03c4-extension in their reduct (vacuity condition). We give a systematic overview on vacuous reduct semantics resulting from combining different admissibility-based and conflict-free semantics and present a principle-based analysis of vacuous reduct semantics in general. We provide criteria for the inheritance of principle satisfaction by a vacuous reduct semantics from its base and vacuity condition for established as well as recently introduced principles in the context of weak argumentation semantics. We also conduct a principle-based analysis for the special case of undisputed semantics.", "sections": [{"title": "1 Introduction", "content": "Abstract argumentation frameworks (AFs) [15] are a knowledge representation formalism that represents argumentation scenarios as directed graphs, where nodes represent arguments and edges represent conflicts between arguments. Works based on this basic AF representation are counted towards abstract argumentation, differentiating them from those with additional structural elements, e. g. Weighted Argumentation Frameworks [11], Constrained Argumentation Frameworks [10] or Structured Argumentation [16].\nThere exist several different approaches regarding semantics for AFs. Here, we focus on the extension-based approach by which an argumentation semantics o is a mapping that assigns to an argumentation framework a set of extensions. Alternatives are, e. g. labeling-based semantics [19] and ranking-based semantics [9]. A \u03c3-extension is a set of arguments, which collectively satisfy the conditions specified by o e. g. to have no attacks among themselves. [20] proposes a method for combining two argumentation semantics \u03c3, \u03c4 into a third we refer to as the T-vacuous reduct semantics to the base of \u03c3, vaco (\u03c4). The extensions of vaco (T) satisfy two conditions: the base condition, requiring them to be o-extensions, and the vacuity condition, demanding there exists no nonempty T-extension in their reduct [4]. Given a set of arguments E of an AF F, the reduct is the restriction of F to all arguments neither in nor attacked by E and the attacks among them. The idea of vacuous reduct semantics is to check the reduct for relevant arguments, as specified by the vacuity condition 7, and to only accept o-extensions whose reduct proves to contain nothing of interest. For instance, using conflict-free semantics for the vacuity condition allows us to ignore the presence of"}, {"title": "2 Preliminaries", "content": "We fix an infinite countable set UArg as the universe of arguments. We consider abstract argumentation frameworks by Dung [1995], which can be represented as directed graphs.\nDefinition 1. An Abstract Argumentation Framework (AF) is a tuple F = (A, R), where A \u2286 UArg is a finite set of arguments and R\u2286A x A is the attack relation. Let UAF denote the set of all AFs over UArg.\nFor two arguments a, b \u2208 A of an AF F = (A, R) we say a attacks b if (a, b) \u2208 R. A set E\u2286 A attacks a set E' \u2286 A iff there are a \u2208 E and b \u2208 E' with (a, b) \u2208 R. If E or E' are singletons, we omit brackets, e. g., we say that a \u2208 A attacks a set E if {a} attacks"}, {"title": "3 Instantiations of vacuous reduct semantics", "content": "We recall the general definition of a vacuous reduct semantics from [6]. It combines two semantics o and 7 by using one as the base condition, which is that only o-extensions are accepted, and one for the vacuity condition, stating that accepted extensions have no nonempty T-extension in their reduct.\nDefinition 2. Let \u03c3, \u03c4 be two extension-based argumentation semantics. The T-vacuous reduct semantics vaco (T) to the base of ois defined as\nvaco(\u03c4) (F) = {\u0395\u2208\u03c3(F) | \u03c4(FE) \u2286 {0}}\nfor all AFs F.\nNote that cf and adm are usually not regarded as (full) \"semantics\", but we treat them here to simplify language."}, {"title": "3.1 Admissibility as base semantics", "content": "In previous work, the following vacuous reduct semantics were already discussed:\nProposition 3.\n\u2022 vacadm(\u03c3) = pr for \u03c3 \u2208 {adm, co, pr} [20, 6]\n\u2022 vacadm(gr) = co [6]\nSince semi-stable vacuity is given, whenever admissible vacuity is given, we can add vacadm (sst) to our list of known vacuous reduct semantics.\nCorollary 2. vacadm(sst) = vacadm(adm) = pr.\nAlthough it is not an existing semantics, we can give a lower and upper bound for adm\u2081 = vacadm (id) and make the following obser-vations.\nProposition 4.\n1. pr adm co.\n2. id adm.\n3. There exist AF F = (A, R) such that\nadm(F) \u2260 {E \u2208 adm(F) | id(F) \u2286 E}.\nWe can thus think of the adm semantics as the semantics de-manding that everything that can be included, without having to ex-clude something else, has to be included. The semantics works in a similar way as complete semantics. Given an admissible exten-sion Eid(F), adm closes E under the intersection of all pre-ferred extensions containing E, i. e. the largest admissible extension E'E which is contained in all preferred supersets of E is the smallest adm-extension containing E. Following this analogy, the"}, {"title": "3.2 Complete semantics as base semantics", "content": "Complete semantics behaves the same way as the admissible seman-tics in most cases. First, vacadm (adm), which is the preferred seman-tics, coincides with vacco (adm). This is due to preferred extensions always being complete. The same is true for vacadm (gr). Here, the vacuity condition, gr(FE) = {0} implies there are no unattacked arguments in FE for any extension E\u2208 vacadm(gr), so any such E is complete (Proposition 3) and thus satisfies the base condition given by complete semantics.\nProposition 7.\n1. vacco(\u03c3) = pr for any \u03c3\u2208 {adm, co, pr, sst}.\n2. vacco(gr) = Co\nFurthermore, since every E \u2208 adm\u2081 = vacadm (id) is a complete extension, restricting the base to complete semantics makes no dif-ference.\nCorollary 4. vacco (id) = vacadm(id) = adm.\nWe can also adopt the characterization of vacadm (st) for vacco (st) = co\u2081, which is a new semantics.\nProposition 8. Let F = (A, R) be an AF. Then vacco(st)(F) = st(F) \u222a {E \u2208 co(F) | \u2200E' \u2208 st(F) : E Z E'}.\nCorollary 5. vacco (st) vacadm(st).\nLastly, for conflict-free vacuity conditions the complete semantics as base condition yields the same reduct semantics as the admissible semantics.\nProposition 9. Let \u03c3\u2208 {cf, na}. Then vacco(\u03c3) = adm."}, {"title": "3.3 Preferred semantics as base semantics", "content": "Applying admissibility-based vacuity conditions to the preferred se-mantics as the base condition does not yield any proper refinements,i. e. every preferred extension satisfies the vacuity condition for anysemantics o which is a subset of the admissible semantics. This isdue to the fact that adm(FE) = {0} always holds for preferredextensions as shown by [5].\nProposition 10. vacpr(\u03c3)= pr for any \u03c3E{adm, co, pr, st, sst, gr, id}.\nFurthermore, using conflict-free vacuity conditions with preferredsemantics as base condition yields the same vacuous reduct seman-tics as with admissible semantics as base condition, which demon-strates what a strong restriction the conflict-free vacuity condition is.\nProposition 11. Let \u03c3 \u2208 {cf, na}. Then vacpr(\u03c3) = adm."}, {"title": "3.4 Grounded semantics as base semantics", "content": "Since the grounded semantics is a single-status semantics, refining it with a vacuity condition can only produce two outcomes: either the new semantics produces the grounded extension or no exten-sion at all. This section is a list of simple criteria, in which cases the grounded extension is retained.\nProposition 12. vacgr(gr) = gr.\nProposition 13. Let F = (A, R) be an AF, \u03c3 \u2208 {adm, co, pr, sst}.\nvacgr(\u03c3)(F) = gr(F) iff gr(F) = pr(F)\nProposition 14. Let F = (A, R) be an AF, G \u2208 gr(F) the grounded extension. Then vacgr(st) (F) = gr(F) iff there is no E \u2208 st(F), such that GE.\nProposition 15. Let F = (A, R) be an AF. vacgr(id) (F) = gr(F) iff gr(F) = id(F).\nRegarding conflict-free vacuity, we have to check whether the grounded extension is in vacct (cf)(F).\nProposition 16. Let F = (A, R) be an AF, \u03c3\u2208 {cf, na}. Then vacgr(\u03c3)(F) = gr(F) iff gr(F) \u2286 vaccf(cf)(F)."}, {"title": "3.5 Ideal semantics as base semantics", "content": "Just like the grounded semantics, the ideal semantics is a single-status semantics, so we are only concerned with its (non-)existence under the different vacuity conditions. In two cases it is guaranteed to exist.\nProposition 17. 1. vacid(gr) = id\n2. vacid(id) = id\nFor the other admissibility-based vacuity conditions, the cardinal-ity of the set of preferred (resp. stable) extensions is the deciding factor.\nProposition 18. Let F = (A, R) be an AF.\n1. vacid(\u03c3)(F) = id(F) for \u03c3 \u2208 {adm, co, pr, sst} iff |pr(F)| = 1.\n2. vacid(st) (F) = id(F) iff|st(F)| \u2264 1.\nBuilding on Propositions 11 and 18, the following can be said about the existence under conflict-free vacuity.\nProposition 19. Let F = (A, R) be an AF, \u03c3\u2208 {cf, na}. Then vacid(\u03c3)(F) = id(F) iff |pr(F)| = 1 and pr(F) \u2286 vacadm(cf) (F)."}, {"title": "3.6 Stable and semi-stable semantics as base semantics", "content": "Using stable semantics as the base condition reproduces stable se-mantics due to the reduct of a stable extension always being empty.\nProposition 20. Let F = (A, R) be an AF. For any argumentation semantics T it holds that vacst(T)(F) = st(F).\nSemi-stable extensions are always preferred. For this reason admissibility-based vacuity conditions have no effect.\nProposition 21. vacsst(\u03c3) = sst for \u03c3\u2208 {adm, co, gr, pr, id, sst}.\nSince the semi-stable semantics is the stable semantics on AFs where stable extensions exist, adding stable semantics as a vacuity condition has no effect, too.\nCorollary 6. vacsst(st) = sst.\nThe only proper refinement is created by applying conflict-free vacuity. Note that there exist AFs for which vacsst (cf) is a proper subset of vacadm (cf).\nOf course, whenever a stable extension exists, we have vacsst(cf) (F) = st(F). Apart from that, since the semi-stable ex-tensions are defined to minimize the number of arguments in their reduct, we also get the following.\nProposition 22. Let F = (A, R) be an AF. Then for every E \u2208vacadm(cf)(F) there exists an E' \u2208 vacsst(cf)(F) such that FE' is a restriction of FE.\nSo a cf-vacuous semi-stable extension exists iff a cf-vacuous ad-missible extension exists. The same holds in the case of naive se-mantics as the vacuity condition, since conflict-free vacuity and naive vacuity coincide.\nCorollary 7. Let F = (A, R) be an AF. Then vacsst(\u03c3)(F) = 0 iff vacadm(\u03c3) (F) = 0 for \u03c3\u2208 {cf, na}."}, {"title": "3.7 Conflict-freeness as base semantics", "content": "Vacuous reduct semantics have been introduced with weak seman-tics in mind, i. e. semantics with extensions that have attackers in their reduct. Usually, conditions are then given under which such an attacker can be ignored. By using conflict-free semantics instead of admissible semantics as the base condition, vacuous reduct seman-tics can realize this through different vacuity conditions and indeed, a number of weak semantics from the literature can be represented in this way [6].\n\u2022 vacct() has been introduced as the undisputed semantics [20] and is the same semantics for \u03c3\u2208 {adm, co, pr}\n\u2022 vacct(o) is the cogent stable semantics\u00b2 for \u03c3\u2208 {cf, na}\n\u2022 vacct(gr) is the ub-complete semantics 3\nLeft to discuss are stable, semi-stable and ideal semantics for the vacuity condition. First, note that vaccf (sst) is the undisputed se-mantics.\nProposition 23. vaccf(sst) = vaccf(adm)."}, {"title": "3.8 Naive semantics as base semantics", "content": "As it was the case with preferred semantics and admissible vacuity,conflict-free vacuity is enough to ensure naivety.\nProposition 25. vacna(\u03c3) = vaccf(\u03c3) for \u03c3\u2208 {cf, na}.\nFor the admissibility-based vacuity conditions on the other hand,naive semantics as the base condition can produce proper restrictionsof the corresponding vacuous reduct semantics with conflict-free se-mantics as base condition."}, {"title": "4 Principle-based Analysis", "content": "We begin our analysis with two standard principles, conflict-freeness and admissibility [21].\nPrinciple 1. An argumentation semantics o satisfies conflict-freeness if \u0395 \u0395 \u03c3(F) implies E \u2208 cf(F) for every F\u2208 UAF.\nPrinciple 2. An argumentation semantics o satisfies admissibility if \u0395\u0395 \u03c3(F) implies E \u2208 adm(F) for every F\u2208 UAF.\nIn the case of a vacuous reduct semantics vaco (T), the satisfaction of any of these two principles depends heavily on the choice of the base condition \u03c3.\nProposition 26. Let \u03c3,\u03c4 be argumentation semantics. If o satis-fies conflict-freeness (admissibility), the semantics vaco(T) satisfies conflict-freeness (admissibility)."}, {"title": "5 Discussion", "content": "Since its introduction [1], the principle-based approach has become the base for comparing argumentation semantics against each other. In particular, the works [5, 13, 14] compare their semantics based on weak admissibility against Dung's admissibility-based semantics using the principle-based approach. For better comparison with these recent works we chose both general principles from [21] as well as principles closer related to the behaviour of weak semantics [5, 7] for our analysis. The list of principles discussed here is not exhaustive, though, one may consult [12, 13] for more specific principles related to weak argumentation semantics.\nAs the number of new semantics yielded by applying the vacuous reduct scheme is quite large, we provide general criteria for prin-ciple satisfaction based on the two underlying semantics instead of discussing each semantics separately and only conduct an exemplary analysis for undisputed semantics. In a similar way, [7] focus on re-sults concerning principle satisfaction by refute-based semantics in general. While not discussed in the original work [2], another class of semantics with well-studied properties are SCC-recursive semantics [13], due to their common construction scheme of building exten-sions subsequently by walking through the strongly connected com-ponents of the AF. Building on these investigations, the guaranteed satisfaction of certain principles will become a considerable benefit of using general construction schemes for semantics, adding to other merits like easing recognizability and comparability of new propos-als. A promising future work direction is to link the existing schemes, allowing for an efficient treatment of closely related proposals like [18]."}, {"title": "6 Conclusion", "content": "We gave an overview on vacuous reduct semantics obtained by com-bining different admissibility-based and conflict-free semantics, in-cluding stable, semi-stable, ideal and naive semantics. We presented a principle-based analysis of vacuous reduct semantics in general and provided criteria for the inheritance of principle satisfaction by a vacuous reduct semantics from its base and vacuity condition for established, as well as recently introduced principles in the context of weak argumentation semantics. In particular, we discussed criteria for the existence of extensions for a given vacuous reduct semantics. We also conducted a principle-based analysis in the special case of undisputed semantics. Future work includes applying these results to the similar class of semantics proposed by [18] and introducing vac-uous reduct semantics to structured argumentation formalisms such as, e. g., assumption-based argumentation [22]."}, {"title": "A Omitted Proofs of Section 3", "content": "Proposition 2. Let \u03c3 be an argumentation semantics, then\nvaco(sst) = vaco (adm).\nProof. (2) Let E \u2208 vaco (adm) and assume to the contrary that\nsome E' \u2208 sst(FE), E' \u2260 \u00d8 exists. Then E' \u2208 adm(FE), but by\nthe vacuity condition adm(FE) = {0}. Contradiction.\n(C) Let \u0395 \u0395 vaco (sst) and assume to the contrary that some\nE' \u2208 adm(FE), E' \u2260 \u00d8 exists. Then there exists a nonempty\nsuperset E\" \u2208 pr(FE) of E' and for that a semi-stable extension\nE* \u2208 sst(FE), such that FEE\" \u2282 FEE*. Since E\" \u2260 \u00d8 it follows\nE* \u2260 0, but by the vacuity condition sst(FE) = {0}. Contradic-\ntion.\nCorollary 2. vacadm(sst) = vacadm(adm) = pr.\nProof. Follows from Prop. 2.\nProposition 4.\n1. pr adm co.\n2. id adm.\n3. There exist AF F = (A, R) such that\nadm(F) \u2260 {E \u2208 adm(F) | id(F) \u2286 E}.\nProof. (1) Let E\u2208 pr(F), then E\u2208 vacadm (adm) (F), so\nadm(FE) = {0}. But then id(FE) = {0}, because the ideal ex-\ntension is admissible, so E \u2208 vacadm (id) (F).\nFor the other relation suppose to the contrary that some E \u0395\nvacadm (id) (F) \\ co(F) exists. Such an E is admissible and at least\none argument a \u2208 \u0393(\u0395) \\ E defended by E is not in E (otherwise\nE would be complete). Since a\u00afCE, this argument is unattacked\nin FE, so gr(FE) [ {0}. Since the ideal extension of the reduct\nmust contain its grounded extension, it follows id(FE) \u00a3 {0}, so\nE vacadm (id) (F). Contradiction.\n(2) Suppose to the contrary E \u2208 id(F) and id(FE \u00a3 {0}, let\nE' be the nonempty ideal extension of FE. Then by modularization\nof the classic admissible semantics [5], EU E' is admissible. Let\nP be a preferred extension of F, then E is a subset of P, so P can\nbe written as EU P' for some P' \u2208 pr(FE), since P surely is\nconflict-free and can only be preferred if P' is preferred in FE (due\nto modularization). Since P' is preferred in FE, it contains E'. So\nany preferred extension P of F contains the admissible set EUE'.\nThis contradicts the maximality of the ideal extension E.\n(3) Consider the following example:\nProposition 5. adm(F) \u2260 for all F \u2208 UAF.\nProof. It always holds that adm(F) \u2260 0. There are two cases: If\nsome E \u2208 st(F) exists, then E \u2208 adm(F) and FE = (0,0),\nso E\u2208 vacadm(st)(F). If st(F) = \u00d8, then st(FE) = \u00d8 for any\nE\u2208 adm(F). To see this, suppose the contrary, let E\u2208 adm(F)\nand E' \u2208 st(FE). Then, since E is admissible, EUE' is admissible\ndue to Modularization and stable, because E' is stable in FE and E\nis stable in F\u2193EUE\u2020\u00b7 So EU E' \u2208 st(F). Contradiction.\nProposition 6. Let F = (A, R) be an AF. Then adm (F) =\nst(F) \u222a {E \u2208 adm(F) | \u2200E' \u2208 st(F): E [ E'}.\nProof. (C) The base condition gives us vacadm (st) (F) \nadm(F).\nIt is left to show there are no admissible E with proper sta-\nble supersets in vacadm (st). Suppose to the contrary some E\u2208\nvacadm (st) (F) exists with EC E' for some E' \u2208 st(F). For such\nan E it holds that E' \\ E \u2208 st(FE)(Suppose the contrary, then some\nargument a \u2208 FE\\(E'\\E\u222aE'+\\E+) exists. But then E' is not sta-\nble in F, since E does not attack arguments in FE. Contradiction.).\nBut then, since E is a proper subset of E', we have E' \\ E \u2260 0 and\ntherefore st(FE) \u2260 {0}. So E \u00a2 vacadm(st)(F). Contradiction.\n(2) Let E \u2208 st(F), then E \u2208 adm(F) and FE = (0, 0) has no\nnonempty stable extensions, so E \u2208 vacadm (st) (F). For the other\ncase suppose to the contrary E \u2208 {E \u2208 adm(F) | \u2200E' \u2208 st(F) :\nEE'} and some non-empty E' \u2208 st(FE) exists. Then, since\nE is at least admissible, EU E' is admissible in F due to modular-\nization and stable there, because E' is stable in FE and E is stable\nin F\u2193EUE\u2020\u00b7 So EU E' \u2208 st(F) is a proper stable superset of E.\nContradiction.\nCorollary 3. Let F = (A, R) be an AF. If st(F) = \u00d8, then\nadm(F) = adm(F).\nProof. Follows directly from Proposition 6.\nProposition 7.\n1. vacco(\u03c3) = pr for any \u03c3 \u2208 {adm, co, pr, sst}.\n2. vacco(gr) CO\nProof. 1. (C) Let \u0395 \u2208 vacco (\u03c3) (F), then E\u2208 vacadm (\u03c3) since\nthe vacuity conditions coincide and every complete extension is\nadmissible. By Propositions 3 and 2 follows that E \u2208 pr(F).\n(2) Let E \u2208 pr(F), then E\u2208 co(F) and E \u0395\u03c5\u03b1Cadm (\u03c3) (F)\nby [20], so \u0395 \u2208 vacco (\u03c3).\n2. (C) Analogously to the first case, if E \u2208 vacco (gr) (F) then\n\u0395\u2208 vacadm (gr) (F) = co(F), as shown in [6]. For (2) let\nE\u2208 co(F). Then E contains all arguments, which it defends,\nso FE does not contain any unattacked arguments, therefore\ngr(FE) = {0} and E \u2208 vacco (gr).\nCorollary 4. vacco (id) = vacadm(id) = adm.\nProof. Follows directly from Proposition 4.\nProposition 8. Let F = (A, R) be an AF. Then vacco(st)(F) =\nst(F) \u222a {E \u2208 co(F) | \u2200E' \u2208 st(F) : E Z E'}.\nProof. Analogously to the proof of Proposition 6, the considerations\nfor the vacuity condition apply in the same way.\nCorollary 5. vacco (st) vacadm(st).\nProof. Follows from Propositions 6, 8 and the fact that co(F) \u2286\nadm(F)."}, {"title": "B Omitted Proofs of Section 4", "content": "Proposition 26. Let \u03c3,\u03c4 be argumentation semantics. If o satis-\nfies conflict-freeness (admissibility), the semantics vaco(T) satisfies\nconflict-freeness (admissibility).\nProof. Follows directly from Definition 2, every \u0395 \u2208 vaco (\u03c4) (F)\nis a o-extension and thus conflict-free, analogously for admissibility.\nProposition 27. Let \u03c3, \u03c4 be argumentation semantics. If vaco (T) is\nconflict-free and o is context-free, then o is conflict-free.\nProof. Suppose to the contrary an E \u2208 \u03c3(F) exists for some AF\nF = (A, R), which is not conflict-free. Then E\u2208 \u03c3(FE), in which\ncase \u2286 {}, because FE contains no arguments. Therefore E \u2208\nvaco (\u03c4)(FE), so vaco (7) is not conflict-free.\nProposition 28. Let \u03c3, \u03c4 be argumentation semantics. If\n1. \u03c3 satisfies reinstatement OR\n2. \u03c3(F) cf(F) and a\u00af = \u00d8 implies a \u2208\nA, F = (A, R) an AF\nthen vaco (T) satisfies reinstatement.\nUE for any a \u2208\nEET(F)\nProof. 1. Follows from the subset-relation vaco(T)(F) \u2286 \u03c3(F).\n2. For any E \u2208 cf(F) it holds that \u0393(E) \\ E is the set of unattacked\narguments in FE, because the attackers of any such argument\nmust all be in E. So if 7 accepts unattacked arguments, then\nT(FE) [ {0} unless there are no unattacked arguments in FE"}]}