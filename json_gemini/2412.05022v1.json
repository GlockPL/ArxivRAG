{"title": "Get it right: Improving Comprehensibility with adaptable Speech Expression of a Humanoid Service Robot", "authors": ["Thomas Sievers", "Ralf M\u00f6ller"], "abstract": "As humanoid service robots are becoming more and more perceptible in public service settings for instance as a guide to welcome visitors or to explain a procedure to follow, it is desirable to improve the comprehensibility of complex issues for human customers and to adapt the level of difficulty of the information provided as well as the language used to individual requirements. This work examines a case study us-ing a humanoid social robot Pepper performing support for customers in a public service environment offering advice and information. An ap-plication architecture is proposed that improves the intelligibility of the information received by providing the possibility to translate this infor-mation into easy language and/or into another spoken language", "sections": [{"title": "1 INTRODUCTION", "content": "As self-service technologies (SSTs), which allow customers to access a service without interaction with service staff, become more common in public services, the use of service robots, which can physically replace a human service worker, offers the opportunity to increase the level and availability of customer service while reducing costs [1]. Especially in times of an increasing shortage of profes-sionals, the use of robots appears to be a practical way to relieve skilled workers. Moreover, in an unsettled world situation the requirements for dealing with peo-ple with a different cultural background and lack of language skills are increasing, especially for the authorities in public services. Therefore, it would be desirable that robots in this field are able to interact effectively with human clients across different cultural settings. These robots need social and cross-cultural skills to provide information and assistance in an adequate way. They should be able to respond to the client's linguistic and intellectual abilities.\nMost of the people surveyed in a study by TU Darmstadt on the robotization of office and service professions [2] would accept robots as counterpart in a variety of service environments. More than 80 per cent of respondents, however, prefer"}, {"title": "2 PRELIMINARIES", "content": "Especially in the public service, there is a need to facilitate access to important information. In Germany alone, more than 10 million people [12] (some speak of more than 17 million people [13]) require text in easily understandable language to access crucial information and successfully manage their daily lives. There are many different names and designations for easy language: Easy language, simple language, easily understandable language, barrier-free information and commu-nication [14]. Easy language is defined as a language style with simpler sentence structure and additional explanations. The target group that can benefit from texts in easy language include people with learning difficulties, little knowledge of administrative language, reading difficulties, older people or people suffering from dementia, as well as people learning the official language as a second lan-guage. This results in the need to provide as much information as possible in easy language.\nIn order to avoid misunderstandings, it would also be a great advantage if the relevant content were offered in a language that the client understands well. This would usually be the client's mother tongue. Clients who turn to public services have a specific problem they want to solve and often do not know how to achieve the desired result. They are therefore in a state of uncertainty. In this state of mind, it is very easy to get upset when things are not going in the right direction, and then misunderstandings, angry reactions, and agitation often occur. To avoid this, it is better to communicate with clients in their own language because they can express themselves more easily, important bits of information won't get lost in translation and the client's anxiety of speaking another language is removed. If clients or customers are upset, they might not want the extra mental effort of communicating in a second language. As multicultural expert Michael Soon Lee states \"Even if you only have a basic command of the customer's native language, it may take longer to get your point across, but the customer is much more likely to be receptive and understanding\" [15].\nThe eGovernment MONITOR 2022 [16] shows that only 54 percent of the population in Germany uses eGovernment services at all. More than half of all citizens still use services for which they have a need in analog form (57 percent). Lack of knowledge of online availability is the central reason for the digital usage gap for many services. Under these circumstances, it cannot be assumed that advance information and preparation for a visit to a public authority with regard to necessary documents, requirements, etc. is always optimal. This is probably even more true for people with a migration background.\nMisunderstandings, ignorance, and lack of understanding on the part of cliens can also create stress for public service staff to deal with. Therefore, conflicts cannot be ruled out and a friendly and approachable interaction with each other is sometimes difficult. Despite its human-like appearance, the Pepper robot re-"}, {"title": "3 RELATED WORK", "content": "We have not found many implementations for the use of easy language or trans-lation by a humanoid robot to improve the comprehensibility of information for human counterparts. In particular, the use of easy language does not seem to have been the subject of research related to humanoid robots so far. A robot-bound speech-to-speech translation system is proposed in the domain of medical care as a one-way translation designed to help English speaking patients describe their symptoms to Korean doctors or nurses [17]. The use of a social robot to teach vocabulary to Turkish-Dutch children and the extent to which a bilin-gual robot or a monolingual robot promotes word learning is investigated by Leeuwestein et al. [18]. Santano [19] shows how to provide Pepper with translat-ing capabilities using Google's ML Kit Translation API [20]. This works in offline mode as on-device translation and is intended for casual and simple translations only as it does not offer the same quality as Google's Cloud Translation API.\nMeaningful and communicative robot actions expressed through body lan-guage interpretable by humans offer a further channel of communication with measurable effects on the interaction [21]. This implicit communication through movement has the potential to increase efficiency in collaborative tasks between robots and humans and is therefore very promising in terms of social interaction.\nA reference framework adding intelligibility to the behavior of a robotic sys-tem for improvement of predictability, trust, safety, usability, and acceptance of autonomous robotic systems is proposed by van Deurzen et al. [22]. It comprises an interactive, online, and visual dashboard to help identify where and when adding intelligibility to the interface design is required so that developers and designers can customise the interactions to improve the experience for people working with the robot.\nThese approaches help to improve communication between humans and robots, or between humans with the help of robots, without simplifying the complexity of the language or the representation of the information itself. However, in such simplification lies a key to better understanding."}, {"title": "4 HUMANOID ROBOT PEPPER", "content": "The social humanoid robot Pepper [23] as seen in Figure 1 was developed by Aldebaran and first released in 2015. The robot is 120 centimeters tall and opti-mized for human interaction. It is able to engage with people through conversa-tion, gestures and its touch screen. Pepper is equipped with internal sensors, four directional microphones in his head and speakers for voice output. The robot is able to process images from its 3D camera and two HD cameras by shape recog-nition software for identification of faces and objects so that it can focus on, identify, and recognize people. Speech recognition and dialogue is available in 15 languages. Beyond, Pepper can perceive basic human emotions.\nThe robot features an open and fully programmable platform so that de-velopers can program their own applications to run on Pepper using software development kits (SDKs) for programming languages like C++, Python or Java respectively Kotlin. This approach allows the development of robot applications for a wide variety of scenarios in a development environment familiar to most developers.\nOn Pepper's chest a tablet is located presenting a screen resolution of 1280 by 800 pixels. This tablet, which runs Google's Android system, can be equipped with applications to create interaction between the robot and a human user via a straightforward application programming interface (API). There is a Pepper SDK [24], which is an Android Studio plug-in and provides a set of graphical tools and a Java library when using Android Studio as an integrated development environment (IDE). The Pepper SDK contains an emulator for the tablet and a robot viewer that shows, among other things, a dialogue view with which the robot's speaking actions can be tested without needing the real robot.\nSince research has generally shown that trust is the basis for successful com-munication tasks and trust in robots is increased by anthropomorphism, a hu-manoid social robot like Pepper is a good choice for service delivery in inter-action with customers. A human face, the possibility of human-like expressions and body language, the use of voice and a name of its own are seen as beneficial for the trust of customers in the robot [25]."}, {"title": "5 CASE STUDY", "content": "Our case study relates to the scenario of a customer centre of a public service au-thority, where many people regularly pursue different concerns such as applying for identity cards, residence permits or work permits. Official procedures usually require knowledge about necessary requirements, documents needed, etc. Many procedures also require explanation for people who rarely have to deal with them, especially if they have a limited understanding of the language and/or belong to a different cultural group with different experiences and background. This can easily lead to uncertainties and tense situations that make it difficult to process the respective case together with the case worker in a stress-free and relaxed manner. Furthermore, it is unfavourable if, for example, the lack of prerequisites"}, {"title": "6 APPLICATION ARCHITECTURE", "content": "We developed our exemplary application to achieve this goal using Android Stu-dio and the programming language Kotlin. We use the Pepper SDK for Android [24] which allows the robot to be controlled from our Android application on its tablet with existing functionalities of Pepper's operating system for focusing upon a person, listening, talking and chatting as well as movements of head and arm to underline what is said with appropriate movements. Every output the robot performs by voice is also displayed on its tablet for the purpose of redundancy serving those with hearing impairment. The tablet serves as a user interface showing the obtained information and offering the possibility to make a selection for easy language or translation as can be seen in Figure 2. This selec-tion can also be made by voice using a phrase containing predefined key words like \"easy language\" or \"translation\". A blue speech bar on the tablet indicates listening and an animation is shown when Pepper is receiving and processing information.\nAs a knowledge base in our case study for the case-specific complex expert knowledge that the robot should be able to provide information about, we use data from a MySQL database hosted on a web server with a self-programmed application programming interfaces (API) that returns text answers in JSON (JavaScript Object Notation) format. This API transmits a term or phrase that the robot has heard and recognised to the server via Wi-Fi connection. A PHP script running on the web server then returns a corresponding response from"}, {"title": "6.1 Application Structure", "content": "The Android application with its Main Activity acts as a scaffold and control unit for the basic proceedings. It contains the program routines necessary for the usage of native robot resources like listening and talking and subroutines for calling the APIs as illustrated in Figure 3. A subroutine for asking a customer after 10 seconds idling if the service robot could help with another topic is also implemented."}, {"title": "6.2 Listen & Say or Chat", "content": "Our first approach was to use the Pepper-specific Listen and Say functionalities [29] [30] to realise a dialogue between robot and customer. The Pepper robot is able to react to words or phrases provided in the program code of the application. Real speech recognition in a general sense is not possible with Pepper's native abilities but the robot is able to spot a word or phrase known to him while listening. Our application contains the necessary vocabulary for the words and phrases that the robot should understand, divided into different phrases for different topics. These topics refer to the knowledge base stored in our database. For every topic we provide a set of words or phrases serving as keywords for the retrieval of the related information. Positively understood words or phrases are forwarded to a subroutine that processes the first API call to the knowledge base.\nIn a second approach, we used Pepper's Chat feature [31] to conduct the dialogue. This was found to bring a significant improvement in terms of spoken language recognition. Using Listen action the word or phrase of the topic is mostly only understood if it is said apart from the context of other words or a sentence. With the Chat function, individual words and short sentences of a topic are usually understood even if they are spoken as part of a longer sentence. Also a more natural flow of dialogue is possible using the Chat feature due to the flexible possibilities of using variables or randomly selected sentence components in the robot's responses as can be seen in Figure 4."}, {"title": "6.3 Animation", "content": "The use of robot animation depending on a specific context is also possible with Pepper. Predefined animations can be easily integrated depending on different events of the dialogue to enhance anthropomorphism and intelligibility through the indirect effect of body language. Creating your own animations would also be possible. In our case study, we have limited the use of animations to existing ones in the Pepper SDK for demonstration purposes. We have defined groups of ap-propriate animations, from which a randomly selected one is executed at certain points of the interaction, e.g., at the greeting, in response to a question from the human, when the robot asks a question, and so on. These animations support the interaction with the customers as they underline statements of the robot. However, due to the abstraction of the robot's form, the degree of reality of this non-verbal behaviour never reaches a level that would have a negative impact on the acceptance of the robot's behaviour with regard to the uncanny valley effect [32]."}, {"title": "7 CONCLUSIONS", "content": "With this paper we propose a method to improve the comprehensibility of com-plex official information for human customers by adapting the level of content-related difficulties. We suggest that such content, when a customer asks for it, be automatically translated into easy language or a foreign language by a humanoid social robot. Our case study involves a customer-facing government agency where a Pepper robot does just that.\nWorkshops we did together with public service staff show that such features are seen as useful and that one can well imagine the use of such a robot in suitable public authorities. The use of the aforementioned functional APIs via an internet connection proves to be possible without any problems and without unreasonably long response times. An integration of external services via API into applications using the Pepper SDK in Android Studio is quite possible for experienced Android developers. Additional knowledge about the inner workings of the connected services is not required, which is particularly advantageous when integrating complex AI technologies and simplifies application development for such technologies. This approach is not limited to a specific robot model, but can be realised as an API connection for various models.\nIn future work, we hope to further improve the robot's capabilities in dialogue with human customers and make it less prone to errors. Using language models such as Generative Pre-trained Transformer 3 (GPT-3) or more recent versions"}]}