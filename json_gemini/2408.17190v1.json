{"title": "REASONING WITH MAXIMAL CONSISTENT SIGNATURES", "authors": ["Matthias Thimm", "Jandson S. Ribeiro"], "abstract": "We analyse a specific instance of the general approach of reasoning based on forgetting by Lang and Marquis [11, 12]. More precisely, we discuss an approach for reasoning with inconsistent information using maximal consistent subsignatures, where a maximal consistent subsignature is a maximal set of propositions such that forgetting the remaining propositions restores consistency. We analyse maximal consistent subsignatures and the corresponding minimal inconsistent subsignatures in-depth and show, among others, that the hitting set duality applies for them as well. We further analyse inference relations based on maximal consistent subsignatures wrt. rationality postulates from non-monotonic reasoning and computational complexity. We also consider the relationship of our approach with inconsistency measurement and paraconsistent reasoning.", "sections": [{"title": "Introduction", "content": "Reasoning with inconsistent information is a central issue for approaches to knowledge representation and reasoning [18, 6, 2, 11, 12, 1, 9, 14]. A classical, yet simple, approach to reasoning with inconsistency is reasoning with maximal consistent subsets [18, 9]. Given a (possibly inconsistent) knowledge base \\(K\\) consisting of (propositional) formulas, a maximal consistent subset \\(K'\\) is a set \\(K' \\subseteq K\\) that is consistent and every set \\(K''\\) with \\(K' \\subseteq K'' \\subseteq K\\) is inconsistent (we will give formal definitions in Section 2). We can then define a simple inconsistency-tolerant inference operator \\(\\models_{mc}\\) on possibly inconsistent knowledge bases \\(K\\) via \\(K \\models_{mc} a\\) iff \\(K' \\models a\\) for all maximal consistent subsets \\(K'\\) of \\(K\\) (where \\(\\models\\) is classical entailment). This inference operator has many good properties, in particular it coincides with classical entailment in the case of consistency. However, reasoning with maximal consistent subsets is highly syntax-dependent. In particular, it holds \\(\\{a, \\neg a, c\\} \\models_{mc} c\\) but \\(\\{a, \\neg a \\wedge c\\} \\not\\models_{mc} c\\).\nIn this work, we define and analyse a new approach to reason with maximal consistency, but defined in terms of sub-signatures rather than subsets of the knowledge base. More precisely, we define a maximal consistent subsignature as a maximal set of propositions, such that forgetting\u00b9 [13, 21] the remaining propositions from the knowledge base makes it consistent again. This approach is a specific instance of the more general framework of Lang and Marquis [11, 12], who discuss inconsistency-tolerant reasoning under a wide variety of different strategies to forget propositions. However, the approach we will discuss has not been analysed explicitly nor are any of our results subsumed by the results of Lang and Marquis. Nonetheless, by considering both the notion of maximal consistent subsignatures and its counterpart, the minimal inconsistent subsignatures, we obtain a technical framework that is quite similar to the framework of maximal consistent subsets and minimal inconsistent subsets, but also features some additional interesting properties. We show that the classical hitting set duality [17] carries over to maximal consistent subsignatures as well, i. e., one can obtain maximal consistent subsignatures by removing a minimal hitting set of all minimal inconsistent subsignature, and vice versa. Furthermore, we show that inference relations based on maximal consistent"}, {"title": "Preliminaries", "content": "Let \\(At\\) be some fixed propositional signature, i. e., a (possibly infinite) set of propositions, and let \\(L(At)\\) be the corresponding propositional language constructed using the usual connectives \\(\\wedge\\) (conjunction), \\(\\vee\\) (disjunction), \\(\\rightarrow\\) (implication), and \\(\\neg\\) (negation).\nDefinition 1. A knowledge base \\(K\\) is a finite set of formulas \\(K \\subseteq L(At)\\). Let \\(\\mathcal{K}\\) be the set of all knowledge bases.\nIf \\(\\Phi\\) is a formula or a set of formulas we write \\(At(\\Phi)\\) to denote the set of propositions appearing in \\(\\Phi\\). For a set \\(\\Phi = \\{\\phi_1, ..., \\phi_n\\}\\) let \\(\\bigwedge \\Phi = \\phi_1 \\wedge ... \\wedge \\phi_n\\) and \\(\\neg\\Phi = \\{\\neg\\phi \\mid \\phi \\in \\Phi\\}\\).\nSemantics to a propositional language are given by interpretations where an interpretation \\(w\\) on \\(At\\) is a function \\(w : At \\rightarrow \\{\\text{true}, \\text{false}\\}\\). Let \\(\\Omega(At)\\) denote the set of all interpretations for \\(At\\) (with the convention that \\(w(\\top) = \\text{true}\\) and \\(w(\\bot) = \\text{false}\\)). An interpretation \\(w\\) satisfies (or is a model of) an atom \\(a \\in At\\), denoted by \\(w \\models a\\), if and only if \\(w(a) = \\text{true}\\). The satisfaction relation \\(\\models\\) is extended to formulas in the usual way. For \\(\\Phi \\subseteq L(At)\\) we also define \\(w \\models \\Phi\\) if and only if \\(w \\models \\phi\\) for every \\(\\phi \\in \\Phi\\).\nIn the following, let \\(\\Phi, \\Phi_1, \\Phi_2\\) be formulas or sets of formulas. Define the set of models \\(Mod(\\Phi) = \\{\\omega \\in \\Omega(At) \\mid w \\models \\Phi\\}\\). We write \\(\\Phi_1 \\models \\Phi_2\\) if \\(Mod(\\Phi_1) \\subseteq Mod(\\Phi_2)\\). \\(\\Phi_1, \\Phi_2\\) are equivalent, denoted by \\(\\Phi_1 \\equiv \\Phi_2\\), if and only if \\(Mod(\\Phi_1) = Mod(\\Phi_2)\\). Two sets \\(\\Phi_1, \\Phi_2\\) are element-wise equivalent, denoted by \\(\\Phi_1 \\cong \\Phi_2\\) iff there are functions \\(p_1 : \\Phi_1 \\rightarrow \\Phi_2\\) with \\(\\phi \\equiv p_1(\\phi)\\) for all \\(\\phi \\in \\Phi_1\\) and \\(p_2 : \\Phi_2 \\rightarrow \\Phi_1\\) with \\(\\phi \\equiv p_2(\\phi)\\) for all \\(\\phi \\in \\Phi_2\\). If \\(Mod(\\Phi) = \\emptyset\\) we also write \\(\\Phi \\models \\bot\\) and say that \\(\\Phi\\) is inconsistent (or unsatisfiable).\nFor a knowledge base \\(K\\), a set \\(K' \\subseteq K\\) is a minimal inconsistent subset of \\(K\\) iff \\(K' \\models \\bot\\) and for all \\(K'' \\subset K'\\), \\(K'' \\not\\models \\bot\\). A set \\(K' \\subseteq K\\) is a maximal consistent subset of \\(K\\) iff \\(K' \\not\\models \\bot\\) and for all \\(K''\\) with \\(K' \\subseteq K'' \\subseteq K\\), \\(K'' \\models \\bot\\). Let \\(MIS(K)\\) and \\(MCS(K)\\) denote the set of all minimal inconsistent subsets and the set of all maximal consistent subsets, respectively. A classical approach for reasoning with inconsistent knowledge bases is via reasoning with maximal consistent subsets [18]. For a knowledge base \\(K\\) and a formula \\(a\\), define \\(K \\models_{mc} a\\) iff \\(K' \\models a\\) for all \\(K' \\in MCS(K)\\) (inevitable consequences). For a knowledge base \\(K\\) and a formula \\(a\\), define \\(K \\models^{mc} a\\) iff \\(K' \\models a\\) for some \\(K' \\in MCS(K)\\) (weak consequences)."}, {"title": "Forgetting and Projecting", "content": "A forgetting operator is an operator that removes a given set of propositions from a signature of the knowledge base. Its initial motivation [13] was to be able to remove irrelevant parts of a knowledge base, while retaining previous\nDefinition 2. A forgetting operator \\(\\textcircled{\u0414}\\) is any function \\(\\textcircled{\u0414} : 2^{L(At)} \\times 2^{At} \\rightarrow 2^{L(At)}\\) with\u00b2\n1. \\(At(K \\textcircled{\u0414} S) \\subseteq At(K)\\),\n2. \\(At(K \\textcircled{\u0414} S) \\cap S = \\emptyset\\),\n3. \\(K \\textcircled{\u0414} \\emptyset = K\\),\n4. \\((K \\textcircled{\u0414} a) \\textcircled{\u0414} b \\equiv (K \\textcircled{\u0414} b) \\textcircled{\u0414} a\\) and\n5. if \\(K\\) is consistent then \\(K \\textcircled{\u0414} S\\) is consistent\nfor every knowledge base \\(K, a, b \\in At(K)\\), and \\(S \\subseteq At(K)\\).\nIn other words, given a knowledge base \\(K\\) and some set of propositions \\(S \\subseteq At(K)\\) mentioned in \\(K\\), the forgetting \\(K' = K \\textcircled{\u0414} S\\) is a knowledge base that does not mention any proposition in \\(S\\) anymore (and no further propositions are added). Conditions 3\u20135 model some further requirements to avoid artificial operators. Condition 3 states that forgetting the empty set does not syntactically alter the knowledge base. Condition 4 ensures that the order of forgetting does not change the result (up to semantical equivalence on the formula level). Note that it easily follows by induction that\n\\((... ((K \\textcircled{\u0414} a_1) \\textcircled{\u0414} a_2)... \\textcircled{\u0414} a_n)\\)\n\\(\\equiv\\)\n\\((...((K \\textcircled{\u0414} a_{\\pi(1)}) \\textcircled{\u0414} a_{\\pi(2)})... \\textcircled{\u0414} a_{\\pi(n)})\\)\nfor any permutation \\(\\pi : \\{1,...,n\\} \\rightarrow \\{1,...,n\\}\\). Condition 5 states that forgetting something from a consistent knowledge base does not introduce inconsistency. Note that the above definition does not contain any requirements on preservation of inferences under forgetting, as usually required by forgetting operators (such as \\(K \\models a\\) with \\(At(a) \\cap S = \\emptyset\\) should require \\(K \\textcircled{\u0414} S \\models a\\)). We avoid such requirements on purpose (apart from the simple cases defined in items 3\u20135 of Definition 2), since we will mainly be dealing with inconsistent knowledge bases, for which (classical) inference trivialises.\nThe canonical forgetting operation is the variable elimination operation [13], which we will also consider here in a slightly different manner. For that, let \\(\\phi[\\psi \\rightarrow \\psi']\\) denote the propositional formula that is obtained from \\(\\phi\\) by simultaneously replacing each occurrence of \\(\\psi\\) in \\(\\phi\\) by \\(\\psi'.\nDefinition 3. For a formula \\(\\phi\\) and some \\(a \\in At(\\phi)\\) define\n\\(\\phi \\textcircled{\u0414}_{ve} a = \\phi[a \\rightarrow \\top] \\vee \\phi[a \\rightarrow \\bot]\\)\nFor \\(S \\subseteq At(\\phi)\\) with \\(S = \\{a_1, ..., a_k\\}\\) define\u00b3\n\\(\\phi \\textcircled{\u0414}_{ve} S = (... ((\\phi \\textcircled{\u0414}_{ve} a_1) \\textcircled{\u0414}_{ve} a_2) \\textcircled{\u0414}_{ve} ... \\textcircled{\u0414}_{ve} a_k)\\)\nand \\(\\phi \\textcircled{\u0414}_{ve} (\\emptyset) = \\phi\\). For a knowledge base \\(K = \\{\\phi_1,..., \\phi_n\\}\\) write\n\\(K \\textcircled{\u0414}_{ve} S = \\{\\phi_1 \\textcircled{\u0414}_{ve} (S \\cap At(\\phi_1)), ..., \\phi_n \\textcircled{\u0414}_{ve} (S \\cap At(\\phi_n))\\}\\)\nNote that the above definition of variable elimination on knowledge bases \\(K \\textcircled{\u0414}_{ve} S\\) is formula-wise, i. e., any particular proposition \\(a \\in S\\) is eliminated separately in each formula (instead of first taking the conjunction of all formulas in \\(K\\) and the eliminating the proposition on this conjunction, which is usually the standard definition). This allows this variant of variable elimination to restore consistency, since propositions in different formulas may be substituted differently."}, {"title": "Minimal inconsistent and maximal consistent subsignatures", "content": "The notion of projection allows us to define analogues to the concepts of minimally inconsistent subsets and maximally consistent subsets of a knowledge base \\(K\\), based on a more semantical perspective. In general, we say that a set \\(S \\subseteq At(K)\\) is a consistent subsignature (wrt. \\(\\textcircled{\u0414}\\)) iff \\(K \\textcircled{\u0414} S\\) is consistent, otherwise it is called an inconsistent subsignature.\nDefinition 6. Let \\(K\\) be a knowledge base and \\(\\textcircled{\u0414}\\) a forgetting operator.\n1. \\(S \\subseteq At(K)\\) is called a minimal inconsistent subsignature of \\(K\\) (wrt. \\(\\textcircled{\u0414}\\)) if\n(a) \\(K \\textcircled{\u0414} S \\models \\bot\\) and\n(b) for all \\(S' \\subset S\\), \\(K \\textcircled{\u0414} S' \\not\\models \\bot\\).\n2. \\(S \\subseteq At(K)\\) is called a maximal consistent subsignature of \\(K\\) (wrt. \\(\\textcircled{\u0414}\\)) if\n(a) \\(K \\textcircled{\u0414} S \\not\\models \\bot\\) and\n(b) for all \\(S'\\) with \\(S \\subseteq S' \\subseteq At(K)\\), \\(K \\textcircled{\u0414} S' \\models \\bot\\).\nLet \\(MISig^{\\textcircled{\u0414}}(K)\\) and \\(MCSig^{\\textcircled{\u0414}}(K)\\) denote the set of all minimal inconsistent subsignatures (wrt. \\(\\textcircled{\u0414}\\)) and the set of all maximal consistent subsignatures (wrt. \\(\\textcircled{\u0414}\\)), respectively."}, {"title": "Reasoning with maximal consistent subsignatures", "content": "As mentioned before, reasoning with maximal consistent subsets of a knowledge bases is a classical approach to reasoning with inconsistent knowledge bases [18, 9]. Using our framework of maximal consistent subsignatures, we can define an analogous approach as follows.\nDefinition 7. Let \\(\\textcircled{\u0414}\\) be a forgetting operation and \\(K\\) a knowledge base. Define the set \\(MCKB^{\\textcircled{\u0414}}(K)\\) via\n\\[MCKB^{\\textcircled{\u0414}}(K) = \\{K \\textcircled{\u0414} S \\mid S \\in MCSig^{\\textcircled{\u0414}}(K)\\}\\]\nIn other words, \\(MCKB^{\\textcircled{\u0414}}(K)\\) is the set of all knowledge bases projected on maximal consistent subsignatures of \\(K\\).\nSome straightforward observations are as follows.\nProposition 8. Let \\(\\textcircled{\u0414}\\) be a forgetting operation and \\(K\\) a knowledge base.\n1. \\(K\\) is consistent iff \\(MCKB^{\\textcircled{\u0414}}(K) = \\{K\\}\\)\n2. \\(MCKB^{\\textcircled{\u0414}}(K) \\neq \\emptyset\\) iff there is no \\(\\phi \\in K\\) with \\(\\phi \\models \\bot\\).\n3. \\(MCKB^{\\textcircled{\u0414}}(K) \\neq \\bot\\).\nProof.\n1. Assume \\(K\\) is consistent. Due to item 3 of Definition 2 it follows that \\(K \\textcircled{\u0414} \\emptyset = K\\) is consistent. Furthermore, \\(At(K)\\) is the only maximal consistent subsignature of \\(K\\) and therefore \\(K \\textcircled{\u0414} At(K) = K \\textcircled{\u0414} (At(K) \\backslash At(K) = K \\textcircled{\u0414} \\emptyset = K\\) and therefore \\(MCKB^{\\textcircled{\u0414}}(K) = \\{K\\}\\). The other direction is analogous.\n2. This follows from item 2 of Proposition 5.\n3. This follows from item 3 of Proposition 5.\nFollowing [18], we can define inference relations \\(\\models^{\\textcircled{\u0414}}_i\\) (inevitable consequences) and \\(\\models^{\\textcircled{\u0414}}_w\\) (weak consequences) via\n\\[\\begin{array}{ll}\nK \\models^{\\textcircled{\u0414}}_i a & \\text{ iff } K' \\models a \\text{ for all } K' \\in MCKB^{\\textcircled{\u0414}}(K)\\\\\nK \\models^{\\textcircled{\u0414}}_w a & \\text{ iff } K' \\models a \\text{ for some } K' \\in MCKB^{\\textcircled{\u0414}}(K)\n\\end{array}\\]\nfor all knowledge bases \\(K\\) and formulas \\(a\\)."}, {"title": "Computational complexity", "content": "We assume familiarity with the standard complexity classes NP and coNP, see [15] for an introduction. We also require knowledge of the complexity class DP, which is defined as \\(DP = \\{L_1 \\cap L_2 \\mid L_1 \\in NP, L_2 \\in coNP\\}\\), i. e., the class of problems that are the intersection of a problem in NP and a problem in coNP. We also use complexity classes of the polynomial hierarchy that can be defined (using oracle machines) via \\(\\Sigma_1^P = NP\\), \\(\\Pi_1^P = coNP\\) and\n\\[\\Sigma_{i+1}^P = NP^{\\Sigma_i^P} \\qquad \\Pi_{i+1}^P = coNP^{\\Sigma_i^P}\\]\nfor all \\(i > 1\\), where \\(C^D\\) denotes the class of decision problems solvable in class \\(C\\) with access to an oracle that can solve problems that are complete for \\(D\\).\nComplexity results for the concrete forgetting operators \\(\\textcircled{\u0414}_{ve}\\) and \\(\\textcircled{\u0414}_{na}\\) regarding some basic decision problems are as follows. The proof of the following theorem and the remaining technical results from this section can be found in the supplementary material.\nTheorem 2. Let \\(\\textcircled{\u0414} \\in \\{\\textcircled{\u0414}_{ve}, \\textcircled{\u0414}_{na}\\}\\), \\(K\\) be a knowledge base, and \\(S \\subseteq At(K)\\).\n1. Deciding whether \\(S\\) is a consistent subsignature of \\(K\\) wrt. \\(\\textcircled{\u0414}\\) is NP-complete.\n2. Deciding whether \\(S\\) is a minimally inconsistent subsignature wrt. \\(\\textcircled{\u0414}\\) is DP-complete.\n3. Deciding whether \\(S\\) is a maximally consistent subsignature wrt. \\(\\textcircled{\u0414}\\) is DP-complete.\nProof. We first consider the case of \\(\\textcircled{\u0414} = \\textcircled{\u0414}_{ve}\\). Let \\(K\\) be a knowledge base and \\(S = \\{a_1,...,a_n\\} \\subseteq At(K)\\). Let \\(S = At(K) \\backslash S = \\{b_1,...,b_m\\}\\).\n1. Let \\(\\phi \\in K\\). First, observe that computing \\(\\phi \\textcircled{\u0414}_{ve} S\\) directly leads to an exponential blow-up in the size of \\(\\phi\\). More precisely, \\(\\phi \\textcircled{\u0414}_{ve} S\\) is of the form\n\\[\\phi \\textcircled{\u0414}_{ve} S = \\bigvee_{x_1,...,x_m \\in \\{\\top,\\bot\\}} \\phi[b_1 \\rightarrow x_1]... [b_m \\rightarrow x_m]\\]\nHowever, in order to satisfy \\(\\phi \\textcircled{\u0414}_{ve} S\\) by an interpretation \\(\\omega : S \\rightarrow \\{\\text{true}, \\text{false}\\}\\), only one of the disjuncts of the above form has to be satisfied. In order to do that, we require a single assignment of \\(\\top, \\bot\\) to the propositions \\(b_1, ..., b_m\\). So, we guess (in a non-deterministic step) for each formula \\(\\phi \\in K\\) an interpretation \\(\\omega_{\\phi} : At(K) \\rightarrow \\{\\text{true}, \\text{false}\\}\\) such that \\(\\omega_{\\phi}(a) = \\omega_{\\phi'}(a)\\) for all \\(a \\in S\\) and \\(\\phi, \\phi' \\in K\\) (equivalently, each \\(\\omega_{\\phi}\\) provides an individual assignment of \\(\\top, \\bot\\) to the propositions in \\(S\\)). Then we verify (in polynomial time) whether each \\(\\omega_{\\phi}\\) satisfies \\(\\phi\\). If this is the case, \\(S\\) is a consistent subsignature. This shows NP-membership.\nFor NP-hardness, we reduce the problem of checking whether a propositional formula \\(\\phi\\) is consistent to our problem. In fact, observe that this problem is equivalent to checking whether \\(At(\\phi)\\) is a consistent subsignature of \\(\\{\\phi\\}\\).\n2. For DP-membership, observe that deciding whether \\(S\\) is a minimally inconsistent subsignature has two sub-tasks:\n(a) Deciding whether \\(S\\) is an inconsistent subsignature and\n(b) Deciding whether each \\(S \\backslash \\{a\\}\\) is a consistent subsignature (for each \\(a \\in S\\)).\nProblem (a) is coNP-complete (follows directly from 1.). For problem (b), we can adapt the NP-membership proof of 1 by guessing not one \\(\\omega_{\\phi}\\) per formula \\(\\phi\\), but \\(|S|\\) different ones, one for each subsignature \\(S \\backslash \\{a\\}\\). This only requires polynomially more effort and the problem stays in NP (and the NP-hardness proof remains the same since checking only one signature is a special case). So (b) is NP-complete, which shows that the overall problem is in DP.\nFor DP-hardness, we reduce the problem of checking whether for a pair of formulas \\((\\phi, \\psi)\\) it is the case that \\(\\phi\\) is consistent and \\(\\psi\\) is inconsistent. Let a be a new proposition such that a \\(\\notin At(\\phi) \\cup At(\\psi)\\). We claim that \\(\\phi\\) is consistent and \\(\\psi\\) is inconsistent iff \\(\\{a\\}\\) is a minimally inconsistent subsignature of\n\\[K_{\\phi,\\psi} = \\{\\phi \\Rightarrow a, \\neg\\psi \\Rightarrow \\neg a\\}\\]"}, {"title": "Relation to paraconsistent reasoning", "content": "We briefly recall Priest's 3-valued logic for paraconsistent reasoning [16]. A three-valued interpretation \\(v\\) on \\(At\\) is a function \\(v : At \\rightarrow \\{\\text{T}, \\text{F}, \\text{B}\\}\\) where the values T and F correspond to the classical true and false, respectively. The additional truth value B stands for both and is meant to represent a conflicting truth value for a proposition. The function \\(v\\) is extended to arbitrary formulas as shown in Table 1. An interpretation \\(v\\) satisfies a formula \\(a\\) (or is a 3-valued model of that formula), denoted by \\(v \\models_3 a\\) if either \\(v(a) = \\text{T}\\) or \\(v(a) = \\text{B}\\). Define \\(v \\models_3 K\\) for a knowledge base \\(K\\) accordingly. Let \\(Mod^3(K)\\) denote the set of all 3-valued models of \\(K\\). Note that the interpretation \\(v_0\\) defined via \\(v_0(a) = \\text{B}\\) for all \\(a \\in At\\) is a model of every formula, so it makes sense to consider minimal models wrt. the usage of the paraconsistent truth value B. A model \\(v\\) of a knowledge base \\(K\\) is a minimal model of \\(K\\) if it is a model and there is no other model \\(v'\\) of \\(K\\) with \\((v')^{-1}(\\text{B}) \\subseteq (v)^{-1}(\\text{B})\\). Let \\(MinMod^3(K)\\) denote the set of minimal models of \\(K\\)."}, {"title": "Summary and conclusion", "content": "We considered an approach to inconsistency-tolerant reasoning based on forgetting parts of the signature such that the remaining knowledge base is consistent. In particular, we considered the notions of minimal inconsistent and maximal consistent subsignatures as analogons to minimal inconsistent and maximal consistent subsets. Structurally, minimal inconsistent and maximal consistent subsignatures behave similarly as their subset-based counterparts, in particular, we showed that the hitting set duality is also satisfied by those notions. The induced reasoning relations behave well with respect to a series of desirable properties from non-monotonic reasoning, but are not as syntax-dependent as their subset-based counterparts. Finally, we also investigated relationships to inconsistency measurement and paraconsistent reasoning.\nAs mentioned before, our framework can be seen as an instance of the more general framework of Lang and Marquis [11, 12], who broadly investigate the approach of restoring consistency through forgetting. However, the notions of minimal inconsistent and maximal consistent subsignatures are new to our work, as are the induced inference relations. Further related works are by Besnard et al. [3, 4], who substitute every occurrence of a proposition with a new proposition and use default rules to enforce the identification of these different instances to a maximum degree. Although the technical approach is different to ours, there are some conceptual similarities that we will investigate in more depth for future work.\nA further possible venue for future work is to develop signature-based variants of reasoning methods based on maximal consistent subsets other than the classical approach of Rescher and Manor [18]. For example, Konieczny et al. [9] propose inference relations that only consider some of the maximal consistent subsets of a knowledge base, where the consideration of maximal consistent subsets is determined by a scoring function. Adapting those scoring functions for maximal consistent subsignatures will therefore give rise to further inference relations. Moreover, the reasoning approach of Brewka [5], who considers stratified knowledge bases\u2014i. e. knowledge bases where formulas are ranked according to their preference\u2014, can also be cast into our framework by considering stratified signatures."}]}