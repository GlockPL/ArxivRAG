{"title": "High-Precision, Fair University Course Scheduling During a Pandemic", "authors": ["Matthew E. H. Petering", "Marshall Khamechian"], "abstract": "Problem definition: Scheduling university courses is extra challenging when classroom capacities are\nreduced because of social distancing requirements that are implemented in response to a pandemic such\nas COVID-19. Methodology: In this work, we propose an expanded taxonomy of course delivery modes,\npresent an integer program, and develop a course scheduling algorithm to enable all course sections\u2014\neven the largest\u2014to have a significant classroom learning component during a pandemic. Our approach\nis fair by ensuring that a certain fraction of the instruction in every course section occurs in the classroom.\nUnlike previous studies, we do not allow rotating attendance and instead require simultaneous attendance\nin which all students in a section meet in 1-5 rooms at the same time but less often than in a normal\nsemester. These mass meetings, which create opportunities for in-person midterm exams and group\nactivities, are scheduled at high precision across all days of the semester rather than a single, repeating\nweek. A fast heuristic algorithm makes the schedule in an hour. Results: We consider the 1834 in-person\ncourse sections, 172 classrooms, and 96 days in the fall 2022 semester at [UniversityXYZ]. If average\nclassroom capacity is reduced by 75% due to a pandemic, our approach still allows at least 25% of the\ninstruction in every section, and more than 49% of all instruction across the entire campus, to be in the\nclassroom. Our method also produces excellent results for regular classroom assignment. Managerial\nimplications: An algorithm based on the principles of fairness and simultaneous attendance can\nsignificantly improve university course schedules during a pandemic and in normal times. High-precision\nschedules that prepare a campus for various pandemic possibilities can be created with minimal\nadministrative effort and activated at a moment's notice before or during a semester if an outbreak occurs.", "sections": [{"title": "1. Introduction", "content": "In the early 2020s, learning at the world's 25,000 colleges and universities was in jeopardy as\nSARS-CoV-2 (i.e., COVID-19) spread across the globe. As of May 10, 2023, COVID-19 had infected\nmore than 765 million people and killed 6.9 million (WHO, 2023). Although many experts believe the\nworst of the pandemic is over, the disruption it has caused to businesses, governments, healthcare\nsystems, and the cognitive development of young people under the age of 25 will likely be felt for\ndecades (Schady et al., 2023). Moreover, there is still the possibility of a future pandemic.\nFor universities, a pandemic such as COVID-19 creates a dilemma of education versus health\nwhich requires them to rethink how their courses are delivered. If education is the priority, courses\nshould be delivered in person (i.e., taught in a classroom) to improve learning outcomes (Freeman et al.,"}, {"title": "1.1. The course scheduling process", "content": "Before discussing our approach in detail, we first place it in the context of the overall course\nscheduling process. The tasks involved in scheduling a semester of courses at a major U.S. university are\nshown in the left column of Figure 1. First, faculty members identify the subjects they will teach. This"}, {"title": "1.2. Simultaneous attendance", "content": "In this study, we propose a university course scheduling framework that enables all course\nsections-even the largest\u2014to have a significant classroom learning component during a pandemic. Our\napproach does not allow rotating attendance and instead uses the idea of simultaneous attendance in\nwhich all students in a course section meet in multiple rooms at the same time, but less often than in a\nnormal semester. At each mass meeting, students socially distance in each room. The instructor teaches in\none room, and an image of the instructor is displayed in the other rooms simultaneously. Mass meetings\nprovide opportunities for group work and in-person midterm exams that would not otherwise exist.\nFigure 2 illustrates the idea of simultaneous attendance for a simple example with 8 course\nsections, 4 classrooms, and a 2-week semester. The top portion shows the schedule in normal times\nwithout social distancing. Four sections (A, B, C, D) meet from 10-11:30 on Monday and Wednesday,\nand four sections (E, F, G, H) meet from 11:30-1:00 on Monday and Wednesday. The classroom where\neach section meets is also shown. The bottom of the figure shows a schedule with simultaneous\nattendance that might be used during a pandemic if classroom capacities shrink by a factor of four. Here,\neach section occupies four times as many rooms, one-fourth as often. For example, Section A has one\nmass meeting in rooms 1-4 from 10-11:30 on Monday in week 1 and three online meetings at the other\ntimes when it normally meets. Other sections are analogous. In the pandemic schedule, all students\nattend each meeting for every section either in a classroom (as shown) or online (not shown).\nSimultaneous attendance offers several benefits including opportunities for in-person midterm\nexams, but it requires a more complex scheduling approach than rotating attendance. With rotating\nattendance, no decision is made regarding when a course section occupies a room; it occupies a room as\nin a normal semester. Usually, no decision is made about where the section meets; it generally remains in\nthe room initially assigned to it by the registrar. For example, the schedule at the top of Figure 2 can still\nbe used during a pandemic if every course section is taught in hybrid mode with rotating attendance.\nWith simultaneous attendance during a pandemic, the scheduling is more complex. Each course"}, {"title": "1.3. High-precision course scheduling", "content": "Whereas most course scheduling methods create a repeating, weekly schedule, we take a different\napproach: we create a high-precision, nonrepeating schedule that explicitly considers each day of the\nsemester. We do so for three reasons. First, some course sections have only a few in-person meetings a\nsemester. In the case study described in Section 7, there are 52 irregular course sections, most of which\nmeet in person less than once per week during a normal semester. The only way to schedule in-person\nmeetings for these sections without wasting large amounts of space is to abandon a repeating weekly\nschedule. Second, many course sections meet once per week. If we require simultaneous attendance"}, {"title": "1.4. Contributions", "content": "In this paper, we present a novel approach to university course scheduling that enables all course\nsections-even the largest to have a significant classroom learning component during a pandemic. Our\napproach is guided by the principles of fairness and simultaneous attendance which have received little\nattention in the pandemic-driven course scheduling literature. Fairness is achieved by ensuring that a\nbasic fraction (e.g., 25%) of the pre-pandemic, in-person instruction in every course section remains in a\nclassroom during a pandemic. Unlike previous studies, we do not allow rotating attendance and instead\nrequire simultaneous attendance in which all students in a section meet in 1-5 rooms at the same time, but\nless often than in a normal semester. Simultaneous attendance provides opportunities for group work and\nin-person midterm exams that would not otherwise exist. Instead of a weekly timetable, we create a high-\nprecision schedule that considers each day of the semester. This allows us to handle all exceptions at\n[StateXYZ]'s second largest university including pre-scheduled, irregular midterm exams; sections with\nirregular in-person meetings; and temporary room closures for medical/vaccination activities.\nWe call the problem we address the high-precision university course scheduling problem (HP-\nUCSP). The word \"pandemic\u201d is not in the name because our approach also handles room assignment in\nnormal times. We model this problem as an integer program and develop a fast heuristic algorithm that\ngenerates solutions to large problem instances in an hour.\nOur ability to quickly tackle a large, real problem shows that our approach is practical and\nscalable. It is flexible by considering seven optimality criteria that are weighted according to user\npreferences. Our approach is also general as it performs three different tasks shown in Figure 1: regular\nroom assignment (task 4 in Fig. 1); course scheduling during a pandemic without room restrictions (task\n4A); and course scheduling during a pandemic with room restrictions (task 6). Finally, our approach is\nfriendly to administrators because it places minimal demands on their time. High-precision schedules that"}, {"title": "2. Literature review", "content": "Education has been a focal point of operations research for quite some time. According to Johnes\n(2015), operations research has been used in an educational context since the 1960s. Areas of application\ninclude planning and resource allocation for the educational sector, efficiency and performance\nmeasurement, routing, and scheduling. Of particular concern here is the literature on scheduling.\nResearch on educational scheduling includes two areas: school timetabling\u2014which concerns\nprimary and secondary schools and university course scheduling. Pillay (2014) reviews the work on the\nschool timetabling problem (STP). Teacher schedules and workloads play a central role in this problem.\nUniversity course scheduling generally considers more courses, rooms, students, instructors, and\ntimeslots than school timetabling. The instructor of each course is fixed a-priori, and the main goal is to\nmaximize student satisfaction. Most studies on university course scheduling address one of six problems:\ncurriculum-based course timetabling (CB-CTT), post-enrollment course timetabling (PE-CTT),\nexamination timetabling (ETT), strategic scheduling, timetabling by itself, and room assignment by itself.\nMuch of the research on CB-CTT, PE-CTT, and ETT originated with the Second International\nTimetabling Competition in August 2007 and its predecessor in 2002 (McCollum et al., 2010). An\noverview of CB-CTT research is provided by Bettinelli et al. (2015). In CB-CTT, tasks 3-4 in Figure 1\nare done simultaneously: the university decides a weekly assignment of courses to rooms and time\nperiods before students enroll in courses. The timetable must ensure that courses are only taught when\ninstructors are available and courses belonging to the same curriculum (e.g., year 3 physics) or taught by\nthe same instructor are not scheduled at the same time. There are also several soft constraints.\nIn PE-CTT, the university decides a weekly assignment of courses to rooms and time periods\nafter students enroll in courses. Conflicts in PE-CTT are determined by students who individually enroll"}, {"title": "3. Expanded taxonomy of course delivery modes", "content": "In this section, we propose an expanded taxonomy of course delivery modes which includes the\nconcepts proposed thus far and new ideas for future research. The taxonomy is shown in Table 1.\nCourse delivery refers to how students receive oral instruction from the instructor of a particular\ncourse section. A course section (i.e., section) is either part of a course or equivalent to a course. For\nexample, a large course with 2 lecture sections, 17 discussion sections, and 15 lab sections translates to 34\nsections. A small course with 1 lecture section and no discussion or lab sections translates to 1 section.\nCourse delivery can be broadly categorized into three modes\u2014in person (IP), online (OL), and\nhybrid (HY). We propose that these modes be defined as follows. In mode IP, all students attend all\nlectures for the course section\u2014which we call meetings\u2014in a classroom. In mode OL, all students attend\nall meetings online. In mode HY, some attendance during the semester is in person and some is online.\nNote that our definition of mode IP does not state that all students attend all lectures in the same\nroom. Indeed, it is possible for students to be split across multiple rooms (Barnhart et al., 2022). Hence,\nwe propose that the delivery mode for an in-person section be specified using the abbreviation IP-r where\nr indicates how many rooms are used.\nMode HY can be delivered in at least three formats with fixed (-F), rotating (-R), or\nsimultaneous (-S) attendance. These formats are indicated using the abbreviations HY-F, HY-R, and HY-\nS. In mode HY-F, each meeting has a classroom audience and a remote audience, and the method of\nattendance is fixed for each student. Some students attend all meetings in person; all other students attend\nall meetings remotely. As Navabi-Shirazi et al. (2022) have shown, a hybrid section may have rotating"}, {"title": "4. Formal problem description", "content": "Our problem is called the high-precision university course scheduling problem (HP-UCSP).\nConsider a university that has completed tasks 1-5 of the course scheduling process for an upcoming\nsemester (Fig. 1). There is no pandemic, and the university plans to offer S course sections, including\nsections to be delivered in person and in hybrid mode but not online. Let Es be the number of students\nenrolled in, or expected to be enrolled in, section s.\nThe semester has W weeks and D academic days. If instruction occurs five (six) days a week, D\n= 5W (6W). Let Nsw be the number of in-person meetings for section s that take place in week w and CNsw\nbe the number of such meetings that take place in weeks 1 to w combined. These values account for\nholidays and hybrid sections. For example, if section s meets in person three times per week, Nsw = 3 for\nall w except possibly weeks with holidays and the first/last weeks of the semester. If hybrid section s\nmeets once a week but only every fourth week in person, Nsw = 1 every fourth week and 0 otherwise.\nThe academic week is divided into T timeslots of equal duration, and the instruction of any\nsection on any day fits into an integral number of consecutive timeslots. If all sections' meetings start at\n:00 or :30 after the hour, each timeslot lasts 30 minutes. If there is more variety in meeting start times,\neach timeslot is shorter. The value of T depends on the timeslot duration, number of days of instruction\neach week, and earliest start and latest finish time of any meeting on any day. If each timeslot is 30\nminutes and if instruction occurs 6 days per week during an 8:00-21:00 window, T = 156 (= 6*26).\nInstruction occurs during M weekly meeting times. Each meeting time is an uninterrupted period\nduring the week when the instruction for one or more sections occurs. For example, three sections that\nmeet MWF from 9-10, MW from 9-10, and MW from 9-10:30 use five unique meeting times: M 9-10, W\n9-10, F 9-10, M 9-10:30, and W 9-10:30. Binary parameter Ism equals 1 if section s has an in-person\nmeeting during meeting time m in any week and 0 otherwise. Binary parameter Omt equals 1 if meeting\ntime m includes timeslot t and 0 otherwise.\nSections with irregular in-person meetings are modeled using binary parameter Ksd which equals\n1 (0) if section s does not have (does have) an in-person meeting on day d. For example, if hybrid section\ns meets twice in person during the semester, then Ksd = 1 for all d except the two days of the in-person\nmeetings. The days and times of all in-person meetings for section s are given by Ism and Ksa combined.\nThere are R classrooms (i.e., rooms) on campus, and binary parameter InitRoomrs equals 1 if\nroom r has been assigned to section s and 0 otherwise. If rooms have not been assigned, InitRoomrs\nequals 0 for all rand s. If a room has been assigned to every section, S of these parameters equal 1.\nThe HP-UCSP is particularly relevant if a pandemic occurs and classroom capacities suddenly\ndecrease because social distancing is required in the classroom. Given this crisis, the university replans"}, {"title": "5. Mathematical model", "content": "Our mathematical model, model HP-UCSP, is shown in Tables 3-6 and equations 1-37. Table 3\nshows the indices, and Table 4 shows the input data used in the model. Table 5 shows the decision\nvariables and their domains. Table 6 shows the model's adjustable parameters. These can be changed by\nthe user to pursue different objectives. Equation 1 is the objective function, and equations 2-37 are the\nconstraints. The items in Tables 3-6 are generally sequenced in order of their appearance in equations 1-\n37 and are explained as we discuss the objective function and constraints on the following pages.\nThe model is an integer program with three main decision variables shown at the top of Table 5.\nThe first, Xsmw, equals 1 if a mass meeting for section s is scheduled during meeting time m in week w and\n0 otherwise. The second, Yrs, equals 1 if room r is assigned to section s and 0 otherwise. The third, Zrsmw,\ncombines the information in the X and Y variables; it equals 1 if room r hosts a mass meeting for section s\nduring meeting time m in week w and 0 otherwise.\nTwenty auxiliary decision variables, shown at the bottom of Table 5, help to enforce constraints\nand translate the values of the main decision variables into objective penalties. The first eight of these\nappear in the objective function; the last twelve do not.\nThe objective (1) is to minimize a sum of seven objective components, each weighted by a\ndifferent factor a\u2081 to a7. Components 1-4 (5-7) are impacted by where (when) each section meets. Each\ncomponent is a sum of penalties for the S sections, with the penalty for section s weighted by a factor that\ndepends on its importance (Importances) as determined by its course level, its enrollment (E5), the number\nof in-person meetings it has during a normal semester (CNsw) (note the capital W), and the duration of its\nmeetings (Durations). The term_E5*CNsw*Durations, the number of student-timeslots of in-person\nattendance in section s during a normal semester, appears in five objective components.\nPenalty 1 equals the number of rooms assigned to section s (NumRoomss) minus 1. Penalty 2 is\nDistPenaltys, an aggregate measure of the distance between rooms assigned to section s. It equals 0 if", "equations": ["Minimize:\n(\u03b11) * \u03a3=1[Importances * Es * CN5w * Durations * (NumRoomss \u2013 1)] +\nS\n(a2) * =1[Importances * Es * CNsw * Durations * DistPenaltys] +\n(\u03b13) * \u03a3=1[Importances * Es * CNsw * Durations * PrefPenaltys] +\n(\u03b14) * \u03a3\u00a7=1[CNsw * Durations * WastedSeats5] +\n(\u03b15) * \u03a3=1[Importances * Es * CNsw * Durations * ((CNsw \u2013 CNPsw)/CNsw)ExP] +\n(\u03b16) * \u03a3=1[Importances * Es * Durations * TimingPenaltys] +\n(\u03b17) * =1[Importances * Es * CNsw * Durations * (1 \u2013 Us)]\n(1)", "Zrsmw \u2264 Xsmw\nfor all r, s, m, and w\n(2a)", "Zrsmw \u2264 Yrs\nfor all r, s, m, and w\n(2b)", "Zrsmw \u2265 Xsmw + Yrs - 1\nfor all r, s, m, and w\n(2c)", "Xsmw \u2264 Ism\nfor all s, m, and w\n(3)", "Xsmw * Qmwd* Ksd = 0\nfor all s, m, w, and d\n(4)", "Xsmw * Qmwd * Hd = 0\nfor all s, m, w, and d\n(5)", "\u03a3=1 Cr * Yrs \u2265 Es\nfor all s\n(6)", "Yrs \u2264 Jrs\nfor all r and s\n(7)", "Yrs \u2265 InitRoomrs\nfor all r and s\n(8)", "NumRoomss = \u03a3=1 Yrs\nfor all s\n(9)", "NumRoomss < MaxRooms\nfor all s\n(10)", "Em=1Zrsmw * Omt \u2264 1\nfor all r, t, and w\n(11)", "Zrsmw * Qmwd * NAvailrd = 0\nfor all r, s, m, w, and d\n(12)", "DistPenaltys = (a21)(MaxBldgDists) +\n(022)(NumBldgss \u2013 1) +\n(a23)(FloorDists) +\n(a24)(NumExtraFloorss) +\n(025)(RoomNonadjs)\nfor all s\n(13)", "DistPenaltys < MaxDistPenaltys\nfor all s\n(14)", "BUbs * MaxRooms \u2265 \u2211r=1IBrb * Yrs\nfor all b and s\n(15)", "MaxBldgDists > Distbc \u2013 (BigM)*(2 \u2013 BUbs \u2013 BUcs)\nfor all (b, c) s.t. b < c and all s\n(16)", "NumBldgss = b=1 BUbs\nfor all s\n(17)", "FUfbs * MaxRooms \u2265 2=1IFrf * IBrb * Yrs\nfor all f, b, and s\n(18)", "HighFloorbs \u2265 f \u2013 (F)*(1 \u2013 FUfbs)\nfor all f, b, and s\n(19)", "LowFloorbs \u2264 f + (F)*(1 \u2013 FUfbs)\nfor all f, b, and s\n(20)", "HighFloorbs > LowFloorbs\nfor all b and s\n(21)", "FloorDists = \u2211b=1(HighFloorbs \u2013 LowFloorbs)\nfor all s\n(22)", "NumFloorss = \u03a3F=02b=1 FUfbs\nfor all s\n(23)", "NumExtraFloorss = NumFloorss \u2013 NumBldgss\nfor all s\n(24)", "YYqrs \u2264 Yqs\nfor all q, r, and s\n(25a)", "YYqrs \u2264 Yrs\nfor all q, r, and s\n(25b)", "YYqrs \u2265 Yqs + Yrs \u2013 1\nfor all q, r, and s\n(25c)", "RoomNonadjs = \u2211=1=q+1 NAdjqr * YYqrs\nfor all s\n(26)", "PrefPenaltys \u2265 PGs,Br \u2212 (BigM)*(1 \u2013 Yrs)\nfor all r and s\n(27)", "PrefPenaltys < MaxPrefPenaltys\nfor all s\n(28)", "WastedSeatss = (r=1 Cr * Yrs) \u2013 Es\nfor all s\n(29)", "WastedSeatss < MaxWastedSeatss\nfor all s\n(30)", "NPsw = \u2211m=1Xsmw\nfor all s and w\n(31)", "CNPsw = \u03a3=1NPsk\nfor all s and w\n(32)", "CNPsw > MinFractions * CNsW\nfor all s (optional)\n(33)", "Diffsw \u2265 CNP sw \u2212 (w \u2212 FirstWs + 1)/(LastWs \u2212 FirstWs + 1) * CNPsW\nfor all s and all w from FirstWs to LastWs (34)", "Diffsw \u2265 (w \u2212 FirstWs + 1)/(LastWs \u2212 FirstWs + 1) * CNPsW \u2212 CNP SW\nfor all s and all w from FirstWs to LastWs (35)", "TimingPenaltys = LastWsw=Firstw, Diffsw\nfor all s\n(36)", "CNPsw > Us * (MinFractions * CNsw)\nfor all s\n(37)"]}, {"title": "6. OFFICE algorithm", "content": "The math model is prohibitively large for real problem instances. For example, our case study\nhas 172 rooms, 1834 sections, 590 weekly meeting times, and 16 weeks. This amounts to approximately"}, {"title": "7. Case study: [UniversityXYZ] campus in Fall 2022", "content": "Our first two consultations with the [UniversityXYZ] Registrar's Office took place in late\nFebruary and early March 2020, just weeks before the COVID-19 outbreak. Back then we were\ninterested in regular classroom assignment, but our interests later expanded to include pandemic\npreparedness and response. In this section, we describe our work to develop schedules for the fall 2022\nsemester at [UniversityXYZ]. We discuss our dataset, describe our experimental setup, and present the\nresults of two experiments that consider course scheduling (i) in normal times and (ii) during a pandemic."}, {"title": "7.1. Data collection", "content": "[UniversityXYZ] is [StateXYZ]'s second largest university with 23,000 students, 206 academic\nprograms, and a 104-acre campus. It is one of two \u201cR1\u201d universities in the state. Highly competent staff\nmembers in the registrar's office gave us data for the fall 2022 semester one week before it began.\nTable 9 summarizes the data. The campus has 172 general classrooms, and the equipment in each\nroom-a podium computer with internet access and an LCD projector is suitable for any of the 1834\ngeneral course sections. Each section is nonredundant\u2014cross-listed sections with the same meeting days,\ntime, and instructor are already combined\u2014and at least one in-person meeting is planned for each section.\nTen large chemistry courses have frequent daytime lectures (e.g., MWF from 11:30-12:20) and infrequent\nin-person evening exams in a different room (e.g., from 5:30-7 PM on Sept. 26, Oct. 24, Nov. 14, and\nDec. 12). Given the disparity in meeting frequency, location, time, and duration between the lectures and\nexams, we created two sections for each such course: one for the lectures and one for the exams.\nInstruction takes place six days a week over 16 weeks with minimal instruction in the 16th week\nand on Saturdays. All meeting times start at :00 or :30 after the hour, so 30-minute timeslots are used.\nThe classrooms reside in 17 buildings, all within 800 meters of each other. The total seating capacity of\nall rooms during normal times (a pandemic) is 9953 (2531). Ninety-seven organizations offer courses,\nand their preferences for teaching in different buildings are categorized into four tiers 1, 2, 3, 4 with"}, {"title": "7.2. General experimental setup", "content": "Data received from the registrar was translated into text files, and the OFFICE algorithm was\ncoded into MS Visual C++ 2010. All experiments were run on a desktop PC with the Windows 7\nEnterprise operating system, an Intel core i7-4770 (3.40 GHz) processor, and 16 GB of RAM.\nWe set up the OFFICE algorithm with V = 5 waves. Wave 1 has all meetings for each of the ten\nsections representing midterm exams for large chemistry courses (Section 7.1). (MinFractions = 1.0 for\nthese special sections.) Wave 2 has MinFractions of the meetings for each of the (42 other) sections with\nirregular in-person meetings. Most of these sections have infrequent in-person meetings, so opportunities\nfor mass meetings are scarce. Wave 3 (4) has MinFractions of the meetings for each regular section that\nhas an enrollment of at least (below) ENR, and wave 5 has all other meetings.\nTable 10 shows the parameter values used in the experiments. These values were identified\nduring preliminary experiments not described here. Parameters in the math model are at the top; those\nused in the OFFICE algorithm are at the bottom. Table 11 describes in simple terms how the objective\nfunction changes when a section's mass meetings change. For example, teaching a section in one more\nbuilding (100) has twice the penalty as moving it from a tier 1 to tier 2 building (50). The high values of"}, {"title": "7.3. Experiment 1: Regular classroom assignment", "content": "Table 12 shows the results of six independent, one-hour runs of the OFFICE algorithm for regular\nclassroom assignment (task 4 in Figure 1). The second column shows the performance of the registrar's\nroom assignments that were used in fall 2022. Column 3 shows the performance of OFFICE's room\nassignments, averaged over the six runs. Column 4 shows the results for OFFICE in the best of the six\nruns. Objective values (in thousands) are at the top, and other results are at the bottom. The values of\nobjective components 5 and 7 are 0 in all cases, indicating that 100% of all sections' meetings are feasibly\nscheduled. Components 1-2 are 0 because every section meets in one room, and component 6 is nonzero\nowing to the discrete, imperfect way of computing TimingPenaltys. Regarding objective component 3,\nthe average value achieved by OFFICE (238,730) is less than half the value achieved in the registrar's\nassignment (484,832). Overall, OFFICE finds significantly better room assignments than the registrar's\nsoftware program."}, {"title": "7.4. Experiment 2: Pandemic preparedness and response", "content": "We now consider pandemic preparedness and response in two scenarios: (R) if each section's\nroom assignment must include the room initially assigned to it by the registrar (task 6 in Fig. 1) and (NR)\nif not (task 4A in Fig. 1). For each scenario, we explore six values of MinFractions (for the course\nsections in waves 2-4)\u20140.05, 0.1, 0.15, 0.2, 0.25, and 0.3\u2014and we run OFFICE six times for each value,\nyielding 72 (1-hour) runs altogether. In all runs, MinFractions is 1.0 for all course sections in wave 1.\nThe main result of this experiment is that, in all runs with MinFractions \u2264 0.25, OFFICE was able\nto schedule at least MinFractions of all sections' meetings in person. Figure 3 shows the average\nobjective value (in thousands) of the solutions identified by OFFICE in these runs. Here, performance\nimproves as the decision maker faces fewer restrictions. For example, OFFICE finds better solutions in\nscenario NR (gray line with round points) than R (black line with square points). Also, the objective\nvalue improves as MinFractions decreases, i.e., as the conditions for zeroing out objective 7 are relaxed.\nThe results when MinFractions = 0.3 are not shown in Figure 3 because no such runs resulted in"}, {"title": "8. Conclusion", "content": "Scheduling university courses is especially difficult when social distancing requirements reduce\nthe useful capacity of classrooms during a pandemic. In this work, we introduce a new framework for\nuniversity course scheduling that is based on three principles which have received little attention in the\nliterature: fairness, simultaneous attendance, and high-precision scheduling. Our approach is fair by\nensuring that a certain fraction (e.g., 25%) of the instruction in every course section occurs in the\nclassroom during a pandemic. Our focus on simultaneous attendance, in which all students in a section\nmeet at the same time in one or more nearby rooms, creates opportunities for in-person midterm exams\nand group activities that are not available with rotating attendance. As discussed earlier, the best way to\nachieve fairness with simultaneous attendance is to schedule at high precision across all days of a\nsemester rather than a single, repeating week. These ideas led to the development of the OFFICE\nalgorithm and its testing on a real case with 1834 in-person course sections, 172 classrooms, and 96 days.\nResults show the algorithm is an effective course scheduling tool in both normal and pandemic times.\nFuture work might apply the OFFICE algorithm to other institutions or to event/space"}]}