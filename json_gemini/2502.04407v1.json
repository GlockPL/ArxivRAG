{"title": "ILLUMINATING SPACES\nDEEP REINFORCEMENT LEARNING AND LASER-WALL\nPARTITIONING FOR ARCHITECTURAL LAYOUT GENERATION", "authors": ["Reza Kakooee", "Benjamin Dillenburger"], "abstract": "Space layout design (SLD), occurring in the early stages of the design process, nonetheless influences\nboth the functionality and aesthetics of the ultimate architectural outcome. The complexity of SLD\nnecessitates innovative approaches to efficiently explore vast solution spaces. While image-based\ngenerative AI has emerged as a potential solution, they often rely on pixel-based space composition\nmethods that lack intuitive representation of architectural processes. This paper leverages deep\nReinforcement Learning (RL), as it offers a procedural approach that intuitively mimics the process\nof human designers. Effectively using RL for SLD requires an explorative space composing method\nto generate desirable design solutions. We introduce \"laser-wall\", a novel space partitioning method\nthat conceptualizes walls as emitters of imaginary light beams to partition spaces. This approach\nbridges vector-based and pixel-based partitioning methods, offering both flexibility and exploratory\npower in generating diverse layouts. We present two planning strategies: one-shot planning, which\ngenerates entire layouts in a single pass, and dynamic planning, which allows for adaptive refinement\nby continuously transforming laser-walls. Additionally, we introduce on-light and off-light wall\ntransformations for smooth and fast layout refinement, as well as identity-less and identity-full\nwalls for versatile room assignment. We developed SpaceLayoutGym, an open-source OpenAI\nGym compatible simulator for generating and evaluating space layouts. The RL agent processes the\ninput design scenarios and generates solutions following a reward function that balances geometrical\nand topological requirements. Our results demonstrate that the RL-based laser-wall approach can\ngenerate diverse and functional space layouts that satisfy both geometric constraints and topological\nrequirements and is architecturally intuitive.", "sections": [{"title": "1 Introduction", "content": "SLD represents a complex optimization problem that permeates various domains of human endeavor. At its core, SLD\ninvolves the strategic arrangement of elements within a defined spatial boundary to achieve specific objectives from\nmaximizing usability to ensuring aesthetic harmony. This process necessitates a delicate balance between functional\nrequirements including geometrical constraints, and topological relationships, often leading to the exploration of vast\nsolution spaces in search of optimal configurations (Michalek et al., 2002).\nSLD challenges span diverse applications, forming the foundation of efficient building design in architecture and\ninfluencing residential to complex commercial structures (Chen et al., 2021). Urban planners apply SLD principles to\nshape city layouts, impacting urban livability and sustainability (Mourshed et al., 2009), while interior designers use"}, {"title": "2 Methodology", "content": "Architectural SLD involves a synergy of space composition methods and computational approaches to optimize the\ncomposition. In this paper, we focus on partitioning as the space composition method and RL as a computational\napproach to optimize layout composition given a design scenario.\nIn the following section, we introduce a novel space partitioning method called \"laser-wall\". This innovative method\nenhances the effectiveness of subsequent computational approaches, such as RL, in exploring the solution space to\nidentify optimal layouts. Moreover, the laser-wall method transforms the layout design problem into a game-like\nenvironment, making it particularly amenable to RL algorithms, leveraging their proven efficacy in finding optimal\npolicies. We then use RL to find optimal solutions for the optimal space layout using our proposed composition\nmethods."}, {"title": "2.1 Laser-wall partitioning", "content": "Space partitioning can be broadly categorized into two main methods: vector-based and pixel-based. Rectangular\ndissection, a common vector method, divides space using straight lines but often results in long, inflexible walls, limiting\nirregular shapes. Pixel-based partitioning, in contrast, allows for more flexible and irregular designs by dividing space\nat a granular level but is slower and computationally intensive. These contrasting approaches highlight the need for a\nmore balanced method, leading to the development of our laser-wall partitioning technique, which aims to combine the\nstrengths of both."}, {"title": "2.1.1 Basics of laser-wall method", "content": "A laser-wall consists of two components: a hard part (the base wall) and a soft part (light beams). The base wall is\nformed by two connected segments, either aligned or perpendicular, establishing the physical structure. From each end\nof these segments, light beams are emitted. These beams travel through the space, defining partitions and interacting\nwith other elements in the layout. When a base wall is placed within the plan, its light beams automatically emit and\npropagate until they encounter obstacles; either the outline of the plan, other base walls, or other light beams. A key\nconcept governing beam interactions is the infiltration rate, which introduces flexibility to the partitioning process. We\nexplore two implementations: fixed and decreasing infiltration rate. In the former, all walls have the same infiltration\nrate; beams stop upon encountering other beams. In the latter, the infiltration rate decreases with distance from the\nbeam's source, allowing beams closer to their origin to cut through beams from other walls if they have a lower\ninfiltration rate at the intersection point."}, {"title": "2.2 Planning Approaches", "content": "Building on the laser-wall concept, we introduce two planning approaches: One-Shot Planning, and Dynamic Planning.\nIn one-shot planning, the entire layout is determined in a single iteration. Starting with an empty plan, base laser-walls\nare selected from a predefined wall library and placed at chosen coordinates. Upon placement, their light beams are\nemitted to partition the space. This process continues until the required number of rooms is achieved. Once placed,\nwalls remain fixed, completing the layout in one iteration. Two mechanisms are proposed for assigning rooms to\nsubregions. In the identity-less mechanism, walls are not linked to specific rooms during partitioning. After partitioning,\nthe subregion connected to the entrance is designated as the living room, and other rooms are assigned by matching each\nsubregion to the room with the closest desired area defined in design scenario. In contrast, the identity-full mechanism\nassigns each wall a room index before placement. The smaller subregion created by the wall is assigned to its associated\nroom, with constraints ensuring walls are not placed in already occupied regions or the entrance-connected area reserved\nfor the living room. This process is exemplified in Figure 1\nDynamic planning introduces adaptability by allowing walls to transform within the plan, enabling exploration of a\nwider range of spatial configurations. Walls can move and rotate: through incremental movements, walls shift in 8\ncardinal directions (north, northeast, east, etc.) to refine their positions, while 90-degree rotations allow entire base\nwalls or individual segments to turn clockwise or counterclockwise, altering the shape and proportions of rooms. This\ndiscrete approach aligns with a cell-based representation of the plan, where space is divided into a grid of units.\nWall movement requires determining how lights will behave during transformations. Two types of wall transformations\nare introduced: off-light and on-light transformations. In the former, the light of the moving wall is deactivated before\nits movement. After the wall is repositioned, all walls' lights are activated in a specific order, with the moved wall's\nlight being activated last. In the latter, the light of the moving wall stays active throughout its movement. This process\nis practically similar to initially turning off all lights and then incrementally activating them in order, with the moved\nwall's light being turned on last. After each transformation and following partitioning, first, connected subregions to\neach base-wall are identified, next, Intersection over Union (IoU) score between new subregions and their previous\ncounterparts are calculated, and then rooms are assigned based on the following steps: a) the region connected to the\nentrance is assigned as the living room, b) subregions with an IoU of 1 (perfect overlap) are assigned to maintain\ncontinuity, c) remaining regions are assigned by iterating through walls in a specific order (with the moved wall\nconsidered last), assigning regions with the highest IoU to corresponding walls. This process is exemplified in Figure 2."}, {"title": "2.3 RL for SLD", "content": "RL provides a framework for an agent to learn optimal decision-making strategies through interaction with an environ-\nment, making it well-suited to the iterative process of layout refinement in dynamic planning. To apply RL to our SDL\nwith the laser-wall partitioning method, we frame the SLD problem as a Markov Decision Process (MDP).\nAn MDP provides a framework for modeling decision-making in scenarios where outcomes are partly under the control\nof a decision-maker. The MDP is defined by three components, state space, action space, and reward function."}, {"title": "2.4 State Space", "content": "The state space in RL represents all possible configurations or situations the agent can encounter in the environment. In\nSLG, the state at any given time is represented by an RGB image of the current layout. This image encapsulates both\ngeometric and topological information, including room configurations, wall positions, and the entrance location. The\nuse of an image state allows the agent to perceive spatial relationships intuitively, mirroring human visual processing of\nlayouts."}, {"title": "2.5 Action Space", "content": "The action space in RL defines the set of all possible actions an agent can take to interact with or modify the environment.\nIn dynamic planning, actions consist of two decisions: a) selecting an existing wall to transform, b) choosing a specific\ntransformation (8 directional movements and 6 rotation options)."}, {"title": "2.6 Reward Function", "content": "The reward function in RL quantifies the desirability of actions and resulting states, guiding the agent towards optimal\nbehavior. In dynamic planning, each action results in a complete new configuration, allowing for assessment of both\ngeometric and topological properties at every step. The reward consists of two components: instant reward, and\nterminal reward. The reward is calculated from two elements: an instant reward and a terminal reward."}, {"title": "Instant rewards", "content": "\u2022 Negative rewards for violating hard constraints (e.g., wall collisions, entrance blockage).\n\u2022 Negative rewards for intermediate layouts that deviate significantly from desired properties."}, {"title": "Terminal rewards", "content": "\u2022 Negative rewards if the layout is significantly different from the desired properties.\n\u2022 Non-negative reward for solutions that fall within a threshold of closeness to desired properties, scaled linearly\nor nonlinearly based on the closeness.\n\u2022 Bonus reward for perfect adjacency matching."}, {"title": "2.7 Learning Algorithm", "content": "We employ Proximal Policy Optimization (PPO) (Schulman et al., 2017) algorithm, to learn an optimal policy for\nlayout generation. This choice is motivated by PPO's ability to handle high-dimensional state spaces and its stability\nin learning complex strategies. The neural network architecture underlying our RL agent is designed to process the\nimage-based state efficiently. It combines convolutional layers to extract spatial features, following by fully connected\nlayers to map these features to action probabilities and state value estimates."}, {"title": "2.8 Training Process", "content": "The agent learns through episodic interaction with the SLG environment. Each episode in dynamic planning begins\nwith an initial random wall configuration and terminates when either a satisfactory layout is achieved or a maximum\nnumber of transformations is reached. The agent gradually improves its policy by maximizing cumulative rewards\nacross episodes. This RL formulation allows our system to learn design strategies that balance local optimizations\n(individual room properties) with global constraints (overall layout coherence and adjacency requirements)."}, {"title": "3 Experiments", "content": "This section presents two experiments to evaluate the effectiveness of laser-wall partitioning in SLG and the performance\nof RL to design space layouts. We define six distinct design scenarios, varying in complexity from 4 to 9 rooms. Table\n1 outlines the properties of the desired layout for each scenario. For all scenarios, the desired room aspect ratio ranges\nfrom 1 to 6. The desired adjacency requirements are as follows: living room is connected to all the other rooms and to\nthe entrance; each room access to at least one non-blocked fa\u00e7ade."}, {"title": "3.1 Results", "content": "Angled versus straight walls: Figure 3 shows the results for training PPO agents on a subset of design scenarios from\nTable 1, comparing layouts generated using only straight walls versus those using only angled walls. The agent's ability\nto find a design solution indicates that the generated layouts closely match the geometric properties defined in the table,\nincluding the aspect ratio requirements. This is because geometric properties are integral constraints of the optimization\nproblem, and without satisfying these constraints, a solution cannot be achieved. Therefore, the immediate conclusion is"}, {"title": "3.1.1 On-light and off-light transformations", "content": "For each design scenario in Table 1, we trained a PPO agent using dynamic planning with both on-light and off-light\ntransformations, utilizing identity-full walls in both cases. We then evaluate the layouts generated by our RL agents\nbased on their adherence to the desired geometric properties (areas and aspect ratios) and topological requirements\n(adjacencies). Additionally, we consider factors such as convergence speed. Figure 4 illustrates the learning curves for\nthe agent using on-light and off-light transformations in SLD. Both approaches show consistent improvement over time,\nwith rewards increasing and episode lengths decreasing.\nThe layouts generated by the trained PPO agents are shown in Figure 5 provide a clear visual representation of various\ndesign elements. Geometrically, the agent achieves a high degree of precision in meeting room area and aspect ratio\nrequirements. The average difference between desired and achieved room areas across all scenarios is minimal, and\nthe achieved aspect ratios closely match the specified values (both less than 5%). Topologically, the agent excels in\nestablishing the required connections between rooms and living rooms and facades. The green dashed lines in each\nlayout represent successfully implemented adjacencies, while the red dashed line and gray plus sign indicate instances\nwhere the agent failed to create a requested connection. Across all scenarios, there are 72 potential connections,\ncalculated as the sum of room-to-living room and room-to-facade connections. The agent successfully establishes all\nbut 2 of these connections, showing its proficiency in meeting adjacency requirements.\nThe results underscore the effectiveness of our RL-based approach in generating space layouts that align closely with\nspecified design criteria. The agent demonstrates a strong capacity for balancing multiple objectives simultaneously,"}, {"title": "3.1.2 Design trajectory", "content": "To understand the trained agent's behavior, we illustrate the action trajectory in Figure 6 which shows the step-by-step\ntransformation of an SLD by our trained RL agent for scenario 4. Starting from an initial random configuration,\neach subsequent image represents the layout after an action taken by the agent. Key observations include the gradual\nimprovement in room proportions, the establishment of required adjacencies, and the overall organization of space\nbecoming more coherent. This visual trajectory not only showcases the effectiveness of our RL approach but also\nprovides insights into the decision-making process of the agent in the dynamic planning, highlighting how it balances\nvarious design criteria to achieve the final, optimized layout that satisfies the geometrical and topological properties\ndefined in the design scenario."}, {"title": "4 Discussion and Conclusion", "content": "Our research demonstrates the effectiveness of the proposed laser-wall partitioning method in SLD. We framed the\nlayout design problem as an MDP and successfully trained PPO agents to explore the solution space to find the optimal\nsolution. The experiments across various scenarios highlight the adaptability and efficiency of our partitioning method in\ngenerating layouts that satisfy complex geometric and topological requirements. The comparison between straight and\nangled walls reveals the importance of flexibility in composing the space. Successful training of RL agents in different\non-light, off-light dynamic planning emphasizes the robustness of the proposed laser-wall method. The visual trajectory\nof the agent's decision-making process provides insights into how it navigates the solution space, progressively refining\nlayouts to meet specified criteria.\nWhile our approach shows promise, there are areas for future exploration. Integrating more architectural constraints,\nsuch as wall alignments and room width and length constraints, could further enhance the practical applicability of this\nmethod. Additionally, exploring the potential of transfer learning between different design scenarios could improve the\nefficiency and generalization capabilities of the RL agent. Comparing dynamic planning and one-shot planning is also\nleft for future research. As we continue to refine this approach, the ultimate goal is to develop a tool that not only assists\narchitects in generating initial design concepts but also serves as a collaborative partner in the creative process, offering\nnovel solutions that human designers might not have considered. We already open sourced the SpaceLayoutGym\nsimulator to support open research in architectural design and RL: SpaceLayoutGym"}]}