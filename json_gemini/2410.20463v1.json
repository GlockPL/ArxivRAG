{"title": "A Derivational ChainBank for Modern Standard Arabic", "authors": ["Reham Marzouk", "Sondos Krouna", "Nizar Habash"], "abstract": "This study presents the \"Arabic Derivational ChainBank,\" a novel framework for modeling Arabic derivational morphology. It establishes connections between forms and meanings by constructing a chain of derived words that reflect their derivational significance. To expedite the process, a rule-based methodology was employed, avoiding time-consuming manual annotation. The derivational network was then aligned with the CamelMorph morphological analyzer database. This two-step process resulted in a chain of derived word lemmas linked to their roots, encompassing 23,333 evaluated derivational relations, thereby demonstrating the efficiency of the ChainBank.", "sections": [{"title": "1 Introduction", "content": "Lexical resources are essential for improving the accuracy of language processing applications, as they enhance computational systems' ability to grasp the nuanced meanings and contextual variations of human language. Despite significant efforts over the past decade, the Arabic language still lacks tools that focus on its morphological structure and semantic connections. By concentrating on derivational modeling, we can develop a computational method to understand the relationship between form and meaning, creating a comprehensive framework that maps the paths of derived words. This framework can address many ambiguous cases arising from the complexity of Arabic's derivational structure.\nThe fundamental principle of the Arabic derivational structure, as a templatic languages, is based on the root-and-pattern system. The root conveys semantic abstraction (Gadalla, 2000; Holes, 2004) and is linked to various patterns that generate different forms, enabling the expression of multiple meanings. The process of deriving words from roots lacks a consistent methodology, leading to challenges that hinder the understanding of the meanings of derived words and pose significant obstacles for derivational modeling. For instance, a single pattern can convey different derivational meanings, resulting in ambiguity among derived words that share the same root. As an example, the Masdar \u0627\u0644\u0645\u0635\u062f\u0631 \u2018verbal_noun and the Descriptive adjective \u0627\u0644\u0635\u0641\u0629 \u0627\u0644\u0645\u0634\u0628\u0647\u0629 share the same pattern 1a2A3i.e \u062d\u0635\u0627\u062f HaSAd \u201charvest\u201d and the adjective \u062c\u0628\u0627\u0646 jabAn \u201ccoward\".\nLikewise, Homographs can be derived from the same base to convey distinct meanings; consequently, each word possesses a different set of derivatives. For example, two verbs are written as \u0641\u0644\u062d falah. One has the meaning\u201cto succeed\" with the derived Masdar \u0641\u0644\u0627\u062d falAH \u201csuccess\". The other's meaning is \u201cto farm\", with the Masdar \u0641\u0644\u0627\u062d\u0629 filHa\u0127 \u201cfarming\u201d. Another crucial behaviour is the meaning shift of some derivatives from the original abstract meaning of the root. For instance, the word \u0643\u062a\u064a\u0628\u0629katiybah \u201cbattalion\u201d which is one of the derivatives of the root \u0643.\u062a.\u0628 k.t.b \"writing-related\". Interpreting the behavior of derived words in the Arabic language, along with the deviations from derivational rules, necessitates a robust organization of derivatives within a framework capable of tracing the various paths of derivation and managing the resulting ambiguities.The objective of this study is to define the new concept of the \"Derivational ChainBank,\" which serves as the first representation of the Arabic derivational structure. The ChainBank presents connected chains that illustrate the path of each derived word and the relation between connected words by providing their derivational meanings. To construct the ChainBank, we employed a tree data structure to build a network of abstract patterns, along with a rule-based system to align this network with lexical database of the Arabic morphological analyzer the CamelMorph (Habash et al., 2022). The contribution of the work is the provision of a morphological model based on compositional structuring, thereby establishing a correlation between the morphological and semantic features of the language. The transliteration in this work follows the transliteration scheme for Arabic Language which is introduced by (Habash et al., 2007)."}, {"title": "2 Related Work", "content": "Over the past few decades, numerous studies in computational morphology have focused on Arabic morphological analysis (Kiraz, 1994; Beesley, 1998; Al-Sughaiyer and Al-Kharashi, 2004; Taji et al., 2017). Inflectional morphology has produced various models for morphological analysis and generation, which have become essential resources for processing the Arabic language. Notable examples include the morphological analyzer MADA (Habash et al., 2012), which analyzes and disambiguates aspects of Arabic morphology in context, and MADAMIRA (Pasha et al., 2014), which is designed to identify a word's morphological features and rank the analysis results according to their alignment with the model's predictions. CALIMA star (Taji et al., 2018) and CAMELMORPH are among the latest advanced morphological analyzers and generators, offering diverse features. In addition to the previous inflectional models, MAGEAD (Habash and Rambow, 2006) was the first inflectional morphological analyzer to provide a wide coverage implementation of the Arabic root and pattern system. The Arabic Proposition Bank (APB) (Palmer et al., 2008) was a project aimed at semantically annotating an Arabic text corpus by adding predicates and propositions. Likewise, the morphological analyzer Al Khalil Morph system (Boudlal et al., 2010; Boudchiche et al., 2017) has a database that is classified into derived and non-derived classes based on their root, vocalized, and unvocalized patterns. (Zaghouani et al., 2016) was a pilot study that aimed to represent the derivational structure for root patterns and address the multiple senses that are carried by one pattern. None of the prior studies have focused significantly on the derivational structure to develop a comprehensive model of this aspect of morphology."}, {"title": "3 Arabic Derivational Morphology", "content": "Arabic Language morphology is known for its discontinuous morphemes which are called roots. Roots consist of three consonants interconnecting with different patterns of vowels to construct different meanings. Each pattern is associated with a certain meaning that can be deduced from unknown words that belong to that same pattern. Each set of words, that belongs to certain patterns and shares the same root, is derived from a single base. Such sets construct a derivational network connecting words that are derived from the same roots. Derived words can be either canonical, which means that the meaning matches the pattern form, or non-canonical, where a deviation of regular form occurs to find form and meaning mismatch. Derived words can also be formed by adding affixes to these templates. One instance is generating the attributive adjectives \u0639\u0644\u0645\u064a \u00e7ilmiy \u201cscientific\u201d, by appending the suffix + +iy, which is called \u064a\u0627\u0621 \u0627\u0644\u0646\u0633\u0628\u0629 Attributive y' to the base \u0639\u0644\u0645 silm \"science\". Verbs are divided into unaugmented, which is composed of only two morphemes: root and vocalism, and augmented verbs, which are derived from the unaugmented verb by geminating, lengthening of vowels, prefixation or infixation (Gadalla, 2000). Nouns are categorized into primary noun, which are directly derived from roots (Gadalla, 2000), and derived nouns, which originate from verbs and encompass various derivational classes such as verbal nouns Masdar, nouns of location,...etc. In some cases, derived words involve shifting the meaning to a contextually unrelated interpretation of their base form, which is defined as semantic specification. For instance, the noun \u0645\u0643\u062a\u0648\u0628 maktuwb \u201cletter/message\u201d is derived from the passive participle \u0645\u06a9\u062a\u0648\u0628 maktuwb \u201cwritten\u201d."}, {"title": "4 The ChainBank Framework", "content": "The Derivational ChainBank is represented as a dynamic, knowledge-based tree graph that illustrates the hierarchical organization of Arabic derivational morphology, starting with the trilateral root. Each node in this graph corresponds to a derived word and includes its morphosemantic attributes, such as pattern, part of speech, functional features, and lexical meaning. The connections between the nodes denote the derivational relationships that categorize each child node. The ChainBank is created by developing an extensive network that represents the organization of abstract patterns, such as \u0641\u0639\u0644 CaCaC/1a2a3 and \u0641\u0639\u064a\u0644 CaCyClay and integrating this network with the lexical database from CamelMorph. This combination forms a large-scale network that connects Arabic words through their derivational relationships. The process is structured into three levels: The abstract level, which focuses on the abstract patterns designed to represent various derivatives. The concrete level, where abstract patterns are linked to lemmas to produce derived words along with their derivational meanings. And the high level where derived words are generated using complex processes."}, {"title": "4.1 The Abstract Level", "content": "A network is developed to illustrate all potential connections between roots and their derived patterns in a tree structure. The roots are positioned at the apex of the tree, followed by unaugmented verbs, and subsequently the augmented verbs along with the nominal derivatives. This network is meticulously organized to display all conceivable connections between patterns, even if certain connections may not be practically feasible but remain theoretically plausible."}, {"title": "4.1.1 Constructing an Abstract Network", "content": "First of all, patterns were categorized according to their morphosemantic characteristics, Then, a scheme was devised to incorporate the derivational features of these patterns into the network. The construction of the network involved the establishment of four tables to represent the source and target nodes, along with their relationships.\nCanonic/Non-Canonic Tables Two manually constructed tables focus on trilateral and quadrilateral verbs and their nominal patterns, divided into canonic and non-canonic forms (Appendix C). The non-canonic table includes nominal patterns that deviate from canonical forms. Verb transitivity, crucial for distinguishing derivatives, is also considered.\nAffixational Table Derivatives that do not conform to specific patterns\u2014such as those listed in Table 2 (3) and (12)\u2014are generated from the foundational tables using pre-established rules, and added to the table.\nSemantic Specification Table is designed to generate words that have undergone a semantic shift from their base forms. This process may involve producing an inflected form of the base to align with the new meaning...\u0645\u0639\u0644\u0648\u0645\u0629 masluwmah \u201ca piece of information\u201d is derived from the feminine form of \u0645\u0639\u0644\u0648\u0645 maluwm \u201cknown\u201d.\nRelational Database is created by combining the previous tables to bring a chains of connected patten, in addition to their derivational classes that describe the relation between the patterns."}, {"title": "4.2 The Concrete Level", "content": "Next we discuss aligning CamelMorph database with the Abstract Network. The alignment process involves associating the lemmas of each root with equivalent patterns in the network based on their morphological and functional characteristics. The relational database was created to correspond with the CamelMorph database; however, certain modifications were needed as preprocessing steps prior to the actual alignment. The essential extracted elements for alignment were roots, lemmas, patterns, POS, and functional features such as transitivity."}, {"title": "4.3 Resolving High-Level Connections", "content": "Deriving one form from another may involve more than one stage; it may necessitate an inflectional process as an intermediary stage to produce a new derived form. For example, deriving a form from the plural form of the lemma, i.e., attributive adjective \u062d\u062f\u0648\u062f\u064a Huduwdiy~ \u201cbordering\u201d is derived from the plural form of \u062d\u062f Had \"border\" )\u062d\u062f\u0648\u062f Huduwd \u201cborders\u201d). For these cases, the alignment system is designed to predict these inflected forms. Another example of complexities is the patterns which are not linked to root regularly, since patterns can be disused with some roots. As a partial solution, potential initial patterns were inserted for roots that lack them to initiate the chain."}, {"title": "5 Evaluation", "content": "The alignment process on 4,926 roots from CamelMorph resulted 23,333 relations between connected derived words' lemmas to produce the first phase of the ChainBank."}, {"title": "5.1 Assessments", "content": "Two assessments were conducted to modify the Abstract Network accordingly and to test the quality of the designed model to generate a coherent chain of derived lemmas.\nAssessment 1 In this assessment, 25 roots from CamelMorph were extracted and linked to relational database based on shared features to evaluate their ability to detect relationships. A manual review confirmed that the database covered 87.63% of the intended derivational relationships.\nAssessment 2 The assessment evaluates the alignment system's ability to establish connections between derived words. A random sample of 75 roots from the CamelMorph database was used to test the system's performance in generating a connected ChainBank."}, {"title": "5.2 Discussion", "content": "There are three types of results: single correct relations, multiple relations, and missing relations. Multiple relations occur due to shared patterns across different derivational classes. Missing relations stem from three main factors. 1) the relational data lacks primary nouns and other nominal lemmas, which require specific paths in the ChainBanks. 2) CamelMorph's database wasn't designed for derivational modeling, resulting in incomplete lemma groups for some roots and chain disconnections. 3) the relational database needs expansion with new non-canonical patterns. Additionally, the system should be improved by adding features and techniques to resolve ambiguities during evaluation."}, {"title": "6 Conclusion and Future Work", "content": "We introduced the \"Arabic Derivational ChainBank\" framework for modeling Arabic derivational morphology. The evaluation of our rule-based method to populate the ChainBank shows great promise. Future work should expand the relational database to include primary nouns, nouns of Masdar, and nominal lemmas. Updating CamelMorph for derivational modeling will help complete the derivational chains for all roots. Incorporating non-canonical patterns will further enhance the database. Additionally, advanced disambiguation techniques should be integrated to improve system performance during evaluations."}, {"title": "7 Limitations", "content": "We acknowledge several limitations of the work as presented. First, the reliance on a rule-based methodology, although efficient, may overlook nuances that a more comprehensive manual annotation process could capture. This could lead to the omission of certain derivational patterns and relations. Second, the alignment with the CamelMorph morphological analyzer, though beneficial for broad coverage, may have resulted in incomplete or fragmented derivational chains due to the database's current structure, which was not designed for derivational modeling. Third, the dataset predominantly covers canonical derivational patterns, with non-canonical patterns remaining underrepresented, potentially limiting the ChainBank's applicability to broader linguistic phenomena. Lastly, the work focuses on Modern Standard Arabic and does not cover any of its major dialects. Future work should address these limitations to enhance the framework's completeness and accuracy."}]}