{"title": "Political Events using RAG with LLMs", "authors": ["Muhammad Arslan", "Saba Munawar", "Christophe Cruz"], "abstract": "In the contemporary digital landscape, media content stands as the foundation for political news analysis, offering invaluable insights sourced from various channels like news articles, social media updates, speeches, and reports. Natural Language Processing (NLP) has revolutionized Political Information Extraction (IE), automating tasks such as Event Extraction (EE) from these diverse media outlets. While traditional NLP methods often necessitate specialized expertise to build rule-based systems or train machine learning models with domain-specific datasets, the emergence of Large Language Models (LLMs) driven by Generative Artificial Intelligence (GenAI) presents a promising alternative. These models offer accessibility, alleviating challenges associated with model construction from scratch and reducing the dependency on extensive datasets during the training phase, thus facilitating rapid implementation. However, challenges persist in handling domain-specific tasks, leading to the development of the Retrieval-Augmented Generation (RAG) framework. RAG enhances LLMs by integrating external data retrieval, enriching their contextual understanding, and expanding their knowledge base beyond pre-existing training data. To illustrate RAG's efficacy, we introduce the Political EE system, specifically tailored to extract political event information from news articles. Understanding these political insights is essential for remaining informed about the latest political advancements, whether on a national or global scale.", "sections": [{"title": "1. Introduction", "content": "In today's digital era, media content stands as a valuable resource for political scientists, providing crucial insights into political landscapes, events, and sentiments [1]. This content, spanning news articles, social media posts, speeches, and reports, provides insight into public opinion, political trends, and policy implications [2]."}, {"title": "2. Background", "content": "However, manual methods for extracting political information from media are increasingly impractical due to the sheer volume of digital data [3]. The rise of NLP has transformed IE from media, enabling automated analysis of text data to classify, categorize, and interpret large collections of textual information [4]. NLP techniques have significantly enhanced the efficiency and accuracy of IE tasks in political science, covering event detection, hate speech identification, sentiment analysis, and more [5]. Traditional NLP methods require specialized expertise and extensive resources to build rule-based systems or train machine learning models with domain-specific datasets. However, the emergence of LLMs driven by GenAI (i.e., encompasses Al tools designed for creating diverse content types like text, images, and audio that closely resembles human-produced material) offers accessible, open-source solutions, reducing the challenges of building models from scratch and minimizing the need for extensive datasets [6, 7]. Despite LLMs improving, they still struggle with domain-specific tasks, so RAG was developed [8]. RAG aims to make LLMs more practical by pulling in external data during the generative process, boosting their real-world effectiveness.\nRAG with LLMs is widely used in many areas, but it is not significantly explored in politics yet [9, 10]. There is a substantial lack of research on how it could improve the IE process and enhance political information systems. To fill this void, we present the integration of RAG with the LLM to create a Political EE system. The system offers several benefits: improved accuracy and efficiency in event extraction, immediate updates for users to stay informed, and enhanced credibility through attribution of information sources. By combining generative capabilities with external knowledge retrieval, the system provides comprehensive and reliable insights into the political landscape, facilitating informed decision-making and analysis for researchers and policymakers.\nThe paper is structured as follows: Section 2 delves into the relevant literature on Political EE and explores current applications of RAG with LLMs. Section 3 provides an overview of the system, demonstrating the integration of RAG with LLMs for political EE. In Section 4, the evaluation of the system is presented. Section 5 discusses the strengths and weaknesses of the system. Finally, Section 6 offers concluding remarks on the paper.\nLLMs represent a significant milestone in the field of NLP, showcasing unprecedented capabilities in understanding and generating human-like text across diverse domains [30]. These models, trained on massive datasets, possess a remarkable capacity for contextual understanding and language generation, making them invaluable tools for a wide range of NLP tasks. However, while LLMs excel in general applications, they often encounter challenges when tasked with domain-specific inquiries or when confronted with limited data availability. RAG emerges as a transformative solution to address these challenges by seamlessly integrating LLMs with external data retrieval mechanisms [8]. By augmenting LLMs with access to diverse sources of information during the generative process, RAG enhances their contextual understanding, relevance, and accuracy [8]. Numerous studies have explored the versatility of RAG across various domains. Han et al. [31] analyze tutoring practices using RAG with middle-school dialogue transcripts to aid educational decision-making. Alawwad et al. [32] examine RAG's effectiveness in handling out-of-domain scenarios, particularly in textbook QA across life, earth, and physical science lessons. Bucur et al. [33] employ RAG for automated form filling to enhance enterprise search functionalities. Zhang et al. [34] investigate RAG for financial sentiment analysis using Twitter news and FiQA datasets. Al Ghadban et al. [35] utilize RAG for frontline health worker capacity building, focusing on pregnancy-related guidelines for health education QA. Jeong et al. [36] introduce Self-BioRAG, a framework for biomedical text analysis. Xia et al. [37] propose a hybrid RAG model for real-time composition assistance, incorporating diverse datasets to enhance writing speed and accuracy. Rackauckas [38] employs RAG-Fusion for technical product information QA, while Shi et al. [39] introduce RACE, a system for commit message generation in code intelligence using multiple programming languages.\nAfter reviewing the mentioned studies, it is evident that combining RAG with LLMs shows significant promise in extracting structured data across diverse fields. This integration enhances contextual comprehension and ensures data accuracy, providing valuable insights for decision-making. However, despite its success in various domains, its application in politics remains relatively unexplored. Specifically, the potential of this fusion to refine the EE process and enhance political information systems warrants further investigation. To address this gap, we propose exploring the integration of RAG with LLMs to develop a Political EE system."}, {"title": "3. Political EE system", "content": "This section explores the details of political events, explaining their definition and presenting the various attributes that contribute to their contextual understanding. According to Davenport and Ball [40], political events encompass actions undertaken by political actors within specific temporal and spatial contexts. To facilitate this understanding, the proof-of-concept demonstration adopts the event property schema outlined by Halterman [41], which describes eight potential properties (see Fig. 1). These properties include the \"actor\" identifying the agent performing the action; the \"action\" describing the action itself; the \"recipient\" providing information about the actor receiving the action; and the \"instrument,\" encompassing objects or means used to carry out the action. Additionally, the \"reason\" property explains the cause of the reported event, while the \"time\" and \"location\" properties denote when and where the event occurred, respectively. Finally, the \"reporter\" property identifies the source that reported the event. While an event necessitates at least one action and one actor or recipient, the inclusion of other properties is optional, and sentences containing all eight pieces of information are relatively rare [41].\nHaving identified the key properties essential for constructing political events, we integrate the power of the RAG with LLM model, driven by GenAI, to automatically extract these events without the need for manual intervention in extracting each event property. To facilitate interactive exploration of political events, we opt to develop a Political EE system. Leveraging the expertise of LLMs in complex reasoning tasks, we explore several publicly available LLM releases, including GPT-4 [42], Llama2 [43], etc. For our proof-of-concept demonstration, we opted for LLama2 from the range of available LLMs. However, other LLMs are also viable options for exploration. To tailor the selected LLM specifically for political tasks and to effectively harness political EE from news articles, we have integrated RAG technology into our solution. This strategic fusion significantly enhances the system's capability to understand and address political-related queries using the extracted information. The system's ability to handle a variety of political queries depends on the quality and comprehensiveness of the provided news dataset. We chose to work with the News Category Dataset [44], which comprises news headlines published between 2012 and 2022, filtered to include only data from 2020 to 2022 for system development purposes. While this dataset is old, it offers comprehensive coverage of news articles related to political events. To develop the system (see Fig. 2), we utilized Algorithm 1, establishing a seamless connection between LLama2 and the dataset, thereby facilitating the creation of an RAG application.\nFirst, news articles and questions are provided as input (see Algorithm 1). The process begins by installing necessary packages like Transformers [45], langchain (langchain.com), and llama_index (llamaindex.ai), followed by importing required modules such as VectorStoreIndex and HuggingFaceLLM. System prompts and query wrapper prompts are defined for LLama2 to provide context and structure for the language model. Next, the algorithm logs in to Hugging Face using huggingface-cli to access the models and initializes the HuggingFaceLLM"}, {"title": "4. System Evaluation", "content": "The primary objective of evaluating the political EE system, constructed on the foundation of RAG with LLM model, was to enhance efficiency in extracting political events. The evaluation primarily focused on assessing the system's capability to accurately identify named entities, including individuals and organizations, while also extracting relevant properties associated with political events. To create a comprehensive test dataset, we manually curated a selection of 50 health-related political events from the dataset, with a representative subset outlined in Table 2. Subsequently, we conducted entity-to-entity comparisons utilizing the Cosine Similarity matrix, a method that computes the cosine of the angle between two vectors to gauge similarity in a high-dimensional space. Throughout the evaluation phase, the system consistently demonstrated robust performance, achieving an impressive accuracy rate of 0.87. This notable outcome underscores the effectiveness of the RAG-LLM model in proficiently extracting political events and accurately identifying named entities within health-related political contexts."}, {"title": "5. Discussion", "content": "The Political EE system, designed to extract political events through the fusion of RAG with LLM (specifically, the Llama2 model in our implementation), presents several key advantages. Firstly, it streamlines development by avoiding the trial-and-error process typically associated with constructing political EE tasks using classical NLP techniques. Leveraging pre-trained LLMs like Llama2 facilitates the rapid development of tailored political IE solutions with minimal cost and resource overhead, particularly advantageous for organizations with limited R&D budgets. Secondly, the system enables seamless dynamic updates to the domain dataset, allowing for effortless adaptation to the latest information by substituting outdated data files with up-to-date ones. This ensures constant tracking of new political events without interruption. Additionally, the system enhances the credibility and reliability of extracted information by attributing information sources through RAG, instilling confidence in users regarding the authenticity of the provided insights.\nHowever, the study encounters several limitations. While LLama2 was chosen, exploring different LLMs tailored for the political domain could yield valuable insights. The objective of this research was not to select the best LLM for political EE, but rather to showcase the integration of RAG with LLMs for understanding political events. Additionally, the system utilized an outdated dataset of news articles to demonstrate its functionality, chosen primarily due to its online availability. However, using the latest news dataset would better reflect the system's performance. Furthermore, the system operated on a small dataset to showcase its functionality, but employing extensive datasets with RAG may lead to slower response times for event extraction. This issue could potentially be mitigated by scaling up computational resources, such as increasing the number of Graphics Processing Units (GPUs), although at a considerable cost for companies with limited resources. Further research is warranted in this domain. Moreover, while the built system focused on utilizing news articles as the primary data source, political information originates from various channels such as social media (e.g., Twitter), government websites, etc. RAG should seamlessly integrate these diverse information sources to extract comprehensive and precise political insights. To achieve this, multi-source RAG architectures need to be explored. As news from online sources is a continuous process, it may not be optimal to scrape and integrate information manually into the system. Hence, real-time RAG solutions should be investigated to enable analysts to observe political dynamics in real-time."}, {"title": "6. Conclusion", "content": "IE plays a pivotal role in political science, transitioning from traditional methodologies to advanced machine learning techniques driven by third-generation approaches, particularly utilizing NLP for context-aware document analysis. LLMs have significantly expedited this progression, facilitating swift and accurate EE from news articles. Building upon this foundation, our study introduces the Political EE system, designed to assist analysts in navigating the complexities of political IE. By integrating RAG with LLM, the system transcends the limitations of classical NLP techniques, providing a streamlined approach to development devoid of the trial-and-error process. Notably, it offers dynamic dataset updates, enabling continuous adaptation to the latest political events, thereby ensuring uninterrupted exploration. Moreover, the system enhances the credibility and reliability of extracted information by attributing sources through RAG, adding confidence in users regarding the authenticity of the insights provided. As we move forward, the fusion of RAG with LLM holds immense potential to further revolutionize political EE, offering a robust framework for comprehensive and precise analysis in the dynamic landscape of political science."}]}