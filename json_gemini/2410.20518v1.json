{"title": "MIDITOK VISUALIZER: A TOOL FOR VISUALIZATION AND ANALYSIS OF TOKENIZED MIDI SYMBOLIC MUSIC", "authors": ["Micha\u0142 Wiszenko", "Kacper Stefa\u0144ski", "Piotr Malesa", "\u0141ukasz Pokorzy\u0144ski", "Mateusz Modrzejewski"], "abstract": "Symbolic music research plays a crucial role in music-related machine learning, but MIDI data can be complex for those without musical expertise. To address this issue, we present MidiTok Visualizer, a web application designed to facilitate the exploration and visualization of various MIDI tokenization methods from the Midi Tok Python package. MidiTok Visualizer offers numerous customizable parameters, enabling users to upload MIDI files to visualize tokenized data alongside an interactive piano roll.", "sections": [{"title": "1. INTRODUCTION", "content": "Symbolic music research plays a key role in advancing machine learning applications in music. However, the inherent structure of MIDI data often presents challenges to AI researchers without musical training or experience in music production. Unlike other data types, such as text, which are more intuitive to tokenize and process in modern models like transformers, MIDI requires a deeper understanding of musical theory and performance conventions. This gap in familiarity can hinder the development of more effective AI models in the field of music generation and analysis. Moreover, various methods for tokenizing MIDI have been proposed, but systematic comparisons of their effectiveness have only recently begun to receive attention in research [1].\n\nMidi Tok [2] has been a significant advancement in addressing these issues, as it consolidates multiple MIDI tokenization methods and presents them in a format compatible with transformer-based models. However, understanding these tokenization methods remains challenging for those with limited knowledge of MIDI. To make this more accessible, we introduce MidiTok Visualizer, a tool designed for visualizing and exploring tokenized MIDI files,\naimed at both lowering the barrier to entry and providing utility for experienced researchers alike."}, {"title": "2. SOFTWARE OVERVIEW", "content": null}, {"title": "2.1 Key functionality", "content": "MidiTok Visualizer is a web application designed for visualizing and analyzing MIDI file tokenization techniques from the Midi Tok Python package. The key capabilities of the tool are as follows:\n\n\u2022 Allows users to upload a MIDI file and view a graphical representation of the tokens generated by Midi Tok.\n\n\u2022 Provides an intuitive interface for exploring the structure and content of MIDI data.\n\n\u2022 Offers a user-friendly interface for configuring parameters related to the underlying Midi Tok methods.\n\n\u2022 Enables users to experiment with different tokenization settings.\n\n\u2022 Helps users gain deeper insights into the impact of specific parameters on the tokenization outcome.\n\nA central feature of the application is a piano roll designed to visualize the notes of the uploaded MIDI file alongside the stream of tokens. It allows highlighting specific tokens to view their corresponding notes within the piano roll and vice versa. Key musical metrics, including key signatures, time signatures, tempo, and pitch range, are displayed above the piano roll.\nMidiTok Visualizer also supports tabs corresponding to individual tracks and includes a built-in player that allows users to listen to the MIDI file."}, {"title": "2.2 Supported tokenizers", "content": "MidiTok Visualizer currently supports the following tokenizers:\n\n\u2022 CPWord [3]\n\n\u2022 MIDI-Like [4]\n\n\u2022 Octuple [5]\n\n\u2022 REMI [6]\n\n\u2022 Structured [7]\n\n\u2022 TSD [8]\n\nalong with dedicated, flexible configurations for each one of them. For a full parameter list for each tokenizer, please refer to the documentation of the original Midi Tok [2]."}, {"title": "2.3 Design choices", "content": "MidiTok Visualizer has a modular structure and uses FastAPI for the back-end and React for the front-end.\n\nWe use Pydantic for data validation and modeling and MusPy [9] for processing MIDI files and extracting key musical information, such as tempo and time signatures. Installing dependencies and running the back-end is simplified using the Poetry tool. We use Pytest for unit testing.\n\nThe application is also containerized with Docker and can be run with a single docker compose command."}, {"title": "3. LICENSE", "content": "MidiTok Visualizer is released under the GPL license, ensuring it is free for the community to use, modify, and distribute. Contributions from developers, researchers, and enthusiasts are highly encouraged. Whether it's adding new features, fixing existing bugs, or enhancing current capabilities, we welcome collaboration through our public GitHub repository 1."}, {"title": "4. CONCLUSION AND FURTHER WORK", "content": "We introduce MidiTok Visualizer, a functional tool for exploring and visualizing MIDI tokenization methods in a web interface. Its current capabilities allow users to interact with MIDI files and token streams, offering practical utility for both novice and experienced researchers. The tool serves as a foundational platform for further development in the symbolic music research domain, with the goal of increasing accessibility to MIDI data analysis.\n\nFuture work will focus on adding support for more tokenizers, handling more complex tokenization scenarios, as well as introducing additional visualization and editing features."}]}