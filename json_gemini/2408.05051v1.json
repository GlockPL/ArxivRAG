{"title": "A GNN Model with Adaptive Weights for Session-Based Recommendation Systems", "authors": ["Beg\u00fcm \u00d6zbay", "Resul Tugay", "\u015eule G\u00fcnd\u00fcz \u00d6\u011f\u00fcd\u00fcc\u00fc"], "abstract": "Session-based recommendation systems aim to model users' interests based on their sequential interactions to predict the next item in an ongoing session. In this work, we present a novel approach that can be used in session-based recommendations (SBRs). Our goal is to enhance the prediction accuracy of an existing session-based recommendation model, the SR-GNN model, by introducing an adaptive weighting mechanism applied to the graph neural network (GNN) vectors. This mechanism is designed to incorporate various types of side information obtained through different methods during the study. Items are assigned varying degrees of importance within each session as a result of the weighting mechanism. We hypothesize that this adaptive weighting strategy will contribute to more accurate predictions and thus improve the overall performance of SBRs in different scenarios. The adaptive weighting strategy can be utilized to address the cold start problem in SBRs by dynamically adjusting the importance of items in each session, thus providing better recommendations in cold start situations, such as for new users or newly added items. Our experimental evaluations on the Dressipi dataset demonstrate the effectiveness of the proposed approach compared to traditional models in enhancing the user experience and highlighting its potential to optimize the recommendation results in real-world applications.", "sections": [{"title": "1 INTRODUCTION", "content": "Recommender systems (RSs) have been playing an increasingly important role in e-commerce. In recent years, these systems have demonstrated significant effectiveness in delivering personalized suggestions to users, particularly through the utilization of deep learning techniques. In contrast to recommender systems that rely solely on user-item interactions without considering sessions, session-based recommendation systems predict user preferences or actions within a single interaction session rather than over a longer period. By analyzing the sequence of user interactions like clicks or views, these systems recommend items that are expected to be similar to the items within that particular session. Session-based recommender systems outperform traditional ones such as collaborative filtering and content-based filtering, particularly when users' past preferences are not available and change over time. Additionally, these systems have gained great popularity recently due to their ability to detect short-term or contextual user preferences for items. However, there are two challenges in session-based recommendation systems. Firstly, due to user anonymity, personal data cannot be utilized for recommendations. Secondly, there's variability in session lengths and the shortness of the sessions, especially in real-time data.\nSession-based recommendation systems are important in adapting to the dynamic nature of user interactions in online platforms, enabling personalized recommendations aligned with users' session-specific behaviors. Despite the advances brought by the SR-GNN (Session-based Recommendation with Graph Neural Network) [15] model in capturing sequential patterns and temporal dynamics in user sessions, a significant challenge remains in adapting to the varying importance levels of different elements within a session. This limitation allowed the development of an improved SR-GNN model that includes adaptive weights to dynamically adjust the importance of elements based on their relevance to the ongoing session. This development marks an important step towards improving the accuracy and personalization of recommendations within session-based recommendation systems.\nIntegration of adaptive weighting mechanisms within recommendation models allows for a more accurate assessment of element significance across user sessions. Traditional RSs often struggle to accurately reflect users' evolving preferences throughout a session. In response to this challenge, our proposed model with adaptive weights aims to address the limitations inherent in traditional approaches by dynamically adapting to the importance of items in each session. In this paper, we explore the technical details of the"}, {"title": "2 RELATED WORK", "content": "In this section, we first summarize deep learning applications for a session-based recommendation and then review the applications that incorporate side information to improve item prediction performance.\nDeep Learning-based SBRs have gained importance recently due to their effectiveness in modeling the relationship between items in users' shopping history. This approach allows researchers to develop various models for SBRs. GRU4Rec[7] adopts a gated recurrent unit (GRU) to capture the sequential behavior of users. Self-attention networks were also introduced in SBRs due to the significant performance improvement in the natural language processing (NLP) area. NARM employs an attention mechanism in RNN to capture the relationships in the sequence, and then generate the final representation of the session. TAGNN uses a target attention mechanism to capture the attention relationship between all session items and target items. TAGNN++[12] applies self-attention to TAGNN with the transformer module to learn a richer representation. SASRec[9] proposes a self-attention-based sequential model. Like SASRec, Transformer and BERT[3] were used to substitute attention representation modules in Transformer4Rec[13] and BERT4Rec[14] respectively, which benefit from pre-trained models using self-supervised learning and show remarkable performance in the next item prediction task. GNN gives a new perspective for SBRs, which takes the items in sessions as graph nodes and models complex dependency among items instead of a simple left-to-right one-directional sequence. SR-GNN models all session items into a session graph and uses a GNN to learn the transition relationship. NISER[5] uses normalized representations to help better learn long tail items and less popular new items. MSGIFSR[4] captures the interaction between different granularity intent units and relieves the difficulty of capturing long-range dependency, thus decreasing the information loss.\nNirGNN[8] is a novel GNN model for session new item recommendation (GSNIR) that addresses the challenge of recommending items that users have never interacted with in past sessions. To overcome this problem, NirGNN introduces a dual-intent learning method to simulate user decision-making processes and uses a zero-shot learning approach to extract new item representations. SimCGNN[1] introduces a model designed to solve the same last-item confusion problem by using the contrastive module to increase the differentiation between sessions interacting with the same last item.\nThree prominent models, SR-GNN, NARM, and TAGNN, were selected as baseline models in our study on session-based recommendation tasks using the Dressipi dataset.\nSR-GNN, serving as the foundational inspiration for the proposed new model, pioneers the modeling of sessions as graphs. It employs a GNN to create session graphs, obtaining item representations through a combination of global and local session representations processed by an attention network. The recommendation score is derived by multiplying the candidate item embedding with the relevant session representation, and SoftMax activation function is applied to represent the probability of the next click. The model is trained through cross-entropy loss minimization.\nNARM, designed to capture both short-term and long-term user interests, adopts a hybrid encoder to summarize the entire session and selectively focus on important items. It calculates the similarity between the resulting session representation and item embeddings, followed by SoftMax and ranking to derive recommendation scores. This approach effectively addresses the challenge of modeling sequential patterns in user behavior, resulting in more accurate recommendations.\nTAGNN introduces a target-aware attention mechanism that applies weighting by comparing the session representation with target item representations. This ensures that the model reflects the learned level of interest for the target item to be recommended. The adaptive activation feature allows TAGNN to create custom user interest profiles for different target items, enhancing the personalization and effectiveness of recommendations.\nIn contrast, we propose a novel framework that learns item weights via GNN, thereby assisting deep-learning models in achieving better learning outcomes. Additionally, prior deep learning models can integrate our weighting mechanism into their models. However, these deep learning-based methods only consider item-level information and ignore metadata information, which is essential for items that occur in historical sessions. The utilization of SBRs with side information in recommendation models is also an important research area. These models can provide more personalized recommendations using side information such as item features, users' background information, or other personal characteristics. FDSA[18] integrates item-level transitions and feature-level transitions by adding a self-attention mechanism based on SASRec. IAGNN[2] creates a category-sensitive graph with both item and item category nodes to represent complex transitions in the session. CoHHN [19] models price and interest preference simultaneously with the heterogeneous hypergraph network for SBRs. With"}, {"title": "3 METHODOLOGY", "content": "In this section, we provide an overview of the base model, SR-GNN, and explain the integration of the devised adaptive weighting method along with item side information into the model architecture."}, {"title": "3.1 Background Method", "content": "SR-GNN is a leading model in session-based recommendation systems that utilizes a GNN. This architecture effectively represents transitions between items during sessions, allowing it to capture complex interdependencies among items. By identifying underlying trends in user behavior, the algorithm generates accurate predictions for next-item recommendations. Leveraging graph topologies, SR-GNN significantly enhances both the scalability and accuracy of existing session-based recommendation algorithms."}, {"title": "3.2 Proposed Method", "content": "The objective of session-based recommendation is to predict the subsequent item a user will click, relying solely on the user's current sequential session data, without access to their long-term preference profile. In the context of a session-based recommendation system, a collection of items list represented with \\(V = \\{o_1, o_2, ..., o_v\\}\\), and a session sequence represented with \\(S_i = [o_1^{(i)}, o_2^{(i)},...,o_n^{(i)}]\\), where each \\(o_t^{(i)}\\) is an element from V included in a given session i. The number of interactions within the session is denoted by N and referred to as session length.\nThe model consists of four steps: modeling sessions as graphs, learning node representations, generating session representations, and making recommendations. The steps of modeling sessions as graphs and learning node representations are based on methods applied in the SR-GNN method. In the step of generating session representations, in addition to the global preference \\(S_g\\) and the current interest \\(S_l\\) of the user in that session, the \\(S_a\\) representation obtained with the session items weighted by the applied weighting mechanism is included. After obtaining the session representation (\\(S_a\\)) with the session items weighted by the applied weighting mechanism, we combine it with each session's global preference (\\(S_g\\)) and the user's current interest (\\(S_l\\)) in that session through a simple linear transformation to obtain the hybrid embedding. Within the framework of a session-based recommendation model, we generate a probability vector for every possible item. Each element within the vector represents the recommendation score of the corresponding item. The items with the high scores are considered potential recommendations for the session. We demonstrate the effectiveness of the proposed method through extensive experiments conducted on real-world datasets.\nAt first, to better predict users' next clicks, an approach was devised in which the side information associated with viewed items within a session was incorporated. This approach consists of two distinct stages and leverages side information representations to enrich the inherent characteristics of item representations. Firstly, the side information corresponding to the last item viewed within the session was appended to the local representation of the item. This method, termed SR-GNN-SI, aimed to capitalize on the most recent user interest to inform subsequent predictions. In this process, each item is represented as a vector in a latent space with its features. Adding side information to the last viewed item is intended to improve understanding of user preferences in the context of the session. Secondly, a complementary strategy was implemented whereby the session mean of side information was computed by aggregating the side information vectors of all items viewed within the session, and subsequently added to the representation vectors. This representation, referred to as the SR-GNN-MSI method, aimed to encapsulate the features of all viewed items within the session. Through the averaging process, the session-level representation, which serves as a global representation, was derived.\nSession ends play a critical role in understanding changing trends that reflect current user preferences and consider short-term preference changes. It is extremely important to understand these changing trends over time in sessions. In our work, we develop a custom weighting formula that dynamically evaluates the user's interactions over time within the session to focus on the final parts of the session and prioritize session elements. Using the session element weights calculated in this formula, we create a strategy that allows it to better understand current preferences. This weighting strategy is designed to prioritize some parts of the session, in line with our goal of providing users with more effective and personalized recommendations.\nThe vectors derived from the GNN are weighted to incorporate an adaptive feature. When the similarity results between the vector of each session element and the last element are passed directly to the SoftMax layer, the element with the highest similarity value will have the highest weight. However, considering that the closeness of an item to the end of a session is supposed to enhance its significance within the session, we decided to incorporate session order information as well. We assign a new order to the items using the"}, {"title": "4 EXPERIMENTAL RESULTS", "content": "In this section, we first evaluate the performance of three distinct baseline models against the proposed model. Then, in the second set of experiments, we further evaluate the enhancements of each SR-GNN model by incorporating both the last item side information and mean side information. These enhancements were applied at varying data rates, denoted by the parameter 1/k. The 1/k notation represents the fraction of the original dataset used for training, with k being an integer. For instance, if k is 64, then 1/64 of the dataset was utilized for training. By varying the parameter k, different proportions of the dataset were sampled for training, allowing for an analysis of model performance under varying data availability conditions.\nIn another experiment, adaptive weights were introduced to address the cold start problem, which refers to the challenge of making accurate predictions for new or rarely seen items with limited available data. The notation 1/k denotes the fraction of the dataset used for training, where a smaller value of k indicates a smaller proportion of the dataset being utilized. By using a smaller portion of the dataset, the cold start problem arises as less historical data is available for training models, making it more challenging to generate accurate predictions for items that have sparse interactions in the dataset. Additionally, parameters such as how long the sessions would be and what the t value would be when using adaptive weight were also examined. These experiments aimed to evaluate the performance of different model configurations and to determine the most effective parameters that will provide a solution to the cold start problem."}, {"title": "4.1 Dataset", "content": "In this study, we analyze Dressipi's public dataset from the 2022 RecSys challenge, which contains one million online retail sessions based on item sequences and corresponding label data. All items in this dataset are tagged with content data, and tags are assigned using Dressipi's human-in-the-loop system. The dataset was sampled and anonymized. Since sessions are usually short, it was emphasized that it is important to have a high-fidelity in-session recommender that can respond to the user's current session activities and make recommendations that can create the best possible experience. The Dressipi dataset is focused on buying sessions, with each session containing one item purchased.\nThe total number of items in the session data, the features of the items in the label data, and the different values of these features are given in Table 1. Items have 904 unique feature-value pairs, such as the pair 'color: green'. In addition, each item has a different number of features because the types of items vary in the data, which includes clothing and footwear.\nIn neural network approaches used as recommendation models for session-based recommender systems, it has been shown that training on a more recent part of the dataset yields slightly better results than training on the entire dataset. Since we are working with data that is large and needs to account for user behavior that changes over time, three different data sets obtained by proportioning were used in the experiments. The 17-month dataset was first sorted chronologically, and the sessions of the subsequent day were used as testing sessions. Then, we reported our results on models trained on the more recent 1/128, 1/64, 1/32, and 1/4 fractions of the training sequences and the full data. Note that when we train the model only on the more recent fractions, some items in the test set will not appear in the training set.\nThis means that some items in the test set are not seen and learned by the model, especially if older data fractions are not used. This can create a training case that is closer to the real-world use of the model since in the real world there are user preferences and behaviors that change over time. Therefore, focusing the model on more recent data can improve recommendation performance, but it can also result in some elements being missing. Being aware of this is important when evaluating the performance of the model."}, {"title": "4.2 Performance Evaluation", "content": "Since recommender systems can only recommend a few items at a time, the actual item that the user can select should be among the first few items on the list. We therefore use the following two key metrics to evaluate the performance of recommendation lists. These metrics are commonly used to evaluate how effectively recommendation systems adapt to real-world use cases.\n*   MRR@20: Mean Reciprocal Rank (MRR), which is the average of reciprocal ranks of the desired items. In the case of a rank higher than 20, the reciprocal rank is set to zero. MRR considers the ranking of each item, in scenarios where the sequence of recommendations is important.\n*   Recall@20: The Recall@20 is the proportion of cases in which the desired item appears among the top 20 items. This metric plays a critical role in determining the effectiveness of recommendation systems."}, {"title": "4.3 Results", "content": "Base models were chosen due to their established performance in the field of session-based recommendation, which allows easy evaluation of proposed improvements. We used the 1/64, 1/4, and 1/1 ratios as inputs for the SR-GNN, NARM, and TAGNN base models, and the results are included in Table 3. These ratios indicate different levels of data representation; where 1/1 corresponds to the entire dataset, 1/64 and 1/4 represent retrieving the last parts when the sessions are sorted.\nTo enhance the model's capabilities, we introduced two variations: SR-GNN-SI and SR-GNN-MSI. SR-GNN-SI integrates side information from the last item into the local representation, while SR-GNN-MSI incorporates the average side information from all items in a session into the global representation. When the results are examined, it is seen that SR-GNN-MSI performs best on Recall@20 and MRR@20 metrics. In particular, SR-GNN-MSI shows higher performance than other configurations at 1/4 and 1/1 data representation ratios. This indicates that taking global structures of session data into account increases the predictive ability of the model. While SR-GNN-SI generally performs slightly better than SR-GNN, it provides a significant improvement in the Recall@20 metric for SR-GNN (1/4). However, for SR-GNN (1/64), this improvement is less pronounced. The results highlight the importance of using side information for session-based recommendation systems, especially global side information integration such as SR-GNN-MSI. This indicates that modeling user behavior more comprehensively can improve recommendation accuracy"}, {"title": "5 CONCLUSION", "content": "This study presents a novel approach for session-based recommendation. Introducing an adaptive weighting mechanism to the GNN vectors, with a focus on considering the last item in a session, has proven to be a novel and effective approach. By computing similarities between all items within a session and the concluding item, a weighted scheme is established, assigning varying degrees of importance to items. Experimental evaluations on the Dressipi dataset demonstrate the superiority of the adaptive weighting strategy over the conventional SR-GNN model, highlighting its potential to markedly enhance predictive accuracy in session-based recommendation scenarios. Additionally, experiments conducted on datasets of varying sizes offer a solution to the cold start problem, further enhancing the versatility and applicability of the proposed method while suggesting its relevance in real-world applications.\nIn future work, we plan to investigate the scalability of the proposed method to larger datasets and more complex recommendation scenarios, as this could provide valuable insights into its practical applicability. Additionally, we aim to explore the incorporation of additional contextual information beyond the last item in a session, as this has the potential to further enhance the model's performance and could lead to novel findings in session-based recommendation research. These directions offer promising avenues for advancing the effectiveness and applicability of our proposed approach in real-world settings."}]}