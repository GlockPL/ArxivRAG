{"title": "SkyRover: A Modular Simulator for Cross-Domain Pathfinding", "authors": ["Wenhui Ma", "Wenhao Li", "Bo Jin", "Changhong Lu", "Xiangfeng Wang"], "abstract": "Unmanned Aerial Vehicles (UAVs) and Automated Guided Vehicles (AGVs) increasingly\ncollaborate in logistics, surveillance, inspection tasks and etc. However, existing simulators often\nfocus on a single domain, limiting cross-domain study. This paper presents the SkyRover, a\nmodular simulator for UAV-AGV multi-agent pathfinding (MAPF). SkyRover supports realistic\nagent dynamics, configurable 3D environments, and convenient APIs for external solvers and\nlearning methods. By unifying ground and aerial operations, it facilitates cross-domain algorithm\ndesign, testing, and benchmarking. Experiments highlight SkyRover's capacity for efficient\npathfinding and high-fidelity simulations in UAV-AGV coordination. Project is available at\nhttps://sites.google.com/view/mapf3d/home.", "sections": [{"title": "Introduction", "content": "The rapid growth of automation and artificial intelligence has significantly broadened unmanned\nsystems' application domains, especially in logistics and transportation. Companies like Amazon, JD,\nand Cainiao routinely deploy automated guided vehicles (AGVs) in large-scale warehouses[Qin+22,\nWur+08, Zha+20], while autonomous taxi services from Waymo and Baidu Apollo Go have begun trial\noperations globally[Sun+20, Wan+24]. Meanwhile, the low-altitude economy has gained momentum\nwith drone-based package delivery, low-altitude tourism, and urban air mobility. Commercial drone\ndelivery services by Amazon Prime Air and Meituan already enhance last-mile logistics[Dor+16,\nEng+23, Sun+24].\nAlongside these developments, collaborative UAV-AGV systems are increasingly vital in freight\ntransportation[Gao+20], search and rescue[Zha+24], precision agriculture[Tok+16], and infrastruc-\nture inspection[Wu+20], among other domains[Mun+24]. AGVs follow terrestrial routes, while\nUAVs operate in three-dimensional or restricted airspaces. Their synergy can boost operational"}, {"title": "Related Work", "content": "Extensive progress has been made in solving MAPF for single-domain vehicles[Ma22, Sal+20, Sur22].\nPrevious simulators such as [Mal22, Ng+19, Oku+21, Skry+24, Wan+24] have tackled various forms\nof agent-based simulation, yet few focus on integrated UAV-AGV scenarios. Moreover, many existing\nplatforms concentrate on either 2D grids or simplified 3D representations, limiting the study of aerial\nand ground interactions. By contrast, SkyRover explicitly targets these cross-domain concerns,\noffering realistic physics, 3D occupancy grids, and unified APIs. To our knowledge, it is the first\nenvironment to natively support collaborative UAV-AGV MAPF under a single, modular framework."}, {"title": "SkyRover Simulator", "content": "Following the motivations outlined in Section 1, we present SkyRover, a modular simulator designed\nto address cross-domain pathfinding for UAV-AGV coordination. It aims to unify the modeling of\nground and aerial vehicles in 3D grids while maintaining ease of use, modularity, and compatibility\nwith third-party robotic frameworks. Figure 1 depicts its overall architecture, which comprises five\nmain modules: 1) the Sim World Zoo; 2) the 3D Grid Generator; 3) the Unified Algorithm Wrapper;\n4) the Plan Executor; 5) the System Interface. This section details each module and explain how\nthey collectively enable rapid experimentation and deployment of cross-domain MAPF solutions."}, {"title": "Sim World Zoo", "content": "The Sim World Zoo houses multiple Gazebo simulation worlds[Koe04], along with 3D models\nfor UAVs and AGVs. Unlike simulators that rely solely on matrix-based grids, SkyRover offers\nmore realistic environments by integrating detailed 3D worlds. Currently, SkyRover includes a"}, {"title": "3D Grid Generator", "content": "Although SkyRover supports high-fidelity worlds, it also maintains a 3D grid representation for\nMAPF algorithms. The 3D Grid Generator automatically derives discrete map information\nfrom Gazebo environments. To achieve this, it employs a Gazebo plugin that creates a ROS2\nservice[Mac22] for capturing a 2D .pgm map and a 3D .pcd (point cloud) file. These files reflect\nthe layout of objects and obstacles in the environment. Subsequently, the point cloud data is parsed\nto mark grid cells as free or occupied, generating a 3D occupancy grid suitable for both search- and\nlearning-based algorithms."}, {"title": "Unified Algorithm Wrapper", "content": "MAPF algorithms generally fall into either search-based or learning-based categories[Har68, Sha+15,\nMa21]. They also vary in their internal map structures, with some operating on matrices and others\non more general graphs. To standardize these approaches, SkyRover provides a Unified Algorithm\nWrapper that abstracts the environment as a 3D grid with consistent interface calls, such as init:\ninitializes the environment, obstacle data, agent start states, and goal locations; step: advances the\nsimulation by one timestep, updating agent positions; and reset: resets the simulation for new tasks\nor training episodes. We provide 3D versions of popular MAPF algorithms, including 3D A*[Har68],"}, {"title": "Plan Executor", "content": "High-level path planners often produce routes in discrete grids or graphs, but real robots need\ncontinuous control inputs. The Plan Executor bridges this gap by translating each agent's planned\ntrajectory into commands interpretable by low-level controllers. The executor tracks each agent's\npath, communicates with external control frameworks (e.g., PX4[Mei15] or Navigation2[Nav25]),\nand updates agent positions in the simulator. This arrangement allows SkyRover to support both\nabstract, high-level pathfinding and more realistic, hardware-oriented simulations."}, {"title": "System Interface", "content": "The SkyRover also offers multiple external interfaces to integrate with established robotics tools.\nUsers can manipulate Gazebo models via Gazebo topics, visualize 3D occupancies with RViz[Kam15],\nand command PX4-based drones through ROS2 topics and MicroXRCE[Pro24]. This flexibility\nsupports varied applications, ranging from hardware-in-the-loop testing to large-scale simulation.\nUltimately, SkyRover allows researchers and practitioners to incorporate realistic dynamics, robust\nvisualization, and real-time interactivity into customized UAV-AGV cooperative scenarios."}, {"title": "Experiment", "content": "In this section, we demonstrate how SkyRover supports diverse experimental setups. We showcase\nthe simulator using two distinct Gazebo worlds: a warehouse (Figure 2a) and a park (Figure 2b).\nThese worlds serve as representative testbeds, featuring varied layouts that allow us to highlight\nthe simulator's 3D mapping, pathfinding, and visualization capabilities. We define two typical\nAGV-UAV interaction tasks:\n\u2022 Inventory Scanning Task: The AGV transports cargo to point A, where a UAV hovers\nabove the AGV to scan and inventory the cargo. After the scanning process is completed, the\nAGV continues transporting the cargo to point B;\n\u2022 Aerial Cargo Transfer Task: The AGV transports cargo to point A, where a UAV arrives\nand hovers above the AGV to pick up the cargo. The UAV then lifts the cargo and transports\nit to an elevated point B.\nThese tasks demonstrate the seamless coordination between AGVs and UAVs in different\nscenarios, showcasing the effectiveness of SkyRover in simulating complex robotic interactions."}, {"title": "Environment Setup", "content": "We begin by loading the chosen Gazebo world and generating a 3D occupancy grid using the\ngazebo-map-creator plugin[Ars22]. This plugin extracts a point cloud of the environment, which is\nconverted into a 0-1 grid where each cell spans 1 meter. Cells containing point cloud particles are\ntreated as obstacles and labeled \"1,\" while free cells remain \"0.\" The resulting 3D grid is published\nto RViz for real-time visualization (Figure 2c)."}, {"title": "3D MAPF Examples", "content": "After generating the occupancy grid, we deploy 6 Holybro X500 drones and 16 AGVs. We assign\neach agent a unique start and goal location in the warehouse world. Via the init interface of\nalgorithm wrapper, we load the 3D-A* and 3D-CBS solvers. During initialization, these solvers\ncompute complete, conflict-free paths for all agents. At each timestep, the step function moves\nevery agent to its next waypoint, ensuring collision-free navigation.\nWe also implement a 3D version of the learning-based method, DCC[Ma21]. Here, we adapt the\noriginal 2D convolution layers to 3D, and employ curriculum learning to train for 70,000 episodes\nin a random 40 \u00d7 40 \u00d7 40 grid. This trained model reaches 100% success under test conditions\nwith sixteen agents. Unlike search-based algorithms, which plan entire routes beforehand, the\nlearning-based approach invokes the step function to infer actions online after loading the model file.\nThis approach suits dynamic environments where complete pre-planning is less feasible."}, {"title": "Motion Control Integration", "content": "For many studies, abstract position updates are sufficient for benchmarking algorithmic performance.\nIn these cases, we simply invoke Gazebo's model-position service to teleport each agent, bypassing\ndetailed dynamics. However, SkyRover also supports low-level motion control through PX4[Mei15]\nand Navigation2[Nav25]. Figure 2d shows an example involving a drone controlled by PX4 and a\nTurtleBot commanded by Navigation2. These finer-grained simulations accurately capture kinematic\nand dynamic constraints, which are essential for hardware-in-the-loop testing. Although more\ncomputationally intensive, these setups are valuable for research on real-time control, multi-robot\ncoordination, and safety validation. Users can choose the approach abstract or low-level-based\non the complexity of their experiments and available computing resources."}, {"title": "Preliminary Results and Comparison", "content": "We conduct all experiments on Ubuntu 24.04 with ROS 2 Jazzy, Gazebo Harmonic, and the main\nbranch of PX4, using a PC with an Intel i7 CPU and 32 GB RAM. Table 1 presents preliminary\nperformance metrics comparing 3D variants of A*, CBS and DCC on the warehouse world when\n22 total agents (6 drones, 16 AGVs) must reach randomly assigned goals. Computation time\nmeasures the total time to compute or infer a path before the first move, while Success rate\nindicates the percentage of agents reaching their target without collision in a single run.\nThese initial comparisons highlight SkyRover's ability to benchmark MAPF algorithms in a\nunified and consistent framework. Future work could involve more in-depth evaluations, including\nscaling to larger agent teams and investigating runtime on different hardware setups."}, {"title": "Conclusion and Future Directions", "content": "In this paper, we introduce SkyRover, a modular simulator paving the way for integrated UAV-AGV\nMAPF in 3D environments. It combines realistic Gazebo worlds, a robust 3D grid generator,\nunified wrappers for classical and learning-based algorithms, and seamless integration with external\nrobotics software. Experiments in the warehouse and park worlds confirmed its flexibility for discrete\npathfinding and low-level control simulations.\nLimitations Current limitations include partial modeling of real-world effects (e.g., weather,\nsensor noise) and the computational load of large-scale simulations. Learning-based methods also\nrequire extensive training data, and the hyperparameter optimization might be time-intensive.\nFuture Directions Going forward, we plan to integrate more realistic physics (wind perturbations,\ncomplex friction models), advanced sensor types (LiDAR, radar), and dynamic obstacle handling."}]}