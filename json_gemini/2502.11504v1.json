{"title": "Accelerated Gradient-Based Design Optimization Via Differentiable Physics-Informed Neural Operator: A Composites Autoclave Processing Case Study", "authors": ["Janak M. Patel", "Milad Ramezankhani", "Anirudh Deodhar", "Dagnachew Birru"], "abstract": "Simulation and optimization are crucial for advancing the engineering design of complex systems and processes. Traditional optimization methods require substantial computational time and effort due to their reliance on resource-intensive simulations, such as finite element analysis, and the complexity of rigorous optimization algorithms. Data-agnostic AI-based surrogate models, such as Physics-Informed Neural Operators (PINOs), offer a promising alternative to these conventional simulations, providing drastically reduced inference time, unparalleled data efficiency, and zero-shot super-resolution capability. However, the predictive accuracy of these models is often constrained to small, low-dimensional design spaces or systems with relatively simple dynamics. To address this, we introduce a novel Physics-Informed DeepONet (PIDON) architecture, which extends the capabilities of conventional neural operators to effectively model the nonlinear behavior of complex engineering systems across high-dimensional design spaces and a wide range of dynamic design configurations. This new architecture outperforms existing state-of-the-art models, enabling better predictions across broader design spaces. Leveraging PIDON's differentiability, we integrate a gradient-based optimization approach using the Adam optimizer to efficiently determine optimal design variables. This forms an end-to-end gradient-based optimization framework that accelerates the design process while enhancing scalability and efficiency. We demonstrate the effectiveness of this framework in the optimization of aerospace-grade composites curing processes achieving a 3x speedup in obtaining optimal design variables compared to gradient-free methods. Beyond composites processing, the proposed model has the potential to be used as a scalable and efficient optimization tool for broader applications in advanced engineering and digital twin systems.", "sections": [{"title": "1 Introduction", "content": "Simulation and optimization play a pivotal role in modern engineering, serving as essential tools for analyzing, designing, and enhancing complex systems and processes. Engineers leverage simulation models to explore design spaces, evaluate performance, and guide decision-making through optimization. Traditionally, numerical simulation methods, such as finite element analysis, have been widely used in combination with optimization algorithms to determine optimal design variables [29, 4, 30]. However, these methods are computationally expensive and time-intensive, making them less practical for real-time or iterative-based design processes [38]. To address these challenges, machine learning-based surrogate models have been developed as alternatives to reduce computational costs [20, 31, 37]. Once trained, these models provide fast predictions, enabling near real-time optimization. However, surrogate models often require large datasets for training, which is prohibitive in many industrial scenarios with data scarcity, resulting in unreliable or physically implausible predictions.\nRecently, Physics-Informed Neural Networks (PINNs) are introduced [22], which incorporate governing partial differential equations (PDEs) into the loss function of a neural network. This allows the model to learn directly from the underlying physics, combining the strengths of numerical methods with machine learning-based surrogate modeling. While PINNs offer a promising alternative for solving PDEs without requiring labeled data, they are typically trained on fixed initial and boundary conditions (ICs/BCs) [34]. This limitation makes them less practical for iterative design optimization tasks, where system configurations (e.g., different BCs) frequently change. In contrast, neural operators such as DeepONet [16] and Fourier neural operator (FNO) [14], which directly map infinite-dimensional input-output function spaces on bounded domains, are capable of learning a family of PDEs rather than a single instance [2, 11]. Inspired by PINNs, Physics-Informed Neural Operators (PINOs) extend this capability by incorporating physics constraints into the loss function, allowing them to solve PDE families without relying on data [36, 6]. Unlike PINNs, PINOs enable real-time predictions under varying conditions, making them ideal for design optimization. Despite the advantages of PINOs in capturing system dynamics under varying conditions, existing architectures may struggle with high-dimensional and large design spaces for real-world engineering problems. Additionally, traditional gradient-free optimization methods, such as Particle Swarm Optimization (PSO) [18] and Genetic Algorithms (GA) [27], often require a large number of function evaluations, making them computationally expensive and inefficient for high-dimensional optimization [1].\nTo address these challenges, we propose an accelerated gradient-based optimization framework tailored for advanced engineering design. Specifically, Our work focuses on composite materials processing, where achieving an optimal cure cycle is critical for ensuring material quality. Composite materials are extensively used in aerospace, automotive, and marine industries due to their high strength, durability, and lightweight properties [13]. These materials undergo a polymerization process governed by a temperature and pressure cycle known as the cure cycle [28]. The cure cycle must be optimized to ensure uniform resin curing while minimizing residual stress and deformation [8]. Since changes in part geometry or material properties often require adjustments to the cure cycle, optimization becomes essential for ensuring high-quality and reliable composites.\nNumerous studies have utilized PINO models to simulate the thermochemical evolution of composites during autoclave curing. For instance, a Physics-guided Neural Operator is developed for composite manufacturing [3]. Similarly, physics-informed FNO was applied to analyze the curing process of carbon-fiber composites [17]. Furthermore, a Physics-Informed DeepONet, enhanced with advanced features such as nonlinear decoders and curriculum learning is developed for modeling complex thermochemical processes [23]. However, the predictive performance of these models remains satisfactory only when applied to single-variable designs, limited design spaces, or systems with low behavioral complexity. This limitation may arise from the inherent constraints of the original neural operator architecture in handling nonlinear and stiff problems, as well as complex physics-informed loss landscape [12] and neural network's spectral bias [21]. To address these challenges and ensure that the developed surrogate model remains accurate when exposed to high-dimensional and large design spaces for optimization tasks, we propose an advanced Physics Informed DeepONet (PIDON) architecture. In particular, it incorporates domain decomposition with separate DeepONets allocated to each temporal subdomain, as well as input coordinate normalization to mitigate spectral bias [19]. Furthermore, each subdomain is equipped with a nonlinear decoder to better capture the complex dynamics of the PDE. The proposed PIDON model serves as an efficient and accurate surrogate for inverse design, enabling near real-time spatiotemporal predictions for given design conditions. This capability enhances design space exploration and accelerates the identification of optimal design variables to achieve desired material properties. Leveraging the differentiability of PIDON [15], we utilize a gradient-based optimization technique, which significantly reduces the number of function evaluations and improves scalability for larger design spaces compared to gradient-free methods [1]. The Adam optimizer [10] is used to obtain the optimal design variables. We benchmark this framework against gradient-free methods, including PSO and GA. The main contributions of this paper are summarized as:\n\u2022 Design and implement an improved PIDON model for composites manufacturing, enabling an accurate and accelerated exploration of high-dimensional and large design spaces.\n\u2022 Develop an end-to-end AI-driven design optimization framework enabling 3\u00d7 speedup over conventional gradient-free approaches."}, {"title": "2 Methodology", "content": ""}, {"title": "2.1 Composites autoclave processing", "content": "The autoclave processing in the manufacture of composites involves placing resin-impregnated fibers and a tool into an autoclave, where the system undergoes a cure cycle to achieve the desired material properties, as illustrated in Figure 1.a. The temperature distribution within the part (Tc) and tooling (Tt), along with the progression of the resin's degree of cure (DOC), are critical state variables in composites systems. The thermochemical behavior of a 1D composite-tool system in an autoclave is described by the following one-dimensional anisotropic heat conduction equation:\n$\\begin{aligned}\n&\\frac{\\partial T_{t}}{\\partial t}=\\alpha_{t} \\frac{\\partial^{2} T_{t}}{\\partial z^{2}} \\quad z \\in\\left[0, L_{t}\\right] \\\\\n&\\frac{\\partial T_{c}}{\\partial t}=\\alpha_{c} \\frac{\\partial^{2} T_{c}}{\\partial z^{2}}+\\frac{\\partial \\alpha}{\\partial t} b_{c} \\quad z \\in\\left[L_{t}, L_{c}\\right]\n\\end{aligned}$\n(1)\nHere, T is the temperature, $\\alpha$ is DOC, Lc is the material length, Lt is the tool length, and t and z are the spatiotemporal coordinates. The subscripts t, c, and r represent the tool, composite part, and resin, respectively. The parameter $\\alpha$ denotes the thermal diffusivity, and b represents the heat generation coefficient. For the curing process of a composite system with thermoset resin, the cure rate is governed by the resin's cure kinetics, which are typically represented by an ordinary differential equation. For the AS4/8552 epoxy resin system, it can be expressed as follows[8]:\n$\\frac{\\partial \\alpha}{\\partial t}=A \\exp \\left(-\\frac{\\Delta E}{R T}\\right) \\frac{1}{1+\\exp \\left(C\\left(\\alpha-\\left(C_{0}+C_{T} T\\right)\\right)\\right)} \\alpha^{m}(1-\\alpha)^{n}$\n(2)\nwhere, \u0394\u0395 represents the activation energy, R is the gas constant, and C\u043e, \u0421\u0442, m, n, and A are experimentally determined constants and parameter. The values used for this study can be found in [9]. Considering the convective heat transfer between the autoclave air Ta and the composite system, the boundary conditions are governed by:\n$\\begin{aligned}\n&h_{\\text {top }}\\left(T_{a}-\\left.T_{c}\\right|_{z=L_{c}}\\right)=\\left.k_{c} \\frac{\\partial T_{c}}{\\partial z}\\right|_{z=L_{c}} \\\\\n&h_{\\text {bot }}\\left(\\left.T_{t}\\right|_{z=0}-T_{a}\\right)=\\left.k_{t} \\frac{\\partial T_{t}}{\\partial z}\\right|_{z=0}\n\\end{aligned}$\n(3)\nHere, htop and hbot are the convective heat transfer coefficients (HTCs) on the top and bottom surfaces of the composite-tool system, respectively, while ke and kt represent the thermal conductivity of the composite and tool, respectively. The initial temperature of the part is typically assumed to be uniform throughout. For this study, we assume an initial temperature of 20\u00b0C. The initial DOC is assumed to be either zero or a very small value for an uncured part and in this study, is set to 0.05. The part thickness is fixed for this study, while the tool thickness is included as one of the design variables. To manage inconsistencies in the total system length and interface location resulting from variations in tool thickness, local coordinates are introduced, following the approach outlined by [23].\nA typical two-hold cure cycle consists of two distinct stages where the air temperature is held constant at specific levels for predetermined durations. This approach enables a controlled progression of the curing process, allowing optimal material properties to be achieved while minimizing potential issues such as under-curing or over-curing [5]. The cure cycle is defined using six key design variables: heating rates r\u2081 and r2 (the rate at which the air temperature inside the autoclave increases), hold durations hd\u2081 and hd2 (the time periods for which the temperature is maintained constant at the respective hold temperatures) and hold temperatures ht\u2081 and ht2 (the target temperatures held during the first and second stages)."}, {"title": "2.2 Differentiable Simulator: Physics Informed DeepONet", "content": "The architecture of DeepONet has two primary components: a branch and a trunk network [16]. The branch network takes as input the sensor point evaluations u = [u(x1), u(x2),..., u(xm)] and generates a feature representation b = [b1,b2,..., bq]T \u2208 R\u00ba as its output. Similarly, the trunk network encodes the spatiotemporal coordinates of the PDE system y into a feature embedding t = [t1, t2, ..., tq]T \u2208 R\u00ba, with the same dimensionality as the output of the branch network. The outputs from these networks are combined using an element-wise product operation, followed by summation, to produce the final output of the DeepONet:\n$G_{\\Theta}(u)(y)=\\sum_{k=1}^{q} b_{k} t_{k}+b_{0}$\n(4)\nData-driven DeepONet often requires large amounts of training data, which can be difficult to access in many real-world engineering applications. The physics-informed variant of DeepONet, namely PIDON, integrates governing equations directly into the loss function as regularizers, eliminating DeepONet's reliance on data. Specifically, the output of the PIDON is constrained to satisfy the governing equations by minimizing the loss function:\n$L(\\Theta)=L_{I C}(\\Theta)+L_{B C}(\\Theta)+L_{p h y s i c s}(\\Theta)$\n(5)\nwhere LIC, LBC, and Lphysics represent the initial condition (IC) loss, boundary condition (BC) loss, and physics loss, respectively. Assuming a constant initial condition and a Robin boundary condition in the introduced composites case study, LIC and LBC can be expressed as:\n$L_{I C}(\\Theta)=\\frac{1}{N Q_{i c}} \\sum_{i=1}^{N} \\sum_{j=1}^{Q_{i c}}\\left(\\left.G_{\\Theta}(u)^{(i)}\\left(y^{(j)}\\right)-s^{(i)}\\left(y^{(j)}\\right)\\right|^{2}\\right)$\n(6)\n$L_{B C}(\\Theta)=\\frac{1}{N Q_{b c}} \\sum_{i=1}^{N} \\sum_{j=1}^{Q_{b c}}\\left|\\alpha G_{\\Theta}(u)^{(i)}\\left(y^{(j)}\right)+\\beta \\nabla G_{\\Theta}(u)^{(i)}\\left(y^{(j)}\\right)-\\gamma\\right|^{2}$\n(7)\nHere, u(i) denotes the i-th input function, y(j) represents the j-th collocation point, and G\u0398 is the output of the PIDON. The term s(i)(y(j)) corresponds to the solution of the partial differential equation (PDE) at y(j), conditioned on the i-th input function. For the Robin boundary condition, \u03b1, \u03b2, and \u03b3 are non-zero constants determined by the physical characteristics of the problem. The physics loss Lphysics is defined as:\n$L_{p h y s i c s}(\\Theta)=\\frac{1}{N Q} \\sum_{i=1}^{N} \\sum_{j=1}^{Q}\\left|N\\left(G_{\\Theta}(u)^{(i)}, G_{\\Theta}(u)^{(i)}\\left(y^{(j)}\\right)\\right)\\right|^{2}$\n(8)\nHere, N denotes the nonlinear differential operator. The parameter N represents the number of distinct input function combinations sampled from the design space, whereas Q indicates the number of residual points employed to enforce the physical constraints. These N and Q are hyperparameters that can be tuned to balance the model's performance and computational efficiency. DeepONet is considered differentiable because it is a neural network-based approach that learns a solution operator, and a neural network is a differentiable function [16]."}, {"title": "2.2.1 Proposed Architecture of PIDON", "content": "We introduce a novel PIDON architecture designed to model the highly nonlinear dynamics of composite-tool systems during the curing process. The key components of the framework are outlined below."}, {"title": "2.2.2 Training Procedure", "content": "As depicted in Figure 1.c, the proposed PIDON framework is trained sequentially across multiple temporal subdomains. The training process begins with the initialization and training of the first sub-PIDON module (sub-PIDON 1) using the system's global IC across the design space (i.e., input functions). Upon completion of its training, this module generates predictions that serve as the local IC for the subsequent sub-PIDON module (sub-PIDON 2). In this manner, the IC for each subdomain is determined based on the predictions of the preceding sub-PIDON model, as indicated by the green arrows in Figure 1.c. This iterative process continues until all sub-PIDON modules corresponding to the defined subdomains are fully trained. The subdomains are initially partitioned into segments of equal width; however, their widths are adaptively refined during training. Specifically, if the total training loss for a given subdomain fails to reach a predefined threshold, the subdomain is further subdivided into two smaller intervals, thereby simplifying the learning task for the corresponding sub-PIDON modules. This adaptive approach enables more substantial progression in regions of the time domain where nonlinearity is less pronounced, while ensuring that highly complex regions are modeled with finer resolution. As a result, the framework maintains both computational efficiency and predictive accuracy across varying levels of system complexity."}, {"title": "2.3 AI-Driven Accelerated Design Optimization Framework", "content": "We developed an AI-driven accelerated design optimization framework for composite synthesis in autoclaves, as illustrated in Figure 2. This framework integrates a generalized, accurate, and computationally efficient PIDON model, serving as a differentiable simulator to optimize the curing process. By leveraging the zero-shot super-resolution capabilities of PIDON across diverse design parameters and its differentiability for gradient-based optimizers like Adam, our framework enables rapid and efficient exploration of design variables."}, {"title": "2.3.1 Design Tasks", "content": "Several studies have focused on optimizing the cure cycle for composite synthesis to achieve various objectives. For instance, one study aimed to minimize residual stress and ensure uniform curing [26], while another focused on maximizing the DOC, controlling peak temperature, minimizing post-gelation gradients, and reducing curing time [33].\nThis study aims to optimize the cure cycle of AS4/8552 composites by balancing mechanical performance and structural integrity through four key objectives. The first objective is achieving a desired DOC within the range $0.85<\\frac{\\alpha_{t=t}}{l}<0.95$, ensuring optimal mechanical properties while avoiding brittleness [24]. Second, minimizing DoC gradients $\\frac{\\partial \\alpha}{\\partial x_{t=t}}$ is critical for reducing residual stress and shrinkage [37]. Third, maximum part temperature (exotherm) must remain below 185 \u00b0C to prevent thermal degradation [5]. Finally, controlling thermal lag (\u0394T < 20 \u00b0C) ensures even curing by limiting temperature differences between autoclave air and composite parts [5]. These objectives are essential to optimize curing for performance and material integrity."}, {"title": "2.3.2 Problem Formulation", "content": "As elaborated in subsection 2.1, we consider nine design variables (i.e., six parameters related to the cure cycle and three associated with tool/equipment design) represented as: u = [r1,r2, hd1, hd2, ht1, ht2, htop, hbot, Lt]. The optimization problem is formulated to minimize a total loss function L(u), composed of four individual loss terms representing the objectives defined in the above subsection:\n$L(u)=L_{1}(u)+L_{2}(u)+L_{3}(u)+L_{4}(u)$\n(9)\nUsing the PIDON model as a surrogate, we predict part temperature and DOC, used in the loss calculations. For the first objective, a penalty function is defined based on the desired DOC. A penalty function ensures the DOC remains within the desired range of 0.85 to 0.95. If the DOC falls outside this range: either the minimum of DOC across the laminate is below 0.85 or the maximum of DOC across the laminate exceeds 0.95, a penalty is applied; otherwise, the loss is zero. This can be expressed as:\n$L_{1}(u)=\\left\\{\n\\begin{array}{ll}\n\\left|0.85-\\min \\left(G_{\\Theta}(u)(y_{t})\\right)\\right|, & \\text { if } \\min \\left(G_{\\Theta}(u)(y_{t})\\right)<0.85 ; \\\\\n\\max \\left(G_{\\Theta}(u)(y_{t})\\right)-0.95, & \\text { if } \\max \\left(G_{\\Theta}(u)\\left(y_{t}\\right)\\right)>0.95 ; \\\\\n0, & \\text { else. }\n\\end{array}\n\\right.$\n(10)\nHere, $y_{t}=\\[t \\mid t=t, z\\]$ and z is the collocation points in the spatial domain z. A second objective is to minimize the gradient of the DOC across the laminate at the end of the curing process. Since the PIDON model is differentiable, the gradient is computed using automatic differentiation across the laminate thickness, and it is then averaged. This can be expressed as follows:\n$L_{2}(u)=\\frac{1}{N_{z}} \\sum_{i=1}^{N_{z}}\\left|\\frac{\\partial\\left(G_{\\Theta}(u)\\left(y^{(i)}\\right)\\right)}{\\partial z}\\right|$\n(11)"}, {"title": "2.3.3 Optimizer", "content": "The optimization problem for the inverse design of composites autoclave processing is formulated as: as follows:\n$u^{*}=\\arg \\min _{u} L(u)$,\nsubject to: umin \u2264 u \u2264 umax.\n(14)\nThe bounds umin and umax define the feasible design space for the design variables u and are summarized in Table 4. They are typically defined by the inherent physical constraints of the process, such as the range of HTCs and temperature achievable by the autoclave oven. These constraints also align with the ranges of the input functions used during the training of the PIDON model. By adhering to these bounds, the design variables remain within the range of values on which the PIDON model was trained, ensuring it provides accurate and reliable predictions. The solution u* represents the optimal set of design parameters that minimizes the total loss L(u), while satisfying all objectives, constraints, and bounds.\nTo solve this optimization problem, we employ a gradient-based approach, leveraging the differentiability of the PIDON model. Gradient-based methods are particularly advantageous for differentiable objective functions, as they use gradient information to efficiently explore the design space [1, 32]. In this case, the loss function depends on the output of PIDON, which itself is a function of the input (i.e., design variables). By leveraging automatic differentiation, we can compute the gradient of the loss with respect to the design variables by propagating the gradients through the PIDON using the chain rule. These methods converge with fewer function evaluations, making them computationally efficient compared to sampling-based or heuristic approaches [1]. Specifically, we apply the Adam optimizer [10], which adapts the learning rate during optimization, improving the convergence speed and stability.\nThe optimization process involves the following steps (Figure 2):\n1. Initial Guess: Select the initial design parameters u\u00ba, either randomly or based on domain knowledge, and pass them to the PIDON model.\n2. Forward Prediction: Use the PIDON model to predict the spatio-temporal evolution of part temperature and DOC across the laminate based on the current design variables.\n3. Loss Evaluation: Compute the individual loss functions based on the predicted temperature and DOC values.\n4. Gradient Computation: Utilize automatic differentiation to compute the gradients of the total loss function L(u) with respect to the design parameters u. This step involves back-propagating the gradients through the PIDON model.\n5. Update Design Variables: Apply a gradient-based optimizer (e.g., Adam) to update the design variables u in the direction that minimizes the loss function using the computed gradients.\nDesign variables are clipped within the specified bounds presented in Table 4 to prevent erroneous predictions. If a variable exceeds the upper limit, it is clipped to the upper value; if it falls below the lower bound, it is clipped to the lower limit. Each loss function is normalized to maintain consistent scales and prevent dominance of any objective. To compare efficiency, we implemented Nesterov-Adam (NAdam), PSO, and GA, using the same PIDON model and loss calculation procedure as the Adam optimizer for consistency."}, {"title": "3 Results and Discussion", "content": ""}, {"title": "3.1 Validation of PIDON Model", "content": "To train the PIDON model, the time domain was divided into 11 subdomains with various lengths, accommodating the level of complexity within each subdomain. All PIDON models used an identical architecture, as detailed in Table 3. We trained the model with 600 random input parameter combinations (i.e., input functions) spanning a wide range of values (Table 4). We evaluated the model against finite element simulations as ground truth across five different test cases. Specifically, the part temperature and degree of cure (DOC) at the midpoint of the composite for a given set of input functions are compared with FE simulation results, as illustrated in Figure 3. The plot demonstrates that the PIDON model provides highly accurate predictions, with its results closely overlapping those of the FE simulations. We also benchmarked its performance against previously developed operator-based models for composites processing, namely the Physics-Informed Neural Operator (PINO) [23] and the physics-informed Fourier Neural Operator (FNO) [17] (Table 1). We used mean absolute error (MAE) and mean maximum error as the evaluation metrics to compare model predictions with finite element simulations. The MAE was computed by averaging the absolute errors within and across all test cases. The mean maximum error was obtained by averaging the maximum errors from each test case. The results clearly show that the PIDON outperforms both PINO and FNO models, achieving MAE and mean maximum error that are approximately 50% lower than those reported for the other models, despite being trained on a wider range of input functions. This demonstrates the superior accuracy and reliability of the proposed PIDON approach for predicting temperature and DOC in composite systems."}, {"title": "3.2 Design Optimization via Differentiable Neural Operator", "content": "A trained PIDON model is used as a surrogate model to identify the optimal design parameters for the autoclave curing process. Losses are evaluated using a 20\u00d7100 grid of collocation points, with 20 points in the spatial domain (z) and 100 in the time domain. The performance of the framework was evaluated for two composite part thicknesses: 20 mm, as discussed in this section, and 30 mm, which is detailed in Appendix B. Figure 4 shows the key outcomes of the optimization procedure for a random initial state u\u00ba = [2.5, 1.5, 56, 117, 112, 176, 75, 100, 2.2]. Figure 4.a shows the evolution of the total loss during each iteration of the optimization process using the Adam optimizer. Figure 4.b compares the initial and optimized cure cycle profiles, including the part temperature behavior at the midpoint of the composite. Although the air temperature is higher for the optimized design compared to the initial design, the maximum part temperature remains below the threshold in both cases. The initial and optimal DOC distributions across the laminate thickness are compared in Figure 4.c. In the initial design, the DOC remains way below the 0.85 threshold, while the optimized design achieves a DOC exceeding 0.85 across the entire laminate thickness. These results clearly demonstrate the effectiveness of the proposed framework in achieving substantial improvements in cure cycle performance. The optimization framework yields the optimized design variables u* = [2.61, 1.2, 70, 125, 119, 183.9, 52.68, 91.61, 2.75] which satisfies all objectives, ensuring a high-quality manufactured part. The total computation time for a single optimization run is 20.37 minutes.\nThe obtained optimal design aligns very well with the theoretical expectations. Specifically, a higher value of r\u2081 and a lower value of r2 ensures efficient heating during the first ramp phase while preventing excessive heat buildup (caused by resin polymerization) during the second phase. The optimal design has the highest ht\u2081 to maximize heat during the first hold, ensuring a cure rate above 0.85 while avoiding excess heat in the second hold. For Lt, the optimal design has a mid-range value. While a higher tool thickness can help mitigate excessive exothermic reactions, it may lead to a non-uniform DOC across the laminate, thus the chosen thickness can balance these effects.\nFurther, to demonstrate the robustness of our framework, we present the optimization results using Adam for 10 different initial guesses. The average objective evolution across these runs is shown in Figure 5. The figure illustrates the progression of key objectives during optimization, including the average DOC across the laminate (Figure 5.a), maximum part temperature (Figure 5.b), average axial cure gradient (Figure 5.c), and average thermal lag (Figure 5.d). The blue line represents the mean value across the 10 initial guesses, while the shaded band indicates the standard deviation. From the figure, it is evident that in some initial designs, the DOC is below 0.85. However, the optimal designs consistently achieve a DOC exceeding 0.85 across the laminate thickness. Additionally, the variation in DOC across the thickness is significantly reduced in the optimized designs compared to the initial designs. This improvement is further reflected in the steady decrease of the DOC gradient with each optimization step. Since DOC and maximum part temperature are correlated, initial designs with higher DOC exhibit higher part temperatures. In the optimization process, the maximum part temperature, which initially varies widely, stabilizes precisely at 185\u00b0C in the optimized designs. Lastly, the average thermal lag successfully remains below 20\u00b0C throughout the optimization procedure."}, {"title": "3.3 Comparison to gradient-free methods", "content": "In addition to our proposed optimization framework, we implemented and compared alternative optimization techniques, including NAdam, PSO, and GA, to evaluate their performance. The NAdam was executed for 180 iterations. The PSO was implemented with a swarm of 20 particles, running for 25 iterations, while the GA utilized a population size of 100 and was executed for 100 iterations. The performance of these optimizers, along with their computation times, is summarized in Table 2. For gradient-based optimizers, such as Adam and NAdam, the results are averaged over 10 different initial guesses to assess robustness. For population-based optimizers, since they are less sensitive to initial guesses, a single optimization run was executed and reported. In terms of the achieved optimal states, the gradient-based and gradient-free methods resulted in comparable performance. In terms of the number of function calls during the optimization process, gradient-based methods call the PIDON model once for forward prediction and twice for backward propagation (axial DOC gradient calculation and optimizer gradient update) per iteration (1 + 2). In contrast, gradient-free methods require one forward and one backward call for axial DOC gradient calculation for each individual in the population per iteration (1 + 1) \u00d7 p, where p is the population size. This makes gradient-based optimizers significantly more efficient with fewer function evaluations during the optimization process. Hence, the gradient-based optimizers demonstrated a significant computational advantage, converging approximately three times faster than their gradient-free counterparts. This clearly indicates the advantage of utilizing a differentiable neural operator model in conjunction with a gradient-based optimization approach for accelerated and robust design optimization in advanced manufacturing and materials processing applications."}, {"title": "4 Conclusions", "content": "In this work, we present an end-to-end accelerated design optimization framework for advanced engineering design, specifically developed for the autoclave curing process in composite materials processing. At the core of the framework is an enhanced PIDON model, specifically designed to capture the nonlinear dynamics of the autoclave process with high accuracy. The improved PIDON integrates a nonlinear decoder and temporal domain decomposition techniques, delivering superior performance compared to existing neural operator-based models across wide range of diverse input functions and extended temporal domains. By leveraging the differentiability of the trained PIDON model, the framework utilizes the gradient-based Adam optimizer to efficiently identify optimal design parameters. When benchmarked against gradient-free methods such as PSO and GA, the Adam optimizer achieves comparable performance while operating approximately three times faster. This enables the accelerated and accurate identification of optimal design states for the autoclave curing process. Furthermore, the framework is highly adaptable and can be extended to address other advanced engineering design challenges, making it well-suited for digital twin applications."}, {"title": "B Additional Results", "content": "To demonstrate the robustness of the proposed framework in addressing challenging scenarios, this section presents results for a 30 mm thick composite part. The optimization problem becomes significantly more challenging for the 30 mm thick material due to the excessive exothermic heat generation and the conflicting objectives of minimizing the maximum part temperature while achieving a sufficiently high DOC. The evolution of the total loss during optimization is shown in Figure 6.a, while Figure 6.b compares the initial and optimized cure cycles, along with the corresponding part temperatures at the composite midpoint. The initial cure cycle design exhibits excessive heat accumulation, resulting in a significantly elevated maximum part temperature. In contrast, the optimized design effectively regulates the maximum part temperature, bringing it to approximately 186.4\u00b0C\u2014slightly above the target value of 185\u00b0C but still well within the acceptable range for practical applications [5]. The DOC distribution acrros the laminate thickness for both the initial and optimized designs is illustrated in Figure 7.a. In the initial design, the DOC remains below 0.85, whereas the optimized design achieves a DOC exceeding 0.85 across all regions, except those near the tool. Furthermore, the optimized design demonstrates a substantial reduction in DOC variation, as indicated by the flatter maroon line compared to the darker blue line, which is also reflected in the decreasing DOC gradient over successive iterations in the Figure 7.c. Figure 7.b depicts the progression of the maximum part temperature during optimization. Initially extremely high, the temperature progressively decreases and stabilizes at approximately 186.4\u00b0C in the final design. Similarly, the average thermal lag evolves as shown in Figure 7.d. Although it momentarily increases during intermediate steps, the thermal lag ultimately returns to below 20\u00b0C in the final optimized solution, aligning with acceptable design criteria. These findings underscore the framework's capability to handle complex, high-dimensional design problems with conflicting objectives, optimizing even for extreme and thick composite materials to yield feasible solutions that satisfy physical constraints and design objectives."}, {"title": "B.1 Comparison to gradient-free methods", "content": "A comparative analysis of the gradient-based and gradient-free optimization approaches for the 30 mm thick composite material is presented in Table 2. The hyperparameters for each optimizer remain consistent with those used for the 20 mm thick material. Notably, gradient-based optimizers demonstrate a threefold speed advantage over their gradient-free counterparts. The optimization process for the 30 mm composite part poses significant challenges due to the conflicting nature of the objectives, including minimizing maximum part temperature and maximizing DOC. This is evident as gradient-free optimizers, such as GA and PSO, struggle to achieve a balanced solution. GA achieves a higher DOC but results in a maximum part temperature exceeding 185\u00b0C. Conversely, PSO maintains a maximum part temperature below 185\u00b0C but fails to achieve a DOC above 0.85. In contrast, the gradient-based optimizers, Adam and NAdam, demonstrate an ability to effectively balance these competing objectives. While the maximum part temperature for both optimizers slightly exceeds the target value of 185\u00b0C, stabilizing at 186.4\u00b0C, this result is still within an acceptable range for practical purposes. Additionally, both optimizers achieve a DOC above 0.85, fulfilling the primary performance objectives. This highlights the capability of gradient-based methods in efficiently navigating complex, high-dimensional design spaces."}]}