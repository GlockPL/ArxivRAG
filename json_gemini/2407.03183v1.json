{"title": "A Formal Model for Artificial Intelligence\nApplications in Automation Systems", "authors": ["Marvin Schieseck", "Philip Topalis", "Lasse Reinpold", "Felix Gehlhoff", "Alexander Fay"], "abstract": "The integration of Artificial Intelligence (AI) into\nautomation systems has the potential to enhance efficiency\nand to address currently unsolved existing technical challenges.\nHowever, the industry-wide adoption of AI is hindered by the\nlack of standardized documentation for the complex compositions\nof automation systems, AI software, production hardware, and\ntheir interdependencies. This paper proposes a formal model\nusing standards and ontologies to provide clear and structured\ndocumentation of AI applications in automation systems. The\nproposed information model for artificial intelligence in automa-\ntion systems (AIAS) utilizes ontology design patterns to map\nand link various aspects of automation systems and AI software.\nValidated through a practical example, the model demonstrates\nits effectiveness in improving documentation practices and aiding\nthe sustainable implementation of AI in industrial settings.", "sections": [{"title": "I. INTRODUCTION", "content": "The digitization and automation of technical plants, manu-\nfacturing processes, and products are continually increasing,\ndriven by modern information technologies. To stay compet-\nitive in the global market, companies are forced to adapt to\nthese technologies such as Artificial Intelligence (AI). [1]\nAs a result, the integration of AI applications into automa-\ntion systems has been increasingly driven forward in recent\nyears [2]. Numerous use cases have already been identified\nin which the integration of AI has enabled new solutions or\nincreased the efficiency of previous solutions [3]. Examples\ncan be found in areas like maintenance, quality control, and\nplanning [4]. Despite these promising use cases, the adoption\nof AI across industries remains relatively low [2], [5].\nAI applications are often developed as part of research\nprojects and cannot be economically used in practice. This\nis partly because some aspects of AI-software, such as data\nquality and management, computing resources management,\ntrustworthiness, and software documentation are particularly\nchallenging compared to conventional automation software\nand hinder economic integration and operation. [5]\u2013[8]\nWhile some of these challenging aspects, such as data\nquality or trustworthiness, have received extensive research\nattention in the past years, the software documentation of AI\napplication and its impact to the overall system in various\nscenarios is often disregarded [7], [8].\nAt the same time, there is a global trend towards the\ncreation of new legal regulations for AI, as exemplified by\nthe EU AI Act [9], which mandates a comprehensive analysis\nof AI application risks and recommends their documentation.\nAs these regulations continue to evolve, clear and structured\ndocumentation of AI applications will become increasingly\nimportant. Therefore, it is reasonable to assume that a seman-\ntically unambiguous and clearly structured documentation of\nAI applications will become even more important in the future.\nAdditional difficulties in documentation arise from the in-\nherent complexity of automation systems and AI systems, as\nboth systems usually consist of several hardware and software\ncomponents that are highly interconnected and interdependent\n[10]. Moreover, automation systems often have long lifespans,\nspanning decades. When individual technical components\nwithin these systems are updated or replaced, comprehensive\ndocumentation is required to determine how changes, such as\nsensor or controller replacements, affect the AI application.\nConsequently, a detailed documentation becomes necessary\nfor deploying and operating AI applications in automation\nsystems.\nHowever, there is currently no suitable approach to doc-\nument AI applications in automation systems that captures\ninformation about automation system components, AI software\ncomponents, and the underlying technical process as well as\ntheir interdependencies and relationships. In particular, there\nis a lack of formal models to describe AI applications within\nautomation systems [11]. In response, this paper proposes a\nnew formal model for Artificial Intelligence for Automation\nSystems (AIAS) based on standards and utilizing ontologies.\nThe primary contributions of this paper include:\nA discussion of existing modeling approaches and formal\nmodels in Section III.\nA presentation of the proposed formal model AIAS based\non ontologies in Section IV.\nAn application example for AIAS based on an industrial\nuse case in Section V."}, {"title": "II. ANALYSIS OF REQUIREMENTS", "content": "Software for AI applications has additional complexity\ncompared to traditional software. These include aspects such\nas unclear system boundaries, undeclared data dependencies,"}, {"title": "A. Requirements for the Information Model", "content": "Based on the challenges and aspects presented, the require-\nments (R) for a formal model for AI applications in automation\nsystems are derived in the following:\nR1) Description of Interdependencies: The approach must\ncapture information and interdependencies among automation\nsystem components, AI software components, and the tech-\nnical process. This is essential because AI applications in\nautomation systems are typically distributed across several\ncomponents within the technical system and therefore have\nto cover various dependencies [10].\nR2) Semantic Clarity and Standardization: The approach\nmust ensure semantic clarity to enable various experts from\ndifferent domains to understand, document, and communicate\ninformation in a clear manner with a clear meaning. To achieve\nthis, the content should adhere to standards, as they are devel-\noped by groups of experts and represent a semantic consensus\nwithin specific communities [12]. Another advantage is that\nthey are independent of vendors.\nR3) Formalized Representation: The approach must be\nable to represent the information in a formalized way to\nensure reusability and minimize ambiguity [11]. In addition,\nsuch formalization in combination with a vendor-independent\nexchange format makes the approach machine-readable and\nfacilitates integration into the diverse tool landscape of au-\ntomation systems and software engineering.\nR4) Expandability and Adaptability: The approach must\nbe expandable and adaptable to accommodate changes in stan-\ndards, regulations and legislations, particularly in the rapidly\nevolving field of AI [11]. As AI regulations vary across\ncountries and undergo frequent updates, the approach will\nrequire numerous adaptations. In contrast, the parts of the\napproach describing information about automation systems\nmay remain stable over decades.\nIn accordance with these requirements, we have formulated\nquestions together with partners from industry that the ap-"}, {"title": "III. RELATED WORKS", "content": "We identified three areas that address relevant research:\n1.) datasheets and cards, 2.) ontologies, and 3.) graphical\nmodeling. Some of the most relevant works in the respective\nareas are briefly presented in the following."}, {"title": "A. Datasheets and Cards", "content": "One area of research focuses on creating sheets and cards,\nwhich are short documents with predefined categories to\ncapture relevant information about the AI application. In order\nto obtain the relevant information, the authors use a number of\npredefined questions that must be answered and written down\nby the developers of the AI application.\nFor example, Gebru et al. [13] propose an approach called\nDatasheets for Datasets to reflect and document the creation\nprocess, distribution, maintenance, assumptions, and risks of\na dataset. Inspired by Datasheets for Datasets, the authors\nMitchell et al. [14] propose a framework called Model Cards\nto encourage transparent model reporting. Model Cards are\nshort documents for trained machine learning (ML) models\nto provide benchmarks of the model performance in different\nconditions. Arnold et al. [15] propose FactSheets to increase\ntrust in Al services by documenting various characteristics of\nAI services, including whether the data used to develop the\nservices are accompanied by datasheets. Similarly, Lavin et al.\n[16] propose a process to ensure the documentation of robust,\nreliable and responsible machine learning systems through so-\ncalled Technology Readiness Level Cards (TRL cards)."}, {"title": "B. Ontologies", "content": "The second area of research focuses on documenting AI ap-\nplications in a formal way by using ontologies instead of sheets\nand cards. This research area can be divided into two major\nfields [17], [18]. One field focuses on ontologies to support\nthe creation and documentation of the underlying development\nprocess, as summarized by Sinha et al. [17]. For example,\nPanov et al. [19] propose an ontology called OntoDM-KDD\nfor representing the knowledge discovery process based on the\nCross Industry Standard Process for Data Mining (CRISP-\nDM). Another ontology, the Data Mining Optimization Ontol-\nogy (DMOP) by Keet et al. [20], simplifies decision-making\nand optimizes the performance of data mining processes.\nThe second field focuses on ontologies that support the doc-\numentation of models and algorithms, especially for machine"}, {"title": "C. Graphical Modeling", "content": "The third area of research focuses on using graphical\nmodeling. A graphical model can be used to represent the\ncore of a problem in a semi-formal and understandable way for\ndifferent stakeholders and experts. An approach specifically for\nthe graphical representation of AI systems was presented by\nKaymakci et al. [25], centered on presenting relations between\ndata sources, data sinks, and data-processing components. On\nthis basis, a graphical modeling language was proposed by\nSchieseck et al. [26] which can represent AI systems within\nautomation systems. Using the systems engineering principles\noutlined by Haberfellner et al. [27], their modeling language\ncategorizes the entire system into three primary element types:\n1.) system components, 2.) system functions, and 3.) sys-\ntem relations. These relations, encompassing communication,\nassignment, and product flow, establish the interconnections\namong the system components (e.g., sensor, actuator, con-\ntroller, cloud) and system functions (e.g., train, record, store,\ninference). The authors provide a set of symbols and a syntax\nto represent these element types. Additionally, they offer a\nmetamodel2 to further formalize their approach."}, {"title": "D. Discussion of Related Works", "content": "After presenting the relevant areas and related works, a\ndiscussion is conducted based on the presented requirements.\nThe datasheets and cards only allow a description of the AI\ncomponents and the data. Documenting the technical system,\nthe technical process as well its interdependencies is not\nincluded and not intended by the authors (R1). Despite being\norganized into predefined categories and questions, responses\nare primarily given in free-text format (R3). Consequently,\nformality and accuracy depend on the respondent\u2019s integrity\nand experience [14]. The cards and sheets do not adhere to\nvocabularies and terms of standards or regulations (R2). How-\never, their straightforward structure facilitates easy expansion\nand adaptation to various use cases or domains (R4).\nThe approaches based on ontologies are, by their very\nnature, formalized (R3). Most of the approaches are using\nthe Web Ontology Language\u00b3 (OWL) as a vendor-independent\nformat (R3). Neither the ontologies focussing on data mining\nprocesses nor those focussing on ML algorithms and models"}, {"title": "IV. FORMAL ARTIFICIAL INTELLIGENCE APPLICATION\nDESCRIPTION", "content": "In this section, we introduce the Information Model for\nArtificial Intelligence in Automation Systems (AIAS)4. This\ninformation model is built using ontologies, as these offer a\nway to create semantically enriched and formalized informa-\ntion models. Furthermore, the use of ontologies in combination\nwith formal description languages of the semantic web, such\nas OWL, enables utilizing technologies of the semantic web\nlike reasoning, querying, or applying rules. To ensure that\nthe information model can be easily expanded and adapted,\nit should not be a single, monolithic ontology. Instead, the\ninformation model is composed of small and independent\nontologies known as Ontology Design Patterns (ODPs) [29].\nThese ODPs are interconnected at the top-level through an\nalignment ontology, serving as the overarching structure of\nthe information model. To further enhance the semantics, each\nODP should be based on a standard [12]. We categorize the\nused ODPs into two categories to describe various aspects:\nTechnical System and Technical Process: This category\nincludes ODPs that contain terms and relationships to\ndescribe the technical system structure and the underlying\ntechnical processes.\nArtificial Intelligence and Data: This category consists\nof ODPs containing terms and relationships to describe\nthe AI components and functionalities."}, {"title": "A. Description of the Technical System and Process", "content": "The first requirement (R1) underscores the necessity of\ndescribing the technical system aspects, including the technical\ncomponents and their underlying processes. The concepts\noutlined in VDI 3682 [30] provide a standardized framework\nfor describing various technical processes and the associated\nsystem structure. According to VDI 3682, a process involves\nthe transformation of inputs into outputs, executed by a pro-\ncess operator assigned to a technical resource. This technical\nresource then carries out the process. In a broader sense, a\ntechnical resource can be viewed as capable of implementing\nspecific functions (e.g., processes) and serves as an abstract\ndescription of the system hardware. However, it is necessary\nto complement the VDI 3682 ODP by two technical aspects,\nwhich are not covered in detail by VDI 3682 itself.\nFirstly, VDI 3682 lacks specificity regarding the differ-\nent types of technical resources. The ECLASS specification\naddresses this gap by semantically defining a wide array\nof classes and individuals of technical resources, including\nsensors, actuators, controllers, personal computers, as well\nas broader entities such as data centers or cloud services.\nAn alternative to ECLASS is the United Nations Standard\nProducts and Services Code (UNSPSC). In addition, the SSN\n7 ontologie provides an alternative for specifying sensors and\nactuators, offering a comprehensive vocabulary if needed.\nSecondly, the VDI 3682 does not specify the communication\nbetween different technical resources. A widely used standard\nto describe such communications between technical systems\nis provided by ISO 7498 [31]. It is based on a seven layer\ncommunication model, called Open Systems Interconnection\n(OSI) model. Using this OSI model, a communication technol-\nogy can be specified across the layers, from the physical level\nright up to the application level. The ODP we have developed\nfor the ISO 7489 is shown in Figure 1."}, {"title": "B. Description of the Artificial Intelligence and Data", "content": "In addition to the technical aspects, the first requirement\n(R1) emphasizes the necessity of describing the AI compo-\nnents and the utilized data. ISO 22989 [32] offers appropriate\nconcepts and terminology for AI. This standard is structured\naround three overarching aspects: 1.) components and func-\ntions, 2.) algorithms, and 3.) data. Given the complexity and\ninterrelated nature of the ISO 22989, it is useful to divide it\ninto different viewpoints for each aspect.\nWithin the first aspect, various types of AI (e.g., symbolic or\nsubsymbolic), tasks (e.g., classification, clustering, regression,\ngeneration), system designs (e.g., cloud, edge, hybrid) their\ncomponents, and functions (e.g., data processing, training,\nvalidation, evaluation, inference) are defined. A viewpoint of\nthis first aspect is depicted in Figure 2.\nThe second aspect delineates the semantics and relationships\nof machine learning models, machine learning algorithms, and\nlearning types in relation to the previously defined functions.\nAdditionally, model parameters and hyperparameters are de-\nfined. A viewpoint of the second aspect is shown in Figure 3.\nThe third aspect describes the semantics and relationships\nbetween samples, data, and datasets. In addition to defining"}, {"title": "C. Description of the Alignment Ontology", "content": "Up to this point, the ODPs have described the respective\nelements independently of each other. On the one hand, there\nare ODPs describing the technical processes, the technical\nsystems, and the communication, such as VDI 3682, ISO 7498,\nand ECLASS. On the other hand, there are ODPs describing\nthe AI systems, the AI components with their functions, and\nthe data, such as ISO 22989.\nHowever, to create an information model capable of de-\nscribing AI applications within automation systems, it is\nnecessary to establish links between the two categories and\ntheir respective ODPs. To achieve this, an alignment ontology\nthat connects the contents of multiple ODPs is needed. This\nalignment ontology constitutes the actual AIAS information\nmodel. It is created by importing all previously mentioned on-\ntologies via owl : import statements. Through this approach,\nall imported ontologies remain in their own namespace, while\nthe alignment ontology defines its own namespace, denoted as\nAIAS:.\nThe metamodel\u00b2 proposed by Schieseck et al. [26] forms the\nbasic structure of the AIAS ontology, providing a framework\nfor describing AI in automation systems. This metamodel\nincludes the core classes function, component, and relation.\nSubsequently, some of these core classes and some subclasses\nare successively replaced, extended or equated by the imported\nclasses from the ODPs. This iterative process allows for the\nintegration of specific domain knowledge and terms and en-\nsures alignment with established standards. The core concepts\nof the AIAS alignment ontology and the underlying ODPs\nwith their links are shown in a class diagram in Figure 5."}, {"title": "V. APPLICATION IN AN INDUSTRIAL SCENARIO", "content": "To demonstrate the use and to evaluate the presented AIAS\ninformation model, an exemplary industrial use case of an\nAI application was modeled. The use case was part of the\nresearch projekt EKI\u00ae and was specified and implemented with\nan industry partner. The modeling was done by instantiating\nand connecting the use case specific information. This way, a\nuse case specific knowledge graph was created which can be\nfound on GitHub\u00b9, alongside a detailed documentation of its\ncreation and further information.\nExemplary Use Case: The use case revolves around a\npunching process that is carried out by a punching machine.\nThe primary business objective was to minimize the mainte-\nnance costs associated with the stamping machine.\nThe stamping machine is used to produce parts from blank\nmetal sheets for the automobile industry. It comprises a support\nframe, a fixed lower die, and a movable upper die. The upper\ndie is operated by an electric motor mounted on the support\nframe, with the driving force transmitted via a drive belt. The\nposition of the upper die is monitored by a positional sensor.\nOver time, the wear of the drive belt leads to inaccurate control\nof the upper die, causing the parts produced to deviate from\nthe strict tolerance requirements. Currently, the drive belt is\nreplaced at regular intervals, resulting in high maintenance\ncosts. Therefore, the primary business objective is to reduce\nmaintenance costs by progressively classifying the condition\nof the drive belt.\nExperiments by the industry partner indicate that a worn\ndrive belt induces oscillations in the positioning of the upper\ndie. Utilizing this insight, data recorded by sensors during the\nstamping process can be leveraged to infer the condition of\nthe drive belt.\nThe sensor data is transmitted to a controller via a bus\nnetwork. The controller communicates with an edge device\nvia Ethernet, while the edge device itself communicates with\na cloud via internet. In the cloud, the model is trained and\ndeployed for inference. A neuronal network is used as a model\nto analyze batches of the sensor data and to classify the belt\ncondition.\nModeling: The use case was successfully modeled\nusing the AIAS ontology and the software Prot\u00e9g\u00e9. For\ninstance, the communication between the edge device\nand the controller was modeled using an instance\nof the ISO7489:Communication class, connected\nwith instances of the respective technical resources,\nAIAS: EdgeDevice and AIAS:Controller. Similarly,\ntraining in the cloud and deployment of the trained\nneuronal network were modeled using instances of\nthe VDI3682:Assignment class, connected with\ninstances of the functions ISO22989: Training and\nISO22989: Inference, respectively. Throughout\nthe modeling process, elements of the ISO 22989\nODP were used to provide further details, such as\ninstances of the classes ISO22989:Modelparameter,\nISO22989:Hyperparameter and ISO22989:Data.\nAdditionally, the documentation of the task was made using\nan instance of ISO22989: Classification."}, {"title": "VI. DISCUSSION", "content": "The AIAS enables the description of AI applications in\nautomation systems by focusing on interdependencies between\nautomation system components, AI components, and technical\nprocesses, as demonstrated through the exemplary modeling of\nthe use case (R1).\nThe adoption of terms from standards such as ISO 22989,\nISO 7489, or VDI 3682 ensures clear and unambiguous\nsemantics (R2). Moreover, if necessary, the semantics of\nautomation system components can be further enriched by\nimporting ECLASS or UNSPSC into AIAS.\nUtilizing ontologies in combination with OWL ensures\nthe formalized capture of information. OWL\u2019s standardized\nrepresentation language, maintained and defined by the W3C,\nmakes it machine-readable and vendor-independent (R3).\nThe AIAS ontology, composed of several independent\nODPs, offers extensibility and adaptability (R4). Additional\nODPs can be easily imported and integrated into AIAS for\nmore detailed descriptions. Updates to standards only require\nupdating the relevant ODP, not the entire AIAS ontology.\nIn summary, it was shown that the AIAS information model\nfulfills the presented requirements (R1-R4) and enabled the\nmodeling of an exemplary AI application for an automation\nsystem. Additionally, the querying based on SPARQL for easy\nretrieval of specific information was demonstrated. Further-\nmore, the formulation of complex knowledge through rules\nusing SWRL and the specification of constraints using SHACL\nwas shown.\nDespite these advantages, there are some drawbacks to the\napproach. One drawback is the necessity of a detailed under-\nstanding of the AIAS ontology and its ODPs before modeling\ncan even begin. Another drawback is the reliance on tools\nlike Prot\u00e9g\u00e9, the use of which also requires expert knowledge.\nEven for proficient users of tools like Prot\u00e9g\u00e9, modeling can\nbe tedious and time-consuming, as all individuals and relations\nfor a particular use case have to be created manually."}, {"title": "VII. CONCLUSION", "content": "This paper introduces a formal model for describing Ar-\ntificial Intelligence (AI) applications in automation systems.\nThe concept allows the creation of a knowledge graph that\nencompasses the components of the automation system, the AI\nelements, the technical processes, and their interdependencies.\nThe formal model was implemented using ontologies,\nadopting a strategy of utilizing several smaller Ontology\nDesign Patterns (ODPs) based on standards rather than con-\nstructing a single large and monolithic ontology. These smaller\nODPs are combined to form an extendable and adaptable\nalignment ontology named AIAS. Specifically, an ODP based\non the ISO 22989 standard is utilized to describe information\nabout Al elements, while an ODP based on VDI 3682 is\nused for information about the automation system, technical\nprocesses, and components. Additionally, an ODP derived\nfrom ISO 7489 is created to depict communication within the\nautomation system. The paper showcases the benefits of AIAS\nthrough an exemplary use case centered around a stamping\nprocess.\nIn summary, modeling with AIAS enables the formal de-\nscription of AI applications for industrial use cases, facilitat-\ning knowledge acquisition through querying and knowledge\ngeneration via reasoning based on rules and constraints. Con-\nsequently, AIAS holds the potential to standardize the doc-\nmentation and to streamline the integration, operation, and\nmaintenance of AI applications within automation systems."}, {"title": "VIII. FUTURE WORKS", "content": "In the future, we will add more subclasses to AIAS to\nbroaden the scope of describing AI elements. This includes"}]}