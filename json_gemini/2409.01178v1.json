{"title": "Integrating End-to-End and Modular Driving Approaches for Online Corner Case Detection in Autonomous Driving", "authors": ["Gemb Kaljavesi", "Xiyan Su", "Frank Diermeyer"], "abstract": "Online corner case detection is crucial for ensuring safety in autonomous driving vehicles. Current autonomous driving approaches can be categorized into modular approaches and end-to-end approaches. To leverage the advantages of both, we propose a method for online corner case detection that integrates an end-to-end approach into a modular system. The modular system takes over the primary driving task and the end-to-end network runs in parallel as a secondary one, the disagreement between the systems is then used for corner case detection. We implement this method on a real vehicle and evaluate it qualitatively. Our results demonstrate that end-to-end networks, known for their superior situational awareness, as secondary driving systems, can effectively contribute to corner case detection. These findings suggest that such an approach holds potential for enhancing the safety of autonomous vehicles.", "sections": [{"title": "I. INTRODUCTION", "content": "The advancement of autonomous vehicles (AVs) technology is rapidly approaching the point where their integration into mainstream transportation systems is becoming increasingly feasible. The impact of AVs on road safety has already been investigated in several studies, which were conducted through virtual traffic simulations [1, 2] and real-world evaluations using historical data [3, 4]. In general, these studies support the opinion that autonomous vehicles have the potential to improve road safety [5].\nThe research field of autonomous driving can be roughly divided into two categories: modular approaches and end-to-end approaches. Modular approaches divide the driving task into individual, self-contained parts that are interchangeable. In autonomous driving, the modules are typically categorized into mapping, localization, perception, planning, and control [6]. The modular approach is considered the conventional method and is currently more widespread in industry and research [7]. On the other hand, end-to-end approaches encapsulate the entire driving task, or larger parts of it, as a single machine learning task. These approaches are becoming increasingly important [8]; however, they are primarily trained and evaluated in simulations such as CARLA [8]\u2013[10]. Particularly, end-to-end approaches with multi-modal input, which utilize more than just camera data, are rarely encountered in real vehicle applications. Both approaches have their respective advantages and disadvantages, which determine their suitability in specific situations [7].\nHowever, both suffer from what many consider the major challenge: the long tail of rare events that these systems encounter [11]. AVs operate in a complex environment and face intricate scenarios, not all of which can be accounted for during development [12]. Such rare and unpredictable scenarios, encountered during real-world driving but infrequently observed in normal conditions, are often referred to as corner cases and their independent detection is essential for safe autonomous driving [13]. In recent years, several methods have been developed for this purpose. However, an online corner case detection using a combination of modular and end-to-end software approaches has not yet been explored."}, {"title": "A. Related Work", "content": "Modular approaches consist of a structured chain of modules that communicate with each other via predefined input and output data. Examples of current open-source modular approaches for autonomous driving are Autoware Universe [14] and Apollo [15], both of which are already being deployed on real vehicles. One advantage of modular approaches is their interpretability. In the event of a malfunction, it is possible to trace the point at which the error occurred or the interactions within the system that led to this error [16, 17]. Moreover, even in successful missions, the behavior and reasoning of the system can be traced [16, 17]. In addition to that the clearly defined intermediate representations and deterministic rules ensure predictable behavior in autonomous-driving systems based on modular pipelines, given the strict interdependencies among subsystems [7]. Building upon this fact, the approval of such a system is also more feasible [18]. However, disadvantages arise from the fact that inputs and outputs are predefined, which may not be optimal for certain situations and limit the ability to articulate the finer details of the driving situations encountered [7, 11]. Additionally, the predefined outputs lead to a significant loss of information from the raw sensor data. For instance, in typical camera-based object detection, only the bounding boxes of the detected objects are retained, resulting in the loss of information from the remaining pixels [19].\nRecent studies have increasingly focused on end-to-end approaches, particularly facilitated by the CARLA simulator and its associated leaderboard [9, 10, 20, 21]. End-to-end systems consolidate the tasks of individual modules into a single neural network, optimized for one primary objective: the driving task [22]. With undefined inputs and outputs, these systems can implicitly learn to utilize information [7]."}, {"title": "B. Contribution", "content": "This work introduces a novel concept: an online corner case detection, facilitated by the combination of end-to-end and modular autonomous software. This integration aims to harness the benefits offered by both approaches. Additionally, as part of this work, the concept is implemented and qualitatively evaluated using a research vehicle. For this purpose, the end-to-end network is initially trained in simulation and subsequently with real data. For evaluation, the trained network is then deployed on a research vehicle in parallel with a modular approach.\nThe reminder of this work is structured as follows. Section II introduces the proposed methodology for online corner case detection."}, {"title": "II. PROPOSED ONLINE CORNER CASE DETECTION", "content": "The proposed methodology is depicted in Fig. 1. Generally, the corner case detection is realized through the integration of an end-to-end system and a modular system. Within this framework, a divergence observed between the two systems is presumed to signify a corner case. In line with the methodology outlined in [34], a division exists between a primary and a secondary system. The primary system assumes control over the driving task and is capable of issuing both lateral and longitudinal commands to the vehicle. In contrast, the secondary system lacks direct access to the vehicle's actuators and is only able to influence the longitudinal behavior of the vehicle. The modular system is selected as the primary system in the proposed method. This decision is based on the higher interpretability, potential predictability, and possible certification offered by the modular system, in comparison to the end-to-end systems already discussed in Section I. The end-to-end system, which offers superior global reasoning by utilizing the entirety of the data and holistic optimization for the driving function, provides a more comprehensive assessment of the current scenario. It is designated as the secondary system, implying it lacks direct control over the vehicle. Incorporating the end-to-end network as a secondary system introduces two new properties that can be considered by the network architecture:\n1) The network is not required to undertake the entire driving task.\n2) The network is not obligated to perform its task in real-time at high frequency.\nBy not requiring the network to fulfill the entire driving task, new possibilities for the output are opened up. The disadvantage of discontinuous speed and non-smooth trajectory can be circumvented thereby. For example, an end-to-end"}, {"title": "III. EXPERIMENT DESIGN", "content": "The following section presents a specific implementation of our approach, as well as the experimental setup to qualitatively evaluate it for corner case detection on a real vehicle. An overview of the experiment design is provided in Fig. 2. An internal autonomous driving software based on Autoware Universe [14] was used for the modular system, while the network architecture of TransFuser++ (TF++) [38] served as the basis for the end-to-end system. This choice was primarily based on its decoupling of speed and waypoints and its strong performance in the CARLA Leaderboard Challenge [9]. Real data and test drives were conducted using the EDGAR Research Vehicle [39]. A Basler acA1920-50gc mono camera positioned at the front, along with two Ouster OS1-128 Light Detecting and Ranging (LiDAR) sensors, served as the primary sensors for environmental perception for both the modular and the end-to-end system."}, {"title": "A. Training", "content": "The end-to-end systems training occurred in two stages. Initially, extensive training was conducted in the simulation,"}, {"title": "B. Deployment", "content": "Given that the fundamental idea behind the presented concept is to leverage the advantages of both the modular and end-to-end approach, the concrete implementation also focused on capitalizing on synergies between the two. Both approaches receive identical sensor data for environment perception, with the end-to-end system receiving pre-processed, synchronized, and concatenated LiDAR data from the modular system's perception. Additionally, the modular system utilizes data from supplementary sensors such as the vehicle's GNSS or odometry. As the end-to-end system requires behavioral input, target points are generated from the trajectory planned by the global planner within the modular system. The output of the end-to-end system and the planned trajectory from the modular planner are utilized for corner case detection."}, {"title": "C. Corner Case Detection", "content": "For corner case detection based on lateral differences, the planned trajectory of the modular system is compared with the predicted waypoints of the end-to-end system at each timestamp t. Let $lat_{mod;i}(t)$ represent the lateral deviation at point i along the trajectory as computed by the modular system, and $lat_{e2e;i}(t)$ represent the lateral deviation at the same point i along the trajectory as computed by end-to-end system. Then, the maximum difference in lateral deviations at point i can be calculated as:\n$Lat_m(t) = max_i |lat_{mod;i}(t) \u2013 lat_{e2e;i}(t)|$  (1)\nwhere $Lat_m$ is the maximum difference in lateral deviations between corresponding points along the trajectories. In addition to that, the average deviation is calculated to mitigate the influence of individual outliers, ensuring they do not exert excessive impact.\n$Lat_{avg}(t) = \\frac{1}{n} \\sum_{i=1}^{n} |lat_{mod;i}(t) \u2013 lat_{e2e;i}(t)|$ (2)\nThe final metric is a combination of both formulas, utilizing weights:\n$Lat(t) = w_m Lat_m(t) + w_{avg} Lat_{avg}(t)$ (3)\nSince we only examine the results qualitatively in our work and do not have sufficient data, the weights could not be precisely determined and were both set to 1.\nFor longitudinal corner case detection, the speed from the planned trajectory of the modular system and the predicted speed class from the end-to-end system, which can also be interpreted as hazard classes, are utilized. Let v represent the current speed, and let sc denote the speed class, where $sc \\in \\{0,1,2,3\\}$. As already described in Section III-A, 0 indicates a high hazard requiring braking, and 3 indicates no hazard.\nTo monitor if the speed decreases when the speed class drops, we can define a corner case metric $Long(t)$ as follows:\n$Long(t) = \\begin{cases} 0 & \\text{otherwise}, \\\\ 1 & dsc(t) < 0 \\wedge \\delta v(t) \\geq 0 \\end{cases}$ (4)\nHere, $dsc(t)$ represents the derivative of the speed class, while $\\delta v(t)$ refers to the derivative of the target velocity of the modular system. A corner case is detected if the end-to-end system predicts a more dangerous speed class and the modular system does not reduce its speed simultaneously. This indicates that the end-to-end network recognizes a more dangerous situation or demands deceleration, but the modular approach does not respond accordingly."}, {"title": "D. Evaluation", "content": "The evaluation took place on our test track, situated on private property yet subject to moderate traffic from other vehicles and pedestrians. A safety driver supervised the evaluation, intervening in critical situations as necessary. Simultaneously, output from the corner case detection was"}, {"title": "IV. RESULTS", "content": "The following chapter presents the results of our evaluation. Firstly, we showcase the results of the lateral trajectory evaluation, followed by the longitudinal trajectory evaluation. In both cases, one scenario was selected to represent the results."}, {"title": "A. Lateral", "content": "Fig. 3 illustrates the lateral deviation of both the modular system and the end-to-end system in a specific scenario, with the distance between them also calculated. The scenario under analysis involves an overtaking maneuver, where the research vehicle passes a parked vehicle on the roadside. The figure indicates that while the modular system correctly initiates the overtaking maneuver, the end-to-end system consistently tries to remain in the middle of the lane, potentially resulting in a false positive corner case detection. Overall, the scenarios tested suggest that the difference in lateral trajectories between the two systems can be minimal, even during cornering, as long as there are no evasive maneuvers. However, during evasive maneuvers, it was observed that the end-to-end system consistently attempts to adhere to the global path, typically located in the center of the route, whereas the modular system often initiates overtaking maneuvers. Based on the available training data and test drives, no successful corner cases were detected through the analysis of lateral trajectories."}, {"title": "B. Longitudinal", "content": "Fig. 4 illustrates an example of the result from the longitudinal evaluation for a selected scenario. The orange curve represents the predicted speed class, while the target speed of the modular system is depicted in blue. In this scenario, the research vehicle autonomously traveled along a straight line. Within the area highlighted in red, the safety driver noticed a malfunction in the modular system and intervened. During this period, a pedestrian entered the road from a slightly obscured angle, and the modular system failed to react correctly to avoid a collision. The fault could not be attributed to a single module and presumably resulted from a combination of factors across different modules. Within the red zone, it is evident that the end-to-end system correctly identified a more hazardous situation and therefore advocated for slower driving. The disparity in behavior compared to the modular system could be effectively utilized for corner case detection. Overall, the longitudinal evaluation of the driving"}, {"title": "V. DISCUSSION", "content": "The lateral results yielded limited success in corner case detection. This was primarily attributed to the end-to-end approach's inability to navigate around obstacles. The underlying reason is that the expert driver, whose recorded simulation data was used for imitation learning, was incapable of evading objects on the road, and such scenarios were absent from the CARLA Leaderboard. Nevertheless, it was observed that the lateral disparity between the end-to-end and modular systems could be minimized in real-world settings. Conversely, longitudinal results indicated the potential success of the proposed corner case detection. The end-to-end system, capable of identifying hazardous situations and responding appropriately, could have averted a collision in the mentioned case. Generally, the output of hazard classes emerged as a dependable method compared to specific target speeds. However, all results were significantly affected by pronounced noise, mainly stemming from the extensive reliance on simulation data for training the end-to-end system, which struggles to fully adapt to real-world conditions due to the simulation-to-reality gap. Additionally, the lack of diversity in the CARLA Leaderboard scenarios, particularly the underrepresentation of pedestrian-related scenarios, posed another challenge. Furthermore, the qualitative results did not indicate the number of false positives and false negatives in the corner case detection. False positives can occur when a situation can be resolved in multiple ways, such as in an evasive maneuver where the modular approach might deviate to the left while the end-to-end approach possibly deviates to the right. These false positives might be partially mitigated by the fact that the corner case analysis is conducted over time, and after an initial significant difference, the end-to-end system may eventually align with the behavior of the modular system. However, an additional rule-based or data-driven approach might also be necessary to account for ambiguous situations, such as evasive maneuvers or merging maneuvers, in corner case detection. False negatives can occur if both systems make the same incorrect decision."}, {"title": "VI. CONCLUSION", "content": "Online corner case detection is crucial for ensuring safe autonomous driving. This paper introduces a concept a for online corner case detection that merges the traditional modular approach with the end-to-end approach to leverage the strengths of both methods. The proposed approach was implemented using an open-source end-to-end driving architecture as a demonstration and trained using a combination of simulation and real-world data. Longitudinal prediction was facilitated through the utilization of speed classes, which offer insights into current hazard assessment rather than prescribing actual driving speeds. Qualitative findings demonstrate the system's potential to effectively identify corner cases in real-world driving scenarios.\nIn the future, the concept should undergo quantitative evaluation, enabling comparison between true positive and false positive detections through a higher number of trials. Furthermore, real-world data for network training should be substantially expanded. The paper has already demonstrated that employing the end-to-end system as a secondary system opens up different possibilities regarding input, output, and runtime. These architectural components warrant further investigation to determine a suitable network architecture for end-to-end systems as secondary driving systems for online corner case detection."}]}