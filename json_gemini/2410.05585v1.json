{"title": "Towards Robust Spacecraft Trajectory Optimization via Transformers", "authors": ["Yuji Takubo", "Tommaso Guffanti", "Daniele Gammelli", "Marco Pavone", "Simone D'Amico"], "abstract": "Future multi-spacecraft missions require robust autonomous trajectory optimization capabilities to ensure safe and efficient rendezvous operations. This capability hinges on solving non-convex optimal control problems in real time, although traditional iterative methods such as sequential convex programming impose significant computational challenges. To mitigate this burden, the Autonomous Rendezvous Transformer (ART) [1] introduced a generative model trained to provide near-optimal initial guesses. This approach provides convergence to better local optima (e.g., fuel optimality), improves feasibility rates, and results in faster convergence speed of optimization algorithms through warm-starting. This work extends the capabilities of ART to address robust chance-constrained optimal control problems. Specifically, ART is applied to challenging rendezvous scenarios in Low Earth Orbit (LEO), ensuring fault-tolerant behavior under uncertainty. Through extensive experimentation, the proposed warm-starting strategy is shown to consistently produce high-quality reference trajectories, achieving up to 30% cost improvement and 50% reduction in infeasible cases compared to conventional methods, demonstrating robust performance across multiple state representations. Additionally, a post hoc evaluation framework is proposed to assess the quality of generated trajectories and mitigate runtime failures, marking an initial step toward the reliable deployment of AI-driven solutions in safety-critical autonomous systems such as spacecraft.", "sections": [{"title": "1. INTRODUCTION", "content": "The new paradigm of in-space servicing, assembly, and logistics operations around the Earth and the Moon will require advanced autonomous rendezvous capabilities [2] [3]. Within this context, onboard trajectory optimization algorithms play a critical role, enabling spacecraft to compute sequences of states and controls that optimize mission objectives while adhering to operational constraints [4] [5] [6]. Among other approaches, the integration of Machine Learning (ML) techniques as a \"warm-start\" for trajectory optimization algorithms offers a promising path to enhance traditional trajectory generation while ensuring strict constraint satisfaction, which is an essential requirement for the deployment of safety-critical systems [1] [7] [8] [9]. Notably, recent works have shown that Transformer networks [10] [11] [1] [7] [12] are well-suited for this task, treating physical trajectories as tokenized sequences of states, controls, and, optionally, performance metrics. This approach has demonstrated that Transformer-generated warm-starts improve sequential optimizers by achieving more fuel-efficient trajectories, requiring fewer optimizer iterations, and reducing computation time, making them an appealing solution for spacecraft onboard operations.\nThis paper builds upon the prior works presented in [1] [7] to address the remaining challenges in deploying Transformer-assisted trajectory optimization onboard spacecraft. This is approached across two key dimensions. The first dimension focuses on enhancing robustness guarantees, specifically: (i) integrating a chance-constraint formulation [13] in the presence of uncertainty sources relevant within space operations (e.g., stemming from navigation, actuation, and unmodeled system dynamics), and (ii) integrating fault-tolerant constraint formulations [14] [15] [16] (e.g., ensuring passive safety in the event of control loss or actuation malfunctions). The second dimension evaluates the feasibility and benefits of deploying Transformer-based trajectory optimization algorithms onboard spacecraft, considering task performance, computational efficiency, and operational practicality."}, {"title": "", "content": "Through this, this paper offers four contributions to the current state-of-the-art:\n1. This work demonstrates how enforcing the aforementioned robustness guarantees requires tailored design choices in both the trajectory sequence definition and the warm-starting framework. Specifically, this work introduces novel performance parameter representations to encapsulate relevant information regarding robustness requirements. These tailored representations enable the Transformer model to generate trajectories that are robust to uncertainties and potential faults.\n2. This work empirically validates the proposed framework in challenging rendezvous scenarios in Low Earth Orbit, accounting for uncertainty and ensuring fault tolerance;\n3. This work demonstrates how Transformer models can generate high-performance rendezvous trajectories across different state representations, such as Cartesian [17] and Relative Orbit Elements [18], for the spacecraft's relative orbital motion;\n4. This work addresses operational considerations for deploying Transformer-based trajectory optimization onboard spacecraft, including the development and evaluation of post hoc acceptance checks for the model's outputs.\nNotation-R and R>0 denote the space of real numbers and nonnegative real numbers, respectively; N denotes the set of natural numbers; Pr(\u00b7) denotes the probability operator; ||\u00b7||p denotes the p-norm; Diag{\u00b7} denotes a diagonal matrix; For a positive semi-definite matrix A \u2265 0, A1/2 is a square-root of A and satisfies A = A1/2 (A1/2) T."}, {"title": "2. ROBUST FAULT-TOLERANT SPACECRAFT TRAJECTORY OPTIMIZATION", "content": "This work aims to solve an Optimal Control Problem (OCP) that computes an optimal maneuver sequence for a spacecraft, guiding it from an initial to a terminal state while accounting for uncertainties. These uncertainties arise from various sources such as navigation errors, actuation errors, and un-modeled systems dynamics. In addition, ensuring safety during contingencies is crucial in spacecraft rendezvous. Specifically, a sufficient separation between spacecraft must be maintained not only along the nominal (controlled) trajectory but also in situations where control is unexpectedly lost at least for a certain duration\u2014this concept is referred to as passive or drift-safety. To address this complex guidance problem, that accounts for both uncertainty and contingency, the following Chance-Constrained Optimal Control Problem (CC-OCP) [19] is formulated for a discrete-time linear dynamical system:\n\nminimize\n$J = \\sum_{i=1}^{N}I (x(t_i), u(t_i), t_i)$\nx(ti), u(ti), x(t))\nsubject to\nx(ti+1) = \\Phi(ti+1, ti) (x(ti)+B(ti)u(ti))  \\forall i \\in [1,N)\nX(ti) = f(x(ti), u(ti)) \\forall i \\in [1, N]\nPr(M^*(x(t_i), X(t_i)) < 0) \\geq 1 - \\Delta \\forall i \\in [1, N]\nu(ti) \\in U  \\forall i \\in [1, N]\nx(t1) = xo and x(tf) = xf,\n(1)\nwhere the state is characterized by the mean x \u2208 R6 and error covariance X \u2208 R6\u00d76; u \u2208 R\u00b3 is the open-loop control input; I() \u2208 R+ is a generic cost functional that may account for time or control input minimization, among other factors; (ti+1,ti) \u2208 R6\u00d76 denotes the state transition matrix of a"}, {"title": "3. ROBUST TRAJECTORY GENERATION VIA TRANSFORMERS", "content": "This section first outlines relevant preliminaries of the Autonomous Rendezvous Transformer (ART) [1] [7], followed by a presentation of the novel contributions in this work that enable the ART framework to be applicable to a CC-OCP.\nAutonomous Rendezvous Transformer (ART)\nAt its core, ART casts trajectory generation as a sequential prediction problem, whereby a Transformer model-trained on a dataset of previously collected near-optimal trajectories-returns a coherent sequence of states, controls, and performance parameters through autoregressive generation. A key element for enabling reliable trajectory generation is the representation of trajectory data as sequences suitable for modeling by a Transformer. Specifically, ART defines the following trajectory representation:\n$\\tau = {P(t_1), x(t_1), u(t_1),...,P(t_n), x(t_n), u(t_n)}$, (3)\nwhere P(ti) denotes the vector of performance parameters at time ti. Generally, P(ti) may include diverse metrics that"}, {"title": "", "content": "define the desired performance of the trajectory. In this work, two metrics are defined; P(ti) = {R(ti), C(ti)}, where R(ti) \u2208 R is the reward-to-go, a metric representing future optimality, and C(ti) \u2208 N is the constraint-violation budget, which indicates feasibility of the trajectory. These metrics are defined as follows:\n\n$R(t_i) = \\sum_{j=i}^{N} I(x(t_j), u(t_j), t_j),$ (4)\n\n$C(t_i) = \\sum_{j=i}^{N} C(t_j),$ (5)\nwhere I(x(tj), u(t), tj) represents the instantaneous reward, directly associated with the cost function of the OCP (or CC-OCP), and C(tj) \u2208 N is the constraint violation metric incurred at instant tj.\nAt a high level, three main processes are required to obtain a functional transformer model: dataset generation, model training, and test-time inference.\nDataset Generation: The first step in the proposed methodology involves generating a dataset suitable for effective Transformer training. To accomplish this, a dataset of Na trajectories is generated by repeatedly solving diverse instances of the optimization problem in Eq. 1. The raw trajectories are then rearranged according to the representation presented in Eq. 3. This approach facilitates the learning of a wide range of optimal trajectories along with their corresponding performance metrics. Specifically, exposing the Transformer to near-optimal trajectories with randomized initial conditions and performance metrics is crucial for enabling it to learn the effects of various input modalities. This diversity in training data allows the model to capture the underlying dynamics and variations in trajectory behavior, which is essential for generalizing to unseen scenarios and maintaining robust performance across different conditions. It is important to note that information on uncertainty is not explicitly represented in the trajectory data but is implicitly embedded within the state and control histories, as well as the constraint-violation budget outlined below.\nTraining: The transformer is trained by employing the standard teacher-forcing procedure commonly used in training sequence models. Specifically, as in [1][7] the following loss function is minimized:\n\n$L(\\tau) = \\sum_{n=1}^{N_a} \\sum_{i=1}^{N} (\\|x^{(n)}(t_i) - \\hat{x}^{(n)}(t_i)\\|^2 + \\|u^{(n)}(t_i) - \\hat{u}^{(n)}(t_i)\\|^2),$ (6)\nwhere 2 and \u00fb represent the predicted state and control from the Transformer, respectively.\nInference: Once trained, the Transformer model can be used to autoregressively generate an open-loop trajectory for warm-starting. In particular, given an initial input in the form of an initial state and user-defined values for the performance metrics, trajectory generation is defined by the following procedure: (i) the Transformer predicts a control \u00fb1, (ii) the state x1 and control \u00fb\u2081 are propagated to compute the next state x2, (iii) the performance parameters are updated, and (iv) the previous three steps are repeated until the entire trajectory has been generated. In step (ii), the \u201cdynamics-in-the-loop"}, {"title": "", "content": "always dynamically feasible. The update of the performance parameters in step (iii) involves decreasing the reward-to-go R(t1) and constraint-violation budget C(t1), by the instantaneous reward I(x(ti), u(ti), ti) and constraint violation C(ti). Within this context, an effective strategy for selecting the performance parameters at initialization sets R(t1) as a (negative) quantifiable lower bound of the optimal cost and C(t1) = 0, incentivizing the generation of near-optimal and feasible trajectories. Ultimately, the generated trajectories serve as a warm-start for the SCP algorithm, which solves the non-convex trajectory optimization problem (Eq. 1), converging to a local optimum near the warm-start and ensuring constraint satisfaction.\nExtension of ART to CC-OCP and Post hoc acceptance check\nThis paper explores two novel aspects that stem from the above procedure. First, the constraint-violation budget is redefined to encapsulate chance constraints. Specifically, the constraint violation metric C(\u1e9e(X(tj), tj)) is defined as a binary indicator of chance constraint satisfaction, using Eq. 2:\n\n$C(B(x(t_j), t_j)) = \\begin{cases}\n1 & \\text{if } M^*(x(t_j)) + \\beta(X(t_j), t_j) \\leq 0\\\\\n0 & \\text{otherwise}.\n\\end{cases}$ (7)\nIt should be noted that the state covariance history is not encoded in the trajectory representation in Eq. 3. However, the above constraint violation metric can implicitly inform that the mean states of the optimized trajectories of the CC-OCP have a probabilistic margin to path constraints. This enables ART to understand the error covariance attached to the current state and predict the near-optimal control law that probabilistically satisfies the safety constraints.\nSecondly, a confidence metric is developed to evaluate the quality of the generated trajectory and determine whether it should be used as a warm-start to the SCP during autonomous operations. Specifically in safety-critical environments, it is crucial to ensure the reliability of the model's output and detect out-of-distribution scenarios. This motivates the development of criteria for accepting or rejecting the AI-generated output, which is embedded within the decision-making process. Ultimately, the acceptance threshold should be tied to the final performance of the SCP's converged solution, allowing for the prediction of the SCP's outcome without the need to solve the non-convex optimization problem.\nThis work proposes a post hoc evaluation criterion based on the error between desired and realized performance parameters, namely:\n\n$E_p = {E_R, E_C} = {\\frac{R_{ART} - R_{des}}{R_{des}}, \\frac{C_{ART} - C_{des}}{}}\n}.$ (8)\nConcretely, this criterion assesses the difference between the performance of the generated trajectory and the desired performance that is used to condition the autoregressive generation process. This quantitative evaluation provides a basis for deciding whether the trajectory meets the required standards for use in safety-critical operations. If the post hoc check is successful, the ART-generated trajectory is used as the warm-start for the SCP; otherwise, a fallback trajectory is employed."}, {"title": "4. RENDEZVOUS SCENARIO IN LOW EARTH ORBIT", "content": "The rendezvous scenario considered in this paper is a passively safe transfer of a binary system of spacecraft in LEO, from an initial to a target condition with four possible pre-docking waypoints (\u00b1 R-bar and \u00b1 V-bar) of the target. The scenario is inspired by [21] [22], which details are summarized in Table 1. The fuel consumption is considered as a performance metric to be minimized in the optimization problem, where it is assumed that thrusters are always aligned with the direction of the desired control input. The reward-to-go is then defined as follows:\n\n$R(t) = - \\sum_{j=i}^{N} I (x(t_j), u(t_j), t_j) = - \\sum_{j=i}^{N} || \\Delta v(t_j)||^2$.\n(9)\nRelative Spacecraft Dynamics\nThe relative motion between the servicer and the target is denoted by the state x \u2208 R6, and u \u2208 R\u00b3 is the control action that represents a maneuver applied by the actuation system.\nAn absolute reference orbit of the target spacecraft around a gravitational body in a two-body problem is uniquely defined by a set of orbital elements (OE): \u0153 \u2208 R6. One representation is the quasi non-singular OE [23]: \u0153 = {a,v, ex, ey, i, \u03a9}, where a is the semi-major axis, v = M + w is the mean argument of latitude, M is the mean anomaly, w is the argument of periapsis, {ex, ey} = {e cos(w), e sin(w)} is the eccentricity vector, e is the eccentricity, i is the inclination, and is the right ascension of the ascending node. The relative orbital motion of the servicer with respect to the target can be expressed equivalently using a relative Cartesian state, or using Relative Orbital Elements (ROE) which are nonlinear combinations of the OE of the servicer and the target [18]. The relative Cartesian state can be expressed in the Radial-Tangential-Normal (RTN) reference frame centered on the target that rotates around a primary body. The states are Xrtn = {drrtn,dvrtn} \u2208 R6, where drrtn = {drr, drt, drn} \u2208 R\u00b3 and dvrtn = {\u03b4\u03c5r, \u03b4\u03c5\u03c4,\u03b4\u03c5n} \u2208 R3 denote the relative position and velocity in the RTN frame, respectively. The quasi-nonsingular ROE [18] is a nonlinear combination of the OE of the servicer (denoted with subscript s) and the target (denoted with no subscript) as: Xroe = {\u03b4\u03b1, \u03b4\u03bb, \u03b4\u03b5, \u03b4\u03b5, \u03b4\u03af\u03c7, \u03b4\u03af\u03c8} \u2208 R6, where \u03b4\u03b1 = (as - a)/a is the relative semi-major axis, \u03b4\u03bb = Vs(\u03bds +ws\u2212\u03bd\u2212w)\u2212(\u03a9s \u2013 \u03a9) cos(i) is the relative mean longitude, {\u0431\u0435\u0445, \u0431\u0435\u0443} = \u03b4\u03b5{cos(4), sin(p)} = {es cos(ws) \u2013 e cos(w), es sin(ws) \u2212 e sin(w)} is the relative eccentricity vector, and {\u03b4\u03af\u03c7, \u03b4\u03af\u03c8} = di{cos(4), sin($)} = {is \u2212i, (\u03a9\u03c2 \u2013 \u03a9) sin(i)} is the relative inclination vector. There exists both a nonlinear exact map and a first-order one-to-one mapping between relative Cartesian and ROE state. The latter is expressed as xrtn(t) \u2248 \u03a8(t)xroe(t), where matrix \u03a8 \u2208 R6\u00d76 is defined in [18] [24] [14]. For small spacecraft separation, the first-order linear map offers an accurate mapping of constraints between state representations. The discrete-time linearized perturbed and controlled relative orbital dynamics of the servicer to the target is expressed more accurately in the ROE state compared to the RTN state, particularly for a large separation of spacecraft [18]. A state transition matrix (ti+1,ti) that includes a variety of orbital perturbations is derived in [25] [26] [27], and the control input matrix B(ti) is derived in [28] [29], both as a function of the target's orbital elements.\nThe control action is modeled as a net variation of the servicer's velocity (delta-v) in the RTN frame u = \u0394\u03c5rtn \u2208 R3.\nIn the rendezvous scenario, some constraints are more naturally formulated on the relative Cartesian state (e.g., terminal docking conditions and waypoints, safety-critical domains, etc.) [30][31][6], whereas others are more advantageously formulated on the ROE state (e.g., perturbed orbital dynamics and passive safety conditions) [25][32][14]. In the remainder of the paper, an ROE representation, which offers improved dynamics fidelity, is adopted for the formalization of the dynamics model in the OCP, i.e., x = xroe\nUncertainty Modeling\nThree uncertainty sources are considered in this paper: navigation error, actuation error, and unmodeled system dynamics. In particular, in this work, closed-loop behavior is modeled within open-loop optimization by assuming that the servicer acquires at each instant ti a new estimate of its relative state with a specified state error covariance. This uncertainty is then affected by the maneuver applied at ti (actuation error), and by the process noise (unmodeled system dynamics error) along the free drifting trajectory after the application of the maneuver. These three sources of uncertainties are detailed in the following.\nNavigation error-The filtered state estimate at ti is represented as a Gaussian distribution: N\u00e6nav (ti), Xnav (ti)), where \u00e6nav (ti) and Xnav (ti) denote the estimated mean and error covariance matrix, respectively. It is assumed that at each iteration, the mean estimate is equivalent to the designed mean trajectory, i.e., \u00e6nav (ti) = x(ti)."}, {"title": "", "content": "The values of navigation uncertainty are based on the Abso-"}, {"title": "", "content": "lute and Relative Trajectory Measurement System (ARTMS) [33], which is an angles-only navigation system that has been demonstrated on the NASA Starling 4x CubeSat swarm mission in LEO [34]. The navigation performance of ARTMS can be modeled as a function of the distance to the target as follows:\n\n$X_{nav}(x(t)) = \\frac{s s}{\\rho} $, (10)\nwhere p := ||drrtn||2, and s\u2208 R characterizes the navigation accuracy of each component of ROE. In this work, s is modeled as a function of relative range as follows:\n\n$s = \\begin{cases}\ns_1 & \\text{if } \\rho > \\rho_1,\\\n\\frac{s_1(\\rho - \\rho_2) + s_2(\\rho_1 - \\rho)}{\\rho_1 - \\rho_2} & \\text{if } \\rho_2 < \\rho < \\rho_1,\\\ns_2 & \\text{otherwise,}\n\\end{cases}$\n(11)\nwhere (p1, p2) and (s1,s2) are the pre-defined ranges and parameters. When the relative range is in p2 < p < P1, the parameter is linearly interpolated.\nActuation error-An actuation error of impulsive maneuvers is formulated based on the Gates model [35], which yields a zero-mean Gaussian noise in the frame {e1, e3, e3} where e\u2081 is the unit vector in direction of Av and the e2 and e2 are in arbitrary-oriented orthogonal unit vectors. Specifically, the covariance V \u2208 R3\u00d73 is given as a function of Av as follows:\n\nV(\u0394v) = Diag{\u03c3\u00b2 + \u0394\u03c5\u00b2\u03c3,\u03c3\u00b2 + \u0394\u03c5\u00b2\u03c3\u03b7, \u03c3\u00b2 + \u0394\u03c5\u00b2\u03c32},\n(12)\nwhere \u0394\u03c5 := ||\u0394\u03c5||2, and {\u03c3s, \u03c3\u03c1, \u03c3r, \u03c3\u03b1} \u2208 Ro are model parameters. Because it is assumed that u = \u2206vrtn, the covariance of the control input U \u2208 R3\u00d73 is given as\n\n$U(u(t_i)) = R(\\Delta v(t_i))V(\\Delta v(t_i))R^T(\\Delta v(t_i))$, (13)\nwhere R(Av(t)) is a rotation matrix from the coordinate frame {e1, e3, e3} defined based on \u2206v(ti) to the RTN frame.\nUnmodeled system dynamics\u2014The discrepancy between the linearized dynamics model in Eq. 1 and the true non-linear dynamics can be modeled as a discrete-time zero-mean white Gaussian process noise, where its covariance is denoted as Q(ti) \u2208 R6\u00d76. In this work, a time-invariant constant process noise matrix in the ROE state space is assumed.\nLinearized covariance dynamics-With the above assumptions, the state error covariance X (ti) evolves in the follow-"}, {"title": "", "content": "ing linearized dynamics:\n\nX(ti) = Xnav(x(ti)) + B(ti)U(u(ti))B(ti) + Q(ti)\nX(ti+1) = \u03a6(ti+1, ti)X(ti)\u03a6(ti+1,ti). (14)\nIt is important to note that the above equation shows that the state covariance history, X(ti), can be recovered from the nominal states and control inputs history,(x(ti), u(ti)). Furthermore, since all uncertainties are modeled as Gaussian, the Gaussianity of the state covariance is preserved throughout the trajectory under the linearized dynamics model.\nDetails on the parameters considered in these uncertainty models can be found in Table 2.\nSafety Constraints with State Uncertainty\nTwo safety constraints are considered in this rendezvous trajectory optimization problem: collision avoidance and passive safety. Both constraints are evaluated based on the range between the two spacecraft, where the servicer is ensured to be excluded from safety domains around the target. In actual docking missions [36], multiple safety domains are employed, which progressively reduce in size as the servicer spacecraft approaches the target. During the initial phase of rendezvous, the servicer's position is required to remain outside the Approach Ellipsoid (AE). As the relative range decreases, this safety boundary contracts into the Keep-Out Zone (KOZ) for the final approach phase. Both domains are modeled as an ellipsoid centered around the target, where the dimensions are characterized by a matrix P = Diag{1/r2, 1/r\u00b2,1/r2} \u2208 R3\u00d73, where {rr, rt, rn} are the semi-major lengths in R/T/N directions, respectively. The epoch where the safety ellipsoid is switched from AE to KOZ is defined by a parameter Nae-to-koz. Table 2 lists the details of these values.\nAs defined in Eq. 1, passive/free-drift safety is considered in this work, ensuring that an uncontrolled trajectory remains safe for at least Tsafety seconds after a contingency occurring at ti. This safety requirement is enforced at q-o confidence level, applied to not only the state error covariance at ti but also the covaraince propagated along the uncontrolled trajectory. While a naive implementation of such a constraint would require numerous evaluations of inter-spacecraft separation along the uncontrolled arcs, the approach proposed in [14] allows for a single constraint evaluation to assess the safety of an uncontrolled trajectory originating from t\u2081. This evaluation is expressed as a function of the state and covariance at the contingency instant (x(ti), X (ti)) in the form of Eq. 2. Due to the non-convexity of this constraint, sequential linearization around a reference trajectory ((ti), \u016b(ti)) and its corresponding covariance history X (ti) is introduced as"}, {"title": "", "content": "follows [6]:\n\n$-\\alpha_{ps}(t_i)x(t_i) + b_{ps}(t_i) + \\beta(X(t_i), t_i) \\leq 0$, (15)\n\n$\\alpha_{ps}(t_i) = \\sqrt{\\Psi^T(t_i)\\Phi^T(t^*, t_i) D^T P D \\Phi(t^*, t_i)\\Psi(t_i)} \\in R^{6 \\times 6}$\n\n$b_{ps}(t_i) = x^T(t_i) \\Psi^T(t_i)\\Phi^T(t^*, t_i) D^T P D \\Phi(t^*, t_i)\\Psi(t_i)x(t_i) \\in R_{\\geq 0}$\n\n$\\beta(X(t_i), t_i) = q(i)\\|X(t^*)^{1/2}\\alpha_{ps}(t_i)\\|^2 \\in R_{\\geq 0}$.\n(16)\nHere, q(i) refers to the percent point function (PPF), indicating the desired confidence level. It is assumed that X (ti) follows a Gaussian distribution (cf. Eq. 14), for which the PPF is readily available. The matrix D = [03, I3] \u2208 R3\u00d76 is used to extract the relative position, drrtn, from the state vector \u00e6rtn = {drrtn, \u03b4\u03c5rtn}. The instant t* represents the moment of the minimum distance between the target and the servicer in the free-drifting period [ti, ti + Tsafety], following the contingency. This evaluation is performed on the reference trajectory with the covariance state computed from it. The covariance at the minimum separation instance, X(t*), is obtained by propagating X (t\u2081) along the uncontrolled trajectory after contingency using Eq. 14. Notably, the collision avoidance constraint represents a special case of passive safety where Tsafety = 0, a condition that lacks fault tolerance.\nSequential Convex Programming\nAt each iteration of SCP, the following convex subproblem is solved:\n\ngiven $x(t_i)$, u(ti) $\n\nminimize\n$\\sum_{i=1}^{N}\\|u(t_i)\\|^2 + I_{pen} (\\varepsilon)$\n$\\alpha_{ps}(t_i), b_{ps}(t_i), \\beta(X(t_i), t_i)$\nx(ti), u(ti), Ei\nsubject to\nx(ti+1) = \\Phi(ti+1, ti) (x(ti) + B(ti)u(ti))\n$\\alpha_{ps}(t_i)x(t_i) + b_{ps}(t_i) + \\beta(X(t_i), t_i) \\leq \\varepsilon_i\\forall i \\in [1,N]$\nx(t1) = xo and x(t) = xf,\n(17)\nwhere & = {i}1 represents a virtual buffer [37] that ensures the feasibility of the subproblem. The utilization of the virtual buffer is further penalized in the objective function via Ipen (E). It is important to note that no constraints on control input are imposed in this problem, assuming that the spacecraft possesses sufficient thrust capability for the scenario under consideration.\nThis work adopts an SCP algorithm based on SCVx* [20]. For a detailed definition of the penalty term Ipen(\u00a7) and the update scheme of the parameters, the reader is referred to [20]. The workflow of the SCP is illustrated in Figure 2. At each iteration, the reference state covariance history X (ti) is recovered from the reference state and the control history (x(ti), u(ti)) using Eqs. 10, 11, 12, and 14. Subsequently, Eq. 16 provides the linearized chance constraint (cf. Eq."}, {"title": "5. EXPERIMENTAL RESULTS", "content": "This section evaluates the performance of the proposed approach in challenging rendezvous scenarios. The section begins with a detailed discussion of the dataset generation process and the Transformer architecture employed. Then, simulation results are presented, demonstrating statistically significant improvements in trajectory planning across diverse scenarios. Lastly, the impact of the post hoc acceptance check is assessed, along with qualitative analyses of selected trajectory examples.\nDataset generation. To generate a dataset of trajectories suitable for training the Transformer model, both the initial and terminal states are randomized within the domains specified in the last column of Table 1. Two datasets are generated: one where the trajectory optimization problem is solved in a deterministic fashion, and another where trajectory optimization is performed under chance constraints with provided uncertainty models. Each dataset contains Na = 115,000 sample trajectories, which are divided into a 90-10% train-test split. Specifically, ART is trained on 90% of the data, with the remaining 10% reserved for evaluation, i.e., warm-start analysis.\nThe trajectories in each dataset are obtained through a structured sequence of optimization steps. First, a convex Two-Point Boundary Value Problem (TPBVP) is solved from the initial to the final condition, representing the simplest convex relaxation of the problem in Eq. 1. Next, the convex solution is used to warm-start a non-convex problem that enforces a deterministic collision avoidance along the controlled trajectory (i.e., X(ti) = 0 and Tsafety = 0). Finally, the collision-avoidance solution is used to warm-start the problem in Eq. 1, which accounts for passive safety. The intermediate step of optimizing the deterministic collision avoidance trajectory is introduced due to the observed infeasibility of directly warm-starting the passive safety trajectory optimization with the convex TPBVP solutions, especially under chance-constrained scenarios (cf. Fig. 6). This approach ensures the collection of a more diverse trajectory dataset, including trajectories not directly accessible from the convex TPBVP warm-start. For each initial condition, the final feasible solution from the three trajectory optimizations is stored. Through this approach, each initial condition is associated with exactly one trajectory."}, {"title": "", "content": "Transformer\n(trained, RTN)\nTransformer\n(trained, ROE)\nmality due to warm-starting with ART.\n\u2022\nNumber of iterations required for SCP convergence: eval-\nuates the efficiency of each approach, with fewer iterations\nreflecting faster convergence.\n\u2022 Runtime of the algorithm: this includes the time required\nfor both warm-starting and SCP solution.\n\u2022 Infeasibility rate: the percentage of solutions that were\neither infeasible or failed to converge.\nThe majority of the subplots in Figures 5, 6 are plotted as\na function of the initial constraint-violation budget of CVX\nsolutions, Ccvx(t1), along the x-axis. Specifically, each\npoint on the x-axis represents an average of the results for\nall Ccvx(t1) greater or equal to that value. Intuitively,\nhigher values of Ccvx(t1) correspond to more challenging\nscenarios, whereby the CVX solution exhibits more frequent\nconstraint violations. In such cases, the optimization problem\nbecomes more complex, requiring greater adjustments to\nbring the solution within feasible bounds.\nLastly, the bottom right subplot displays the histogram of the\noptimality gap between the converged values of PS-CVX and\nPS-ART (i.e., JSCP,CVX - JSCP,ART) across the test trajectories.\nIn this plot, a positive value indicates that the PS-ART has\nachieved a more optimal solution compared to the PS-CVX.\nAdditionally, two red dotted lines mark the maximum and\nminimum values of the optimality gap across the entire test\nset.\nConcretely, the improvement in suboptimality achieved\nthrough warm-starting with ART is consistently demon-\nstrated in both deterministic and chance-constrained scenar-\nios. As observed in the top rows of Figures 5, 6, these results\nare confirmed across both RTN and ROE representations\nfor training and inference. The benefits are particularly\npronounced in trajectories with higher values of Ccvx(t1),\nachieving up to 32% and 17% cost improvements for the\ndeterministic and chance-constrained scenarios, respectively.\nWhen Ccvx(t1) is low, it indicates that the CVX is close\nto being passively safe, thereby reducing the comparative\nadvantages of using ART for simpler problmes, as the con-\nverged solutions of PS-CVX and PS-ART tend to be similar.\nConversely, significant improvements are observed when the\nART wam-start is applied to highly infeasible CVX solutions,\nhighlighting the effectiveness of ART in addressing more\nchallenging trajectory optimization problems.\nIn the middle rows of Figures 5, 6, the results further indicate\nthat warm-starts from ART converge to local optima more\nrapidly than those from CVX, resulting in fewer SCP itera-\ntions across the range of Ccvx(t1). The middle right subplots\nshow that inference using the"}, {"title": "", "content": "requires more computational time compared to solving a\nsingle convex TPBVP (CVX). However, the reduced number\nof iterations in the subsequent SCP results in a comparable\nor shorter overall runtime, highlighting the advantageous\nperformance of ART.\nAdditionally, the lower-left plots further indicate that the\ninfeasibility rate improves with the ART warm-start. In\nparticular, the initial guess provided by the ART effectively\nmitigates the increase in the infeasibility rate in more chal-\nlenging scenarios (i.e., high Ccvx(t1)) domain."}, {"title": "", "content": "the converged solution (PS-CVX-C), which is trapped at a\nlocal optimum with \u0394\u03c5 = 4.530 m/s. In contrast, the\ntrajectory generated by ART closely overlaps the converged\nsolution (PS-ART-C), resulting in a locally optimal solution\nwith \u0394\u03c5 = 3.797 m/s, significantly reducing total fuel\nconsumption."}]}