{"title": "Advanced POD-Based Performance Evaluation of Classifiers Applied to Human Driver Lane Changing Prediction", "authors": ["ZAHRA RASTIN", "DIRK S\u00d6FFKER"], "abstract": "Machine learning (ML) classifiers serve as essential tools facilitating classification and prediction across various domains. The performance of these algorithms should be known to ensure their reliable application. In certain fields, receiver operating characteristic and precision-recall curves are frequently employed to assess machine learning algorithms without accounting for the impact of process parameters. However, it may be essential to evaluate the performance of these algorithms in relation to such parameters. As a performance evaluation metric capable of considering the effects of process parameters, this paper uses a modified probability of detection (POD) approach to assess the reliability of ML-based algorithms. As an example, the POD-based approach is employed to assess ML models used for predicting the lane changing behavior of a vehicle driver. The time remaining to the predicted (and therefore unknown) lane changing event is considered as process parameter. The hit/miss approach to POD is taken here and modified by considering the probability of lane changing derived from ML algorithms at each time step, and obtaining the final result of the analysis accordingly. This improves the reliability of results compared to the standard hit/miss approach, which considers the outcome of the classifiers as either 0 or 1, while also simplifying evaluation compared to the \u00e2 versus a approach. Performance evaluation results of the proposed approach are compared with those obtained with the standard hit/miss approach and a pre-developed \u00e2 versus a approach to validate the effectiveness of the proposed method. The comparison shows that this method provides an averaging conservative behavior with the advantage of enhancing the reliability of the hit/miss approach to POD while retaining its simplicity.", "sections": [{"title": "I. INTRODUCTION AND MOTIVATION", "content": "SUPERVISED classification is a machine learning (ML) approach that involves training a model using a dataset with known labels, aiming to predict the class or category of new data [1]. Machine learning classifiers are a fundamental part of a wide range of artificial intelligence applications. Object detection, fraud and fault detection, text classification, medical diagnosis, and structural damage detection are examples of tasks in which ML classifiers are extensively employed.\nIt is essential to evaluate the performance of ML classifiers as it ensures their reliability and applicability to specific tasks they have been designed for, guiding model selection and improvement. Various evaluation metrics have been used for this purpose. According to [2], accuracy, recall, F-score, and precision are the most commonly used ones in recent years [3], [4], [5], [6], [7]. Receiver operating characteristic (ROC) and precision-recall (PR) curves are other frequently employed evaluation tools [8], [9], [10]. The ROC curve is a graphical tool for illustrating a classifier's performance by plotting detection rate (DR) against false alarm rate (FAR) values at various classification thresholds. The area under the ROC curve serves as a summery measure of the model's performance which ranges from 0.5, representing a model with no discriminative power, to 1, denoting a flawless model. Receiver operating characteristic curves can be deceptive when dealing with unbalanced data, making the model's performance seem better than it actually is. To address this common issue in the field of ML, PR curves are often considered a suitable alternative [11], [12], [13]. On a PR curve, precision is plotted against recall (another name for DR) at various thresholds. Like with ROC curves, a summery measure of a classifier's performance can be obtained by calculating the area under the PR curve which ranges from 0 to 1.\nClassification results are often affected by process parameters that are not accounted for by classifiers. Process parameters, which differ from training/model-specific hyperparameters, are task-specific factors that impact recognizability of the target and the final outcome. The size of damage in a damage detection task or the resolution of images used for disease diagnosis tasks are examples of process parameters. Despite their significance, these effects have not been directly accounted in any of the previously mentioned evaluation metrics, therefore have not received sufficient attention in evaluating ML classifiers. To tackle this problem, the probability of detection (POD) approach can be utilized to assess classifiers' performance [14].\nThe POD approach is frequently employed for evaluating the efficiency of nondestructive testing (NDT) techniques, and finds applications in safety-critical domains such as aerospace and military fields [15], [16], [17]. This approach is also attracting attention in other areas where it was less common before, such as structural health monitoring field and nuclear industry [18], [19]. Probability of detection-based evaluation results in a curve referred to as the POD curve. In NDT field, the POD curve illustrates the probability of detecting a flaw as a function of its size. This curve can be generated using either binary data indicating whether the target is detected or not (hit/miss approach), or continuous data providing quantitative assessment of the target (\u00e2 versus a approach) [17], [20].\nAmeyaw et al. [21] employed the POD approach to assess and compare the performance of ML classifiers. As examples, artificial neural network (ANN), support vector machine (SVM), hidden Markov model (HMM), random forest (RF), and improved versions of these classifiers used for human driver lane changing behavior (LCB) prediction were chosen for performance assessment. As a common driving behavior, lane changing is one of the leading contributors to road accidents and its prediction is essential for autonomous vehicles and advanced driver-assistance systems [22]. Modern LCB prediction relies on ML algorithms; however, further improvement in the performance of these algorithms is necessary to facilitate their widespread application in commercial products [23]. Ameyaw et al. [21] considered the time remaining to the lane changing event as the process parameter. The \u00e2 versus a approach to POD was taken using DR values calculated at each time step as the continuous data needed to generate the POD curve. This enabled the comparison and illustration of differences between traditional and enhanced classifiers, in a manner distinct from conventional evaluation metrics such as ROC, DR, and ACC.\nIn the previous study [24], a method for further improving the performance of these algorithms was proposed. Multilevel features extracted from a deep autoencoder were utilized to train an ensemble of classifiers of one type whose hyperparameters were optimized using genetic algorithm. Performance evaluation was applied using the \u00e2 versus a approach to POD, employing the lane changing probabilities obtained from ML algorithms at each time point as the continuous response signal, and considering the same process parameter as used in Ameyaw et al. [21]. Comparison with results from this paper showed the success of the proposed method in performance enhancement.\nIn the present paper, a modified hit/miss approach to POD is taken to assess the classifiers developed in the previous study [24]. In this context, the standard hit/miss approach considers the outcome of the classifier as either 0 (LCB not detected) or 1 (LCB detected). However, in reality, these outcomes are not absolute; rather there is a probability associated with each potential outcome. Therefore, the results from hit/miss approach might not be reliable when comparing the performance of several classifiers to chose the most suitable one for the specified task. To take this fact into account when using hit/miss approach to evaluate classifiers, the final result of the POD analysis is calculated using the probability of lane changing obtained from ML algorithms at each time step. The hit/miss approach is more straightforward than the \u00e2 versus a approach. This modification simplifies the performance evaluation process compared to the \u00e2 versus a approach proposed in previous contributions [21], [24] and increases reliability compared to the standard hit/miss approach. The results obtained from the proposed method are compared to those obtained from the standard hit/miss and the \u00e2 versus a approaches to POD, validating the effectiveness of the proposed method.\nThe paper is organized as follows: following the introductory section, an overview of the POD approach and the employed algorithms is provided in Section II; the proposed performance evaluation methodology is described in Section III; in Section V, the results of employing the proposed approach is presented and compared to results from standard POD approaches; finally, conclusions are drawn in Section VI."}, {"title": "II. THEORETICAL BACKGROUND", "content": "This section provides a concise overview of the hit/miss approach to POD and the ML classifiers considered in this paper. The hit/miss approach can be employed to conclude the relationship between detection probability and a considered process parameter using binary (hit/miss) response data. To reach this purpose, a linear model is required to describe the correlation between the continuous process parameter and the binary (0 or 1) data. Ordinary linear regression is not suitable for modeling such a correlation, since it assumes that the response data is continuous and has no bounds. Generalized linear models are used to tackle this problem [17]. A generalized linear model with a single process parameter can be written in the form of\n$g(y) = b_0 + b_1a,$"}, {"title": "III. MODIFIED HIT/MISS APPROACH TO POD", "content": "The methodology for modifying the hit/miss approach to POD to evaluate ML classifiers is explained in this section. This includes taking the probability of hit/miss data obtained from ML algorithms for different process parameter values into account for performance evaluation. The suggested methodology is illustrated in Fig. 2. First, test data corresponding to various process parameter values are fed into a pre-trained ML model. For instance, in the LCB prediction task, where the process parameter is the time remaining until the lane changing event, the trained classifier is provided with driving data recorded over time. It is assumed that the probability of the classifier detecting the target for a given process parameter value is determined based on the results of 10 separate experiments conducted with that specific process parameter value. The number of experiments that result in target detection (n) is calculated by multiplying this probability (P) by 10 and rounding the result\n$n = round(10P).$"}, {"title": "IV. MACHINE LEARNING CLASSIFIERS", "content": "Machine learning classifiers considered for performance evaluation in this study include ANNs, SVMs, HMMs, and RFs developed previously for human driver LCB prediction. The methodology for LCB prediction using these classifiers, and employing the \u00e2 versus a approach to POD to assess them is thoroughly described in [24] and is repeated here briefly.\nIn the first step of the proposed methodology, the features required as inputs to ML models were extracted using a deep autoencoder. Driving data regarding the status of the considered vehicle and its surrounding vehicles were used to train the autoencoder. After training, the encoder part of the network, including 4 hidden layers with 24, 16, 8, and 4 neurons, was utilized to extract multi-level features from the data, which were then fed to ML classifiers.\nThree classes of LCB were considered: lane changing to left (LCL), lane changing to right (LCR), and lane keeping. Features from each encoder layer were utilized to train two binary classifiers of each type, where each classifier regarded either LCL or LCR as the positive class and remaining two classes as negative. This process was done considering features from 4 encoder layers, 4 classifier types, and two binary classifiers of each type, resulting in a total of 32 trained models. The hyperparameters of all ML models were optimized using a genetic algorithm."}, {"title": "V. APPLICATION AND RESULTS", "content": "The modified and standard hit/miss approaches to POD are used to evaluate the classifiers trained in [24]. Data obtained from the SCANER\u2122\u2122 studio driving simulator shown in Fig. 4 was utilized for this purpose. The simulator uses virtual sensors such as cameras, radar, and lasers to collect data, providing a comprehensive understanding of the vehicle's environment. The simulated driving environment consists of a highway with two lanes in each direction. Three drivers, aged 25 to 38 and holding valid driver's licenses, were recruited to collect the required data. Each participant drove for approximately 40 minutes to obtain the training dataset, with an additional 10 minutes of driving data recorded for the test phase. During the simulation, drivers were permitted to overtake slower vehicles and return to their original lane [29]. The vehicle's lane was determined by the position of its center point, and lane changes were identified by shifts in this position. A lane changing event began with the last significant steering wheel adjustment, and the period from this adjustment to the lane shift was defined as the lane changing interval [8]. The driving environment and lane changing/keeping behaviors are depicted in Fig. 5.\nConsidering the time remaining until the lane changing event as the process parameter, and the probability of detecting LCBs at each time point as the response signal, the \u00e2 versus a approach to POD was employed to assess the classifiers using test data, and specify the algorithms that were able to detect LCBs earlier. The winner-take-all ensemble strategy was applied to a90/95 values from classifiers of the same type trained to predict the same LCB. Using this strategy, multiple classifiers compete and the one with the best performance determines the ensemble output. In the next section, the 32 classifiers developed in [24] will be evaluated using the modified hit/miss approach introduced in Section III and the results will be compared to those from standard POD approaches."}, {"title": "VI. CONCLUSION", "content": "This paper proposes POD-based performance evaluation of ML classifiers using a modified hit/miss approach. Unlike common performance evaluation metrics typically used for assessing ML algorithms, the POD-based approach considers the effects of process parameters in evaluation, offering new insights into the reliability of ML algorithms. The hit/miss approach to POD is modified here by incorporating the probability of target detection derived from ML algorithms for various process parameter values and obtaining the final result of the analysis accordingly. This enhances the reliability of the results compared to the standard hit/miss approach, which considers classifier outcomes as either 0 or 1, as in reality, these outcomes are probabilistic rather than absolute.\nAs an example, the POD-based approach is used to evaluate ML models trained on multi-level features from a deep autoencoder for predicting drivers' LCB using data from a driving simulator. The time until the predicted (and unknown) lane changing event is taken as the process parameter, and the classifiers' ability to predict the intended driver behavior is assessed relative to the time remaining before the event.\nPerformance evaluation results from the proposed modified hit/miss approach are compared to those from the standard hit/miss approach and the \u00e2 versus a approach to POD. Modifying the hit/miss approach makes its outcomes more similar to those from the \u00e2 versus a approach. These results are more reliable than those based solely on 0/1 values when selecting appropriate features and evaluating the algorithms' effectiveness in predicting upcoming LCBs early. The hit/miss approach is more straightforward than the \u00e2 versus a approach to POD; this modification enhances its reliability while maintaining its simplicity."}]}