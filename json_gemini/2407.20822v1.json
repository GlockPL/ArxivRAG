{"title": "Adding Circumscription to Decidable Fragments of First-Order Logic: A Complexity Rollercoaster", "authors": ["Carsten Lutz", "Quentin Mani\u00e8re"], "abstract": "We study extensions of expressive decidable fragments of first-order logic with circumscription, in particular the two-variable fragment FO\u00b2, its extension C\u00b2 with counting quantifiers, and the guarded fragment GF. We prove that if only unary predicates are minimized (or fixed) during circumscription, then decidability of logical consequence is preserved. For FO\u00b2 the complexity increases from CONEXP to CONEXPNP-complete, for GF it (remarkably!) increases from 2EXP to TOWER-complete, and for C\u00b2 the complexity remains open. We also consider querying circumscribed knowledge bases whose ontology is a GF sentence, showing that the problem is decidable for unions of conjunctive queries, TOWER-complete in combined complexity, and elementary in data complexity. Already for atomic queries and ontologies that are sets of guarded existential rules, however, for every k > 0 there is an ontology and query that are k-EXP-hard in data complexity.", "sections": [{"title": "1 Introduction", "content": "There are various approaches to defining non-monotonic logics such as default rules, autoepistemic operators, and circumscription. Most of these are mainly used with propositional logic rather than with first-order logic (FO), for two reasons. First, many of the approaches such as default rules can yield non-intuitive results when used with first-order logics, interacting in unexpected ways with existential quantification; see for example (Baader and Hollunder 1995) for a discussion of this issue. And second, the undecidability of first-order logic of course carries over to its non-monotonic variants.\nDescription logics (DLs) are decidable fragments of FO for which non-monotonic variations have been studied extensively, see e.g. (Baader and Hollunder 1995; Donini, Nardi, and Rosati 2002; Bonatti, Lutz, and Wolter 2009; Giordano et al. 2013; Bonatti et al. 2015b). It turned out that circumscription provides one of the most well-behaved of such variations: it does not interact in dramatic ways with existential quantification, has a simple and appealing semantics that boils down to minimizing the interpretation of certain predicates, and comes with a clean way to preserve the decidability of the base logic. The latter is in fact achieved by permitting only unary predicates to be minimized or fixed during minimization while binary predicates must be allowed to vary (Bonatti, Lutz, and Wolter 2009). This still covers the main application of circumscription which is reasoning about typical properties of objects that belong to a certain class. To model the statement that KR papers are typically interesting, for example, one may write\nKRPaper(x)^\u00ababKRpaper(x) \u2192 Interesting(x)\nand then minimize the unary 'abnormality predicate' abKRpaper. In this way, one may conclude that any concrete KR paper is interesting unless there is concrete evidence against that. For more information on DLs with circumscription, we refer to (Bonatti et al. 2015a; Stefano, Ortiz, and Simkus 2023; Lutz, Mani\u00e8re, and Nolte 2023)\nIt is well-known that DLs are generalized by various decidable and more expressive FO fragments, of which the two-variable fragment FO2, the guarded fragment GF, and the extension C\u00b2 of FO2 with counting quantifiers are the most important ones. In this paper, we ask the following questions: Do expressive decidable fragments of FO remain decidable when extended with circumscription (when only unary predicates are minimized or fixed)? And if so, what is the impact on computational complexity? The answers are, in our opinion, somewhat surprising.\nWe study the reasoning problems of circumscribed consequence and circumscribed querying. In the former, two sentences \u03c6 and \u03c8 are given along with a 'circumscription pattern' CP that specifies which predicates are minimized, fixed, and varying. We are then interested in deciding whether \u03c8 holds in every model that is minimal in the sense specified by CP, written \u03c6 \u22a8CP \u03c8. Circumscribed querying is defined in the same way, but now \u03c6 is a knowledge base that consists of a sentence from the FO fragment under consideration (specifying an ontology) and a database, and \u03c8 is a query. As query languages, we consider single-atom queries (AQs), conjunctive queries (CQs), and and unions thereof (UCQs).\nWe start with studying FO\u00b2. Similarly to the case of description logic (Bonatti, Lutz, and Wolter 2009), a crucial step for proving decidability is to show that circumscribed FO2 has the finite model property (FMP) in the sense that if \u03c6 \u22adCP \u03c8, then there is a CP-minimal model A of \u03c6 with A \u22a8 \u00ac\u03c8 that is of bounded size. To prove this, we build on a well-known construction from (Gr\u00e4del, Kolaitis, and Vardi 1997), used there to establish the FMP of non-circumscribed FO2, which converts a potentially infinite model A of an FO2 sentence \u03c6 into a model B of single exponential size. To apply this construction in the circumscribed case, however, we need an additional condition to be satisfied:"}, {"title": "2 Preliminaries", "content": "When speaking of first-order logic (FO), we generally mean the version with equality and constants (unless otherwise noted) and without function symbols. FO\u00b2 is the two-variable fragment of FO, obtained by fixing two variables x and y and disallowing the use of any other variables (Scott 1962; Mortimer 1975; Gr\u00e4del, Kolaitis, and Vardi 1997). C\u00b2 is the extension of FO\u00b2 with counting quantifiers of the form \u2203\u2264n, \u2203\u2265n, and \u2203=n for every n \u2265 0 (Gr\u00e4del, Otto, and Rosen 1997; Pacholski, Szwast, and Tendera 1997; Pratt-Hartmann 2005). In FO2 and C2, we generally only admit predicates of arity at most two. In the guarded fragment of FO, denoted GF, quantification is restricted to the pattern\n\u2200\u1ef9(\u03b1(x, \u1ef9) \u2192 \u03c6(x, \u1ef9))\n\u2203\u1ef9(\u03b1(x, \u1ef9) \u2227 \u03c6(x, \u1ef9))\nwhere \u03c6(x, \u1ef9) is a GF formula with free variables among x, y and \u03b1(x, \u1ef9) is a relational atom R(x, \u1ef9) or an equality atom x = y that in either case contains all variables in x, y (Andr\u00e9ka, N\u00e9meti, and van Benthem 1998; Gr\u00e4del 1999). The formula \u03b1 is called the guard of the quantified formula.\nWe use the standard notation of first-order logic, denoting structures with A and B, their universes with A and B, and the interpretation of predicates R with RA and RB. We reserve a countably infinite set of predicates of each arity. We use || to denote the length of the formula \u03c6, that is, the length of \u03c6 when encoded as a word over a suitable alphabet.\nCircumscription. A circumscription pattern is a tuple CP = (\u227a, M, F, V), where M, F and V partition the unary predicates into minimized, fixed and varying predicates, and \u227a is a strict partial order on M called the preference relation. The order \u227a also induces a preference relation \u227aCP on structures by setting B \u227aCP A if the following conditions hold:\n1. B \u2286 A and cA = cB for all constants c,\n2. for all P \u2208 F, PB = PA,\n3. for all P \u2208 M with PB \u228a PA, there is a Q \u2208 M, Q \u227a P, such that QB \u228a QA,\n4. there exists a P \u2208 M such that PB \u2282 PA and for all Q \u2208 M, Q \u227a P implies QB = QA.\nA CP-minimal model of an FO sentence \u03c6 is a model A of \u03c6 such that there is no B \u227aCP A that is a model of \u03c6. Note that predicates of arity larger than one always vary to avoid undecidability (Bonatti, Lutz, and Wolter 2009). We also assume that nullary predicates always vary, which is w.l.o.g. as they can be simulated by unary predicates.\nFor FO sentences \u03c6 and \u03c8, we write \u03c6 \u22a8CP \u03c8 if every CP-minimal model A of \u03c6 satisfies A \u22a8 \u03c8. Take any fragment F of FO such as FO2. With circumscribed consequence in F we mean the problem to decide, given sentences \u03c6 and \u03c8 from F and a circumscription pattern CP, whether \u03c6 \u22a8CP \u03c8.\nOntology-mediated querying. Ontology-mediated querying with circumscribed knowledge bases, as recently studied in (Lutz, Mani\u00e8re, and Nolte 2023), can be seen as a version of circumscribed consequence where \u03c6 encodes an ontology and a database and \u03c8 is a query. We next make this precise."}, {"title": "3 The Two-Variables Fragment FO2", "content": "We show that circumscribed consequence is CONEXPNP-complete in FO2 and so is circumscribed AQ-querying, in combined complexity. Note that querying with CQs or UCQs is undecidable already for non-circumscribed FO2. We remark that this section showcases the general approach that we also use, in a more intricate form, for GF later on.\nAn FO2 sentence is in Scott normal form if it has the form\n$ = \u2200xy \u2227 ^ ^ \u2200x\u2203y Vi\ni=1..n\n(*)\nwith and Vi quantifier-free. It has been shown in (Scott 1962; Gr\u00e4del, Kolaitis, and Vardi 1997) that every FO2 sentence can be converted in polynomial time into an FO2 sentence in Scott normal form that is a conservative extension of 60: every model of is a model of 40\u03bf and, conversely, every model of 40 can be extended to a model of by interpreting the fresh predicates in \u03c6.\nWe now establish an improved finite model property for non-circumscribed FO2 that satisfies Property (\u2661) from the introduction.\nProposition 1. Let be an FO2 sentence of the form (*), \u2211 = sig(), A a model of , and k = |\u03a3 \\ const()|. Then there exists a model B of & such that\n1. |B| < |$|n3+1.2n=4(k+6);\n2. tp(A) = tp(B);\n3. {\u03b1 \u2208 B | tp\u03a3,\u2211(a) = t}| \u2264 |{a \u2208 A | tp1,\u2211(a) = t}|\nfor every 1-type t on \u03a3;\n4. c4 = cB for all constants c in \u0444.\nWe remark that the construction from (Gr\u00e4del, Kolaitis, and Vardi 1997) only yields Proposition 1 without Point 3, that is, it may increase the number of instances of some of the 1-types realized in the original model. We next use Proposition 1 to establish the following.\nProposition 2. Circumscribed FO\u00b2 has the finite model property: if $,\u03c8 are FO\u00b2-sentences with $ #CP \u03c8, then there is a CP-minimal model A of v = $ ^ \u00ab\u03c8 with\n|A| < |v|n3+1.4n\u2203(k+6), where n\u2203 is the number of existential quantifiers in the Scott normal form of v and k = |sig(v) \\ const(v)|.\nProof. Assume that #cp . Then there is a CP-minimal model A of with A \u2260 \u03c8. Thus A is a model of \u00a2 \u2227 \u00ac. By Proposition 1 there is a model B of \u00a2 \u2227 \u00ac that satisfies Points 1-4 of the proposition, with \u2211 = sig(^\u00ac). We show that B is a CP-minimal model of 6.\nAssume to the contrary that there is a model B' of & such that B' CP B. To obtain a contradiction, we construct a model A' of & such that A' <CP A.\nOf course, A' must have the same universe as A, thus we set A' = A. By Point 3 of Proposition 1, we find an injection f : B \u2192 A such that tp\u03a3,\u2211(b) = tpa,s(f(b)) for all b\u2208 B. We define A' so that its restriction to the range of f is isomorphic to B', with f being an isomorphism. In particular, this restriction interprets all constants. To define the remaining part of A', we use cloning. By Point 2 of Proposition 1 and choice of f, for every a \u2208 A that is not in the range of f we find a a \u2208 A that is in the range of f and such that tp(a) = tp1,\u2211(a). We then make a a clone of a in A', that is, we set\n\u2022 tp\u03a3,\u2211(a) = tpa',\u2211(a);\n\u2022 tp\u03a3(a, b) = tp\u03a3(a, b) for all b in the range of f;\n\u2022 tp\u03a3(a, b) = tp\u03a3(a, b) for all b not in the range of f.\nIt is easy to verify that A' is a model of $, since B' is. Note in particular that the cloning does not touch on the constants, that is, if we make element a a clone of a, then there is no constant c with c\u00b2 = \u00e2. This can be seen as follows. Assume that there was a constant c with ca' = a. Then Point 4 of Proposition 1, the definition of <cp, and the construction of the initial A' yields cA = \u00e2. But then tpa(a) = tpa,\u2211(a) implies a = a, which contradicts our initial assumption that a is in the range of f, but a is not.\nIt can be verified that A' <CP A, since B' <CP B.\nIt is now easy to derive the main result of this section.\nTheorem 1. Circumscribed consequence in FO\u00b2 is CONEXPNP-complete.\nProof. The lower bound is inherited from the description logic ALC (Bonatti, Lutz, and Wolter 2009). The upper bound is based on Proposition 2, as follows.\nIt is not hard to see that there exists an NP algorithm that takes as input an FO2 sentence 4, a circumscription pattern CP, and a finite structure A and checks whether A is not a CP-minimal model of $: the algorithm first checks in polynomial time whether A is a model of 4, answering \u201cyes\u201d if this is not the case. Otherwise, it guesses a structure A' with A' = A and checks whether A' is a model of & and A' <CP A. It answers \"yes\" if both checks succeed, and \"no\" otherwise. Clearly, checking whether A' <CP A can be done in time polynomial in the size of A.\nThis NP algorithm may now be used as an oracle in a NEXP-algorithm for deciding $ #cp \u03c8: by Proposition 2, it suffices to guess a structure A with |A| < |V|n3+1.2n=4(k+6), check that it is not a model of 4, and then use the NP algo-rithm from above to check that A is a CP-minimal model of . From the above, we also obtain results on circumscribed AQ-querying.\nTheorem 2. Circumscribed AQ-querying in FO\u00b2 is CONEXPNP-complete in combined complexity and \u03a02P-complete in data complexity.\nProof. For combined complexity, it suffices to show that circumscribed consequence and circumscribed AQ-querying mutually reduce to one another in polynomial time. First, (O, D) CP R(c) is equivalent to $ cp, R(c) where\nV vaVvOV = \u03a6\nc,c'\u2208adom(D)\nc\u2260c\nc\u2260c."}, {"title": "4 Upper Bounds for the Guarded Fragment", "content": "We show that circumscribed consequence in GF is in TOWER and so is circumscribed UCQ-querying, in combined com-plexity. We also show that UCQ-querying is in ELEMENTARY in data complexity, that is, for every GF ontology O, circum-scription pattern CP, and AQ A(x), there is a k \u2265 1 such that given a database D, it is in k-EXP to decide whether (O, D) \u22a8CP A(x).\nWe remind the reader of the relevant complexity classes, namely ELEMENTARY = Uk>1 k-EXP and\nTOWER = USPACEstower(f(n))\nfEFELEM\nwhere FELEM is the class of all elementary functions and tower(x) denotes a tower of twos of height x.\n4.1 Circumscribed Consequence\nWe consider GF sentences & in Scott normal form. Such a sentence takes the shape\n^ \u2200x (ii) \u2200x (\u03b2\u2081 \u2192 \u2203\u1ef9 (Vi \u2227 Vi))\n1<i<ny\n1<i<n\nwhere the \u03b1i, \u03b2i and \u03b3i are atoms and the vi and Vi are quantifier-free. It has been shown in (Gr\u00e4del 1999) that every GF sentence & can be converted in polynomial time into a GF sentence in Scott normal form that is a conservative extension of \u03c6.\nWe now state the improved finite model property for GF that satisfies Property (\u2661) from the introduction. Let tower(0, n) := n and, for every k \u2265 1, define tower(k,n) := 2tower(k\u22121,n), so that tower(k, n) refers to an exponentiation tower that consists of k twos followed by an n. A signature is unary if it only contains constants symbols and unary predicates.\nProposition 3. Let & be a GF sentence, \u2211 a unary signature that contains const=($), and A a model of $. Then there exists a model B of & that satisfies the following properties:\n1. |B| < tower(4|2|+4,||);\n2. tp(A) = tp(B);\n3. |{\u03b1 \u2208 B | tp\u03a3,\u2211(a) = t}| \u2264 |{a \u2208 A | tpa,\u2211(a) = t}|\nfor every 1-type t on \u03a3;\n4. c4 = cB for all constants c in \u0444.\nThe reader should think of \u2211 as the signature that contains, apart from const_($), all unary predicates that are minimized and fixed in a circumscription pattern.\nTo establish Proposition 3, we use a modified version of the Rosati cover that leaves untouched a selected part A from the original model. In addition, if A contains all the instances of some unary type in the original model, then so does A in the modified Rosati cover. The precise formulation follows.\nLemma 1. Let & be a GF sentence and \u2211 a unary signature that contains const=($). For all models A of $ and all AC A that contain ca for every constant c in &, there exists a model B of $ that satisfies the following properties:\n1. |B| \u2264 2(|A|+|$|)|$|+11;\n2. tp\u03a3,\u2211(\u03b1) = tpA,\u2211(a) for all a \u2208 \u2206;\n3. tp3,5(A \\ A) = tp3,5(B \\ \u0394);\n4. \u2206\u2282 B and c4 = cB for all constants c in \u0444.\nWe now prove Proposition 3 by using Lemma 1 and choos-ing an appropriate \u2206. For any \u2206 \u2286 A that contains c4 for all constants c in , we use rc(A, \u2206) to denote the finite model of & produced by Lemma 1 (where \u2018rc' stands for 'Rosati cover').\nLet 4, 2, and A be as in Proposition 3. For every 1-type t on 2, set\n#a(t) := |{a \u2208 A | tpa\u2211(a) = t}|.\nThe challenge is to choose A so that Point 3 of Proposi-tion 3 is satisfied. Call a 1-type t stable w.r.t. AC A if\n#rc(A,\u2206) (t) \u2264 #a(t) and call \u25b3 stabilizing if all 1-types are\nstable w.r.t. \u0394. \u03a4\u03bf attain Point 3, it clearly suffices to choose\na stabilizing A.\nWe use a set \u2206 that contains all instances of 1-types real-\nized only a certain number of times: for m \u2265 1, set\n\u2206m := {a \u2208 A | #a(tpa,\u2211(a)) \u2264 m} U\n{ca | c \u2208 const($)}.\nNow consider Am, for some m \u2265 1. For those 1-types\nt that are realized in A at most m times, it is clear from\nPoints 2 and 3 of Lemma 1 that rc(A, Am) has the very same\ninstances of t, and thus t is stable w.r.t. Am. Other types,\nhowever, may not be stable.\nSo can we find a value for m to make Am stabilizing?\nThis is trivially the case for\nm := max({#a(t) | t \u2208 tp(A), #a(t) < +\u221e}),\nbut we would like to have an m that is bounded from above\nto comply with Point 1 in Proposition 3.\nLemma 2. There exists a stabilizing set \u2206m such that 2 <\nm < tower(22|2|+4,|\u03c6|).\nProof. We start with mo = 2 (starting with 1 would also\nwork but using 2 simplifies calculations as we are deal-\ning with towers of 2s). If Amo is stabilizing, we are done.\nOtherwise there must be a 1-type t on \u2211 that is not stable\nw.r.t. Amo, i.e. #rc(A,\u2206mo)(t) > #a(t). This implies in par-\nticular that #a(t) is no larger than the size of the universe\nof rc(A, Amo). Using the bound from Point 1 of Lemma 1,"}, {"title": "4.2 Circumscribed Querying", "content": "We prove that UCQ-querying (and thus also AQ-querying) in GF is decidable.\nTheorem 5. Circumscribed UCQ-querying in GF is in TOWER w.r.t. combined complexity and in ELEMENTARY w.r.t. data complexity.\nWithout circumscription, decidability of UCQ-querying in GF is almost immediate as one can replace the UCQ q with the disjunction q' of all acyclic CQs that imply a CQ in q (up to a certain size) and then express q' as a GF sentence, obtaining a reduction to unsatisfiability (B\u00e1r\u00e1ny, Gottlob, and Otto 2014). This does not work with circumscription.\nExample 2. Take the ontology O that consists of the sentence\n\u2200x (A(x) \u2192 \u2203y(R(x, y) \u2227\u2203z(R(y, z) \u2227\n\u2203u (R(z, u) \u2227 A(u))))),\nthe database D = {A(a)}, and let CP minimize A and vary all other predicates. Then (O, D) \u22a8CP q where:\nq := \u2203x \u2203y \u2203z R(x,y) \u2227 R(y, z) \u2227 R(z, x),\nbut there is no acyclic CQ q' that implies q and satisfies (O, D) \u22a8CP q'.\nWe thus use a somewhat different, mosaic-based approach which exploits the fact that if (O, D) \u22adCP q, then this is witnessed by a model B that, in a certain loose sense, has the shape of a forest. More precisely, B can be obtained from any model A that witnesses (O, D) \u22adCP q by a version of guarded unraveling (see e.g. (Gr\u00e4del and Otto 2014)) that leaves untouched a 'core' of A defined as\ncore\u03a3(A) := {a \u2208 A | #a(tpa,\u2211(a)) < tower(4|2|+4, |$|)}\nfor a suitable signature \u03a3. With 'leaving untouched', we mean that elements from this core are not duplicated during unraveling, but \u2018reused\u2019 whenever needed. This is required to guarantee minimality w.r.t. the circumscription pattern. It is not important to make this unraveling explicit for the subsequent development, but it may still guide the reader's intuition.\nTo prepare for the subsequent development, we give a central lemma that establishes a sufficient condition for a model B to be CP-minimal, based on comparing it to a CP-minimal 'reference model' A. This is a version of the 'core lemma' of (Lutz, Mani\u00e8re, and Nolte 2023).\nLemma 3. Let & be a GF sentence, CP = (\u227a, M, F, V), and \u03a3 = const=($) \u222aMUF. Further let A be a CP-minimal model of & and let B be a model of & such that\n1. core\u03a3(A) \u2286 B and cB = cA for all c \u2208 const($);\n2. tp\u03a3,\u2211(a) = tpA,\u2211(a) for all a \u2208 core\u2211(A);\n3. tp\u03a3(B\\core\u2211(A)) = tpA,\u2211(A\\core\u2211(A)),\nThen B is a CP-minimal model of $.\nIntuitively, Lemma 3 says that the exact multiplicity of types realized in A outside of core\u2211(A) is irrelevant for CP-minimality.\nAssume that we are given as an input a GF knowledge base (O, D), a circumscription pattern CP, and a Boolean UCQ q. We want to decide whether there is a countermodel I against (O, D) \u22a8CP q(\u0101). This may be rephrased as \u03c6 \u22adCP q(\u0101) for\n\u03a6=^O^^D\u2227 \u2227 (Pc(c)^^ -P(c)).\nc\u2208adom(D)\nc'\u2208adom(D)\\{c}\nWe shall use the latter formulation. We may assume that & is in Scott normal form, that is, & is\n\u039b (aii) ^ ^ \u2200x (Bi \u2192 \u2203\u1ef9 (Vi \u2227 Vi)).\n1<i<ny\n1<i<n\nLet \u2211 = const=($) \u222aMUF. Set M = |const($)| +2|\u03a3\u0399. tower(4|2|+4, ||) + 2||, and fix a set U of size M. In an outer loop, our algorithm iterates over all pairs (Ao, Tcore) with Ao a finite structure that interprets all constants from and Tcore a set of 1-types such that the following conditions are satisfied:"}, {"title": "5 Lower Bounds for the Guarded Fragment", "content": "We prove lower bounds that match the upper bounds given in Section 4. Our proofs are formulated in terms of the data complexity of AQ-querying, but we also derive from them tight complexity results for circumscribed consequence.\nWe start with an EXP lower bound on the data complexity of AQ-querying for the restricted yet natural case where only a single predicate is minimized and no predicate is fixed. It is then of course pointless to use a preference relation in the circumscription pattern. The bound applies even for ontologies that are sets of existential rules.\nTheorem 6. AQ-querying in GF is EXP-hard in data com-plexity even for ontologies that are sets of existential rules, with a single minimized predicate and no fixed predicates, and with a fixed signature.\nFor UCQ-querying, the same even holds for a fixed signa-ture in which all predicates have arity at most two.\nWe invite the reader to verify the proof of Theorem 6, provided in the appendix, as a warmup for the proof of the main result of this section, which is up next.\nWe show that, when using multiple minimized predicates as well as the preference order, then the data complexity is no longer in k-EXP for any k \u2265 1. In other words, while for every fixed ontology O, query q, and circumscription pattern CP querying is in k-EXP in data complexity for some k (c.f. Theorem 5), k cannot be uniformly bounded by a constant from above for all O, q, and CP. In combined complexity, AQ-querying is even TOWER-hard.\nTheorem 7. AQ-querying in GF is\n1. TOWER-hard in combined complexity (under logspace re-ductions) and\n2. k-EXP-hard for every k \u2265 1 in data complexity.\nThis holds already for circumscribed sets of guarded existen-tial rules and without fixed predicates.\nWe prove Point 2 as follows. It is known that, for every \u043a \u2265 1, there is a fixed (\u043a \u2013 1)-exponentially space-bounded alternating Turing machine (ATM) whose word problem is K-EXP-hard (Chandra, Kozen, and Stockmeyer 1981). We provide a reduction from the word problem of each of these ATMs to AQ-querying in GF. Our reductions are uniform accross all and, as discussed in (Schmitz 2016), this also yields TOWER-hardness in combined complexity.\nLet \u043a \u2265 1 and let M be a (\u043a \u2014 1)-exponentially space-bounded alternating Turing machine (ATM) whose word problem is K-EXP-hard. We exhibit a set of existential rules O and a circumscription pattern CP such that given an input e = e1\u2026 en \u2208 \u03a3* to M, we can construct in polynomial time a database D such that M accepts e iff O, D\u22a8cp goal(a), where goal is a unary predicate and a a dedicated constant symbol.\nOne main challenge is to generate a tape of the required length and we first focus on achieving that. To this end, we produce K linear orders, with the kth order being of length tower(k - 1,p(n)). In other words, the first order has length p(n), the second has length 2p(n), the third 22P(m), and so on, until the 5th order which has length tower(\u043a \u2013 1,p(n)) and will be used as the tape for the ATM computation. The positions in the (k+1)st order will be encoded in binary using"}, {"title": "6 FO2 with Counting: C2", "content": "We observe that in C2, circumscribed consequence and cir-cumscribed AQ-querying are decidable. This is achieved by combining a result from (Wies, Piskac, and Kuncak 2009) with ideas from (Bonatti et al. 2015a).\nRecall that Presburger arithmetic is the first-order theory of the natural numbers with addition and equality. BAPA is a multisorted theory that combines Presburger arithmetic with the theory of (uninterpreted) sets and their cardinalities. We refer to (Kuncak, Nguyen, and Rinard 2006) for full details and only remark that numerical variables are denoted with x, y, z, set variables with B, and set cardinality with |B|. For a structure A and a 1-type t, we write ta to denote the set of elements {a \u2208 A | tp(a) = t}. The following was proved in (Wies, Piskac, and Kuncak 2009), making intense use of the results of (Pratt-Hartmann 2005).\nTheorem 8. Let & be a C\u00b2 sentence and let t\u2081, . . ., tn be the 1-types for $. One can compute a formula X$(x1,..., xn) Of Presburger arithmetic such that\n1. for every model A of , X$[|t1|, ..., |tm|] is true;\n2. if X$[k1,..., kn] is true, then there is a model A of with |t3| = ki for 1 \u2264 i \u2264 n.\nThe above provides a reduction from conse-quence in C2 to unsatisfiability in BAPA: the C2 consequence = 4 holds iff the BAPA sentence \u2203B1\uff65\uff65\uff65\u2203Bn X\u03c6^\u00ab\u03c8[|B1|/x1,...,|Bn|/xn] is unsatisfiable.\nWe extend this to circumscribed consequence.\nAssume that we want to decide FCP \u03c8, with \u03c6, \u03c8 two C2 sentences and CP = (<, M, F, V). We may assume w.l.o.g. that & and 4 contain the same predicates and thus have the same 1-types. With v, we denote the BAPA formula\nX$[[B1]/x1,...,|Bn|/xn] \u2227 (BA = U B\u2081)\nAEMUF\nti A(x1)Eti\nand we define v' to be like v, but using set variables B in place of Bi and B' in place of BA. Let B be the tuple of set"}, {"title": "7 Conclusion", "content": "We have studied the impact on computational complexity of adding circumscription to decidable fragments of first-order logic, which turns out to be remarkably varied: while FO2 is very tame and does not have higher complexity than ALC in its circumscribed version, GF suffers from a dra-matic complexity explosion. We remark that there is a close connection between circumscription and querying with closed predicates as studied in (Ngo, Ortiz, and Simkus 2016; Lutz, Seylan, and Wolter 2019), see also Example 1. More details are in (Lutz, Mani\u00e8re, and Nolte 2023). As an ex-ample, Theorem 6 also applies to AQ-querying of guarded existential rules with a single unary closed predicate. This, in turn, is related to results in (Benedikt et al. 2016).\nSeveral interesting questions remain open. What is the exact complexity of circumscribed consequence in C\u00b2? We speculate that by making careful use of the techniques in (Pratt-Hartmann 2005), one can bring it down to CONEXPNP. What is the complexity of circumscribed consequence in GF with only a single minimized predicate or with multiple such predicates but no preference order? Is circumscribed UCQ-querying in GF finitely controllable? What is the com-plexity of circumscribed querying with less expressive classes of existential rules such as inclusion dependencies? Is cir-cumscribed consequence decidable in the unary / guarded negation fragments of FO? Note that satisfiability in the latter fragment is known to be reducible to UCQ-querying in GF (B\u00e1r\u00e1ny, ten Cate, and Segoufin 2015), but that this reduction relies on arguments based on treeifications of some subformu-las of interest, a technique that cannot be applied in presence of circumscription as discussed with Example 2."}]}