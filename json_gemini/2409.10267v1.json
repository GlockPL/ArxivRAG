{"title": "ENHANCING PERSONALIZED RECIPE RECOMMENDATION THROUGH MULTI-CLASS CLASSIFICATION", "authors": ["Harish Neelam", "Koushik Sai Veerella"], "abstract": "This paper intends to address the challenge of personalized recipe recommendation in the realm of diverse culinary preferences. The problem domain involves recipe recommendations, utilizing techniques such as association analysis and classification. Association analysis explores the relationships and connections between different ingredients to enhance the user experience. Meanwhile, the classification aspect involves categorizing recipes based on user-defined ingredients and preferences. A unique aspect of the paper is the consideration of recipes and ingredients belonging to multiple classes, recognizing the complexity of culinary combinations. This necessitates a sophisticated approach to classification and recommendation, ensuring the system accommodates the nature of recipe categorization. The paper seeks not only to recommend recipes but also to explore the process involved in achieving accurate and personalized recommendations.", "sections": [{"title": "1. INTRODUCTION", "content": "In the realm of recipe recommendation systems, the focus on ingredient-based recommendations remains limited. This project addresses this gap by employing advanced data mining techniques, specifically association rules, classification-based filtering, and network analysis, to provide a comprehensive and user-specific recipe recommendation system using 10K recipes [1]. Recipe recommendation systems traditionally rely on factors such as cuisine, dietary considerations, or meal courses [2]. However, there is a noticeable scarcity of systems solely based on ingredients. We are driven by the ambition to develop a user-focused recommendation system that suggests recipes based on provided ingredients, catering to individual preferences and dietary needs. The primary objective of this research is to create an ingredient-based recommendation system, employing advanced data mining techniques, and enhance algorithmic robustness and precision through multi-class classification."}, {"title": "2. RELATED WORK", "content": "After acquiring data through scraping, our focus shifted to pre-processing ingredients. Drawing inspiration from the research of Cohen, Ravikumar, and Fienberg [3] in \"A Comparison of String Distance Metrics for Name-Matching Tasks,\" we explored similarity scores such as Jaro-Winkler and cosine similarity. While the former was recommended, we found that cosine similarity performed reasonably well for our text pre-processing needs.\nWe delved into the \"Robustness of collaborative recommendation through association rule mining\", as discussed by Sandvig, Mobasher, and Burke [5]. Their work emphasized the effectiveness of association rule-based recommenders in achieving algorithmic robustness. Consequently, we adopted association rule mining as a fundamental concept in recommending recipes. To further enhance the precision of our recommended recipes, we sought to classify ingredients and determine their respective categories. Building on the insights from Kowsari, Meimandi, Heidarysafa, Mendu, Barnes, and Brown [6] in \"Text Classification Algorithms,\" we implemented sophisticated classification algorithms tailored to our ingredient data.\nIn their 2010 paper, \"Intelligent food planning: personalized recipe recommendation,\" Freyne, Jill, and Shlomo Berkovsky [9] propose a recipe recommender system to combat the obesity epidemic. Their approach involves focusing on user engagement by exploring data capture, food-recipe relationships, and the adaptability of recommender algorithms for personalized, healthy"}, {"title": "3. METHODOLOGY", "content": "In the prototype development of our recipe recommendation project, we employed a diverse set of techniques at different stages, encompassing data collection, pre-processing, and modelling."}, {"title": "3.1. Data Collection", "content": "To construct our dataset, we undertook web scraping to compile recipe information from the RecipeLand website [1]. We aimed to accumulate a wide array of recipes spanning various categories, including those to specific dietary considerations, different cuisines, and distinct dish types. For the web scraping process, we utilized the requests library for handling HTTP requests and the BeautifulSoup library for HTML content parsing [12]. This approach allowed us to systematically extract key information from each recipe, including the recipe title, list of ingredients, and the corresponding category. To address concerns about the data collection methodology, we ensured our web scraping process was thorough and systematic, minimizing potential biases as outlined in studies on complex network sampling issues. We employed robust techniques to improve the reliability of our datasets and diminish errors associated with incomplete or biased sampling [13]."}, {"title": "3.2. Data Pre-Processing", "content": "After extracting data from the website, we conducted essential pre-processing steps to refine the data for subsequent stages [14]. Our process began by eliminating stop-words using the NLTK library [15]. Following that, we addressed extra white spaces and non-alphabetic characters in the dataset. A crucial step involved removing quantity and measurement information associated with the recipes, such as terms like \"cup\" and \"teaspoon.\"\nTo further enhance data quality, we filtered out empty strings and eliminated parenthetical content. Employing Comma-Based Ingredient Segmentation proved effective in removing irrelevant data from the dataset. Finally, we streamlined the dataset by eliminating duplicate entries, ensuring that it exclusively contained unique recipes. This comprehensive pre-processing pipeline resulted in a more refined and usable dataset for subsequent stages of the project."}, {"title": "3.3. Similarity Score", "content": "To further refine our dataset, we applied similarity metrics to assess the likeness between ingredients. If the similarity exceeded a specified threshold, we merged the two ingredients into a single entry. For instance, if our dataset contained both \"Chicken Breast\" and \"Chicken Thighs,\" we consolidated them into a single category-just \"Chicken.\" This simplification facilitates user input, allowing for a more straightforward experience.\nTo achieve this, we implemented various similarity scores, including Jaccard, Cosine, and Jaro-Winkler Similarities. While Jaccard didn't yield optimal results for our case [3], both Cosine and Jaro-Winkler Similarities proved satisfactory. Although the disparity in performance between the two was not substantial, they effectively captured the majority of similarities in the ingredients."}, {"title": "3.4. Association Rule Mining", "content": "Next, we used Association Rule Mining on our cleaned-up ingredient list to find the most common ingredient combinations. We tried both the Apriori and FP-growth algorithms [4] from the 'mlxtend' library. Surprisingly, both algorithms gave similar results, but we settled on Apriori."}, {"title": "3.4.1. Strategy for Recommendations", "content": "The approach we adopted for recommending recipes based on user-input ingredients is as follows: First, we collect the user's input ingredients into a list. Subsequently, we identify rules for each ingredient in the input list to determine their corresponding consequents. Next, we generate all possible combinations of the antecedents and consequent ingredients. The resulting combinations serve as criteria for recommending recipes that include these specific ingredient combinations.\nFor instance, if the user provides the ingredients \"garlic\" and \"basil,\" we seek rules for both ingredients. This process may yield rules such as:\n{garlic} \u2192 {onions} and {basil} \u2192 {tomatoes}\nThen we use these rules to find all the combinations of the ingredients in the rules keeping {garlic, basil} as the base.\n{garlic, basil}\n{garlic, basil, onions}\n{garlic, basil, tomatoes}\n{garlic, basil, onions, tomatoes}\nWe recommend only the recipes in which these combinations of ingredients are present in the data set we created."}, {"title": "3.5. Classification Based Filtering", "content": "To further enhance the results, we implemented classification based on the provided ingredients. We trained distinct classification models on three datasets, aiming to categorize user-specified ingredients into different groups, including Cuisines, Dietary considerations, and Meal courses. The models employed for this task included KNN, Random Forest, SGD, Multinomial NB, and XGBoost.\nFollowing the training phase on the three datasets, we performed hyperparameter tuning to enhance the accuracy of each model [16]. The outcomes highlighted SGD and XGBoost as the most effective models for our approach, exhibiting approximately similar scores. SGD performs well on text classification due to its efficiency with large datasets, ability to handle sparse data, ease of parallelization, adaptability to online learning, and regularization options. Its incremental learning approach and simplicity in implementation make it suitable for text classification tasks. Subsequently, we opted to utilize the SGD model to predict the category to which the ingredients belong [7]."}, {"title": "3.5.1. Strategy for Classification", "content": "After obtaining the results from the classification models, we further refined our classification strategy by employing three separate SGD models. We recorded the probabilities for each class, and with a threshold set at 0.3, we assigned the classes to the ingredients."}, {"title": "3.6. Network Analysis", "content": "To enhance further understanding of how recommended recipe ingredients are interconnected, we utilized the NetworkX and PyVis libraries to create visualizations [17] of ingredient networks. This network design aims to illustrate the complex connections between ingredients and various recipe types. The goal is to provide insights derived from the network analysis [10], allowing to customize the recipe recommendations based on a visual representation of ingredient relationships. In Figure 3, three distinct clusters are evident, offering us the flexibility to select the cluster of our interest or fine-tune recipe recommendations by excluding unwanted ingredients."}, {"title": "4. RESULTS", "content": "The dataset consistently features three attributes obtained through web scraping. Initially, our dataset contained extra words, white spaces, non-alphabetic characters, and empty strings. Through pre-processing, we successfully eliminated this unwanted information without losing any instances. While intentional duplicates exist in our dataset, each instance is unique, particularly as some recipes belong to multiple classes."}, {"title": "4.1. Proposed Architecture", "content": "Our recommendation system introduces a novel approach focusing on ingredients to provide personalized recipe suggestions. The architecture comprises several interconnected components, including data mining techniques, classification models, and network analysis to deliver tailored recommendations.\nAssociation Rule Mining: Apriori Algorithm is employed for association rule mining. This technique analyses the relationships between ingredients within recipes, identifying frequent item"}, {"title": "4.2. Discussion", "content": "Our study yields valuable insights into the efficacy of our recommendation system. Our system demonstrates promising results in delivering tailored recipe recommendations aligned with user preferences and ingredient specifications. The accuracies for multi-class classification are notably high in our case. With additional data and further training, the models have the potential to perform even better. The strategies mentioned in this paper for extracting rules and filtering significantly enhance the system, resulting in a more refined and suitable list of recipes to recommend.\nCompared to traditional recommendation systems, our approach offers a unique focus on ingredients, allowing for more precise and personalized recipe suggestions. Integration of network analysis further enriches the user experience by providing visual insights into ingredient relationships, setting our system apart from others in the field. Future work may involve further improving the system by incorporating additional data sources and expanding the dataset to uncover more intricate ingredient patterns, ultimately enhancing the system's effectiveness and usability."}, {"title": "5. CONCLUSIONS", "content": "This paper introduces a novel recommendation system that focuses exclusively on ingredients, providing recipe suggestions based on specified ingredients. Application of state-of-the-art data mining techniques, including Apriori and FP Growth algorithms for association rule mining, and the evaluation of multiple classification models, with Stochastic Gradient Descent (SGD) identified as the most effective for classifying recipes. Integration of network analysis to visualize ingredient relationships within recommended recipes, enhancing the understanding of underlying connections between ingredients. In summary, through the combined use of association rule mining and classification techniques, our system delivers tailored recipe recommendations aligned with user preferences and ingredient specifications, facilitating an enriched culinary experience.\nFuture work may involve incorporating data from additional external sources, such as user reviews, nutritional information, or real-time ingredient availability, to further refine and enrich the recommendation system and collecting a larger and more diverse data to further enrich the association rule mining and classification processes. A more extensive dataset could lead to the discovery of additional patterns within ingredient combinations, ultimately enhancing the accuracy and coverage of the recommendation system."}]}