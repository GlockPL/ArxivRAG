{"title": "CyberNFTs: Conceptualizing a decentralized and reward-driven intrusion detection system with ML", "authors": ["Synim Selimi", "Blerim Rexha", "Kamer Vishi"], "abstract": "The rapid evolution of the Internet, particularly the emergence of Web3, has transformed the ways people interact and share data. Web3, although still not well defined, is thought to be a return to the decentralization of corporations' power over user data. Despite the obsolescence of the idea of building systems to detect and prevent cyber intrusions, this is still a topic of interest. This paper proposes a novel conceptual approach for implementing decentralized collaborative intrusion detection networks (CIDN) through a proof-of-concept. The study employs an analytical and comparative methodology, examining the synergy between cutting-edge Web3 technologies and information security. The proposed model incorporates blockchain concepts, cyber non-fungible token (cyberNFT) rewards, machine learning algorithms, and publish/-subscribe architectures. Finally, the paper discusses the strengths and limitations of the proposed system, offering insights into the potential of decentralized cybersecurity models.", "sections": [{"title": "1. Introduction", "content": "The Internet and with it the ways of interaction between people have changed with increased momentum in recent years. The developments of each technological era have been summarized and classified continuously by the research community. Between the 90s and 05s, Web 1.0 was created to be used mainly as a communal resource, not individually, with open standards, decentralized use and mainly informative content. Web 2.0 was the big leap towards becoming a fully commercialized information gathering/sharing medium, enabling virtual interaction between users and the independent creation of online content, and as a consequence centralizing its impact and services in the hands of a few major corporations. For too long, Web3 (also known initially as Web 3.0) has been thought to be a return to the decentralization of power that corporations have over user data, which together with their semantic representation, cryptocurrencies, non-fungible tokens (NFTs), decentralization of organizations (DAO), finance (DeFi), artificial intelligence, 3D Graphics and metaverse tries to rebuild the way we understand the world of the Internet and the integral role that the Internet has in the functioning of contemporary society [1].\nDecentralized finance is an example, although atypical, of the weight and influence that Web3 and blockchain have today in determining the technological future and the interaction of the legacy banking world versus a world of completely decentralized financial institutions. DeFi is undoubtedly a proof of concept for blockchain scalability that has already been proliferated quite well [2]. The introduction and rise of a non-fungible token (NFTs) and tokenomics [3] as a byproduct of DeFi in the form of tokenized cybercurrency also raises many questions regarding unexplored fields of application that decentralization has yet to visit. As explained in [2] and [4], the applicability of decentralization ideas in other fields and industries has been researched and implemented quite a lot so far, which makes the long-standing effort to use concepts of decentralization in cyber security or information security even more appealing.\nOn the other hand, the ubiquity of the Internet and digitalization keeps the need for security mechanisms and cyber protection always relevant. Cyber intrusion detection and prevention systems (IDPS) are among the earliest legacy software solutions to implement such protections. Despite the maturity and age of this idea, it seems that it still remains a topic of research due to advancing cyberattacks, as it has been proven to be increasingly effective in commercial cyber defense, especially recently with the integration of machine learning (ML) algorithms. Even with these advancements, according to the UK's annual cyber security report for 2022, the growth of attacks and their impact on businesses and non-governmental organizations is continuous and uninterrupted, also illustrated by Figure 1. According to the report in [5] only in the United Kingdom the damage caused by these cyber attacks and intrusions costs medium and large businesses an average of \u00a320,000 per year."}, {"title": "1.1. Defining the problem", "content": "Intrusion detection systems have had a continuous development since the early theoretical models [6] although not at the pace and momentum of other technologies such as the Internet, DeFi and the like. This may be due to the increased complexity that IDS systems represent, due to the depletion of field research in behavior pattern recognition (e.g. in [7]), due to the choice to invest in preventive ways or more cost-effective ways of protection, because of the decision to depend on cyber security experts instead of automated solutions and so on. All this makes IDS, CIDN and in general the field of automated cyber security architectures rather not researched enough in relation to the wider literature and new technologies, although there is research within narrow scopes and features such as pattern recognition, design and implementation of mobile agents, parametric classification of network traffic, etc.\nDue to the still-to-be-defined nature and extremely broad scope of Web3, the effort to integrate Web3 features with modern cyber intrusion detection systems as a proof of concept is reduced and focused on only a few key Web3 features: decentralization, distributed operation, independent operation and gradual improvement in relation to the amount of data and/or the amount of time.\nAs presented in Figure 2, the conceptual architecture of the decentralized intrusion detection system will:\n\u2022 monitor local network traffic\n\u2022 use ML models for classification\n\u2022 classify and store traffic in a decentralized manner on the blockchain\n\u2022 accentuate and reward the intrusion detection peer with a unique NFT"}, {"title": "2. Breakthrough of ML and collaborative IDS", "content": "The first models proposed for the design and implementation of intrusion detection systems in [6] are still quite in use and these statistical techniques of analyzing the behavior of computer users are still relevant to date, with slightly more refined and advanced levels of approximation. These models are primarily based on the hypothesis that security breaches and vulnerability exploitation can be detected by monitoring the system's audit/evidence data for abnormal patterns of system usage or behavior. By building profiles of the behavior of the actors in relation to the objects in metric and statistical models and through the recognition of the rules for extracting the nature of the behaviors from the audit data, it is possible to discover abnormal behaviors and risks.\nWhile there are many models, architectures and implementations of cyber intrusion detection systems, there is still no known practical implementation, existing software or definitive patented architecture to implement and integrate IDS with blockchain technology, machine learning algorithms (ML) and unique ownership credit systems in mind. In the following section we will mention and discuss the latest research in each of the separate disciplines involved in this integration as well as the ongoing efforts to perform a holistic integration.\nIn [8], the authors performed a comprehensive analysis of machine learning models in relation to intrusion detection systems such as, Decision Tree (DT), Gradient Boosting Tree (GBT), Multilayer Perceptron (MLP), AdaBoost, Long-Short Term Memory (LSTM), and Gated Recurrent Unit (GRU). Furthermore, the authors applied Gini Impurity-based Weighted Random Forest (GIWRF) as a feature selection technique and binary classification for intrusion detection systems. This research is used as a knowledge basis in our machine learning integration attempts.\nMoreover, [7] and [9] discuss the detection of anomalies through data mining to extract datasets with signatures of anomalies and then in [10] and [11] their classification using deep learning. Despite all these multidisciplinary improvements, the essential nature of recognizing user behaviors for anomaly detection remains the most effective way of building an IDS.\nThe classifiers used in [12] such as kNN, Na\u00efve Bayes, J48 Decision Tree, Support Vector Machine (SVM) and Multilayer Perceptron Neural Network (MIP) have achieved accuracy of 96.8% and precision of 97.3%. Such classification quotients for network traffic analysis are quite promising, therefore we'll be using them in this paper without focusing on improving precision, since the proof of concept focuses mainly on the architectural whole as an integration and not the construction as a process.\nRegarding blockchain and technologies for decentralizing functionality, there is a sufficient body of theoretical, applied, and scientific knowledge that summarizes the features of blockchain architecture and compares the common consensus algorithms used"}, {"title": "3. Intrusion detection systems (IDS)", "content": "According to NIST, intrusion detection is the process of monitoring events and occurrences in a computer system or network and analyzing them for signs of potential incidents, which are violations or immediate threats of violation of computer security rules, acceptable usage rules or standard security practices. The breadth at which an IDS operates creates a new division of IDPSs, which can be constrained within an application, a computing device, a network or within a multi-network infrastructure. In [20] various models and architectures of IDS are described in more detail that coincide and serve as a more practical illustration of these definitions so far.\nTo define cyber intrusion, we follow concepts defined by CERT/CC. While attacks and intrusions can be viewed from a number of perspectives, the most common are those of the attacker and the victim. Each view brings with it separate criteria for judging the success of the attack. Most of the time, it is sufficient to say that an intrusion has occurred when an attack is considered successful from the victim's perspective, i.e., the victim has experienced some loss, harm, or consequence. A successful attack or intrusion is enabled and achieved by the presence of a network vulnerability or vulnerability in the victim's system that is exploited by an attacker with an objective or goal in mind. In the following we use the word intrusion to mean such a successful attack.\nOn the other hand, an attack is considered unsuccessful from the attacker's point of view if none of its objectives are met; while the victim perceives the attack as unsuccessful if there are no consequences resulting from the attack. Unsuccessful attacks from an attacker's perspective can still have one or more consequences for a victim. The goal of intrusion detection is to accurately identify all true attacks and ignore all common situations. Like attacks, the process of detecting them can be defined from different perspectives. Intrusion detection can result from observing an attack in real-time or continuously or from knowing the results of an intrusion after it has occurred post-factum."}, {"title": "4. Network traffic analysis with ML", "content": "Since we chose a supervised learning method and due to the specific architecture of this research, the proof of concept required at least one initial dataset and a model for training data at first before the system can operate fully autonomously and distributed. In that regard, we consider that it is worth discussing the details of traffic monitoring, the collected traffic data, the features of the data that are stored, the datasets that exist and their characteristics. With the increase of research in IDS, many different efforts have been made to publish relevant datasets for intrusion evaluation and modeling."}, {"title": "4.1. Data schema", "content": "During the selection of initial datasets, a set of recent datasets related to network traffic including MTA-KDD'19 [22], USB-IDS [23], CTU13 [24] and UGR16 [21] were tested. Each of these datasets was reviewed against the above criteria and tested as potential initial datasets in local test environments. Due to the simplicity of the structuring, the high precision of SVM classification and the migrateable format, it has been decided to follow and use MTA-KDD'19 [22] as the initial dataset and the initial format of data collection and structuring during traffic monitoring. In principle, any of the datasets could be used without any significant changes, however the format and size of the other data are more impractical. Integrating multiple datasets can be considered in future work. Finally, this dataset serves as part of the conceptual proof, since in a practical implementation it would have to be replaced with synthetic data or monitored and collected under suitable conditions depending on the applicability and the nature of the network where the classification would take place."}, {"title": "5. Decentralization", "content": "In order to discuss the application of decentralization in the context of IDSs, we will first present some of the main characteristics of blockchain technology, which today is considered the only widely applicable implementation of a fully decentralized, consistent and reliable data sharing system."}, {"title": "5.1. Blockchain", "content": "To reach to the proof of concept and for ease of illustration, a simplified version of the blockchain is implemented in this work and is used together with other components to build the prototype of the application. To briefly introduce decentralization, blockchain stores a series of sequential blocks where transactions and transaction information are placed. This blockchain is stored in a file locally on each node in json format. The choice of format was mainly for illustrative convenience and no better justification than that, otherwise there are better serialization formats that also save disk space for very old blockchains. Listing 1 bellow presents a sample code of the resulting blockchain."}, {"title": "5.2. CyberNFTS", "content": "From the discussion in the next section 6.1 it is more than clear that the integration of NFTs (Non-fungible token) in the above implementation is quite intuitive and easy. Adding a new metadata field to each transaction will suffice to hold and share additional data as long as the maximum allowed block size is not exceeded [25]. We can take this concept and redefine it in the field of cyber security and cyber intrusion detection systems to introduce a reward-driven autonomous system.\nA cyber non-fungible token, or CyberNFT, is defined as a unique hash value derived from an exploit/intrusion signature (in signature-based IDS) or information, which is placed as metadata in mined blockchain transactions to mark ownership by the account that first mined this information in the blockchain or whose it was last transferred to the blockchain by the owner. In principle, CyberNFTs are a way of attributing the ownership of the discoveries of new cyber intrusions in the form of the signature with which they were discovered."}, {"title": "6. Case Study \u2013 Autonom", "content": "To further the analysis of the interaction between these latest state-of-the-art machine learning (ML) and blockchain technologies in the field of cyber security, we have simulated such an autonomous system, in which we can be identify very easily applicability challenges alongside existing, outdated and conventional systems used today in centralized or semi-centralized on-premise and cloud architectures.\nIn the previous parts, we discussed the features of this system implemented in isolation, so we discussed the capabilities for it to:\n\u2022 monitor local network traffic\n\u2022 utilize ML classification models\n\u2022 classify and store traffic in a decentralized manner on the blockchain\n\u2022 accentuate and reward the intrusion detection peer with a cyberNFT"}, {"title": "6.1. Integration", "content": "Figure 6 presents a general scheme of the integration of all components in a network of devices, where each node monitors its local traffic and distributes intrusion signature information to all other nodes in real time, as well as propagating changes through to the pub/sub network that mediates in the middle. The user software, in addition to traffic monitoring, can also perform other functions such as storing monitoring history, scanning files, interfacing and processing information from dApp, blockchain and cyberNFTs, etc.\nTraffic classification with ML, specifically with Support Vector Machines algorithms is done on selected nodes, which have the memory and processing capacity to run these models with ease. In the case of a network with insufficient components, it will be necessary to establish several nodes for this purpose and inevitably bring back elements of centralization to the network due to the lack of resources. All classifications of all nodes are weighted and measured according to consensus protocols, similar to those of the blockchain itself. In the case of infected nodes, the software program must have a mechanism for breaking communication from abnormal traffic without user response, to avoid spreading the intrusion to the entire network."}, {"title": "6.2. Distributed operation (pub/sub)", "content": "The publish/subscribe (or pub/sub) paradigm is a widely used model for interfacing applications/processes in a distributed environment. Many existing pub/sub systems are based on default entities or predefined non-dynamic nodes, and therefore are able to exploit multicast technologies to provide scalability and availability. An emerging alternative to these allows information consumers to search for events based on the content of published events. This is usually organized by dynamically creating/deleting subscription and publishing channels. This is best illustrated in Figure 7, where the information space for subscription/publication is presented alongside their users. In our case, all members of the autonomous network subscribe to the same information space, which, depending on the situation, behaves as a space for broadcasting or a space for multicasting."}, {"title": "7. Discussion", "content": "Web3 technologies challenge the virtual world of finance, data, intellectual property and the like on an ongoing basis. The return to the decentralization of data storage and distribution has prompted the creation of entirely new ways of doing transactions, information processing, value exchange, art, etc. Yet, the study of interaction and application of this decentralized way for the implementation of collaborative intrusion detection systems has not been sufficiently addressed at the implementation level.\nSince the creation of cyber intrusion detection systems it is evident that there has been much progress in the integration and incorporation of machine learning into these systems. We can even say that the old ways of detecting anomalies and signatures have been almost completely replaced by algorithms of machine learning (ML), deep learning (Deep Learning), neural networks (CNN) and variants of anomaly detection engines. The outdated ways through regular classification engines are almost no longer in use. On the other hand, the decentralization of IDS systems is an effort, which has turned out to be less researched and more challenging for the scientific community. Alongside the anonymity, immutability, availability and other inherent benefits, blockchain also brings a series of difficulties and obstacles, which require a hefty amount of work and research to be applicable in the emergency context to which intrusion detection systems operate. Problems of cost, scalability, block size limitations and the like present a wider gap and divide from the level of applicability a decentralized IDS requires. However, our case study verifies once again that under controlled conditions if not the entire infrastructure, at least a partial decentralization in terms of ownership attribution, preliminary information and reports can is feasible. The cross-node generation of classification models and the publish/subscribe system implementation require further study to enable a true decentralized architecture, instead of the quasidecentralization that their limitations impose."}, {"title": "8. Conclusion", "content": "The paper presents an analytical and comparative study of the interaction between the latest state-of-the-art Web3 technologies in the context of information security and expands on their practical application in this field. For illustration and proof of concept, an early prototype for detecting cyber intrusions using machine learning modeling as a decentralized and distributed application (dApp) has been implemented and analyzed. The prototype highlights the comparisons and differences between this decentralized way of implementation in Web3 versus the common Web2-compliant centralized implementation.\nA completely decentralized implementation of an IDS system has not reached the level of service maturity to compete with current solutions, except in some isolated or context-specific environments where we have enough room for pre-defining and decentralized network nodes.\nConsequently, the case study shows the shortcomings of this approach and elaborates the possibilities for further study towards a solution which mitigates the hindering qualities of blockchain, the features of the centralized nature of the subscription/publication systems and the processing cost of building classification models.\nThe research so far and the results of this paper define the main obstacles and pave the way for the complete decentralization of the prototype we have developed. In future works we will explore more efficient and decentralized ways of publish/subscribe concept, we will explore the possibility of improving classifiers using multi-level neural network classification models and we will evaluate the experimentation and testing of the developed prototype in hybrid cloud/on-premise ecosystems to observe if we have comparable results to the actual ones on unique devices with explicit communication. In addition, the paper highlights and leaves room for further discussion of the main obstacles and limitations that the build of blockchain itself brings in terms of scalability. This review creates space for a new implementation of blockchain, which is more compatible with the technical constraints of to-date nodes for detecting cyber intrusions."}, {"title": "These steps illustrate all the main use cases of this hybrid blockchain and ML IDS system. To enable communication between nodes, however, a subscription/publication (or publish/subscribe) system is needed, which are very common in larger infrastructures or in the implementation of architecture with microservices between distributed devices/processes. The implementation of this system is mainly necessary for nodes to notify each other in case of blockchain update and to avoid servers altogether.\nIn the proposed decentralized intrusion detection system (IDS), we employ a peer-to-peer (P2P) network and leverage blockchain technology for data storage. It is crucial to address the inherent costly delay disadvantage associated with such systems. To provide a mathematical representation of the proposed system, we consider several factors influencing node delay, propagation delay, and block", "content": "generation delays. Subsequently, we define the Mean Time to Detect (MTTD) and Mean Time to React (MTTR), using queuing theory to model the performance of the P2P network within this IDS context [26].\nThe MTTD is influenced by factors such as the data processing capability of each node, the network propagation delay, and the efficiency of the detection algorithm. Within a weighted graph of this network, where the weight of each node represents its processing power, we can calculate the average MTTD as follows:\n$MTTD = E(\\frac{1}{\\sum(\\mu_i)})$\nIn Equation 1, E denotes the expected value (to account for the uncertainty in the service rates of the nodes) [26], and \u03bc\u2081 represents the service rate of node i, which is determined by factors such as processing power, detection algorithm efficiency, and workload [27]. The service rate (u) can be determined by analyzing the network's processing power, the efficiency of the intrusion detection algorithm, and other factors affecting the node's ability to process incoming requests. The arrival rate (1) can be estimated by analyzing the frequency of incoming packets or requests, which could be influenced by factors such as network traffic, the number of active nodes, and network topology.\nMTTR is influenced by the time taken to add a new block to the blockchain and the time required to propagate information across the network. The block generation time (T) is a crucial parameter that impacts the overall network performance. It can be estimated using the formula:\n$T = \\frac{D}{H}$\nwhere in Equation 2:\nT is the average time to generate a block\nD is the current difficulty of the network\nH is the total processing power (hash rate)\nA longer block generation time can be attributed to factors such as computational complexity, network hash rate, variability, and difficulty adjustments [28].\nLet's denote the arrival rate (\u03bb), which can be estimated by analyzing the frequency of incoming packets or requests, and could be influenced by factors such as network traffic, the number of active nodes, and network topology. The time taken to propagate information across the network can be estimated using queuing theory.\nIn the context of a P2P network, the expected waiting time in the queue (W) can be computed using the M/M/1 queue formula [26], applicable under the condition that the traffic intensity (p = \u03bb/\u03bc) is less than 1:\n$Wq = \\frac{\\lambda}{\\mu \\cdot (\\mu - \\lambda)}$\nIn Equation 3, A is the arrival rate of packets, and u is the overall service rate. The expected time to react (MTTR) in the system can be estimated by considering both the waiting time in the queue (W) and the block generation time (T), which is presented in Equation 4\n$MTTR = W+T$\nIt is important to note that this is a simplified and illustrative mathematical representation, and real-world implementations may require more complex models and simulations for specific network configurations [29]. While the M/M/1 queuing model assumes a single server and exponentially distributed arrival and service times, it may not accurately represent the P2P network and decentralized IDS. Other queuing models such as M/M/c or M/G/1 could be considered in a P2P network. Nonetheless, this representation serves as a foundation for further analysis and development in the domain of decentralized intrusion detection systems and highlights the impact that block generation time has on the overall MTTD and MTTR."}]}