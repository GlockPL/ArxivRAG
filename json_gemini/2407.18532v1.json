{"title": "Outer Approximation and Supper-modular Cuts for Constrained Assortment Optimization under Mixed-Logit Model", "authors": ["Hoang Giang Pham", "Tien Mai"], "abstract": "In this paper, we study the assortment optimization problem under the mixed-logit customer choice model. While assortment optimization has been a major topic in revenue management for decades, the mixed-logit model is considered one of the most general and flexible approaches for modeling and predicting customer purchasing behavior. Previous work has primarily relied on mixed-integer linear programming (MILP) or second-order cone (CONIC) reformulations, which allow for exact problem solving using off-the-shelf solvers. However, these approaches often suffer from weak continuous relaxations and are slow when solving large instances. Our research addresses the problem by focusing on components of the objective function that can be proven to be monotonically supper-modular and convex. This allows us to derive valid cuts to outer-approximate the nonlinear objective functions. We then demonstrate that these valid cuts can be incorporated into Cutting Plane or Branch-and-Cut methods to solve the problem exactly. Extensive experiments show that our approaches consistently outperform previous methods in terms of both solution quality and computation time.", "sections": [{"title": "1 Introduction", "content": "Assortment planning in retail refers to the process of deciding which products to offer during a specific time period. It involves selecting the optimal mix of items, considering factors such as profitability, market share, and customer satisfaction. In the recent operations research literature, there has been increasing attention on assortment optimization problems that involve optimizing the product assortment to maximize revenue, as discussed by K\u00f6k et al. (2009) in their survey. To address these assortment optimization problems effectively, it's crucial to create a model that accurately capture customers' purchasing behavior. Such a model should account for how product characteristics influence overall demand and consider customers' tendencies to substitute between different products.\nOur study addresses the assortment optimization problem under the mixed-logit model (MMNL), one of the most popular and flexible models in the discrete choice literature (McFadden, 1981, Train, 2003). It has been shown that the MMNL, along with the ranking preference and cross-nested logit models, can approximate arbitrarily closely any random utility maximization models (Aouad et al., 2018, Fosgerau & Bierlaire, 2009, McFadden & Train, 2000), making it one of the most appealing modeling approach to use in the context. The problem has been shown to be NP-hard by Bront et al. (2009) and Rusmevichientong et al. (2014a). In addition, (D\u00e9sir et al., 2022) demonstrates that the unconstrained assortment problem under the MMNL model is NP-hard to approximate within $O(1/n^{1-\\delta})$, for any $\\delta > 0$ and fixed $n$, where $n$ represents the number of customer classes. Moreover, when $n$ is not fixed, the assortment problem is NP-hard to approximate within any constant factor.\nTo solve the assortment problem to optimality, prior approaches primarily rely on mixed-integer linear programming (MILP) (Bront et al., 2009, M\u00e9ndez-D\u00edaz et al., 2014), or second-order cone (CONIC) reformulations (\u015een et al., 2018), making it solvable by off-the-shelf solvers such as CPLEX or GUROBI. Unlike previous studies, our approach does not depend on MILP or CONIC reformulations. Instead, we leverage components of the objective function that are demonstrably super-modular and convex. We then incorporate super-modular and outer-approximation cuts into Cutting Plane (CP) or Branch-and-Cut (B&C) procedures to efficiently solve the problem. It is worth noting that outer-approximation and/or super-modular cuts are typically used for objective functions that are provably convex and/or super-modular (Duran & Grossmann, 1986, Ljubi\u0107 & Moreno, 2018, Mai & Lodi, 2020a), which is not the case in the context of assortment optimization. Our work marks the first time such cuts are employed to solve the constrained assortment problem to optimality.\nOur contributions: Our detailed contributions are presented as follows:\n(i) To efficiently solve the assortment problem, we convert the maximization problem into a minimization one and explore non-linear components of the objective function that can be proven to be super-modular and convex. We then utilize two types of valid cuts-outer-approximation and super-modular cuts that can be employed in CP or B&C methods to outer-approximate the nonlinear objective function. Additionally, to quickly obtain a reasonably good solution useful for a warm start step of the CP or B&C, we leverage this supermodularity property to demonstrate that a simple polynomial-time Greedy Heuristic can guarantee a $(1-\\frac{1}{e})^{\\frac{r_{\\min}}{r_{\\max}}}$ approximation solution to the assortment optimization problem, even when the number of customer classes is not constant, where $r_{\\min}$ and $r_{\\max}$ are the minimum and maximum product prices, respectively.\n(ii) We conduct extensive experiments using instances of various sizes, including those obtained from the state-of-the-art method (\u015een et al., 2018) and those generated with large number of customer classes. Our CP and B&C are compared with the state-of-the-art approach, CONIC formulation, proposed in \u015een et al. (2018). The comparison results show that our approach significantly outperforms other baselines in terms of both solution quality and runtime."}, {"title": "2 Literature review", "content": "In the context of assortment optimization, the goal is to select an appropriate subset of items from a larger set to offer to customers. This decision aims to maximize an objective (such as expected revenue) while considering customer preferences and their choice behavior. Specifically, it involves modeling customer substitution between products and understanding how product characteristics impact overall demand. The most widely employed model to capture customer behavior is multinomial logit (MNL) model. This model relies on a probabilistic framework to represent individual customer utilities. Essentially, it estimates the likelihood of a customer choosing a particular product from a set of alternatives based on their preferences and characteristics of the products. The pioneering work of assortment planing problem under MNL model is presented by Ryzin & Mahajan (1999) and several follow-up studies are introduced by Mahajan & van Ryzin (2001), Chong et al. (2001), Cachon et al. (2005), Rusmevichientong et al. (2010), Rusmevichientong & Topaloglu (2012), Topaloglu (2013), Lo & Topaloglu (2019), and Liu et al. (2020).\nDespite its popularity, the MNL model is restricted due to its independence from the Independence from Irrelevant Alternatives property, which implies that the ratio of the probabilities of choosing two products is independent of any other alternative. Furthermore, the total market share of an assortment and the substitution rates within that assortment cannot be independently defined (K\u00f6k & Fisher, 2007). These properties are shown to not hold in many practical contexts, and a partial remedy for them has been made based on an extension of the MNL model, called the nested logit model. Recently, Davis et al. (2014), Gallego & Topaloglu (2014), Li et al. (2015), Alfandari et al. (2021) study assortment optimization under variants of the nested logit model. Another extension of the MNL is the MMNL model introduced by Boyd & Mellman (1980) and Cardell & Dunbar (1980). This generation of the MNL model can overcome the limitations mentioned above and approximate arbitrarily close to any random utility maximization models, as observed by McFadden & Train (2000). During the last decade, the assortment planning under the MMNL model has been an interesting topic in the operation research and management science such as Rusmevichientong et al. (2014a), M\u00e9ndez-D\u00edaz et al. (2014), Feldman & Topaloglu (2015), \u015een et al. (2018), and D\u00e9sir et al. (2022).\nIn this paper, we are interested in the constrained assortment problem under the MMNL model, with linear constraints on the set of products in the assortment. These constraints are often referred to as capacity constraints. Although assortment optimization can be polynomially solvable under the MNL model for both capacitated or uncapacitated scenarios (Rusmevichientong et al., 2010, Sumida et al., 2021, Talluri & van Ryzin, 2004), this is not the case for assortment optimization under the MMNL and other models. In Gallego & Topaloglu (2014) and Feldman & Topaloglu (2015), several constant factor approximation algorithms for capacitated assortment problem under nested logit model are introduced. Chen & Jiang (2019) give a near-optimal algorithm for the same problem containing a single constraint across all products. Under the Markov chain choice model (Blanchet et al., 2016, Zhang & Cooper, 2005) where transitions within the Markov chain represent substitutions, D\u00e9sir et al. (2020) demonstrate that the capacitated assortment problem remains APX-hard, meaning it is NP-hard to approximate this assortment optimization problem to within any constant factor less than 1. Under MMNL model, M\u00e9ndez-D\u00edaz et al. (2014) design and test a branch-and-cut algorithm for both capacitated and uncapacitated versions. \u015een et al. (2018) formulate the problem as a CONIC quadratic mixed-integer program that can directly solves to optimal large instances of capacitated version. Recently, D\u00e9sir et al. (2022) present near-optimal algorithms for the capacity constrained assortment optimization problem under a large class of parametric choice models including the MMNL, Markov chain, nested logit, and d-level nested logit choice models.\nOur work is also related to a line of research on competitive facility location where customer behavior is predicted by discrete choice models (Benati & Hansen, 2002, Dam et al., 2021, Ljubi\u0107 & Moreno, 2018, Mai & Lodi, 2020a). In these problems, the objective functions are proven to be submodular and/or convex, so outer-approximation and submodular cuts have been actively applied to solve the facility location problems. As mentioned earlier, in assortment optimization, the objective function under the MMNL does not exhibit such submodularity or concavity properties, and to the best of our knowledge, our work marks the first time such properties are leveraged to optimally solve the assortment problem."}, {"title": "3 Constrained Assortment Problem under the MMNL Model", "content": null}, {"title": "3.1 Problem Formulation", "content": "Let $[m]$ represent the set of available products and $S$ denote an assortment, which is a subset of the products offered by the retailer. The traditional MNL model is based on the utility a customer derives from purchasing a product. This utility consists of two components: $U_j = u_j + \\epsilon_j$ for any product $j \\in [m]$, where $u_j$ is the deterministic component and $\\epsilon_j$ is a random component assumed to follow a Gumbel distribution with a mean of zero and variance of $\\mu^2 \\pi^2/6$.\nLet $p_j$ denote the unit price of product $j$ and $v_0$ represent the no-purchase option. Under the MNL model, the probability that a customer purchases product $j\\in [m]$ from an assortment $S$ is given by:\n$P_j(S) = \\frac{v_j}{v_0 + \\sum_{k\\in S} v_k}$\nThe MMNL model extends the MNL model by assuming that customers belong to $n$ different classes. Let $p_i$ be the probability that the demand originates from customer class $i \\in [n]$. Denote $v_{ij}$ as the customer preference for customer class $i \\in [n]$ and product $j \\in [m]$. For any customer class $i \\in [n]$, let $v_{i0}$ be the non-purchase preference and $r_{ij}$ be the revenue from product $j \\in [m]$ for customer class $i \\in [n]$. The expected revenue for a given assortment $S$ can be expressed as a sum of MNL-based revenues:\n$\\sum_{i\\in [n]} P_i \\frac{\\sum_{j\\in S} r_{ij}v_{ij}}{v_{i0} + \\sum_{j\\in S} v_{ij}}$\nThe assortment optimization problem then can be formulated as:\n$\\max_S F(S) = \\sum_{i\\in [n]} P_i \\frac{\\sum_{j\\in S} r_{ij}v_{ij}}{v_{i0} + \\sum_{j\\in S} v_{ij}}$  (Assort)\nIt is convenient to formulate (Assort) as a binary program. To achieve this, we define the decision variables $x$ such that $x_j$ equals 1 if product $j$ is included in the assortment, and 0 otherwise. The assortment problem can then be formulated as follows:\n$\\max_{x\\in \\{0,1\\}^m} F(x) = \\sum_{i\\in [n]} P_i \\frac{\\sum_{j\\in [m]} r_{ij}v_{ij}x_j}{v_{i0} + \\sum_{j\\in [m]} v_{ij}x_j}$\nIt is known that the above problem is NP-hard for $n \\geq 2$, even without any constraint (Rusmevichientong et al., 2014b). Our research focuses on the capacitated assortment problem, where the above assortment problem is extended by adding resource constraints (\u015een et al., 2018, D\u00e9sir et al., 2022). Let $[k]$ be the set of resources that may restrict the assortment, $\\beta_{kj}$ be the required amount of resource used by product $j \\in [m]$ and $a_k$ denote the amount of resource"}, {"title": "3.2 The Traditional MILP and CONIC Reformulations", "content": "In this section, we revisit the classic MILP and CONIC reformulations for (CAP). To this end, let us first reformulate (CAP) as a minimization problem. Define $r_i = \\max_{j\\in [m]} r_{ij}$ for all $i \\in [n]$, and $r_{ij} = r_i - r_{ij}$ for all $i \\in [n]$ and $j\\in [m]$. For notational simplicity, let $X$ represent the feasible set of (CAP). The objective function in (CAP) can be written as follows:\n$F(x) = \\sum_{i\\in [n]} P_i r_i - \\sum_{i\\in [n]} P_i \\frac{r_i v_{i0} + \\sum_{j\\in [m]} r_{ij}v_{ij} x_j}{v_{i0} + \\sum_{j\\in [m]} v_{ij} x_j}$\nBecause the first component of $F(x)$ is a constant, we then can convert (CAP) as the following minimization problem:\n$\\min_{x \\in X} \\left\\{  \\sum_{i\\in [n]} P_i \\frac{\\sum_{j\\in [m]} r_{ij}v_{ij}x_j}{v_{i0} + \\sum_{j\\in [m]} v_{ij}x_j} - \\sum_{i\\in [n]} P_i\\frac{r_i v_{i0}}{v_{i0} + \\sum_{j\\in [m]} v_{ij}x_j} \\right\\}$   (CAP-MIN)\nMILP Reformulation By letting $y_i = 1/(v_{i0}+\\sum_{j\\in [m]} v_{ij}x_j)$ for any $i \\in [n]$, we can formulate (CAP-MIN) as the following mixed-integer bilinear program:\n$\\min \\sum_{i\\in [n]} \\sum_{j\\in [m]} P_i r_{ij} v_{ij} x_j y_i + \\sum_{i\\in [n]} P_i r_i v_{i0} y_i$  (Bilinear)\ns.t.  $\\sum_{j\\in [m]} \\beta_{kj}x_j \\leq a_k$ $\\forall k \\in [k]$  (1)\n\n$v_{i0}y_i + \\sum_{j\\in [m]} v_{ij}x_j y_i \\geq 1$ $\\forall i \\in [n] $ (2)\n\n$x_j \\in \\{0,1\\}$ $\\forall j \\in [m]$ (3)\n\n$y_i \\geq 0$  $\\forall i \\in [n]$ (4)"}, {"title": "4 Outer Approximation and Supper-modular Cuts", "content": "In this section, we examine components of the objective function in (CAP-MIN) that can be proven to be convex and supper-modular. This analysis will enable us to derive valid cuts that can be incorporated into a CP or B&C procedure to solve the problem."}, {"title": "4.1 Supper-modularity and Convexity", "content": "For each $i \\in [n]$ and $j \\in [m]$, let us denote\n$\\Phi_i(x) = 1/(v_{i0} + \\sum_{j\\in [m]} v_{ij}x_j)$\n$\\Psi_i(x) = v_{i0} + \\sum_{j\\in [m]} v_{ij}x_j$   (21)\nWe also define $\\Phi_i(.)$ as a subset function if it takes input as an assortment solution:\n$\\Phi_i(S) = 1/(v_{i0} + \\sum_{j \\in S} v_{ij})$\nWe start by stating the following proposition:"}, {"title": "4.2 Cutting Plane and Branch-and-Cut Approaches", "content": "Both CP and B&C procedures work by defining a master problem, which can be solved quickly using an off-the-shelf solver. At each step, valid cuts are added to the master problem to outer-approximate the nonlinear terms, and the master problem is repeatedly solved until an optimal solution is found or a stopping condition is met. In our context, the entire objective function is neither convex nor submodular, so typical CP or B&C approaches are not directly applicable. To utilize the valid cuts discussed above, let us rewrite (CAP-MIN) as the following mixed-integer nonlinear program:\n$\\min_{x\\in X} \\left\\{\\sum_{i\\in [n]} \\sum_{j\\in [m]} P_i r_{ij} v_{ij} x_j y_i(x) + \\sum_{i\\in [n]} P_i r_i v_{i0} y_i(x) \\right\\}$   (26)\nSince all the terms $P_i r_{ij} v_{ij} x_j$ and $P_i r_i v_{i0}$ are non-negative for all $i \\in [n]$ and $j \\in [m]$, we can set $y_i = \\Phi_i(x)$ and reformulate (26) as:\n$\\min \\sum_{i\\in [n]} \\sum_{j\\in [m]} P_i r_{ij} v_{ij} x_j y_i + \\sum_{i\\in [n]} P_i r_i v_{i0} y_i$  (MINLP)\ns.t. $y_i \\geq \\Phi_i(x)$, $\\forall i \\in [n]$  (27)\n$x \\in X, y \\in R^+$  (28)\nTo support the use of the outer-approximation and submodular cuts mentioned above, the following proposition states that the mixed-integer nonlinear program in (MINLP) is equivalent to a mixed-integer bilinear program where the nonlinear constraints (27) are replaced by a set of valid cuts (outer-approximation or submodular cuts).\nProposition 2 The MINLP is equivalent to the following mixed-integer bilinear program:\n$\\min \\sum_{i\\in [n]} \\sum_{j\\in [m]} P_i r_{ij} v_{ij} x_j y_i + \\sum_{i\\in [n]} P_i r_i v_{i0} y_i$  (MIBLP)\ns.t. $y_i \\geq (\\alpha_i^* )^T x + \\beta_i^*$, $\\forall x \\in X$, $i\\in [n]$  (29)\n$x \\in X, y \\in R^+$ (30)"}, {"title": "4.3 An Approximation Scheme", "content": "An interesting feature of submodular maximization (or super-modular minimization) is that a simple polynomial-time greedy heuristic can guarantee a constant factor approximation of $(1-1/e)$. In the context of assortment optimization under the MMNL model, it is known that even without any constraints, approximating any constant factor is NP-hard. The objective in this context is not submodular, but as discussed previously, it contains some submodular components. In this section, we demonstrate that super-modularity can be leveraged to devise a simple polynomial-time greedy algorithm that yields solutions with semi-constant factor guarantees. Such solutions can be used for warm starts of CP or B&C procedures to enhance the optimization.\nFirst, we state in the following proposition that the objective function, defined as a set function, is monotonically increasing and supper-modular if all the prices $r_{ij}$ are the same for all $i \\in [n]$ and $j \\in [m]$.\nProposition 3 If $r_{ij} = r_{ij'}$ for all $i \\in [n]$ and $j, j' \\in [m]$, then the objective function in (Assort) is monotonically increasing and supper-modular.\nWe then define the following set function $G(S)$, which is $F(S)$ when all the prices are set to unit values:\n$G(S) = \\sum_{i\\in [n]} P_i  \\frac{\\sum_{j \\in S} v_{ij}}{v_{i0} + \\sum_{j\\in S} v_{ij}}$\nFrom Proposition 3, we know that $G(S)$ is monotonic and supper-modular, implying that a simple greedy heuristic can offer at least a $(1-1/e)$ approximation solution to the problem $\\max_{S, |S|\\leq r} G(S)$. Below, we demonstrate that this greedy procedure can also provide a guaranteed solution to the assortment optimization problem under MMNL, both in unconstrained and cardinality-constrained settings.\nProposition 4 Let $S = \\{S_1, ..., S_m\\}$ be a set of solutions returned by performing the Greedy Heuristic on $\\max_{|S|\\leq r} G(S)$ for $r = 1,...,m$. Then, $S$ contains a $(\\frac{r_{\\min}}{r_{\\max}} (1-1/e))$-approximation solution to (Assort), under the cardinality constraint $|S| \\leq C$ or without any constraints. In other words\n$\\max F(S) \\geq \\min \\{ \\frac{r_{\\min}}{r_{\\max}} (1-1/e) \\} \\max F(S)$\n$S, |S| \\leq C$ \n$\\max_{S \\in S, |S|\\leq C} F(S) \\geq \\frac{r_{\\min}}{r_{\\max}} (1-1/e) \\max_{|S| \\leq C} F(S)$ (46)\nwhere $r_{\\min} = \\min_{i\\in [n], j\\in [m]} r_{ij}$ and $r_{\\max} = \\max_{i\\in [n], j\\in [m]} r_{ij}$"}, {"title": "5 Numerical Study", "content": null}, {"title": "5.1 Experimental settings", "content": "To examine the effectiveness of the outer-approximation and supper-modular cuts, we perform a numerical study on four sets of problems provided by \u015een et al. (2018) and several newly generated sets. The problems are solved with the Gurobi 11.0.0 solver on a computer with a 12th Gen Intel (R) CoreTM i7-1255U processor and 16 GB of RAM operating on 64-bit Windows 10. We use the default settings of Gurobi, except that we force the solver to use 8 threads to explore the solutions. All data and .lp files provided by \u015een et al. (2018) are available at https://atamturk.ieor.berkeley.edu/data/assortment.optimization/. Existing .lp files found via the above URL are directly run with Gurobi, while our models and CONIC formulation introduced by \u015een et al. (2018) for new datasets are implemented in C++. We set a time limit of one hour for all instances. If the solver or algorithm exceeds this time limit, it is forced to stop, and the best solutions found within the allotted time are reported.\nIn \u015een et al. (2018), the first and second sets of problems are randomly generated with $n = \\{20, 50\\}$ and $m = \\{200, 500\\}$, respectively. Let us denote these sets as Sen_200_20 and Sen_500_50. For each product $j \\in [m]$, the revenue $r_{ij}$ is the same across the customer classes $i \\in [n]$ and drawn from a uniform $U[1,3]$ distribution. The utilities $v_{ij}$ are generated from a $U[1,2]$ distribution. The probability $p_i$ that the demand originates from customer class $i$ is set to 1/20 in the first set of problems and 1/50 in the second. The no-purchase preference $v_{i0}$ is either 5 or 10 in Sen_200_20 and either 10 or 20 in Sen_500_50. The only cardinality constraint $(\\sum_{j\\in [m]} x_j \\leq C)$ is considered, and the maximum capacity $C$ of the assortment is taken from $\\{10, 20, 50, 100, 200\\}$ in Sen_200_20 and $\\{20, 50, 100, 200, 500\\}$ in Sen_500_50. For each value of no-purchase preference and capacity, the authors generate 5 instances, resulting in a total of 50 instances.\nThe third set of problems in \u015een et al. (2018) is associated with 100 customers and 100 products. Let us denote it as Sen_100_100. This is also the hard set of problems generated based on a working paper that is now published as D\u00e9sir et al. (2022). An undirected graph $G = (V, E)$ with $V = m = n = 100$ is created to generate the utilities $v_{ij}$. The revenue $r_{ij}$ is randomly generated from a $U[1, 3]$ distribution and the probability $p_i$ is in $[0, 1]$. The capacity $C$ is taken from $\\{10, 20, 50,100\\}$ and the no-purchase preference is either 1 or 2. There are 5 instances generated for each pair of capacity and no-purchase preference, leading to 40 instances.\nThe fourth set of problems is created in the same way as the first set, except that the set of 200 products is divided into 5 disjoint subsets $S_k (k = 1,...,5)$. This leads to a general capacity constraint: $\\sum_{j\\in [m]} \\beta_j x_j \\leq \\alpha$ where $\\beta_j$ is randomly generated from U[0, 1] distribution and 5 extra capacity constraints: $\\sum_{j\\in [S_k]} x_j \\leq C_k$. The set of pairs $(\\alpha,C_k)$ is $\\{ (5,2), (10, 4), (25, 10), (50, 20), (100, 40)\\}$ and the no-purchase preference is either 10 or 20. We denote this set of instances as Sen_200_20_5."}, {"title": "5.2 Comparison Results", "content": "Our experimental results indicate that when the number of customer classes is not too large (as is the case for all the instances considered above), B&C generally outperforms CP. Therefore, we will first focus on the comparison results for the B&C method (with comparisons to CP provided in the appendix). In the next subsection, we will present numerical results using CP for the case of a large number of customer classes."}, {"title": "5.3 Experiment Results for Instances of Large Numbers of Customer Classes", "content": "In this section, we present comparison results for large-scale instances involving a large number of customer classes. Such instances are particularly relevant when, for example, the choice probabilities under the mixed-logit model are expressed as expectations over random variables. In these cases, sample average approximation (SAA) may be needed to approximate the objective"}, {"title": "APPENDIX", "content": null}, {"title": "A Additional Numerical Results", "content": null}, {"title": "A.1 Comparison of B&C and CP Approaches", "content": "As mentioned in the main paper, the B&C consistently outperforms the CP approaches for small- and medium-sized instances when the number of customer classes is not too large. Below, we provide some numerical comparisons to illustrate this."}, {"title": "A.2 Impact of the Number of Cuts for the Segment-based Approach", "content": "In this section, we explore the impact of the number of customer groups (L) on the performance of the CP and B&C methods under the segment-based master problem (Bi-Master-SB), using instances with a large number of customer classes described in Section 5.3."}]}