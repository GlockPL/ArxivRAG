{"title": "Outer Approximation and Supper-modular Cuts for Constrained Assortment Optimization under Mixed-Logit Model", "authors": ["Hoang Giang Pham", "Tien Mai"], "abstract": "In this paper, we study the assortment optimization problem under the mixed-logit customer choice model. While assortment optimization has been a major topic in revenue management for decades, the mixed-logit model is considered one of the most general and flexible approaches for modeling and predicting customer purchasing behavior. Previous work has primarily relied on mixed-integer linear programming (MILP) or second-order cone (CONIC) reformulations, which allow for exact problem solving using off-the-shelf solvers. However, these approaches often suffer from weak continuous relaxations and are slow when solving large instances. Our research addresses the problem by focusing on components of the objective function that can be proven to be monotonically supper-modular and convex. This allows us to derive valid cuts to outer-approximate the nonlinear objective functions. We then demonstrate that these valid cuts can be incorporated into Cutting Plane or Branch-and-Cut methods to solve the problem exactly. Extensive experiments show that our approaches consistently outperform previous methods in terms of both solution quality and computation time.", "sections": [{"title": "1 Introduction", "content": "Assortment planning in retail refers to the process of deciding which products to offer during a specific time period. It involves selecting the optimal mix of items, considering factors such as profitability, market share, and customer satisfaction. In the recent operations research literature, there has been increasing attention on assortment optimization problems that involve"}, {"title": "2 Literature review", "content": "In the context of assortment optimization, the goal is to select an appropriate subset of items from a larger set to offer to customers. This decision aims to maximize an objective (such as ex- pected revenue) while considering customer preferences and their choice behavior. Specifically, it involves modeling customer substitution between products and understanding how product characteristics impact overall demand. The most widely employed model to capture customer behavior is multinomial logit (MNL) model. This model relies on a probabilistic framework to represent individual customer utilities. Essentially, it estimates the likelihood of a customer choosing a particular product from a set of alternatives based on their preferences and char- acteristics of the products. The pioneering work of assortment planing problem under MNL model is presented by Ryzin & Mahajan (1999) and several follow-up studies are introduced by Mahajan & van Ryzin (2001), Chong et al. (2001), Cachon et al. (2005), Rusmevichientong et al. (2010), Rusmevichientong & Topaloglu (2012), Topaloglu (2013), Lo & Topaloglu (2019), and Liu et al. (2020).\nDespite its popularity, the MNL model is restricted due to its independence from the Indepen- dence from Irrelevant Alternatives property, which implies that the ratio of the probabilities of choosing two products is independent of any other alternative. Furthermore, the total market share of an assortment and the substitution rates within that assortment cannot be indepen- dently defined (K\u00f6k & Fisher, 2007). These properties are shown to not hold in many practical contexts, and a partial remedy for them has been made based on an extension of the MNL model, called the nested logit model. Recently, Davis et al. (2014), Gallego & Topaloglu (2014), Li et al. (2015), Alfandari et al. (2021) study assortment optimization under variants of the nested logit model. Another extension of the MNL is the MMNL model introduced by Boyd &"}, {"title": "3 Constrained Assortment Problem under the MMNL Model", "content": "Let [m] represent the set of available products and S denote an assortment, which is a subset of the products offered by the retailer. The traditional MNL model is based on the utility a customer derives from purchasing a product. This utility consists of two components: Uj =\nuj + ej for any product j \u2208 [m], where uj is the deterministic component and ej is a random component assumed to follow a Gumbel distribution with a mean of zero and variance of $\\mu^2\\pi^2/6$.\nLet pj denote the unit price of product j and vo represent the no-purchase option. Under the MNL model, the probability that a customer purchases product j\u2208 [m] from an assortment S is given by:\nP_j(S) = \\frac{V_j}{v_0 + \\sum_{k \\in S} v_k}\nThe MMNL model extends the MNL model by assuming that customers belong to n different classes. Let pi be the probability that the demand originates from customer class i \u2208 [n]. Denote vij as the customer preference for customer class i \u2208 [n] and product j \u2208 [m]. For any customer class i \u2208 [n], let vio be the non-purchase preference and rij be the revenue from product j \u2208 [m] for customer class i \u2208 [n]. The expected revenue for a given assortment S can be expressed as a sum of MNL-based revenues:\n\\sum_{i \\in [n]} P_i \\frac{\\sum_{j \\in S} r_{ij}v_{ij}}{v_{i0} + \\sum_{j \\in S} v_{ij}}\nThe assortment optimization problem then can be formulated as:\n\\max_{S} F(S) = \\sum_{i \\in [n]} P_i \\frac{\\sum_{j \\in S} r_{ij}v_{ij}}{v_{i0} + \\sum_{j \\in S} v_{ij}} (Assort)\nIt is convenient to formulate (Assort) as a binary program. To achieve this, we define the decision variables x such that xj equals 1 if product j is included in the assortment, and 0 otherwise. The assortment problem can then be formulated as follows:\n\\max_{x\\in{0,1}^m} F(x) = \\sum_{i \\in [n]} P_i \\frac{\\sum_{j \\in [m]} r_{ij}v_{ij}x_j}{v_{i0} + \\sum_{j \\in [m]} v_{ij}x_j}\nIt is known that the above problem is NP-hard for n \u2265 2, even without any constraint (Rus- mevichientong et al., 2014b). Our research focuses on the capacitated assortment problem, where the above assortment problem is extended by adding resource constraints (\u015een et al., 2018, D\u00e9sir et al., 2022). Let [k] be the set of resources that may restrict the assortment, \u03b2kj be the required amount of resource used by product j \u2208 [m] and ak denote the amount of resource"}, {"title": "3.2 The Traditional MILP and CONIC Reformulations", "content": "In this section, we revisit the classic MILP and CONIC reformulations for (CAP). To this end, let us first reformulate (CAP) as a minimization problem. Define ri = maxj\u2208[m] rij for all i \u2208 [n], and rij = ri \u2212 rij for all i \u2208 [n] and j\u2208 [m]. For notational simplicity, let X represent the feasible set of (CAP). The objective function in (CAP) can be written as follows:\nF(x) = \\sum_{i \\in [n]} p_i r_i - \\sum_{i \\in [n]} p_i \\frac{r_i v_{i0} + \\sum_{j \\in [m]} r_{ij}v_{ij} x_j}{v_{i0} + \\sum_{j \\in [m]} v_{ij} x_j}\nBecause the first component of F(x) is a constant, we then can convert (CAP) as the following minimization problem:\n\\min_{x \\in X} {U(x) = \\sum_{i \\in [n]} {\\frac{P_i \\sum_{j \\in [m]} r_{ij}v_{ij}x_j}{v_{i0} + \\sum_{j \\in [m]} v_{ij}x_j}} -  \\sum_{i \\in [n]} {\\frac{P_ir_iv_{i0}}{v_{i0} + \\sum_{j \\in [m]} v_{ij}x_j}}}\nMILP Reformulation By letting yi = 1/(vio+\u2211j\u2208[m] vijxj) for any i \u2208 [n], we can formulate (CAP-MIN) as the following mixed-integer bilinear program:\n\\min \\sum_{i \\in [n]} \\sum_{j \\in [m]} P_i r_{ij} v_{ij} x_j y_i + \\sum_{i \\in [n]} P_i r_i v_{i0} y_i (Bilinear)\ns.t. \\sum_{j \\in [m]} \\beta_{kj} x_j \\leq a_k \\forall k \\in [k] (1)\nv_{i0}y_i + \\sum_{j \\in [m]} v_{ij} x_j y_i \\geq 1 \\forall i \\in [n] (2)\nx_j \\in {0,1} \\forall j \\in [m] (3)\ny_i \\geq 0 \\forall i \\in [n] (4)"}, {"title": "4 Outer Approximation and Supper-modular Cuts", "content": "In this section, we examine components of the objective function in (CAP-MIN) that can be proven to be convex and supper-modular. This analysis will enable us to derive valid cuts that can be incorporated into a CP or B&C procedure to solve the problem."}, {"title": "4.1 Supper-modularity and Convexity", "content": "For each i \u2208 [n] and j \u2208 [m], let us denote\n\\Phi_i(x) = 1/(v_{i0} + \\sum_{j \\in [m]} v_{ij} x_j)\n\\Psi_i(x) = v_{i0} + \\sum_{j \\in [m]} v_{ij} x_j (21)"}, {"title": "4.2 Cutting Plane and Branch-and-Cut Approaches", "content": "Both CP and B&C procedures work by defining a master problem, which can be solved quickly using an off-the-shelf solver. At each step, valid cuts are added to the master problem to outer-approximate the nonlinear terms, and the master problem is repeatedly solved until an optimal solution is found or a stopping condition is met. In our context, the entire objective function is neither convex nor submodular, so typical CP or B&C approaches are not directly applicable. To utilize the valid cuts discussed above, let us rewrite (CAP-MIN) as the following mixed-integer nonlinear program:\n\\min_{X \\in X} { \\sum_{i \\in [n]} \\sum_{j \\in [m]} P_i r_{ij}v_{ij} x_j Y_i(x) + \\sum_{i \\in [n]} P_i r_i v_{i0} Y_i(x) } (26)\nSince all the terms pirijvijxj and pirivio are non-negative for all i \u2208 [n] and j \u2208 [m], we can set Yi = \u03a6i(x) and reformulate (26) as:\n\\min \\sum_{i \\in [n]} \\sum_{j \\in [m]} P_i r_{ij} v_{ij} x_j y_i + \\sum_{i \\in [n]} P_i r_i v_{i0} y_i (MINLP)\ns.t. y_i \\geq \\Phi_i(x), \\forall i \\in [n] (27)\nx \\in X, y \\in \\mathbb{R}^+ (28)\nTo support the use of the outer-approximation and submodular cuts mentioned above, the following proposition states that the mixed-integer nonlinear program in (MINLP) is equivalent to a mixed-integer bilinear program where the nonlinear constraints (27) are replaced by a set of valid cuts (outer-approximation or submodular cuts).\nProposition 2 The MINLP is equivalent to the following mixed-integer bilinear program:\n\\min \\sum_{i \\in [n]} \\sum_{j \\in [m]} P_i r_{ij} v_{ij} x_j y_i + \\sum_{i \\in [n]} P_i r_i v_{i0} y_i (MIBLP)\ns.t. y_i \\geq (\\alpha_{\\overline{x}})^T x + \\beta^{\\overline{x}}, \\forall i \\in [n] (29)\nx \\in X, y \\in \\mathbb{R}^+ (30)\nwhere yi \u2265 (\u03b1)x + \u03b2 are outer-approximation or submodular cuts, constructed by generating valid inequalities of the forms in (23), (24), and (25) at point X.\nProof. We will prove that the feasible sets of (MINLP) and (MIBLP) are equivalent. To this end, let (x, y) be a feasible solution to (MINLP), implying yi \u2264 \u03a6i(x) for all x \u2208 X. Since all"}, {"title": "5 Numerical Study", "content": "To examine the effectiveness of the outer-approximation and supper-modular cuts, we perform a numerical study on four sets of problems provided by \u015een et al. (2018) and several newly generated sets. The problems are solved with the Gurobi 11.0.0 solver on a computer with a 12th Gen Intel (R) CoreTM i7-1255U processor and 16 GB of RAM operating on 64-bit Windows 10. We use the default settings of Gurobi, except that we force the solver to use 8 threads to explore the solutions. All data and . 1p files provided by \u015een et al. (2018) are available at https://atamturk.ieor.berkeley.edu/data/assortment.optimization/. Existing .1p files found via the above URL are directly run with Gurobi, while our models and CONIC formulation introduced by \u015een et al. (2018) for new datasets are implemented in C++. We set a time limit of one hour for all instances. If the solver or algorithm exceeds this time limit, it is forced to stop, and the best solutions found within the allotted time are reported.\nIn \u015een et al. (2018), the first and second sets of problems are randomly generated with n = {20, 50} and m = {200, 500}, respectively. Let us denote these sets as Sen_200_20 and Sen_500_50. For each product j \u2208 [m], the revenue rij is the same across the customer classes i \u2208 [n] and drawn from a uniform U[1,3] distribution. The utilities vij are generated from a U[1,2] dis- tribution. The probability pi that the demand originates from customer class i is set to 1/20 in the first set of problems and 1/50 in the second. The no-purchase preference vio is either 5 or 10 in Sen_200_20 and either 10 or 20 in Sen_500_50. The only cardinality constraint (\u2211j\u2208[m] xj \u2264 C) is considered, and the maximum capacity C of the assortment is taken from {10, 20, 50, 100, 200} in Sen_200_20 and {20, 50, 100, 200, 500} in Sen_500_50. For each value of no-purchase preference and capacity, the authors generate 5 instances, resulting in a total of 50 instances.\nThe third set of problems in \u015een et al. (2018) is associated with 100 customers and 100 products. Let us denote it as Sen_100_100. This is also the hard set of problems generated based on a working paper that is now published as D\u00e9sir et al. (2022). An undirected graph G = (V, E) with V = m = n = 100 is created to generate the utilities vij. The revenue rij is randomly generated from a U[1, 3] distribution and the probability pi is in [0, 1]. The capacity C is taken from {10, 20, 50,100} and the no-purchase preference is either 1 or 2. There are 5 instances generated for each pair of capacity and no-purchase preference, leading to 40 instances.\nThe fourth set of problems is created in the same way as the first set, except that the set of 200 products is divided into 5 disjoint subsets Sk (k = 1,...,5). This leads to a gen- eral capacity constraint: \u2211j\u2208[m] Bjxj \u2264 a where \u1e9ej is randomly generated from U[0, 1] dis- tribution and 5 extra capacity constraints: \u2211je[sk] Xj \u2264 Ck. The set of pairs (a,Ck) is {(5,2), (10, 4), (25, 10), (50, 20), (100, 40)} and the no-purchase preference is either 10 or 20. We denote this set of instances as Sen_200_20_5."}, {"title": "5.2 Comparison Results", "content": "Our experimental results indicate that when the number of customer classes is not too large (as is the case for all the instances considered above), B&C generally outperforms CP. Therefore, we will first focus on the comparison results for the B&C method (with comparisons to CP provided in the appendix). In the next subsection, we will present numerical results using CP for the case of a large number of customer classes."}, {"title": "5.3 Experiment Results for Instances of Large Numbers of Customer Classes", "content": "In this section, we present comparison results for large-scale instances involving a large number of customer classes. Such instances are particularly relevant when, for example, the choice prob- abilities under the mixed-logit model are expressed as expectations over random variables. In these cases, sample average approximation (SAA) may be needed to approximate the objective"}, {"title": "6 Conclusion", "content": "In this paper, we have addressed the capacitated assortment problem under the MMNL discrete choice model. Unlike previous methods that primarily rely on MILP or CONIC reformula- tions, we have explored nonlinear components of objective functions that are convex and super- modular. We developed two types of cuts\u2014outer-approximation and super-modular cuts to create new CP and B&C approaches, which iteratively add such cuts to a master problem (linear or bilinear). Additionally, we theoretically demonstrate that super-modularity can be leveraged to devise a simple polynomial-time Greedy Heuristic algorithm that yields solutions with semi-constant factor guarantees. Experiments conducted on instances of various sizes es- tablish the superiority of our CP and B&C approaches, which can solve instances with a very large number of products and customer classes to optimality, outperforming the state-of-the-art CONIC approach."}, {"title": "A Additional Numerical Results", "content": "As mentioned in the main paper, the B&C consistently outperforms the CP approaches for small- and medium-sized instances when the number of customer classes is not too large. Below, we provide some numerical comparisons to illustrate this. Table 7 presents a comparison between the B&C with (Li-Master)\u2014the best approach as shown in Tables 1 - 5 and the CP methods under (Bi-Master) and (Li-Master), using some standard benchmark instances from \u015een et al. (2018). It can be observed that the CP performs poorly on instances with large capacity, while the B&C with (Li-Master) solves all instances to optimality."}, {"title": "A.2 Impact of the Number of Cuts for the Segment-based Approach", "content": "In this section, we explore the impact of the number of customer groups (L) on the performance of the CP and B&C methods under the segment-based master problem (Bi-Master-SB), using instances with a large number of customer classes described in Section 5.3. Figure 3 reports the"}]}