{"title": "An Optimal Cascade Feature-Level Spatiotemporal Fusion Strategy for Anomaly Detection in CAN Bus", "authors": ["Mohammad Fatahi", "Danial Sadrian Zadeh", "Benyamin Ghojogh", "Behzad Moshiri", "Otman Basir"], "abstract": "Autonomous vehicles represent a revolutionary advancement driven by the integration of artificial intelligence within intelligent transportation systems. However, they remain vulnerable due to the absence of robust security mechanisms in the Controller Area Network (CAN) bus. In order to mitigate the security issue, many machine learning models and strategies have been proposed, which primarily focus on a subset of dominant patterns of anomalies and lack rigorous evaluation in terms of reliability and robustness. Therefore, to address the limitations of previous works and mitigate the security vulnerability in CAN bus, the current study develops a model based on the intrinsic nature of the problem to cover all dominant patterns of anomalies. To achieve this, a cascade feature-level fusion strategy optimized by a two-parameter genetic algorithm is proposed to combine temporal and spatial information. Subsequently, the model is evaluated using a paired t-test to ensure reliability and robustness. Finally, a comprehensive comparative analysis conducted on two widely used datasets advocates that the proposed model outperforms other models and achieves superior accuracy and F1-score, demonstrating the best performance among all models presented to date.", "sections": [{"title": "I. INTRODUCTION", "content": "In recent years, a significant desire to lower manufacturing expenses, enhance fuel efficiency, and enhance driver comfort has remarkably gained momentum in the automotive industry. As a result, the automotive sector has experienced a transformative shift, where conventional mechanical parts in modern vehicles are increasingly being substituted with electronic embedded systems called Electronic Control Units (ECUs) [1].\nECUs rely on the widely recognized controller area network (CAN) protocol for communication. However, recent studies have revealed that this protocol is susceptible to numerous security threats, posing significant risks to the safety of both passengers and pedestrians [2]. This vulnerability to various attacks stems from the absence of built-in security mechanisms in its design. Therefore, developing anomaly detection models with high accuracy is essential to identify threats targeting the CAN bus [3].\nCAN bus exhibits three characteristics that contribute to its vulnerabilities: broadcast data transfer (every node can send and receive any messages in the CAN bus), priority-based arbitration (every message has a priority for broadcasting in the CAN bus), and low latency (due to the lack of security mechanism). These features render traditional security measures, such as cryptographic techniques, authentication, and data integrity mechanisms, unsuitable for in-vehicle networks, as the CAN bus lacks support for these functions [3]. These models detect threats and attacks on in-vehicle network systems by identifying abnormal CAN bus messages through protocol analysis [4]. This idea of integrating anomaly detection models into automotive systems was initially proposed in [5]. These models are highly recommended to deploy at the central gateway [6]. The transmission of CAN packets or messages typically occurs via the CAN bus data frame, with user data transmitted specifically within the data field. This structure must include a data field containing 0-8 bytes, representing the content of the message, along with a CAN ID that specifies its priority level. This format remains consistent across various CAN bus architectures. Therefore, anomaly detection models that analyze transmitted messages are capable of generalizing across different CAN bus architectures. However, models depending on the physical characteristics of the CAN bus may struggle to achieve such generalization [3], [7]. Given the vulnerabilities of the CAN bus to cyberattacks, this study focuses on developing a supervised machine learning-based anomaly detection model specifically designed to identify such threats. Although numerous prior studies have explored anomaly detection for CAN bus systems, they have overlooked the intrinsic nature of the problem and have concentrated on machine learning perspectives of the problem. In this regard, The key contributions of this manuscript are outlined as follows:\n\u2022 Addressing attacks carried out on the CAN bus based on the intrinsic nature of the problem and considering the dominant patterns of the problem.\n\u2022 Proposing a cascade feature-level fusion strategy to enhance model performance.\n\u2022 Fusing spatial and temporal information to overcome dominant patterns of the problem.\n\u2022 Providing a comprehensive analysis for synthesizing spatial information."}, {"title": "II. RELATED WORKS", "content": "Anomaly detection in intelligent transportation systems (ITS) involves a diverse set of techniques. These techniques have been widely examined to address the challenges of identifying anomalies in the CAN bus.\nStudies adopted different strategies for dealing with attacks. For example, the work of [15] primarily focuses on the Data column while disregarding the CAN ID and Timestamp features. Their approach utilizes an attention-based model to extract relationships between the Data columns. However, its most significant drawback lies in neglecting the temporal characteristics of the data. The work of [19] attempts to develop a precise model by leveraging an end-to-end approach where multi-level features are extracted using an attention-based model, factorization machine (FM), and cross network. Despite the increased model complexity, the performance in terms of accuracy and F1-score did not meet expectations on a dataset where near-perfect performance is typically achievable. This indicates that the high complexity and diverse components of the network failed to collaborate effectively to deliver optimal results. In [17], the focus of authors is on spatial information, relying solely on the Data column, and it attempts to predict anomalies in a supervised manner using a long short-term memory (LSTM) network and Gaussian Naive Bayes classification technique. This study also overlooks the importance of temporal information and attempts to develop a model relying solely on spatial information, which significantly weakens the model. In [8], similar to the work of [17], there is an emphasis on dealing with attacks through spatial differences. However, the issue lies in the fact that these differences alone are insufficient for dealing with attacks, as they neglect the temporal dominant pattern of attacks. Additionally, they recommended using RNNs with the ReLU activation function. Nevertheless, various experiments have revealed that employing ReLU in RNNs can lead to unstable training due to exploding gradients.\nIn [3], the synthetic minority over-sampling technique (SMOTE) [20] was incorrectly applied to the entire dataset, which changed the natural distribution of the test data. However, SMOTE should be applied to the training data and not to the test data. Furthermore, multi-classifier fusion was used in the framework to combine various classifiers for classification. In [2], the authors proposed a model consisting of two LSTM layers, each with 256 units, one one-dimensional convolution layer with 100 filters, and a fully connected layer with nine neurons at the end. The model processes sequences of length 100 and makes predictions by comparing them with a threshold. Firstly, such a model is computationally demanding and requires very powerful hardware, which may not be cost-effective in industrial environments. Moreover, the results of their model are presented only on a single dataset, highlighting the need for further evaluation. In [9], the proposed methodology solely focuses on the temporal aspects of attacks on the CAN bus, neglecting the spatial aspects, which constitute one of the two dominant attack patterns in this domain. Additionally, the accuracy metric was not reported, and the results were not presented for different parts of the dataset. In [13], the authors utilized a federated learning (FL) framework, where data is distributed across different nodes, and each node trains a gated recurrent unit (GRU) network. The weights of the local models are then aggregated on a central server to create a global model using an aggregation technique and an ensemble unit to improve accuracy. Similar to [2], this approach is computationally demanding, which may pose a challenge in industrial applications. The framework in [14] includes feature selection and the selection of efficient classifiers. While such a simple model is computationally efficient, its performance is not remarkable. In [18], after performing oversampling, various classifiers were applied, which are computationally effective but exhibit poor performance. The proposed model in [11] relies solely on CAN ID, thus overlooking the Data columns, which can significantly weaken the model because it neglects the dominant spatial pattern. The proposed model consists of two parts: a generator and a detector. While the former employs an LSTM network to produce pseudo-normal noisy data from CAN ID sequences, trying to reconstruct the characteristics of normal traffic, the latter leverages a ResNet [21] for classification.\nOverall, there are three key points regarding the background of the research that need to be highlighted. These key points are as follows:\n1) Lack of Statistical Tests: Most studies lack statistical tests, whereas providing such information significantly enhances the robustness and reliability of the research.\n2) Absence of Practical Tests: Most studies lack practical tests and primarily rely on either [10] or [12] Datasets. Indeed, practical tests are important in ITS, particularly machine vision; however, conducting practical tests to detect vehicle attacks poses significant challenges, as they carry the potential for severe and irreversible damage due to risks associated with both stationary and moving vehicle states. Therefore, the vast majority of studies employ real-world datasets like [10], [12] to conduct research.\n3) Focus on Data Aspects: A significant number of studies either focused on the spatial aspects, such as [15], [17], or the temporal aspects, such as [9], [11]. Others aimed to develop models using all raw features. However, the main reason why most existing anomaly detection models fail to detect zero-day attacks is that the signatures of such attacks have not been seen during model training. The optimal solution to overcome this challenge is to develop a model tailored to the nature of the problem, targeting the dominant patterns of attacks."}, {"title": "III. METHODOLOGY", "content": "This section elaborates on the various datasets utilized in the current study and provides a detailed explanation of the current strategy. Fig. 1 depicts the proposed methodology, which consists of three main concepts: spatial, temporal, and fusion. It is a fact that the temporal dimension is perpendicular to the spatial dimension; in other words, the space is similar to a slice, and time comprises putting these slices together. In this regard, the main goal of the spatial concept is to focus on analyzing the received information at each time step (a slice) separately. On the contrary, the main focus of the temporal concept is on analyzing the information from different time steps (putting slices together). However, in the fusion concept, these spatial and temporal information are fused. All these concepts are elaborated upon in the following subsections.\nAs highlighted in Section II, the limited availability of datasets poses a significant challenge. Irreparable damages and potential hazards have resulted in a scarcity of real-world tests in research works in the field of cybersecurity for autonomous vehicles [7]. The Hacking and Countermeasure Research Lab (HCRL) [22] has provided valuable real-world datasets for advancing research in this field. In the current study, two datasets from this laboratory have been exploited to demonstrate and validate the proposed methodology. The first dataset, introduced in [12], is employed to illustrate the proposed methodology step-by-step, as it is the most recent and fully labeled dataset available on this subject. For the final evaluation in Subsection V-C, the dataset presented in [10] has been utilized.\nThe main purpose of this part stems from one of the two dominant patterns in attacks carried out in the CAN bus. The pattern of the Data column changes during attacks on the CAN bus. To deal with this dominant pattern, the Spatial Data Prediction Module is proposed in the current study to predict the current message of the data according to the previous message trained on the normal cycle of messages received in the CAN bus. The Spatial Data Prediction model is first trained on the Attack-Free/Normal dataset provided by [10]. Subsequently, this model is employed to predict the current message based on the previous message. This process involves predicting eight values (Datal to Data8), followed by calculating the absolute difference between each predicted value and the corresponding actual value received from the CAN bus. Finally, these differential values are utilized as the new features. In the current study, the performance of the LSTM network, simple RNN, GRU network, one-dimensional convolutional neural network (1D-CNN), and extended LSTM (xLSTM) network are evaluated for the Spatial Data Prediction model. For all networks, the loss function is set to mean absolute error (MAE), and the optimizer is set to Adam.\nThe structure of networks used in the current study is as follows:\n\u2022 Simple RNN is a basic type of neural network designed for sequential data. It processes inputs in a step-by-step manner, using the output of the previous step as part of the input for the next step. It often struggles with long-term dependencies due to issues like vanishing gradients [23]. In RNN architectures, deep layers are not as common as in CNNs. Therefore, a single-layer RNN with 64 units, tanh activation function, and a recurrent dropout of 0.25 are selected. This is followed by a dense layer with 8 neurons.\n\u2022 LSTM network is a specialized type of RNN designed to address the limitations of RNNs, particularly in capturing long-term dependencies [17], [24]. In this study, a single-layer LSTM [25] with the same configuration as the Simple RNN is employed.\n\u2022 GRU network is a simplified version of LSTM that requires fewer parameters while still addressing vanishing gradients [26]. Similar to the LSTM configuration, a single-layer GRU is employed.\n\u2022 1D-CNN is effective for sequential data by applying convolution filters to extract local patterns [27]. A similar configuration as other networks is used, but the activation function is set to ReLU.\n\u2022 XLSTM network is an advanced version of LSTM designed to address its known limitations by introducing exponential gating and novel memory structures. These enhancements include two main models: (i) sLSTM, which incorporates scalar memory with exponential gating and memory mixing across cells, and (ii) mLSTM, which uses a matrix memory and a covariance update rule for fully parallelizable operations [28]. This model in the current study is leveraged with an embedding size of 64 and 4 attention heads to facilitate parallel attention mechanisms. It is supported by a Conv1D kernel size of 4 for 1D-CNN and a QKV projection block size of 4 governing the query, key, and value projections in the mLSTM/sLSTM attention mechanism.\nObserved time intervals for CAN ID 0x490 during an attack. Normal messages have time intervals of around 0.4 milliseconds, whereas for spoofed messages, the intervals are less than 0.04 milliseconds. To overcome this challenge, the two novel features proposed in [29] enable models to deal with this pattern. These features aim to characterize the variations in CAN ID distributions over time. These features are as follows:\n\u2022 RATIO: It is the proportion of various CAN IDs within each time interval relative to the total number of messages during that interval.\n\u2022 Shannon Entropy (SE): The formula for the entropy-based feature for each CAN ID in a data sequence is expressed as\n$SE(ID_j) = \\frac{\\sum_{i=1}^{N}P(ID_i) \\cdot log_2{P(ID_j)}}{-\\sum_{i=1}^{N}P(ID_i) \\cdot log_2{P(ID)}}$,\nwhere $SE(ID_j)$ denotes the entropy-based feature for a specific CAN ID $ID_j$ in the sequence, $P(ID_j)$ is the proportion of messages corresponding to $ID_j$ in the total number of messages in the sequence, and N represents the total number of unique CAN IDs in the sequence.\nIn the fusion methods, the primary purpose is to integrate various types of information to achieve higher performance. These methods can be divided into three main levels [30]:\n\u2022 Signal-Level Fusion: Raw data is combined before processing at this level.\n\u2022 Feature-Level Fusion: Extracted features from data are merged to create a unified representation.\n\u2022 Decision-Level Fusion: Final results from multiple models or algorithms are aggregated to make the ultimate decision.\nFeature-level fusion aims to enhance the ability of the model to extract deeper information by directly combining various features obtained from data or different layers of a network. An advanced technique within this domain is cascade feature-level fusion, which hierarchically integrates the features. In this approach, features are combined at different levels of abstraction, where higher-level features and lower-level ones are integrated to capture complex patterns [31].\nIn the current study, as shown in Fig. 1, a cascade feature-level fusion approach is proposed to deal with dominant patterns observed in attacks on the CAN bus. Spatial and temporal features are integrated (concatenated) with the main features from the dataset to create a cascade feature-level fusion framework. Specifically, main features, spatial features, and temporal features are combined in a manner that spatial features represent the higher-level patterns, and temporal features represent the lower-level patterns. However, as discussed in Subsection III-B, in the spatial-dominant pattern, during an attack, not all data columns may undergo alteration. Furthermore, not only may all main features contribute to the performance of the model, but the optimal filter size required for extracting temporal features must also be carefully selected. In this regard, in the current study, an optimal cascade feature-level fusion strategy is proposed, where a two-parameter genetic algorithm (2P-GA) simultaneously selects the appropriate filter size for temporal features as well as appropriate features from the feature space (feature selection). Finally, a decision tree (DT), which has been highlighted in various studies, including [3], [14], for its superior performance in anomaly detection in the CAN bus, is selected for final classification. Algorithm 1 presents the current strategy for optimal cascade feature-level fusion."}, {"title": "IV. ANALYSIS OF SIMULATION RESULTS", "content": "This section outlines the simulation details for each step in the proposed framework and exploits the first dataset [12] to validate the framework.\nIn the current study, the data preprocessing stage is conducted to prepare the dataset for anomaly detection in the CAN bus. In the first step, the NaN values are replaced by 0, and the hexadecimal values are converted to decimal values. In the next step, both datasets are separated into training (70%), validation (15%), and testing (15%) before normalizing all features, which reduces the impact of features with varying scales.\nIn this subsection, the spatial part of the proposed methodology is investigated. Firstly, the training results of the models mentioned in Subsection III-B are analyzed and evaluated on normal messages. The stability and smoothness of the training process for each model are examined, followed by an assessment of the number of parameters in each model and their MAE values on the test set. Consequently, the applicability of such models in a few-shot learning mode for generating spatial features is evaluated. The evaluation metrics include accuracy, precision, recall, and F1-score for each model. To achieve this, the performance of a DT is first assessed using the raw spatial features, namely DLC, Datal, Data2, Data3, Data4, Data5, Data6, Data7, and Data8. Then, the evaluation is conducted on proposed new spatial features, and finally, the impact of adding these differential features to the raw spatial features is explored.\nAccording to Table VII, the GRU network achieves the lowest MAE (0.4353) with a moderate number of parameters (15,304), representing an efficient balance between accuracy and complexity. While xLSTM shows similar accuracy (MAE of 0.4359), it requires significantly more parameters (32,208), making it less efficient. In contrast, the Simple RNN and 1D-CNN, with fewer parameters, result in higher MAE values (0.4449 and 0.4586, respectively), indicating reduced predictive performance. Among the tested models, GRU stands out as the optimal choice for this task due to its superior accuracy and reasonable parameter count. First, the results of applying DT to the raw spatial features (i.e., DLC, Datal, Data2, Data3, Data4, Data5, Data6, Data7, and Data8) are reported. Then, the performance of DT on spatial features extracted by various models, such as 1D-CNN, using the Spatial Data Prediction Module is provided. Finally, the results of combining raw spatial features with the generated features are presented.\nThe performance of features generated by the Spatial Data Prediction Module alone is weaker compared with the raw spatial features across all models. This indicates two key points:\n1) First, raw spatial features have a significant impact on the model performance and cannot be overlooked.\n2) Second, the features generated by the module are not capable of replacing the raw features and can only be used as complementary features.\nHowever, combining the module-generated features with raw spatial features leads to a significant enhancement in the F1-score by approximately 6% and in accuracy by around 1.5% across all models. This highlights not only the necessity of cascade feature-level fusion but also demonstrates its effectiveness. Additionally, cascade feature-level fusion enriched by XLSTM, LSTM, and 1D CNN, achieves accuracy higher than 0.9810, displaying the capability of these three models in this task."}, {"title": "C. Temporal Concept", "content": "In the current subsection, the performance of raw temporal features, including Timestamp and CAN ID, as well as extracted temporal features, including Ratio and SE, and the combination of these four features are evaluated. the accuracy of the model using only raw temporal features is approximately 96%. In contrast, the extracted temporal features demonstrate around 0.3% higher accuracy. However, the combination of extracted temporal features with raw features does not show promising results, as expected. This is because the performance of the extracted features depends on the filter size, and there is a need to fine-tune this filter size. Therefore, the filter size is adjusted in the following subsection."}, {"title": "D. Optimal Cascade Feature-Level Fusion", "content": "To determine this optimal feature space (i.e., simultaneous feature selection and filter size adjustment), a 2P-GA is leveraged. shows that applying 2P-GA resulted in a filter size. The features, including SE and RATIO, are selected from the extracted temporal features, as well as Data4SDPM and Data6sDPM from the spatial features generated by the Spatial Data Prediction Module. These results highlight two key points:\n1) First, the extracted temporal features selected by the algorithm are significantly important and impactful.\n2) Second, not all spatial features generated by the module are effective. Moreover, DLC, Data1, and Data2 from the raw dataset are not selected, the recursive feature elimination (RFE) method assigns these three features the lowest importance. Table XII presents the results of applying optimal cascade feature-level fusion based on various models on DT and compares these results with those obtained from raw features on DT. The results show that compared with the raw feature space, the proposed algorithm improves the F1-score by nearly 2% and accuracy by over 0.3%. Finally, the results indicate that all different models used in the Spatial Data Prediction Module ultimately show almost the same performance in the methodology. Therefore, considering the smaller number of parameters in 1D-CNN, this study suggests the exploitation of this network in the module."}, {"title": "V. EVALUATION AND DISCUSSION", "content": "In this section, the proposed methodology is analyzed and discussed in terms of the statistically significant difference, error rate, and performance compared with other relevant feature engineering methods and state-of-the-art models.\nThis subsection examines the statistical evaluation of the model and analysis of its error rate, which are crucial for ensuring the reliability of the results. Table XIII presents the results of the 5x2cv paired t-test conducted to evaluate the statistical significance of the proposed model compared with the raw data. The t-statistic and p-value are equal to 20.51 and 5.09E-6, respectively. These results indicate that the proposed methodology is statistically significant. Additionally, compares the receiver operating characteristic (ROC) curves of the proposed model and raw data. The results show that raw features achieved an area-under-the-curve (AUC) of 0.9713, while the optimal feature space achieved an AUC of 0.9783, demonstrating that the proposed methodology outperforms in terms of error rate.\nThis comparison is crucial to understanding how capable related methods are in managing feature space to achieve optimal performance in this task. Hence, non-end-to-end methods, including principal component analysis (PCA), singular value decomposition (SVD), and Random Forest (RF) feature importance, along with end-to-end methods, including Deep Neural Network (DNN), LSTM network, attention-based network, Cross Network, and FM are employed, and their results are demonstrated in Table XIV. The results indicate that PCA and SVD degrade the performance of the model in terms of accuracy and F1-score, while the RF feature importance results in a slight enhancement in performance. Furthermore, all end-to-end methods, except for the FM, which significantly reduces performance, show approximately the same performance as DT. Finally, Table XIV illustrates that the proposed methodology in the current study outperforms all aforementioned methods.\nIn this subsection, the proposed model in the current study is compared against other state-of-the-art models. Table XV shows that various models trained on the dataset in [12] are evaluated. All models demonstrate inferior performance in terms of accuracy and F1-score compared with the proposed model, except for [3], which applied SMOTE to the entire dataset. However, such application of SMOTE is faulty, as the performance is evaluated based on a test set balanced by SMOTE. In contrast, test data should reflect the real-world distribution of data. Furthermore, Table XVI exhibits the results of the proposed model compared with other models trained on the dataset in [10]. The proposed model achieves the best performance among all models, particularly in handling fuzzy attacks, where other models exhibit inferior performance."}, {"title": "VI. CONCLUSION AND FUTURE WORKS", "content": "Autonomous vehicles have become a critical component of intelligent transportation systems. One of the most significant elements of autonomous vehicles is the CAN bus, which enables the connection of ECUs within the vehicle. Unfortunately, the CAN bus lacks built-in security mechanisms, making it vulnerable to various attacks. Existing solutions addressing this issue fail to focus on the key patterns of attacks and lack reliability and robustness. To address these shortcomings, this study proposes a model that integrates spatial and temporal information using cascade feature-level fusion optimized by a two-parameter genetic algorithm to tackle the dominant patterns of attacks. This approach ensures that zero-day attacks are detected by employing a method based on the intrinsic nature of the problem. The model demonstrates high reliability, with t-statistic and p-value of 20.51 and 5.09E-6, respectively. In addition, an AUC-ROC of 0.9783 emphasizes the reliability and robustness of the proposed model. Finally, the model is compared against various feature engineering and state-of-the-art models across two datasets. This comparison reveals that the proposed model outperforms other models and achieves outstanding accuracy and F1-score, establishing it as the best solution to this problem.\nPotential directions for future research related to this study include the following:\n\u2022 Proposing a multi-classifier fusion approach where each classifier is specifically trained on the intrinsic nature of a particular type of attack. This enables the development of a model in which each classifier excels at detecting a specific type of attack, leading to enhanced overall performance.\n\u2022 Introducing a Spatial Data Prediction Model that utilizes Deep Q-Learning to generate larger errors when encountering attacks and smaller errors for normal messages. This enhancement can improve the cascade feature-level fusion model, enabling it to operate with better performance."}]}