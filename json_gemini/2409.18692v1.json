{"title": "MG-Net: Learn to Customize QAOA with Circuit Depth Awareness", "authors": ["Yang Qian", "Xinbiao Wang", "Yuxuan Du", "Yong Luo", "Dacheng Tao"], "abstract": "Quantum Approximate Optimization Algorithm (QAOA) and its variants exhibit immense potential in tackling combinatorial optimization challenges. However, their practical realization confronts a dilemma: the requisite circuit depth for satisfactory performance is problem-specific and often exceeds the maximum capability of current quantum devices. To address this dilemma, here we first analyze the convergence behavior of QAOA, uncovering the origins of this dilemma and elucidating the intricate relationship between the employed mixer Hamiltonian, the specific problem at hand, and the permissible maximum circuit depth. Harnessing this understanding, we introduce the Mixer Generator Network (MG-Net), a unified deep learning framework adept at dynamically formulating optimal mixer Hamiltonians tailored to distinct tasks and circuit depths. Systematic simulations, encompassing Ising models and weighted Max-Cut instances with up to 64 qubits, substantiate our theoretical findings, highlighting MG-Net's superior performance in terms of both approximation ratio and efficiency.", "sections": [{"title": "1 Introduction", "content": "Combinatorial optimization problems (COPs) [1], central to numerous scientific and engineering disciplines [2, 3, 4], often defy efficient classical solutions due to their computational complexity [5, 6]. A promising strategy to overcome these computational challenges involves harnessing the power of quantum computing, as these COPs can be mapped to Ising Hamiltonians whose ground states denote optimal solutions [7, 8]. Leveraging this quantum representation, the Quantum Approximate Optimization Algorithm (QAOA) [9] has emerged to address these COPs. In particular, theoretical analyses [10, 11, 12, 13] underscore the potential of QAOA, suggesting its superiority over classical counterparts in certain contexts, particularly with unlimited infinite circuit depth. Meantime, empirical studies [14, 15, 16] affirm its applicability across a diverse spectrum of problems and devices.\nDespite these advancements, QAOA's practical efficacy is challenged by the quantum coherence limits of modern quantum devices, as there is a ceiling on the allowable maximum circuit depth p. As a result, standard QAOA often underperforms classical counterparts [18, 19]. This motivates a research shift towards redesigning the mixer Hamiltonian HM, a key component of QAOA. As illustrated in Fig. 1(a), supported by the results of quantum adiabatic evolution [20, 21], alternative HM may exist that guide the system along a more direct and efficient trajectory-a shortcut to the solution state, leading to a better performance compared to the standard QAOA. Besides, as shown in Fig. 1(b), empirical evidence indicates that the form of HM promising a good performance is varied with the allowable p. As such, diverse alternatives HM are proposed in past years, drawing upon concepts from quantum annealing [22], incorporating additional trainable parameters [17] or exploiting permutation symmetry [23]. However, these approaches require deep domain expertise and often lack generalizability across different tasks and circuit configurations p.\nIn response to these challenges, here we first analyze the convergence of QAOA on various mixer Hamiltonian configurations and circuit depths with the tool of representation theory [24]. Our finding reveals that (i) the convergence of QAOA can be enhanced through parameter grouping in the mixer Hamiltonian; (ii) the specific strategy for parameter grouping is dependent on the particular problem and the value of p. These two findings are instrumental in understanding the interplay between p, parameter grouping, and the overall efficiency of the QAOA, providing valuable insights for the design of the mixer Hamiltonian.\nEnvisioned by the achieved theoretical results, we propose an end-to-end learning framework, termed Mixer Generator Network (MG-Net), to dynamically design the mixer Hamiltonian HM for a class of problems and distinct circuit depth constraints. Conceptually, MG-Net takes the problem's description and the available circuit depth p as input and directly outputs the optimal mixer Hamiltonian for a p-QAOA. There are three distinguished features of our proposal: (i) The ability to dynamically adjust HM according to p, enhancing its compatibility with practical quantum devices; (ii) Fast customization of HM for unseen problems and circuit depth p, attributed to the multi-condition controlled generative network architecture; (iii) Circumvent the need for the expensive collection of a vast training dataset of optimal HM by employing an estimator-generator structure alongside a two-stage training approach. Note that the developed techniques can be flexibly extended to other variational quantum algorithms (VQAs) [25, 26], which may be independent of interests.\nThe contributions of this paper are:\n\u2022 We provide a rigorous theoretical analysis on the convergence of QAOA with sufficient circuit depth, elucidating the link between the performance and the parameter grouping in QAOA circuits. This analysis offers guidance on the design of mixer Hamiltonian to achieve a high approximation ratio for a specified circuit depth.\n\u2022 We propose MG-Net, which dynamically tailors its predicted mixer Hamiltonian HM to suit the given problem and circuit depth. Our model greatly reduces the cost of collecting labeled training data, attributed to an estimator-generator framework and a two-stage training strategy.\n\u2022 The proposed MG-Net demonstrates remarkable generalization ability from a limited dataset to a broad spectrum of combinatorial problems, which facilitates rapid and efficient creation of HM for unseen problems, advancing the practical utility of QAOAs.\n\u2022 Extensive experiments on the Transverse-field Ising model and Max-Cut up to 64 qubits verify our theoretical discoveries and demonstrate the advantage of MG-Net in achieving higher approximation ratios at various circuit depths compared to other quantum and traditional methods.\nThe code is released at https://github.com/QQQYang/MG-Net."}, {"title": "2 Background", "content": ""}, {"title": "2.1 Quantum approximation optimization algorithm", "content": "Considering a COP defined on a set of N binary variables z = z1\u00b7\u00b7\u00b7 zN, where zi \u2208 {\u00b11}, our objective is to identify a bit string z that maximizes a specific objective function C(z) : {+1}N \u2192 R\u22650. Intuitively, the solution space grows exponentially with N, rendering the exact solution to many COPs intractable [1]. In practice, an alternative approximation algorithm is selected to seek an approximate solution z to achieve a high approximation ratio r = C(z)/Cmax, where Cmax = maxz C(z).\nIn response to this inherent complexity, Quantum Approximate Optimization Algorithm (QAOA) [9] is proposed. In this framework, the bit string z is encoded into a quantum state |x) = |x1\u00b7\u00b7\u00b7xN) with xi = (1 - zi)/2, and the objective function C(x) is encoded into the problem Hamiltonian Hc \u2208 C2N\u00d72N so that Hc|x) = C(x) |x). Refer to Appendix A for the omitted details.\nQAOA is a hybrid quantum-classical algorithm that combines a parameterized quantum circuit (PQC) for state evolution and a classical optimizer for parameter updates. For a p-layer QAOA circuit shown in Fig. 1(a), the quantum state |\u03c8p) is prepared by alternately applying the problem Hamiltonian Hc and the mixer Hamiltonian HM = \u2211N i=1 Xi on the initial state |\u03c80), formulated as\n|\u03c8p(\u03b1, \u03b2)) = \u220fp k=1 e\u2212i\u03b2kHM e\u2212i\u03b1kHc |\u03c80), (1)\nwhere \u03b1 = (\u03b11, ..., \u03b1p) and \u03b2 = (\u03b21, ..., \u03b2p) are 2p trainable parameters. These parameters are optimized to maximize the expectation value of the problem Hamiltonian Hc:\n(\u03b1*, \u03b2*) = arg max\u03b1,\u03b2 Fp(\u03b1, \u03b2), (2)\nwhere Fp(\u03b1, \u03b2) = \u27e8\u03c8p(\u03b1, \u03b2)|Hc|\u03c8p(\u03b1, \u03b2)\u27e9 can be estimated by multiple measurements on the quantum system. As Fp(\u03b1*, \u03b2*) approaches the optimal value Cmax of the objective function, we can obtain the approximate solution to the combinatorial optimization problem with high probability by measuring the state |\u03c8p(\u03b1*, \u03b2*)) in the computational basis. A metric for assessing the performance of QAOA is the approximation ratior = Fp(\u03b1*, \u03b2*)/Cmax."}, {"title": "2.2 Symmetry in QAOA", "content": "Symmetry, ansatz design, and effective dimension. A symmetry S refers to the unitary operator leaving the operator H invariant such that S\u2020HS = H (or [S, H] = 0). All symmetries form a group S where given any two symmetries S1, S2 \u2208 S, the compositions S1S2 and S2S1 are also symmetries in S. Among various symmetries, the most relevant one to our work is the permutation symmetry \u03c0\u2208 SN, with the subscript being the qubit count N and SN being the symmetric group. For example, a permutation \u03c0with \u03c0(1) = 3, \u03c0(2) = 1,\u03c0(3) = 2 acting on the state |\u03c81\u27e9|\u03c82\u27e9|\u03c83\u27e9 yields \u03c0|\u03c81\u27e9|\u03c82\u27e9|\u03c83\u27e9 = |V3\u27e9|V1\u27e9|V2\u27e9. Throughout the whole study, we denote the group of permutation symmetries of the problem Hamiltonian Hc as Per(Hc) = {\u03c0\u2208 SN | \u03c0\u2020Hc\u03c0 = Hc}.\nConsider an N-qubit PQC U (\u03b8) = \u220fK k=1e\u2212iHk\u03b8k with \u03b8 \u2208 \u0398 and d = 2N. We call U (\u03b8) a symmetric PQC with respect to the problem Hamiltonian Hc if there exists a symmetry group S of Hc such that [U(\u03b8), S] = 0 for any \u03b8 \u2208 \u0398 and S \u2208 S. This symmetry is determined by the generators of PQCs A = {H1,\u2026\u2026, HK } which is also called ansatz design, as [U(\u03b8), S] = 0 holds for any \u03b8\u2208 \u0398 if and only if [Hk, U(\u03b8)] = 0 for any k \u2208 [K]. Such symmetry can be quantified by the effective dimension [27, 28].\nDefinition 2.1 (Effective dimension). Consider an N-qubit QAOA instance (\u03c80\u27e9, U(\u03b8), Hc) where U(\u03b8) acts on the vector space V. If there exists a direct sum decomposition V = \u2295K i=1Vi and V* \u2208 {Vi}K i=1 such that U(\u03b8) |\u03c80\u27e9 \u2208 V* for any \u03b8 and the ground state of the problem Hamiltonian |\u03c8*) satisfies |\u03c8*) \u2208 V*, then the effective dimension deff \u2264 2N is defined as the dimension of V*.\nExperimental and theoretical analysis has shown that symmetric ansatz design with a small effective dimension contributes to better trainability [29, 28, 30]."}, {"title": "3 Convergence theory of QAOA", "content": "In this section, we theoretically illustrate how employing appropriate parameter grouping corresponds to better convergence performance. Similar to Refs. [27] and [28], our derivations are based on the observation that the exploited PQC with highly-symmetric ansatz structure generally enables a faster convergence rate.\nTheorem 3.1 (Convergence). Consider a QAOA instance denoted as (\u03c80\u27e9, U(\u03b8), Hc) with U (\u03b8) determined by the related ansatz design. Let AFG, APG, ANG be the ansatz designs of the circuits with parameters fully grouped, partially grouped, and no-grouped. Their effective dimension yields\ndeff(AFG) = deff(APG) \u2264 deff (ANG), (3)\nwhere the equality in the inequality holds if there is no spatial symmetry in Hc. Besides, there exists a deff-dependent threshold C so that circuit depth p > C, the iterations T required to achieve the same approximation ratio yield\nTPG = TFG \u2264TNG. (4)\nThe proof of Theorem 3.1 and more elaborations are presented in Appendix B. The achieved results, combined with the over-parameterization theory of PQCs [30], deliver the following two implications. First, when the circuit depth p > C is sufficiently large such that all PQCs with various ansatz designs reach the over-parameterization regime, performing the parameter grouping can effectively decrease the effective dimension deff compared with the PQCs with no-parameter grouping, leading to a faster convergence rate. Second, the over-parameterization of QAOA occurs when the number of trainable parameters exceeds a critical point that is proportionally related to deff.\nThe above two implications indicate the selection of AFG, APG, or ANG is complicated and is both depth- and problem-dependent. In particular, given a specified p, adopting a parameter grouping strategy can simultaneously reduce the number of parameters and the effective dimension, making it difficult to determine whether the QAOA reaches the over-parameterization regime. For instance, in a scenario such that the parameter grouping strategy drastically reduces the number of parameters but only slightly reduces the effective dimension, an over-parameterized QAOA could transform to an under-parameterized QAOA, leading to a degraded convergence as the optimization can be easily stuck in bad local minimal [31, 32]."}, {"title": "4 MG-Net", "content": "The implication of Theorem 3.1 inspires us to devise a method for dynamically generating an appropriate mixer Hamiltonian HM tailored to both the problem G at hand and the specified circuit depth p. For this purpose, we harness the power of deep learning and devise an end-to-end learning framework, dubbed Mixer Generator Network (MG-Net)."}, {"title": "4.1 Framework of MG-Net", "content": "Before presenting the proposed MG-Net, let us first formalize the learning problem towards designing the mixer Hamiltonian HM. To incorporate different Pauli operators and parameter grouping strategies, we extend the definition of an N-qubit mixer Hamiltonian HM in Eqn. (1) to a more generalized form, supporting flexible operators and parameter correlations by substituting the Pauli-X operator with a selection of general Pauli operator and stratifying the N operators into K groups. Mathematically, the refined mixer Hamiltonian yields\nHM = \u2211K j=1 \u03b2j \u2211i\u2208Gj Pi, (5)\nwhere \u03b2j refers to the trainable parameter controlling the j-th group of operators, Pi \u2208 {Xi, Yi}, and Gj contains the indices of operators belonging to the j-th group such that \u222aK j=1Gj = [N] and Gi \u2229 Gj = \u00d8 for \u2200i \u2260 j. In this sense, operators in the same group are correlated with each other, sharing the same parameter. In this way, the design of HM is decoupled into two distinct tasks: determine the parameter groups {Gj}K j=1; identify the appropriate operator types Pi. With the reformulation above, the decoupled tasks can be accomplished by learning a mapping rule f : (G,p) \u2192 (G, P) with G = {Gj}K j=1 and P \u2208 {X, Y}\u2297N referring to the parameter correlation and mixer Hamiltonian.\nDesigning a model to learn f faces two main challenges:\n(C-1) The variety of combinatorial optimization tasks leads to uncertain input formats for the model, which necessitates a universal representation method and retains essential properties of the original data, such as permutation invariance;\n(C-2) The exponential growth of the search space for both parameter correlation and operator types, (i.e., scaling at O(NN) and O(2N), respectively), hurdles the design of an effective learning method. For instance, directing training a learning model in the supervised learning paradigm may require computationally unaffordable training examples to ensure good prediction accuracy.\nWe next present an end-to-end learning framework\u2014Mixer Generator Network (MG-Net), as depicted in Fig. 2, to address the above challenges. Particularly, to address C-1, we devise a problem encoder which transforms each problem G into a unified directed acyclic graph Gc, ensuring a consistent and effective input format. Coupled with the mixer encoder, it maps both the problem and mixer"}, {"title": "4.2 Implementation of MG-Net", "content": "Data encoder in MG-Net. MG-Net exploits three types of data encoder, i.e., the problem encoder, mixer encoder, and depth encoder, which maps the given problem G, the candidate mixer Hamiltonian HM, and the specified depth p to the same hidden feature space. The construction of these encoders is introduced below and the omitted details are deferred to Appendix D.2.\nCost estimator in MG-Net (Stage 1). Recall Stage 1 in Sec. 4.1, the cost estimator takes the encoded problem graph Gc, the encoded mixer Hamiltonian GM, and the encoded circuit depth \u00e6p as inputs, and outputs the prediction of the achievable minimum loss of the corresponding QAOA. Each input is processed by an independent branch respectively: the problem graph branch, the mixer Hamiltonian branch, and the circuit depth branch, as shown in Fig. 3(a). The concatenation of three types of features is subsequently utilized by a multi-layer perceptron (MLP) to output the minimum loss \u0177 that the QAOA ansatz can achieve. Refer to Appendix. D.3 for details.\nMixer generator in MG-Net (Stage 2). The mixer generator in MG-Net takes Gc and xp as input and outputs a targeted mixer Hamiltonian HM. Specifically, the mixer generation is composed of two separate sub-generators: the operator type generator and the parameter grouping generator defined in Eqn. (5), shown in Fig. 3(b). The operator type generator is responsible for generating operator types P, which is conceptualized as a graph node classification task. The parameter grouping generator is responsible for predicting the sets of index groups {Gj}K j=1 with an unspecified K, which is modeled as a link prediction task. Refer to Appendix. D.3 for details."}, {"title": "4.3 Training strategy", "content": "The training process of MG-Net is varied for the first and second stages, under supervised and unsupervised learning paradigms, respectively.\nFirst-stage training. This stage involves constructing a labeled dataset DT r = {(G(i) c , G(i) M , x(i) p ),y(i)}M i=1, where the i-th sample consists of a tuple of features (i.e., the problem description G(i) , the mixer G(i) M , and the circuit depth feature x(i) p ), and the label y(i) representing the minimum cost value achievable by this QAOA instance (i.e., determined by repeatedly executing such a QAOA with varying initial parameters). Once DT r is ready, the cost estimator is optimized by minimizing the loss function\nLce = \u03bbedeLe + \u03bbrLr, (6)"}, {"title": "5 Experiments", "content": "We evaluate the performance of MG-Net by two typical applications of QAOA: weighted Max-Cut and Transverse-field Ising model (TFIM), each of which is elucidated below.\nWeighted Max-Cut. Denote a weighted graph as G = (V, E, W), where V is the set of vertices of graph, E is the set of graph edges, W = {Wij}(i,j)\u2208E is the set of weights assigned to each edge. The problem Hamiltonian for the weighted Max-Cut problem is HMaxCut = 0.5 \u2217 \u2211(i,j)\u2208E Wij ZiZj, where Zi is a Pauli-Z operator acting on the i-th qubit.\nTFIM. Our focus is a class of inhomogeneous TFIMs: HEFIM = \u2212 \u2211(i,j) Jij ZiZj \u2212 h\u2211i Xi, where Jij is the interaction strength between neighboring spins (or qubits) (i, j), and h signifies the strength of a global transverse field applied to each spin. In this model, the interaction strengths Jij can vary between different pairs of spins, adding a layer of complexity to the system."}, {"title": "5.1 Experiment configuration", "content": "Dataset construction.The Max-Cut problem focuses weighted 3-degree regular (w3r) graphs, where the edge weights {Wij} are uniformly sampled from [0, 1]. The TFIM focuses on 1D instances where a qubit i \u2208 [N \u2212 1] has neighbors i\u00b11 (mod N). The strength Jij and h are uniformly sampled from [0.5, 1.5] and [0.1,2] respectively. The training dataset DT r in Sec. 4.3 contains S = 100 instances for both two tasks with size up to N = 64 qubits, while The test dataset DTe contains another 100 problem instances which are different from that of DT r. Refer to Appendix D.1 for details."}, {"title": "5.2 Results", "content": "Cost estimator acts as an accurate performance indication for QAOA. The behavior of the cost estimator on the test dataset with varying circuit depths p and two distinct parameter grouping strategies NG and FG (defined in Theorem 3.1) is recorded in Fig. 4. In Fig. 4(a), we observed a strong correlation between the estimated and minimum cost values, and the correlation strength changes with p and parameter grouping strategy. Particularly, the cost estimator predicts a high likelihood of finding the most accurate solution for QAOA circuits with FG parameters and a depth of p = 92. This prediction aligns with the actual performance of QAOA under these specific conditions.\nWe next focus on the behavior of the cost estimator concerning p as shown in Fig. 4(b). We note that for FG (standard QAOA), the estimated loss decreased monotonically with increasing p, aligning with standard QAOA's behavior. Under the NG scenario (multi-angle QAOA), a transition that QAOA performance begins to decline is observed when the circuit becomes excessively long (p > 42). These results indicate the reliability of the cost estimator as a performance indicator for QAOA and reveal the complexities in QAOA performance under conditions of increased circuit length.\nMixer generator. We next evaluate the performance of the customized mixer Hamiltonian generated by MG-Net. As shown in Fig. 5(a), the number of trainable parameters #P of the generated quantum circuits aligns with the maximum in scenarios where all parameters are non-correlated (labeled as 'NG') for smaller circuit depths p < 20. This alignment indicates that MG-Net effectively enhances the expressibility of the QAOA ansatz for limited-depth circuits without significantly increasing the number of parameters, thereby avoiding potential trainability issues. As p increases, a transition occurs. The growth rate of #P starts to decelerate, reaching a notable transition point at p = 62 for Max-Cut (p = 52 for TFIM). Beyond this threshold, the generated mixer Hamiltonians gradually converge towards the configuration seen in standard QAOA, with fully grouped parameters.\nFig. 5(b) compares the effective dimension deff of quantum circuits achieving high approximation ratio r\u2265 0.995 in standard QAOA and MG-Net driven QAOA. The results show that circuits generated by MG-Net achiever \u2265 0.995 across all values of p, even as low as p = 2, outperforming standard QAOA, which only reaches this level for p > 50 for Max-Cut (p > 20 for TFIM). Besides, the effective dimension of these high-quality quantum circuits gradually decreases with growing p, in line with the convergence analysis in Theorem 3.1. These findings suggest that MG-Net dynamically adjusts quantum circuits in response to changes in circuit depth p, thereby consistently ensuring high performance."}, {"title": "6 Conclusion", "content": "In this study, we analyze QAOA's convergence on varied mixer Hamiltonians, focusing on parameter grouping strategies. We introduce MG-Net for dynamically generating optimal mixer Hamiltonians for various problems and circuit depths. Numerical experiments on Max-Cut and TFIM confirm MG-Net's efficacy in enhancing QAOA's approximation ratio, particularly for large-scale problems, while ensuring low circuit complexity. This research advances the understanding and application of QAOA across various circuit depths."}, {"title": "A Optimization of QAOA", "content": "In this section, we separately elaborate on the elementary notations in quantum computing, the preliminary of Hamiltonian, and the optimization strategy of QAOA.\nBasics of quantum computation. The elementary unit of quantum computation is qubit (or quantum bit), which is the quantum mechanical analog of a classical bit. A qubit is a two-level quantum-mechanical system described by a unit vector in the Hilbert space C2. In Dirac notation, a qubit state is defined as |$) = co |0) + C1 |1) \u2208 C\u00b2 where |0) = [1,0]T and |1) = [0, 1]T specify two unit bases and the coefficients Co, C1 \u2208 C yield |co|2 + |c1|2 = 1. Similarly, the quantum state of n qubits is defined as a unit vector in C2n, i.e., |\u03c8) = \u22112n j=1 Cj |ej), where |ej) \u2208 R2n is the computational basis whose j-th entry is 1 and other entries are 0, and \u22112n j=1 |cj|2 = 1 with cj \u2208 C. Besides Dirac notation, the density matrix can be used to describe more general qubit states. For example, the"}, {"title": "B Proof", "content": "The theoretical analysis of the convergence for symmetric QAOA is based on representation theory. In this regard, we first introduce the foundation of representation theory related to QAOA in Appendix B.1. The proof of Theorem 3.1 is elaborated in Appendix B.2."}, {"title": "B.1 Representation theory in QAOA", "content": "In general, an instance of QAOA is specified by a triplet (\u03c80\u27e9, U(\u03b8), H), where |\u03c80\u27e9 and H refer to the initial state and problem Hamlitonian, and U(\u03b8) refers to the parameterized quantum circuit (ansatz) with the form of\nU(\u03b8) = \u220fP j=1 \u220fK k=1e\u2212i\u03b8j,k Hk, (11)\nwhere \u03b8 = (\u03b811,..., \u03b81K,, \u03b8P1,..., \u0398PK) \u2208 \u0398 \u2286 RPK is trainable parameters, j is the index of layer, and A = {Hk}K k=1 is set of Hermitian traceless operators called an ansatz design. The difference of ansatz originates from the varied O and A. Given O and A, a set of ansatz forms a subgroup of SU (2n) with Us = \u222a\u03b8\u2208O{U(\u03b8) : \u03b8\u2208 \u0398}, which can be characterized by dynamical Lie group with dynamical Lie algebra [29]\nDefinition B.1 (Dynamical Lie algebra and dynamical Lie group, [29]). Given an ansatz design A = {H1,\u2026\u2026, HK}, the dynamical Lie algebra (DLA) g is generated by the repeated nested commutators of elements in A, i.e.,\ng = span (iH1, ..., iHK) Lie, (12)\nwhere (S) Lie denotes the Lie closure, i.e., the set obtained by repeatedly taking the nested commutators of the elements in S. The set of unitaries UA that can be generated by the ansatz design A is determined by its DLA through\nUA = e\u00ba := {eH, H \u2208 g}. (13)\nFurthermore, the algebra structures of the ansatz design A can be characterized through the representation and the subrepresentation of Lie algebra on specific vector space.\nDefinition B.2 (Representation of Lie algebra). Let g be a Lie algebra on a finite-dimensional vector space V. A representation r of g acting on V is a Lie algebra homomorphism r : g \u2192 gl(V), i.e., a linear map satisfying\nr([X,Y]) = [r(X), r(Y)], for all X, Y \u2208 g. (14)\nThe dimension of the representation r is defined by dim(r) = dim(V). If there exists a direct sum decomposition of V into subspaces V = V1 + V2 \u2295\u00b7\u00b7\u00b7\u2295 Vk such that r(g)vj \u2208 Vj for any vj \u2208 Vj"}, {"title": "C Related work", "content": "In this section, we embark on a concise literature review, focusing on conventional algorithms for the Max-Cut problem, some variants of QAOA, and quantum circuit architecture search algorithms. This examination sets the stage for a comparative analysis between these established methods and our proposed model. In summary, our discussion underscores the distinctive strength of our model: its exceptional ability to generalize."}, {"title": "C.1 Conventional algorithms", "content": "Greedy algorithm for Max-Cut problem. The greedy algorithm for solving the Max-Cut problem operates on a simple principle: iteratively makes local, myopic decisions to construct a solution that attempts to maximize the sum of weights of edges between two disjoint subsets of vertices. This algorithm does not assure an optimal solution due to its greedy nature\u2014making decisions based only on immediate benefits without considering future consequences. The detailed procedure is introduced in Alg. 1."}, {"title": "C.2 Variants of QAOA", "content": "The studies of variants of QAOA aim to improve the convergence rate or reduce the computational time by changing the PQCs or the problem Hamiltonian. Current progress has revealed that the performance of QAOA could be improved by employing multi-angle QAOA [17] where the parameters are no-grouped or partially grouped according to the permutation symmetry of problem Hamiltonian [37, 38, 23], utilizing different mixer Hamiltonian obtained by searching from a given Hamiltonian pool [39] or inspired by specific problem [40, 22, 41, 42] and other quantum algorithms [43, 44, 45]. Another type of the variant of QAOA focuses on modifying the problem Hamiltonian, either through eliminating redundant qubits [46] to obtain a reduced problem Hamiltonian, or imposing conditional"}, {"title": "C.3 Quantum circuit architecture search", "content": "In the design of quantum circuits, quantum circuit architecture search methodologies have been developed to autonomously identify optimal quantum circuit architectures [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]. In the following, we delve into several notable approaches and contrast them with our MG-Net model."}, {"title": "D Implementation details of MG-Net", "content": "In this section, we initially outline the methodology for constructing datasets used to train MG-Net across various problem scales. Subsequently, we detail the implementation of the data encoder, illustrated with a specific example."}, {"title": "D.1 Dataset construction", "content": "Operator types. The set of operator types for the mixer Hamiltonian is defined as {X, Y}\u2297N in our experiments. Note that the operator type pool can be flexibly adjusted according to specific problems and hardware. For example, we can introduce two-qubit operators into the operator type pool to further enhance the performance of QAOA, as done in [60]. Considering the exponential growth of the search space in relation to the system size N, we have sampled only a subset from this pool in all our experiments. This approach is adopted to construct the training dataset while minimizing data collection costs.\nConstruction of parameter group pool. A straightforward idea to construct the pool of parameter group is to assume each Xi can be assigned an index j ranging from 1 to N, leading to a pool P = {(j1 \u2208 [N], ..., jn \u2208 [N])} with size NN. However, there exist multiple duplicate candidates in the pool P due to the disorder of the initial parameter pool. For example, for a two-qubit QAOA ansatz, parameter index vectors (1, 2) and (2, 1) make no difference in the optimization of QAOA. Based on these observations, we propose a recursive algorithm Alg. 3 to build a compact pool of parameter groups."}, {"title": "D.2 Data encoder", "content": "Problem encoder. Our problem encoder is rooted on the problem Hamiltonian Hc in Eqn. (1). More precisely, to facilitate a consistent and unified representation for diverse combinatorial problems {G},"}, {"title": "D.3 Network structure", "content": ""}, {"title": "D.3.1 Cost estimator", "content": "In our experimental setup, the intricate architecture of the cost estimator is detailed in Fig. 8. Both the problem and mixer Hamiltonian branches incorporate two layers of graph convolutions, utilizing ReLU activation functions to transform the initial node features from dimensions dc and dm to a unified 128-dimensional space. Subsequently, the three extracted features\u2014xc, XM, and xp\u2500are concatenated to facilitate the prediction of the attainable minimum cost \u0177 for a given QAOA instance through an MLP layer."}, {"title": "D.3.2 Mixer generator", "content": "Inspired by [63] which encodes a quantum circuit as a graph, the mixer generation is composed of two separate sub-generators: the operator type generator and the parameter grouping generator, which are respectively responsible for graph node and link prediction."}, {"title": "D.4 Experiment settings", "content": "Hardware platform. All QAOA circuits are implemented by PennyLane [64] and run on classical device with Intel(R) Xeon(R) Gold 6267C CPU @ 2.60GHz and 128 GB memory. MG-Net is implemented by Pytorch [65] and is trained on a single NVIDIA GeForce RT 2080Ti with 12G graphics memory.\nHyper-parameters. The hyper-parameters of optimizing MG-Net and QAOA circuit are listed in Tab. 2."}, {"title": "E More numerical results", "content": "In this section, we initially show the results of comparing the approximation ratio achieved by different methods for TFIM. Then we examine how the approximation ratio achieved by various methods varies with different circuit depths p. Subsequently, we explore the convergence behavior of the QAOA when enhanced by our approach."}, {"title": "E.1 Performance comparison among different methods for TFIM", "content": "In evaluating the effectiveness of our proposed method for solving TFIM, we conducted a comparative analysis against QAOA, ADAPT-QAOA, and multi-angle QAOA (ma-QAOA). Our analysis, based on the average results from 100 graphs in our test dataset, is summarized in Tab. 3. The findings reveal that our method consistently outperforms other techniques in achieving a higher approximation ratio for TFIM, particularly in larger-scale problems."}, {"title": "E.2 Experiments on asymmetric graphs and 2D-TFIM", "content": "We conducted additional experiments on the asymmetric graphs of 6 nodes and 2D lattice models of 6 spins. Their topological structure is shown in Fig. 10."}, {"title": "E.3 Approximation ratio with respect to p", "content": "In small-scale quantum systems, achieving the criteria set in Theorem 3.1 is more straightforward by increasing circuit depth p beyond the threshold C. We analyze the approximation ratios achieved by 6-qubit QAOA circuits for Max-Cut and TFIM within the p range of 2 to 82. Figure 11 illustrates that at lower p values, our method consistently records the highest approximation ratio r, clearly outperforming both standard QAOA and ma-QAOA. As p increases from 2 to 62, standard QAOA and ma-QAOA exhibit a rise in r, eventually matching our method's performance. However, a further increase in p leads to a performance decline in ma-QAOA, where the detrimental impact of its numerous trainable parameters on convergence outweighs the benefits of enhanced expressibility. In contrast, our method maintains stable performance, continually achieving the highest r. These findings confirm our method's superiority in optimizing approximation ratios across various circuit depths compared to other approaches."}, {"title": "E.4 Convergence of QAOA with various mixer Hamiltonian", "content": "In our investigation, we conducted an analysis on a randomly selected 16-qubit Max-Cut and TFIM problem from our test dataset, scrutinizing the convergence patterns of QAOA, ma-QAOA, and our method across various configurations (p = 4, 6, 8, 10). Illustrated in Fig. 12, our methodology not only achieves a notably lower loss value within a reduced number of iterations in comparison to both QAOA and ma-QAOA but also consistently outperforms in terms of the final loss value attained by the end of the optimization. Specifically, at p = 10, our approach necessitates merely 2"}]}