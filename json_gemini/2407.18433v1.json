{"title": "Investigating the Privacy Risk of Using Robot Vacuum Cleaners in Smart Environments", "authors": ["Benjamin Ulsm\u00e5g", "Jia-Chun Lin", "Ming-Chang Lee"], "abstract": "Robot vacuum cleaners have become increasingly popular and are widely used in various smart environments. To improve user convenience, manufacturers also introduced smartphone applications that enable users to customize cleaning settings or access information about their robot vacuum cleaners. While this integration enhances the interaction between users and their robot vacuum cleaners, it results in potential privacy concerns because users' personal information may be exposed. To address these concerns, end-to-end encryption is implemented between the application, cloud service, and robot vacuum cleaners to secure the exchanged information. Nevertheless, network header metadata remains unencrypted and it is still vulnerable to network eavesdropping. In this paper, we investigate the potential risk of private information exposure through such metadata. A popular robot vacuum cleaner was deployed in a real smart environment where passive network eavesdropping was conducted during several selected cleaning events. Our extensive analysis, based on Association Rule Learning, demonstrates that it is feasible to identify certain events using only the captured Internet traffic metadata, thereby potentially exposing private user information and raising privacy concerns.", "sections": [{"title": "Introduction", "content": "The use of Internet of Things (IoT) devices and the adoption of smart environments have grown in recent years and are expected to continue expanding [9]. Robot vacuum cleaners, smart lighting, intelligent door locks, and air quality sensors are now common devices in a smart environment. These devices aim to simplify daily tasks and routines for users by automating mundane activities, enhancing comfort, and improving the overall quality of life through increased efficiency and personalized settings.\nRobot vacuum cleaners, in particular, have gained popularity in smart environments [11]. They offer the capability to autonomously navigate and clean floors, learning and adapting to the layout of the space over time. Users can personalize their operation through settings and preferences, such as scheduling cleanings or indicating no-go zones, which are often managed through intuitive smartphone applications. Furthermore, the advanced integration of these vacuum cleaners with an ecosystem of other IoT devices in the home significantly enriches their functionality. For example, a robot vacuum cleaner can be programmed to commence its cleaning cycle when connected door locks indicate the user has left the house. Additionally, these smart devices can communicate with each other to optimize energy use and cleaning schedules based on daily usage patterns and real-time environmental data. For instance, the vacuum cleaner could delay its start time if the smart lighting system detects continued activity in a particular area, or it could prioritize cleaning in high-traffic zones during periods of minimal activity, thereby enhancing both efficiency and convenience.\nWhile researchers have investigated the security of robot vacuum cleaners through methods such as penetration tests, vulnerability assessments, and active network eavesdropping, the extent of passive eavesdropping in smart environments where these devices are deployed has not been extensively explored. Passive eavesdropping involves the silent monitoring of data traffic between the vacuum cleaners, their cloud services, and other interconnected smart home devices. This method could reveal how these devices manage sensitive data, their interactions within a smart home network, and the potential exposure of user habits or private information.\nTherefore, the objective of this paper is to explore the risk of private information exposure in a smart environment through the analysis of network traffic metadata associated with a robot vacuum cleaner. Our approach adopts the perspective of an attacker, utilizing passive eavesdropping without modifying or interacting with the data transmission. We selected a robot vacuum cleaner from a well-known brand, and deployed it in a real smart environment. Several cleaning events were chosen and individually triggered within this environment multiple times. The corresponding network traffic was collected, and a systematic analysis was conducted to identify unique traffic patterns and signatures associated with each event using Association Rule Learning [4], which is a rule-based machine learning method used to discover interesting relationships and patterns between variables in datasets.\nOur analysis revealed that each event could be identified using captured network traffic metadata, specifically through the first few packet sizes extracted from the respective filtered traffic files associated with the event. We attempted to identify both a strict and a less strict signature for each event, and then evaluated the effectiveness of each signature in identifying events through a series of tests in a completely different smart environment. Our findings suggest that it is possible to identify certain events using these signatures, thereby potentially uncovering user habits or routines.\nThe rest of the paper is organized as follows: Section 2 presents related work. Section 3 describes the methodology used for our investigation. Section 4 details the analysis and identified signature(s) for each event, and Section 5 discusses"}, {"title": "Related Work", "content": "The proliferation of IoT devices in smart environments has raised security concerns. According to Alferidah and Jhanjhi in [5] and Swessi and Idoudi in [18], these issues present across various layers of IoT systems, including hardware, software, and communication. Additionally, the nature of data sharing in smart environments introduces privacy concerns. Gu et al. in [12] conducted a study focused on the analysis of wireless Zigbee traffic within the context of a smart office environment. By passively eavesdropping on wireless traffic, they identified a total of 35 distinct events occurring within the office's smart infrastructure. In addition, they successfully extracted and uncovered private information related to office routines from the traffic data. Alyami et al. in [6] proposed a method designed to capture out-of-network encrypted Wi-Fi traffic. Their method was specifically aimed at distinguishing between different IoT devices within a smart environment. Building on similar concerns regarding security and device identification, Acar et al. in [3] employed machine learning techniques to further refine the process of identifying IoT devices and cataloging their specific actions. Their research extended across a variety of communication protocols, including Wi-Fi, Zigbee, and Bluetooth, which are commonly used by IoT devices for connectivity. The authors also recommended countermeasures to protect these devices against passive eavesdropping attacks.\nSami et al. [17] conducted research on the eavesdropping of private information using laser sensor data from a robot vacuum cleaner. They extracted this sensor data via a side-channel attack targeting the vacuum cleaner. Their study demonstrated the ability to sense object vibrations, such as those in pager bags, and even detect spoken words within the environment. Furthermore, by capturing vibrations from objects like television or music speakers, they could identify specific songs and TV shows with high accuracy. Based on their findings, Sami et al. recommended that manufacturers implement security measures to prevent the extraction of high-precision private data from these devices. Ullrich et al. [19] assessed the communication and security aspects concerning the cloud service and application of a robot vacuum cleaner produced by Neato. The authors identified significant privacy risks due to weak cryptography and shared private keys among devices. The researchers were able to find out personal details about the users from the data, such as their daily schedules, the size of their homes, whether they have pets, and how many people live in their households. Sundstr\u00f6m and Nilsson [10] conducted an assessment of security implementations and vulnerabilities associated with the Roborock S7 robot vacuum cleaner, excluding the cloud service security. Their findings indicated that the vacuum cleaner was reasonably secure, but they identified a vulnerability related to Dynamic Host Configuration Protocol (DHCP) starvation attacks from rogue devices on the"}, {"title": "Methodology", "content": "To investigate the potential for private information exposure via robot vacuum cleaners, we detail our methodology in this section."}, {"title": "Target robot vacuum cleaner selection", "content": "To choose a robot vacuum cleaner for our study, we conducted a survey considering different brands, including iRobot, Roborock, Neatsvor, Ecovacs, and iLife. Each of them offers a variety of models to meet diverse customers' needs. We selected the iRobot Roomba i7, as shown in Fig. 1, as our target in this study. This decision was influenced by its popularity [1,8] and the recommendation for this model in several review articles [13, 15], which highlighted its diverse features and reasonable price at the time of our research in 2023. The analysis results presented in this paper might also be applicable to other vacuum cleaners that share overlapping functionalities with the Roomba i7."}, {"title": "Smart environment setup", "content": "We conducted our study in a real smart environment located in Oslo, Norway. The layout of this environment is shown in Fig. 2. In this environment, we deployed the chosen robot vacuum cleaner, the iRobot Roomba i7, and reset it to its factory default settings. The Oslo environment was equipped with Internet access provided by an external Internet Service Provider (ISP). This setup enabled the robot vacuum cleaner to access to iRobot cloud services and allowed the user to control the device via the iRobot application. To facilitate traffic eavesdropping, a wired local area network (LAN) was established using a LAN switch, and an additional access point (AP) was installed. This AP utilized Network Address Translation (NAT) to consolidate all Wi-Fi traffic from the vacuum cleaner into a single IP address within the smart environment's LAN. This setup simulates a Wide Area Network (WAN) interface, presenting all traffic from the vacuum cleaner as originating from a single address in the smart environment. The AP then directed the traffic to the ISP router through the LAN switch. Simultaneously, the traffic moving through the LAN switch was replicated and forwarded to a Raspberry Pi 3B+ device, which ran the Kali Linux operating system and served as a traffic capturing platform. Several network traffic analysis and capturing tools are included in the Kali Linux distribution. A separate Wi-Fi adapter, the TP-LINK TL-WN722N V2/V3, was acquired and configured in monitor mode to serve as the monitoring wireless NIC. The network infrastructure depicted in Fig. 3 illustrates how the eavesdropping process was carried out, and Table 1 lists all the devices used in this study."}, {"title": "Event selection", "content": "We selected six common events with the aim of identifying a unique signature for each, based on their frequency of occurrence and potential security implications. This approach allows us to thoroughly analyze how typical user interactions with robot vacuum cleaners could inadvertently reveal sensitive user information. These six events are listed below.\n1. Automated cleaning: This event is triggered through integration with third-party IoT systems or other smart devices. For example, cleaning can be automatically initiated when a user's phone exits their house. Detecting this event could indicate whether the user is away from home, potentially exposing their routines or enabling malicious tracking.\n2. App-triggered cleaning: This event is initiated when a user starts cleaning using their iRobot smartphone application. The event finishes when a \"finished cleaning\" notification is received from the application. Attributing this event could reveal details about the user's smartphone usage and daily routines\n3. Scheduled cleaning: This event is initiated based on a user-defined schedule that specifies the cleaning area and start time. Identifying this event could reveal the user's routines or infer whether they are at home during the scheduled time, as this type of cleaning is often planned for times when individuals are typically away from home. This data could potentially be used to ascertain patterns in a user's daily activities, offering insights into their lifestyle and potentially compromising their privacy.\n4. Physical-triggered cleaning: This event occurs when the user presses the \"Clean\" button on the iRobot vacuum cleaner, which triggers the device to perform a full-area cleaning job. If the environment is unfamiliar, this also initiates a mapping process. Detecting this event signals the user's presence within the smart environment, indicating active interaction with the device.\n5. App engagement: This event occurs when the user interacts with the iRobot application on their smartphone. Detecting this event reveals user engagement with the iRobot application.\n6. Bin removal: This event occurs when the vacuum cleaner's bin is removed, usually after a cleaning cycle or when a notification is sent to the user. It indicates the user's presence alongside the cleaner, potentially disclosing their presence within the smart environment.\nIn the following sections, we will detail how we collect network traffic for each of these six events and analyze the traffic to identify possible signatures for event identification."}, {"title": "Traffic capturing", "content": "To capture traffic for each event, we executed two TShark processes on the Raspberry Pi device within the Oslo environment. One process captured WAN traffic on the Ethernet NIC (eth0), and the other process captured WLAN traffic on the Wireless NIC (wlan1). Note that TShark is the command-line interface version of Wireshark [2,7], a widely used network protocol analyzer known for its extensive features in capturing and analyzing network traffic.\nBefore triggering each selected event, we operated the vacuum cleaner in the Oslo environment for one month, ensuring that the traffic we collect was generated during the vacuum cleaner's operational state rather than during the setup phase. Afterwards, we conducted continuous traffic capture for 14 days, during which there was no physical or application interaction. This traffic is referred to as standby traffic in this paper. In our analysis of the standby traffic, we found that approximately 49.2% of the network traffic was related to the Domain Name System (DNS) protocol. Additionally, 26.2% of the traffic was the Transmission Control protocol (TCP), with the majority being the TLS (Transport Layer Security) protocol [16] used by the iRobot Roomba i7 for end-to-end encryption with the cloud server. The last identified protocol was the Address Resolution Protocol (ARP). We filtered out all DNS traffic generated by the AP and TCP-keep-alive traffic since they were irrelevant. Similarly, traffic related to ARP, Dynamic Host Configuration Protocol (DHCP) and Network Time Protocol (NTP) was also excluded for the same reason. After applying this filtering, the total number of packets for the standby traffic dramatically reduced from 5,052,284 to 4,010 (i.e., only 0.8% of the traffic remained).\nFor each of the six selected events, we triggered the event, recorded the corresponding traffic, and stored the traffic in a single file. This process was repeated 10 times for each event to ensure a sufficient dataset for further analysis."}, {"title": "Traffic analysis and signature identification", "content": "To analyze network traffic and identify potential signatures for each event, we adopted a systematic approach, consisting of two phases: Protocol Identification and Signature Identification.\nIn the first phase, all traffic files associated to each event were imported into Wireshark and analyzed with the supported protocol hierarchy tool, which displays the various protocols and their distributions across the files. We then analyzed the traffic for each identified protocol and filtered out irrelevant traffic by using the same filtering that we used for the standby traffic. We found that all event-specific packets were larger than 97 bytes.\nSubsequently, in the second phase, we analyzed the remaining traffic to identify unique signatures for event identification. This involved searching for unique packets for each event, calculating the total number of packets for each event, extracting the first few packet sizes as a sequence from each event, and discovering association between different packet sizes within the sequence using Association Rule Learning (ARL) [4], which is a rule-based machine learning method used to identify common associations or relationships among a set of items in a dataset. It is widely employed to discover which items tend to co-occur, as demonstrated in [14]. In this method, the rule X \u2192 Y implies that whenever X occurs, Y is likely to occur as well. The condition that the rule holds with minSupport s means that the rule is considered significant if at least s \u00b7 100% of the transactions in the dataset contain both X and Y, 0 \u2264 s \u2264 1. Note that minSupport represents the minimum frequency or proportion that a set of items (or an association rule) must appear in the dataset to be considered significant. For example, if s = 0.9 (or 90%), a rule must appear in at least 90% of all transactions to meet the minimum support criterion. The primary purpose of setting a minSupport threshold is to reduce the number of rules generated by eliminating those that are too rare. This not only focuses on potentially valuable insights but also significantly reduces computational complexity by limiting the number of rules that need evaluation."}, {"title": "Analysis results and identified signatures", "content": "In this section, we present our analysis result and identified signature(s) for each event individually. Additionally, we examine all identified signatures across all events to determine a unique signature for each event."}, {"title": "Automated cleaning", "content": "Our analysis of protocol distribution revealed that the following two DNS response packets appeared in all ten automated-cleaning traffic files within the Oslo environment. This consistency suggests that these two packets could serve as a promising signature for identifying the automated cleaning event.\nA DNS response for \"0550315.ingest.sentry.io\".\nA DNS response for \"s3.amazonaws.com\".\nIn addition, we evaluated whether the total number of packets during the automated cleaning event could serve as a signature or not. However, the average total number of packets for the ten automated cleanings was 2425.4 packets, with a standard deviation of 767.27 packets. Due to the high standard deviation, the total number of packets should not be considered as a signature.\nFinally, we extracted the first 20 packet sizes from each of the ten filtered automated-cleaning traffic files. We then employed ARL to identify associated packet sizes. In order to discover strong associations rather than explore a wide range of potential relationships, we configured ARL with minSupport at 0.99, minConfidence at 1, and verbosity at 1. Note that minConfidence sets the threshold for how often a rule must be true, and verbosity controls the detail level of the output generated by the analysis.\nFig. 4 displays the analysis results, with each row representing the first 20 packet sizes of an automated cleaning event after all irrelevant traffic was removed. The labels 'D' and 'S' respectively denote that the iRobot Roomba is the destination and source of the packet. The analysis reveals a consistent pattern throughout the ten automated cleaning events: six packet sizes [S175, S176, S179, S446, D1100, D1106] were always found together in every automated cleaning event, regardless of their sequence or frequency of occurrence. Therefore, we considered these six packet sizes as a definitive signature for identifying the automated cleaning event.\nFurthermore, in addition to the above strict signature, we attempted to find another smaller subset of packet sizes that might serve as an alternative signature. However, all the results generated by ARL yielded the same set of the six packet sizes, so no less strict signature was found."}, {"title": "App-triggered cleaning", "content": "App-triggered cleaning is initiated when the user needs additional cleaning outside of the pre-scheduled one, which could happen when the user is away from home. Identification of this event can therefore expose private information about user location.\nSimilar to our analysis of the automated cleaning event, we discovered a consistent occurrence of the two identical DNS response packets in each traffic file associated with the App-triggered cleaning event. This consistency suggests a potential signature for identifying the App-triggered cleaning event. However, we found that the total number of packets of an App-triggered cleaning event was not a reliable indicator for event identification, given the high standard deviation observed.\nOur analysis of the occurrence of packet sizes demonstrated potential. We employed ARL on the first 20 packet sizes extracted from each of the ten filtered App-triggered cleaning events, using the same parameter setting as those used for the automated cleaning (i.e., minSupport=0.99, minConfidence=1, and verbosity=1). The analysis shows that three specific packet sizes [S176, S179, D1239] consistently appear together in all the ten events, as illustrated in Fig. 5, independence of their order or how often they occur. Hence, these three packet sizes are considered as a promising signature for the App-triggered cleaning event. In addition, according to the analysis results from ARL, we found that the following three sets of packet sizes could serve as alternative, less strict signatures.\n[S176, D1239]\n[S179, D1239]\n[S176, S179]\nHowever, we omitted the last rule because both S176 and S179 were already included in the signature identified for the automated cleaning, meaning that they cannot uniquely distinguish the App-triggered cleaning event."}, {"title": "Scheduled cleaning", "content": "Recall that the scheduled cleaning event is initiated based on a user-defined schedule, specifying both the cleaning area and start time. Our protocol distribution analysis for the scheduled cleaning event reveals a similarity to those for the automated cleaning and App-triggered cleaning events. We observed the same two DNS responses across all 10 scheduled cleaning events within the Oslo environment.\nFig. 6 displays the first 20 packet sizes extracted from each of the ten filtered traffic files related to the scheduled cleaning event. The analysis results from ARL reveal that six specific packet sizes [S176, S179, S253, S448, D626, D1108] are found consistently present across all the ten files, regardless of their sequence or frequency of occurrence. Therefore, we consider this set of packet sizes as a signature for identifying the scheduled cleaning event. It is important to note that we were unable to identify another smaller set of packet sizes as an alternative signature because ARL consistently grouped these six packet sizes together."}, {"title": "Physical-triggered cleaning", "content": "When the ten physical-triggered cleaning events were individually performed in the Oslo environment, we also observed the same two DNS responses across all the events. Furthermore, the ARL analysis on the first 20 packet sizes extracted from each filtered traffic file related to the physical-triggered cleaning event shows that nine specific packet sizes [S175, S176, S179, D626, D903, S253, S290, S369, D1106] were consistently observed together (please see Fig. 7). Hence, we consider this set as a promising signature for identification of the physical-triggered cleaning event. However, a less strict signature could not be established due to the strong association among these nine packet sizes."}, {"title": "App engagement", "content": "Recall that an App engagement event is initiated when the user opens and engages with the iRobot application. For our analysis, we activated and interacted with the iRobot application, without focusing on any specific action. Various actions were executed, including changing the scheduled cleaning time, viewing the dashboard, and adjusting settings, etc.\nThe protocol distribution analysis for this event revealed the presence of only TCP packets; no DNS packets were observed during the event. The requested information pulled from the iRobot Roomba during application engagement was initiated from a2uowfjvhio0fa.iot.useast-1.amazonaws.com.\nFig. 8 displays the first 20 packet sizes extracted from each of the ten filtered traffic files related to the App engagement event. Five specific packet sizes [S140, S174, S176, D333, D1514] were consistently observed together in all the ten files, regardless of their sequence or frequency of occurrence. Therefore, this set of packet sizes is considered a signature for recognizing the App engagement event. We also found another less strict signature, consisting of four specific packet sizes [S140, S174, S176, D333]. Hence, this subset is considered as an alternative signature for the App engagement event."}, {"title": "Bin removal", "content": "Recall that the bin removal event occurs when the physical bin eject button on the iRobot Roomba i7 is pressed, thereby releasing the bin. This event was individually executed 10 times by us in the Oslo environment. Our observations revealed that only few packets were generated per event. However, it exhibited a high standard deviation. As a result, the total number of packets captured during the event cannot serve as a reliable signature for identifying the bin removal event.\nFollowing our methodology, we extracted the first few packet sizes from each filtered traffic file and employed ARL to find out associated rules. The results reveal that two specific packet sizes [S186, D410] were consistently observed across all the 10 files, as illustrated in Fig. 9. Hence, these two sizes are considered as a signature for recognizing the bin removal event. Given that the signature consists only two packet sizes, we did not pursue any less strict signatures for this event."}, {"title": "Summary", "content": "Based on all the analysis results mentioned above, we confirm that the following two DNS responses were consistently found in all cleaning events, including automated cleaning, App-triggered cleaning, scheduled cleaning, and physical-triggered cleaning events. However, these responses did not appear in other events, such as the App engagement and Bin removal events. Therefore, while these two DNS responses can be used to identify if a cleaning event occurs or not, they cannot be used to identify each individual cleaning event."}, {"title": "Evaluation", "content": "To evaluate the effectiveness of each identified signature in event identification, we conducted a series of tests in another smart environment located in Drammen, Norway. As illustrated in Fig. 10, this environment has a different size and layout as compared with the Oslo environment. Similar to the Oslo environment, we established a wired and wireless network infrastructure, Internet connection, set up the Raspberry Pi device for traffic eavesdropping, etc. This setup allowed us to conduct traffic eavesdropping from this environment.\nBefore deploying the iRobot Roomba i7 to the Drammen environment, we also reset it to its factory default settings. Following the same methodology presented in Section 3, we triggered each of the six events in the Drammen environment, recorded the corresponding network traffic in a single file, and applied the same filter that we used in the Oslo environment to remove any irrelevant traffic. This procedure was individually carried out 10 times for each event in the Drammen environment. Therefore, there are a total of 60 filtered files associated with the six events.\nFig. 11 depicts the first 20 packet sizes extracted from each of these 60 event traffic files after irrelevant traffic has been removed. Therefore, there are 60 lines in this figure. For each signature listed in Table 2, we evaluated how many corresponding events shown in Fig. 11 this signature can accurately recognize. This number is referred to as true positive (TP) in this paper. For example, if a signature identified for the scheduled cleaning event in the Oslo environment, denoted as S, accurately identifies 8 out of 10 actual scheduled cleaning events in the Drammen environment, then the TP count for signature S is 8. In addition, we evaluated how many matching events in the Drammen environment were not accurately identified by each signature, referred to as false negative (FN). Following the previous example, the FN count for signature S is 2. Furthermore, we assess how many mismatching events in the Drammen environment were identified by the signature. This number is referred to as false positive (FP). For instance, if S mistakenly identifies 5 events in the Drammen environment as scheduled cleaning events when they actually are not, then the FP count for S is 5.\nFor each signature, we calculated three widely recognized metrics: Precision, Recall, and F1-score, using the equations below.\nP = \\frac{TP}{TP+FP} (1)\nR = \\frac{TP}{TP+FN} (2)\nF1 = 2 \\cdot \\frac{PR}{P+R} (3)\nPrecision (P for short) measures the accuracy of the positive predictions made by the signature. Recall (R for short) measures the ability of the signature to identify all relevant instances accurately, and Fl-score (F1 for short) provides a balanced measure between precision and recall.\nTable 3 presents the TP, FP, and FN results of each signature, whereas Table 4 lists the event identification results of each signature. The results indicate that the signature [S176, S179, S253, S448, D626, D1108] achieves an Fl-score of 1, meaning that it successfully identified all the 10 scheduled cleaning events in the Drammen environment without any false identifications. Therefore, this signature represents a reliable identifier for the scheduled cleaning event. Similarly, the signature [S140, S174, S176, D333] also achieves the highest F1-score of 1, making it reliable for identifying the App engagement event. Additionally, by using the signature [S186, D410], we were able to correctly recognize 7 out of the 10 bin removal events in the Drammen environment without introducing any false positive, resulting in an F1-score of 0.824.\nNotably, five out of the nine identified signatures failed to accurately recognize their associated events within the Drammen environment, yielding a Precision of 0 and a recall of 0. Upon closer inspection, we observed that three signatures are associated with the App-triggered cleaning event, indicating that none of these signatures can serve as a reliable indicator for recognizing the app-triggered cleaning event. Furthermore, we also found that the only signature identified for the physical-triggered cleaning could not recognize any physical-triggered cleaning event occurring in the Drammen environment, making it an unreliable indicator. According to the analysis results, although the App engagement event could not be identified using the strict signature [S140, S174, S176, D333, D1514], it was successfully identified using the less strict signature [S140, S174, S176, D333], achieving an Fl-score of 1 without introducing any false positives or false negatives.\nThe implications of the above results suggest that if any malicious individuals are aware of these reliable signatures, they could determine when a household schedules a cleaning, when a user interacts with their iRobot application on their smartphones, and whether the user is present in their homes to remove the bin from their iRobot Roomba i7. This information enables malicious individuals to infer personal habits, routines, and even times when the user might be away from home, which could then be exploited for harmful intentions."}, {"title": "Conclusions and Future Work", "content": "In this paper, we have investigated the privacy risk associated with the use of robot vacuum cleaners in smart environments, particularly through passive network eavesdropping. Despite the implementation of end-to-end encryption by manufacturers to protect user data, our findings demonstrate that unencrypted network header metadata can still expose private and sensitive information. By deploying a popular robot vacuum cleaner model in a real smart environments, conducting passive eavesdropping, and analyzing traffic through a systematic approach, we were able to identify unique signatures for several cleaning events.\nOur experiment conducted in a completely different smart environment demonstrated that certain identified signatures can accurately recognize events such as scheduled cleaning, application engagement, and bin removal. This capability implies that malicious individuals could exploit these signatures to further infer user habits and routines. Our study highlights the urgent need for enhanced measures to protect user privacy and advocates for a comprehensive approach to secure robot vacuum cleaners.\nIn our future work, we plan to develop an automated tool to streamline the capturing, processing, and analysis of network traffic using various machine learning methods. This tool will facilitate our privacy studies on robot vacuum cleaners across different brands and various IoT devices, enabling us to comprehensively assess and address privacy concerns in the rapidly evolving landscape of smart environments."}]}