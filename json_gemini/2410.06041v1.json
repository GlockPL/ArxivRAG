{"title": "Block Induced Signature Generative Adversarial Network (BISGAN): Signature Spoofing\nUsing GANs and Their Evaluation", "authors": ["Haadia Amjada", "Kilian Goellera", "Steffen Seitza", "Carsten Knolla", "Naseer Bajwabc", "Muhammad Imran Malikbc", "Ronald Tetzlaffa"], "abstract": "Deep learning is actively being used in biometrics to develop efficient identification and verification systems. Handwritten sig-natures are a common subset of biometric data for authentication purposes. Generative adversarial networks (GANs) learn fromoriginal and forged signatures to generate forged signatures. While most GAN techniques create a strong signature verifier, whichis the discriminator, there is a need to focus more on the quality of forgeries generated by the generator model. This work focuseson creating a generator that produces forged samples that achieve a benchmark in spoofing signature verification systems. We useCycleGANs infused with Inception model-like blocks with attention heads as the generator and a variation of the SigCNN modelas the base Discriminator. We train our model with a new technique that results in 80% to 100% success in signature spoofing.Additionally, we create a custom evaluation technique to act as a goodness measure of the generated forgeries. Our work advocatesgenerator-focused GAN architectures for spoofing data quality that aid in a better understanding of biometric data generation andevaluation.", "sections": [{"title": "1. Introduction", "content": "Biometrics are measurements of the body and computations\nof human traits. Machine learning techniques commonly em-ploy biometric authentication as a method of access control andidentification. It is also used to identify people or groups whoare under observation, serving as a means of surveillance. To\nbe made use of, biometric data needs to be collectable andsince it relates to human characteristics, it also needs to beunique and ever-lasting \u2013 not subject to change. A behavioural\ntrait utilised in automatic user verification systems within thebiometric structures is the handwritten signature. Signature istaken as a non-invasive and safer option by several users sinceit is a common part of everyday life [19]. The unique char-acteristics of an individual's signature can be used for identi-fication or verification purposes. Signature biometric data istypically captured using a digitising tablet or other electronicdevices that record the pressure, speed, and trajectory of the sig-nature. To collect handwritten signatures, researchers conductfocus groups or crowdsourcing events. This data is collected inthe form of pairs, original and forged signatures [7].\nDeep learning methods can learn high-level features fromraw biometric data, such as images or audio recordings. Deeplearning allows extracting relevant information from biomet-ric data without requiring manual feature engineering. For thisreason, deep learning based verification systems have becomewidely popular offering more accuracy and robustness [15].\nHowever, even with these strong verification systems, an at-tacker may be able to bypass the security check with skilledreplications. One of the ways an attacker might bypass a bio-metric identity verification system is signature spoofing.\nSignature spoofing is the deliberate creation of a deceptive\nsignature by exploiting encryption vulnerabilities in the verifi-cation process, constituting a criminal act when employed forfraudulent purposes [6]. This involves either signing in some-one else's name or tampering with a document to deceive orcommit fraud. Forgeries include blind, trace-over, and skilledtypes. Highly accurate replicas can be detected by advancedverification algorithms, which analyse signature details for au-thenticity. Skilled forgeries imitating the original signatureclosely raise suspicion due to the absence of natural variationand typical imperfections. Verification systems use techniqueslike analysing stroke endpoints, intersections, infliction points,\nand curvature to detect such forgeries [11].\nSignature verification assesses if a person's signature is au-thentic. To use signature biometrics for identification or veri-fication purposes, the signature data is compared against pre-viously stored signature samples. The comparison is typi-cally done using pattern recognition algorithms that analyze theunique features of the signature, such as the shape of the let-ters, the spacing between the letters, and the overall rhythm andflow of the signature. Signature verification encompasses sev-eral techniques. First is the descriptive language which drawscomparisons between the suspicious and a reference signatureusing hieroglyphic elements that represent all different kinds ofsignatures. Secondly, geometrical analysis is a common tech-nique used in signature verification to compare the geometric"}, {"title": "2. Motivation", "content": "For our research motivation, the following constitute re-search gaps:\n\u2022 Work on signature data using GANs has been focused on\nbetter discriminators or data augmentation. The need for\ngenerator-focused research is created to emphasise a better\ngeneration of forgeries.\n\u2022 Since forgeries of a signature can not be too similar or dis-similar to the original sample, the generated images need acertain degree of closeness to the original image. This fact\nis not considered while using GANs for forgery generation\nand hence creates a research gap."}, {"title": "3. Literature Review", "content": "This section comprises the literature review of various tech-niques approaching signature verification and generation. Wehave focused heavily on research works in adversarial net-works, GANs, and biometric data, especially signature data."}, {"title": "3.1. Adversarial Networks for Signature Generation", "content": "Handwritten signature verification is a challenging problemin the field of biometrics and several studies have been con-ducted to improve its performance. To strengthen verificationsystems, adversarial networks have been used to generatenew forgeries to adversarially attack the system. In the researchwork of Huan Li et al. [14], a novel adversarial variation net-work (AVN) model is proposed that actively varies existing dataand generates new data to mine effective features for better sig-nature verification performance. The AVN model consists ofthree modules - extractor, discriminator, and variator - that worktogether in an adversarial way with a min-max loss function.\nThe authors tested the proposed method on four challengingsignature datasets of different languages. On CIDAR, for ex-ample, they achieve 3.77 EER.\nIn another paper, authors Haoyang Li et al. [13] propose anew method for attacking a handwritten signature verificationsystem using region-restricted adversarial perturbations. Theauthors begin by noting that many signature verification sys-tems are vulnerable to adversarial attacks, which can cause thesystem to misclassify genuine signatures as forgeries. To ad-dress this issue, the authors propose a new attack strategy thatinvolves adding adversarial perturbations to specific regions ofthe signature while leaving other regions unchanged. The pro-posed method is designed to be a black-box attack meaning thatit does not require knowledge of the inner workings of the targetsignature verification system."}, {"title": "3.2. Generative Adversarial Networks for Signature Spoofing", "content": "Signature spoofing aims to fail verification systems in theirtask of classifying genuine and forged signatures by passinghigh-quality skilled forgeries that get mistaken for original sig-natures. Some work has been done to achieve this task usingGANS.\nZhang et al. [33] proposed a multi-phase system for offlinesignature verification using deep convolutional generative ad-versarial networks (DCGANs). The authors extracted local andglobal features from signature images using a pre-trained convolutional neural network (CNN) and used a DCGAN to gener-ate multiple plausible variants of the signature. They combinedthe extracted features from the original signature image with thefeatures extracted from the generated variants and used themfor signature verification with an SVM classifier. The authors"}, {"title": "4. Methodology", "content": "To achieve high-quality generated forgeries, we create an ar-chitecture based on CycleGAN model, shown in Figure 1, withcareful preprocessing and evaluation that suits our end goal."}, {"title": "4.1. Dataset", "content": "Many datasets are used for signature verification. Thesedatasets contain a certain number of original signatures and acertain number of forgeries of the same user. The total imagesin the dataset then amount to the number of users into the sumof original and forged signatures. For our research, we haveconsidered only English-based signatures and datasets that had"}, {"title": "4.2. Generator", "content": "Our architecture is based on CycleGAN architecture [34].\nOne of the primary advantages of CycleGAN is its ability toperform unsupervised image translation, meaning it can learn toconvert images from one domain to another without the need forpaired training data. This flexibility makes CycleGAN particu-larly valuable when paired datasets are scarce or difficult to ob-tain. This ability of CycleGAN makes it suitable for our work.\nMoreover, CycleGAN can handle non-parallel data, allowingit to learn mappings between domains with distinct character-istics. The inherent cyclic consistency of CycleGAN enables\nthe preservation of content and structure during image transla-tion, resulting in realistic and coherent output. Each CycleGANmodel consists of two generators: one for translating imagesfrom domain A to domain B and another for the reverse trans-lation from domain B to domain A. These domains become thegenuine and forged signatures in our case.\nCycleGAN's cyclic consistency is an efficient solution to fea-ture learning from both domains. However, in our case, wedo not wish to simply create an identical signature or onethat carries some quantifiable resemblance. We want to extract theinformation in the original signature that may identify the bio-metric trait of the signee. Doing this in an automated fash-ion for image generation requires the least amount of data loss.\nIt also demands influential points of the data to be preserved.\nTo the naked eye, it seems as if a certain writing style, addingloops or combining cursive with lowercase letters, for example,"}, {"title": "4.3. Discriminator", "content": "Our discriminator is inspired by the work done by Jiang etal. [10] In their work, they introduced SigCNN for signatureverification using Spatial Pyramid Pooling. In a GAN architec-ture, the discriminator and generator tend to score against eachother. The discriminator mustn't be weak in structure. For com-patibility with our generator block structure, we alter SigCNNarchitecture with inception blocks similar to our generator ar-chitecture and use this architecture for both of the discrimina-tors in our model. We use convolution layers of 64 filters, 128filters, and 256 filters. Each layer is followed by an inceptionblock with filters 1x1, 5x5, 3x3 and 3x3 max pool. Addition-ally, each inception block is followed by a max pool layer and aconvolution layer that it had before the inception block as eachlayer in SigCNN is followed by a max pool and convolutionlayer. At the end of the model, we pass through a Spatial Pyra-mid Pooling layer followed by two parallel 512 fully connectedlayers that are then concatenated for the end result, shown inFigure 3."}, {"title": "4.4. Training Paradigm Shift", "content": "During training, CycleGAN enforces the generators to pro-duce images that can be translated back to the original do-main without significant information loss. This is implementedthrough the cycle consistency loss, which calculates the differ-ence between the original input image and the image obtainedby translating it to the target domain and then back to the origi-nal domain. The generators optimize this loss to ensure that thetranslations are consistent and coherent. Through an adversarialtraining process and the cycle-consistency constraint, the gener-ators in CycleGAN learn to capture the mappings between twodomains and generate high-quality images in both directions.This mechanism greatly influences CycleGAN's success in im-age style transformations. It is important to note that the focusis on the first domain, domain A."}, {"title": "5. Experimentation and Evaluation", "content": "It is important to note that the success of our work can not becompletely measured with traditional metrics as the goal of ourgenerated images is to fail the verification systems. Hence, theperformance of these systems would be bad, indicating that thesystem is unable to correctly identify the generated forgeries asforgeries, which is the goal. We perfect other experiments toquantify the success of our model. Additionally, we propose anevaluation technique that helps present the quality of the forgerygenerated and can be used to define the quality of other domains\nof image generation."}, {"title": "5.1. Spoofing Verification Systems", "content": "Signature spoofing attempts to make a verification systemunable to identify the forged signatures. As that is the goal ofour model, the verification systems should perform poorly. Wequantify this by analyzing the percentage of forged images thatthe verification system labels as genuine signatures. We brandthis percentage as our success rate.\nFor this experiment, we train four deep learning modelson CEDAR, DeepSignDB, and SVC2021 EvalDB signaturedatasets to act as our verification systems. It is important tonote that these datasets are small for classification learning andmay impact results. Regardless, we stick with these datasets be-cause BISGAN model is trained on them. Our verification sys-tems are VGG-16 [25], AlexNet [12], SigNet-F [4], and Cap-sNet [24] models, shown in Table 2. Of these three, AlexNetperforms the best during traditional training and testing.\nNext, we generate ten (10) forgeries from the BISGANmodel, shown in figure 5 and 6. Additionally, we train seven (7)other image generation models on CEDAR, SVC2021_EvalDBand DeepSignDB signature datasets and generate 10 forgeriesfrom all of these. This is also done to show the generationcapabilities of BISGAN to further establish generalizability.\nTwo (2) image generation models are based on techniques otherthan GANs to generate images, namely, RSAEG (perturbation-based) and the Diffusion model [8]. Two (2) of them are GANtechniques that have not been used for signature generation,\nnamely, MaskGIT [2] and DCGAN [22]. Three (3) of them"}, {"title": "5.2. Generated Quality Metric (GQM)", "content": "Our work utilizes the theory that a forged signature cannot betoo similar or dissimilar to a genuine signature. However, thedata characteristics of a forgery should be similar to a genuinesignature if it is to spoof a verification system. This answers thequestion of how good the generated forgery actually is. Thereare plenty of similarity metrics that can express the distancebetween genuine and forged signatures. However, the signa-tures' apparent similarity can be misleading regarding spoofingquality. Hence, statistical methods are typically used with datathat demands a deeper mathematical comparison of data. Whiletechniques that evaluate on data distributions of GAN inputs ex-ist, we emphasize the influential points of the data distributions.\nGenerated forgeries are a result of the generative model'slearning from genuine, or in our case, forged images. Thislearning, for GANs, starts from the latent space, which is amulti-dimensional encoding of meaningful external data rep-resentations. The external data is from the input space. Thelatent space speaks to the entire feature learning process andfor the case of CycleGAN, there are two spaces, one for eachdomain. There is no doubt that the latent space for genuine"}, {"title": "6. Discussion", "content": "Understanding the purpose of generated images is very im-portant to any generative AI research. In our work, understand-ing that signature is a biometric trait and how to replicate it to acertain threshold played an important role. We centre our workaround the concept of influential points of the input data distri-bution while both, creating our GAN architecture and devisingour evaluation metric. RSAEG proves to be an efficient tech-nique to achieve signature spoofing. However, it is not based onGANs. Given more powerful systems to handle large amountsof data, BISGAN's training can be improved and hence its per-formance.\nOur extensive evaluation techniques are proof of concept ofour paradigm-shifting training technique. Including signaturesgenerated by BISGAN into the dataset for verification systemsmakes them more prone to security breaches. Our research is astep in the direction of understanding the influential segments ofbiometric data and testing its forgeable limits. Exploiting theselimitations are ethical hacking techniques to make stronger sys-tems. Although we believe that GQM can be generalized formany different GAN architectures since the concept of latentspace is common among all, it is important to test it for differ-ent domains. For future research work, the transition of GQM"}, {"title": "7. Summary and Conclusions", "content": "Signature verification encompasses various techniques, in-cluding descriptive language, geometrical analysis, and the ana-lytical method. These methods utilize pattern recognition algo-rithms to compare and analyze unique features of signatures forauthentication purposes. In addition to classification models,generative models are also used to differentiate between origi-nal and forged signatures by identifying underlying patterns andstructures.\nWe identify a need for generator-focused research in signaturedata using GANs, as well as the importance of considering thepercentage of similarity between original, forged, and gener-ated samples. The lack of appropriate evaluation metrics forgenerated data also poses a research gap in this area.\nOur research utilizes CycleGANs with Inception model-likeblocks and attention heads, as well as the SigCNN model as abase Discriminator, to develop generators for signature forgerygeneration. The architecture of the generators is detailed, show-casing the combination of convolution layers, inception blocks,attention layers, and concatenation within a ResNet framework.\nThe theory that generated forgeries should possess strong fea-tures of the original signature is explored in our work and theresearch presents results comparing traditional training meth-ods with a paradigm-shifting approach. We also construct aquality metric that considers the influential data points and theuse of Mahalanobis distances and Cook's distance as goodnessmeasures for generated samples. We find that the BISGAN withparadigm shift training performs the best in achieving the goalof signature spoofing, followed closely by the normally trainedBISGAN.\nTo generate quality biometric data, the influential data pointsshould be emphasized. The quality increases when adverse\nsamples are considered for GAN training rather than genuinedata samples. BISGAN's architecture covers data preservationand important feature extraction to ensure quality data genera-tion. Biometric data generation requires domain-specific eval-uation metrics that answer case-specific quality evaluation an-swers."}]}