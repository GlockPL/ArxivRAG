{"title": "LLM-Enhanced Holonic Architecture for\nSelf-Adaptive System of Systems", "authors": ["Muhammad Ashfaq", "Ahmed R. Sadik", "Tommi Mikkonen", "Muhammad\nWaseem", "Niko M\u00e4kitalo"], "abstract": "As modern system of systems (SoS) become increasingly\nadaptive and human-centred, traditional architectures often struggle to\nsupport interoperability, reconfigurability, and effective human-system\ninteraction. This paper addresses these challenges by advancing the state-\nof-the-art holonic architecture for SoS, offering two main contributions\nto support these adaptive needs. First, we propose a layered architec-\nture for holons, which includes reasoning, communication, and capabil-\nities layers. This design facilitates seamless interoperability among het-\nerogeneous constituent systems by improving data exchange and inte-\ngration. Second, inspired by principles of intelligent manufacturing, we\nintroduce specialised holons-namely, supervisor, planner, task, and re-\nsource holons-aimed at enhancing the adaptability and reconfigurability\nof SoS. These specialised holons utilise large language models within their\nreasoning layers to support decision-making and ensure real-time adapt-\nability. We demonstrate our approach through a 3D mobility case study\nfocused on smart city transportation, showcasing its potential for man-\naging complex, multimodal SoS environments. Additionally, we propose\nevaluation methods to assess the architecture's efficiency and scalability,\nlaying the groundwork for future empirical validations through simula-\ntions and real-world implementations.", "sections": [{"title": "1 Introduction", "content": "A System of Systems (SoS) refers to an integrated collection of constituent sys-\ntems (CS) that work together to provide capabilities that individual systems\ncannot achieve alone. SoS has revolutionised complex operations in critical ar-\neas, including military defence networks and healthcare systems [9]. Advances in\ntechnology have created modern SoS that are dynamic, adaptive, and human-\ncentred. High dynamism allows an SoS to include, exclude, modify, or replace\nits CS during operation. This flexibility is essential for responding to changing\nmission requirements or improving system reliability and robustness during CS\nfailures. An adaptable SoS can operate effectively in uncertain and variable en-\nvironments by interacting with the external environment. Additionally, the SoS\nmust support effective human interaction and decision-making throughout its\noperations.\nThese characteristics of modern SoS present new research challenges, which\ncan be categorised into three main areas: interoperability, reconfigurability, and\nhuman interaction. 1) Interoperability: Various entities develop, operate, and\nmaintain their CS independently [15]. These CS often differ in their protocols,\ndata formats, workflows, and interfaces [26]. Ensuring interoperability among\nhighly heterogeneous CS is a significant challenge, particularly for black-box\nCS-systems unknown at design time and discovered and integrated at runtime.\nAchieving interoperability facilitates knowledge sharing between CS, leading to\nbetter goal attainment for the SoS [27,17]. 2) Reconfigurability: An SoS must be\ncapable of responding to inputs from the external environment, resulting in the\nreconfiguration at runtime [30,18]. This reconfiguration needs to be sufficiently\nflexible to utilise the capabilities of black-box CS. 3) Human Interaction: The\nSoS must support human-system interactions that enable informed decision-\nmaking without requiring extensive technical expertise from users. For example,\nin vehicle platoons, each CS represents an autonomous car part of an urban\nmobility SoS [29]. Cooperative driving among various types of connected vehicles\nis crucial for tackling issues such as traffic congestion. To achieve this, the SoS\nmust repeatedly reconfigure itself to create, change, or dissolve the platoon [30].\nThe holonic architecture presents a promising framework by representing CS\nas self-governing entities, known as 'holons' [3]. This approach utilises ontolog-\nical descriptions to facilitate the discovery, dynamic composition, and runtime\nreasoning of CS [7]. However, several areas require improvement. First, creat-\ning ontological descriptions for CS relies heavily on manual input from vendors\nor system engineers. This dependency can be difficult to maintain in dynamic\nand large-scale environments. Second, the architecture would benefit from more\nintuitive interaction mechanisms between humans and systems. At present, in-\nteractions demand technical expertise, which limits accessibility for non-expert\nusers.\nThis paper is an extended version of our work published in ICSOFT 2024 [2],\nwhere we introduced the initial concept of integrating natural language process-\nsing (NLP) capabilities into the holonic architecture for SoS. However, this con-\ncept included a centralised NLP module, which was not conducive to autonomy\nand decentralisation. In this extended version, we enhance the original framework\nin two significant ways. First, we propose a layered architecture for holons by\nintroducing reasoning and communication layers. In this design, LLMs improve\nthe interoperability of the holons. Second, drawing inspiration from intelligent\nmanufacturing, we introduce specialised holons-supervisor, planner, task, and\nresource to enhance the adaptability and reconfigurability of SoS. Each holon is\nstructured into three layers: 1) A reasoning layer powered by LLMs for intelli-\ngent decision-making, 2) A communication layer built on the Robot Operating"}, {"title": "2 Background and Related Work", "content": "2.1\nSystem of Systems (SOS)\nAn SoS is a collection of CS integrated into a larger framework, providing higher-\nlevel capabilities that individual CS cannot achieve alone [19]. A CS within an\nSoS exhibits unique characteristics that differentiate it from other systems, such\nas complex systems. These characteristics include:\nAutonomy: CS are developed, operated, managed, and located independently\nwhile contributing to the overall objectives of the SoS [4,16].\nEvolution: The development of an SoS is an ongoing process. Its goals con-\ntinually evolve, requiring the SoS to adapt to changing requirements, tech-\nnological advancements, and environmental factors [16]. This necessitates\ndynamic connectivity within the SoS based on mission needs rather than\nstatic configuration [4]. The evolution manifests in three key aspects: open-\nness at the top for new high-level applications; openness at the bottom for\ntechnological upgrades; and continuous, gradual evolution that ensures op-\nerational stability [1].\nEmergence: The interactions among CS lead to higher-level capabilities that\ncannot be attributed to any single CS [16,4]. The overall behaviour of the\nSoS can only be understood when integrated as a whole.\nSoS are typically categorised into four types based on their management\nstructure and goal alignment [6,8]. shows\nthat CS are independent but SoS-level resources are centrally managed."}, {"title": "2.2 Holonic Architecture", "content": "Holonic architecture is inspired by Arthur Koestler's idea of holons and hol-\narchies in biological and social systems [11]. Holons, derived from the Greek\nwords \"holos\" (whole) and \u201con\u201d (part), are semi-autonomous entities that oper-\nate both independently and as part of a larger whole. These holons are organ-\nised into a holarchy, which is a hierarchical structure of self-similar entities. This\nstructure facilitates both top-down decomposition and bottom-up composition,\ncreating a flexible and adaptive framework for system design. Holonic architec-\nture has found applications in smart manufacturing by decentralising control\nand enhancing resilience through autonomous components [25]. Each holon has\nspecific characteristics, including autonomy, social responsiveness, proactivity,\nand varying responsibilities based on its type.\nDue to their dual nature and expressiveness, holons are particularly effective\nfor modelling CS, as they accurately represent individual functions and contribu-\ntions to an overall SoS [3]. Nundloll et al. [20] explored the application of holonic\nprinciples in Internet of Things (IoT) system modelling and presented a frame-\nwork that represents holons through ontologies. Elhabbash et al. [7] adapted\nthis framework to the SoS domain, proposing an architecture where CS function\nas ontological holons. This design enables these CS to reason and communicate\nwith one another, facilitating CS discovery and dynamic composition of the SoS.\nZhang et al. [31] developed an automated approach using NLP techniques to de-\nrive holon ontologies from web data, specifically focusing on IoT devices rather\nthan SoS. Sadik et al. [23] utilised holonic architecture to address the scalability"}, {"title": "2.3 Large Language Models (LLMs)", "content": "NLP has become a fundamental aspect of artificial intelligence, enabling more\nsophisticated human-computer interactions [10]. This field includes various com-\nputational techniques designed to understand, interpret, and generate human\nlanguage. Among these techniques, LLMs are built on transformer architecture,\na specialised neural network design that utilises self-attention mechanisms and\nparallel processing capabilities [32].\nTrained on vast amounts of data, LLMs develop advanced linguistic skills\nsuch as pattern recognition, structural analysis, contextual understanding, and\nsemantic interpretation. These capabilities enable LLMs to perform complex\ntasks like text classification, sentiment analysis, and machine translation [21,5].\nLLMs have demonstrated significant value in software development, particu-\nlarly in programming assistance and code generation [24]. Recent research has ex-\nplored integrating LLMs into human-robot collaboration [12]. Building on these\nfindings, this study aims to investigate the integration of LLMs into SoS and\nholonic architecture."}, {"title": "3 Enhanced Holonic Architecture", "content": "3.1\nHolon\nThe holon is the core component of the proposed architecture, encapsulating the\nCS of an SoS. Each holon consists of three layers: reasoning, communication,\nand capabilities, as illustrated in Fig. 1.\nReasoning Layer: This layer enables context-aware decision-making and sup-\nports dynamic task planning and adaptation. The LLM is the central reasoning\ncore, interpreting commands and facilitating complex reasoning across all holons.\nThe reasoning layer comprises three sub-components:\n1. Command Processing: Preprocesses raw external inputs.\n2. Context Management: Crafts precise and contextually relevant prompts to\nensure inputs are accurately tailored to the holon type, enhancing the effec-\ntiveness and precision of the LLM's responses. One implementation strategy\ninvolves using domain-specific ontologies, as demonstrated by Koubaa et\nal. [12].\n3. Decision Making: Processes refined commands, creates appropriate action\nplans, and converts them into syntax comprehensible to the communication\nlayer."}, {"title": "3.2 Specialized Holons", "content": "Our architecture incorporates specialised holons designed to perform specific\ntasks that support SoS missions. Each holon employs an LLM tailored to its\ndesignated role, providing role-specific contextual information to the incoming\ncommands. Figure 2 shows these holons and their workflows.\nSupervisor Holon: This holon coordinates the communication and schedule\nplans between the SoS and CS. It generates strategic and operational plans across\nthe SoS while monitoring resource availability and utilisation, coordinating tim-\ning, and managing task interactions."}, {"title": "4 Case Study: 3D Mobility SoS Holonic Architecture", "content": "4.1\nOverview and Challenges\nTo demonstrate our enhanced holonic architecture, we apply it to a 3D mobility\ncase study. This case study represents a complex SoS that integrates unmanned\nground vehicles (UGVs) and unmanned aerial vehicles (UAVs) in an urban en-\nvironment [28]. The 3D mobility SoS must coordinate with various unmanned\nvehicles, infrastructure elements, and human operators to provide efficient and\nsafe transportation services.\nConsider a scenario where a smart city customer requires transportation\nfrom point X to point Y. Customers may have diverse goals, such as choosing\nthe fastest or least expensive route. This scenario presents several challenges.\nComplex Urban Environment: Navigating through a densely populated ur-\nban area with varying altitudes and restricted flight zones for UAVs."}, {"title": "4.2 Realisation of the Scenario in Extended Holonic Architecture", "content": "Fig. 3 illustrates the realisation of the scenario in our proposed architecture. A\ndetailed sequence diagram is shown in Fig. 4.\nSpecialized Holons: We represent the four specialised holons as follows:\n1. Resource Holons: Model the capabilities of resources such as human opera-\ntors, ground vehicles, aerial vehicles, and passengers.\n2. Plan Holons: Responsible for planning passenger trips and routing vehicles.\nThey also design journeys by considering available resources and their cur-\nrent status to ensure optimal paths.\n3. Task Holons: Select and manage trip segments by scheduling machine re-\nsource holons, such as ground or aerial vehicles. They also oversee specific\njourney segments, such as flying over streets and adapting based on real-time\nsensing data.\n4. Supervise Holons: Oversee overall system coordination, emergency response\nmanagement, resource allocation, and load balancing. They also ensure the\ntiming and interaction between driving and flying tasks and maintain oper-\national efficiency.\nInput: The customer communicates their destination to the 3D Mobility SoS by\nrequesting transportation from point X to point Y. In this context, the customer\nis represented as a human resource holon, labelled c1. The c1 can use the natural\nlanguage capabilities of its LLM to communicate the customer's request to the\nSoS. This holon interfaces with the SoS to make requests, track status updates,\nand receive progress reports.\nProcessing: The transportation request from c1 is received by the S-SoS, which\nserves as the supervisor holon of the SoS and functions as the primary coordinat-\ning entity. The S-SoS utilises its LLM to refine the input, ensuring it is tailored\nto the 3D mobility domain. Subsequently, the LLM initiates mission planning.\nUpon receiving the request, the S-SoS communicates with two other super-\nvisor holons, S-CS1 and S-CS2, each overseeing a different CS of the SoS. These\nsupervisors collaborate to negotiate and schedule a transportation solution, con-\nsidering the current status and ongoing tasks of their respective CS."}, {"title": "5 Discussion", "content": "Our proposed layered architecture for holons differs from the current state-of-\nthe-art, which typically represents holons as CS or abstract IoT devices [7]. Our\nreasoning layer provides consistent reasoning capabilities, enabling each holon\nto adapt autonomously to environmental changes while maintaining coherent\nbehaviour across the system. Specialised holons are inspired by smart manufac-\nturing [13]. Our work is the first to introduce them within the SoS context.\nIntegrating LLM into the reasoning layer enhances the functionality of each\ntype of holon. Human resource holon leverages the LLM's natural language capa-\nbilities to enable interactions between customers and vehicles, enhancing human-\nsystem interaction. Machine resource holon uses LLM to intelligently process sen-\nsor data and allocate dynamic resources, including autonomous vehicles, drones,\nand other automated systems. Plan holons utilise LLMs to analyse user requests\nand preferences for personalised trip planning. Additionally, LLMs support the\ndynamic adjustment of plans based on real-time system status. Task holons em-\nploy LLMs for real-time task status updates, predictive data analysis, and clear\ncommunication of task progress. The supervise holon can conduct LLM-driven\nanalysis of patterns and trends across the SoS to optimise resource allocation,\nprocess emergencies intelligently, and generate effective response plans.\nThe dual-level planning approach in our proposed architecture enhances real-\ntime adaptability and control. For example, in Section 4.2, the high-level plan\n(Pa) considers the overall SoS state and anticipates future needs, while the lower-\nlevel plans (e.g., Pa1 and Pa2) allow for dynamic, real-time adjustments. By\nassigning specific task holons to manage detailed steps locally, the system can\nswiftly adapt to unexpected changes, thereby ensuring responsive adjustments to\nreal-world conditions. Moreover, this architecture supports resource reallocation,\nbalancing the workload across the network. For instance, while Pa1 is assigned\nto vehicle m1, Paz is executed by vehicle m3, demonstrating the flexibility of\nresource switching to distribute tasks efficiently and maintain optimal workflow\nwithin the transportation network."}, {"title": "6 Proposed Evaluation", "content": "This study presents a conceptual framework, and we recognise the importance\nof evaluating its effectiveness through experimentation. Future work will involve\nimplementing this case study for evaluation in a simulated environment, similar\nto the approach used by Sadik et al. [23].\n6.1\nExperimental Setup\nSimulations can be conducted using multi-agent frameworks, such as JADE,\nor within a multi-robot environment, like ROS2 and Gazebo, to model inter-\nactions. Additionally, the system can be implemented using a distributed com-\nputing framework, with each holon running independently. The reasoning layer\ncomponents can be developed using a fine-tuned version of GPT-3 optimised for\ntransportation-related tasks and interactions.\n6.2\nEvaluation Metrics\nWe propose the following metrics to evaluate the architecture and compare it\nwith other architectures that do not utilise LLMs and specialised holons (e.g.\n[7,23]).\nScalability: The system's ability to maintain performance as the number of\nvehicles and users increased.\nadaptability: The system's responsiveness to unexpected events, such as road\nclosures, weather changes, and downtime.\nResource Utilisation: The average idle time of vehicles and the efficiency of\nroute planning.\nResponse Time: The latency in the system's responses to user queries and\noperational changes.\nUser Satisfaction: Evaluated through simulated user interactions and feed-\nback."}, {"title": "7 Conclusion and Future Work", "content": "This study expands the holonic architecture of SoS to tackle adaptability and\nhuman interaction challenges. We have extended the holons by adding three\nlayers, including a reasoning layer that utilises LLM capabilities to perform\nspecific tasks and coordinate with other holons. To ensure effective function-\ning of the SoS, we introduced specialised holons-supervisor, planner, task, and\nresource-and defined their workflows. We conceptually demonstrated the pro-\nposed architecture's applicability through a 3D mobility case study. This case\nstudy illustrates how various autonomous ground and aerial vehicles coordinate\neffectively.\nFuture work will implement this case study and compare the results with\nstate-of-the-art approaches. Additionally, we will address the challenges of am-\nbiguity in natural language interactions by incorporating clarification dialogues\nand improving control mechanisms. Implementing rigorous verification and vali-\ndation processes is also essential to ensuring that the LLM's output is robust and\nreliable. Finally, future research should also consider potential ethical concerns,\nincluding privacy, safety, and conflicts of interest [22,14]."}]}