{"title": "On the Generalization Properties of Deep Learning for Aircraft Fuel Flow Estimation Models", "authors": ["Gabriel Jarry", "Ramon Dalmau", "Philippe Very", "Junzi Sun"], "abstract": "Accurately estimating aircraft fuel flow is essential for evaluating new procedures, designing next-generation aircraft, and monitoring the environmental impact of current aviation practices. This paper investigates the generalization capabilities of deep learning models in predicting fuel consumption, focusing particularly on their performance for aircraft types absent from the training data. We propose a novel methodology that integrates neural network architectures with domain generalization techniques to enhance robustness and reliability across a wide range of aircraft. A comprehensive dataset containing 101 different aircraft types, separated into training and generalization sets, with each aircraft type set containing 1,000 flights. We employed the base of aircraft data (BADA) model for fuel flow estimates, introduced a pseudo-distance metric to assess aircraft type similarity, and explored various sampling strategies to optimize model performance in data-sparse regions. Our results reveal that for previously unseen aircraft types, the introduction of noise into aircraft and engine parameters improved model generalization. The model is able to generalize with acceptable mean absolute percentage error between 2% and 10% for aircraft close to existing aircraft, while performance is below 1% error for known aircraft in the training set. This study highlights the potential of combining domain-specific insights with advanced machine learning techniques to develop scalable, accurate, and generalizable fuel flow estimation models.", "sections": [{"title": "I. INTRODUCTION", "content": "The aviation industry is a notable contributor to global CO2 emissions, responsible for approximately 2.5% of the total a share expected to increase as air travel continues to expand [1]. In addition to CO2, aviation generates non-CO2 effects, such as contrail formation, which further contribute to global warming [2]. As awareness of these environmental impacts grows, the industry has set ambitious goals to reduce its carbon footprint. International initiatives, such as the U.S. NextGen program and the Single European Sky Air Traffic Management Research (SESAR) Joint Undertaking, aim to significantly reduce aviation's environmental impact by 2035 through a variety of technological advancements and procedural innovations [3].\nAchieving these goals necessitates a multi-faceted approach, including advancements in engine technology, more aerodynamically efficient wing designs, and optimized air traffic management (ATM) procedures. For example, operational practices like continuous (cruise) climb operations (CCOs) and continuous descent operations (CDOs) can significantly cut fuel consumption and emissions [4], [5]. However, assessing the environmental benefits of such procedures depends on accurate and reliable fuel consumption models, which are also crucial for monitoring the environmental impact of operations.\nNumerous models have been developed to estimate fuel consumption, each employing different methodologies and data sources. Many rely on mathematical approximations derived from basic physical equations or empirical data analysis [6], [7]. The data to train these models ranges from widely accessible sources, like automatic dependent surveillance-broadcast (ADS-B) [8], to more detailed proprietary information from flight data recorders (FDR) [9]. While these models are valuable, they come with limitations. Polynomial models, for instance, often oversimplify the complexities of fuel consumption, leading to potential inaccuracies in certain operational scenarios. For example, some models may provide excellent accuracy during the cruise phase, but not during the descent phase. Moreover, the simplicity of existing models typically necessitates the use of a separate model for each aircraft type. This fragmentation limits their applicability, especially in cases where data availability is sparse. If separate models are trained for each aircraft type, the data available for each may be insufficient to achieve high accuracy. Additionally, data for some aircraft types might be unavailable or only available for certain flight phases, such as cruise.\nIn response to these challenges, we propose a novel approach: the development of a generic and unique fuel consumption model that is conditioned on the specific characteristics of the aircraft, such as the wing span. This approach offers several key advantages over traditional models. First, by conditioning on aircraft characteristics, a single model can be applied across multiple aircraft types, eliminating the need to develop and maintain a separate model for each type. Second, the model can be trained on a larger and more diverse dataset, encompassing various aircraft types, thereby enhancing its robustness and accuracy. Third, and perhaps most importantly, this model has the potential to generalize across different scenarios, including those not represented in the training data. This capability, known as domain generalization in machine learning [10], makes it a powerful tool for what-if analyses and for forecasting fuel consumption under new or unforeseen conditions, such as new aircraft designs or operational procedures.\nThis paper presents this model and, most critically, empirically evaluates its domain generalization properties."}, {"title": "II. STATE OF THE ART", "content": "This section presents the state of the art in two key areas. The first subsection reviews the latest advancements in fuel estimation techniques, while the second subsection explores the current approaches to domain generalization.\nAccurately estimating aircraft fuel consumption remains a significant challenge in ATM. To address this, researchers have developed various modeling techniques, ranging from traditional physical models to advanced neural networks and machine learning approaches. This subsection highlights the most relevant works across these different methodologies.\nEUROCONTROL's Base of Aircraft Data (BADA) has been a widely recognized aircraft performance model that provides a foundational framework for simulating aircraft trajectories using total energy modeling. BADA encompassed comprehensive thrust, drag, and fuel consumption models for a broad spectrum of aircraft types [6], [11]. In pursuit of greater accessibility, OpenAP was designed specifically for the research community as an open-source model, promoting transparency and broad collaboration [12]. Recently, [7], [13] proposed a method based on aerodynamic theory and empirical data to predict cruise fuel consumption and performance characteristics for turbofan aircraft.\nRecent studies demonstrated the effectiveness of machine learning over conventional physical models. For instance, [14] used Gaussian process regression and operational data to enhance model accuracy. Building on this, the same authors predicted fuel flow rates using Classification And Regression Trees and least squares boosting, significantly improving emissions inventory accuracy [15]. Similarly, [16] leveraged full-flight sensor data with machine learning methods to outperform traditional fuel flow models. High accuracy in fuel flow prediction was further showcased by [17] through the use of advanced neural networks such as radial basis function networks. Evaluating neural network models against specific aircraft types, [18] highlighted the potential for real-time simulation applications. Additionally, [19] employed long-short term memory (LSTM) neural networks to accurately predict performance-based contingency fuel. In the context of exhaust emissions and combustion efficiency, [20] achieved high accuracy with an LSTM model without extensive experimental testing. Likewise, [21] developed a model that surpassed previous methods in accurately predicting aircraft fuel consumption. The integration of Genetic Algorithm-optimized neural networks by [22] introduced a novel approach to fuel consumption prediction across various flight phases. Moreover, [23] proposed a hybrid strategy that incorporated physics-based loss during training to enhance model robustness against parameter changes, showing significant promise in making neural network models more resilient. In previous research, we benchmarked neural networks for estimating on-board aircraft parameters such as fuel flow and flap configuration during approach and landing [24], which could lead to improved ATM metrics [25]. We also released an open-source generic aircraft fuel flow regressor for ADS-B data, trained on quick-access recorder data [9].\nAccurate estimation of aircraft fuel flow is critical for several applications, including the evaluation of new procedures, the design of next-generation aircraft, and the assessment of the environmental impact of aviation. The challenge is to develop models that can generalize across different aircraft types and operating conditions, especially those not included in the training data. To address this challenge, the concept of domain generalization has emerged as a promising approach. This paper is among the first to specifically quantify the generalization capabilities of deep learning models in the context of aircraft fuel flow estimation.\nDomain generalization aims to create models that perform well in unseen domains by using training data from multiple source domains [10]. This is particularly relevant for aircraft fuel flow estimation, where models must generalize to different aircraft types and flight conditions. Domain alignment techniques are essential for this purpose, as they help minimize the differences between the source domains, allowing the model to learn domain-invariant representations [26], [27].\nData augmentation plays a critical role in simulating domain shifts to improve model generalization. For aircraft fuel flow estimation, data augmentation can be used to create different training scenarios that mimic different aircraft behaviors, characteristics and environmental conditions. Techniques such as random augmentation networks [28] and feature-based augmentation [29] can be particularly effective in expanding the diversity of training data, thereby improving the model's ability to generalize.\nFinally, regularization strategies are critical to improving model robustness by reducing reliance on local features and encouraging the use of global structures. In the context of fuel flow estimation, this could involve regularizing the model to focus on general aerodynamic principles rather than specific data peculiarities of particular aircraft types. Techniques such as iteratively masking over-dominant features [30] could be integrated with domain alignment and data augmentation to further improve performance.\nWhile these general domain generalization techniques are valuable, context-specific approaches tailored to aircraft fuel flow estimation could offer even greater benefits. Inductive bias plays a critical role here by embedding domain-specific knowledge into the learning process. For example, physically-informed neural networks (PINNs) [31], [32] can incorporate physical laws and constraints, such as flight dynamics equations [23], directly into the model. This approach not only improves generalization, but also ensures that predictions are consistent with known physical principles, resulting in more reliable and robust fuel flow estimates over a wide range of aircraft and operating conditions.\nThe issue of robustness and generalisation of regression algorithms is also studied in classical statistics when sampling is required to build training data sets. Stratification techniques are used to optimally represent a population by dividing it"}, {"title": "III. METHODOLOGY", "content": "This section outlines the methodology used to develop a generic model and assess its generalization capabilities for predicting the fuel flow of aircraft types not included in the training set. The process is presented in chronological order: Section III-A covers the data collection and preparation; Sections III-B and III-C introduce the distance metric for evaluating aircraft type similarity and the uniformization process. Section III-D presents the losses and training process, and Section III-E describes the neural network model architecture.\nTo train and evaluate a machine learning model for fuel flow, a labeled dataset (i.e., with both inputs and outputs) of flight states (such as true airspeed, altitude, aircraft mass, etc.) and the corresponding fuel flow is required. Additionally, if a generic model applicable to various aircraft types is desired, the model must be conditioned on aircraft and engine-specific characteristics. These two types of data are described below."}, {"title": "A. Data collection and preparation", "content": "ADS-B data were obtained from the Open-Sky network [36], with a focus on flights conducted in 2022. The raw data were resampled at 4-second intervals using the traffic library [37], and all flight trajectories were enriched with weather data-specifically, wind and temperature using the fastmeteo library [38]. To enhance the dataset, the derivatives of ground speed and true airspeed were calculated after applying an 8-second moving average smoothing.\nIt should be noted that the majority of the flights originate from Europe and the United States, regions with robust ground receiver coverage. For short- to medium-range flights, most selected trajectories include complete flight paths from takeoff to landing. However, for long-range flights, such as those operated by the Airbus A380, some segments may be missing in oceanic regions where receiver coverage is unavailable.\nThe features extracted to represent the flight state in the model include altitude (ft), vertical rate (ft/min), ground speed (kt), true airspeed (kt), ground acceleration (kt/s), air acceleration (kt/s), and air temperature (K). Additionally, the aircraft type was included to be matched with the corresponding aircraft and engine characteristics described below.\nFrom this global dataset, 64 aircraft types were selected to form the primary dataset which is used for training the model, and 37 others to build the secondary dataset used to assess the generalization performance. Each aircraft type account for exactly 1,000 flights each. Since only ICAO type is available in the ADS-B data, we apply the full aircraft type BADA 4.2.1 model to randomly selected ADS-B trajectory of its corresponding ICAO type. To prevent data leakage, we ensured that ADS-B flights included in the secondary dataset were not present in the primary dataset (even for same ICAO type)."}, {"title": "1) Flight Data:"}, {"title": "2) Aircraft and engine characteristics:", "content": "To create a model that generalizes across a wide range of aircraft types, aircraft and engine characteristics were matched to each observation according to the corresponding aircraft type. Table II provides details on the features representing the aircraft and engine characteristics included in each dataset observation."}, {"title": "B. Distance metric for aircraft type similarity", "content": "In order to create a similarity measure between aircraft types, we applied a uniform QuantileTransformer from scikit-learn on both aircraft and engine characteristics to deal with features with different ranges of values. This method transforms the features to follow a uniform distribution, also reducing the impact of outliers and therefore acting as a robust preprocessing scheme. The similarity measurement is defined as the l2 norm in the uniform space."}, {"title": "C. Uniformization process", "content": "To analyze the model's generalization properties, we compare two types of sampling on both the training and validation sets, while keeping the test set unchanged.\nFirst, we use random sampling with replacement: 1000 observations per flight trajectory for the training set and 500 for the validation set, drawn from the entire dataset.\nSecond, we propose a uniform sampling method applied to the ADS-B parameters for each aircraft type. This process begins by applying again a uniform QuantileTransformer to the data, followed by dimensionality reduction using Principal Component Analysis (PCA) with 2 components, which projects each observations into a two-dimensional space. Kernel Density Estimation (KDE) is then used to estimate the density of observations in this latent space, with the weights for sampling calculated as the inverse of their estimated density, thus favoring observations in less dense regions. Dimension reduction is critical here to avoid the curse of dimensionality for density estimation."}, {"title": "D. Loss and training process", "content": "We trained all models on GPUs (NVIDIA RTX A4500 or RTX A6000 Ada Gen) using Tensorflow for 1K epochs with a checkpoint on the validation set and evaluated the performance of the models on the test set. To ensure reproducibility, we set the same seed in all experiments (ramdom and np.random seed: 42, tf deterministic ops: 1 and python hash seed: 0).\nDifferent metrics are used to train or evaluate the performance of the model: the Mean Square Error (MSE), the Mean Error (ME), the Mean Absolute Error (MAE) and the Mean Absolute Percentage Error (MAPE).\nAdditionally, we defined a combined loss between MAE and MAPE. Let $D$ be a set of input-output pairs $(x, y)$ and $h$ be a model to evaluate, the metric is calculated as follows:\n$\\beta - MAPE(h, D) = MAE(h, D) + \\beta MAPE(h, D)$"}, {"title": "E. Model Architecture", "content": "The proposed neural network architecture is an n-k-m dense neural network designed for robust and efficient performance. The model begins with a batch normalization layer to standardize the inputs, followed by a block of N fully connected layers, each comprising K neurons. These layers employ ReLU activation functions and are regularized with an l2 kernel regularization coefficient of $1 \\times 10^{-4}$. After this block, a single dense layer with M neurons is added, also using ReLU activation and 12 regularization. The final layer has three variations. Variation (C) consists of a Relu activation and a min layer with 1.1 times fuel flow take-off. Variation (R) consists of a Relu activation, a minimum layer with 1.0 and finally a multiplication layer with 1.1 fuel flow take-off. Finally, variation (S) uses a sigmoid layer and a multiplication layer with 1.1 fuel flow take-off."}, {"title": "IV. RESULTS", "content": "In order to build the reference model we first performed a hyperparameter search to find a good configuration. It is not a complete grid search, each training last between 2h to 6h and the objective is not to find the best model just a good reference architecture. The selected architure is a 7-250-4 model trained with a 20-MAPE loss. All the final layer variations are tested in this section."}, {"title": "A. Sampling process", "content": "The analysis of the performance metrics on the test dataset in Table IV shows that the choice of validation set sampling, whether uniform or random, does not impact the final model selection, as evidenced by identical MAPE, MAE, and ME values for both methods implied same model is selected with the check-pointing. However, the sampling method of the training set seems to influence performance, with uniform sampling yielding slightly better results. Models trained with uniform sampling achieve a lower MAPE of 0.54% than with the random sampling with 0.67% MAPE."}, {"title": "B. Generalization performance", "content": "The generalization property of the model is evaluated using the same metrics on the secondary dataset (37 unseen aircraft types). To ensure stability in training and testing, we will only change the architecture of the model here and see how the generalization property evolves. The task we are attempting is particularly challenging due to the design of our dataset, which excludes entire families of aircraft from the training set (A310, A340, A380, and the F and MD series). We aim to generalize the model's performance to these aircraft families unseen during training. In a more typical scenario, one would expect the model to have been exposed to at least one aircraft from the same family, making it a matter of predicting the performance of a new version or variant of that aircraft. This lack of representations in the training set significantly increases the complexity of the task, as the model must extrapolate from characteristics and behaviors it has never encountered before. Our study aims to demonstrate and quantify the model's ability to overcome this challenge and provide accurate predictions even under these adverse conditions."}, {"title": "1) Last layer variation:"}, {"title": "2) Adding noise:", "content": "To try to mitigate this behavior, we applied some noise regularization to the input aircraft and engine features. For each feature, we sampled a Gaussian distribution with a mean $\\mu = 0$ and a standard deviation $\\sigma = 0.33$. Each noisy feature $X_p$ is computed as\n$X_p = X \\cdot (1 + p \\cdot N(0, 0.33^2))$ where $X$ is the original feature and $p$ is the noise percentage parameter. As observed in table VI, introducing noise improves model performance, especially at noise levels of 1% and 3%, where both MAPE and MAE show significant reductions. We also observe more stability in the MAPE curve during training and in particular with 1% noise a proper decrease of the MAPE curve without overffiting periods."}, {"title": "V. DISCUSSION", "content": "One limitation of our current approach is the discrete sampling of mass values. This method could be improved by implementing a random sampling technique for mass values, which would provide a more continuous representation. In addition, a more appropriate procedure would be to use historical mass distributions specific to each city pair. This improvement would allow for more accurate and realistic modeling of aircraft fuel flow that more closely reflects actual operational conditions. In addition, the current process is limited to 1,000 trajectories. Improving this by maximizing the variability within those flights could result in a more robust model that captures a wider range of flight conditions.\nThe uniform sampling method used here was able to improve the test performance. This can be explained by the nature of the input data distribution (redundancy of level phase data points with a large number of short and medium range aircraft). The performance could be probably increased by using active sampling strategies [42], where the performance of the regression algorithm is fed back into the sampling algorithm to further improve its accuracy\nAn interesting finding relates to the overfitting observed on the aircraft and engine parameters. The model does not appear to overfit on the ADS-B parameters, where it is exposed to millions of data points, indicating robust generalization capabilities in this context. However, there is a noticeable tendency to overfit on the aircraft and engine parameters, which are limited to only 64 possible values. This discrepancy suggests that the model struggles with the limited variability of these features, leading to overfitting. Interestingly, introducing noise into the aircraft and engine parameters effectively alleviated this problem. By adding noise, we increase variability and prevent the model from learning spurious patterns specific to the training set, thereby improving its generalization performance to unseen aircraft types.\nFurther work could be done on the model architecture to introduce more inductive bias and improve generalization. For example, training an embedding through adversarial learning could help the model learn more robust representations. Additionally, learning the fuel flow distribution functions specific to each aircraft could provide more context-aware predictions. These approaches could help to better capture the underlying patterns in the data, thus improving the overall performance and robustness of fuel flow estimation models.\nA major limitation of our current approach is the reliance on the BADA physical model as a proxy for estimating fuel flow. In reality, our goal is to develop and release models trained on Quick Access Recorder (QAR) data directly from the aircraft. The use of BADA provides a baseline, but it does not capture the full range of operational variability and subtleties present in actual flight data. The fuel data estimated using BADA appears to be significantly less noisy, which contributes to the exceptionally good performance (with errors less than 1%) observed in our test results. The transition to models trained on QAR data will provide more accurate and reliable fuel flow estimates that better reflect real-world conditions."}, {"title": "VI. CONCLUSIONS", "content": "In this paper, we explored the generalization properties of neural networks for aircraft fuel flow estimation, focusing on their ability to predict fuel flow for aircraft types not present in the training data. Our experiments produced several important results. First, we found that neural networks, when trained with the right architecture and hyper-parameters, can achieve highly accurate fuel flow predictions for observed aircraft types, with mean absolute percentage errors (MAPE) below 1%.\nSecond, the effect of sampling methods was significant. Uniform sampling of the training data improved model performance during the ascent and descent phases, which are more complex and typically underrepresented in the raw data.\nThird, generalization to unseen aircraft types was inherently more difficult. However, the introduction of noise in the aircraft and engine parameters significantly improved the robustness of the model, with mean absolute percentage errors around 10%. This regularization technique prevented the model from overfitting to the limited set of aircraft and engine parameters, thereby improving its ability to generalize.\nIn our error analysis, we observed that the model's performance on the secondary dataset, consisting of unseen aircraft types, showed an increasing relationship between the prediction error and the distance to the closest aircraft type in the training dataset. This quantifiable error measure is critical for practical applications, as it allows stakeholders to understand and anticipate the model's limitations.\nLooking ahead, our study highlights the potential benefits of incorporating domain-specific knowledge, such as physical constraints and historical mass distributions, into the training process. Future work should focus on refining these techniques and transitioning from proxy models such as BADA to direct use of Quick Access Recorder (QAR) data, which would provide more accurate and comprehensive datasets.\nIn addition, a complete BADA 4.2.1 (all 103 aircraft types) surrogate model has been built. Discussions are underway to release the model under a BADA license with an implementation in the DeepEnv library [43]."}]}