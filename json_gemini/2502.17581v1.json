{"title": "Intention Recognition in Real-Time Interactive Navigation Maps", "authors": ["Peijie Zhao", "Zunayed Arefin", "Felipe Meneguzzi", "Ramon Fraga Pereira"], "abstract": "In this work, we develop INTENTREC4MAPS, a system to recognise users' intentions in interactive maps for real-world navigation. INTENTREC4MAPS uses the Google Maps Platform as the real-world interactive map, and a very effective approach for recognising users' intentions in real-time. We experiment and showcase the recognition process of INTENTREC4MAPS using two different Path-Planners and a Large Language Model (LLM) as a path-planner via prompts.", "sections": [{"title": "1 Introduction", "content": "Real-time interactive navigation maps are crucial for us and have become integral tools in our daily lives. Interactive maps use Global Positioning System (GPS) technology to provide accurate and real-time location information, being particularly useful for mobile applications, enabling users to track their location and receive turn-by-turn directions for walking, driving, or public transportation. Existing interactive navigation maps include markers for various location points of interest, such as restaurants, gas stations, hotels, etc. This helps users to plan their routes based on their interests or needs during a journey. A noteworthy functionality of interactive navigation maps, such as Google Maps, Apple Maps, Waze, MapBox, etc, is the use of Path-Planning algorithms [3, 5, 7] (along with heuristics) to generate optimal routes for users. This functionality can be further enriched by integrating real-time traffic data, historical traffic patterns, and various other real-world factors that could be used to ensure the generation of optimal routes. Nevertheless, as far as we are aware, the existing interactive navigation maps platforms do not have and employ the functionality of Real-Time Intention Recognition [8, 10, 11], at least from the user perspective and standpoint.\nEmpowering centralised systems with the ability to recognise the intended locations of users (either driving, walking, or cycling) could be beneficial to monitor and track resources in a more effective way, such as vehicles or personnel, packages to be delivered, etc, and is of significant importance for logistics, fleet management, or any scenario in which asset movement needs to be closely monitored.\nIn this work, we develop INTENTREC4MAPS, a system that is able to recognise users' intended location points in interactive maps for real-world navigation. As the interactive navigation map platform, we use the Google Maps Platform, as it provides several useful Application Programming Interfaces (API), such as Maps Embed API, Directions API, Geocoding API, etc. For recognising users' intentions, we equip INTENTREC4MAPS with a real-time recognition approach called Mirroring [20]. Intention Recognition has been employed in practice in several distinct applications and scenarios, such as digital games [15], real-time recognition of culinary recipes in video streams [6], planning and decision-making advisor [18], agents' behaviour explanation [2], behavioural cues for recognising human's intentions"}, {"title": "2 INTENTREC4MAPS", "content": "2.1 System Overview\nINTENTREC4MAPS is composed of two main components (Figure 1): the Interactive Map Platform component (Section 2.2), the component that relies on the Google Maps Platform and its APIs to display the interactive map for real-time intention recognition; and the Real-Time Intention Recognition component (Section 2.3), the component that performs real-time recognition according to a set of input information (possible intentions, observations, etc) and providing a probability distribution reflecting the most and least likely intentions in response to received observations. We next explain in detail how these two components work.\n2.2 Interactive Map Platform\nWe use the Google Maps Platform as the interactive map, as it provides a very robust set of APIs for real-world navigation. The environment where INTENTREC4MAPS performs intention recognition is represented by the road network with location points of interest (denoted as loc), and the state-space consists of the geographical locations on the map. A location point is represented using latitude and longitude coordinates, e.g., loc = (53.483959, -2.244644). Actions are represented by moving from one location point to another, following a specific route (or path) according to a transportation mode (e.g., walking, driving, cycling, public transport). We define that a route \u03c0 = {loc1, ...locn} is a sequence of latitude and longitude coordinates that achieves a specific location point from an initial location point. Our system INTENTREC4MAPS relies on the Earth's sphere space (defined in the previous paragraph) to define an Intention Recognition problem in real-world navigation maps. We formally define an Intention Recognition problem in real-world navigation maps as a tuple (M, initloc, I, Obs), where: M is the real-world map environment, represented by"}, {"title": "2.3 Real-Time Intention Recognition", "content": "INTENTREC4MAPS uses a well-known online recognition approach called Mirroring [9, 20], a model-based recognition approach [13, 14]. Vered et al. [20] developed Mirroring by arguing that we humans tend to infer other people's intentions by \"mirroring\" their observed behaviour with some \"optimal (ideal)\" expected behaviour. We adapt the concept of Mirroring for real-world navigation maps, and compute two types of routes for the observed user, as follows. We first compute an ideal route $\\pi$ from the initial location $initloc$ for every location point $loc$ in the set of possible intentions $I$. After that, we compute what we call observation route $\\pi_{Obs}$, a route that complies with the observations in $Obs$, and is computed from the initial $initloc$ complying with the observations $Obs$ and then achieving the each of the possible intentions $I$. Thus, for every possible intended location in $I$, we compare its ideal route $\\pi$ with its observation route $\\pi_{Obs}$ and compute a score (denoted as $\\epsilon$). The score $\\epsilon$ is a value between 0 and 1, i.e., $0 \\le \\epsilon \\le 1$, and represents how \"compliant\" (assuming optimal routes [12]) the sequence of observations $Obs$ from the agent's behaviour is to a route $\\pi$ for achieving a location point of interest, i.e., the closer $\\epsilon$ is to zero for location point of interest, the more likely such a"}, {"title": "3 Experiments and Evaluation", "content": "To experiment and evaluate INTENTREC4MAPS\u00b9, we built a real-world navigation recognition dataset with 100 complex problems, using the Google Maps Path(Route)-Planner\u00b2 to compute the routes and the observations. The recognition problems were built using five different initial locations, and the possible intended location points vary across four groups, ranging from 2 to 15 (i.e., 2, 5, 10, and 15), whereas observation points (extracted from routes using a path-planner) vary across five groups, ranging from 1 to 15 (i.e., 1, 3, 5, 10, and 15).\nTable 1 shows the results of INTENTREC4MAPS over the recognition dataset, aggregating the total average overall, grouped by the number of goals, and grouped by the number of observations. We use three metrics to evaluate INTENTREC4MAPS: True Positive Rate (TPR), False Positive Rate (FPR), and F1-Score (the trade-off between TPR and FPR). We used three experimental setups and tested different ways of extracting routes (paths) for the recognition process: (1) we use the Google Maps Route-Planner, as a Baseline; (2) we use the MapBox Route-Planner\u00b3; and (3) we use a LLM (i.e., ChatGPT4 API4) as a route-planner, asking directions via prompt. The Baseline represents the INTENTREC4MAPS and an observed person using the same navigation system, specifically, the Google Maps API. We use MapBox as an alternative navigation system for the recognition process, making the recognition process more difficult. The rationale for using an LLM as a route-planner is to investigate how \"reliable\u201d an LLM is when used as a solver for a reasoning/planning process, drawing inspiration from the work of [19].\nWe can see from the results in Table 1 that the Baseline (grey results) yielded a commendably high recognition accuracy compared to the other recognition setups, which is expected, since it represents the recognition process using the same the navigation system as the user, so it makes the recognition process more efficient. Conversely, Mapbox demonstrated a comparatively lower accuracy than the Baseline, which is expected, considering the divergence between the possible extracted routes from Google Maps. Note that Mapbox yielded commendable results when compared with LLM (ChatGPT4). It is noteworthy that the results for the recognition process using an LLM (ChatGPT4) are the worst"}, {"title": "4 Conclusions", "content": "We developed INTENTREC4MAPS, a novel recognition system that is able to recognise users' intentions in interactive maps for real-world navigation. Our system employees the Haversine Formula to compute distances between locations in the Earth's sphere space. As future work, we aim to extend INTENTREC4MAPS and implement other recognition features and functionalities, such as dealing with irrational [12] and possibly adversarial behaviour, and noisy and spurious observations. Furthermore, we aim to assess the recognition accuracy of INTENTREC4MAPS when dealing with long-distance intended location points."}]}