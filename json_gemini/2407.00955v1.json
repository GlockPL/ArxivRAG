{"title": "Task-oriented Over-the-Air Computation for Edge-device Co-inference with Balanced Classification Accuracy", "authors": ["Xiang Jiao", "Dingzhu Wen", "Guangxu Zhu", "Wei Jiang", "Wu Luo", "Yuanming Shi"], "abstract": "Edge-device co-inference, which concerns the coop- eration between edge devices and an edge server for completing inference tasks over wireless networks, has been a promising technique for enabling various kinds of intelligent services at the network edge, e.g., auto-driving. In this paradigm, the concerned design objective of the network shifts from the traditional communication throughput to the effective and efficient execution of the inference task underpinned by the network, measured by, e.g., the inference accuracy and latency. In this paper, a task- oriented over-the-air computation scheme is proposed for a multi- device artificial intelligence system. Particularly, a novel tractable inference accuracy metric is proposed for classification tasks, which is called minimum pair-wise discriminant gain. Unlike prior work measuring the average of all class pairs in feature space, it measures the minimum distance of all class pairs. By maximizing the minimum pair-wise discriminant gain instead of its average counterpart, any pair of classes can be better separated in the feature space, and thus leading to a balanced and improved inference accuracy for all classes. Besides, this paper jointly optimizes the minimum discriminant gain of all feature elements instead of separately maximizing that of each element in the existing designs. As a result, the transmit power can be adaptively allocated to the feature elements according to their different contributions to the inference accuracy, opening an extra degree of freedom to improve inference performance. Extensive experiments are conducted using a concrete use case of human motion recognition to verify the superiority of the proposed design over the benchmarking scheme.", "sections": [{"title": "I. INTRODUCTION", "content": "Edge artificial intelligence (AI) has been an emerging tech- nique to provide various kinds of intelligent services to support many applications like auto-driving and remote health [1]\u2013[4]. However, the realization of these intelligent services demands the deployment of well-trained AI models at the network edge and utilizes their inference capability for making human-like intelligent decisions. This gives rise to a new research topic, called edge inference [5]-[12]. There are now three types of edge inference: on-device inference, which uses the device for the entire inference task, takes up a lot of computational resources on the device (see, e.g., [5]). The second one is known as on-server inference which uses a server to perform the entire inference task completely (see, e.g., [6]). It causes huge communication overhead and privacy leakage. Among others, the technique of edge-device co-inference, called edge split inference, has been the most popular architecture [7]\u2013 [12]. It divides an AI model into two parts. One part with light size is deployed at the device for extracting a low- dimensional feature vector from the high-dimensional raw data. The remaining computation-intensive part is deployed at the server and utilizes the received feature vector from the device to complete the downstream inference task. By avoiding high-dimensional raw data transmission and offloading the in- tensive computation to the server, the edge-device co-inference can enjoy the advantages of enhanced communication and computation efficiency as well as preserving data privacy and thus is considered in the current work.\nAs stated in [11]-[14], the design of edge-device co- inference calls for task-oriented communication techniques, since traditional techniques designed for throughput maxi- mization or distortion minimization, fail to distinguish the data samples of different contributions on the inference task. To tackle this problem, a task-oriented scheme of integrated sens- ing, computation, and communication (ISCC) was proposed in [11] for multi-device AI inference, where each device senses a target area from disjoint narrow views. Furthermore, for the case where different devices observe the same wide view of a target area with each providing a noisy observation, a task-oriented over-the-air computation (AirComp) was proposed in [12] to efficiently aggregate the local features for suppress- ing the sensing and channel noise by directly adopting the inference accuracy as the design goal instead of using the traditional minimum mean square error (MMSE) (see, e.g., [15], [16]). This task-oriented AirComp design was extended to the Cloud-RAN architectures [13]. As the instantaneous inference accuracy is unknown at the design stage, when the input data of the AI model is not obtained, authors in [11]-[13] adopted an approximate but tractable metric as a surrogate for classification tasks, called discriminant gain and originally proposed in [10] based on the well-known Kullback- Leibler divergence [17]. Specifically, as shown in Fig. 1, the discriminant gain of an arbitrary class pair (e.g., G1,2, G1,3 or G2,3) is defined as the distance between their centroids in the"}, {"title": "II. SYSTEM MODEL AND PROBLEM FORMULATION", "content": "A. System Model\n1) Network Model: Consider an edge-device co-inference system with K single-antenna devices and one edge server equipped with a single-antenna access point, as shown in Fig. 2. The devices sense the same wide view of a target and obtain real-time noise-corrupted sensory data for the inference task. Then, a principal component analysis (PCA) based feature extractor is utilized to extract a local low-dimensional feature vector from the raw sensory data at each device. In practice, the number of extracted feature dimensions is task-dependent and can be pre-determined during the training stage. Next, for suppressing the sensing noise to achieve higher inference performance, all local feature vectors are aggregated at the server using AirComp to derive a denoised global one, which is further input into an AI sub-model for completing the downstream inference task [12]. The number of extracted feature elements is denoted as M. As a reasonable example,\nthe edge server can refer to a highly mobile vehicle on a road and the devices can refer to road site units [10].\nTime-division multiplexing (TDM) is used. At each time slot, an element of the same feature dimension is transmitted by each device and is aggregated at the server for denoising. The overall feature vector is sequentially transmitted over M time slots. Since the transmission time of one element is far less than the coherence time [18], the channels are assumed to be static during the transmission of all M elements. Particularly, the uplink channel gain of the k-th device is denoted as hk. Without loss of generality, the server works as the central coordinator which determines the transmit power for all devices and has the ability to acquire the channel state information of all involved links.\n2) Feature Distribution: The extracted local feature vector is a noise-corrupted version of the ground-true one, as\n$$x_k = x + d_k, 1 \\leq k \\leq K,$$\nwhere x = {x1, ..., xm, ..., xM} is the ground-true feature vector, dk = {dk,1,..., dk,m,...dk,M} is the difference be- tween the noise-corrupt feature and ground-true one which is assumed as the Gaussian feature sensing noise. As PCA is applied, different elements of x and dk are independent. Consider a classification task with L classes, the m-th element of x has a distribution of\n$$x_m \\sim \\frac{1}{L} \\sum_{l=1}^{L} \\mathcal{N} (\\mu_{l,m}, \\sigma^2_{l,m}),$$\nwhere $\\mathcal{N} (\\mu_{l,m}, \\sigma^2_{l,m})$ represents the Gaussian distribution cor- responding to the l-th class, $\\mu_{l,m}$ is the mean of m-th dimen- sion in the l-th class, $\\sigma^2_{l,m}$ is the variance of m-th dimension. In practice, the values of these parameters are estimated at the server in the training stage using the training data samples. The m-th element of dk has a distribution of\n$$d_{k,m} \\sim \\mathcal{N} (0,\\delta^2_{k,m}),$$\nwhere $\\delta^2_{k,m}$ is the feature noise variance. It can be pre- estimated by first estimating the ground-true feature vector by averaging massive noisy ones and then analyzing the variance between each local feature vector and the estimated ground- true one. Thereby, the m-th element of xk, given by\n$$x_{k,m} = x_m + d_{k,m},$$\nwhich has a distribution of\n$$x_{k,m} \\sim \\frac{1}{L} \\sum_{l=1}^{L} \\mathcal{N} (\\mu_{l,m}, \\sigma^2_{l,m} + \\delta^2_{k, m}).$$\n3) AirComp: To simultaneously access multiple devices to aggregate the local feature vectors for sensing and channel noise suppression, the technique of AirComp is adopted to reduce the communication overhead. For an arbitrary time slot m, all devices pre-code and transmit the m-th element of their local feature vectors, i.e., Xkm over the same resource block. Thereby, the received element at the server is given by\n$$\\hat{x}_m = \\sum_{k=1}^{K} h_k b_{k,m}x_{k,m} + n, 1 \\leq m \\leq M,$$\nwhere bk,m is the precoding scalar at device k, n is the channel noise with a distribution of $n \\sim \\mathcal{N} (0, \\sigma^2_n)$, and $\\sigma^2_n$ is the channel noise power.\nThen, by substituting the distribution of Xk,m in (5) into $\\hat{x}_m$, its distribution can be derived as\n$$\\hat{x}_m \\sim \\frac{1}{L} \\sum_{l=1}^{L} \\mathcal{N} (\\hat{\\mu}_{l,m}, \\hat{\\sigma}^2_m),$$\nwhere $\\hat{\\sigma}^2_m = (\\sum_{k=1}^{K} h_k b_{k,m})^2 \\sigma^2_{l,m} + \\sum_{k=1}^{K} h^2_k b^2_{k,m} \\delta^2_{k,m} + \\sigma^2_n$ and $\\hat{\\mu}_{l,m} = \\sum_{k=1}^{K} h_k b_{k,m} \\mu_{l,m}$"}, {"title": "4) Inference Accuracy Measured by Discriminant Gain:", "content": "In this work, inference accuracy is adopted as the design criterion instead of the traditional MSE in existing designs. Since the latter targets minimizing the distortion between the received feature vector and the ground-true one, it ignores that the same distortion level on different feature elements has different impacts on the inference accuracy [10]\u2013[12]. However, the instantaneous inference accuracy is unknown in the design stage before the feature vector is inputted into the AI model. To address this issue, discriminant gain is adopted as the surrogate. Specifically, consider a classification task with L classes, whose feature distribution is in (7). For an arbitrary class pair, say classes l and l', the discriminant gain between the two classes is\n$$G_{ll'} (x) = \\sum_{m=1}^{M} (\\hat{\\mu}_{l,m} - \\hat{\\mu}_{l',m})^2 \\frac{1}{\\hat{\\sigma}^2_m}.$$\nThe pair-wise discriminant gain in (8) represents the discerni- bility of the two classes in the feature space, as shown in Fig. 1. With larger discriminant gain, the two classes are better separated, leading to higher achievable inference accuracy."}, {"title": "B. Problem Formulation", "content": "Existing work adopts the metric of maximizing average pair-wise discriminant gain of all class pairs for enhancing the inference accuracy [10]-[12]. This, however, causes an unbalanced and low accuracy as mentioned before and as shown in the left side of Fig. 1. To address this issue, we propose a novel design criterion, which maximizes the minimum pair-wise discriminant gain over all class pairs. As a result, the class pair with the smallest distance can be well separated, resulting in enhanced achievable inference accuracy for all classes, as shown in the right side of Fig. 1. Besides, there are two kinds of constraints. One is the transmit power constraint for each device in each time slot. The other is the overall energy constraint of each device to transmit the whole feature vector. In summary, the problem is given by\n$$\\max_{\\{b_k\\}} \\min_{(l,l'>l)} G_{ll'} (x) = \\sum_{m=1}^{M} (\\hat{\\mu}_{l,m} - \\hat{\\mu}_{l',m})^2 \\frac{1}{\\hat{\\sigma}^2_m},$$\n$$s.t. b^2_{k,m} \\leq P_k, \\forall(k,m),$$\n$$\\sum_{m=1}^{M} b^2_{k,m} \\leq P_k, \\forall k,$$\nwhere Pk is transmit power threshold in each time slot and Pk is total power constraint of all time slots."}, {"title": "III. MINIMUM DISCRIMINANT GAIN MAXIMIZATION", "content": "(P1) is non-convex due to the complicated form of the objective function. To this end, the following variable trans- formation is applied to simplify (P1). For all class pairs (l, l' > l), we introduce\n$$T_{m,ll'} \\leq (\\hat{\\mu}_{l,m} - \\hat{\\mu}_{l',m})^2 \\frac{1}{\\hat{\\sigma}^2_m}, \\forall m.$$\nThen, denote $T = \\sum_{m=1}^{M} T_{m,l,l'}, \\forall (l, l' > l)$. Accordingly, it is easy to derive that\n$$T \\leq \\sum_{m=1}^{M} (\\hat{\\mu}_{l,m} - \\hat{\\mu}_{l',m})^2 \\frac{1}{\\hat{\\sigma}^2_m}, \\forall (l, l' > l).$$\nNext, by substituting T above into (P1), it can be equivalently derived as\n$$\\max_{T,\\{b_k\\}} T$$\n$$s.t. (C1) b^2_{k,m} \\leq P_k, \\forall(k,m),$$\n$$(C2) \\sum_{m=1}^{M} b^2_{k,m} \\leq P_k,\\forall k,$$\n$$(C3) T = \\sum_{m=1}^{M} T_{m,l,l'}, \\forall(l, l' > l),$$\n$$(C4) T_{m,l,l'} \\leq \\frac{(\\hat{\\mu}_{l,m} - \\hat{\\mu}_{l',m})^2}{\\hat{\\sigma}^2_m}, \\forall (l, l' > l,m).$$\n(P2) is still a non-convex problem. In the sequel, an equivalent d.c. form is first derived and the problem is addressed by the typical method of SCA [19]. To begin with, by substituting $\\hat{\\mu}_{l,m}, \\hat{\\mu}_{l',m}$ and $\\hat{\\sigma}^2_m$ in (7) into the fourth constrain of (P2) and with some simple derivations, we can get\n$$\\frac{\\sum_{k=1}^{K} h_k b_{k,m})^2(\\mu_{l,m} - \\mu_{l',m})^2}{T_{m,l,l'}} \\geq \\sum_{k=1}^{K} h^2_k b^2_{k,m} (\\sigma^2_{l,m} + \\delta^2_{k,m}) + \\sigma^2_n,$$\nfor all (l, l' > l, m). In (11), it is observed that both sides of the inequality are convex. Define the left-side term as\n$$Q_{m,l,l'} (\\{b_{k,m}\\}, T_{m,l,l'}) = \\frac{\\sum_{k=1}^{K} h_k b_{k,m})^2(\\mu_{l,m} - \\mu_{l',m})^2}{T_{m,l,l'}},$$\nfor all (l, l' > l,m). It is no less than its first- order Taylor expansion at $\\{\\tilde{b}_{k,m}^{[t]}\\}, \\tilde{T}_{m,l,l'}^{[t]}\\}$, which is denoted as $\\tilde{Q}_{m,l,l'} (\\{b_{k,m}\\}, T_{m,l,l'})$. That says, $Q_{m,l,l'} (\\{b_{k,m}\\}, T_{m,l,l'}) \\geq \\tilde{Q}_{m,l,l'} (\\{b_{k,m}\\}, T_{m,l,l'})$.\nThereby, the method of SCA can be utilized to solve (P2) via iteratively solving the following approximated convex problem, say (P3), by using solution in the last iteration as the reference point of the first-order Taylor expansion.\n$$\\max_{T,\\{b_k\\}} T$$\n$$s.t. (C1), (C2), (C3),$$\n$$(P3) \\sum_{k=1}^{K} h^2_k b^2_{k,m} (\\sigma^2_{l,m} + \\delta^2_{k,m}) + \\sigma^2_n \\leq \\tilde{Q}_{m,l,l'} (\\{b_{k,m}\\}, T_{m,l,l'}), \\forall(l,l' > l,m).$$\nBesides, (P3) can be solved by the common convex algorithms using e.g., the cvx toolbox."}, {"title": "IV. PERFORMANCE EVALUATION", "content": "A. Experiment Setup\nConsider a single-cell network with a radius of 500 meters, where the server equipped with a single-antenna base station is located at the center and K single-antenna devices are randomly distributed. The channel gain model for each device k is $H_k = |\\phi_k h_k|^2$, where \u03c6k and hk denote the large-scale and small-scale fading propagation coefficients, respectively.\nA human motion recognition inference task is considered, where there are four classes including child walking, child pac- ing, adult walking, and adult pacing. A high-fidelity wireless sensing simulator proposed in [20] is applied for generating sensory data samples. In the training phase, the model is trained using 6400 data samples to get well-trained AI models at the server. In the inference phase, a noise-corrupted raw sensory data sample is generated for each device, from which local feature vectors are extracted. At the server, all local feature vectors are aggregated for completing the downstream inference task. For testing the inference accuracy, 1600 inde- pendent inference experiments are conducted. Two AI models are adopted for the task. One is a support vector machine (SVM). The other is a multi-layer perceptron (MLP) neural network with two hidden layers, each with 80 and 40 neurons respectively. By default, the number of devices, the feature noise variance, the number of extracted feature dimensions, the transmit power, and the stepsize of SCA are set as K = 3, $\\delta^2_{k,m} = 0.4$, M = 12, Pk = 12dBm, and a = 0.7 respectively, unless specified otherwise.\nFor comparison, we consider three schemes as follows.\nBaseline: All the parameters are allocated following the task-oriented AirComp scheme in [12], which aims at maximizing average pair-wise discriminant gain.\nWeighted subspace centroid: All the parameters are allo- cated following the traditional AirComp scheme in [21], whose design criterion is MMSE.\nJoint optimization of all feature elements (our proposal): All parameters are set follow the proposed scheme."}, {"title": "B. Experimental Results", "content": "In this part, the experimental results are shown. The relation between inference accuracy and the minimum discriminant gain is first presented, followed by the comparison among the three schemes."}, {"title": "1) Inference accuracy v.s. discriminant gain:", "content": "Fig. 3 illustrates the relation between the minimum pair-wise discriminant gain and inference accuracy. It shows that the inference accu- racy rises as the minimum pair-wise discriminant gain grows for both models. That's because a larger minimum pair-wise discriminant gain leads to a larger distance for arbitrary class pairs in the feature space, hence resulting in larger inference accuracy."}, {"title": "2) Inference accuracy v.s. number of devices:", "content": "Fig. 4 shows the inference accuracy of the SVM and MLP models in terms of various device numbers. From the figure, the performance of the MMSE-based scheme, say the scheme of weighted subspace centroid, decreases with an increasing number of devices, since larger devices lead to a lower MMSE due to the requirement of channel equalization for all devices, as well as MMSE cannot characterize the inference accuracy. The inference accuracy of both task-oriented AirComp schemes grows as the number of devices increases. That's because the diversity of data can be fully utilized and the sensing noise of different devices is adaptively suppressed by allowing different receive power of different devices. More importantly, our proposed scheme has the best performance due to the novel metric of maximizing the minimum discriminant gain of all class pairs and the joint optimization of all feature elements."}, {"title": "3) Inference accuracy v.s. transmit power:", "content": "Fig. 5 presents the inference accuracy of the SVM and MLP models under various transmit power levels. For both models, the inference accuracy of all schemes increases as transmit power rises, since more transmit power can suppress the channel noise without doubt. For similar reasons, our proposed scheme has the best performance.\nThe experimental findings show that the proposed scheme has the best performance and verify our theoretical analysis."}, {"title": "V. CONCLUSION", "content": "This work proposed a task-oriented AirComp scheme for edge-device co-inference, which addresses the issue of un- balanced classification accuracy by maximizing the minimum pair-wise discriminant gain and jointly optimizing the long- term transmission over multiple time slots. It opens several directions like extending this scheme to the multiple-input multiple-output systems, using unlicensed spectrum [22], the scenario of the large language model, etc. Particularly, since AirComp has been shown a promising technique for imple- menting federated learning (see e.g., [23]), task-oriented Air- Comp for federated learning is an attractive research direction."}]}