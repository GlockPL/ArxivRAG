{"title": "A Tutorial on the Design, Experimentation and Application of Metaheuristic Algorithms to Real-World Optimization Problems", "authors": ["Eneko Osaba", "Esther Villar-Rodriguez", "Javier Del Ser", "Antonio J. Nebro", "Daniel Molina", "Antonio LaTorres", "Ponnuthurai N. Suganthan", "Carlos A. Coello Coello", "Francisco Herrera"], "abstract": "In the last few years, the formulation of real-world optimization problems and their efficient solution via metaheuristic algorithms has been a catalyst for a myriad of research studies. In spite of decades of historical advancements on the design and use of metaheuristics, large difficulties still remain in regards to the under- standability, algorithmic design uprightness, and performance verifiability of new technical achievements. A clear example stems from the scarce replicability of works dealing with metaheuristics used for optimization, which is often infeasible due to ambiguity and lack of detail in the presentation of the methods to be repro- duced. Additionally, in many cases, there is a questionable statistical significance of their reported results. This work aims at providing the audience with a proposal of good practices which should be embraced when conducting studies about metaheuristics methods used for optimization in order to provide scientific rigor, value and transparency. To this end, we introduce a step by step methodology covering every research phase that should be followed when addressing this scientific field. Specifically, frequently overlooked yet crucial aspects and useful recommendations will be discussed in regards to the formulation of the problem, solution encoding, implementation of search operators, evaluation metrics, design of experiments, and considerations for real-world performance, among others. Finally, we will outline important considerations, challenges, and research directions for the success of newly developed optimization metaheuristics in their deployment and operation over real-world application environments.", "sections": [{"title": "1. Introduction", "content": "The formulation and solution of optimization problems through the use of metaheuristics has gained an increasing popularity over the last decades within the Artificial Intelligence community [1, 2]. This momentum has been propelled by the emergence and progressive maturity of new paradigms related to problem modeling (e.g., large scale optimization, transfer optimization), as well as by the vibrant activity achieved in the Swarm Intelligence and Evolutionary Computation fields [3, 4, 5]. In this regard, there are several crucial aspects and phases that define a high-quality research work within these specific areas."}, {"title": "2. Problem solving using Metaheuristics: a Long History with Methodological Uncertainties", "content": "Optimization problems and their efficient handling has received extensive attention throughout the years. The appropriate solution of extraordinarily complex problems usually entails the use of significant computa- tion resources [13, 14, 15]. This computational complexity, along with their ease of application to real-world situations, has made of the optimization field one of the most intensively studied by the current artificial intelligence community. This scientific interest has led to the proposal of a plethora of solution approaches by a considerable number of researchers and practitioners. Arguably, the most successful methods can be grouped into three different categories: (1) exact methods, (2) heuristics, and (3) metaheuristics. As stated previously, this study will sharpen its focus on the last of these categories.\nMetaheuristics can be divided into different categories depending on their working philosophy and in- spiration [16, 17]. For a better understanding of the situation described in this paper, it is interesting to put emphasis on a specific branch of knowledge related to metaheuristics and optimization problem solv- ing: bio-inspired computation [18]. In the last two decades, a myriad of bio-inspired approaches have been applied to different problems, some of which have shown remarkable performance. This growing attention has led to an extraordinary increase in the amount of relevant published material, usually focused on the adaptation, improvement, and analysis of a variety of methods that have been previously reported in the specialized literature.\nSeveral reasons have contributed to this situation. Probably, the most important cornerstone was the birth of the branches which are known today as Evolutionary Computation and Swarm Intelligence [19, 20]. The main representative techniques within these streams are the genetic algorithm (GA, [21, 22]), particle swarm optimization (PSO, [23]), and ant colony optimization (ACO, [24]). Being more specific, it was PSO, thanks to its overwhelming success and novelty, the one that decisively influenced the creation of a plethora of bio-inspired methods, which clearly inherit its main philosophy [25].\nIn spite of the existence of an ample collection of classical and sophisticated solvers proposed in both past and recent literature, an important segment of the research community continues scrutinizing the natural world seeking to formulate new metaheuristics that mimick new biological phenomena. This fact has entailed the seeding of three different problems in the community, which are now deeply entrenched. We list these problems below:\n\u2022 Usually, the proposed novel methods are not only unable to offer a step forward for the community, but also augment the skepticism of critical researchers. These practitioners are continuously questioning the need for new methods, which apparently are very similar to previously published ones. Some studies that have discussed this problem are [26], [27] or [5].\n\u2022 The uncontrolled development of metaheuristics contributes to grow an already overcrowded literature, which is prone to generate ambiguities and insufficiently detailed research contributions. This uncontrolled growth is splashing the research community with a large number of articles whose contents is not replicable and in some cases, it may be even unreliable. The reason is the ambiguity and lack of detail in the presentation of the methods to be replicated and the questionable statistical significance of their reported results.\n\u2022 Most of the proposed methods are tested over synthetic datasets and generally compared with classical and/or representative metaheuristics. This fact also involves the generation of two disadvantages. First of"}, {"title": "3. Solving Optimization Problems with Metaheuristic Algorithms: a Reference Workflow", "content": "In this section, we introduce the reference workflow that describes our methodological proposal. Our main intention is to establish this procedure as a reference, considering its adoption a must for properly conducting both theoretical and practical rigorous, thorough, and significant studies related to metaheuristic optimization. Thus, Figure 1 and Figure 2 represent this reference workflow, which will serve as a guide for the remaining sections of this paper.\nThus, we have used two different high-level schemes to describe our methodology graphically. The first one (Figure 1) is conceived as the general scheme, and it contemplates the problem description (3), analysis, and development of the selected solution approach (5-6), and the deployment of the solution (4 On the other hand, the second scheme (Figure 2) is completely devoted purely to the research activity (stage (6 in Figure 1). In another short glimpse, we can also see how we have devised two different development environments. Specifically, problem description, baseline analysis, and research activity are conducted in a laboratory environment 1, while the algorithmic deployment is conducted in an application environment 2\nFocusing our attention on the first workflow, the whole activity starts with the existence of a real problem that should be efficiently tackled. The detection of this problem and the necessity of addressing it, triggers the beginning of the research, whose first steps are the conceptual definition of the problem and the definition and analysis of both functional and non-functional requirements (3). It should be clarified here that this first description of the problem is made at a high-level, focusing on purely conceptual issues. Due to the nature of this first step, the presence of final stakeholders is highly recommended in addition to researchers and developers.\nRegarding functional requirements, it is hard to find a canonical definition [41], but they can be referred to as what the product must do [42] or what the system should do [43]. Furthermore, the establishment of functional requirements involves the definition of the objective (or objectives in case of multi-objective prob- lems) function to be optimized and the equality and inequality constraints (in case of dealing with a problem with side constraints). On the other hand, there is no such consensus for non-functional requirements. Davis defines them as the required of overall attributes of the system, including portability, reliability, efficiency, human engineering, testability, understandability and modificability [44]. Robertson and Robertson describe them as a property, or quality, that the product must have, such as an appearance, or a speed or accuracy properties [42]. More definitions can be found in [41]. In any case, these objectives are crucial for the proper election of the solution approach, and the non-consideration of them can lead to the re-design of the whole research, involving both economical and time costs. This paramount importance is the reason why, in this work, we put special attention on highlighting the impact of the consideration or non-consideration of these non-functional objectives (of a fair and comprehensive description of the non-functional requirements). In fact, many of the research contributions available in the literature are focused on the pure fulfillment of functional requisites, making them hard to be properly deployed in the real world. Thus, we can see the meeting of non-functional_objectives as the key for efficiently transitioning from the laboratory (1) to the application environment (2)\nAfter this first conceptual phase, it is necessary to scrutinize the related literature and scientific commu- nity for finding an appropriate baseline (5). The main objective of this process is to find a public shared library or baseline that fits with the previously fixed functional requirements. In the positive case, the next step is to analyze whether these findings are theoretically compliant with all the outlined non-functional requirements. The published research activity is usually carried out under trivial and unofficial laboratory specifications with a short-sighted design mostly concentrated on the \"what\" (functional objectives) but not on the feasibility of \"the how\". The recommended good practice is filtering out research that has al- legedly gone through from the lab hypothesis to the demanding real-world conditions. On the contrary, when assuming that the baseline does not satisfy or reckon these non-functional requirements, the research activity will first include procedures to evaluate the baseline viability so as to decide whether the baseline is still a potential workaround or has to be discarded (6). Finally, if both actions are positively solved, the investigation is considered ready to go through the deployment phase (4\nAt this point, it is important to highlight that the so-called Algorithmic Deployment for Real-World Application phase (4) (detailed in Section 7), considered as a cornerstone in our methodology, can receive"}, {"title": "4. Problem Modeling and Mathematical Formulation", "content": "Once the analyst and domain expert have agreed upon the conceptual definition and the requirements to be met by the solution, the research activity gets started. All these inputs (conceptual description and functional/non-functional requirements) will be tracked along the whole workflow and be more approachable depending on the specific stage. At the problem modeling phase, the \"what\" contained in the conceptualiza- tion and functional requirements have to be perfectly clear and comprehensive enough to be fairly translated into a mathematical formulation."}, {"title": "4.1. Mathematical Formulation", "content": "The key steps to be followed are depicted in Figure 3 aiming at adequately translating a problem conception on paper into a precise mathematical formulation of an optimization problem:\n\u2022 Clearly state the objective/cost function $f(x)$ in charge of covering functional requirements and measure the quality and success of each assignment or solution. Try to infer as well the main characteristics of $f(X)$: linear/nonlinear, unimodal/multimodal, or continuous/discontinuous. In multi-objective scenarios, when the decision functions are conflicting, multiple criteria will play a part in the decision making process. Nonetheless, the stakeholder might narrow down the Pareto optimal/nondominated solutions by imposing some preferences."}, {"title": "4.2. Analyze Problem Complexity - Justify the Use of Metaheuristics", "content": "Once the mathematical formulation has been completed, the research team involved in the work at hand should justify with solid grounds the need for metaheuristics to solve it efficiently. Mathematical optimization is a long-standing discipline, which has been traditionally focused on convex objective functions and feasible sets [48]. Fortunately, there are already specific solvers (either exact or heuristics) suited to deal with this family of optimization problems, even to optimality when some specific conditions hold (e.g., linearity). Convexity ensures that every local optimum is a global optimum, hence avoiding common issues that motivate the use of heuristic and metaheuristic alternatives.\nUnfortunately, the majority of contributions addressing real-world optimization problems just neglect any discussion on the convexity and properties of their mathematical formulations. Instead, they directly resort to the use of metaheuristics, without any major discussion on whether they are really needed [27]. In this context, any prospective work along this line should pause at the following research questions:\n\u2022 Are the objective function(s) and constraint(s) analytically defined? Intuitively, certain real-world opti- mization scenarios do not allow for an analytical formulation of the optimization problem itself. Indeed, the complexity of systems and assets to be optimized (as occurs in e.g., industrial machinery) jeopardizes the derivation of closed-form formulae for the objectives and constraints to be dealt with. However, this does not imply that quality and feasibility cannot be evaluated for any potential solution, but rather that the system/asset at hand must be considered as a black-box model that can be queried for any given input (solution). In this case, when the use of algorithms that do not depend or rely on the problem's properties becomes properly justified, it paves the way for the use of metaheuristic algorithms.\n\u2022 Can the problem be modified or reformulated without compromising the imposed functional requirements? When the problem can be analytically defined, it might fail to comply with the mathematical properties that could allow exact methods and ad-hoc heuristics to be applied. For instance, even if the convexity of the objective(s) can be guaranteed, their linear or quadratic nature with respect to the optimization variables plays a crucial role in the adoption of exact linear and quadratic programming methods rather than optimization heuristics (e.g., gradient-based methods). At this point, it is strongly advised to examine strategies to reformulate (relax) the problem and mathematically simplify its objective(s) and constraint(s). These strategies include, among others, quadratic and linear transformations, constraint approximation via trust regions or Lagrangian relaxation [49]."}, {"title": "5. Algorithmic Design, Solution Encoding and Search Operators", "content": "The second phase to analyze after the problem modeling is the one devoted to the pure algorithmic design and development. Figure 4 summarizes the main aspects of this activity. As in the previous subsection, we have shown in the upper right corner the placement of this phase in the Research Activity workflow (Figure 2). As can be seen in this scheme, and following the guidelines highlighted in the previous sec- tion, this step receives as input an optimization problem, formulated adequately as one or more objective functions, a set of decision variables, and a group of constraints. Furthermore, a group of must-fulfilling non-functional requirements is also provided as input, which undoubtedly influences the designs and de- velopments conducted in this phase. This specific stage of the research can be reached from four different points:\n1. Following the natural flow of research methodology depicted in Figure 1, the metaheuristic design and implementation are conducted after the mathematical formulation of the problem (Section 4).\n2. If researchers have found a baseline that meets the same functional requirements of the problem at hand, but the theoretical compliance of all non-functional requirements established (step (5) in Figure 1) cannot be verified."}, {"title": "6. Performance Assessment, Comparison and Replicability", "content": "When the selection of the algorithms is carried out by considering previous reports and studies in the literature, this step is indeed not needed. However, it is quite frequent that good comparisons do not exist in the literature to make a reasonable decision. This implies that we have to conduct our own comparisons in order to select the algorithm that better meets our requirements. This section discusses on several aspects that must be considered to conduct a rigorous and fair experimentation to make that decision. Specifically, these topics are: experimental benchmark 6.1, evaluation score 6.2, fair comparisons among techniques 6.3, statistical testing 6.4, and replicability 6.5."}, {"title": "6.1. Experimental benchmark", "content": "This is usually the first decision researchers must face when designing the experimental evaluation of their proposal. In this regard, depending on the kind of contribution (more theoretical or more applied) the nature of the problems used in the experimentation might be different. In the first case, researchers would probably use synthetic benchmark functions to assess the performance or the advantages of the different proposals or considered algorithms. In the second case, the authors would normally propose a set of instances related to"}, {"title": "7. Algorithmic Deployment for Real-World Applications", "content": "Once we have completed the steps of the Lab Environment phase of Workflow 1, it's time to proceed with the second part of Figure 1, namely the Application Environment, which is focused on the algorithmic deployment for the real application at hand. As pointed out in Section 3, this phase receives as input either an algorithm implementation taken from an existing software package or an ad-hoc method defined in the algorithmic design step of Workflow 2. In both cases, this implementation should go through a verification process to determine whether it fulfills the functional and non-functional requirements to be deployed in a real environment. If this is not the case, then a new implementation should be addressed.\nWhen facing the development of a metaheuristic to be deployed in a real-world environment, several factors can lead to taking one of the following approaches: to implement the algorithm from scratch or to choose an existing optimization framework. Among these factors, we can consider:\n\u2022 Programming skills. If the development team has a high expertise then a choice is to determine whether it can afford to make an implementation from scratch. Consequently, the written code can be highly optimized, and thus it is more likely to meet the non-functional requirements, particularly those related to performance. The counterpart of this approach is that the code may be difficult to be updated, extended, and reused by other people (including the development team itself).\n\u2022 Using an existing optimization framework. The most productive approach to develop a metaheuristic is to build on existing frameworks. This way, most of the needed algorithmic components may be already provided, so there is no need to reinvent the wheel, and they can offer additional functionality (e.g., visualization, analysis tools, etc.). If a goal of the metaheuristic to be developed is to offer it to the community (in principle, as an open-source contribution), integrating it into a framework is probably the best choice. However, as a possible negative point, using a framework imposes the use of a set of existing base components, so the resulting implementation could not be as efficient as one developed ad-hoc, and thus non-functional requirements related to performance could be affected."}, {"title": "8. Summary of Lessons Learned and Recommendations", "content": "The final purpose of the methodology discussed heretofore is to avoid several problems, poor practices and practical issues often encountered in projects dealing with real-world optimization problems. As a prescriptive summary of the phases in which the methodology is divided, we herein provide a set of syn- thesized recommendations that should help even further when following them in prospective studies. Such recommendations are conceptually sketched in Figure 5, and are listed next:\n1. Problem modeling and mathematical formulation:\n\u2022 It should be strictly mandatory to clearly state the problem objectives, variables and constraints, considering all the practical aspects of the scenario at hand (e.g. users consuming the output, contextual factors affecting the validity of the solution, etc.)."}, {"title": "9. Research Trends in Real-world Optimization with Metaheuristics", "content": "Although the optimization research field has dealt with real-world problems throughout its long life, the diversity and increasing complexity of scenarios in which such problems are formulated in practice have stimulated a plethora of new research directions over the years aimed to manage their different particularities efficiently. In this section, we highlight several challenges and research directions that, given the current state of the art, we consider of utmost relevance for prospective studies in the confluence of real-world optimization and metaheuristics. Our envisioned future for the field is summarized in Figure 6, and elaborated in what follows."}, {"title": "9.1. Robust optimization and worst-case analysis", "content": "In real-world optimization scenarios, many sources of uncertainty may arise, from exogenous variables of the environment that cannot be measured and are not considered in the formulation anyhow, to the collected data that can participate in the definition of the objective function(s) and/or constraint(s). Furthermore, it is often the case that, in practice, the user consuming the solution given to the problem is willing to impose worst-case constraints assuming that such sources of uncertainty cannot be counteracted anyhow. In fact, the identification of the worst conditions under which the optimization problem can be formulated is usually much easier for the user than the derivation of efficient strategies to accommodate the uncertainty of the setup. This issue amplifies when tackling the problem at hand with metaheuristics, since the optimization algorithm itself induces an additional source of epistemic uncertainty that may compromise the requisites imposed on the worst case."}, {"title": "9.2. Translating real requirements into optimization problems", "content": "A few works have lately revolved around the methodological procedure for formulating an optimization problem, including the definition of its variables and constraints. Assorted tools have been very recently proposed for this purpose, including directed questionnaires [135] and algebraic modeling languages to describe optimization problems (see [136] and references therein). Despite these tools, there is a large semantic gap in practical cases between what the user consuming the solution to the problem truly needs, and what the scientist designing the optimization algorithm understands. Leaving aside non-technicalities that could potentially open this gap, two factors that impact most in widening this gap are 1) the capability of the user and the scientist to plunge into the discourse of each other, progressively coming to a point of agreement on what is needed; and 2) the capability of the scientist to effectively translate requirements from the application domain into algorithmic clauses.\nThe first factor depends roughly on both parties' social and empathetic skills, especially from the scientist who must understand the overall application context in which the problem is framed. A proper understanding of the problem, along with discussions held with the practitioner, can eventually unveil useful insights and hints that help in the problem formulation and the design of the algorithm. For this to occur, the scientist must assimilate all the details concerning the asset/system to be optimized, especially when the objective to be optimized and the imposed constraints cannot be analytically determined.\nThe second factor promoting the aforementioned semantic gap is more related to the methodology used for the translation between requirements and problem formulation. The issue emerging at this point is whether this process can be enclosed within a unified methodology that comprises all questions and decision steps to be followed for formulating a real-world optimization problem. Unfortunately, the question remains unanswered in the literature, and current practices evince that the definition of a real-world optimization problem is largely ad-hoc and subject to the expertise and modeling skills of the scientist. For instance, in most cases, the number of constraints imposed on a particular problem restricts the search space severely, to the point of modeling it as a constraint satisfaction problem in which the only goal of the solver is to produce a feasible solution. Metaheuristics suitable to deal with constraint satisfaction problems differ from those used for the optimization of an objective function (both single- and multi-objective), as the potential sparsity of the space where feasible solutions are located may call for an extensive use of explorative search operators and diversity-inducing mechanisms. However, there is no clear criterion for shifting in practice to this paradigm. Furthermore, the presence of multiple global optima (the so-called multi-modality of the problem's landscape) can be a critical factor for the design of the algorithm. Unless carefully considered from the very inception of the problem, multi-modality can give rise to solutions of no practical use due to non-modeled externalities that discriminate which solutions can be found in practice."}, {"title": "9.3. Hybridization of mathematical tools with metaheuristic algorithms", "content": "When addressing real-world optimization problems with metaheuristics, another relevant direction is the hybridization of these algorithms with methods from other disciplines for improved performance of the search process. Such an opportunity arises when the conditions under which the problem is formulated allows for the consideration of additional tools towards enhancing the convergence and/or quality of the solutions elicited by the metaheuristic algorithms. Therefore, the chance to opt for hybrid metaheuristic algorithms is bounded to the case under study and the functional and non-functional requirements imposed thereon, as the incorporation of new search steps in the algorithm might penalize the computational time, increase the memory consumption, entail the purchase of third-party software, or may impose any other similar demand."}, {"title": "9.4. Meta-modeling for real-world optimization", "content": "When dealing with physical assets/systems, the evaluation of the quality and/or feasibility of solutions produced over the metaheuristic search can be realized by complex simulation environments mapping the decision variables at their input to the values dictating their fitness/compliance with constraints . The use of digital twins in manufacturing or the design of structures in civil engineering are two recent examples of simulation environments that serve as a computational representation of large-scale complex systems, for which an analytical formulation of all their components and interrelations cannot be easily stated.\nFrom an optimization perspective, the use of simulators for problem solving (simulation-based optimiza- tion or simheuristics [142]) constitutes a straightforward approach to circumvent an issue that appears concurrently in real-world problems: the impossibility of formulating objective functions and constraints in mathematical form. Furthermore, depending on its faithfulness with respect to the modeled asset/system, the use of simheuristics in real-world optimization can also account for the uncertainty present in non- deterministic application scenarios under analysis in a scalable fashion. Consequently, the adoption of simulation-based optimization can ease the quantification of risk incurred by candidate solutions and alter- native hypothesis [143], which connects back to our prospects around the importance of risk in real-world optimization (Subsection 9.1)."}, {"title": "9.5. Automating algorithm selection and parameter tuning", "content": "We round up our prospects with a mention of parameter tuning, which is arguably among the main rea- sons for differences appearing between the in-lab design of a metaheuristic algorithm and its deployment in a"}, {"title": "10. Conclusions and Outlook", "content": "In this tutorial, we have proposed an end-to-end methodology for addressing real-world optimization problems with metaheuristic algorithms. Our methodology covers from the identification of the optimization problem itself to the deployment of the metaheuristic algorithm, including the determination of functional and non-functional requirements, the design of the metaheuristic itself, validation, and benchmarking. Each step comprising our methodology has been explained in detail along with an enumeration of the technical aspects that should be considered by both the scientist designing the algorithm and the user consuming its output. Recommendations are also given for newcomers to avoid misconceptions and bad practices observed in the literature related to real-world optimization.\nWe have complemented our prescribed methodology with a set of challenges and research directions which, according to our experience and assessment of the current status of the field, should drive efforts in years to come. Specifically, our vision gravitates around four different domains:\n\u2022 The consideration of risk as an additional objective to be minimized, and the massive adoption of robust optimization techniques, given the high uncertainty under which real-world optimization problems are formulated and the inherent stochastic nature of metaheuristic algorithms.\n\u2022 More reported evidences of the process by which real-world optimization problems are addressed, expand- ing the scientific value of prospective studies not only to the algorithm(s) and provided solution(s), but also to the inception of the problem and the storytelling themselves.\n\u2022 There is a need for efficient means to cope with the complexity of real-world problems during the meta- heuristic search, in which we claim that the hybridization with mathematical tools, meta-modeling, and machine learning surrogates will have an increasingly prominent role in the field.\n\u2022 The incorporation of intelligent methods to automate the selection and parameter tuning of the meta- heuristic algorithm, which requires current automated parameter tuning frameworks and meta-learning approaches to consider metrics related to functional and non-functional requirements imposed in real-world scenarios.\nWe hope that the methodology proposed in this article and our prospects serve as a guiding light for upcoming research works falling in the confluence between metaheuristic algorithms and real-world optimization. It is our firm belief that the inherent complexity and uncertainty of real-world problems has to be boarded with the methodological rigor required to ensure the practical value of the developed metaheuristics. Unless common methodological standards for real-world optimization are embraced in the future, a major gap will remain unbridged between academia, industrial stakeholders, and the society as a whole."}]}