{"title": "Map2Traj: Street Map Piloted Zero-shot Trajectory Generation with Diffusion Model", "authors": ["Zhenyu Tao", "Wei Xu", "Xiaohu You"], "abstract": "User mobility modeling serves a crucial role in analysis and optimization of contemporary wireless networks. Typical stochastic mobility models, e.g., random waypoint model and Gauss Markov model, can hardly capture the distribution characteristics of users within real-world areas. State-of-the-art trace-based mobility models and existing learning-based trajectory generation methods, however, are frequently constrained by the inaccessibility of substantial real trajectories due to privacy concerns. In this paper, we harness the intrinsic correlation between street maps and trajectories and develop a novel zero-shot trajectory generation method, named Map2Traj, by exploiting the diffusion model. We incorporate street maps as a condition to consistently pilot the denoising process and train our model on diverse sets of real trajectories from various regions in Xi'an, China, and their corresponding street maps. With solely the street map of an unobserved area, Map2Traj generates synthetic trajectories that not only closely resemble the real-world mobility pattern but also offer comparable efficacy. Extensive experiments validate the efficacy of our proposed method on zero-shot trajectory generation tasks in terms of both trajectory and distribution similarities. In addition, a case study of employing Map2Traj in wireless network optimization is presented to validate its efficacy for downstream applications.", "sections": [{"title": "Introduction", "content": "With the long-term evolution of cellular networks in terms of heterogeneity, density, and multi-band usage, the accuracy of user mobility modeling has become increasingly crucial for performance evaluation and optimization of wireless communication networks. In the realm of learning-based network optimization, involving resource management (Naderializadeh et al. 2021), user association (Gupta et al. 2024), and edge computing (Xu et al. 2023), user mobility models stand as the cornerstone for constructing training environments and digital twins (Tao et al. 2023) for artificial intelligence (AI) models like deep reinforcement learning (DRL) agents.\nMost existing network optimization studies employed random mobility models, typically the random waypoint model (Johnson and Maltz 1996) and the Gauss Markov model (Liang and Haas 1999), to represent user mobility patterns. While these models can partially simulate user movement, their direct adherence to random probability distributions causes a significant mismatch in the spatial distribution of users compared to real-world scenarios. This mismatch can lead to significant performance degradation when deploying these models in practice. Although this issue can be alleviated by incorporating real trace-based mobility models to some extent, user trajectories are often unfortunately inaccessible due to data acquisition costs and privacy concerns (Tabassum, Salehi, and Hossain 2019).\nThe urgent need for generating high-fidelity synthetic trajectories as alternatives to real ones has driven the exploration of learning-based trajectory generation methods. Over recent years, AI models such as generative adversarial network (GAN) (Goodfellow et al. 2020), sequence-to-sequence (Seq2Seq) (Sutskever, Vinyals, and Le 2014), and diffusion model (Ho, Jain, and Abbeel 2020) have been applied to trajectory generation with promising results (Zhang et al. 2020; Cao and Li 2021; Jiang et al. 2023; Zhu et al. 2023a,b). However, these methods typically require a substantial number of real trajectories to learn the specific trajectory distribution within an area, creating a paradox. That is, AI models struggle to generate realistic and useful trajectories without ample real trajectories, yet when real data becomes sufficient to create trace-based mobility models, the Al models tend to be redundant.\nInspired by zero-shot image generation (Ramesh et al. 2021), which enables the creation of images from descriptions unseen during training, we try to devise a similar approach for trajectory generation. This method, termed zero-shot trajectory generation, aims to generate realistic user trajectories for unobserved areas. The question arises: Can we apply zero-shot generation techniques to trajectory generation? More specifically, is there data that is both readily accessible and closely related to real trajectories, akin to the relationship between text and the images? The answer lies in street maps, which are usually open-source and available on platforms like OpenStreetMap\u00b9. Street maps exhibit a strong correlation with user trajectories as illustrated in Fig. 1, which respectively show the street map for a specific area, 100 trajectories in this area, each assigned a color, and a heatmap of the trajectory distribution. This correlation forms the foundation of our proposed methodology, which uses street maps as pilots in trajectory generation."}, {"title": "Related Work", "content": "Before introducing our proposed method, we review related works on trajectory generation and analyze the limitations that prevent these methods from achieving zero-shot generation capabilities.\nInitially, trajectory generation methods were developed for synthesizing mobility data to safeguard the privacy of data providers. Liu, Chen, and Andris (2018) first proposed to use GANs for trajectory generation, albeit without providing a detailed approach. TrajGAIL (Zhang et al. 2020) employed generative adversarial imitation learning (GAIL), combining DRL and GAN to generate trajectories through a series of next-location predictions. TrajGen (Cao and Li 2021) transformed trajectories into images and used a deep convolutional GAN (DCGAN) to generate virtual trajectory images. TS-TrajGen (Jiang et al. 2023) integrated GAN with the mobility analysis method, including the A* algorithm and mobility yaw reward, to enhance the model performance. DiffTraj (SynMob) (Zhu et al. 2023a,b) applied a diffusion model to generate synthetic trajectories while preserving spatial-temporal features extracted from real trajectories. These studies have demonstrated commendable performance in generating privacy-preserving synthetic trajectories.\nHowever, these methods fall short when it comes to zero-shot trajectory generation for unobserved new areas. Specifically, TrajGAIL simply samples actions from generated action probability distribution and constructs trajectory autoregressively, without the capacity to introduce data from new areas. Although TrajGen uses street map data to filter and calibrate generated trajectories through map matching (Newson and Krumm 2009), the generated trajectories adhere to the training set distribution, rather than that in new areas. Building further upon TrajGen, TS-TrajGen utilizes street maps to select and construct the best continuous trajectory with the A* algorithm. This process, however, remains confined to trajectories that adhere to the original distribution. Alternatively in a conditional generation manner, DiffTraj employs the diffusion model and incorporates prior knowledge of trip data, such as the travel time, average speed, and distance. While these complementary knowledge do improve generation performance, they do not enable the transfer of trajectory generation to new areas.\nIn contrast to these approaches, our Map2Traj method integrates the street map with complete information into the trajectory generation process via a diffusion model. Our training set encompasses a diverse range of trajectories and corresponding street maps from various areas, instead of area-specific trajectories, allowing the model to learn the intrinsic relationship between street maps and trajectories. These innovations endow our model with the unique capability for zero-shot trajectory generation. A comparative analysis of our method against existing works is detailed in Table 1."}, {"title": "Preliminary", "content": "In this section, we introduce the definitions and notations used in this paper.\nTrajectory: A trajectory is typically a sequence of location points consisting of latitude and longitude. For this paper focusing on wireless network optimization, trajectories are restricted to a relatively small-scale urban area, specifically a 1.92 km \u00d7 1.92 km square. We define a trajectory as a series of relative coordinates, denoted by $l = \\{c_1, c_2,..., c_n\\}$, where each $c_i$ is a coordinate $[x_i, y_i]$ with $\\{x_i, y_i\\} \\in [0,1920]$. Considering the spatial consistency of wireless channels, we discretize the coordinates $[x_i, y_i]$ to integer multiples of 10, focusing on macroscopic position changes. This allows us to easily transform the trajectory sequence into a 192\u00d7192 binary image for further processing. The transformation method between trajectory and image is well-documented in literature like (Endo et al. 2016), and it has been used in TrajGen (Cao and Li 2021).\nStreet Map: A street map is conventionally denoted as a graph, where edges correspond to road segments and nodes"}, {"title": "Problem Statement", "content": "The training set includes a set of street maps $M = \\{m^1,m^2,...,m^K\\}$ and corresponding sets of real-world trajectories $T = \\{L^1, L^2, ..., L^K\\}$. Each $L^i = \\{l^{i,1}, l^{i,2},..., l^{i,J} \\}$ is a set of J real trajectories within the area of street map $m^i$. The objective of zero-shot trajectory generation is to develop a generative model trained on this training set. For an unobserved street map $m^o \\notin M$, this model should be capable of generating synthetic trajectories that: 1) closely resemble real trajectories; 2) exhibit a spatial distribution akin to that of the real trajectory set; and 3) have an efficacy close to that of real trajectories in downstream applications and analyses."}, {"title": "The Map2Traj Approach", "content": "The key to zero-shot learning is to associate observed and unobserved objects through some form of auxiliary information, which encodes the inherent properties of objects (Xian, Schiele, and Akata 2017). In our study, the objects are trajectories following different area-specific distributions, while the auxiliary information is the street map. By understanding the relationship between trajectories and maps through extensive training data, Map2Traj generates synthetic trajectories for unobserved areas piloted by their street maps, that is, zero-shot trajectory generation.\nIn particular, our Map2Traj approach is based on the diffusion model, which consists of a forward diffusion process"}, {"title": "Forward Diffusion Process", "content": "The forward diffusion process in Map2Traj is a Markovian process that iteratively adds Gaussian noise $N(\\cdot)$ to a trajectory data $l_0 = l$ over T time steps:\n$q (l_{t+1} | l_t) = N (l_{t+1}; \\sqrt{\\alpha_t}l_t, (1 - \\alpha_t) I), \\\\$\n$q (l_{1:T} | l_0) = \\prod_{t=1}^{T}q (l_t | l_{t-1}),$\nwhere $\\alpha_t$ for $t = 1,2,...,T$ are hyper-parameters of the noise schedule, and $N(x; \\mu, \\sigma)$ represents the normal distribution of mean $\\mu$ and covariance $\\sigma$ that produces $x$. The forward process with $\\alpha_t$ is constructed to make $l_T$ virtually indistinguishable from Gaussian noise at the T-th step. The forward process at the t-th step can also be marginalized as follows:\n$q (l_t | l_0) = N (l_t; \\sqrt{\\gamma_t}l_0, (1 - \\gamma_t) I),$  \nwhere $\\gamma_t = \\prod_{i=1}^{t} \\alpha_i$. Additionally, the parameterization of the Gaussian distribution of the forward process allows a closed-form formulation of the posterior distribution of $l_{t-1}$ given ($l_0$, $l_t$). It follows\n$q (l_{t-1} | l_0, l_t) = N (l_{t-1}; \\mu, \\sigma^2I),$\nwhere $\\mu = \\frac{\\gamma_{t-1}(1-\\alpha_t)}{1-\\gamma_t} l_0 + \\frac{\\sqrt{\\alpha_t}(1-\\gamma_{t-1})}{1-\\gamma_t}l_t$ and $\\sigma^2 = \\frac{(1-\\gamma_{t-1})(1-\\alpha_t)}{1-\\gamma_t}$"}, {"title": "Reverse Diffusion Process", "content": "In Map2Traj, the reverse diffusion process, also known as the denoising process, is formulated as follows:\n$p_\\theta (l_{0:T} | m) = p (l_T) \\prod_{t=1}^{T} p_\\theta (l_{t-1} | l_t, m),$"}, {"title": "Training", "content": "Given a noisy trajectory $l_t$ sampling from Eq. (3), we have\n$l_t = \\sqrt{\\gamma_t}l_0 + \\sqrt{1 - \\gamma_t}\\epsilon, \\epsilon \\sim N(0, I)$\nwhere the goal is to recover the target trajectory $l_0$. Our neural network model is parameterized by $f_\\theta(m, l_t, t)$, conditioned on the street map m, a noisy trajectory $l_t$, and the noise level indicated by the time step t. Training of Map2Traj involves predicting the noise vector $\\epsilon$ by minimizing the mean squared error loss. That is,\n$\\min E_{m,l,t,\\epsilon}||f_\\theta (m, \\sqrt{\\gamma_t}l_0 + \\sqrt{1 - \\gamma_t}\\epsilon, t) - \\epsilon||^2$"}, {"title": "Inference", "content": "The sampling process of the diffusion model starts at pure Gaussian noise $l_T$, followed by T refinement steps. Given any noisy trajectory $l_t$, we can approximate the target trajectory by rearranging the terms in Eq. (6) as\n$l_0 = \\frac{1}{\\sqrt{\\gamma_t}} (l_t - \\sqrt{1 - \\gamma_t}f_\\theta (m, l_t,t)).$\nSubstituting estimate $\\hat{l_0}$ into Eq. (4), we parameterize the mean of $p_\\theta (l_{t-1} | l_t, m)$ in Eq. (5) as\n$\\mu_\\theta (m, l_t, t) = \\frac{1}{\\sqrt{\\alpha_t}} (l_t - \\frac{1-\\alpha_t}{\\sqrt{1-\\gamma_t}} f_\\theta(m, l_t,t)$\nAnd the variance of $p_\\theta (l_{t-1} | l_t, m)$ is approximated as $(1 - \\alpha_t)$, following the setting in (Ho, Jain, and Abbeel 2020). With this parameterization, the sampling can be executed iteratively as follows:\n$l_{t-1} = \\frac{1}{\\sqrt{\\alpha_t}} (l_t - \\frac{1-\\alpha_t}{\\sqrt{1-\\gamma_t}} f_\\theta(m, l_t,t)) + \\sqrt{1 - \\alpha_t}\\epsilon,$\nwhere $\\epsilon \\sim N(0, I)$."}, {"title": "Architecture of Map2Traj", "content": "The architecture of Map2Traj is based on a 192\u00d7192 U-Net model (Ronneberger, Fischer, and Brox 2015), with multiple modifications to improve its performance such as attention blocks (Oktay et al. 2018) and group normalization (Wu and He 2018). A distinctive feature of Map2Traj is the incorporation of street map data through concatenation, which allows the model to be conditioned on the spatial information inherent in the maps."}, {"title": "Other Technical Details", "content": "We also employ a few other techniques to further enhance the performance of Map2Traj.\nStreet Map Splitting While a single binary image can effectively convey the spatial layout of a street map, it falls short in depicting the distinct characteristics of various road types. In the OpenStreetMap dataset, roads are tagged with attributes such as Motorway, Primary, and Residential. To exploit these attributes, we categorize roads into multiple groups, create binary images for each group, and merge these into a multi-channel binary image. Due to the computational complexity of the diffusion model, we simplify this process by dividing the roads into two groups: major and minor roads, as illustrated in Fig. 2.\nData Augmentation We notice that the correlation between street map and trajectory, as shown in Fig. 1, remains consistent under transformations such as rotation and reflection. This inherent property can be leveraged for data augmentation during training. We randomly rotate and flip both street maps and trajectory data to enhance the generalization capability of Map2Traj."}, {"title": "Experiments", "content": "In this section, we evaluate the efficacy of Map2Traj in the zero-shot trajectory task by comparing the fidelity of generated trajectories with real ones. In addition, we employ Map2Traj in a popular task of wireless network optimization to validate its efficacy in practice."}, {"title": "Dataset Description", "content": "Map2Traj is trained using a real-world trajectory dataset from Xi'an, China, recorded in 2016 (Didi-Chuxing 2017), alongside the OpenStreetMap dataset of the same year. These datasets are sourced from the ChinaGEOSS Data Sharing Network\u00b2. The trajectories are all within the latitude range of 34.21 to 34.28 and the longitude range of 108.912 to 108.996. To avoid data leakage in the zero-shot generation, the training set is limited to longitudes between 108.912 and 108.974, while the test set extends from 108.974 to 108.996."}, {"title": "Evaluation Metrics", "content": "We employ a suite of metrics to evaluate the quality of generated trajectories, in terms of on both trajectory and distribution similarities.\nTrajectory Similarity\n\u2022 Edit Distance on Real Sequences (EDR): EDR (Chen, \u00d6zsu, and Oria 2005) quantifies the minimum number of operations required to make two trajectories match. A match is defined when the distance between corresponding points is less than a threshold of $T = 20$ meters.\n\u2022 Dynamic Time Wrapping (DTW): DTW (Berndt and Clifford 1994) calculates the squared Euclidean distance between two trajectories through a dynamic programming alignment algorithm.\nBoth metrics are widely used in mobility analysis (Tao et al. 2021).\nDistribution Similarity\n\u2022 Cosine Similarity: Cosine similarity is a widely used measure of similarity between two vectors. While it reflects the similarity between probability distributions, it falls short in expressing the spatial correlation between adjacent blocks in two-dimensional (2D) distributions."}, {"title": "Baseline Methods", "content": "Due to the limitation of existing learning-based methods for zero-shot trajectory generation, we primarily compare Map2Traj with traditional random mobility models.\nOne of the most commonly used models in wireless networks is the random waypoint model (RWP), where the trajectory is formed by constantly moving to a randomly chosen destination and then selecting the next one arbitrarily. To adapt this model to geographical constraints, we develop a variant, termed map-restricted random waypoint (M-RWP), where the destinations are confined within the street map area. The trajectory between points is determined using a breadth-first search (BFS) algorithm to ensure that the shortest path remains within streets.\nAdditionally, we considered the Gauss Markov model (GM), characterized by using a stochastic process to model changes in user velocity and direction. Similarly, we introduce the map-restricted Gauss Markov model (M-GM) to restrict user movements within street areas.\nDespite its lack of zero-shot trajectory generation capability, we include the state-of-the-art trajectory generation model DiffTraj (Zhu et al. 2023b), to benchmark the generation quality of our proposed model. It is important to note that for this comparison, DiffTraj was trained on the complete trajectory dataset (Didi-Chuxing 2017), including those from the test area. The relevant data is sourced from the DiffTraj-generated synthetic dataset, SynMob, provided by the authors of DiffTraj in (Zhu et al. 2023a)."}, {"title": "Generation Performance", "content": "We select the area depicted at the beginning of this paper as the test area. Fig. 3 displays the generated trajectories by all methods alongside corresponding heatmaps. Traditional random mobility models, i.e., RWP and GM, result in chaotic trajectories and heatmaps that bear no resemblance to the real-world patterns. While map-restricted models, M-RWP and M-GM, show some similarity in trajectories to real ones, they still fall short in distribution similarity due to the absence of a learning mechanism. As expected, DiffTraj demonstrates high similarity to real trajectories and heatmaps because it is trained directly on real data. Our proposed Map2Traj, even in a zero-shot scenario, produces results comparable to real trajectories and even surpasses DiffTraj in trajectory details. More experiment results are presented in the supplementary material."}, {"title": "Case Study of Map2Traj in Wireless Network", "content": "In this case study, we employ Map2Traj in wireless network optimization, specifically for the user association and load balancing tasks.\nSystem Model and Task Overview We consider a typical urban area, i.e., the test area in the last section, where base stations are densely deployed in a hexagonal pattern, with a 500 m interval. Each base station possesses multi-band capabilities, supporting connections at 3.7 GHz with a 40 MHz bandwidth and 0.7 GHz with a 10 MHz bandwidth. Users move continuously within this area, as illustrated in Fig. 4, connecting to base stations based on a user association policy. Traditional user association methods that maximize signal-to-interference-plus-noise ratio (SINR) can lead to load imbalances and frequent handovers, resulting in user rate degradation when users are not uniformly distributed. An advanced user association strategy is essential to balance network loads and minimize handovers, thereby enhancing user experience and connection stability."}, {"title": "Mehthodology", "content": "Even without considering the prediction problem related to handover, solving the integer linear programming problem for user association is unfeasible due to real-time requirements and computational complexity arising from numerous users. In this context, current works primarily employ DRL to address this problem. However, the direct training of DRL agents within the real-world wireless network is fraught with challenges, including prohibitive trial-and-error costs and the risk of compromising the quality of service (Feriani and Hossain 2021). Consequently, constructing a realistic training environment is crucial for applying DRL in wireless network optimization. While there is extensive research on wireless channel measurement and modeling, studies on user mobility models are limited. The use of random mobility models, including RWP and GM, prevalent in current studies (Zhao et al. 2019; Naderializadeh et al. 2021; Gupta et al. 2021), does not ensure the efficacy of DRL agents when applied to real-world scenarios. To mitigate this, we propose the adoption of Map2Traj as the user mobility model in training environments to en-"}, {"title": "Case Study Setup and Metrics", "content": "The main purpose of this case study is to examine whether there is a performance degradation for DRL agents trained with traditional random mobility models and deployed in the real environment and whether the introduction of Map2Traj can alleviate such a phenomenon. The case study consists of two phases. Initially, DRL agents are trained in environments based on various mobility models, including RWP, GM, M-RWP, M-GM, and Map2Traj. After achieving convergence, these agents are deployed into the real environment where user movements adhere to real trajectories to assess performance. The performance of a DRL agent trained directly in the real environment is also provided as a benchmark for optimal performance.\nTo focus on mobility model comparisons, wireless channels are kept constant across different environments, using the urban macrocell path-loss model from 3GPP (3GPP 2020) and the shadow fading model implemented via the sum-of-sinusoids method, as used in QuaDRiGa (Jaeckel et al. 2018). The DRL method employed here is the state-of-the-art proximal policy optimization (PPO) algorithms (Schulman et al. 2017), with the actor-network built on a long short-term memory (LSTM) network (Hochreiter and Schmidhuber 1997) to incorporate memory capabilities. Performance metrics encompass the 5th percentile user rate (5% rate) to evaluate cell-edge performance, and the logarithmic mean of all user rates, which serves as an indicator of the overall utility of the wireless network."}, {"title": "Results", "content": "We delineate the comparative performance of DRL agents across various training environments in Table 3, and provide a GIF in the supplementary material to dynamically illustrate user movement across various mobility models. Upon achieving adequate convergence, it is observed that all DRL agents notably surpass the traditional Max SINR approach. Subsequently, these agents are deployed in the real scenario, and the results are presented in Table 4. Consistent with our expectations, agents trained with random mobility models exhibit substantial performance degradation, in some cases deteriorating to levels comparable to"}, {"title": "Conclusion", "content": "In this paper, we delve into the correlation between street maps and trajectories, introducing a novel Map2Traj method based on a diffusion model to achieve zero-shot trajectory generation. While prior research has successfully generated trajectories for specific regions using real datasets, we are the first to directly generate synthetic trajectories for new and unobserved areas. Extensive experiments demonstrate our method outperforms the traditional random mobility model and even the state-or-the-art area-specific model in terms of trajectory and distribution similarities with real ones. Furthermore, through a case study focused on wireless network optimization, we validate that trajectories generated by Map2Traj exhibit comparable efficacy to real ones for downstream applications. In future work, we intend to investigate additional applications of Map2Traj in the wireless communication realm and further enhance its performance and compatibility for areas of varying sizes."}]}