{"title": "A Survey of Anomaly Detection in In-Vehicle Networks", "authors": ["\u00d6vg\u00fc \u00d6zdemir", "M. Tu\u011fberk \u0130\u015fyapar", "P\u0131nar Karag\u00f6z", "Klaus Werner Schmidt", "Demet Demir", "N. Alpay Karag\u00f6z"], "abstract": "Modern vehicles are equipped with Electronic Control Units (ECU) that are used for controlling important vehicle functions including safety-critical operations. ECUs exchange information via in-vehicle communication buses, of which the Controller Area Network (CAN bus) is by far the most widespread representative. Problems that may occur in the vehicle's physical parts or malicious attacks may cause anomalies in the CAN traffic, impairing the correct vehicle operation. Therefore, the detection of such anomalies is vital for vehicle safety. This paper reviews the research on anomaly detection for in-vehicle networks, more specifically for the CAN bus. Our main focus is the evaluation of methods used for CAN bus anomaly detection together with the datasets used in such analysis. To provide the reader with a more comprehensive understanding of the subject, we first give a brief review of related studies on time series-based anomaly detection. Then, we conduct an extensive survey of recent deep learning-based techniques as well as conventional techniques for CAN bus anomaly detection. Our comprehensive analysis delves into anomaly detection algorithms employed in in-vehicle networks, specifically focusing on their learning paradigms, inherent strengths, and weaknesses, as well as their efficacy when applied to CAN bus datasets. Lastly, we highlight challenges and open research problems in CAN bus anomaly detection.", "sections": [{"title": "I. INTRODUCTION", "content": "Modern vehicles can be regarded as complex Internet of Things (IoT) devices [1], equipped with multiple Electronic Control Units (ECU) [2] that communicate through in-vehicle networks. ECUs connect sensors and actuators via constantly transmitting and receiving data containing vehicle parameters that vary from engine functions and other sensory information to entertainment and convenience features. Several standard communication buses constitute the medium of communication, among which, Controller Area Network (CAN) [3] is the most extensively used message-based protocol.\nCAN bus was developed by Bosch in the mid-1980s to enable in-vehicle communication. Unlike other communication networks such as switched Ethernet, CAN broadcasts messages to the entire network instead of forwarding them from one point to another. CAN bus allows only one message to be transmitted at a time. A unique identifier (ID) in the CAN message determines the priority of the message in traffic. The transmitted message reaches all nodes and a node itself decides to either receive the message or ignore it. Each CAN message carries data from different sources such as sensors and actuators. Depending on the importance of the enclosed signals, the transmission frequency of these messages on the CAN bus can vary. These messages can be further associated with the receive time as the message timestamp.\nContinuously evolving CAN bus data contain valuable information about the status of the vehicle, which can be exploited to extract patterns to predict and forecast the future of the equipment [4]. Information extraction at scale requires data-oriented methods to come into play since static rule-based specifications easily get over-complicated and become incompetent as data volume soars.\nVehicles, being complex structures, are prone to anomalies, with the origin of anomalies not being trivially identified due to numerous interacting parts in rapidly changing conditions [4]. Spotting deviations from the usual behavior is essential in ensuring safety, comfort, and longevity. Thus, the primary task emerges as detecting anomalies relying on collected data by making use of methods that learn from observations, namely the machine learning models [5].\nAnomaly detection is a topic that has garnered significant attention across various communication networks, with IoT networks standing out as one of the most extensively studied domains. However, the distinctive features of the CAN communication protocol set anomaly detection in CAN networks apart from that in IoT networks. A modern vehicle consists of many subsystems containing interconnections between ECUs, sensors, and actuators. The increasing complexity and number of subsystems amplify the difficulty of detecting anomalies and faults within CAN networks. The broadcast type of transmission on the CAN bus and the limited length of the data field in each CAN message make the encryption and authentication of transmitted messages difficult, which makes the CAN network more vulnerable to malicious attacks or intrusions to disrupt message timing and content, which cause abnormal behaviors in different functions of the vehicle.\nResearch interest in anomaly detection in in-vehicle networks has increased in recent years. Searching in the abstracts, titles, and keywords in the Scopus database with the query of ((\"Controller Area Network\" OR \"CAN Bus\" OR \"in-vehicle networks\u201d) AND (\"anomaly detection\" OR \"intrusion detection\")), one can see the increase in the number of conference papers, journal papers and reviews published from 2015 to 2023 in Figure I.\nThis study aims to review the techniques and datasets used for anomaly detection in in-vehicle networks. For this purpose, first, we give a general summary of time series anomaly detection and the studies on this subject for the reader to understand the similarities and differences between the approaches applied for time series anomaly detection and CAN bus anomaly detection. The main focus of this survey is the studies for in-vehicle anomaly detection, more specifically CAN bus anomaly detection. To this aim, we selected 85 conference papers and journal articles from the Scopus database, that propose at least one in-vehicle anomaly detection or intrusion detection method and are cited at least once. The survey focuses on specifically CAN bus anomaly detection, other communication environments such as Ethernet are out of the scope. We reviewed and included articles published between 2015 and 2023.\nThere exist related surveys reviewing in-vehicle anomaly detection. The study in [6] presents a taxonomy of possible cyber-security threads and detection methods for connected vehicles. While its primary objective is to provide a comprehensive framework for understanding the subject matter, it does not specifically delve into anomaly detection techniques. The survey study in [7] focuses on security approaches for in-vehicle communication and also gives a brief overview of intrusion detection methods. Similarly, [8] presents a com-prehensive review of intrusion detection systems specifically tailored for CAN bus networks. However, it predominantly addresses vulnerabilities and threats about in-vehicle systems, and the breadth of intrusion detection methods covered in their survey remains somewhat constrained. The studies [9]\u2013[12] present a comprehensive examination of intrusion detection methods, with a particular emphasis on attacking strategies and detection algorithms. Notably, these works lack an extensive review of datasets and emerging deep learning techniques, areas that our survey study comprehensively covers. A recent survey [13] gives a review of in-vehicle security issues, vulnerabilities, and malware/intrusion detection methods. The authors provide a comprehensive analysis of malware detection methods. Nevertheless, there is limited information on intrusion detection in this study. Another survey [14] on the domain presents CAN bus attacks and countermeasures. It examines the related intrusion detection methods by dividing them into ECU hardware characteristic-based and CAN packet-based methods. Among the CAN packet-based methods, machine learning and deep learning methods are only briefly reviewed. The literature review conducted within the scope of this survey study revealed that a comprehensive survey on anomaly detection for in-vehicle networks is lacking, including a detailed review of datasets and techniques that include both traditional and novel algorithms applied to this problem. We think that this survey will be a useful guide for researchers in industry and academia working on anomaly detection in in-vehicle networks.\nThe main contributions of this survey can be summarized as follows:\n\u2022\tA broader review of methods and datasets used for CAN bus anomaly detection is presented.\n\u2022\tBoth statistical and rule-based methods and novel deep learning techniques are included in the review.\n\u2022\tAdditionally, a summary of time series anomaly detection approaches and datasets is presented to give a broad understanding of the subject.\nThe rest of the paper is organized as follows. Section II describes the overview of anomaly detection on time series, including anomaly detection algorithms and evaluation metrics. A summary of data preparation and machine learning techniques for anomaly detection on the CAN bus is presented in Section III. Section IV gives a summary of public datasets used in anomaly detection research, including both time series and CAN bus datasets. Section V discusses the advantages and disadvantages of the methods featured in the previous section. Finally, Section VI concludes the paper and mentions future directions in the domain."}, {"title": "II. OVERVIEW ON TIME SERIES ANOMALY DETECTION", "content": "Observations exhibiting an order and correlation in the temporal dimension are referred to as time series [15]. Depending on the sampling, change of temporal values in time series can be even or irregular [16]. Time series with one variable are called univariate, while the ones across multiple dimensions are termed multivariate, and time series data, as a collection of time series, is usually large and continuously changing across various dimensions [17].\nThe terms anomaly, outlier, and novelty refer to data points that deviate significantly from the rest of the observations and tend to appear interchangeably in the literature [18]\u2013[20]. The phrase anomaly will be used throughout the rest of this paper.\nAnomalies can be classified as point anomalies and collective anomalies [21]. Point anomalies are instances where an anomaly can be identified by examining a single data sample in a dataset without contextualizing it with the surrounding points. In time series analysis, point anomalies occur when specific data points exhibit abnormal behavior compared to either the broader series or their immediate neighboring data points. Collective anomalies represent outliers within correlated data samples that are assessed collectively. In the context of time series analysis, collective or subsequence anomalies refer to consecutive data points whose temporal behavior is deemed unusual. For instance, if two successive signal values indicating a vehicle's speed surpass the vehicle's acceleration limit, this would constitute a collective anomaly. When evaluating these signal values individually, they may fall within the vehicle's speed limits, thereby not qualifying as point anomalies."}, {"title": "A. Summary of Techniques Used for Time Series Anomaly Detection", "content": "The processing of both univariate and multivariate time series necessitates tailored data preparation steps, which can vary significantly based on the chosen processing approach. For streaming multivariate time series, a common practice involves the application of sliding windows, often with the possibility of overlap, each of fixed length, across the data channels [22]. Alternatively, the fading window strategy that assigns higher weights to more recent observations while diminishing the effects of aging ones, and the landmark window model as an ever-expanding window are employed in the literature [21].\nConcerning univariate time series, point outliers can be detected by parametric statistical thresholding for observed and expected values [23]. Prediction-based methods that use the past data to predict subsequent values such as autoregressive models [24] and deep neural networks [25] are alternative approaches. These methods calculate the error between predicted and observed values and identify the anomalies based on the error score. Alternatively, distance-based methods [26] focus on a point's local neighbors, and identify anomalies in case of insufficient neighbors.\nIn detecting point anomalies within multivariate time series, one approach involves employing univariate anomaly detection algorithms individually on each time-dependent channel within the multivariate dataset. Alternatively, prediction-based techniques like vector autoregressive models can be extended to a multivariate context [27]. Another strategy entails utilizing di-mensionality reduction methods such as Principal Component Analysis (PCA) to derive a low-dimensional representation of the data. Subsequently, deviations are identified by comparing the reconstructed low-dimensional projection with the origi-nal observed time series. An alternative reconstruction-based method involves employing autoencoders [28] to learn repre-sentations within the multivariate data. Similar to univariate techniques, multi-dimensional distance-based approaches [29] are also suggested for detecting anomalies in multivariate time series data.\nDiscovering collective anomalies introduces a more challenging problem due to the variable length and periodicity of the sequences [23]. Hence, complex feature extraction techniques are required to end up with powerful representations of the sequences. For univariate series, the simplest approach is to extract subsequences from a series to identify the sequences that are dissimilar to the majority. Using data reflecting normal behavior, anomalies can be detected with defining thresholds. Alternatively, series can be compared to external exemplar time series [30]. Using past subsequences to predict the future values within a particular horizon to gather prediction errors as anomaly scores is yet another approach [31]. When it comes to detecting collective anomalies in multivariate time series, deep learning algorithms take the lead.\nAnomaly detection methods can be categorized into three learning paradigms: supervised, semi-supervised, and unsupervised approaches. The supervised approach involves mapping inputs to outputs using labeled data, requiring a dataset with annotated input-output pairs. Various classification algorithms are utilized for anomaly detection in time series across differ-ent domains. For instance, in the realm of real-time hub motor anomaly detection, multi-layer perceptrons (MLP) have been employed [32]. Additionally, Convolutional Neural Networks (CNN) have been applied in studies such as [33] and [34] for classifying cybersecurity attacks in network traffic data.\nIn semi-supervised learning, machine learning models are provided with a combination of large amounts of unlabeled data and a small quantity of labeled data, constituting weak su-pervision. Semi-supervised approaches for time series anomaly detection typically involve training a model exclusively on normal data, with anomalies discerned as patterns diverging from this norm. For instance, [35] adopts Generative Ad-versarial Networks (GANs), where the generator learns the distribution of a multivariate time series solely from normal data, generating reconstructed samples. Simultaneously, the discriminator is trained to differentiate between normal and anomalous data. Similarly, autoencoders have been utilized in semi-supervised anomaly detection strategies. [36] and [37] employ autoencoders on normal data to construct a lower-dimensional feature representation known as the latent space, which is anticipated to exhibit pronounced variations in anomalous instances.\nUnsupervised techniques, such as Fuzzy c-Means (FCM), are employed in fault diagnosis for automobile suspension systems [38]. These methods initially assume the presence of only a cluster representing normal instances. As new data points are introduced, this cluster expands or splits based on a predefined threshold of distance to fault lines connecting existing cluster centers. This approach allows for the detection of anomalies without prior knowledge of fault instances.\nMoreover, recent advancements in federated learning [39], [40] and homomorphic encryption [41] for anomaly detection on IoT data highlight the paradigm of processing data in a distributed manner without knowledge of its content."}, {"title": "B. Evaluation Metrics", "content": "Anomaly detection is often framed as a binary classification problem, where the negative class encompasses normal cases and the positive class encompasses anomalous cases. To evaluate the performance of an anomaly detector, common metrics used in classifier evaluation can be employed. However, since anomaly detection datasets typically consist of unbalanced data, with normal samples far outnumbering anomalous ones, relying solely on a single metric like accuracy can be misleading. Therefore, in anomaly detection studies, multiple metrics are usually assessed rather than just one, to provide a more comprehensive evaluation of the detector's performance.\nWhere TP, FP, TN, and FN represent true positive, false positive, true negative, and false negative respectively, definitions of common classification metrics are listed below:\nAccuracy: Accuracy is defined as the ratio of the number of correct predictions and the total number of predictions, as given in Equation 1.\n$Accuracy = \\frac{TP+TN}{TP+TN+FP+FN}$ (1)\nPrecision: Precision defines how many of the positive predictions are correct, as given in Equation 2.\n$Precision = \\frac{TP}{TP+FP}$ (2)\nRecall: Recall, also called sensitivity and True Positive Rate (TPR), defines how many of the positive cases are correctly predicted, as given in Equation 3.\n$Recall = \\frac{TP}{Actual\\ Positive} = \\frac{TP}{TP+FN}$ (3)\nF-score: F-Score is defined as the weighted harmonic mean of precision and recall, where $\u03b2$ is a real positive factor indicating the weight of recall in the formula, as given in Equation 4.\n$F_\\beta = (1 + \\beta^2) \\times \\frac{precision \\times recall}{(\\beta^2 \\times precision) + recall}$ (4)\nFalse Negative Rate: FNR defines how many anomalies the detector missed on average, as given in Equation 5.\n$FNR = \\frac{FN}{Actual\\ Positive} = \\frac{FN}{TP+FN}$ (5)\nFalse Positive Rate: FPR, also called false alarm rate, defines how many positive predictions of the detector were wrong on average, as given in Equation 6. It is desirable to have a low false alarm rate in anomaly detection.\n$FPR = \\frac{FP}{Actual\\ Negative} = \\frac{FP}{TN + FP}$ (6)\nTrue Negative Rate: TNR, also called specificity, defines how many negative predictions of the detector are correct on average, as given in Equation 7.\n$TNR = \\frac{TN}{Actual\\ Negative} = \\frac{TN}{TN+FP}$ (7)\nAUC: AUC, short for Area Under the Receiver Operating Characteristic (ROC) Curve, is a metric used to assess a model's ability to discriminate between classes. It quantifies the overall performance of the classifier by calculating the area under the ROC curve, with values ranging from 0 to 1. A higher AUC value indicates superior classifier performance."}, {"title": "III. ANOMALY DETECTION ON CAN BUS", "content": "Anomaly detection within in-vehicle networks holds significant relevance in the context of condition-based predictive maintenance facilitated by machine learning within the automotive industry. Predictive maintenance, a field extensively explored in the literature, revolves around real-time monitoring of vehicle equipment status [4].\nIntrusion detection emerges as a critical application of anomaly detection within in-vehicle networks, especially considering the vulnerabilities inherent in the CAN bus. Various forms of intrusions, such as unexpected packet insertion, ECU removal, or corruption, pose significant risks, potentially resulting in critical errors and loss of vehicle control. Consequently, there is a pressing need for systematic research efforts to address these concerns.\nThe existing literature extensively covers various approaches to anomaly detection within in-vehicle networks, categorizing them based on data preparation procedures and employed methodologies, as summarized in Table ??. Subsequently, we will delve into a detailed examination of data preparation techniques and anomaly detection approaches in the following sections."}, {"title": "A. CAN Bus Data Preparation for Anomaly Detection", "content": "Traffic logs of CAN messages consist of timestamps and CAN packet contents. Over the CAN bus, four types of frames are exchanged: Data Frames to exchange data, Remote Frames to request transmissions of particular IDs, Error Frames to indicate bus errors, and Overload Frames to inject delays between Data or Remote Frames [42]. Concerning anomaly detection, only successfully transmitted CAN data frames are of interest. They comprise several fields [43], of which the most relevant ones are the arbitration field and the data field. The arbitration field holds the data for identification (ID) and the data field contains the actual vehicle data, which can be of length up to 8 bytes as specified by the Data Length Code (DLC), which is part of the control block. The lower the CAN ID, the more prioritized it is, and its adjacent field, the remote transmission request (RTR) bit is dominant only when information from another party is required. Transmission errors are indicated in the cyclic redundancy check (CRC) and acknowledgment (ACK) fields. A CAN frame structure is shown in Figure 2.\nECUs continuously transmit CAN messages related to their functions. Multiple CAN IDs are assigned to each ECU and two distinct ECUs usually do not send packets with the same CAN ID. The information on the ECU origins of messages is not public [44]. CAN specification of messages differ greatly among the manufacturers, and even the vehicle models, while the CAN data frame structure is standardized [45]. Consequently, directly extracting actual readings by inspecting raw log data is not always possible unless manufacturers disclose the necessary proprietary information. However, once the distribution of messages is analyzed, CAN messages tend to contain data associated with constant and multi-value fields, counters, or continuous sensory readings [46]. The underlying semantics can be deciphered to a certain extent via reverse engineering through comparison with On-Board Diagnostics (OBD) responses [47], and LibreCAN is an example software package for the task [48]. Since the direct translation of CAN message contents is not always possible, most methods utilize low-level encoding of messages directly to deduce anomalies.\nUsing fixed-length overlapping sliding windows, time-independent features are extracted using ID and data payload portions of CAN messages, such as the number of packets and their associated statistical moments, the distance between data contents [49], the number of distinct IDs, the sum of DLC fields [50], counting vector per ID [51], and entropy calculation based on the distribution of IDs [52].\nSome studies tend to focus on ID and data fields of CAN messages separately in data preparation. The content of data fields is often treated as features, extracted from traffic logs at various levels such as bit-level [45], byte-level [53], [54], or represented as 16-set hexadecimal values [55] and decimal values [56]. Furthermore, network traffic can be regarded as sequences of IDs represented either as binary or hexadecimal strings [2]. Alternatively, it can be visualized as images constructed from IDs in their raw bit form [43] or one-hot encoded vectors for each hexadecimal digit, stacked on top of each other within predefined windows [57]. Traffic data can be filtered by CAN IDs and data payload portions of filtered IDs can be used separately to generate subsequences as input to forecasting problems [58] or CAN IDs and data field values can be used as integer-encoded features per record on their own [59]. CAN IDs and respective data fields can also be viewed as one-hot encoded categorical features in conjunction with a time variable that holds the time difference between two successive occurrences per CAN ID [60], [61].\nWhenever the meaning of the payload in CAN messages is disclosed to the researcher, particular sensory readings can be grouped to form datasets of multivariate time series of measured variables [62]\u2013[65]. Moreover, irregularly sampled varying numbers of signal values within the CAN traffic can be directly used within dedicated machine learning components as is [66] or as subject to further sampling to transform the signals into regular multivariate time series [67]. Alternatively, signal data is extracted from the physical layer of the CAN bus, such as the voltage differences by using oscilloscopes to be represented as time series. Multiple time-domain and frequency-domain features are extracted on the corresponding signals [44], [68]."}, {"title": "B. Anomaly Detection Methods on CAN Bus", "content": "This section offers a comprehensive overview of the tech-niques outlined in the taxonomy illustrated in Figure 3. Table I provides a summary of high-performing anomaly detection approaches trained and evaluated on public datasets. The table includes the learning methods, datasets used, and evaluation metrics/scores reported in the respective studies. The evalua-tion scores represent the average performance across all attack types.\n1) Statistical Methods: Frequency-oriented features are ex-tracted over sliding windows that have fixed-length in time, and anomaly detection can be carried out by calculating test statistics to compare window features with historical averages to point out significant differences to be decided as anomalies [49]. Frequency analysis methods such as wavelet transforma-tion are also utilized for the analysis of behavior profiling of CAN traffic to detect the changes indicating anomalies [69]. Alternative approaches to detect abnormal patterns in the CAN traffic contain the analysis of time intervals of CAN messages [1], [70], [71], signal propagation time [72], and changes in payload bytes [73].\nSeveral approaches are based on generating fingerprint models using the statistical characteristics of ECUs. One approach proposes calculating clock offsets based on timestamps of CAN messages and predicting the temperature of ECUs at different driving conditions to find the abnormal cases that are different from the fingerprint model of ECUs [74]. Alternative approaches exploit bit time in CAN frames [75], clock skews [76] and clock drift [77].\nStatistical thresholding over non-parametric nearest neigh-bor distances of extracted features [51] is another approach adapted in the literature. Survival analysis is a further statistical method in which CAN messages are divided into chunks and the survival rate of individual CAN IDs in a chunk is measured for thresholding to detect anomalies [78].\nFurthermore, time series analysis using statistical modeling algorithms such as Autoregressive Integrated Moving Average (ARIMA) is employed for windowed sequences, whose pre-diction errors are adapted as anomaly scores [79]. Based on the assumption that frequency-related features exhibit certain degrees of similarity in normal traffic streams, the divergence of a window from known patterns can be assessed by cosine similarity to note anomalies [50]. Extracting finite sequences of IDs that appear on normal traffic data to build a white list of allowed occurrences and comparing them to the patterns encountered in attacks is useful to detect particular anomalies with high precision [46], [80]. The proposed methods work well against insertion and deletion attacks that yield the detected anomalies, however, they cannot be generalized to all anomalies.\nWhen the actual parameters of a vehicle are extracted from CAN messages, domain knowledge and disclosed specifications provided by the manufacturer can be utilized to establish correlated sensory readings. These correlated readings can then be used in a regression setting to predict certain parameters based on the values of others [62]. The error between observed and estimated values indicates the anomaly score. Whenever the communication matrix is provided, following the signal extraction procedure, static checks based on rules can also be incorporated as an initial processing step to deduce well-known anomalies, which is followed by an application of more sophisticated methods on the extracted features [81]. An alternative approach proposes checking the abrupt changes in correlations of sensory readings [64].\n2) Supervised Machine Learning Methods: When multivariate time series of CAN bus package contents or actual sensory readings are fully labeled for normal and anomalous cases, the problem transforms into a classification setting. To accomplish this classification, model-related heuristics such as anomaly scoring via average path length in an Isolation Forest [92] can be used. Additionally, methods such as entropy analysis with sliding windows [84], [93], [94] and Bloom filters [95] have been explored for anomaly detection in this context. As a probabilistic graphical model, Bayesian networks are trained in a supervised manner to classify CAN Bus attacks [96]. In [52], Extreme Gradient Boosting (xgboost) is used as a classifier constructed on decision trees for anomaly detection. Traditional machine learning algorithms such as Random Forests, Support Vector Machines, a mixture of Gaussians and ensemble classifiers of these methods [44], [63], [97] are also used in CAN bus anomaly detection.\nMLPs are utilized in [45] to classify normal and attacked CAN packets. Additional research [54], [59], [98] also em-ploys MLP-based models for intrusion detection. Furthermore, [99] introduces a novel multi-labeled hierarchical classification approach to detect anomalies and classify CAN attack types. [100] introduces a supervised model combining Long Short-Term Memory (LSTM) with MLPs. In a similar vein, [101] employs LSTMs to develop a binary classifier capable of detecting anomalies within in-vehicle networks by capturing long-term dependencies. Moreover, LSTMs find widespread application in various studies such as [102]\u2013[104], focusing on multi-class classification of diverse attack types.\nVarious studies integrate deep neural networks with other machine learning techniques and data analysis methods to develop robust classifiers. For instance, [105] introduces a classification model that combines Feed Forward Neural Networks (FFNNs) with cosine-similarity. Moreover, [106] in-troduces an anomaly detection framework comprising two stages: the first stage utilizes statistical characteristics of CAN messages and specific rules, while the second stage incorporates FFNNs. Additionally, [107] proposes a LeNet-based model trained with transfer learning for detecting malicious attacks. In [43], a CNN-based model utilizing Inception and Residual Networks (ResNet) algorithms is proposed. This model is complemented by a data assembly module that reshapes sequential data into 2D input, enabling direct feeding of CAN bus bit-streams to the network. RNN and CNN-based modules are often combined for anomaly detection. [87] proposes a framework combining GRU and CNN. Similarly, [82] constructs a classifier using a hybrid architecture of ResNet and LSTM. Here, ResNet is applied to filter time series data and extract distinctive features, while LSTM units are subsequently employed alongside a ResNet module to extract temporal information from the sequences. Regarding CAN bus intrusion detection, more sophisticated deep learning methods based on global attention on CNNs employing dilated causal convolutions [108] that operate on CAN message sequences have been proposed.\n3) Semi-supervised Machine Learning Methods: To address the challenge of detecting unseen anomalies and effectively handling class imbalance in in-vehicle networks, semi-supervised approaches have been proposed for anomaly detection. In these methods, Generative Adversarial Networks (GANs) are repurposed, where the generator is trained to produce synthetic instances resembling normal data. Subsequently, the discriminator utilizes the generated fake data for training instead of specific anomalous data. This approach enables the discriminator to detect unseen anomalies effectively. Several other approaches also explore similar strategies [57], [109]\u2013[111].\nAnother extensively used approach in semi-supervised anomaly detection involves leveraging only normal traffic data within variational autoencoders. In this method, the reconstruction error is adapted as the anomaly score [112]. Deep Contractive Autoencoders (DCAE) [56] incorporate an explicit regularizer on the latent representation through the Frobenius norm of the Jacobian matrix of all encoder activation sequences to detect particular attacks on the CAN bus. CANet [66], a sophisticated autoencoder architecture, is adapted to CAN Bus traffic data format by feeding induced variable signal values of CAN IDs into dedicated LSTM heads. Next, the size is reduced in the bottleneck layer and all known signals of the traffic are instantaneously reconstructed. By considering multiple CAN messages, the authors have managed to detect even more subtle attacks to a certain extent. Alternatively, by grouping correlated signals within evenly sampled time series, RAEs can be separately trained, whose anomaly scores are combined to yield final predictions [67]. CANnolo [113], INDRA [90], Ensemble IDS [89], and [83] exploit LSTM autoencoders and Gated Recurrent Unit (GRU) autoencoders. CANShield [88] comprises multiple CNN-based autoencoders and employs an ensemble method for the final detection of anomalies on the CAN bus.\nUsing One-Class Support Vector Machines (OCSVM) in the form of Support Vector Data Description (SVDD) to learn the boundaries of the normal input in a higher dimensional space is another typical semi-supervised method, which categorizes the outsiders as anomalies [63], [114]. [86] proposes a model using OCSVM with a modified bat algorithm. Additionally, [115] introduces a hybrid approach combining OCSVM with wavelet decomposition. Another method proposed for learning irregular patterns in the separating boundaries involves Support Vector Data Description (SVDD) with a Gaussian kernel [116]. Moreover, hybrid approaches based on a classification phase by CNNs to identify known faults, followed by Kalman filters with failure detectors that are trained exclusively on normal data are proposed [117].\nTransformers, known for their promising performance, espe-cially in Natural Language Processing (NLP) tasks and object detection, have recently been applied in CAN bus anomaly detection as well. In [118], a bidirectional Generative Pre-trained Transformer (GPT) is employed to detect anomalies by evaluating the negative likelihood value compared with a predefined threshold.\n4) Self-Supervised and Unsupervised Machine Learning Methods: Self-supervised learning has emerged as a powerful paradigm in machine learning, where models are trained to predict certain aspects of the input data without relying on external labels. This approach has gained significant attention in anomaly detection tasks, offering a promising avenue for learning representations directly from data without the need for extensive labeled datasets.\nBased on a history of observed values, future values can be forecasted by LSTM in a self-supervised fashion. Predicted sequences are assessed by loss functions that generalize over bit-level binary log loss through applying statistical or logarithmic transformations [55], [58]. Associated methods are more flexible in detecting a diverse catalog of known attacks, even though forecasting capabilities are intrinsically limited by the data used in training.\nA prominent self-supervised approach involves leveraging normal data exclusively to learn its underlying structures by conditioning an LSTM network to predict the next sequence. Through this process, the trained network generates long CAN ID sequences [2], [119]. During sequence generation, random noise is introduced via sampling from a Uniform Distribution, resulting in altered sequences known as the noised pseudo-normal instances. After obtaining a sufficient number of instances, a balanced classification is performed using a CNN to detect unseen anomalies. An alternative approach proposes combining LSTM-RNN with cosine similarity and Pearson correlation [120]. An additional approach, proposed in [91], suggests merging one-dimensional convolution with Bidirectional LSTM and an attention mechanism. This fusion aims to predict output signal values and determine anomalous points by evaluating whether the predicted output falls below a certain threshold. Similarly, [85], [121] propose exploiting LSTMs with an attention module.\nTo mitigate the challenges posed by the inherent class imbalance problem, researchers have adopted the triplet loss technique, widely used in face recognition within the few-shot learning paradigm, for CAN bus anomaly detection as well. This approach involves mining triplets of anchor, positive, and negative data packets in batches, aiming to minimize the distance between the encodings of positive samples and the anchor while maximizing it between negative samples and the anchor. Consequently, when an anomalous instance is introduced to the network, its learned representation should significantly differ from those of normal instances [122].\nAgainst more sophisticated attacks that do not alter the prominent characteristics of the in-vehicle network traffic, normal sequences of data payloads are decomposed into a trend, periodic components, and noise via Singular Spectrum Analysis (SSA). The resulting embedding matrix is then further subject to Singular Value Decomposition (SVD) onto which training vectors are projected and clustered to build up a centroid vector that represents normal sequences. Departure from the centroid constitutes the anomaly score for detecting abnormal behavior [123], [124].\nThere exist several unsupervised approaches applied for in-vehicle anomaly detection. Kohonen Self-Organizing Map (SOM) combined with K-means clustering that does not consider class labels to refine the results has been shown to detect more complex attack patterns [60], [125]. However, the method is constrained by known attack types, training takes a long time, and in case of evolving data retraining from scratch will be necessary. Furthermore, the observed variance in the model performance is quite high, leading to deteriorating performance in particular cases. Another unsupervised algo-rithm used for anomaly detection is Isolation Forest, which is based on decision trees. It identifies anomalies by recursively dividing the data to isolate outliers from the rest [126]. An alternative approach utilizes Hierarchical Temporal Memory (HTM) [127], a learning algorithm inspired by the human neocortex. HTM consists of layers arranged hierarchically, enabling the capture of temporal and spatial features from streaming data.\nUnsupervised approaches involve Local Outlier Factor [114], [128] and clustering of IDs and related parameters for multiple subsets of normal traffic patterns. These approaches check whether new points fall within the proximity of previously computed legitimate centroids for allowed limits to deduce anomalies at test time [42]. Even though this method detects several known attack types with excellence, since it considers the legitimacy of command parameters independently, it might fail to identify the cases in which the attacker changes parameters subtly, for example by copying previous values. Additionally, the performance is heavily affected by hyper-parameters involving cluster sizes and the number of neighbors, which will likely require re-adjustment when changes in normal behavior data are observed in time."}, {"title": "C. Recent Trends: Data Privacy and Explainability", "content": "Federated learning has gained traction recently, including automotive applications, due to its capacity to train machine learning models across edge devices while preserving data privacy and reducing the need for centralized data storage. Several approaches are proposed to address data privacy using federated learning for anomaly detection on in-vehicle networks. [129] utilizes directed attributed graphs from CAN message streams utilizing federated learning. [130] employs personalized federated learning on CAN bus data from various car manufacturers to enhance intrusion detection capabilities by preserving data privacy. Similarly, [131] proposes a privacy-preserving IDS solution for vehicle networks, using federated learning with CNNs to detect intrusions.\nWith the increasing complexity of AI models, there is a growing demand for transparency and interpretability in AI decision-making processes. Understanding how AI algorithms make decisions in automotive applications is crucial for ensuring trust and accountability. [132] applies Explainable Neu-ral Networks (xNN), using K-means clustering to determine feature importance, in intrusion detection. [133] improves intrusion detection by translating CAN message payloads into understandable signals, enabling the detection of zero-day attacks without relying on labeled datasets."}, {"title": "IV. PUBLIC DATASETS FOR ANOMALY DETECTION RESEARCH", "content": "In this section, we provide a summary of publicly available time series and CAN bus datasets commonly utilized in anomaly detection research. While public CAN bus datasets do exist, it is worth noting that anomaly detection studies on in-vehicle networks often rely on specialized datasets tailored for this purpose. Table II presents general-purpose time series datasets for anomaly detection, and Table III summarizes CAN Bus datasets for anomaly detection, each briefly described in the following sections."}, {"title": "A. General Time Series Datasets", "content": "In anomaly detection research, various publicly available time series datasets are commonly utilized. One such dataset is the Yahoo Webscope S5 dataset [134", "135": "is another multi-variate time series dataset"}]}