{"title": "Retail-GPT : leveraging Retrieval Augmented Generation (RAG) for building E-commerce Chat Assistants", "authors": ["Bruno Amaral Teixeira de Freitas", "Roberto de Alencar Lotufo"], "abstract": "This work described Retail-GPT, an open-source RAG-based approach\nfor building conversational chatbots for retail e-commerce. The system is built\naround a DIET classifier and a large language model (LLM) connected to an\nexternal search engine and databases. Our implementation specifically used the\nPython framework Rasa, Redis, SpaCy's en_core_web_lg pipeline, and\nOpenAI's GPT-40, both as the system's LLM and to simulate the external search\nmechanism.\nOur results indicate that while Retail-GPT can manage conversations,\nguide users through purchases by extracting personal information, make product\nrecommendations, and perform cart operations, it is not free from hallucinations\nor security issues. The approach demonstrates that although RAG has the\npotential to disrupt retail, there are still challenges to be addressed in future\nworks in order to build an application suitable for production environments.", "sections": [{"title": "Introduction:", "content": "Large Language Models (LLMs), especially following the release of OpenAI's GPT series, have\nsignificantly disrupted textual human-machine interaction. They have enabled the development of chat\nassistants also known as chatbots that engage in more natural conversations and better understand users' needs.\nWhen combined with Retrieval-Augmented Generation (RAG) [1] techniques, these models can interact with\nother software systems and expand the information encoded in their parameters with data retrieved from external\nsources.\nSome examples described in the literature include FACTS [2], NVIDIA's framework for building\nassistants that leverage enterprise data for enhancing employee productivity and Abbasian et al. [3] health agents,\nfocused on assisting users with healthcare-related tasks.\nAnother possible domain for such systems is online shopping and delivery services. With estimated global\nretail e-commerce sales surpassing 6.3 trillion US dollars in 2024 [4], developing alternatives to enhance the\ncustomer experience in online purchases holds significant commercial value. In this context, this work describes\nRetail-GPT, an original open-source RAG-based chatbot designed to guide users through product\nrecommendations and assist with cart operations, aiming to enhance user engagement with retail e-commerce and\nserve as a virtual sales agent. The goal of this system is to test the viability of such an assistant and provide an\nadaptable approach for implementing sales chatbots across different retail businesses."}, {"title": "Methods:", "content": "To develop Retail-GPT, the focus was on creating a cross-platform chatbot that could be easily adapted to\nmost e-commerce domains, avoiding reliance on the specific features of any chat application or the particularities\nof any commercial activity. The objective was to develop a system capable of engaging in natural conversations,\nmimicking human interaction, and guiding the user through the entire process of making a sale. It was crucial for\nthe chatbot to interpret users' demands accurately, check the availability of products by querying an external\nproduct search mechanism, and perform tasks like adding or removing products from users' carts.\nOne important aspect considered when designing such a system is that LLMs are unpredictable and prone\nto hallucination [5]. Because of this, our system does not put such models in charge of generating all the\nresponses, nor does it use them for tasks such as returning the users' cart state, processing payment method\ndecisions, or extracting delivery addresses. Another advantage of not using the LLM for generating all the\nresponses is the computational cost saved by, instead, employing a lighter Natural Language Processing (NLP)\napproach composed by a transformer-based message classifier and pre-written responses.\nFrom the user's perspective, as shown in Figure 1, a conversation with Retail-GPT starts with a set of\ncontrolled questions, called the initial form, through which data such as delivery addresses, zip codes or\nregistration information is obtained. After this initial step, the chatbot continues engaging in the conversation,\nproviding product recommendations according to the user's demands and performing cart additions or removals\naccording to the user's needs, all independently of buttons or any other form of restraining the format of the users'\nmessages. Finally, when the user indicates that their cart is complete, the chatbot starts another set of controlled\nquestions regarding the checkout process of the sale, with the confirmation of the cart and payment method\nspecification. The idea is that a business could customize such forms depending on the information it requires."}, {"title": "Results and Discussion:", "content": "The source code can be accessed through https://github.com/unicamp-dl/retailGPT. During qualitative\ntesting, it was verified that RetailGPT is capable of engaging in conversations that fulfill the objectives described\npreviously in the Methods section. Figures 3 and 4 show real conversations that exemplify the system's\ncapabilities in guiding a sale through cart operations and product recommendations.\nDespite the promising results, a non negligible amount of user's messages during testing resulted in errors\nby the LLM, that was not capable of generating the appropriate function call or interpreting the subtleties of the\nuser's intentions, making RetailGPT still not reliably suitable for production environments. Alternative approaches\nfor prompting the model could be tested in future works in order to minimize this problem. In this sense, adding a\nChain-of-Thought (CoT) [8] reasoning step before the production of the final answer or the function calls could\nenhance the system robustness. Besides that, ReAct [9] is a RAG technique that could substitute the function\ncalling approach, at the same time it adds a reasoning step. However, such modifications could, at best, minimize\nthe LLM's errors, with no guarantee of eliminating them.\nAdditionally, the system also has limitations regarding its ability to deal with unexpected scenarios, such\nas if the user asks the LLM to change his zip code, directly return the state of the cart or provide more in depth\ninformation about any of the products. More functions could be added to the prompt to encompass such\ninteractions, at the cost of increasing the complexity of the task delegated to the LLM.\nWhile it is difficult to quantitatively evaluate an application like RetailGPT\u2014due to the impracticality of\ntesting all the infinite ways a user could interact with the system and the heavy reliance on external software like\nthe chosen LLM and search mechanism (mocked in our implementation)\u2014the experiments below were conducted"}, {"title": "Conclusions:", "content": "This work described Retail-GPT, an open-source RAG-based approach\nfor building conversational chatbots for retail e-commerce. The system is built\naround a DIET classifier and a large language model (LLM) connected to an\nexternal search engine and databases. Our implementation specifically used the\nPython framework Rasa, Redis, SpaCy's en_core_web_lg pipeline, and\nOpenAI's GPT-40, both as the system's LLM and to simulate the external search\nmechanism.\nOur results indicate that while Retail-GPT can manage conversations,\nguide users through purchases by extracting personal information, make product\nrecommendations, and perform cart operations, it is not free from hallucinations\nor security issues. The approach demonstrates that although RAG has the\npotential to disrupt retail, there are still challenges to be addressed in future\nworks in order to build an application suitable for production environments."}]}