{"title": "RayLoc: Wireless Indoor Localization via Fully Differentiable Ray-tracing", "authors": ["Xueqiang Han", "Tianyue Zheng", "Tony Xiao Han", "Jun Luo"], "abstract": "Wireless indoor localization has been a pivotal area of research over the last two decades, becoming a cornerstone for numerous sensing applications. However, conventional wireless localization methods rely on channel state information to perform blind modelling and estimation of a limited set of localization parameters. This oversimplification neglects many sensing scene details, resulting in suboptimal localization accuracy. To address this limitation, this paper presents a novel approach to wireless indoor localization by reformulating it as an inverse problem of wireless ray-tracing, inferring scene parameters that generates the measured CSI. At the core of our solution is a fully differentiable ray-tracing simulator that enables backpropagation to comprehensive parameters of the sensing scene, allowing for precise localization. To establish a robust localization context, RayLoc constructs a high-fidelity sensing scene by refining coarse-grained background model. Furthermore, RayLoc overcomes the challenges of sparse gradient and local minima by convolving the signal generation process with a Gaussian kernel. Extensive experiments showcase that RayLoc outperforms traditional localization baselines and is able to generalize to different sensing environments.", "sections": [{"title": "1 INTRODUCTION", "content": "Location-based services have become ubiquitous in modern life, driving extensive research in localization techniques across both academia [1] and industry [2], [3], [4]. While Global Navigation Satellite Systems (GNSS) dominate outdoor positioning, wireless indoor localization has emerged as its essential counterpart, addressing the crucial need for positioning in indoor environments where GNSS signals cannot penetrate [5]. Drawing a parallel to how GNSS utilizes satellites as celestial reference points, indoor localization systems leverage indoor wireless infrastructure to determine the precise location of devices and targets. These systems have found widespread adoption across numerous applications, ranging from building management [5] and smart homes [6] to robot navigation [7] and security surveillance [8]. However, as these applications grow increasingly sophisticated, they demand ever-higher levels of localization accuracy.\nEarly wireless indoor localization systems rely on coarse-grained received signal strength (RSS) from multiple access points (APs) to determine target positions [9], [10], [11], [12], yielding relatively imprecise localization results. Recent advances have introduced more sophisticated approaches utilizing fine-grained channel state information (CSI) [13], [14], [15] and beamforming feedback information (BFI, a compressed version of CSI) [16], [17] for improved localization accuracy. However, these methods can only model and estimate a limited set of localization parameters, such as time of flight (ToF), angle of arrival (AoA), and angle of departure (AoD). The oversimplification inherent in these parameter-constrained approaches can neglect details and misrepresent the sensing scene, particularly when dealing with targets that cannot be adequately represented as point reflectors. Moreover, hardware limitations in bandwidth and antenna array size often result in poor range and angular resolution, further compromising localization accuracy.\nSeveral methods enhance localization accuracy by explicitly modeling and estimating sensing scenes: iLocScan [18] combines prior knowledge of wall configurations and super-resolution algorithms to simultaneously perform indoor source localization and space scanning. Similarly, mD-Track [19] employs an iterative path separation algorithm to distinguish signals reflected from targets of interest from those reflected by background structures, enabling estimation of Angle of Arrival (AoA) and Time of Flight (ToF) for multipath components. M\u00b3 [20] takes a different approach, leveraging the knowledge of nearby reflectors to achieve sub-meter localization using just a single Access Point (AP). However, these methods share a fundamental limitation: their modeling and estimation of the sensing scene remain coarse-grained: they attempt to represent complex real-world sensing scenes with simplistic reflectors at previously measured or coarsely estimated locations, an approach that is inherently under-parameterized.\nTo address this under-parameterization challenge, researchers have turned to deep learning (DL) networks, which offer vastly more parameters to implicitly represent the sensing scene [21], [22], [23]. These approaches achieve sub-meter-level accuracy by employing data-driven methods to train location classifiers or regressors that map wireless signal fingerprints to object locations based on wireless propagation characteristics. Despite their claimed impressive accuracy, these data-driven approaches suffer"}, {"title": "2 BACKGROUND AND MOTIVATION", "content": "In this section, we introduce the preliminaries of RT and investigate the impact of variation in scene parameters on CSI. We subsequently show that the sparse gradient region"}, {"title": "2.1 Preliminaries of Wireless RT", "content": "RT provides an efficient geometric approach to model EM wave propagation by simulating discrete rays between a transmitter (Tx) and receiver (Rx), accounting for key propagation phenomena such as reflection, scattering, and diffraction through interaction with the environment. This method has been widely recognized as a key enabler for various applications [29], [30]. Notably, RT can closely approximate solutions to Maxwell equations, which govern the underlying wave physics, while remaining computationally tractable even in complex scenarios where solving the full wave equations becomes impractical. Given the scene parameters I, including the geometries, physical properties of object material, along with the transceiver parameters, RT can render multiple propagation paths of wireless signals and produce corresponding CSIs H. Formally, the RT simulation process can be interpreted as a function \u0397 = R(I). In this paper, we focus on CSI as the state-of-the-art wireless indoor localization approaches all rely on CSI for accurate localization [13], [14], [15], [20], [24].\nIf we could reverse the RT simulation process R, we would be able to estimate the scene parameters I directly from the observed channel state information (CSI). While a direct inverse function R\u207b\u00b9(H) is intractable due to the complexity of wireless signal interactions, we can formulate this inverse problem as an optimization task. This approach requires two key components: first, a loss function L = g(H) that quantifies the discrepancy between real-world CSI observations and their simulated counterparts, where the gradient \u2202L/\u2202I guides the optimization of scene parameters; and second, a differentiable forward RT simulation process, which will be detailed in Section 3.2. This optimization-based inverse process elegantly unifies what has traditionally been treated as two distinct sensing paradigms: device-free [31] and device-based localization [14], as both object and transceiver parameters are inherently part the scene parameters I, and we will demonstrate the unified solution and its result in Section 3.2 and 5, respectively."}, {"title": "2.2 Inaccuracies of Scene Parameters", "content": "The accuracy of RT simulations is heavily dependent on scene parameters that are challenging to measure precisely in real-world environments. These parameters include both the exact localization of objects and their EM material properties, such as conductivity and relative permittivity. While floor plans can provide basic geometries and EM material properties, objects in physical environments often deviate from the coarse-grained models by several centimeters. Additionally, EM properties of the material measured in controlled settings, whether through empirical testing or vector network analyzer measurements, frequently differ from their real-world behavior. These inaccuracies in both geometry and EM properties of the material can significantly impact the accuracy of wireless signal simulations.\nTo demonstrate how inaccuracies in scene parameters affect wireless signal propagation, we model a typical indoor office environment and conduct experiments in the scene. Specifically, we use a Tx with vertically polarized antenna and an Rx with one antenna, both positioned 1 m above ground level, to acquire the CSI. We then shift a sofa 5 cm along the y-axis from its true position. For material EM property assessment, we maintain object positions while varying the floor's relative permittivity from 5.24 (ITU-R P.2040-2 [32] standard for concrete) to 10.0 (typical for wet concrete [33]). After performing RT simulations and measuring the CSI, we convert the frequency-domain CSI to time-domain power-delay profile using inverse fast Fourier transformation (IFFT) [34]. Our findings in Fig. 2 demonstrate that even minimal spatial displacement (only centimeters) significantly alters wireless signal propagation patterns. Similarly, changes in the floor's EM properties substantially affect energy distribution across all paths. These results demonstrate that accurate RT simulation fundamentally depends on the construction of detailed, high-fidelity sensing scenes, forbiding the direct use of coarse-grained scene models (e.g., those provided by floor plans)."}, {"title": "2.3 Optimization-Unfriendly Loss Landscape", "content": "The optimization problem in forward RT localization is non-convex, significantly limiting the effectiveness of gradient-based methods. To demonstrate the difficulty of optimization, we conduct experiments in both device-free and device-based scenarios using the RT simulator. The layout of the sensing scene is illustrated in Fig. 3a. For device-free localization, we use a vase as the localization target. Initially, the vase's ground-truth location is at coordinates ( - 1 m, 0 m). We relocate the vase to coordinates ( - 1 m, 1 m) and move the vase along the y-axis to the coordinates ( - 1 m, -1 m) with a step size of 0.05 m. Under the device-based setting, we also move the device along the direction vector ( - 2m, -1 m) to the coordinates ( - 2.5m, -2m) with a step size of 0.056m, initializing the device's position at coordinates ( - 0.5m, -1m) and the ground-truth position is at coordinates ( - 1.5 m, -1.5 m). The CSI when the device is at the ground-truth location is recorded as a reference value. We take the mean squared error (MSE) between the reference CSI and the simulated CSI as the loss. The procedure of position change and the associated loss are depicted in Fig. 3. Loss-d represents the loss in device-based settings, while loss-f represents the loss in device-free settings.\nAs illustrated in Fig. 3b, as the device continues to move, the loss exhibits continuous fluctuations. Within 20 to 40 steps, the loss shows significant fluctuations with an upward trend. However, within 0 to 20 steps, the loss remains relatively stable and is dominated by local fluctuations.\nWhen using gradient-based approaches, it is difficult to provide effective gradients to navigate the device to the correct position. As for the device-free localization, we can observe that changes in object position exert a minor effect on the loss, in contrast to variations in device-based settings. This results in a nearly flat loss curve in certain regions when the object is not close to the ground-truth position. This leads to insufficient gradient in the region. The gradient-based optimizer is not able to position the vase correctly due to the plateau in the loss landscape. Consequently, both device-free and device-based localization face the challenge of sparse gradients and local minima. For the sake of accurate localization, it is imperative for us to improve the optimization properties of RT."}, {"title": "3 SYSTEM DESIGN", "content": "In this section, we present RayLoc's design. We first explain the problem formulation of RayLoc. Subsequently, we explain the 3 steps of RayLoc's workflow, i.e., fully differentiable RT, high-fidelity background model construction, and gradient-enhanced localization, as shown in Fig. 4."}, {"title": "3.1 Problem Formulation", "content": "In this section, we explain the problem formulation of RayLoc. At its core, RayLoc solves an inverse problem of differentiable wireless ray-tracing that encompasses both scene parameter estimation and target localization. The scene is characterized by its EM environment parameters I = f(G, M, P\u1d1b, P\u0280, C\u1d1b, C'\u0280), which incorporate four fundamental components: geometric properties G, electromagnetic (EM) properties of materials M, transmitter and receiver positions P\u1d1b and P\u0280, and their respective antenna patterns C\u1d1b and C'\u0280.\nFor a scene containing N objects, each object i is fully described by its position P\u1d62, shape S\u1d62, and material properties M\u1d62. The shape S\u1d62 is represented by a 3D triangle mesh comprising a set of vertices V and a set of triangular faces F that connect these vertices. Each triangular face specifies its three vertices from V, formally expressed as F \u2282 V \u00d7 V \u00d7 V [35]. The complete scene model can thus be characterized by its geometry G = {P\u1d62, S\u1d62}\u1d62=1\u1d3a and material EM properties M = {M\u1d62}\u1d62=1\u1d3a. The target location P can represent either an object position P\u1d62, transmitter position P\u1d1b, or receiver position P\u0280, accommodating both device-free and device-based localization scenarios.\nWe approach this comprehensive inverse problem through a two-stage optimization framework. In the first stage, detailed in \u00a7 3.3, we estimate the background scene parameters I \\ P, explicitly excluding the target location P. This stage establishes a high-fidelity electromagnetic context essential for accurate localization. The second stage, presented in \u00a7 3.4, leverages this high-fidelity background scene to perform precise estimation of the target location P."}, {"title": "3.2 Fully differentiable Wireless RT", "content": "In this section, we present a wireless RT method that is fully differentiable, thus serving as a foundation for inverse optimization."}, {"title": "3.2.1 Wireless RT", "content": "As illustrated in Fig. 4, RT takes the scene model I as input and outputs the propagation paths between the transceiver antenna pairs, serving as a core enabler for wireless simulations. In this paper, our simulation is conducted using the shooting and bouncing ray (SBR) method, as it is deemed a more computationally efficient RT approach [36]. The basic concept behind the SBR is to launch multiple rays from Tx's antenna, recursively track the propagation paths according to Snell's law, and find the paths that can reach the Rx's antenna within a given depth, i.e., the maximum number of interactions tmax. Fig. 5 illustrates the process of SBR for a specific ray and the output propagation path.\nEach ray emitted from the Tx is defined by its origin Q\u2080 and an initial normalized orientation vector d\u2080. The emitted ray marches a distance t\u2080 along its initial direction d\u2080, interacting with the triangular primitive of an object in the scene model. The ray geometry can be represented as O(t) = Q\u2080 + t\u2080d\u2080. After interacting with the triangular face, the ray gains a new origin Q\u2081 and orientation vector d\u2081. It-eratively, the origin of the ray incident on the i-th triangular face is Q\u1d62\u208b\u2081, and its direction is d\u1d62\u208b\u2081 after i \u2013 1 interactions with the scene model. Let the i-th face be represented by three vertices V\u2081, V\u2082, V\u2083. The normal vector n of the face is a unit vector that can be calculated by V\u2081V\u2082 \u00d7 V\u2082V\u2083. The new origin Q\u1d62 is essentially the intersection point of the ray and the triangle, which should satisfy the ray geometry equation:\nQ\u1d62 = Q\u1d62\u208b\u2081 + t\u1d62\u208b\u2081d\u1d62\u208b\u2081,  (1)\nwhere t\u1d62\u208b\u2081 is the distance from Q\u1d62\u208b\u2081 to Q\u1d62 along the ray orientation vector d\u1d62\u208b\u2081. Additionally, the intersection point Q\u1d62 is also on the i-th face, therefore\nQ\u1d62 = (1 - m\u2081 - m\u2082)V\u2083 + m\u2081V\u2081 + m\u2082V\u2082, (2)"}, {"title": "3.2.2 CSI Generation", "content": "In the previous section, we investigate how paths propagate from the Tx's antennas to the Rx's antennas. Ideally, we should integrate all plausible paths between antenna of the Tx and Rx pair to obtain an accurate simulation of the CSI. Formally, we can model the CSI with frequency f as:\nh(I, f) = \u222b\u03a9 H(I, f, w)dw, (9)\nwhich is an integral of the function H that depends on the scene model \ud835\udd40 configurations, over all possible paths w \u2208 \u03a9. However, there is no closed-form solution to Eq. 9. Therefore, Monte Carlo (MC) methods are typically used to estimate the integral by randomly sampling N\ud835\udc64 paths across \u03a9:\nh(I, f) = 1/N\ud835\udc64 \u2211\u1d62\u208c\u2081\u1d3a\u02b7 H(I, f, w\u1d62), (10)\nwhere h converges to h as N\ud835\udc64 \u2192 \u221e.\nLet h\u2099\u209c,\u2099\u1d63 be the CSI between the n\u209c-th antenna and the n\u1d63-th antenna at frequency f. Given the parameters of the N\ud835\udc64 paths at frequency f between a pair of antennas, each associated with the Tx and Rx, h\u2099\u209c,\u2099\u1d63 can be defined as\nh\u2099\u209c,\u2099\u1d63(I, f) = \u2211\u1d62\u208c\u2081\u1d3a\u02b7 C\u0280(\u03a6\u1d2c\u1d3c\u1d2c\u1d62)\u03c4\u1d62(C\u1d40(\u03a6\u1d2c\u1d3c\u1d30\u1d62))e\u207b\u02b2\u00b2\u03c0f\u03c4\u1d62.  (11)\nWireless systems typically feature multiple antennas and use Orthogonal Frequency Division Multiplexing (OFDM) to divide their bandwidth into several orthogonal subcarriers. So, the CSI obtained from the Tx/Rx is a complex-valued matrix of size N\u209c \u00d7 N\u1d63 \u00d7 N\u209b. Here, N\u209c and N\u1d63 are the number of Tx and Rx antennas; N\u209b is the number of subcarriers. Let f\ua700 and \u2206f be the central frequency and the frequency spacing between the two adjacent subcarriers, respectively. The estimated CSI matrix H is:\nH = [h\u2099\u209c,\u2099\u1d63(I, f\u2080), ...,. , h\u2099\u209c,\u2099\u1d63(I, f\u2c7c), ..., h\u2099\u209c,\u2099\u1d63(I, f\u2099\u209b)]N\u00d7Nr., (12)\nwhere f\u2c7c = f\ua700 + j\u2206f is the frequency of the j-th subcarrier."}, {"title": "3.2.3 Trainable Scene Parameters", "content": "After obtaining the CSI with the forward model, we can define a loss function L to optimize the scene parameters \ud835\udd40 with a gradient-based approach. The key to the optimization lies in correctly computing the gradient of the loss function L w.r.t. the scene parameters \ud835\udd40. We can consider the forward model described in \u00a7 3.2.1 and \u00a7 3.2.2 as a complex function affected by scene parameters \ud835\udd40 (including both transceiver and object location for device-free and device-based localization, respectively) and implement it using a machine-learning framework such as TensorFlow and PyTorch. To obtain the gradients, we can make the scene parameters trainable and leverage the automatic differentiation capabilities of the ML framework to compute the gradients. According to the chain derivation rule, the gradient of the scene parameters can be written as:\n\u2202L/\u2202I = \u2202L/\u2202H * \u2202H/\u2202I. (13)\nA differentiable loss function w.r.t. H can be crafted manually. As for the \u2202H/\u2202I, it is obtainable in general cases, given that both the MC and the transfer function T are differentiable w.r.t. I [28]. However, the MC sampling process is not continuous in the case of visibility changes as the sampled paths vary. Occlusion by target objects during localization can cause sudden visibility changes, making it difficult to differentiate between localization states. To overcome the problem, we employ a smoothing technique to avoid abrupt visibility changes [39], [40]. Specifically, we replace discrete decisions, such as testing the validity of paths, with soft functions, mitigating the impact of changes in visibility."}, {"title": "3.3 High-fidelity Background Model Construction", "content": "In this section, we elaborate on how the high-fidelity background model is constructed, especially, how the scene geometry and EM material properties are obtained."}, {"title": "3.3.1 Input Data and Inductive Bias", "content": "To achieve high-precision background modelling, we can leverage a set of CSI measured from the ground-truth scene as the reference to calibrate these scene parameters. We assume the available CSI dataset is D = {P\u1d62, H\u1d62}Nd, where H\u1d62 is the collected CSI when the Rx is positioned at coordinate P\u1d62 = (X\u1d62, Y\u1d62, Z\u1d62) and Nd is the number of the measured CSI. We can extract features like the amplitude and phase from the complex-valued CSI to form a specific loss function L. Similar to training DL models, gradient-based optimization approaches can be used to minimize the loss function L on dataset D, thereby obtaining more accurate scene parameters I*, i.e.,\nI* = arg minI L(I|D). (14)\nEmploying a data-driven approach to calibrate these scene parameters appears straightforward. However, it remains challenging to achieve good performance even with stable real-world measurements. This is because a single path can interact with various objects before being captured by the Rx. Consequently, the position deviations of these objects and variations in the involved materials can influence each other during model construction, potentially leading to overfitting with local minima [41]. Therefore, we need to introduce inductive biases into the model construction process, i.e., to make several prior assumptions about the optimization to prompt plausible results. First, we set the related characteristics to materials based on common sense and choose the corresponding values from the ITU-R P.2040-2 [32] standards rather than random initialization. Second,"}, {"title": "3.3.2 Loss Functions for Background Model Construction", "content": "There are many different types of scene parameters, including object positions and material characteristics (the relative permittivity and the conductivity). All of these scene parameters significantly affect the generation of CSI, making it impractical to optimize all these parameters simultaneously with a unified loss function. To address the challenge, we use different loss functions to calibrate the object position and EM properties of the materials involved in an alternate manner. Since the path length is independent of the material, we focus more on length-related changes to optimize object position, while concentrating on amplitude variations to optimize material characteristics. However, random noise is inevitably introduced in real-world measurements due to the lack of time synchronization between the Tx and Rx, as well as environment dynamics. There is a time-varying random phase offset in these measurements. We use the ratio of the CSI between two adjacent antennas to mitigate noise interference, as the time-varying offsets are identical across different antennas of the same Tx/Rx [43]. The CSI ratio is as follows:\n\u2206h\u2081,\u2082(I, f) = h\u2081(I, f) / h\u2082(I, f) = e-joffh\u2081(I, f) / e-joffh\u2082(I, f) = h\u2081I, f) / h\u2082(I, f), (15)\nwhere h(I, f) is the true CSI and e\u207b\u1d63off is the phase offset. After obtaining the CSI ratio, we apply the Savitzky-Golay filter to smooth it.\nTherefore, the designed loss function to optimize the object position is as follows:\nL\u209a = 1 / Ntot \u2211\u1d62\u208c\u2081\u1d3a\u1d57\u1d52\u1d57(Ti - Ti)\u2082. (16)\nwhere Ntot = Nt \u00d7 Nr \u00d7 Ns is the dimension of the CSI matrix. \u03c4\u1d62 is obtained from the real-world measurements, while \u03c4\u0302\u1d62 is obtained from simulated CSI. The function\nl(x, y) = |x - y| / x + y \u2208 [0, 1] (17)\nis the symmetric mean absolute percentage error (SMAPE) that is chosen to normalize the measurements taken at different positions in the scene [28]. As for the loss function for EM properties of materials, we design as follows:\nL\u2098 = \u2211\u1d62\u208c\u2081\u1d3a\u1d57\u1d52\u1d57 |a\u1d62 - a\u1d62| / \u2211\u1d62\u208c\u2081\u1d3a\u1d57\u1d52\u1d57 (a\u1d62 + a\u1d62). (18)\nwhere a\u1d62 is the amplitude of the CSI ratio obtained from the real world, while a\u1d62 is the amplitude of the CSI ratio obtained from simulation. Ntot = (N \u2212 1) \u00d7 Nr \u00d7 Ns is the dimension of the CSI ratio matrix."}, {"title": "3.4 Gradient-enhanced Localization", "content": "In this section, we dive into the proposed wireless indoor localization approach with gradient-based optimization. \u00b9 To tackle the non-convex optimization, we employ a smoothing technique in the loss function and develop an efficient method to address the localization problem based on the inverse process of ray-tracing."}, {"title": "3.4.1 Loss Function for Localization", "content": "To achieve accurate localization with the gradient-based approach, the key first step is to craft a loss function L. In our paper, we define the loss function L that incorporates both the amplitude {a\u1d62} of the CSI ratio and delay {\u03c4\u1d62} of the CSI, i.e.,\nL(I, f) = MSE(a\u1d62, a\u0302\u1d62) + \u03b3\u2081MSE(\u03c4\u1d62 - \u03c4\u0302\u1d62) + \u03b3\u2082(x\u00b2 + y\u00b2), (19)\nwhere MSE represents the mean squared error, a widely used function to gauge the error between predicted and ground-truth values. The term (x\u00b2 + y\u00b2) serves as a regularization term for the current position (x, y), preventing overfitting to the position and aiding in escaping local optima. The \u03b3\u2081 and \u03b3\u2082 are scaling factors that ensure the numerical comparability of these loss terms, preventing the model from overemphasizing amplitude changes.\nThe reason behind using a loss function based on the SMAPE in background model construction and the MSE in localization lies in their distinct roles within the process. The SMAPE primarily serves to normalize CSI from multiple measurement points, ensuring that all examples are weighted equally [28]. On the other hand, the MSE offers superior convexity, which is more conducive to optimization in object localization. Hence, we adopt two distinct functions, SMAPE and MSE, for the background model construction and localization tasks, respectively."}, {"title": "3.4.2 Coarse-to-Fine Gaussian Smoothing", "content": "Using the gradient descent method with the loss function L for localization is straightforward. It can be formulated as follows:\nPx,y* = Px,y - \u2208 \u2202L/\u2202Px,y, (20)\nwhere Px,y represents a 3D coordinate within the region where the object can be placed at arbitrary positions on the 2D plane X \u00d7 Y, while its height z remains constant. \u2208 is the learning rate for gradient update. However, it might yield incorrect localization results, especially in device-free settings, as shown in \u00a7 2.3. To improve the optimization properties, we employ a smoothing transformation to the loss function to facilitate the search for the exact object position. Theoretically, we convolve the loss function L with a smoothing kernel g over the object position, which can be defined as\nL\u03c3(I, f) = \u222bX\u00d7Y g(x, y)L(I - Pi, Px,y, Pi, Px,y, f)dxdy, (21)\n\u00b9While both background model construction (\u00a7 3.3) and localization employ gradient-based optimization, their operations are significantly different: the former requires fine adjustments within wavelength-scale distances, whereas the latter must determine positions across several meters. This larger scale makes localization particularly vulnerable to local minima in the loss landscape (\u00a7 2.3)."}, {"title": "4 IMPLEMENTATION", "content": "For the scene model construction, we employ the floor plans to obtain a coarse-grained scene model and then import it into Blender 3.6 LTS [45] to render a more authentic indoor environment for our experiments. Then, the scene model is exported from Blender in XML file format using the Mitsuba-Blender add-on [46] to facilitate path propagation modeling in Mitsuba 3 [47]. We implement RayLoc using Python 3.8 and TensorFlow 2.13. As for the \u03b3 in the loss function of localization, we set it to 2 and 0.05 for the device-free and device-based settings, respectively. We sample our Gaussian kernel with zero mean. The covariance of the kernel is set to 0.1 and 1 for the device-free and device-based settings, respectively. Both the minimum covariance \u03c3m for the two settings is 0.01. The covariance \u03b1 in the bias term is set to 1 and 0.2 for the device-free and device-based settings, respectively. The number of sampled 2D positions Np is set to 5. We use Root Mean Square Propagation (RMSprop) as our optimizer for background model construction and target localization. The learning rate and momentum are set to 0.03 and 0.6, respectively. In the localization configurations, the object to be localized is randomly initialized within a 2D space of the indoor environment, and the number of iterations T for gradient descent is set to 100."}, {"title": "5 EVALUATION", "content": "In this section, we first introduce the experiment setup and detail the selected baselines. To evaluate the performance of RayLoc, we test it under varying experiment settings. In particular, we evaluate the performance of the proposed RayLoc from three aspects: i) we compare RayLoc with six baselines to demonstrate its superiority; ii) we test RayLoc under various environment settings to show its robustness; iii) ablation study is conducted to show the necessity of key module designs."}, {"title": "5.1 Experiment Setup", "content": "We deploy the proposed RayLoc in four typical real-world indoor environments to comprehensively evaluate its performance. Fig. 7 shows the layout of the four scenarios: a meeting room (3.53 \u00d7 2.85 m\u00b2), an laboratory (10.79 \u00d7 5.59 m\u00b2), a classroom (9.46 \u00d7 7.8 m\u00b2), and a corridor (31.14 \u00d7 2.65 m\u00b2). The ASUS RT-AX86U router is used as the AP for CSI acquisition. The AP runs at a center frequency of f=5GHz with a bandwidth of 20MHz. We only use 20MHz out of the 160MHz total bandwidth to show RayLoc's accuracy for legacy wireless infrastructures. The CSI across 128 OFDM subcarriers are captured by the AX-CSI tool [48] from three detachable antennas with 8.9 cm spacing. In Fig. 7, we also illustrate the placements of Tx and Rx across different scenes. We employ a single AP with three antennas and one common laptop in the device-free setup. The line-of-sight (LoS) distance between them is 4 m (3.5 m in the meeting room) and their height is fixed at 1.2 m. In the device-based settings, we only use a single AP with three antennas for localization. This is a readily available configuration in typical indoor environments, demonstrating the practicality of RayLoc. The height and LoS distance of transceivers are fixed across all experiments unless otherwise specified. We report the localization error defined as the distance between the estimated position provided by localization models and the actual ground truth label obtained from the real world."}, {"title": "5.2 Baseline Selection", "content": "To evaluate the performance of RayLoc, we compare it with six state-of-the-art CSI-based localization systems, three selected for device-free settings and three for device-based settings. In particular, the selected device-free approaches are introduced as follows:\n\u2022 Widar2.0 [31] is a device-free wireless localization system that enables passive human localization with a single pair of transceivers.\n\u2022 WiTraj [49] employs the ratio of CSI from two antennae of each RX to enhance the quality of estimated signal characteristics, thereby achieving more accurate localization.\n\u2022 DSCP [50] is a deep convolutional neural network (CNN)-based device-free localization system that divides the indoor scene into different areas to collect the amplitudes differences as the fingerprint database.\nWe also select the following device-based baselines:\n\u2022 SpotFi [14] computes the AoA with super-resolution algorithms and identifies the AoA of the direct path between the localization target and AP to deliver an accurate localization performance.\n\u2022 M\u00b3 [20] exploits a multipath-assisted approach to enable single AP localization through the combination of azimuths and the relative ToF of LoS signal and reflection signals.\n\u2022 CiFi [51] extracts phase data of CSI as input to a deep CNN to train the CNN model in the offline phase. The object's location is predicted based on the trained CNN and newly produced phase data."}, {"title": "5.3 Performance of Scene Model Construction", "content": "Before diving into evaluations of the localization performance, we conduct extensive experiments to show the effectiveness of the proposed scene model construction approach. We initially establish a ground-truth scene model for the meeting room depicted in Fig. 7a, and designate 195 measurement locations within it to collect CSI. Subsequently, we randomly alter the scene parameters of the TD, including the EM properties of the wall, ceiling, and floor and the position of the meeting table and chairs. With the measured CSI, we observe whether background model construction could accurately reproduce these values. The construction processes are illustrated in Fig. 8a, 8b, and 8c. We can clearly see that these scene parameters start to converge to the ground truth after 50 iterations. All their values"}, {"title": "5.4 Accuracy of Localization", "content": "In this section, we evaluate the localization accuracy achieved by RayLoc in different configurations to test its superiority and robustness."}, {"title": "5.4.1 Overall Performance", "content": "To evaluate the performance of RayLoc, we compare it with various state-of-the-art methods across different experimental scenes. In each scene, we measure the localization error of RayLoc and all the selected baselines in the LoS and NLoS scenarios. The NLoS means the LoS path cannot be obtained due to the blockage of obstacles in indoor environments, generally considered a more challenging scenario for localization tasks. To create the NLoS scenario, we lower the height of the AP to 0.2 m. Since most indoor obstacles are higher than 0.2m, they will block the LoS path. Specifically, we place some obstacles, including chairs and wooden boards, in the corridor. We repeat the experiments across 50 different locations in all the experimental scenes. The results under device-free and device-based settings are detailed in Fig. 9. Our evaluation shows that RayLoc can outperform the considered baselines across all the experimental scenes in the LoS and NLoS scenarios, respectively.\nFig. 9a shows the localization errors achieved by RayLoc and device-free baselines in the selected four indoor scenes. Fig. 9a reveals that compared to other approaches, RayLoc reduces the average localization errors by over 0.72 m, 1.09 m, 1.17 m, and 0.55 m, in the meeting room, laboratory, classroom, and corridor, respectively. The performance improvement of RayLoc can be attributed to its innovative \"turn foes into friends\" approach, which leverages environment knowledge (e.g., multipath) as valuable localization information. In contrast, conventional localization methods treat these same environment factors as interference that degrades their accuracy. Fig. 9b shows the localization errors of these device-based localization methods. From Fig. 9b, we can observe that device-based approaches outperform device-free counterparts and RayLoc achieves nearly 0.44 m improvement in localization accuracy across all four scenes. The reason behind the observation is that a calibrated scene model can generate more stable and accurate measurement values of wireless CSI, benefiting precise localization.\nFig. 9c and Fig. 9d show the localization errors achieved by these localization methods in device-free and device-based settings, respectively. Due to the absence of LoS, we can see that the errors for all localization methods in NLoS settings are higher compared to LoS scenarios. However, we can also observe that even in the challenging NLoS configuration, RayLoc still outperforms the other localization methods. The effectiveness can be attributed to the fact that, after creating and calibrating a digital replica of the scene, RayLoc has more prior knowledge of the environment. Combined with the gradient-descent optimization, it allows the RayLoc to accurately locate the object."}, {"title": "5.4.2 Performance under Different Clutter Levels", "content": "We now evaluate the overall localization accuracy of various approaches under different background clutter level. In the experiment", "height": ""}]}