{"title": "ICML Topological Deep Learning Challenge 2024: Beyond the Graph Domain", "authors": ["Guillermo Bern\u00e1rdez", "Lev Telyatnikov", "Marco Montagna", "Federica Baccini", "Mathilde Papillon", "Miquel Ferriol-Galm\u00e9s", "Mustafa Hajij", "Theodore Papamarkou", "Maria Sofia Bucarelli", "Olga Zaghen", "Johan Mathe", "Audun Myers", "Scott Mahan", "Hansen Lillemark", "Sharvaree Vadgama", "Erik Bekkers", "Tim Doster", "Tegan Emerson", "Henry Kvinge", "Katrina Agate", "Nesreen K Ahmed", "Pengfei Bai", "Michael Banf", "Claudio Battiloro", "Maxim Beketov", "Paul Bogdan", "Martin Carrasco", "Andrea Cavallo", "Yun Young Choi", "George Dasoulas", "Matou\u0161 Elphick", "Giordan Escalona", "Dominik Filipiak", "Halley Fritze", "Thomas Gebhart", "Manel Gil-Sorribes", "Salvish Goomanee", "Victor Guallar", "Liliya Imasheva", "Andrei Irimia", "Hongwei Jin", "Graham Johnson", "Nikos Kanakaris", "Boshko Koloski", "Veljko Kova\u010d", "Manuel Lecha", "Minho Lee", "Pierrick Leroy", "Theodore Long", "German Magai", "Alvaro Martinez", "Marissa Masden", "Sebastian Me\u017enar", "Bertran Miquel-Oliver", "Alexis Molina", "Alexander Nikitin", "Marco Nurisso", "Matt Piekenbrock", "Yu Qin", "Patryk Rygiel", "Alessandro Salatiello", "Max Schattauer", "Pavel Snopov", "Julian Suk", "Valentina S\u00e1nchez", "Mauricio Tec", "Francesco Vaccarino", "Jonas Verhellen", "Frederic Wantiez", "Alexander Weers", "Patrik Zajec", "Bla\u017e \u0160krlj", "Nina Miolane"], "abstract": "This paper describes the 2nd edition of the ICML\nTopological Deep Learning Challenge that was\nhosted within the ICML 2024 ELLIS Workshop\non Geometry-grounded Representation Learning\nand Generative Modeling (GRaM). The challenge\nfocused on the problem of representing data in\ndifferent discrete topological domains in order to\nbridge the gap between Topological Deep Learn-\ning (TDL) and other types of structured datasets\n(e.g. point clouds, graphs). Specifically, partici-\npants were asked to design and implement topo-\nlogical liftings, i.e. mappings between different\ndata structures and topological domains -like hy-\npergraphs, or simplicial/cell/combinatorial com-\nplexes. The challenge received 52 submissions\nsatisfying all the requirements. This paper in-\ntroduces the main scope of the challenge, and\nsummarizes the main results and findings.", "sections": [{"title": "1. Introduction", "content": "The field of Topological Deep Learning (TDL) aims to ex-\ntend Graph Neural Networks (GNN) (Scarselli et al., 2009)\nby naturally processing relations between two or more el-\nements (Hajij et al., 2022b; Papillon et al., 2023b; Hajij &\nIstvan, 2021; Bodnar et al., 2021a;b). In particular, TDL\nmethods allow to go beyond the paradigm of pairwise inter-\nactions by encoding higher-order relationships using alge-\nbraic topology concepts (Bick et al., 2023; Bodnar, 2023;\nBattiloro et al., 2023a). Fig. 1 presents a visual comparison\nof traditional discrete domains (i.e. pointclouds, graphs)\nversus the standard discrete topological domains used to\nmodel n-body relations (simplicial/cellular/combinatorial\ncomplexes, hypergraphs).\nDespite its recent emergence, TDL is already postulated to\nbecome a relevant tool in many research areas and applica-\ntions, from complex physical systems (Battiston et al., 2021)\nand signal processing (Barbarossa & Sardellitti, 2020) to\nmolecular analysis (Bodnar et al., 2021c) and social inter-\nactions (Schaub et al., 2020), to name a few. However, a\ncurrent limiting factor in the extensive use of higher-order\nstructures is that most datasets are usually stored as point-\nclouds or graphs. Although researchers have introduced\nvarious mechanisms for extracting higher-order elements\n(e.g. Xu et al. (2022); Battiloro et al. (2023b); Bern\u00e1rdez\net al. (2023); Elshakhs et al. (2024); Hajij et al. (2022a);\nHoppe & Schaub (2024)), it remains unclear how to opti-\nmize the process given a specific dataset and task."}, {"title": "2. Setup of the Challenge", "content": "The challenge\u00b9 was hosted by the Geometry-grounded Rep-\nresentation Learning and Generative Modeling (GRaM)\nWorkshop\u00b2 at the International Conference on Machine\nLearning (ICML) 2024. Participants were asked to imple-\nment a topological lifting, apply it to a toy dataset, and test"}, {"title": "2.1. Guidelines", "content": "Participation was free and open to everyone -only princi-\npal PyT-Team developers were excluded. To enroll in the\nchallenge it was sufficient to:\n\u2022 Send a valid Pull Request (PR) -i.e. passing all tests-\nbefore the deadline.\n\u2022 Respect Submission Requirements (see below).\nTeams were accepted, and there was no restriction on the\nnumber of team members. An acceptable PR automatically\nsubscribed a participant/team to the challenge. A Pull Re-\nquest could not contain more than one lifting. However,\nthere was no restriction on the number of submissions (i.e.\nPRs) per participant/team.\nConsistent with the aims of an open environment for sharing\nparticipation, in this activity was completely voluntary and\nno support or endorsement of any of the participating parties\nby any of the other participating parties was provided. All\nsubmissions are the views of the individual participants only\nand should be taken, as is with all faults and without any\nguarantee, promise or endorsement of any kind."}, {"title": "2.2. Submission Requirements", "content": "The submission had to have a valid lifting transformation\nbetween any pair of the following data structures: point-\ncloud/graph, hypergraph, simplicial complex, cell complex,\nand combinatorial complex. For a lifting to be valid, partici-\npants had to implement a mapping between the topological\nstructures of two of the considered domains -topological\nlifting. Participants may optionally implement a procedure"}, {"title": "TOPOLOGY LIFTING (REQUIRED)", "content": "Submissions could implement already proposed liftings\nfrom the literature, as well as propose novel approaches.\nIn the case of original liftings, we note that neither the chal-\nlenge nor its related publications would prevent participants\nfrom publishing their work: they keep all the credit for their\nimplementations.\nFor a lifting from a certain source domain src (e.g. graph)\nto a topological destination dst (e.g. simplicial), a submis-\nsion consisted of a PR to the ICML Challenge repository\nwith the following files:\n1. A Python script implementing the topological lifting\nin a single class using the provided `{src}2{dst}\n transform primitives.\n2. A configuration file defining the default parameters of\nthe implemented transform.\n3. A Jupyter notebook that loads a dataset from the src\ndomain, applies the implemented lifting to transform\nthe data into the dst domain, and runs a model from\n TopoModelX () over the lifted dataset.\n4. A Python script which contains the unit tests for all\nimplemented methods and classes."}, {"title": "FEATURE LIFTING (OPTIONAL)", "content": "Some TDL models require well-defined features on higher-\norder structures (e.g. 2-cells, hyperedges); therefore, in\ntheir more general formulation, liftings also need to produce\ninitial features for every topological element of the target\ndomain. Participants were more than welcome to implement\nnew feature liftings mappings, although it was optional and\nonly regarded as a bonus."}, {"title": "2.3. Award Categories", "content": "Given the lack of an exhaustive analysis of different types\nof procedures to infer the topological structure within TDL,\nthere was no particular requirement for submitted liftings\n-apart from a high-quality code implementation. To promote\nand guide diversity in submissions, we proposed 4 general,\nnon-mutually exclusive Award Categories (ACs) according\nto the following 2 taxonomies."}, {"title": "By target domain:", "content": "\u2022 1st AC: Best implementation of a lifting to Simplicial\nof Cell Domain.\n\u2022 2nd AC: Best implementation of a lifting to Combina-\ntorial Complex, Hypergraph, or Graph Domain."}, {"title": "By leveraged information:", "content": "\u2022 3rd AC: Best feature-based lifting, including liftings\nthat leverage both the graph connectivity simultane-\nously.\n\u2022 4th AC: Best implementation of a lifting using exclu-\nsively the graph connectivity."}, {"title": "2.4. Evaluation Method", "content": "The Condorcet method was used to rank the submissions\nand decide on the winners in each category. The evaluation\ncriteria were:\n\u2022 Does the submission implement the lifting correctly?\nIs it reasonable and well-defined?\n\u2022 How readable/clean is the implementation? How well\ndoes the submission respect the submission require-\nments?\n\u2022 Is the submission well-written? Do the docstrings\nclearly explain the methods? Are the unit tests robust?\nNote that these criteria did not reward the final model perfor-\nmance nor the complexity of the method. Rather, the goal\nwas to implement well-written and accurate liftings that\nwould unlock further experimental evidence and insights in\nthis field.\nSelected PyT-Team maintainers and collaborators, as well\nas each team whose submission(s) respect(s) the guidelines,\nvoted once to express their preference for the best submis-\nsion in each category. Note that each team was allowed only\none vote per category, regardless of the number of team\nmembers."}, {"title": "2.5. Software Practices", "content": "All submitted code had to comply with the challenge's\nGitHub Action workflow, successfully passing all tests, lint-\ning, and formatting (i.e., ruff). Moreover, to ensure consis-\ntency, we asked participants to use TopoNetX's classes to\nmanage simplicial/cell/combinatorial complexes whenever\nthese topological domains are the target -i.e., destination-\nof the lifting. Moreover, we highly encouraged the use\nof TopoX (Hajij et al., 2024) and NetworkX (Hagberg &\nConway, 2020) libraries when possible."}, {"title": "3. Submissions and Winners", "content": "The challenge received 56 submissions in total, out of which\n52 were valid according to the requirements (see Subsection\n2.2). Regarding these valid submissions, they come from 31\ndifferent teams, with together sum up a total of 57 partici-\npants. Each award category accounted for 24, 28, 25, and\n27 submissions correspondingly. Table 1 lists all qualifying\nsubmissions."}, {"title": "3.1. Award Category Winners", "content": "Three prizes were awarded for each category, corresponding\nto first, second and third places in the Condorcet voting\nballot results.\n1st AC: Best lifting to Simplicial of Cell Domain.\n1. Random Latent Clique Lifting (Graph to Simplicial) by\nMauricio Tec, Claudio Battiloro, George Dasoulas.\n2. Hypergraph Heat Kernel Lifting (Hypergraph to Sim-\nplicial) by Matt Piekenbrock.\n3. DnD Lifting (Graph to Simplicial) by Jonas Verhellen\n2nd AC: Best lifting to Graph, Hypergraph, or Combina-\ntorial Domain.\n1. Simplicial Paths Lifting (Graph to Combinatorial) by\nManuel Lecha, Andrea Cavallo, Claudio Battiloro.\n2. Matroid Lifting (Graph to Combinatorial) by Giordan\nEscalona.\n3. Forman-Ricci Curvature Coarse Geometry Lifting\n(Graph to Hypergraph) by Michael Banf, Dominik Fil-\nipiak, Max Schattauer, Liliya Imasheva.\n3rd AC: Best feature-based lifting.\n1. PointNet++ Lifting (Pointcloud to Hypergraph) by Ju-\nlian Suk, Patryk Rygiel.\n2. Kernel Lifting (Graph to Hypergraph) by Alexander\nNikitin.\n3. Mixture of Gaussians + MST Lifting (Pointcloud to\nHypergraph) by Sebastian Me\u017enar, Boshko Koloski,\nBla\u017e \u0160krlj.\n4th AC: Best connectivity-based lifting.\n1. Matroid Lifting (Graph to Combinatorial) by Giordan\nEscalona.\n2. Forman-Ricci Curvature Coarse Geometry Lifting\n(Graph to Hypergraph) by Michael Banf, Dominik Fil-\nipiak, Max Schattauer, Liliya Imasheva."}, {"title": "3.2. Honorable Mentions", "content": "Apart from voting for the best implementations in each\naward category, reviewers were also asked to highlight sub-\nmissions and/or participants if they found their implemen-\ntations particularly interesting. Given the high quality of\nreceived submissions, reviewers's feedback originated two\nextra honorable mentions' categories:\nGreat Contributors: Teams or participants that have sub-\nmitted several top quality liftings, becoming great contribu-\ntors of this project.\n\u2022 Martin Carrasco (PRs 28, 29, 41, 50).\n\u2022 Bertran Miquel-Oliver, Manel Gil-Sorribes, Alexis\nMolina, Victor Guallar (PRs 14, 16, 21, 37, 42).\n\u2022 Theodore Long (PRs 22, 35, 65).\n\u2022 Jonas Verhellen (PRs 5, 7, 8, 10, 11).\n\u2022 Pavel Snopov (PRs 6, 9, 18, 20).\n\u2022 Julian Suk, Patryk Rygiel (PRs 23, 34, 53).\nHighlighted Submissions: Original and/or outstanding\nsubmissions.\n\u2022 Modularity Maximization Lifting (Graph to Hyper-\ngraph) by Valentina S\u00e1nchez.\n\u2022 Universal Strict Lifting (Hypergraph to Combinatorial)\nby \u00c1lvaro Mart\u00ednez.\n\u2022 Mapper Lifting (Graph to Hypergraph) by Halley\nFritze, Marissa Masden"}, {"title": "4. Conclusion", "content": "This white paper presented the motivation and outcomes\nof the organization of the 2nd edition of the Topological\nDeep Learning Challenge hosted through the ICML 2024\nGeometry-grounded Representation Learning and Genera-\ntive Modeling (GRaM) Workshop. Challenge submissions\nimplemented a wide variety of topological liftings between\ndifferent pair of discrete (topological) domains, providing\nwith a rich assortment of tools to infer and exploit higher-\norder structures. We hope that this community effort will\nhelp bridging the gap between TDL and most of the cur-\nrent datasets, stored as pointclouds or graphs. Therefore,\nthe methods implemented in this challenge can potentially\nfoster research and further methodological benchmarks in\nthis growing TDL field.\u00b3\nLast, but not least, we remark that the participation statistics\nof this 2nd challenge edition almost doubled the numbers\nof the previous ICML 2023 TDL Challenge (Papillon et al.,\n2023a) -both in terms of participants and submissions-,\nindicating a notable increase in interest in the TDL field."}]}