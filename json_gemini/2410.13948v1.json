{"title": "The KnowWhereGraph Ontology", "authors": ["Cogan Shimizu", "Shirly Stephen", "Adrita Barua", "Ling Cai", "Antrea Christou", "Kitty Currier", "Abhilekha Dalal", "Colby K. Fisher", "Pascal Hitzler", "Krzysztof Janowicz", "Wenwen Li", "Zilong Liu", "Mohammad Saeid Mahdavinejad", "Gengchen Mai", "Dean Rehberger", "Mark Schildhauer", "Meilin Shi", "Sanaz Saki Norouzi", "Yuanyuan Tian", "Sizhe Wang", "Zhangyu Wang", "Joseph Zalewski", "Lu Zhou", "Rui Zhu"], "abstract": "Know WhereGraph is one of the largest fully publicly available geospatial knowledge graphs. It includes\ndata from 30 layers on natural hazards (e.g., hurricanes, wildfires), climate variables (e.g., air temperature,\nprecipitation), soil properties, crop and land-cover types, demographics, and human health, various place\nand region identifiers, among other themes. These have been leveraged through the graph by a variety of\napplications to address challenges in food security and agricultural supply chains; sustainability related to\nsoil conservation practices and farm labor; and delivery of emergency humanitarian aid following a disaster.\nIn this paper, we introduce the ontology that acts as the schema for Know WhereGraph. This broad overview\nprovides insight into the requirements and design specifications for the graph and its schema, including the\ndevelopment methodology (modular ontology modeling) and the resources utilized to implement, material-\nize, and deploy Know WhereGraph with its end-user interfaces and public query SPARQL endpoint.", "sections": [{"title": "1. Introduction", "content": "Know WhereGraph\u00b9 (KWG) is one of the largest\npublicly available geospatial knowledge graphs in\nthe world [17]. It brings together over 30 data layers\nrelated to observations of natural hazards (e.g., hur-\nricanes, wildfires, and smoke plumes), spatial char-\nacteristics related to climate (e.g., temperature, pre-\ncipitation, and air quality), soil properties, crop and\nland-cover types, demographics, and human health\n(e.g., social vulnerability index), among others, re-\nsulting in a knowledge graph with over 28 billion\ntriples.\nKWG supports applications in the food, agricul-\nture, and humanitarian relief sectors, and their cor-\nresponding supply chains, generally; environmental\npolicy issues relative to interactions among agricul-\ntural sustainability, soil conservation practice, and\nfarm labor; and delivery of emergency humanitar-\nian aid within the US and internationally.\nKnow WhereGraph's mission is to provide area\nbriefings within seconds for any region on Earth\n(currently mostly in the US) to answer questions\nsuch as\n\u2022 \"What is here?\"\n\u2022 \"What happened here before?\"\n\u2022 \"Who [experts] knows more?\"\n\u2022 \"How does it compare to other regions or pre-\nvious events?\"\nIn order to assist decision-makers and data scien-\ntists in enriching their own data with billions of\nconnected, up-to-date contextual information about\nhumans and their environment to rapidly gain the\nsituational awareness required for proper decision-\nmaking.\nThe highly varied but critical importance of the use\ncases combined with a large number of data layers\nand triples created unique challenges for the project\nin terms of management and execution, challenges\nthat required new approaches to structuring the\nknowledge graph for efficient querying and use.\nTo this end and to materialize Know WhereGraph,\nwe have added an additional layer - a schema\nwhich is described formally as an ontology. This\nallows us to address the design and functionality re-\nquirements resulting from the nature of our mission\nand use cases [18].\nEnable Spatial Integration The primary pur-\npose of Know WhereGraph is to provide a conve-\nnient method for integrating data along a spatiotem-\nporal dimension. This is integral to the mission of\nthe project and, subsequently, a core requirement\nfor the graph and its schema.\nFacilitate Data Integration Know WhereGraph\nmust be capable of providing an overarching frame-\nwork for the semantic alignment of key terms and\nconcepts through observable properties of features\nof interest.\nProvide Rich Inferences Beyond a flat repre-\nsentation of the (integrated) datasets, Know Where-\nGraph's schema must be expressive enough to in-\nfer latent relationships between data layers, such as\ncausality of events or the inheritance of spatial char-\nacteristics. Furthermore, it must provide a frame-\nwork for additional inferences in the future.\nHighly Maintainable To remain useful,\nKnow WhereGraph must be easily maintained\nby the community. This includes both the ease of\ndata integration and how amenable the schema\nand thus the graph are to modification: either\nthrough the incorporation of new or evolving use\ncases, rectifying conceptual errors in the graph, or\nadapting to changes in the data sources.\nAs a consequence of these stringent requirements,\nwe identified the Modular Ontology Modeling\n(MOMO) methodology as a prime candidate for de-\nveloping the Know WhereGraph Ontology. MOMO\nis a pattern-based method, meaning that KWG\nleverages existing ontology design patterns (either\ndeveloped by the community or extracted from ex-\nisting standards) [8], modifies them to the appropri-\nate context or use case [13], and assembles these\nmodules into a modular \"plug-and-play\" schema,\nallowing for maximum maintainability [14, 27].\nSuch a pattern-based approach furthermore facili-\ntates dataset integration. When integrating multiple\ndatasets, it can be convenient to conceptualize them\nalong the same (ontological) dimension. For ex-\nample, understanding tabular data about a place as\nobservations, similarly to how a hazard impacts a\nplace (and the measurement thereof) is also an ob-\nservation. This results in a predictable method for\nquerying against the final, integrated schema of the\nknowledge graph.\nExplicitly, the contributions that this manuscript de-\nscribes are as follows:\n\u2022 the Know WhereGraph Ontology (2023), de-\nsign principles, and implementation;\n\u2022 the principled leveraging of a discrete global\ngrid for spatial integration; and\n\u2022 a representative example of answering (one as-\npect of) an important question that is driven by\none of KWG's use-case scenarios.\nThe structure of the paper is as follows. First, we\nprovide in Section 2 some preliminary concepts to\norient readers. Section 3 details the ontology mod-\neling approach taken to develop the KnowWhere-\nGraph Ontology, which is presented in Section 4,\nalongside discussion on its implementation. In Sec-\ntion 5, we provide context on how the ontology can\nbe leveraged to use the KWG. Section 6 discusses\nrelated work and parallel efforts, and how the KWG\nconnects or overlaps. Finally, in Section 7, as we\nconclude, we identify next steps."}, {"title": "2. Preliminaries", "content": "First, we introduce two important concepts: the\nDiscrete Global Grid, which informs some of our\nontological choices, and schema diagrams, which"}, {"title": "2.1. Discrete Global Grid", "content": "One of the primary motivations for KWG is to act as\na geospatial informational backbone for any dataset\ndescribing physical phenomena and their impacts\nor places and their characteristics. All such datasets\nare mapped onto a discrete global grid (DGG) [10].\nIn our case, it is a hierarchical DGG, which then\nacts as the the common spatial data frame to achieve\na compromise between data precision (i.e., the fi-\ndelity of the geometries underlying geospatial phe-\nnomena, including regions), access speed, and ease\nof data integration among multiple vector and raster\ndatasets, while supporting globally unique identi-\nfiers for the constituent cells.\nIn particular, the hierarchical DGG is a partition-\ning of the surface of the Earth into some num-\nber of \"top-level\" parent cells, which are then fur-\nther partitioned into child cells, and so on until\nthe desired spatial resolution is achieved [10, 31].\nKnow WhereGraph utilizes the S2 Grid System\u00b2 im-\nplementation, but other DGGs were also considered\n(e.g., Uber's H33).4\nA DGG allows for a common underlying spatial\nreference system for both geospatial vector and\nraster datasets, for which we can pre-compute spa-\ntial relations between different features or regions\nfor vector data and pre-compute summary statis-\ntics for a given cell at a certain level from differ-\nent raster datasets. By emphasizing the notion of a\ncell, we can examine exact cell characteristics, pre-\ndict or infer contents of its parent and child cells,\nand quickly generate an overview of spatially co-\nlodated features and regions of interest without hav-\ning to compute directly spatial relations.\nFurthermore, we can ontologically encode how\ngeospatial information and other phenomena may\naffect (e.g., transitively) places across the hierarchy\nof cells within the DGG. This means that we can\nrepresent geospatial information and other phenom-\nena at different levels of granularity. This method is\ndiscussed more deeply in Section 4, with an exam-\nple in Section 5. Figure 1 shows an interface that\nuses the S2 cells to examine quickly regions of the\nsurface of the Earth. By selecting specific cells, we"}, {"title": "2.2. Schema Diagrams", "content": "From the MOMo methodology [27], we use a (vi-\nsual) graphical structure called a schema diagram\nas our primary method for communicating ontolog-\nical structure. This diagram carries a reduced se-\nmantics; it is meant to be intuitive and easily under-\nstood, rather than explicitly and visually conveying\nthe exact, underlying logical axioms. We use a con-\nsistent visual syntax across all diagrams, stated be-\nlow for convenience.\nBoxes of any non-gray color indicate a class. Gold-\nenrod boxes are atomic classes. Blue boxes (with\ndashed borders) indicate hidden complexity \u2014 i.e.,\nthat there are additional relations, but which have\nbeen removed from view for clarity. Frequently,\nthis means that it represents a class that is drawn\nfrom outside of the KWG namespaces (e.g., OWL\nTime [6]). Large gray boxes that encapsulate many\narrows and boxes indicate a module, meaning that\nthey are conceptually related. Yellow ellipses indi-\ncate a datatype. These are generally prefixed with\nthe appropriate namespace, for clarity. Filled ar-\nrows indicate a binary relation. If one points to a\nbox, then it is an object property. If one points to\nan ellipse, it is a data property. Open-face arrows\nindicate a subclass relation."}, {"title": "2.3. Resource Availability", "content": "We provide multiple types of documentation for the\nKnow WhereGraph Ontology: visual representa-\ntions (the schema diagrams), living documentation\n(generated using WiDoCo [9]), the formalization of\nthe ontology, and a static, technical report (gener-\nated using a document generator [29]) can all be\nfound in [34]. The Know WhereGraph, its ontolo-\ngies, and tools are maintained by the KnowWhere-\nGraph team; more information can be found on-\nline.5"}, {"title": "3. The Ontology Modeling Approach", "content": "For KWG to be both a success as a project, and a\nusable resource, the ontology, that would act as its\nschema, would need to be sustained easily beyond\nthe project's lifetime. Furthermore, it would need\nto be easily adaptable to new data sources or unex-\npected changes in data sources to the extent possi-\nble both during the initial development and beyond\nthe project's funding period as the pilot (vertical)\nuse cases are transformed. As such, we identified\nquickly the Modular Ontology Modeling method-\nology (MOMo; [27]) as an ideal candidate for per-\nforming the development work, since the pattern-\nbased approach both allowed for iterative develop-\nment, and mitigated long-term maintainability con-\ncerns with its resulting modular structure.\nThe MOMo methodology is a combination of top-\ndown and bottom-up approaches. Top-down refers\nto the fact that MOMo generally assumes that the\nuse cases for the ontology (or knowledge graph)\nare known at the outset. Then, interactions (com-\npetency questions) and important concepts (key no-\ntions) are identified and further developed, axiom-\natized, and serialized. Furthermore, MOMO is a\npattern-centric methodology, whereby the use of\npatterns provides a super-structure for an ontology\nto follow. Bottom-up refers to the emphasis on the\ndata and datasets that are available and can be ac-\nquired. Then, by identifying the appearance of im-\nportant concepts (key notions), additional patterns\ncan be identified.\nHowever, because this fast-paced application-\noriented effort involved a significant number of\npeople (about 50 students, researchers, software\nengineers, and domain experts, including non-\ngovernmental organization [NGO] and industry\nrepresentatives), a pure MOMo approach was not\nentirely feasible. A pure application would have\nrequired a more detailed up-front understanding of\nthe major data sources and the application scenar-\nios and needs; these were not realizable within the\nproject timelines, as well as both the rapidly chang-\ning data landscape and availability, and the initial\nknowledge of end-user needs. In summary, we did\nnot have a stable understanding of the requirements\n(inhibiting the top-down approach) and we did not\nhave a stable understanding of the available data or\nwhat exactly those data comprised (inhibiting the\nbottom-up approach).\nAs a result, we agreed on two critical aspects: we\nwould use the DGG as our geospatial backbone and\nutilize a kernel of the SOSA/SSN ontology (the\nkernel is discussed in Section 4.2 and SOSA/SSN\nand our implementation in Section 4.4). Further-\nmore, it necessitated that we conduct steps 3-5 of\nthe methodology (as listed in the next section) in\nparallel, by separate teams, and with repeated itera-\ntions to ensure convergence. Indeed, in the begin-\nning stages, we did multiple drafts of both which\npieces of the SOSA/SSN ontology we expected to\nreuse and how they would be used as methods of\nintegration. Key to the eventual convergence were\noverlapping members between teams, which helped\npropagate a shared conceptualization, willingness\nto retrace and redo previous work, and a commit-\nment to our initial minimal requirements."}, {"title": "3.1. The Steps", "content": "In brief, we provide this adapted MOMo approach\nin nine steps, listed as follows with accompanying\ncommentary..\nIn this case, we take convergence to mean either that our\nconceptualizations of important terms (i.e., phenomena) were\nconsistent, or that we were using the same implementations for\nquantities and time, for example."}, {"title": "3.1.1. Define the use case.", "content": "The first step of MOMo has, in general, three\nstages, 1) to understand the available data, datasets,\nand provisioning institutions, as well as any orig-\ninating schemas; 2) to identify applicable vocabu-\nlaries, ontologies, ontology design pattern reposi-\ntories, and standards; and 3) to work with domain\nexperts, knowledge engineers, and stakeholders to\ngain an understanding of perspectives on the use\ncase. An additional complication results from the\nfact that Know WhereGraph has multiple use cases,\nwhich fall under its overarching role as a geoin-\nformational integration service (i.e., the area brief-\nings). Understanding how the use cases both inter-\nacted and could support each other was a contin-\nuous process. We provide an example use case in\nSection 5.1."}, {"title": "3.1.2. Develop competency questions.", "content": "This step narrows the use case's scope by explic-\nitly describing question-answering needs, and thus\nthe expected responses one should receive from a\nKG. A competency question takes the form \"How\nmany wildfires had smoke plumes that impacted\nleafy greens in California in 2019?\" This demon-\nstrates which datasets are accessible from queries\nagainst the graph, thus guiding both design and val-\nidation. Additional examples are provided in Sec-\ntion 5.2."}, {"title": "3.1.3. Identify key notions.", "content": "Generally, key notions are the concepts that are cen-\ntral to the knowledge graph. For example, this\nmight mean that either they have high connectiv-\nity between other concepts, or they may appear in\na high proportion of the competency questions. In\nthe case of KWG, the key notions appear at two dif-\nferent levels of abstraction, resulting in the integra-\ntion of the top-down and bottom-up approaches. At\nthe outset, we knew some key notions would exist\nfor the entire Know WhereGraph which we call\nthe KWG Core (i.e., Hazards events that happen\nand have the potential to impact people, Regions\nplaces that are important to people, and S2Cell\nwhich abstracts our geospatial backbone). We\nprovide more details in Section 4.1. Key notions\nalso exist on the level of datasets, and, furthermore,\nwe wanted to use SOSA/SSN [15], to unify how\nthe datasets that describe Phenomena would be on-\ntologized. Essentially, this meant that these first\nthree steps would need to happen in conjunction,\nwhile the rest occurred in sequence (although iter-\natively). New patterns and modules\nneeded"}, {"title": "3.1.4. Match ODPs to key notions.", "content": "Ontology design patterns [8] can be considered\nto be tiny ontologies that solve domain-invariant\nmodeling problems in (purposefully) abstract ways;\ntheir purpose is to be adapted to specific use cases.\nThis step matches the conceptual component of a\npattern to the key notion in the use case. Patterns\ncan be sourced from resources such as the ODP por-\ntal [23] or MODL [28]. In some cases these pat-\ntern repositories may not be sufficient, and it may\nbe necessary to develop new patterns. For exam-\nple, we needed to develop novel patterns for rep-\nresenting our DGG [31], causal relations between\nevents [32], and the alignment of terms between\ntaxonomies [33], as discussed in Section 4.3."}, {"title": "3.1.5. Instantiate the patterns to create modules.", "content": "This step is the process by which a general or ab-\nstract pattern is taken and modified to fit the use\ncase, creating modules through template-based in-\nstantiation [13]. Intuitively, we can consider the\npattern to be a sort of \"fill in the blanks.\u201d This strat-\nagy is effective in the case of KWG, as we have\nmultiple datasets that describe physical phenomena\nand their relation to space and time. By reusing the\nsame pattern for these concepts, we already achieve\na baseline conceptual compatibility and interoper-\nability."}, {"title": "3.1.6. Systematically axiomatize each module.", "content": "This is the step where most ontological analysis\noccurs. In general, the MOMo approach empha-\nsizes the use of schema diagrams to communicate\nthe connectivity of data (i.e., it purposefully ob-\nscures the exact underlying formalization) until this\nstep, where domain experts and knowledge engi-\nneers both dig into the specifics of the relations.\nHowever, in many cases, since we have chosen a\npattern-centric methodology, we could reuse the ax-\niomatization directly provided by the pattern. We\ngive an excerpted example in Section 5.3."}, {"title": "3.1.7. Assemble the modules.", "content": "This is a quick step that involves connecting the dif-\nferent modules together and seeks to identify addi-\ntional axioms that would span multiple modules.\nFor example, in KWG, we have explored including\ncausal relations between the events and phenomena"}, {"title": "3.1.8. Review the final product.", "content": null}, {"title": "3.1.9. Produce artifacts.", "content": null}, {"title": "3.1.10. Validation.", "content": "This is not strictly a final step, but a continuous\nstep over many iterations. The ontology was de-\nveloped in close-contact with the subject matter ex-\nperts, adjusting for the use-cases, and identifying\nappropriate competency questions and prototypi-\ncal SPARQL queries. Additionally, we developed\nin conjunction with the ontology a set of SHACL\nshapes to validate data according to the ontology\n[37]."}, {"title": "4. The KnowWhereGraph Ontology", "content": "The Know WhereGraph (KWG) Ontology inte-\ngrates over thirty datasets across multiple spatial\nand temporal resolutions and thematic dimensions,\nwhich are shown in the Appendix (Tables 1 and 2).\nBy thematic, we mean datasets that describe phys-\nical phenomena and their relation to a place and\ntime, as well as the measured or observed charac-\nteristics of a place or the populations within them\n(i.e., a county's adult obesity rate). This may be\na natural hazard, forecasts, or man made features\n(e.g., highways). On the other hand, place-centric\ndatasets describe human-meaningful places, such\nas the boundaries of sociopolitical regions. Due to\nthe size of the ontology (there are 312 classes and\n2980 axioms), it is less convenient to discuss ex-\nhaustively each class and their respective axioms.\nThe purpose of this paper is to provide a brief, but\nthorough holistic overview of the KWG ontology.\nTo achieve this, we (a) do not explicitly examine\nour formalization, instead providing pointers to the\nformalization of each constituent piece; (b) make\nuse of schema diagrams to convey generalized re-\nlationships between classes in a simplified visual\nformat; and (c) differentiate between our conce\u0440-\ntualization and implementation of the ontology, as\na way to specifically address design decisions inde-\npendent of any reused ontologies.\nThe conceptual layer is discussed in Sections 4.1\nand 4.2: the KWG Core, a set of three tightly re-\nlated classes, and a reusable kernel whose struc-\nture was extracted from (and still eventually im-\nplemented using) the SOSA/SSN ontology. These"}, {"title": "4.1. The Know WhereGraph Core Structure", "content": "The core of the KWG ontology is actually quite\nsimple, as it serves a straightforward purpose: \u201chaz-\nards need to be linked to the places that they im-\npact.\" These links are served in two ways: direct\nintegration and alignment to the underlying DGG.\nThus arise our three main classes: Hazard, Region,\nand Cell.\nThe Hazard Class is a specific form of physi-\ncal phenomena that primarily interests (at the time\nof this writing) KWG. We consider a hazard to be\na physical phenomenon that can (generally nega-\ntively) impact civilization in some way and that is\nanchored in space and time. That is, it will have\nits own underlying geometry, which is integrated\nwith both the individual cells of the DGG and the\nunderlying geometries (when available) for human-\nmeaningful regions. The Hazard is then temporally\nscoped in a manner appropriate to the originating"}, {"title": "4.2. A Reusable SOSA/SSN Kernel", "content": "There are two types of integration that KWG sup-\nports. The KWG Core classes (from the previ-\nous section) integrate across broader notions of\nspace, time, phenomena, and their alignment to\nsome DGG. The second method is through a consis-\ntent representation of how the different hazards and\nother geospatial phenomena impact these places\n(e.g., through storm tracks) or what characteristics\ncan be measured or observed about these places\n(e.g., demographic statistics). To accomplish this,\nwe extracted a kernel structure from the SOSA/SSN\nontology [15, 16, 12]. Eventually this is imple-\nmented directly from the classes of the SOSA/SSN\nontology (Sec. 4.4.3), GeoSPARQL (Sec. 4.4.1),\nand QUDT (Sec. 4.4.5)."}, {"title": "4.3. Utilized Ontology Design Patterns", "content": "During the development of the KWG ontology, it\nwas necessary both to create new patterns and to\nadapt existing patterns. So far, four new patterns\nhave been developed: the hierarchical features ODP\n[31], the causal relations ODP [32], the taxonomy\nalignment ODP [33], and the computational obser-\nvation ODP [30]. Existing patterns were selected\nfrom MODL [28]: entity with provenance ODP and\nthe agent role ODP."}, {"title": "4.4. Implementation", "content": "We have developed several standalone ontologies\nand resources, and reused quite a few well-known,\nstandardized, or W3C recommended vocabularies,\ntaxonomies, and ontologies, as described below.\nThis helps to enhance interoperability with other\nknowledge graphs, to maintain consistency in our\ndata model, and to leverage existing tools that sup-\nport these vocabularies.\nThe Know WhereGraph Ontology is specified in\nOWL-DL. This allows us to take advantage of\nscoped and qualified domain and range axioms, as\nwell as axiomatically specified role-chains, transi-\ntivity, and functionality using the axiom patterns as\nfound in [7]. At the time of this writing, there are\n150 classes, 70 object properties, and 75 data prop-\nerties."}, {"title": "4.4.1. Modeling and Representing Space", "content": "We used GeoSPARQL[19, 1], an OGC standard, to\nrepresent our geospatial data in RDF. It, in turn,"}, {"title": "4.4.2. Modeling Time", "content": "The Time Ontology is (re)used for all representa-\ntions of time within the KWG Ontology. The super-\nproperty for most time-related conceptualizations\nis kwg-ont:hasTemporalScope, which effectively\nhas a range of any TemporalEntity from OWL:Time\nand is most often used with Hazard. However,\nwe also specify TemporalEntity to be the range of\nresultTime and phenomenon Time for Observa-\ntions. For serialization of the actual time-related\ndata, we reuse the XML schema datatypes (e.g.,\nxsd:dateTime)."}, {"title": "4.4.3. Modeling Observations", "content": "As mentioned previously, SOSA/SSN was reused\nto implement the Observation and related classes\nwithin the KWG ontology. In particular, we model\nobservations made by sensors that detect physical\nproperties (e.g., climate, weather, hazard proper-\nties) and chemical properties (e.g., air pollutants),\nand information about demographics and public\nhealth (e.g., disease statistics, socioeconomic in-\ndicators such as poverty and social vulnerabil-\nity). We have accordingly refined the interpreta-\ntion of two concepts: sosa:FeatureOfInterest and\nsosa: Observation.\nThe first, sosa:FeatureOfInterest, is the main class\nfor representing FOIs (objects and phenomena that\nare being observed or measured) in the ontology.\nFOIs can be physical entities or conceptual en-\ntities, such as a hazard event, an administrative\nregion boundary, or an abstract concept like S2\ncell geometry. The second, sosa: Observation,\nis a class to represent any measurement of a\nproperty of a FOI that is made by a sensor.\nsosa:ObservationCollection denotes a group of re-\nlated observations that are made by one or more\nsensors over a period of time, and share com-\nmon characteristics such as the observed prop-\nerty or time of observation, and so on. The\nsosa:hasMember property denotes the set of ob-\nservations that belong to the collection. An ob-\nservation or observation collection has a num-\nber of properties that describe its characteris-\ntics, such as sosa:observedProperty, which in-\ndicates the property or phenomenon being ob-\nserved; sosa:madeBySensor indicates the sensor\nthat made the observation; sosa:resultTime indi-\ncates the time at which the observation was made;\nsosa:hasResult indicates the value of the observa-\ntion; and hasFeatureOfInterest indicates the entity\nbeing observed.\nIn KWG, a sosa:FeatureOfInterest generally sat-\nisfies both (i) that it is a thing whose property\ncan be estimated or calculated [15, 16] and (ii)\nthat it is a thing that can have a spatial rep-\nresentation and an associated geometry [19, 1].\nIn this sense, even though upper ontologies clas-\nsify events and things/objects/features as distinct\nclasses based on the endurant-perdurant catego-\nrization [22], the fact that a hazard satisfies both\n(i) and (ii) allows us to identify the HazardE-\nvent class both as a sosa: FeatureOfInterest and\na geo:Feature. Meanwhile, it is also worth not-\ning that such a refinement (particularly the added\ndefinition of (ii)) still aligns with SOSA/SSN's\ndefinition of sosa:FeatureOfInterest as in KWG,\nmost datasets are about environmental observa-\ntions, which are anchored to a spatial representation\non the surface of the earth.\nObservations (and their collections) in SOSA are\ndefined as estimates or calculations of the value of\na property made using a sensor (device, agent, or\nsoftware),. Although measurements such as census\ndata from community surveys and soil-type maps\nconstructed from surveys conducted over the course\nof a century do not precisely satisfy this definition,\nit seems plausible for us to model them using the\nsosa:Observation|ObservationCollection classes.\nIn this case the features of interest are either some\nspatial region (Region) such as an administrative\nregion or a region that shares a common property\n(e.g., soil type), or a spatial grid (S2Cell).\nFinally, we would like to highlight that differ-\nent from traditional works of using SOSA/SSN,\nin which sosa:observableProperty (often defined\nby experts) is used to integrate different datasets,\nKWG mainly relies on the spatiotemporal dimen-\nsion (e.g., Region or Cell) of the observation to\nachieve the integration, and our way of model-\ning sosa:observableProperty is mainly bottom-\nup starting from the nature of the real world\ndatasets. Employing such a strategy is due to the\nfact that KWG attempts to integrate over 30 the-\nmatic datasets and their observable properties are"}, {"title": "4.4.4. Modeling the KWG Metadata", "content": "As KWG and its ontology grew, it became very dif-\nficult to understand the contents of the graph be-\ncause its size engendered project management gaps\n(i.e., overlapping graph development efforts due to\nsimilarity in phenomena or diverging sources of\ndatasets as new, better, or less stale sources were\nidentified). Furthermore, we wished to ascribe\nprovenance to the constituent data, but avoiding so-\ncalled triple explosion. To do so, we mainly mark\nthe provenance of observable properties because\nthey are modeled differently in different datasets.\nSpecifically, this strategy links observable proper-\nties to the datasets from which they were derived\nand the organizations that originally provided\nthem as opposed to a per assertional statement\nascription of provenance. While this slightly in-\ncreased query complexity (i.e., the number of state-\nments between the original provenance and any par-\nticular observation is increased), this slight increase\nin complexity actually created a much clearer top-\nlevel view of the graph and what it contains. This\nstrategy is distinct from creating named graph, as\nwe are not directly encapsulating any triples into a\ndistinct graph. Instead, we are explicitly grouping\nthe ObservablePropertys and FeatureOfInterests,\nwhich can then be used to extract a subgraph, as\nnecessary.\nThe metadata model distinguishes between two\ndifferent types of subgraphs that appear in the\nKWG: dataset and thematic. A dataset subgraph\nis straightforward: it is merely an encapsulation\nof a particular dataset as materialized against the\nKWG Ontology. A thematic subgraph is a set\nof dataset subgraphs that are unified according to\nsome theme which for now is merely modeled\nas a xsd:string. Our thematic examples largely per-\ntain to our pilot use cases: land valuation (which in-\ncorporates the dataset subgraphs for smoke plumes,\nsmoke plume forecasts, wildfires, and logistics) and\ndisaster response (which incorporates subgraphs for"}, {"title": "4.4.5. Modeling Quantities", "content": "The QUDT (Quantities, Units, Dimensions and\nData Types) ontology [25] is used for represent-\ning climate measurement data (such as tempera-\nture, Palmer drought severity index, cooling de-\ngree days) and their corresponding units of mea-\nsure. Specific climate quantity types (such as mean\nor value) are denoted using the kwg-ont:Quantity\nclass, a subclass of kwg-ont:QuantityValue. Mea-\nsured values and corresponding data properties are\nthen captured using data properties qudt-unit:unit\nand qudt-unit:numericValue."}, {"title": "4.5. The KnowWhereGraph Ontology Network", "content": "While developing the KWG Ontology, we identi-\nfied the need for integrating, harmonizing, and rea-\nsoning over specific domain data in the graph, and\nalso for consistently representing these data follow-\ning standard definitions and best practices. Thus,\ntwo standalone ontologies were developed that are\nimported by the KWG Ontology, yet are not in-\nterdependent (i.e., other ontologies may play the\nrole\u00b9\u00b9). We provide brief pointers for reference and\ndocumentation on how"}]}