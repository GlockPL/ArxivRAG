{"title": "Self-supervised Learning for Geospatial AI: A Survey", "authors": ["Yile Chen", "Weiming Huang", "Kaiqi Zhao", "Yue Jiang", "Gao Cong"], "abstract": "The proliferation of geospatial data in urban and territorial environments has significantly facilitated the development of geospatial artificial intelligence (GeoAI) across various urban applications. Given the vast yet inherently sparse labeled nature of geospatial data, there is a critical need for techniques that can effectively leverage such data without heavy reliance on labeled datasets. This requirement aligns with the principles of self-supervised learning (SSL), which has attracted increasing attention for its adoption in geospatial data. This paper conducts a comprehensive and up-to-date survey of SSL techniques applied to or developed for three primary data (geometric) types prevalent in geospatial vector data: points, polylines, and polygons. We systematically categorize various SSL techniques into predictive and contrastive methods, discussing their application with respect to each data type in enhancing generalization across various downstream tasks. Furthermore, we review the emerging trends of SSL for GeoAI, and several task-specific SSL techniques. Finally, we discuss several key challenges in the current research and outline promising directions for future investigation. By presenting a structured analysis of relevant studies, this paper aims to inspire continued advancements in the integration of SSL with GeoAI, encouraging innovative methods to harnessing the power of geospatial data.", "sections": [{"title": "I. INTRODUCTION", "content": "The digitization of urban and territorial environments has significantly enhanced the collection of extensive data in geospatial space, including user check-ins, traffic records, building footprints, trajectories, etc. Such data serves as the foundation of smart city applications, such as spatial keyword search [1], [2], location-based services [3], [4], geospatial knowledge graph [5], intelligent transportation systems [6], [7], and socioeconomic indicator prediction [8], [9]. This vast pool of data, while rich in potential, has long faced limitations and challenges for analysis and utilization for the development of geospatial artificial intelligence (GeoAI) [10], especially for the advanced models in the context of deep learning. In particular, the models are usually trained on specific tasks with abundant labeled data (e.g., traffic records), which can be both limited and costly to be accessible, especially considering data privacy regulations [11]. Additionally, despite the commonalities shared by various urban tasks, such as the close relationship between population density and land use, these models usually suffer from limited generalization across downstream tasks due to their reliance on task-specific supervision signals.\nIn recent years, self-supervised learning (SSL) [12] has emerged as a paradigm that can reduce the dependency on annotated labels while producing generic and task-agnostic data representations. The core principle of SSL is to extract transferrable knowledge from the target data through well-designed self-supervised tasks (i.e., pretext tasks), wherein the supervision signals are automatically generated from the data itself. SSL has achieved notable success across various domains and diverse data modalities, including images [13], [14], videos [15], language [16], [17], graphs [18], [19], time series [20], etc. For example, massive text corpora are structured in an autoregressive way, which is suitable for next token prediction for the training of large language models (LLMs) [21]. Images can be processed through data augmentation operations to produce multiple views, with the models trained to maintain invariance across views [13].\nA primary motivation of applying SSL techniques for GeoAI is to learn effective and generalizable representations (embeddings) for various forms of geospatial objects, such as POI, road segments, and urban regions. These objects underpin a variety of human activities within urban environments, and therefore serve as fundamental analytical units for various urban analytical tasks. For example, road networks support most human mobility activities within a city. As a result, a range of tasks, such as the predictions of traffic speed, congestion, and destination, commonly regard individual road segments as analytical units. In this case, SSL serves as a compelling framework to derive general-purpose representations for each type of geospatial data, capturing both the properties of each object as well as the complex interplay among different objects. The derived representations can be readily utilized to train simpler models for various downstream tasks while maintaining effective performance.\nApart from the strong generalization capabilities, the interest of applying SSL techniques is also driven by their intrinsic advantages to operate without extensive labeled datasets. This characteristic aligns seamlessly with addressing a common challenge in the geospatial domain-the scarcity of labeled data. Consequently, SSL offers a viable alternative to the conventional approach of developing specific deep learning models for each urban analytical task with sufficient labeled data in a supervised learning paradigm. However, geospatial data, embedded within geographical space, presents various forms with unique spatial features and adheres to certain geographical principles, such as the Laws of Geography [22]. As a result, SSL techniques commonly applied in other domains often fall short in capturing the spatial semantics attached to geospatial data. Furthermore, certain SSL operations utilized in other domains, such as data augmentation, need to be carefully designed to reflect the characteristics of different geospatial objects.\nDespite the clear distinction and a growing body of literature, the application of SSL within the domain of GeoAI, remains insufficiently discussed and explored. To bridge this gap, this survey provides a comprehensive and systematic review of the up-to-date SSL techniques tailored for geospatial data. In particular, we focus on three primary data types depending on their geometric forms, i.e., points, polylines, and polygons, which are prevalent in urban contexts. We organize a structured way to present the specialized SSL studies related to these data types, focusing particularly on those that operate independently of specific primary tasks and supervised settings. Furthermore, considering the rapid development in this domain, we discuss several emerging trends that have recently appeared, including multi-type learning and adaptation to language space. We also provide a brief review of task-specific SSL techniques applied to geospatial data. This survey aims to cover a wide range of model scopes, from specialized SSL models to advanced multi-modality models, applied to different geospatial data types. The main contributions of this survey are summarized as follows:\n\u2022 We present a detailed and up-to-date review of SSL techniques for geospatial data, focusing on three types of geospatial vector data in urban environments: points, polylines, and polygons. To the best of our knowledge, this work is the first to systematically discuss SSL techniques tailored for geospatial data.\n\u2022 We introduce a comprehensive and structured taxonomy for specialized SSL models designed for the studied geospatial data types. Our categorization includes an analysis of intrinsic characteristics and contextual information within each data type, encompassing discussion on both predictive and contrastive SSL implementations.\n\u2022 We review several recent advancements and task-specific SSL techniques for geospatial data, providing insights into the emerging and promising trends applied to GeoAI.\n\u2022 We discuss several key challenges for SSL in GeoAI, and propose promising future directions to advance this domain.\nRelated Surveys and Our Distinction: Several recent surveys have discussed the application of SSL, mainly focusing on other domains, such as general SSL [12], SSL for computer vision [14], graph data [18], [19], time series [20], and recommender systems [23]. Recognizing the lack of dedicated SSL exploration within the domain of GeoAI, this paper presents a comprehensive and systematic review of SSL tailored for geospatial data, which serves as the foundations in numerous downstream applications. On the other hand, several recent surveys have paid attention to spatio-temporal data analytics with various emphases, such as trajectory data mining [24], [25], urban foundation models [26], geo-location encoding [27], and supervised/generative deep learning [28], [29]. These surveys generally fall within the domain of GeoAI, and may overlap with some studies discussed in this paper. However, this survey is distinctive as it pioneers in structuring the knowledge from the unique perspective of SSL, detailing its developments across different geospatial data types and providing novel insights into the applications of SSL in geospatial contexts.\nPaper Structure: The rest of this survey is organized as follows. Section II provides definitions, preliminary concepts, and background knowledge necessary for the subsequent sections. Section III, IV, and V look into the details of specialized SSL techniques applied to geospatial data with three distinct geometric types: points, polylines and polygons, respectively. For each data type, representative data instances are further elaborated in the context of SSL, including POI for points, trajectory and road network for polylines, and region for polygons. Section VI highlights emerging trends in this domain, such multi-type learning and adaptation to language space, and provides an overview for task-specific SSL techniques for geospatial data. Section VII discusses several promising future research directions. Finally, Section VIII concludes this paper."}, {"title": "II. DEFINITION AND BACKGROUND", "content": "In this section, we first introduce the definition of three types of geospatial vector data examined in this paper. Then we present the paradigms of SSL applied to geospatial objects based on the traits of pretext tasks. Last, we discuss some preliminaries on typical models that encode these geospatial data types."}, {"title": "A. Definition of Geospatial Data Types", "content": "The diverse and rich data sources collected in urban spaces, which display unique geospatial characteristics, can be mainly categorized into three data types in terms of their geometric representations: points, polylines and polygons [30]. These data types are illustrated in Fig. 1. Then we provide formal definitions for each of these types to establish a clear understanding necessary for subsequent discussions and analyses.\nDefinition 1 (Point). A point in the geospatial context is represented as $p = (l,x)$, where $l$ denotes the geographical coordinates, and $x$ refers to the associated features of the point, such as attributes or readings. This data type indicates the spatial locations equipped with contextual information, applicable to data instances such as POIs and sensor measurements.\nDefinition 2 (Polyline). A polyline in the geospatial context is defined as a sequence of connected line segments, represented by a list of vertices $L = [(l_1, x_1), ..., (l_n,x_n)]$, where $l_i$ denotes the geographical coordinates of the i-th point, and $x_i$ denotes its associated features, such as timestamps or semantic tags. This data type captures the sequential nature and directionality of spatial paths, applicable to data instances such as trajectories and road networks.\nDefinition 3 (Polygon). A polygon in the geospatial context is defined as a closed shape consisting of a sequence of line segments that connect to enclose an area, denoted by $B = [(l_1, l_2), ..., (l_{n-1}, l_n), (l_n, l_1)]$, where $l_i$ represents the geographical coordinates of the i-th vertex. The vertices are sequentially linked, with the last vertex reconnecting to the first vertex to complete the polygon. By default, the line segments of a polygon are arranged to ensure that it does not intersect with itself, maintaining a simple, closed loop. In urban contexts, this data type can be employed to describe administrative regions or subzones in urban spaces. Therefore, research on polygons often extends its focus beyond its geometric configuration, placing emphasis on the semantic patterns exhibited by objects within its enclosed area."}, {"title": "B. Paradigms for Self-supervised Learning", "content": "SSL techniques for geospatial objects can be divided into two categories: predicative and contrastive, according to the design of pretext tasks.\n1) Predicative Methods: Predictive methods employ pretext tasks that are formulated as prediction problems, with objectives derived from the original data instances. Specifically, these methods involve tasks like the reconstruction of corrupted geospatial objects using a subset of available data, or the prediction of auxiliary labels that are extracted from the attributes or structures of geospatial objects. They can be formulated as:\n$\\displaystyle f_{\\theta, \\phi}^* = \\arg \\min_{f_{\\theta}, p_{\\phi}} \\mathcal{L}_{pre} (p_{\\phi} (f_{\\theta}(D, D_c)), D_t)$\n(1)\nwhere $f_\\theta$ and $p_\\phi$ represent the geospatial encoder and the pretext decoder respectively. $D$ denotes the target geospatial objects, which can be of any data types. $D_c$ is the context information associated with $D$, and $D_t$ denotes the prediction objectives, which could either be the original data instance for reconstruction tasks, or additional features excluded from the encoder input for auxiliary label prediction. $\\mathcal{L}_{pre}$ is the loss function that measures the prediction error, such as cross-entropy loss or mean squared error (MSE) loss.\n2) Contrastive Methods: Contrastive methods are based on the principle of maximizing agreement between different views generated from the same data instance. Specifically, these methods aim to pull closer the representations of positive view pairs, which are derived from various data augmentation operations of the same data instance, while pushing apart the representations of negative view pairs from different data instances. They can be formulated as:\n$\\displaystyle f_{\\theta, \\phi}^* = \\arg \\min_{f_{\\theta}, p_{\\phi}} \\mathcal{L}_{con} (p_{\\phi} (f_{\\theta}(\\tilde{D}^1, \\tilde{D}_c^1)), p_{\\phi} (f_{\\theta}(\\tilde{D}^2, \\tilde{D}_c^2)))$\n(2)\nwhere $f_\\theta$ and $p_\\phi$ represent the geospatial encoder and the pretext decoder respectively. $\\tilde{D}^1$ and $\\tilde{D}^2$ are two distinct views generated from the target geospatial objects $D$, which can belong to any geospatial data types, and $\\tilde{D}_c^1$ and $\\tilde{D}_c^2$ are the context information associated with these respective views. $\\mathcal{L}_{con}$ is the contrastive loss function that quantifies the degree of agreement, typically measured by mutual information estimator [12], such as InfoNCE [31], JS divergence [32] and triplet loss [33]."}, {"title": "C. Preliminaries on Geospatial Encoder", "content": "Given the diversity of geospatial data types discussed in this survey, each with its unique geometric (locational) and intrinsic properties, the utilized geospatial encoder $f_\\theta$ would be varied to accommodate their distinct characteristics. Therefore, we provide a brief introduction on several neural network modules that are frequently employed or adapted as geospatial encoders.\n1) Graph Neural Networks: Graph Neural Networks (GNNs) [34] correspond to a type of neural network architectures designed to process graph-structured data, aiming to capture the complex relationships and structures within the graph. GNNs employ message-passing operations iteratively on the graph, where the representation of a node $v$ is updated through interactions with its neighbors. This process can be expressed as:\n$\\displaystyle h_v^{(l)} = F^{(l)}(h_v^{(l-1)}, AGG^{(l)} (\\{h_u^{(l-1)}\\}_{u\\in \\mathcal{N}(v)} ))$\n(3)\nwhere $h_v^{(l)}$ indicates the representation of $v$ at layer $l$ and $\\mathcal{N}(v)$ denotes the neighbors of $v$. $AGG^{(l)}$ is the message aggregation function at layer $l$, which collects and combines node features, and potentially edge features, from the neighbors, and $F^{(l)}$ is the function that updates the representation of $v$ based on the aggregated information. For geospatial objects, GNN are frequently utilized to model discrete objects, enabling the capture of complex relationships among them.\n2) Sequential Models: Sequential models are designed to process input data composed of sequences, which include domains such as time series, text, audio, and video. Over the past decade, neural network architectures have exhibited exceptional performance in sequence modeling due to their capability of capturing dependencies effectively. The general process can be described as:\n$\\displaystyle [h_1, ..., h_n] = F([x_1, ..., x_n]; \\Theta)$\n(4)\nwhere $[x_1,..., x_n]$ denotes the input sequence, $[h_1,..., h_n]$ denotes the hidden representations output by the sequential model F, which is parameterized by $\\Theta$. Recurrent Neural Networks (RNNs) accomplish this by recursively processing the current input along with previous elements of the sequence, where the previous elements are encoded into internal hidden states, leading to several model variants, with GRU [35] and LSTM [36] being the most notable ones. In recent years, the Transformer architecture [37] has revolutionized sequence modeling by handling historical sequences in a parallel manner, instead of the recursive approaches. Meanwhile, it demonstrates superiority of modeling pairwise relationships between any two positions in a sequence through self-attention mechanism. For geospatial objects, sequential models are particularly valuable for modeling trajectories or data instances that are built to consider the sequential dependencies.\n3) Pre-trained Models: The evolution of advanced sequential models, especially those based on the Transformer architecture, have marked the milestone in the development of pre-trained language models. One popular paradigm is to adhere to the principles set by BERT [38]. These models [39]\u2013[42] leverage large-scale datasets to employ the training objective of masked language modeling (MLM). This process enables the acquisition of rich and transferable representations, which can be fine-tuned for specific tasks with less labeled data. Another paradigm is to employ training with autoregressive language modeling (i.e., next token prediction), exemplified by ChatGPT and its counterparts [43]-[47]. These large language models (LLMs) demonstrate strong capabilities in language understanding and reasoning, transforming various tasks into the process of autoregressive language generation. The robust performance of these two paradigms has led to the widespread use of pre-trained language models to encode textual information associated with geospatial data or to adapt their training objectives to develop specialized representations. On the other hand, in scenarios where vision information, such as street view images, is associated with geospatial elements like polylines or polygons, pre-trained visual models are also utilized. These include CNN-based models [48], [49] and recent Transformer-based models [50], [51] trained on large-scale image datasets. When both textual and visual data sources are available, visual-language pre-trained models such as CLIP and its variants [52], [53] are employed to synergize the semantics of the two data modalities, enhancing the interpretability and utility of combined data sources in geospatial applications."}, {"title": "III. POINTS", "content": "Points are the most fundamental geospatial objects, forming the basic component of polylines and polygons. Each point is associated with a geo-location and associated features, such as text descriptions and categories. Recent studies have focused on learning effective representations for points with SSL techniques, enabling better accuracy in downstream GeoAI applications. As the most representative type of geospatial point data, points-of-interests (POIs) are significant in understanding user mobility and urban functionality. This section will primarily discuss POIs and the corresponding SSL techniques designed for them. The surveyed studies for road networks are listed in Table I"}, {"title": "A. Points-of-Interest", "content": "1) Intrinsic Attributes: POIs refer to the semantic locations in location-based services that users might be interested in visiting. Examples of POIs include restaurants, stores, schools, etc. Each POI is associated with geographical coordinates $l$ (i.e., geo-location) and usually a number of features $x = \\{name, categories, reviews\\}$, including the POI's name, one or multiple categories, and possibly a set of user reviews. Since the geo-location and features are in different formats, existing methods [5], [54], [55] often employ separate encoders to extract essential information from geo-location [27], categories, and other text features [38]. The encoded features are fused in a subsequent model, such as multi-layer perceptrons (MLP) or attention-based models, to obtain the POI representations [5], [54], [55]. The objective of SSL for POI is to learn an encoder $f_\\theta$ that can acquire a $d$-dimension latent representation of any input POI $p$, denoted by $e_p = f_\\theta(p) \\in \\mathbb{R}^d$, such that $p$'s geo-location $l$ and features $x$, as well as $p$'s context are well preserved in $e_p$. Based on this objective, we note that scenarios of (next) POI recommendation [56] are more related to specific tasks with supervised signals rather than the SSL setting. Therefore, we do not focus on these methods in this section.\n2) Context Information: The intrinsic attributes only include the information of individual POIs. POIs are often located in spatial environments where diverse types of POIS are present at different distance ranges. Besides, users' check-ins or queries related to POIs indicate the dependency on the urban functions of distinct POIs. Consequently, most SSL research for POIs has been dedicated to modeling the rich context information of POIs, including spatial neighborhoods, check-in sequences, co-query context, and temporal context. Spatial neighborhood. To effectively capture the spatial context of a POI, Skip-gram [57], GNNs [58]\u2013[60] and masked language modeling (MLM) [54], [55], [61], [62] have been explored. The skip-gram methods consider the spatial neighbors as the context of a POI, analogous to the surrounding words in Word2vec [63]. They minimize the errors in predicting the spatial context using the target POI embeddings. For instance, Place2vec [57] partitions the spatial neighborhood of a target POI into equal-distance bins and calculates a bin-wise boosting factor to increase the occurrence of popular POI categories in each bin. In this way, POI categories with a higher boosting factor will contribute more to the skip-gram learning objective. In this vein, Huang et al. [64] propose to preserve the hierarchical structure of POI categories in learning POI category embeddings. For example, the categories Japanese Restaurants and Chinese Restaurants should be similar in the embedding space due to their resemblance of functions and the fact that they often share the same generic category, e.g., Food. In this regard, they employ Laplacian eigenmaps as regularization terms to pull together the POI categories that share the same ancestor categories. This method is later extended in [65] and [66] to consider categories with close semantics in different years and the check-in sequences, respectively.\nGNN-based methods construct a graph where two POIs are connected by an edge if they are close in spatial. Leveraging the ability of GNNs to acquire the local structure of a graph, these methods encode the spatial neighborhood of a POI into its latent representation. To learn the POI representation in a self-supervised manner, predictive SSL methods have been exploited to predict either the intrinsic attributes of the POI or the relation between POIS. STPA [58] constructs a Delaunay triangulation graph based on the distance between POIs. Each node in the graph is a POI, represented by a one-hot encoding of its category. GNN is applied to acquire a target POI's representation by aggregating the category information from its neighbors in the Delaunay triangulation graph. Subsequently, a predictive objective is employed to predict the category of the target POI, given its latent representation. For objectives that predict the relations (competitive or complementary) between POIs, the relations between POIs are constructed based on certain heuristic rules. DeepR [59] builds the competitive relations between two POIs if they are close in spatial and frequently co-occur in the same query. DeepR employs a Heterogeneous POI Information Network (HPIN) to represent POI, brands, aspects, and their relations, and a spatial adaptive GNN to acquire the POI representations from neighbors. Given the representations of two POIs, it predicts whether they are in a competitive relation. PRIM [60] constructs competitive relations between different categories of POIs if they frequently co-occur in the same query. Likewise, it constructs complementary relations between POIs in the same category that frequently co-occur in the same query. To predict the relations, PRIM employs the POI representations obtained through a GNN that gives importance to the neighbors based on spatial distance and feature similarity.\nBesides, numerous studies leverage the MLM idea applied in pre-trained language models to learn POI representations [54], [55], [61]. The common idea behind MLM-based methods is to construct pseudo sentences from the spatial neighborhoods and then apply MLMs on the pseudo sentences. GeoBERT [61] divides the digital map into grids and proposes two methods to create a pseudo sentence from POIs residing in each grid cell. The first method creates the pseudo sentence by finding the shortest path between the two farthest POIs, passing through all POIs in the same grid cell. The second method returns the ordered sequence of POIs by their distance to the grid center. With the obtained pseudo sentences, GeoBERT treats each POI as a token and adopts the same training mechanism as existing MLMs - predicting a masked POI in the pseudo sentence based on others. SpaBERT [55] creates pseudo sentences by concatenating the names of neighboring POIs. For each POI, SpaBERT finds its neighboring POIS using Geohash and sorts them by their distance to the POI. Subsequently, SpaBERT masks some or all words of a certain POI in a pseudo-sentence and predicts the masked words based on the remaining words in the sentence. In this way, the learned POI representation preserves essential information for generating the words that appear in the nearby POIs, thus capturing the underlying correlations between geo-locations and text. To better leverage the spatial context and support query-POI matching, MGeo [54] designs several geospatial encoders to encode the spatial attributes of a POI, including ID, shape, map position, and relative location to neighboring spatial objects extracted from OpenStreetMap [67]. Subsequently, MGeo employs both predictive and contrastive SSL objectives to train these encoders. The predictive SSL objective minimizes the loss of predicting the masked attribute (e.g., shape) using other attributes. The contrastive objective mini- mizes the difference between the actual spherical distance and the distance computed by the representations of all pairs of POIs in the same batch. After training the encoders, MGeo fuses the text and spatial information through another MLM that predicts the masked words or spatial attributes of a POI.\nCheck-in sequence. Location-based services allow users to share their visits at POIs. Such visits are often referred to as \"check-ins\". Each check-in record is a triplet of $(u, p, t)$, denoting a user $u$ visiting a POI $p$ at a certain time $t$. The check-in records for a specific user can be arranged in chronological order, forming a check-in sequence. The check-in sequences produced by users often exhibit strong dependencies between POIs.\nExisting studies [68]\u2013[72] employ skip-gram or contextual bag-of-word (CBOW), which are two typical predicative objectives, to the check-in sequences. Specifically, C-WARP [68] learns POI representations to predict other POIs within the same check-in sequences. As a result, the co-occurrences of POIs in the same check-in sequences are preserved in the POI representations. Building upon this, CAPE [70] learns POI representations that effectively predict both IDs and texts of other POIs in the same sequences. In this way, the text information in the sequential context is encoded in the learned POI representations. Unlike previous methods that predict all POIs visited within a close time period, DeepMove [71] focuses more on the intent of the trip and considers only the origin and destination POIs of a trip. Utilizing an origin POI, DeepMove predicts other origin POIs with the same destination POI. Consequently, POIs with similar travel intents are projected into a close region in the learned representation space. Hier-CEM [72] extends the check-in sequence context by associating each check-in POI with the ancestor categories. POI2Vec [69] introduces a binary region tree to enhance the modeling of check-in sequences with spatial proximity.\nCo-query Context. In digital map services, users can submit text queries to search for POIs. The POIs clicked by a user in the same query are often correlated. Motivated by this, several studies have been dedicated to incorporating the co-query context in learning POI representations. ERNIE-GeoL [62] constructs a heterogeneous graph containing query and POI nodes to capture the correlation between POIs in the same query. POIs are connected by a typed edge if they are clicked successively in the same query or co-locate in the same geographical region. A POI node is connected to its historical query nodes. On the heterogeneous graph, ERNIE-GeoL runs a random walk algorithm to create node sequences, on which it applies two predictive SSL objectives to learn the representations of queries and POIs. Specifically, the first SSL objective minimizes the prediction errors for the masked words of POI or query nodes in the node sequence. The second SSL objective minimizes the error of predicting the geocoding in the discrete global grid system [73]. Besides, to enhance the learning of the text features of POIS, ERNIE-GeoL augments the text attribute of POIs by randomly swapping words with misspelled words or random words. POI relationship prediction methods, including DeepR [59] and SEENet [74], use the POI queries to construct competitive and complementary relations between POIs and employ GNNs to obtain POI representations that preserve the co-query information.\nTemporal Context. POIs may exhibit distinct relations at different times. For instance, a restaurant and a coffee shop might be competitive during breakfast and complimentary during lunchtime. Motivated by this, SEENet [74] proposes to learn POI representations for different time slots. It constructs a dynamic graph of POIs with changing relations between POIs and adapts GNN to capture the intra-time and inter-time correlations between POIs. SEENet optimizes two SSL objectives simultaneously. In the first SSL objective, SEENet divides the map into grid cells and considers POI at time $t$ and its corresponding grid cell at time $t-1$ as a positive sample. In contrast, negative samples are created by randomly replacing the grid cell with a random grid cell. Subsequently, it adopts a contrastive loss [75] to maximize mutual information based on the positive and negative samples. In the second SSL objective, SEENet predicts the existence of a relation between two consecutive time slots. The two SSL objective functions enable SEENet to encode time-specific features and the evolving relations between POIs in the POI representations.\n3) Applications: The POI representations acquired from the SSL methods can be applied to various downstream applications. Most POI representations can be used to predict specific POI attributes, such as category [58] and geo-location [54]. Besides, POI presentations can be directly used or used with a subsequent sequential model to predict the next POI visited by a user [68]\u2013[70]. The POI representations can also be used to answer POI queries by matching POI representations and the query representation [62]. Furthermore, the presentations of multiple POIs can be used for more complex geospatial data mining tasks. For instance, POI relation prediction methods [59], [60], [74] use the representations of two POIs to predict their competitive or complementary relations. Likewise, the POI representations are pivotal in matching POIs from different databases for entity resolution [76]. In addition, increasing studies have utilized POI embeddings in an aggregated manner for the inference of land use [64] or land use change [65] across years. The aforementioned applications demonstrate that the SSL methods can effectively encode POIs and their contexts, thereby helping to improve the accuracy of various GeoAI tasks."}, {"title": "IV. POLYLINES", "content": "Polylines serve as an important spatial data type, widely employed across diverse geospatial data mining applications to depict a range of features, such as contour lines, road segments, and trajectories. SSL for polylines aims to derive effective representations for such data instances, with a particular emphasis on road segments and trajectories due to their prominence in existing literature. We will discuss these two representative instances of polylines in a geospatial context, and present the specialized SSL techniques tailored to each data instance. The surveyed studies for road networks are listed in Table II"}, {"title": "A. Road Networks", "content": "1) Intrinsic Attributes: Road networks are composed of connected road segments", "77": "applies node2vec [78", "63": ".", "79": "targets at learning representations for intersections by treating intersections as graph nodes. This method refines node2vec by employing shortest-path random walk sampling and selecting positive intersection pairs based on defined road path distances for skip-gram training. Moreover", "80": [81], "82": "expands upon the vanilla graph structure by constructing a corresponding hypergraph", "83": ".", "Information": "Apart from the topological structure and the attributes associated with road segments and intersections", "81": [82], "84": "extends IRN2Vec to obtain representations for both intersections and road segments by selecting spatially nearby positive pairs among roads and intersections in skip-gram training. SARN [85", "93": "with graph augmentation techniques", "86": "develops a hierarchical GNN framework to model relationships from individual road segments to structural regions and further extending to functional zones. It involves incorporating trajectories to derive connectivity matrix in structural regions", "87": "is the initial effort to explicitly utilize detailed trajectories to enhance road network representation learning through predicative SSL. It equips skip-gram training with additional traffic and attribute prediction for context neighbors. Besides", "38": "route recovery", "88": "further extends this method by incorporating temporal consideration into the representations. It modifies the skip-gram training and the BERT framework by integrating parameterized trigonometric functions to capture dynamics and evolution in time dimension. JCLRNT [90", "SSL": "road-road, trajectory-trajectory and road-trajectory contrastive loss. Each type"}]}