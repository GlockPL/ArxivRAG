{"title": "From Votes to Volatility\nPredicting the Stock Market on Election Day", "authors": ["Igor L.R. Azevedo", "Toyotaro Suzumura"], "abstract": "Stock market forecasting has been a topic of extensive re-\nsearch, aiming to provide investors with optimal stock recommendations\nfor higher returns. In recent years, this field has gained even more at-\ntention due to the widespread adoption of deep learning models. While\nthese models have achieved impressive accuracy in predicting stock be-\nhavior, tailoring them to specific scenarios has become increasingly im-\nportant. Election Day represents one such critical scenario, characterized\nby intensified market volatility, as the winning candidate's policies sig-\nnificantly impact various economic sectors and companies. To address\nthis challenge, we propose the Election Day Stock Market Forecasting\n(EDSMF) Model. Our approach leverages the contextual capabilities of\nlarge language models alongside specialized agents designed to analyze\nthe political and economic consequences of elections. By building on a\nstate-of-the-art architecture, we demonstrate that EDSMF improves the\npredictive performance of SP500 during this uniquely volatile day.", "sections": [{"title": "Introduction", "content": ""}, {"title": "Election Day and The Stock Market", "content": "In democratic nations, elections play a key role in shaping government leadership,\nparticularly presidential elections, which have a significant impact on economic\npolicies and market dynamics. The relationship between political events and\nfinancial markets has been widely studied, focusing on how elections influence\nstock market behavior and volatility [1,2,3]. Predicting market behavior during\nelection periods is crucial, as outcomes can shift investor sentiment, increase\nvolatility, and alter market efficiency, informing better decision-making and risk\nmanagement for investors."}, {"title": "Stock Market Forecasting", "content": "Advances in computational power and data mining have enhanced stock price\nforecasting, a key topic in financial research. Traditional models like Markowitz\nPortfolio Optimization [4] introduced mean variance analysis for optimizing port-\nfolio returns, while the Capital Asset Pricing Model (CAPM) [5] systematically\nanalyzes the risk-return trade-off.\nStatistical models such as ARIMA [6] and GARCH [7] have shaped stock\nprice forecasting and risk evaluation, helping to optimize portfolio composition.\nMonte Carlo Simulations [8], commonly used for pricing, also aid risk analysis\nand portfolio management.\nMachine learning has revolutionized forecasting with models that capture\ncomplex patterns in time series data. Algorithms like Support Vector Machines\n(SVM) [9], k-Nearest Neighbors (KNN) [10], and decision tree models such as\nXGBoost [11] and CatBoost [12] excel in predicting stock movements.\nDeep learning has further advanced stock price forecasting. LSTMs [13] cap-\nture sequential dependencies, while LSTM-RGCN [15] incorporates relational\ngraph convolutional networks to model inter-stock dependencies and predict\novernight price movements. To address the limitation of treating stocks as inde-\npendent, STHAN-SR [16] models stock interdependence and price evolution with\na spatiotemporal hypergraph attention network. ESTIMATE [17] enhances pre-\ndictions by integrating multi-order dynamics and stock behaviors using wavelet-\nbased hypergraph convolutions for efficient message passing.\nFor simpler architectures, StockMixer [18] uses a multi-layer perceptron (MLP)-\nbased framework to mix indicators, time patches, and stock influences, balancing\nperformance and efficiency. RSR [19] combines temporal graph convolutions with\nrelational data to model stock evolution, achieving strong returns in back-testing.\nHIST [20] improves forecasting accuracy by dynamically modeling stock relation-\nships through shared information, while HATS [21] uses hierarchical attention\nmechanisms to aggregate relational data, enhancing predictions of individual\nstocks and market indices."}, {"title": "Stock Market Forecasting on Election Day", "content": "As discussed, deep learning models have significantly improved stock market\nprediction accuracy, making them applicable in various scenarios. Our experi-\nments show that tailoring these models to specific conditions, such as election\ndays with high volatility, offers substantial benefits for investors. During such\nperiods, the inverse relationship between volatility and potential gains creates a\nunique profit opportunity.\nTo address this, we propose the Election Day Stock Market Forecasting\n(EDSMF) Model, which enhances stock market prediction by incorporating\npolitical signals and advanced machine learning techniques. This is the first work\nto combine the state-of-the-art forecasting architecture, StockMixer [18], with a\nnovel political awareness approach. The key contributions are:\n1. We propose a model that enhances stock forecasting by incorporating polit-\nical signals specific to each election candidate.\n2. We design a large language model (LLM)-driven agent that analyzes news\narticles to generate reports on candidates' economic plans and their potential\nimpacts.\n3. We conduct extensive ablation studies to evaluate trade-offs, highlighting\nstrengths and limitations."}, {"title": "Methodology", "content": ""}, {"title": "Overall Setting", "content": "Building on existing works, particularly StockMixer [18], we use normalized his-\ntorical stock data with indicators like open, high, low, close, volume, daily vari-\nation, and Exponential Moving Average (EMA) as inputs. Additionally, we in-\ncorporate sector information and new political signals to capture both market\ndynamics and political influences.\nOur experiments focus on analyzing the impact of the 2024 United States\npresidential election on financial markets. The election results, along with as-\nsociated news and political developments, offer a unique opportunity to study\ninvestor sentiment and market reactions. By integrating political signals, our\napproach aims to uncover sector-specific patterns and market-wide responses.\nUnlike Stock Mixer, which operates at a daily frequency, our model targets\nhigh-frequency trading, focusing on all S&P 500 stocks during the period from\n30/10/2024 to 06/11/2024 (U.S. election results). With a 1-minute dataset fre-\nquency, our model enables a more detailed analysis of stock movements. Further\ndetails about our dataset and its construction will be provided in the next sec-\ntion."}, {"title": "Problem Definition", "content": "The task involves predicting the closing price of the next data point, which\ncorresponds to the next minute during market hours or the next day if the\nmarket has closed. This prediction is used to calculate the 1-data-point return\nratio. Given a stock market dataset consisting of N stocks, where each stock $X_i \\in\\mathbb{R}^{T\\times F}$ contains historical data across F indicators within a lookback window of\nlength T, the return ratio $r_i$ at time t is computed as:\n$r_i^t = \\frac{\\hat{p}_i^t - p_i^{t-1}}{p_i^{t-1}}$         (1)\nwhere $\\hat{p}_i^t$ is the predicted closing price."}, {"title": "Input Features", "content": "The input dataset for the model includes a combination of traditional stock indi-\ncators, sector information, and newly introduced political signals. The following\ncolumns are used:\nopen: Opening price of the stock at the start of the given minute.\nclose: Closing price of the stock at the end of the given minute.\nhigh: Highest price reached during the trading day.\nlow: Lowest price reached during the trading day.\nvolume: Total number of shares traded during the day.\ndaily variation: Difference between the daily high and low prices.\nEMA (Exponential Moving Average): A weighted moving average that\ngives greater importance to recent prices. The EMA at time t is recursively\ncalculated as:\n$EMA_t = \\alpha \\cdot p_t + (1 - \\alpha) \\cdot EMA_{t-1}$,      (2)\nwhere $p_t$ is the closing price at time t, $EMA_{t-1}$ is the EMA of the previous\ntime step, and $\\alpha$ is the smoothing factor defined as:\n$\\alpha = \\frac{2}{n+1}$         (3)\nHere, n is the lookback period, which is set to 45 minutes for one-minute\nbars.\nsector: Sector classification of the stock (e.g., technology, healthcare, en-\nergy)."}, {"title": "Extending StockMixer with Political Signals", "content": "While Stock Mixer focuses on capturing stock-to-market, market-to-stock, and\ntemporal interactions using multi-scale MLP-based architectures, our approach\nintroduces political signals to account for the influence of national elections on\nfinancial markets. Before diving into the columns that compute this information\nlet's first explain on how we compute and obtain such information."}, {"title": "Candidate Impact", "content": "LLM-Agent Framework for Political Signal Generation To generate the\npolitical signals, we leverage a Large Language Model (LLM)-agents framework\nconsisting of four specialized agents:\n1. News Analyst\nRole: Analyzes recent political news and developments for both candi-\ndates.\nOutput: Summarized campaign dynamics and key policy announcements.\n2. Candidate Policy Analyst\nRole: Compares and contrasts the candidates' economic policies, includ-\ning taxation, regulation, and trade.\nOutput: Detailed markdown comparison of policy stances and their po-\ntential economic impact.\n3. Market Analyst\nRole: Evaluates how different sectors of the S&P 500 might be affected\nby each candidate's policies.\nOutput: Sector-specific analysis with clear rankings of sectors likely to\nbenefit or face challenges under each scenario.\n4. Synthesis Analyst\nRole: Integrates outputs from all previous agents to connect political\ndevelopments to specific market outcomes.\nOutput: A comprehensive markdown report highlighting impacted sec-\ntors, expected outcomes, and investment recommendations under each\ncandidate's potential victory.\nTo create the political signals, we analyzed over 90,000 news articles from\nvarious U.S. news sources, published between 2024-01-01 and 2024-11-06, pro-\nviding a comprehensive overview of the policies and campaign dynamics of the\ncandidates. Additionally, we incorporated official campaign documents 1 to en-\nhance the model's understanding of their economic proposals. This multi-source\napproach ensures a robust and nuanced dataset for generating the political sig-\nnals."}, {"title": "Candidate Context", "content": "The candidate_context variable encodes the prevailing political scenario by\nassigning each data point to one of the two candidates contesting the election.\nThis variable ensures the model can account for candidate-specific market in-\nfluences during training and validation. The candidate context is implemented\nin two distinct strategies: random assignment for training and validation, and a\nconsistent ensemble strategy for the test phase.\nRandom Assignment Strategy During the training and validation phases,\nthe candidate_context variable is randomly assigned to represent one of the\ntwo candidates contesting the election. This variable allows the model to learn\ncandidate-specific influences on stock market behavior."}, {"title": "Integration into StockMixer", "content": "By extending the StockMixer architecture to include candidate_impact_1, can-\ndidate_impact_2, and candidate_context as additional input features, we enable\nthe model to account for political signals during election periods. These variables\nallow the model to: (1) Capture candidate-specific effects on stock behavior, (2)\nAlign predictions with real-world election outcomes, (3) Enhance forecasting\naccuracy during high-volatility periods. This integration represents a novel ap-\nproach to political-aware stock market forecasting."}, {"title": "Final Expression", "content": "The extended framework predicts the closing price $\\hat{p}$ and the corresponding 1-\ndata-point return ratio $r$, where the input data $X \\in \\mathbb{R}^{N \\times T \\times (F+3)}$ includes the\nadditional political features:"}, {"title": "Loss Function", "content": "Following [18] use the 1-data-point (1 minute) return ratio of a stock as\nthe ground truth rather than the normalized price. This approach combines\na pointwise regression and pairwise ranking-aware loss to minimize the MSE\nbetween the predicted and actual return ratios while maintaining the relative\norder of top-ranked stocks with higher expected returns for investment as:\n$L = L_{MSE} + \\alpha \\sum_{i=1}^{N} \\sum_{j=1}^{N} max(0, -(\\hat{r}^i_t - \\hat{r}^j_t)(r^i_t - r^j_t))$,     (13)\nwhere $\\hat{r}^i_t$ and $r^i_t$ are the predicted and actual ranking scores, respectively, and $\\alpha$\nis a weighting parameter."}, {"title": "Experiments", "content": ""}, {"title": "Experimental Setup", "content": "Datasets We evaluated our model on the United States 2024 presidential elec-\ntion using high-frequency stock market data sampled every minute between 2024-\n10-30 and 2024-11-06. The dataset was divided into three splits as follows:\nTraining: From 2024-10-30 (09:30) to 2024-11-04 (15:59), totaling 1,559\ndata points.\nValidation: From 2024-11-05 (09:30) to 2024-11-05 (15:59), totaling 389\ndata points.\nTesting (US Election Day): From 2024-11-06 (09:30) to 2024-11-06 (15:59),\ntotaling 389 data points.\nInfrastructure The implementation of the deep learning model is based on\nthe StockMixer [18] model, utilizing PyTorch\u00b2 for the core computations. For the\nLLM-agent model, we employed CrewAI\u00b3. The source codes for both components\nare publicly available: Code Repository.\nTo ensure a fair comparison, all samples were generated by sliding a 16-\nday lookback window across minute level data points. The experiments were\nconducted with a fixed loss factor a = 0.1, a learning rate of 10-3 and 100\nepochs. All computations were performed on a server equipped with one NVIDIA\nA100 GPU."}, {"title": "Results", "content": "To ensure fair and consistent results, each model was trained and evaluated at\nleast three times. The average performance was calculated for each run, and\nthe checkpoint with the lowest loss was selected, as defined by the loss func-\ntion in Equation 13. The evaluation considered multiple metrics, including IC,\nRIC, Prec@N, and SR, to assess both the predictive accuracy and risk-adjusted\nreturns."}, {"title": "Ablation Studies", "content": "To further investigate the contribution of candidate-specific weights to model\nperformance, we conducted a series of ablation studies with varying candidate\nimpact ratios. Figure 1 visualizes the performance of different ensemble config-\nurations ('Prec@10', 'IC', 'RIC', and 'SR') by assigning different weight distri-\nbutions to candidates. The results indicate:\nPrec@10: Higher candidate-2 weights generally improved precision, reflect-\ning a stronger alignment between candidate-2 policies and top-performing\nstocks.\nIC and RIC: Configurations with balanced or slightly candidate-1-dominant\nweights (e.g., '40-Candidate-1, 60-Candidate-2') provided the best correla-\ntion with actual stock performance, validating the importance of including\nboth candidates' influences.\nSharpe Ratio: The configuration '40-Candidate-1, 60-Candidate-2' demon-\nstrated the highest Sharpe Ratio, highlighting its superior risk-adjusted re-\nturns."}, {"title": "Conclusion", "content": "This study explores the intersection of political events and stock market forecast-\ning using high-frequency trading data from the 2024 U.S. presidential election.\nWe propose the Election Day Stock Market Forecasting (EDSMF) model,\nwhich integrates advanced methodologies with political signals generated by\na large language model (LLM)-driven agent framework. This model captures\ncandidate-specific impacts and contexts, offering a detailed understanding of\nstock behavior during periods of high volatility.\nThe results show that the EDSMF model improves predictive accuracy and\nrisk-adjusted returns. Ablation studies highlight the importance of balancing\ncandidate influence weights and the robustness of ensemble strategies. The in-\nclusion of political signals enabled the model to outperform the baseline Stock-\nMixer framework in key metrics, such as Information Coefficient (IC), Rank\nInformation Coefficient (RIC), Precision@10, and Sharpe Ratio (SR).\nIn conclusion, the EDSMF model bridges political awareness and financial\nmodeling, emphasizing the importance of scenario-specific forecasting architec-\ntures. We plan as future research to expand this framework by incorporating\nadditional political and macroeconomic variables and exploring the framework\nwith other countries election periods."}]}