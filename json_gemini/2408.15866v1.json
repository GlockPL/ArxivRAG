{"title": "Retrieval-Augmented Instruction Tuning for Automated Process Engineering Calculations : A Tool-Chaining Problem-Solving Framework with Attributable Reflection", "authors": ["Sagar Srinivas Sakhinana", "Geethan Sannidhi", "Venkataramana Runkana"], "abstract": "The current technology landscape lacks a foundational AI model for solving process engineering calculations. In this work, we introduce a novel autonomous agent framework leveraging Retrieval-Augmented Instruction-Tuning (RAIT) to enhance open, customizable small code language models (SLMs) for these calculations. By combining instruction-tuned code SLMs with Retrieval-Augmented Code Generation (RACG) using external tools, the agent generates, debugs, and optimizes code from natural language specifications. Our approach addresses the limitations of the current lack of a foundational AI model for specialized process engineering tasks and offers benefits of explainability, knowledge-editing, and cost-effectiveness. Additionally, we curate custom datasets of chemical and process engineering problems and solutions to overcome data scarcity. Experimental results show that our framework matches the performance of large-scale proprietary models on benchmark datasets, proving its effectiveness and usability.", "sections": [{"title": "1 Introduction", "content": "Basic chemical principles and process calculations, including material and energy balances, heat transfer, phase equilibrium, and reaction kinetics, underpins modeling and optimization in the chemical process industries. These principles are crucial for control and optimization. Process dynamics predict plant behavior and stability, while control ensures desired conditions, quality, and safety. Optimization maximizes profitability, productivity, and efficiency within constraints, contributing to operational excellence. Advances in generative AI, particularly general-purpose large language models (LLMs) like OpenAI's GPT-4 [5] and Google's Gemini [8], have shown remarkable proficiency in mathematical reasoning and problem-solving skills due to extensive pretraining, revolutionizing various fields. These LLMs can assist engineers in making informed decisions and innovating in the chemical and process industries as decision support tools. Despite these advancements, their ability to solve complex chemical and process calculations remains understudied. Additionally, there is currently no specialized foundational model built for tackling complex chemical and process calculations. There is a need to fine-tune existing pre-trained LLMs on large-scale, domain-specific datasets to develop a new core foundational AI model"}, {"title": "2 Proposed Method", "content": "In this work, we introduce an autonomous agent framework designed to write, debug, and optimize code for systematically solving complex chemical and process calculations, fundamental to the design, analysis, and optimization of the chemical process industry (CPI). The agent performs Retrieval-Augmented Code Generation (RACG), utilizing advanced code-specific small language models (SLMS) such as Google CodeGemma[1] or Meta CodeLlama[4] with the ReAct (Reason + Act) prompting[12] technique to understand and generate code from natural language specifications. Code SLMs lack pre-trained knowledge to generate code for solving chemical and process calculations. Conversely, fine-tuning[14] by incorporating relevant domain-specific knowledge offers task-specific customization"}, {"title": "3 Experiments", "content": "Datasets: The Retrieval-Augmented Instruction-Tuning (RAIT) technique, which combines tool-augmented RACG and instruction-tuning techniques, can enhance code SLMs' capabilities in handling complex chemical and process engineering problems. To optimize their performance, code SLMs require extensive instruction-tuning using curated datasets to overcome the limitations of their lack of pre-training knowledge, ensuring familiarity with the terminology, methodologies, and typical problem-solving approaches in chemical and process engineering. Solving these problems demands a strong grasp of mathematical concepts and advanced computational tools (e.g., Python libraries). We address this by using instruction-tuning to equip code SLMs with both theoretical knowledge and computational tool learning, allowing them to utilize appropriate tools, thereby augmenting their domain-specific expertise for solving complex chemical and process engineering problems. We have curated a custom instruction-tuning dataset focused on mathematical modeling and numerical algorithms"}, {"title": "4 Conclusion", "content": "In conclusion, the proposed RAIT technique effectively enhances code SLMs for complex chemical engineering calculations. By combining retrieval-augmented generation with instruction-tuning, the RAIT technique addresses the limitations of code SLMs in specialized tasks. Experiments demonstrate the effectiveness of RAIT's techniques, rivaling larger language models in domain-specific applications. Our work offers a promising direction for developing efficient, specialized AI tools within the chemical process industry. Future work should focus on developing more comprehensive and diverse datasets for instruction-tuning, incorporating a wider range of external tools and APIs, and exploring advanced techniques for knowledge retrieval and integration. Additionally, investigating ways to improve the framework's explainability and interpretability would be valuable for building trust and facilitating adoption in industrial settings."}]}