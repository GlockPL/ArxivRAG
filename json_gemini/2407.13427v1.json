{"title": "DeepClair: Utilizing Market Forecasts for Effective Portfolio Selection", "authors": ["Donghee Choi", "Jinkyu Kim", "Mogan Gim", "Jinho Lee", "Jaewoo Kang"], "abstract": "Utilizing market forecasts is pivotal in optimizing portfolio selection strategies. We introduce DEEPCLAIR, a novel framework for portfolio selection. DEEPCLAIR leverages a transformer-based time-series forecasting model to predict market trends, facilitating more informed and adaptable portfolio decisions. To integrate the forecasting model into a deep reinforcement learning-driven portfolio selection framework, we introduced a two-step strategy: first, pre-training the time-series model on market data, followed by fine-tuning the portfolio selection architecture using this model. Additionally, we investigated the optimization technique, Low-Rank Adaptation (LoRA), to enhance the pre-trained forecasting model for fine-tuning in investment scenarios. This work bridges market forecasting and portfolio selection, facilitating the advancement of investment strategies.", "sections": [{"title": "1 INTRODUCTION", "content": "Market outlooks are beneficial for achieving successful investment returns in portfolio selection. Classic portfolio selection strategies involve not only analyzing current market situations but also utilizing future market states [17, 19, 27, 33]. The role of market forecasts in portfolio selection is renowned for its reliability in various sources from both academic communities and business industries [5, 44, 48]. Specifically, market forecasts can contribute to help investors understand macroeconomic trends, diversify their assets, mitigate risks, and ultimately achieve better returns [5, 22, 40].\nPrevious research works have proposed portfolio selection frameworks that employ deep reinforcement learning (RL) approaches [16, 20, 30, 45]. One of the most recent models, DeepTrader [45], introduced an RL-based framework that consists of an asset scoring unit, market scoring unit, and portfolio generator. Particularly, the purpose of the market scoring unit was to help the framework exploit current market conditions in adjusting its investment decisions. However, in real-world situations, unanticipated market dynamics may inflict severe losses in investment profits [18]. This necessitates the incorporation of market forecasts for minimizing expected risks in making asset-wise investment decisions (i.e., long and short), which naturally leads to the maximization of investment returns. Therefore, our work establishes cross-talk between two intertwined tasks which are market forecasting and optimal portfolio selection, posing another question of how to devise an integration of each of its approaches where the former employs reinforcement learning.\nTime-series forecasting models, mostly optimized by supervised learning, have undergone a series of model advancements. Their core design approach revolves using Transformers, which motivated many researchers to utilize them in stock price prediction tasks [11, 26, 29, 35, 43]. Meanwhile, other Transformer variants such as FEDformer demonstrated their success in long-term time series data prediction [3, 51, 52] which are attributed to their exploitation of external augmentations such as time series decomposition in Fourier domain.\nOur work's central motivation lies in the integration of two related tasks associated with distinct learning strategies which are market forecasting with supervised learning and portfolio selection with RL. Furthermore, we present two critical research questions regarding the under-explored compatibility of two learning methods and well-known difficulty of optimizing large-scale Transformers. To solve the former, we propose a transfer learning approach, by incorporating a pre-trained forecasting Transformer into a RL-based framework specializing in portfolio selection. This approach can be facilitated by RL, characterized by formulating a reward function optimized through investment trials under realistic and different market conditions.\nHowever, the latter remains a challenge as most state-of-the-art forecasting Transformers have massively large amount of trainable parameters especially the FEDformer (approximately 60 million in our case) [5]. While fine-tuning is deemed the primary choice in optimizing models for specific downstream tasks, adjusting a large number of parameters incurs additional computational burden. To cope with this, Low-Rank Adaptation (LoRA) were proposed to efficiently apply transfer learning from the pre-trained weights to downstream tasks [10]. Moreover, LoRA exhibited performance enhancements comparable to full fine-tuning methods, showing success in vision-to-text [49] and text-to-text [1, 46] transfer learning works.\nPerhaps the most motivational relevant work in our study design [31]'s approach to adopt RL in training large language models, mainly Transformer-based, on downstream tasks related to natural language processing. In fact, this work highlights LoRA's transferibility of textual knowledge trained with supervised learning method to task adaptation based on RL [38]. Therefore, we hypothesize that utilizing this approach in integration of two methodologies used in market forecasting and optimal portfolio selection task can lead to improved investment outcomes, which aligns with the common notion of market outlooks being useful in devising optimal portfolio selection strategies.\nIn this work, we introduce DEEPCLAIR, a deep clairvoyant portfolio selection model that leverages not only its current understanding of the market situation but also its forecasting of future market states. DEEPCLAIR leverages the advanced deep RL framework capabilities and incorporates a recently developed Transformer-based model that views time-series market data in the frequency domain. To the best of our knowledge, our novelty lies in the attempt to incorporate current transformer-based market forecasting into RL-based portfolio selection. This work represents a cornerstone empirical trial demonstrating that supervised pre-training tasks can aid RL scenarios, which are challenging to optimize in real-world environments. The contributions in this work are the following:\n\u2022 To the best of our knowledge, this is the first attempt to incorporate the current transformer-based market forecasting methodology into an automatic portfolio selection framework.\n\u2022 We pre-trained recently proposed transformer-based models on various time-series datasets and empirically chose FED-former with LoRA adaptation as our market price forecasting module.\n\u2022 Experiments on portfolio selection demonstrate DEEPCLAIR's ability to capitalize on its market forecasting ability to achieve the best investment returns compared to its baselines. Moreover, qualitative analysis shows how DEEPCLAIR can adaptively shift its positioning strategy during two phenomenal bullish and bearish periods."}, {"title": "2 RELATED WORKS", "content": "The evolution of time-series forecasting models witnessed a significant transition from earlier approaches to the advent of transformers. Informer [51] represents a notable model in this shift, followed by more recent advancements like Autoformer [47] and FEDformer [52]. These newer models capitalize on advanced capabilities for composing seasonal trends.\nTraditional portfolio strategies often lack adaptability to dynamic market conditions. In response, the introduction of RL-based portfolio selection models, as discussed in earlier works like Deep-Trader [45] and HADAPS [16], has aimed to address this limitation. Transformer-based time-series forecasting systems demonstrated success in various domains [13, 32, 50]. However, within our current understanding, attempts to integrate forecasting into portfolio selection approaches have primarily utilized deterministic models, as seen in the use of genetic algorithms [5]."}, {"title": "2.1 Time-series Forecasting Transformers", "content": "The evolution of time-series forecasting models witnessed a significant transition from earlier approaches to the advent of transformers. Informer [51] represents a notable model in this shift, followed by more recent advancements like Autoformer [47] and FEDformer [52]. These newer models capitalize on advanced capabilities for composing seasonal trends.\nTraditional portfolio strategies often lack adaptability to dynamic market conditions. In response, the introduction of RL-based portfolio selection models, as discussed in earlier works like Deep-Trader [45] and HADAPS [16], has aimed to address this limitation. Transformer-based time-series forecasting systems demonstrated success in various domains [13, 32, 50]. However, within our current understanding, attempts to integrate forecasting into portfolio selection approaches have primarily utilized deterministic models, as seen in the use of genetic algorithms [5]."}, {"title": "2.2 Reinforcement Learning adopting to Downstream Tasks", "content": "Adapting to downstream tasks utilizing the RL method was originally discussed in the context of traditional RL problems such as robotics [4]. It has since demonstrated its utility in the textual domain by adapting pre-trained language models to downstream tasks such as text summarization [36]. Furthermore, research by [31] has shown that language model training can adapt effectively to smaller human relevance corpora. Notably, the success of models like LLaMA2[41] has further validated the efficacy of this mechanism."}, {"title": "2.3 Parameter Efficient Fine-Tuning Method", "content": "After the Adapter [9] method came out to transfer the knowledge of the pre-trained textual language model to downstream text classification tasks, several methods have been introduced, including soft prompts [21], IA3 [23], and OFT [25]. Among these, LoRA [10] has emerged as a prominent approach.\nThe LoRA method has shown its possibility not only in textual adaptation tasks such as chatbot [1] and recommendation systems with textual cues [2] but also in vision-related domains. These include Vision Question Answering (VQA) [15, 49], 2D to 3D image generation [24] and text to 3D generation [46]. Additionally, LoRA has been explored for textual alignment using RLHF [31], showing potential for adapting models trained with supervised learning to RL context [38]."}, {"title": "3 PROBLEM STATEMENT", "content": "The following details are the preliminaries for our tasks.\nPROBLEM 1 (OPTIMAL PORTFOLIO SELECTION). Given a set of n assets \\(A = \\{a_1, a_2, ..., a_n\\}\\), we denote each ith asset \\(a_i\\) having historical stock prices as \\(P_{i,t} = [p_{i,t-w}, ..., p_{i,t-1}]\\) where \\(p_{i,j}\\) is the closing market price of asset \\(a_i\\) at historical time step j. At current time step t prior to market closing and given a window size of historical prices w (w \u2265 1), the objective of DEEPCLAIR is to dynamically adjust the portfolio composition \\(C = [c_{1,t}, c_{2,t}, ..., c_{n,t}]\\) where \\(c_{i,t}\\) is the portfolio ratio of asset \\(a_i\\) at time t. The goal is to maximize the return \\(\\delta_t = \\sum_{i=1}^{n} d_{i,t}c_{i,t}\\), where \\(d_{i,t} = (p_{i,t} - p_{i,t-1})/p_{i,t-1}\\).\nIn sum, the goal of a system is to make adaptive investment decisions given dynamic market circumstances at time t. As illustrated above, market forecasts can contribute to refining portfolio strategies for better investment returns. To solve 1, we formulate two tasks which are Learning to Forecast Market and Learning Optimal Portfolio Selection using the Transferred Market Forecasting Module.\nTASK 1 (LEARNING TO FORECAST MARKET). For each ith asset \\(a_i \\in A\\) and discrete time step t, the agent's task is to predict its future market state \\(P_{i,t} = [p_{i,t},..., p_{i,t+h-1}]\\) of forecast horizon h (h \u2265 1) given its historical prices \\(P_{i,t} = [p_{i,t-w},..., p_{i,t-1}]\\) of window size w. The learning objective in this task is to minimize forecast error between \\(P_{i,t}\\) and \\(\\hat{P}_{i,t}\\) where \\(\\hat{P}_{i,t} = [\\hat{p}_{i,t},..., \\hat{p}_{i,t+h-1}]\\) is the actual sequence of h closing market prices for asset \\(a_i\\).\nTask 1 serves as an auxiliary task, aiding the system in understanding and adapting to market trends, thereby improving its ability to make informed investment decisions.\nTASK 2 (LEARNING OPTIMAL PORTFOLIO SELECTION USING THE TRANSFERRED MARKET FORECASTING MODEL). The agent's task is to formulate an optimal portfolio strategy \\(C \\in U\\) for all assets \\(a_i \\in A\\) at discrete time step t. This involves considering both the actual market data \\(P_{i,t}\\) and the predicted market data \\(\\hat{P}_{i,t}\\) to maximize the total return \\(\\delta_t\\). \\(C_t\\) represents the vector of allocation weights \\(c_{i,t}\\) for each asset \\(a_i\\), indicating the proportion of the total portfolio value invested in each asset at time t.\nTask 2 and Task 1 are DEEPCLAIR's primary and auxiliary tasks respectively. Task 1 contributes to improving DEEPCLAIR's understanding in market trends and ability to exploit them in investment decisions involved in Task 2."}, {"title": "4 DEEPCLAIR", "content": "DEEPCLAIR is an advanced portfolio selection system that combines two components described in Fig 1: 1) a transformer-based time-series forecasting model \\(M_1\\) for portfolio evaluation to solve Task 1 and 2) a RL-based portfolio optimization framework \\(M_2\\) to solve Task 2."}, {"title": "4.1 Market Price Forecasting Model", "content": "The primary objective of this framework is to predict future asset prices \\(\\hat{P}_{.,t}\\) based on a given market signal \\(P_{.,t}\\).\n\\[\\hat{P}_{.,t} = M_1(P_{.,t})\\qquad(1)\\]\nwhere \\(P_{.,t} \\in \\mathbb{R}^n\\) and \\(P_{.,t} \\in \\mathbb{R}^{n,w}\\), w is a window size of historical prices and n represents the number of assets.\nIn this study, we adopted FEDformer [52] as our forecasting model \\(M_1\\), employing 2 encoder blocks and 1 decoder block. FED-former is renowned for its ability to capture the global view of time-series data, including overall trends, through a seasonal-trend decomposition method. This aligns with our model's objective of predicting preceding prices by capturing broader market trends, aiding in determining the proportion of long and short positions."}, {"title": "4.1.1 Training Procedures by Time Series Forecasting", "content": "We optimize \\(M_1\\) as regression problem for solving Task 1 by minimizing the prediction of the Forecasting model \\(\\hat{P}\\) and the real price data P."}, {"title": "4.2 Portfolio Optimization Framework", "content": "The objective of this framework is to optimize a portfolio optimization framework \\(M_2\\) by a RL method. \\(M_2\\) consists of Asset Scoring Module, Portfolio Selection Module, and Market Scoring Module."}, {"title": "4.2.1 Asset Scoring Module", "content": "The asset scoring module produces a confidence vector \\(v_{.,t} = \\{v_{1,t},..., v_{a,t}, ..., v_{n,t}\\}\\), where \\(v_{a,t}\\) is a confidence score of asset a at time t and n represents the number of assets.\n\\[v_{.,t} = ASM(P_{.,t})\\qquad(2)\\]\nThe notation of ASM denotes the Asset Scoring Module, with a window size of historical input prices w set to 5. The asset scoring unit integrates temporal and graph convolution layers, along with a spatial attention mechanism, enabling the capture of temporal correlations among asset prices."}, {"title": "4.2.2 Portfolio Selection Module", "content": "The portfolio selection module's (PSM) role is selection of long and short position vectors, \\(w^{long}_t\\) and \\(w^{short}_t\\), respectively. Here, \\(w_t = \\{w_{1,t}, w_{2,t}, ..., w_{n,t}\\}\\), where \\(w_{a,t}\\) is a weight for long or short position for asset a.\nThe PSM selects top \\(n_{long}\\) and a list of its indexes as \\(v^{long}_t\\) and for bottom \\(n_{short}\\) assets, \\(v^{short}_t\\) for each portfolio selection by using the asset score vector \\(v_t\\). Then PSM decides the proportions of each top and bottom assets with the proportion vector \\(w^{long}\\) and \\(w^{short}\\).\n\\[ w^{long}_{i,t} = \\begin{cases}  \\frac{\\exp(v_{i,t})}{\\sum_{j \\in v^{long}_t} \\exp(v_{j,t})} & \\text{if } i \\in v^{long}_t \\\\  0 & \\text{if } i \\notin v^{long}_t \\end{cases}\\qquad(3)\\]\n\\[ w^{short}_{i,t} = \\begin{cases}  \\frac{-\\exp(1-v_{i,t})}{\\sum_{j \\in v^{short}_t} \\exp(1-v_{j,t})} & \\text{if } i \\in v^{short}_t \\\\  0 & \\text{if } i \\notin v^{short}_t \\end{cases}\\qquad(4)\\]\neach elements in \\(w^{long}\\) \\(w^{long}\\) and \\(w^{short}\\) \\(w^{short}\\) vectors are normalized with the equations 3 and 4. We apply the softmax function for selecting portfolio actions because using the softmax function to optimize discrete action spaces in RL is a well-established approach [28, 34, 39]. This method is particularly relevant in the context of portfolio selection with RL [16, 20, 45]. A value of 0 is assigned to the assets for which no position is selected."}, {"title": "4.2.3 Market Scoring Module", "content": "Since market conditions are inherently unpredictable and uncertain [7], it is impossible to accurately predict stock movements solely based on historical data. However, previous approaches attempted to utilize the current market conditions to select actions aimed at achieving future optimal positions [45], under the naive assumption that the current market status will persist [27]. We advance this approach by incorporating outputs from the forecasting module to better inform decision-making.\nThe Market Scoring Module (MSM) is responsible for determining \\(p_t\\), which represents the Long and Short proposition of DEEPCLAIR.\n\\[\\hat{P}_{.,t} = M_1(P_{.,t})\\qquad(5)\\]\n\\[MSM(\\hat{P}_{.,t}) = Linear(M_1(\\hat{P}_{.,t}))\\qquad(6)\\]\n\\[\\mu_{\\tau}, \\sigma_{\\tau} = MSM(\\hat{P}_{.,t})\\qquad(7)\\]\nDuring the training phase, we sample \\(p_t\\) from the distribution \\(\\mathcal{N}(\\mu_{\\tau}, \\sigma_{\\tau})\\). In testing, we use \\(\\mu_{\\tau}\\) as the value of \\(p_t\\). This technique is for stable exploring the agent's action space, widely used in RL domains after Soft Actor-Critic technique [8], recently in the portfolio selection domain [16, 45].\nAdaptation of Forecasting Module using LoRA. We use LoRA[10] to adapt the forecasting module \\(M_1\\), which was trained in the pre-training task (Task 1), to the fine-tuning task (Task 2). The primary objectives of integrating the LoRA module are twofold: 1) to retain the forecasting ability established during the initial pre-training phase; and 2) to adapt the module's behavior for portfolio selection during the fine-tuning stage. We apply LoRA adapters to every transformer block in the encoders of forecasting model \\(M_1\\)."}, {"title": "4.2.4 Formulating Portfolio Selection Vectors", "content": "Final portfolio selection is done by using the proportion \\(p_t\\) between the long position vector \\(w^{long}\\) and we note that the short position vector \\(w^{short}\\).\n\\[ Portfolio^{long} = p_t \\times \\{w^{long}_{0,t}, w^{long}_{1,t} ..., w^{long}_{n,t}\\} \\qquad(8)\\]\n\\[ Portfolio^{short} = (1 - p_t) \\times \\{w^{short}_{0,t}, w^{short}_{1,t} ..., w^{short}_{n,t}\\} \\qquad(9)\\]"}, {"title": "4.3 Training Procedures by Portfolio Selection", "content": "The primary objective of DEEPCLAIR is to maximize reward \\(r_1\\) by exploring the action spaces defined in investment outcome Portfolio\\(^{long}\\) and Portfolio\\(^{short}\\). This \\(r_1\\) is defined as :\n\\[ r_{1,t} = \\sum(\\delta_t \\circ Portfolio^{long}) + \\delta_t \\circ Portfolio^{short}) \\qquad(10)\\]\nwhere \\(\\delta_t\\) is a rate of return that is calculated by price change within the target day and \\(\\circ\\) stands for element-wise multiplication. If the directions of the price change and the position are the same, \\(r_{1,t}\\) has a positive value that strengthens the behavior by the value of amplifications, and if not, \\(r_{1,t}\\) acts like a negative reward because it has a negative value. The output is connected to the decision of the Asset Scoring Module and the Forecasting Module, so \\(r_{1,t}\\) is a signal to update all the parameters in Asset Scoring Module and the LoRA parameters in the Forecasting Module.\nAlso, we add an auxiliary reward \\(r_{2,t}\\) to maximize the prediction capability of the Asset Scoring Module by using all of the confidence prediction parameterized as \\(v_t\\).\n\\[ r_{2,t} = \\sum \\delta_t \\circ V_{.,t} \\qquad(11)\\]\nr\u2081 uses the final output of DEEPCLAIR, which is straightforward, but this neglects the other confidence scores in v, which could be helpful signals while training. r2 is defined to overcome the shortage of formulation about r1.\nThe final training objective of DEEPCLAIR is defined as follows:\n\\[ J(\\theta) = E_{v_t} [\\alpha log(p_t) \\times r_{1,t} + \\beta r_{2,t}] \\qquad(12)\\]\n\\(\\beta\\) are used to control the magnitude of the \\(r_{2,t}\\). We set \\(\\alpha\\) as 0.05, \\(\\beta\\) as 1."}, {"title": "5 EXPERIMENTAL SETTINGS", "content": "We evaluated our model using Nasdaq and Dow Jones datasets, selecting the top 26 stocks by market capitalization as of 2023, with data from January 1992 to the present, sourced from Yahoo Finance\u00b9."}, {"title": "5.1 Dataset and Evaluation", "content": "We evaluated our model using Nasdaq and Dow Jones datasets, selecting the top 26 stocks by market capitalization as of 2023, with data from January 1992 to the present, sourced from Yahoo Finance\u00b9."}, {"title": "5.2 Model Baselines", "content": "The baseline models used in the experiments and categorized by their approaches are the following,\n(1) Benchmark Index: This indicates the market trends of each of its associated major index in the U.S. market.\n(2) Traditional Investment Strategies: Cross-Sectional Momentum strategy(CSM) [12] and Buy Losers Sell Winners strategy(BLSW) [6].\n(3) Deep Reinforcement Learning Approaches\u00b2: EIIE (Ensemble of Identical Independent Evaluators) [14] is a foundational open-source RL framework for portfolio selection. DeepTrader [45] and HADAPS (Hierarchical Adaptive Multi-Asset Portfolio Selection) [16] are recent RL-based portfolio management systems."}, {"title": "6 EXPERIMENTAL RESULTS", "content": "DEEPCLAIR was designed as a RL-based portfolio selection AI system, harnessing the predictive capabilities of a current transformer-based time-series forecasting model. We conducted experiments to address the following research questions, validating the underlying design principles:\nRQ1. Does incorporation of market forecasting into portfolio selection framework contribute to better investment results?\nRQ2. For architectural design of DEEPCLAIR, what is the optimal market forecasting transformer-based model?\nRQ3. For incorporation of FEDformer into DEEPCLAIR, what is the best optimization strategy?\nRQ4. Can we find empirical evidence supporting DEEPCLAIR'S adaptive capabilities in capturing market shifts?"}, {"title": "6.1 RQ1. DEEPCLAIR shows superior investment performance and greatly benefits from market forecasts", "content": "Table 2 shows the results of the main experiments conducted on two separate datasets. The purpose of these experiments was to comprehensively evaluate and compare DEEPCLAIR's portfolio selection with other baselines. Notably, DEEPCLAIR outperformed its baselines in most evaluation metrics including ARR, ASR, CR and SoR in both datasets Nasdaq (15.22, 0.659, 0.346, 10.593) and Dow Jones (10.30, 0.526, 0.220, 8.052). The performance gain in terms of investment return is significant based on a comparison with the other baseline methods on both datasets.\nAccording to the experimental results, traditional investment strategies such as CSM and BLSW underperformed across all evaluation metrics on both datasets. This indicates that during our testing period, traditional strategies that follow trends (CSM) or their reverse (BLSW) were less effective compared to more adaptive trading strategies. DEEPCLAIR preemptively capitalizes on its forecasting ability to make rational investment decisions and evade the severe drawbacks of swaying itself towards uncertain market trends.\nThe experimental results featuring deep RL model baselines imply that adaptive investment strategies help mitigate risks. This is empirically shown by DEEPCLAIR unable to show the best performance in terms of risk measures AVol and MDD in both datasets (0.231, 48.59 and 0.196, 46.77). However, DEEPCLAIR which also employs deep RL to facilitate adaptive portfolio selection, still outperforms in other evaluation metrics related to risk-adjusted returns (CR and SoR). This suggests that integrating adaptive investment strategies with studying market trends amplifies portfolio selection's effectiveness."}, {"title": "6.2 RQ2. FEDformer is a suitable choice for the Market Scoring Module in DEEPCLAIR", "content": "Prior to choosing which transformer-based model is suitable for our DEEPCLAIR framework, we conducted experiments on four different time series datasets which are ETTH1, Electricity, Nasdaq and Dow Jones in Table 3. We first selected previously introduced forecast models which are Transformer, Informer, Autoformer, and FEDformer. A clear distinction in terms of forecasting performance (MAE, RMSE, and MAPE) was found between Transformer, Informer and Autoformer, FEDformer. This difference is mostly attributed to the seasonal-trend decomposition approach exploited by both Autoformer and FEDformer [47, 52] which is an autoregressive property helpful in long time-series forecasting. As shown in Table 3, FEDformer has outperformed other baselines in all three evaluation metrics.\nAdditionally, we conducted an ablation study on different transformer variants used as DEEPCLAIR'S market price forecasting model which are Transformer, Informer, and Autoformer, as shown in Table 4. In both the Nasdaq and Dow Jones datasets, FEDformer outperformed other transformer variants in providing accurate market forecasts which led DEEPCLAIR to make effective long and short decisions in unseen market circumstances. This is attributed to its ability to extract meaningful seasonal patterns in the frequency domain during the pre-training phase and exploit them to foresee fourteen years of uncertain market situations in an adaptive manner."}, {"title": "6.3 RQ3. Low Rank Adaptation applied to FEDformer's Encoder benefits optimization of DEEPCLAIR", "content": "As shown in Table 4, we explored various ways of incorporating the pre-trained FEDformer model into the adopted DeepTrader-based framework. The FEDformer was designed based on encoder-decoder architecture where two of the modules are interconnected via the Frequency Enhanced Attention block (FEA) [52]. Importing pre-trained transformer-based models and fine-tuning them on different downstream tasks has been a conventional practice in other domains, especially natural language processing [10]. As this is our first attempt to utilize the FEDformer in DEEPCLAIR, we conducted additional experiments related to several optimization methods associated with large pre-trained models. The additional experiments related to FEDformer are the followings\u00b3:\n\u2022 FED-Removed/Frozen/Finetuning: Ablated versions of Deep-Clair with FEDformer removed, parameters frozen, or parameters trainable, respectively.\n\u2022 FED-LORA: LORA applied to different components in the pre-trained FEDformer: all decoder layers (FED-LoRA-Decoder), the Frequency-Enhanced-Attention block (FED-LORA-FEA), or the Encoder, Decoder, and FEA (FED-LORA-ALL).\n\u2022 Transformer/Informer/Autoformer-LoRA-Encoder: LoRA applied to the Encoder in baseline models: Transformer [42], Informer [51], and Autoformer [3].\nAs shown in Table 3, experimental results for ablations on optimization of the FEDformer used as DEEPCLAIR's market forecasting module implicate several findings. We concluded that unfreezing all FEDformer parameters is not a feasible choice in optimizing DEEPCLAIR on the portfolio selection task."}, {"title": "6.4 RQ4. DEEPCLAIR exhibits adaptive investment behavior in drastically changing situations", "content": "In Figure 2, we scrutinize DEEPCLAIR'S portfolio selection behavior by monitoring the parameter p, determining the ratio between long and short positions, and compare it with other design choices such as Frozen and Fine-tuning.\nThe Frozen scenario exposes the model's incapacity to adhere to a long-range investment strategy, potentially due to the forecasting model's output being treated as a noisy false signal. Conversely, in the Fine-tuning scenario, the model tends to invest overwhelmingly in a coherent manner, suggesting a potential loss of forecasting ability and convergence toward a generic RL approach.\nIn our case, DEEPCLAIR demonstrates adaptive capabilities, effectively responding to both bullish and bearish market conditions. We posit that this adaptability is facilitated by LoRA, serving as a bridge to align the generalizability of the forecasting output with the RL structure.\nOverall, our experimental results demonstrate three findings: 1) the significance of exploiting market forecasting in portfolio selection tasks, 2) the rationale behind utilizing FEDformer as market forecast module in DEEPCLAIR, and 3) the benefits of applying LORA to FEDformer's encoder module when training DEEPCLAIR on portfolio selection task."}, {"title": "7 CONCLUSION", "content": "In this work, we introduced DEEPCLAIR, a novel RL portfolio selection system that leverages a market-forecasting module based on a frequency-enhanced transformer architecture pre-trained with supervised time-series forecasting. Our approach involves two stages of training strategies: pre-training the forecasting module to establish forecasting abilities and fine-tuning the transferred module to determine DEEPCLAIR's long-short investment positions through a portfolio selection RL training procedure. The portfolio selection task itself aims at formulating practical investment practices, making our work focused on creating strategies that can be effectively applied in real-world scenarios. In our experiments, we showcased our method's adaptive investments while demonstrating better returns.\nSince DeepClair relies on deep learning architecture, capturing the causal relationship between inputs and investment decision-making can be challenging. However, we plan to conduct a thorough investigation into the interpretability of the backbone transformer attention architecture we use. Additionally, although our work follows the mainstream portfolio selection experiment settings [16, 20, 45], we aim to explore more realistic and robust experimental settings. This includes accounting for transaction fees, incorporating other investment sources such as gold, cash, and cryptocurrencies, and experimenting with different date splits (train, test, validation) for investments.\nThis work was conducted in collaboration with investment experts at Shinhan Bank, aiming to develop practically usable advanced automated investment strategies using artificial intelligence."}]}