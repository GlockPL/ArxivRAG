{"title": "Customized Subgraph Selection and Encoding for Drug-drug Interaction Prediction", "authors": ["Haotong Du", "Quanming Yao", "Juzheng Zhang", "Yang Liu", "Zhen Wang"], "abstract": "Subgraph-based methods have proven to be effective and interpretable in predicting drug-drug interactions (DDIs), which are essential for medical practice and drug development. Subgraph selection and encoding are critical stages in these methods, yet customizing these components remains underexplored due to the high cost of manual adjustments. In this study, inspired by the success of neural architecture search (NAS), we propose a method to search for data-specific components within subgraph-based frameworks. Specifically, we introduce extensive subgraph selection and encoding spaces that account for the diverse contexts of drug interactions in DDI prediction. To address the challenge of large search spaces and high sampling costs, we design a relaxation mechanism that uses an approximation strategy to efficiently explore optimal subgraph configurations. This approach allows for robust exploration of the search space. Extensive experiments demonstrate the effectiveness and superiority of the proposed method, with the discovered subgraphs and encoding functions highlighting the model's adaptability.", "sections": [{"title": "1 Introduction", "content": "Precise prediction of drug-drug interactions (DDIs) is essential in biomedicine and healthcare research [1]. Drug combination therapy [2] can enhance treatment effectiveness for certain diseases; however, it also increases the risk of adverse drug reactions, potentially threatening patient safety [3]. Identifying DDIs through laboratory experiments is both costly and time-consuming [4, 5]. With the success of deep learning, researchers have increasingly explored computational methods for DDI prediction. Early approaches primarily relied on molecular fingerprint information [6] or hand-engineered features [7], often neglecting the pre-existing interaction properties between drugs.\nConsidering drugs as nodes and their interactions as edges, DDI prediction can be framed as a multi-relational link prediction problem within the constructed drug interaction network. Recent advancements in graph neural networks (GNNs) [8, 9, 10, 11] have consistently achieved superior performance in this task. Specifically, subgraph-based methods, such as SumGNN [12], EmerGNN [13], and KnowDDI [14], have shown promising results by selecting subgraphs around query edges and applying sophisticated encoding functions (message passing functions) to represent these subgraphs, Such methods transform the multi-relational link prediction task into a multi-type subgraph classification problem. Figure 1 illustrates the pipeline of subgraph-based methods.\nHowever, due to the dense nature [15, 16] of drug interaction networks and their complex interaction semantics [17], existing hand-designed subgraph methods often fail to capture the nuanced but crucial information across different data inputs. In the initial phase of the reasoning pipeline, the subgraph sampler must have the capability to customize the selection of drug subgraphs for different queries, thereby ensuring precise contextualization of the reasoning evidence."}, {"title": "2 Related Works", "content": "Subgraph-based Link Prediction Recently, subgraph-based methods [18, 19, 28] have emerged as a promising approach, showing superior performance in link prediction tasks. Different from canonical GNNs, subgraph-based method extracts a subgraph patch for each training and test query, learning a representation of the extracted patch for final prediction, as illustrated in Figure 1.\nExisting works has primarily focused on designing more informative subgraphs and more expressive encoding functions. However, they do not take into account customizing these components to deal with various data. Specifically, in terms of subgraph sampler, current approaches lack fine-grained and adaptive extraction for different query subgraphs. While PS2 [29] demonstrates the effectiveness of identifying optimal subgraphs for each edge in homogeneous graph link prediction, there is no comparable work in multi-relational graph link prediction. In dense DDI networks, fine-grained identification of subgraph for different queries is even more crucial.\nAs for the encoding function, existing works overlook the importance of data-specific encoding, which has been emphasized in recent literature [30, 27]. Customized encoding functions are especially advantageous for drug interaction networks with complex and diverse interactions.\nGNN-based DDI Prediction Recently, there has been growing interest in applying GNNs for DDI prediction [8, 9]. However, these works execute message-passing functions over the entire graph, which limits their ability to capture explicit local evidence for specific query drug pairs and lack interpretability. In contrast, subgraph-based DDI prediction methods [12, 63, 13, 14] transform the multi-relational link prediction problem into a subgraph classification problem by extracting subgraphs around query nodes, achieving strong performance. Nevertheless, these works use the same subgraph extraction strategy for all queries and rely on a fixed message-passing function to handle complex DDIs, which limits their flexibility and adaptivity in dense DDI networks.\nGraph Neural Architecture Search Graph neural architecture search (GNAS) [31] aims to find high-performing GNN architectures using NAS techniques. Recent studies [30, 27] have explored GNAS to create more expressive GNN models across various tasks. AutoDDI [32], for instance, automatically designs GNN architectures to learn molecular graph representations of drugs for DDI prediction. However, research on optimizing graph sampling for GNAS remains limited due to the diversity of graph-structured data.\nRegarding search strategy, early approaches explores the search space using reinforcement learning [33] or evolutionary algorithms [34], which is highly inefficient. One-shot approaches [35] instead construct an over-parameterized network (supernet) and optimize it using gradient descent, leveraging continuous relaxation of the search space to improve search efficiency. The recently proposed few-shot NAS paradigm [36] further enhances supernet evaluation consistency by generating multiple sub-supernets."}, {"title": "3 Proposed Method", "content": "Moreover, instead of directly predicting on the entire graph $G_{DDI}$, subgraph-based methods decouple the prediction process into two stages: (1) selecting a query-specific subgraph and (2) encoding the subgraph to predict interactions, as shown in Figure 1. The prediction pipeline then becomes\n$\\Encoding{G_{DDISelection,(u,v)},G_{u,v}} \\rightarrow Y_{u,v}$,\nwhere the sampler selects a subgraph $G_{u,v}$ conditioned on the given query $(u,?, v)$. Using this subgraph $G_{u,v}$, the encoding function produces the final predictions $Y_{u,v}$.\nBuilding on previous analysis and existing research, and inspired by NAS, we propose to search for data-adaptive subgraph selection and encoding components to obtain a customized subgraph"}, {"title": "3.1 Problem Formulation", "content": "Given a set of drugs $V$ and interaction relations $R$ among them, the drug interaction network is denoted as $G_{DDI} = \\{(u, r, v) | u, v \\in V, r \\in R\\}$, with each tuple $(u, r, v)$ describes an interaction between drug u and drug v. Consequently, drug-drug interaction (DDI) prediction can be framed as a multi-relational link prediction task within the drug interaction network $G_{DDI}$. The objective is to predict the types of interactions between two given drug nodes, which can be denoted as a query $(u, ?, v)$, i.e., given the query drug-pair entities u and v, to determine the interaction r that makes $(u, r, v)$ valid."}, {"title": "3.2 Search Space", "content": "In practice, subgraph-based methods define the drug-pair subgraph between drug pairs as the union or interaction of k-hop ego-network 2 of query drugs. Here, k is a key hyperparameter that determines the range of message propagation aggregated by the central node. Selecting k is crucial to model performance, as it dictates whether the model has access to high-quality evidence context for accurate prediction.\nPrior works [12, 37] typically utilize a fixed hyperparameter for all drug pairs, i.e., selecting the union of a fixed k-hop ego-network for arbitrary queries. Nevertheless, this approach can lead to an imprecise collection of evidence for interaction reasoning, potentially undermining the reasoning process due to missing critical information or the inclusion of excessive irrelevant information.\nBased on the above analysis, we define a drug-pair subgraph selction space containing a range of subgraphs of different sizes for a given query (u, v):"}, {"title": "3.2.1 Subgraph Selection Space", "content": "$S_{u,v}^{\\kappa,v} = \\{G_{u,v}^{i,j} | 1 \\leq i, j \\leq \\eta\\}$,\nwhere $G_{u,v}^{i,j}$ is generated by taking the union of the i-hop ego-network of node u and the j-hop ego-network of node v, i.e., $G_{u,v}^{i,j} = \\{z \\in V | z \\in (u \\cup N_i(u) \\cup v \\cup N_j(v)) \\}$, where $N_i(u)$ and $N_j(v)$ are the i-hop and the j-hop neighbors of u and v, respectively. The threshold $\\eta$ constrains the maximum subgraph range.\nSince each drug-pair has a specific subgraph selection space, the overall size of space in the entire graph is $\\eta^{|E|}$, where $|E|$ represents the number of edges in the drug interaction network. A larger $|E|$ result in a subgraph selection space that grows exponentially with the number of edges. Therefore, efficiently searching for the optimal subgraph configurations for different queries is challenging."}, {"title": "3.2.2 Subgraph Encoding Space", "content": "For the automated design of the subgraph encoding function, we first adopt a unified message passing framework [21, 38] comprising several key modules: the message-computing function MES, the aggregation function AGG, the combination function COM, and the activation function ACT, as follows:\nstep 1: $m_u \\leftarrow AGG(MES(h_v, h_{r(u,v)})) v\\in N_1(u)$,\nstep 2: $h_u\\leftarrow ACT(COM(h_u, m_u))$,\nwhere $h_u \\in R^d$ and $h_r \\in R^d$ represent the embeddings of node u and interaction r, respectively, and $m_u$ is the intermediate message representation of u aggregated from its neighborhood $N_1(u)$.\nA substantial amount of literature [39, 40, 41] has focused on manually designing these modules to improve performance. However, such encoding functions are inflexible for handling diverse interaction patterns across different drug interaction network. For example, interactions in DrugBank [42] describe how one drug affects the metabolism of another one. The excretion of Acamprosate, for instance, may be decreased when combined with Acetylsalicylic acid (Aspirin). Such interaction pattern is asymmetric, meaning $r(x, y) \\nRightarrow r(y, x)$. Conversely, interactions in the TWOSIDES dataset [43] are primarily at the phenotypic level, such as headache or pain in throat, representing symmetric patterns where $r(x, y) \\Rightarrow r(y, x)$. These two relational semantics are distinctly different, and existing hand-designed encoding functions struggle to capture such diverse semantics effectively [44, 23].\nHere, we aim to perform an adaptive searching for the encoding function in the context of drug interaction prediction. Based on the framework presented in Eq. (3), we design an expressive subgraph encoding space with a set of candidate operations. Detailed explanations of these modules can be found in the Appendix A.1."}, {"title": "3.3 Search Strategy", "content": "Based on the well-designed search space described above, we formulate a bi-level optimization problem to adaptively search for the optimal configuration of subgraph-based pipelines."}, {"title": "3.3.1 Search Problem", "content": "Definition 1 (Customized Subgraph-based Pipeline Search Problem). Let A denote the subgraph encoding space, $S_{u,v}$ represent the subgraph selection space for the query (u, v), a be a candidate encoding function in A, W represent the parameters of a model from the search space, and $W^*(G_{u,v}; a)$ denote the trained operation parameters. Let $D_{tra}$ and $D_{val}$ denote the training and validation sets, respectively. The search problem is formulated as follows:\n$\\mathop{\\arg\\max}\\limits_{a\\in A,G_{u, v} \\in S_{u,v}} \\sum_{(u,r,v) \\in D_{val}} M(W^*(G_{u,v}; \\alpha); G_{u,v}; \\alpha)$,\ns.t. $W^*(G_{u,v}; a) = \\mathop{\\arg\\min}\\limits_W \\sum_{(u,r,v) \\in D_{tra}} L(W; G_{u,v}; \\alpha)$,\nwhere the classification loss $L$ is minimized for all interactions, while the performance measurement M is expected to be maximized.\nIn this work, we adopt the differentiable search paradigm [45] to solve the bi-level optimization problem, which is widely used in recent NAS literature [46] and enables efficient exploration of the search space. Nevertheless, our proposed subgraph selection space poses two technical challenges: First, we cannot directly apply relaxation strategies, which is a prerequisite for differentiable NAS methods, to make the discrete selection space continuous. This limitation arises because different subgraphs in the selection space contain diverse nodes and edges, making it challenging to design a relaxation function that unifies subgraphs of varying sizes. Second, to enable searching within the subgraph selection space, we would need to first generate all subgraphs in the space. However, sampling such a large number of subgraphs is computationally intractable."}, {"title": "3.3.2 Relaxation of Subgraph Selection Space", "content": "Technically, as in existing NAS works [45, 47], one typically needs to relax the search space into continuous form to enable effective backpropagation training. However, for the subgraph selection space, the traditional continuous relaxation strategy is not directly applicable due to the structural mismatch between graphs and vectors.\nTo address this, we first utilize encoding function $f(\\cdot)$ to encode subgraphs with different scopes. This approach provides all subgraphs with representations of the same dimension, making it feasible to implement a relaxation strategy. Additionally, inspired by the reparameterization trick [48], we adopt the Gumbel-Softmax function to facilitate differentiable learning over a discrete space:\n$\\begin{aligned} \\hat{G}_{u,v}^{i j} & =\\frac{\\exp \\left(\\log \\left(g\\left(f\\left(G_{u,v}^{i j}\\right)\\right)+\\mathcal{G}_{i, j}\\right) /\\tau\\right)}{\\sum_{i^{\\prime}=1}^{\\eta} \\sum_{j^{\\prime}=1}^{\\eta} \\exp \\left(\\log \\left(g\\left(f\\left(G_{u,v}^{i^{\\prime} j^{\\prime}}\\right)\\right)+\\mathcal{G}_{i^{\\prime}, j^{\\prime}}\\right) /\\tau\\right)} \\end{aligned}$\nwhere $g(\\cdot)$ scores the subgraph representations using multiple linear layers, $\\mathcal{G}_{i,j} = -\\log(-\\log(U_{i,j}))$ is the Gumbel random variable, $U_{i,j}$ is a uniform random variable, and $\\tau$ is the temperature parameter controlling sharpness. $\\oslash_2$ is the mixed selection operation of subgraph $G_{u,v}^{i j}$ used to optimize searching process."}, {"title": "3.3.3 Subgraph Representation Approximation Strategy", "content": "To solving the optimization problem as Eq. (4) and (5), we need to explicitly sample all the candidate subgraphs within the subgraph selection space $S_{u,v}$ for each query. However, one of the most challenging aspects of subgraph-based approaches is their inefficient subgraph sampling process [49, 50, 51]."}, {"title": "3.3.4 Robust Search Algorithm", "content": "Using the proposed subgraph selection relaxation mechanism, we can transform the overall discrete search space in Definition. 1 into a continuous form, allowing the search problem to be solved by the one-shot NAS paradigm. Additionally, our subgraph representation approximation strategy efficiently obtains subgraph representations and reduces search costs\nFollowing [53], we adopt the single path one-shot training strategy (SPOS) [54] to reduce the computational cost of supernet training. However, the one-shot approach [55, 56, 45], i.e., using the same supernet parameters W for all architectures, can decrease the consistency between the supernet's performance estimation and the ground-truth performance [57]. Inspired by few-shot NAS [36], we propose a message-aware partitioned supernet training strategy to mitigate the coupling effect of different message-computing operators [58]. By partitioning the superent to form sub-supernets based on the type of message-computing function, this strategy improves the consistency and accuracy of supernet, enabling the search algorithm more stable and robust. Algorithm 1 delineates the full procedure, with further details provided in Appendix A.2."}, {"title": "3.4 Comparison with Existing Works", "content": "While many works [12, 13, 14] have explored DDI prediction using subgraph-based methods, our approach introduces two significant advancements. First, to the best of our knowledge, our method (CSSE-DDI) is the first to customize the subgraph selection and encoding processes specifically for subgraph-based DDI prediction. In contrast, previous methods rely on fixed subgraph selection strategy to sample subgraphs and employ hand-designed functions for encoding, as summarized in Table 1. Consequently, our method can adapt data-specific components within subgraph-based pipelines, outperforming existing methods in both performance and efficiency (Section 4.2). Moreover, our approach not only selects fine-grained drug-pair subgraphs that enhance interpretability through potential pharmacokinetic and metabolic concepts (Section 4.6.1), but also searches for data-specific encoding functions that accurately capture the semantic features of drug interactions (Section 4.6.2)."}, {"title": "4 Experiments", "content": "Datasets Experiments are conducted on two public benchmark DDI datasets: DrugBank [42] and TWOSIDES [43]. Detailed descriptions of these datasets are presented in Appendix B.1.\nExperimental Settings Following [13], we examine two DDI prediction task settings: SO and S1. Let the drug pairs for DDI prediction be denoted as (u, v). In the SO setting, both drug nodes u and v are present in the known DDI graph. Existing DDI prediction methods are typically evaluated in this setting. In contrast, the S1 setting involves a pair (u, v) where one drug is known and the other is a novel drug not represented in the known DDI graph. This scenario highlights the critical need for DDI predictions involving new drugs in real-world applications.\nEvaluation Metric We follow [12] to evaluate our method. For the DrugBank dataset, where each drug pair contains only one interaction, we use the following metrics: F1 Score, Accuracy and Cohen's K. For the TWOSIDES dataset, where multiple interactions may exist between a pair of drugs, we consider the following metrics: ROC-AUC, PR-AUC and AP@50. Additional details are provided in Appendix B.2.\nBaselines We compare CSSE-DDI with the following representative DDI prediction method: (i) GNN-based methods include Decagon [8], GAT [59], SkipGNN [9], CompGCN [60], ACDGNN [61], and TransFOL [62]. (ii) Subgraph-based methods include SEAL [18], GraIL [19], SumGNN [12], SNRI [20], KnowDDI [37] and LaGAT [63]. (iii) NAS-based method include MR-GNAS [21], and AutoGEL [22].\nWe also compare our method with two variants, including CSSE-DDI-FS and CSSE-DDI-FF. The configurations of these variants are as follows: (i) CSSE-DDI-FS: This variant omits fine-grained subgraph selection for each query, using fixed k-layer drug node representations to generate the subgraph representation. (ii) CSSE-DDI-FF: This variant does not search for the encoding function, instead using a fixed encoding function backbone to capture semantic and topological features in the drug interaction network. In this case, we employ a 3-layer CompGCN model as the backbone. For all baselines, we obtain the results by rerunning the released codes."}, {"title": "4.1 Experimental Setup", "content": "Datasets Experiments are conducted on two public benchmark DDI datasets: DrugBank [42] and TWOSIDES [43]. Detailed descriptions of these datasets are presented in Appendix B.1.\nExperimental Settings Following [13], we examine two DDI prediction task settings: SO and S1. Let the drug pairs for DDI prediction be denoted as (u, v). In the SO setting, both drug nodes u and v are present in the known DDI graph. Existing DDI prediction methods are typically evaluated in this setting. In contrast, the S1 setting involves a pair (u, v) where one drug is known and the other is a novel drug not represented in the known DDI graph. This scenario highlights the critical need for DDI predictions involving new drugs in real-world applications.\nEvaluation Metric We follow [12] to evaluate our method. For the DrugBank dataset, where each drug pair contains only one interaction, we use the following metrics: F1 Score, Accuracy and Cohen's K. For the TWOSIDES dataset, where multiple interactions may exist between a pair of drugs, we consider the following metrics: ROC-AUC, PR-AUC and AP@50. Additional details are provided in Appendix B.2.\nBaselines We compare CSSE-DDI with the following representative DDI prediction method: (i) GNN-based methods include Decagon [8], GAT [59], SkipGNN [9], CompGCN [60], ACDGNN [61], and TransFOL [62]. (ii) Subgraph-based methods include SEAL [18], GraIL [19], SumGNN [12], SNRI [20], KnowDDI [37] and LaGAT [63]. (iii) NAS-based method include MR-GNAS [21], and AutoGEL [22].\nWe also compare our method with two variants, including CSSE-DDI-FS and CSSE-DDI-FF. The configurations of these variants are as follows: (i) CSSE-DDI-FS: This variant omits fine-grained subgraph selection for each query, using fixed k-layer drug node representations to generate the subgraph representation. (ii) CSSE-DDI-FF: This variant does not search for the encoding function, instead using a fixed encoding function backbone to capture semantic and topological features in the drug interaction network. In this case, we employ a 3-layer CompGCN model as the backbone. For all baselines, we obtain the results by rerunning the released codes."}, {"title": "4.2 Performance Comparison in S0 settings", "content": "Table 2 shows the overall results across all benchmarks in SO setting. As can be seen, CSSE-DDI consistently outperforms all baselines on each dataset, demonstrating its effectiveness in searching for data-specific subgraph-based pipelines for DDI prediction task. Among the baselines, subgraph-based methods significantly outperform full-graph-based methods due to their enhanced ability to reason over local subgraph contexts. Within the subgraph-based methods, SEAL, GraIL, SumGNN, and SNRI use a fixed sample strategy to select subgraphs, which may not be optimal for different drug-pair queries.\nWhen it comes to NAS-based method, MR-GNAS and AutoGEL contain well-established search spaces that embrace multi-relational message-passing schema, focusing primarily on automated encoding function design using the one-shot NAS paradigm. While CSSE-DDI adopts a single path supernet training strategy and a message-aware partitioning approach to search for data-adaptive subgraph-based pipelines with stability and robustness, enabling the model to achieve excellent performance across various datasets. Moreover, the consistent performance gains of CSSE-DDI over its two variants validate the importance of jointly customizing subgraph-based pipeline components, i.e., fine-grained subgraphs and data-specific encoding functions, to fit datasets rather than relying on a fixed approach."}, {"title": "4.3 Choices of Search Strategy", "content": "To demonstrate the effectiveness of our search strategy, we introduce two variants with different search strategies: (i) CSSE-DDI w/o MAP: This variant uses only one trained supernet to serve as a performance evaluator for candidate architectures, instead of generating multiple sub-supernets by Message-Aware Partition (MAP) strategy. (ii) CSSE-DDI w/o SPOS: This variant utilizes the message-aware partition strategy to jointly optimize the supernet weights and architectural parameters, without using the Single Path One-Shot (SPOS) strategy [54].\nIn Table 3, we compare CSSE-DDI with other variants. As can be seen, the absence of either message-aware partition strategy or sampling-based NAS strategy negatively impacts performance. The performance gains achieved through the message-aware partition strategy arise from using multiple sub-supernets, which provide more accurate performance estima-tions to guide the search process. Regarding the SPOS strategy, it decouples supernet training from architecture search, making it more efficient and robust in practice."}, {"title": "4.4 Sensitivity Analysis of the Threshold \u03b7", "content": "Here, we analyze the effect of the threshold \u03b7 used in subgraph selection space. Figure 3 shows the impact of varying n. As can be observed, model performance continues to get better as the threshold \u03b7 grows. When the threshold \u03b7 = 3, the model performance nears saturation, as larger thresholds do not lead to further improvements. This is likely because most of the essential information for DDI prediction is contained within the 3-hop ego-subgraphs of target drugs. Intuitively, larger subgraphs may provide additional useful information. However, in practice, due to the inherent biases of the search algorithm, achieving an optimal model may be challenging. When \u03b7 is too large, it may introduce noise and dilute the critical information. A similar phenomenon has been found in the existing work SumGNN [12]. Besides, excessively large thresholds \u03b7 will only lead to unnecessary expansion of the search space and higher computational costs."}, {"title": "4.5 Performance Comparison in S1 settings", "content": "To further validate the effectiveness of our method, we use the S1 setting in the EmerGNN [13] method, to predict drug-drug interactions between emerging drugs and existing drugs. The experimental results are shown in Table 4. A significant performance drop from the transductive setting (SO) to the inductive setting (S1) demonstrates that DDI prediction for new drugs is more challenging. Although Emergnn, which is specifically designed for new drug prediction, achieves optimal performance, CSSE-DDI still demonstrates impressive results, outperforming existing GNN-based and subgraph-based methods. This strong performance is largely due to the robust learning capability of NAS technology in handling unknown data."}, {"title": "4.6 Case Study", "content": "We visualize exemplar query-specific subgraphs from the DrugBank dataset in Figure 4, highlighting domain concepts such as pharmacokinetics, metabolism, and receptor interactions. As shown, CSSE-DDI can identify distinctive subgraphs containing semantic information to support inference for different queries, revealing pharmacokinetic and metabolic relationships."}, {"title": "4.6.1 Fine-grained Subgraph Selection", "content": "We visualize exemplar query-specific subgraphs from the DrugBank dataset in Figure 4, highlighting domain concepts such as pharmacokinetics, metabolism, and receptor interactions. As shown, CSSE-DDI can identify distinctive subgraphs containing semantic information to support inference for different queries, revealing pharmacokinetic and metabolic relationships."}, {"title": "4.6.2 Data-specific Encoding Function", "content": "Furthermore, we visualize the searched structure of encoding functions across all datasets in Figure 5. It is clearly illustrated that different combinations of the designed operations, i.e., data-specific encoding functions, are obtained.\nIn particular, the searched message-computing functions contain more CORR operations in the DrugBank dataset, while more MULT functions are searched in the TWOSIDES dataset. The CORR function is non-commutative [67], making it suitable for modeling asymmetric interactions (e.g., metabolic-based interactions) present in DrugBank. While MULT is suitable for modeling symmetric relations (phenotype-based interactions) due to its exchangeability [68]."}, {"title": "5 Conclusion", "content": "We propose a searchable framework, CSSE-DDI, for DDI prediction. Specifically, we design refined search spaces to enable fine-grained subgraph selection and data-specific encoding function optimization. To facilitate efficient search, we introduce a relaxation mechanism to convert the discrete subgraph selection space into a continuous one. Additionally, we employ a subgraph representation approximation strategy to accelerate the search process, addressing the inefficiencies of explicit subgraph sampling. Extensive experiments demonstrate that CSSE-DDI significantly outperforms state-of-the-art methods. Moreover, the search results generated by CSSE-DDI offer interpretability in the context of drug interactions, revealing domain-specific concepts such as pharmacokinetics and metabolism."}]}