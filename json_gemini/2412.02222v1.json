{"title": "DEEP LEARNING APPROACH FOR PREDICTING\nTHE REPLICATOR EQUATION IN EVOLUTIONARY\nGAME THEORY", "authors": ["Advait Chandorkar"], "abstract": "This paper presents a physics-informed deep learning approach for predicting the replicator equation,\nallowing accurate forecasting of population dynamics. This methodological innovation allows us to derive\ngoverning differential or difference equations for systems that lack explicit mathematical models. We used\nthe SINDy model first introduced by Fasel, Kaiser, Kutz, Brunton, and Brunt 2016a to get the replicator\nequation, which will significantly advance our understanding of evolutionary biology, economic systems,\nand social dynamics. By refining predictive models across multiple disciplines, including ecology, social\nstructures, and moral behaviours, our work offers new insights into the complex interplay of variables\nshaping evolutionary outcomes in dynamic systems", "sections": [{"title": "1. INTRODUCTION", "content": "Game theory helps to understand how strategic behaviours evolve and persist in biological, social,\nand economic systems where individuals interact. It also helps in how complex social behaviours\nand strategies can evolve and persist in diverse contexts. Analysing in the principles of Nash\nequilibrium (NE) defined by John F. and Nash, Jr (1) offers insights into the stability and evolution\nof strategies within populations, shedding light on how cooperative or competitive behaviours\nevolve and endure across various contexts. This approach not only enriches theoretical\nunderstanding but also informs practical strategies in fields ranging from biology to economics.\n\nThe concept of evolutionary game theory was first proposed by John Maynard Smith and George\nR Martin (2) which extends classical game theory by focusing on the dynamics of strategy\nevolution within populations over time. Unlike traditional game theory, which typically analyses\nthe strategic interactions of rational, decision-making individuals aiming to maximize their\npayoffs, EGT considers populations of interacting agents whose strategies evolve based on their\nsuccess. In EGT, strategies represent phenotypic traits, such as aggression or body size, that\nimpact fitness and survival. The success of a strategy is determined by its reproductive success in\nthe population, influenced by selective pressures. This approach permits the mathematical\nanalysis of the development of strategies, giving us an understanding of the evolutionary stability\nof behaviours and characteristics in biological populations. The replicator equation plays a key\nrole in evolutionary game theory. used to model the dynamics of strategy distribution within a\npopulation. The replicator is a non-linear differential equation that allows us to capture the\nrealworld strategies and interactions. The replicator dynamics can be used to find out how the\npercent of people using one particular strategy varies over time and other parameters like changing\npayoffs. Beyond its classical applications, the replicator equation has been employed in diverse\noptimization and control scenarios, such as bandwidth allocation (4) and service levels in water\ndistribution systems (5).\n\nPredicting the behaviour of non-linear differential equations from their trajectories is challenging\ndue to non-linear systems often exhibit sensitivity to initial conditions, where small variations in\nstarting points can lead to vastly different outcomes due to system the system being chaotic\n(butterfly effect). This sensitivity makes long-term prediction unreliable due to finite precision\nerror. Third, the presence of multiple equilibrium and bifurcations in non-linear systems\ncomplicates the analysis, as trajectories can converge to different stable states depending on initial\nconditions and perturbations. Non linear systems can also have tipping points which by just\nmonitoring the population we won't be able to exactly predict when the tipping point may occur.\n\nA method discovered by Bongard and Lipson (5), as well as Schmidt and Lipson (6), presented a\nmethod for uncovering the underlying structure of nonlinear dynamical systems from data. This\napproach used genetic programming (7) to derive nonlinear differential equations. Additional\nmethods for recognizing dynamic systems from data include methods for extracting governing\nequations from time-series data equation-free modelling (7), empirical dynamic modelling (9, 10),\nmodelling emergent behaviours (11), and automated dynamic inference (11-13).\n\nIn this paper, the aim is to predict the replicator equation using the SINDy (Sparse Identification\nof Nonlinear Dynamical systems) architecture that can be used to solve ordinary and partial\ndifferential equations and validate its use in this field, first introduced by Steven L. Brunton,\nJoshua L. Proctor, and J. Nathan Kutz in (8). Sparse identification of nonlinear dynamical systems\n(SINDy) uses the fact that the sparsity of most physical systems, only have few functions as their\nbasis function to define the dynamics which is generally the case in Evolutionary game theory,\nresulting in governing equations that are sparse in a high-dimensional nonlinear function space.\nThe SINDy framework identifies these sparse representations efficiently, even in complex\nsystems, and has demonstrated success in capturing the essential dynamics with minimal\ncomputational overhead. Additionally, a weak form of SINDy was developed by A.Messenger,\nDall'Anese (14) Bortzto handle noisy data, as there is always some noise in the data collected from\nreal world applications. SINDy can be applied to a variety of contexts, including discretetime\nsystems, nonlinear systems, and other complex dynamical systems, making it a versatile tool for\ndiscovering underlying dynamics from data. Its adaptability to different types of systems and\nrobustness against noise make it useful for finding the replicator equation."}, {"title": "2. NETWORK ARCHITECTURE", "content": "The sparse identification of nonlinear dynamical systems uses the fact that most differential\nequations have very few terms that define the dynamics, making the governing equations sparse\nin a high-dimensional nonlinear function space uses sparse regression techniques to reduce the\nunwanted terms in the differential equation due to noise in the data. Progress in compressed\nsensing and sparse regression has made the concept of sparsity advantageous. These\nadvancements allow us to identify non-zero terms without resorting to a combinatorial, intractable\nbrute-force search. This ensures that we can find the sparse solution with high probability using\nconvex methods that efficiently scale to large problems, in line with Moore's law. Consequently,\nthe identified sparse model strikes a balance between complexity (i.e., the sparsity of the\nrighthand-side dynamics) and accuracy, thus preventing overfitting to the data."}, {"title": "2.1. Data", "content": "The sparse identification of nonlinear dynamical systems takes either $x(t)$ or $\\dot{x}(t)$ for continuous\ntime, or x[n] or \u2206x[n] for discrete-time. The sparse identification of nonlinear dynamical systems\ntakes either $x(t)$ or $\\dot{x}(t)$ for continuous time, or x[n] or \u2206x[n] for discrete-time. The x and x\nsampled over time are arranged in a matrix as shown below, where $t_1,t_2,...,t_m$ are the time points\nsampled in increasing order.\n\n$X =\n\\begin{bmatrix}\n x^T(t_1) \\\\\n x^T(t_2) \\\\\n \\vdots \\\\\n x^T(t_m)\n\\end{bmatrix} =\n\\begin{bmatrix}\n x_1(t_1) & x_2(t_1) & \\dots & x_n(t_1) \\\\\n x_1(t_2) & x_2(t_2) & \\dots & x_n(t_2) \\\\\n \\vdots & \\vdots & \\vdots & \\vdots \\\\\n x_1(t_m) & x_2(t_m) & \\dots & x_n(t_m)\n\\end{bmatrix}$\n\n$X =\n\\begin{bmatrix}\n \\dot{x}^T(t_1) \\\\\n \\dot{x}^T(t_2) \\\\\n \\vdots \\\\\n \\dot{x}^T(t_m)\n\\end{bmatrix} =\n\\begin{bmatrix}\n \\dot{x_1}(t_1) & \\dot{x_2}(t_1) & \\dots & \\dot{x_n}(t_1) \\\\\n \\dot{x_1}(t_2) & \\dot{x_2}(t_2) & \\dots & \\dot{x_n}(t_2) \\\\\n \\vdots & \\vdots & \\vdots & \\vdots \\\\\n \\dot{x_1}(t_m) & \\dot{x_2}(t_m) & \\dots & \\dot{x_n}(t_m)\n\\end{bmatrix}$\n\nThen a matrix \u0398(X) consisting of the functions that may be present in the basis functions X. needs\nto be constructed based on the functions that may be present in the differential equations\n\n$\\Theta(X) = [1 \\quad X^2 \\quad \\dots \\quad sin(X) \\quad cos(X)]$\n\nIts capabilities were extended to models trained using multiple dynamic trajectories, and the\ngeneration of many models with subsampling and ensembling methods by U. Fasel, J. N. Kutz,\nB. W. Brunton and S. L. Brunton(15) which will be useful when the dynamics of the replicator\nequation gets complicated helping it in accurately predicting the equation. One recent\ndevelopment is that researchers have started considering feedback like Joshua S. Weitza,b,1,\nCeyhun Eksin a,c, Keith Paarpornc, Sam P. Brown, and William C. Ratcliff"}, {"title": "3. METHODOLOGY", "content": "3.1. Data Generation\n\nFor training the SINDy model, we generated data by simulating the game we are testing on.\nKnowing the dynamics of the game, we derived the replicator equation to model the strategy\nevolution. To obtain a variety of trajectories, we employed a technique for generating random\ntrajectories using Runge-Kutta algorithm. Then we converted to barycentric coordinates, which\nare particularly suited for capturing the proportions of strategies in a simplex.\n\n3.2. Model Training and Prediction\n\nIn the context of replicator dynamics for n strategies, the sum of the strategy frequencies xi must\nalways equal 1, i.e\n\n$\\sum_{i=1}^{n} x_i=1$"}, {"title": "4. REPLICATOR EQUATION", "content": "The replicator equation tells how individuals or populations change over time. The most famous\ngame is of rock paper scissors with the origin of RPS has been difficult to trace, but there is some\nwritten evidence suggesting the Chinese played it already in the Han Dynasty more than 2000\nyears ago. There are three possible action choices: Rock(R), Paper (P), and Scissors (S) with the\npayoff given below in the table (1).\n\nThe above payoff matrix gives a mixed strategy Nash equilibrium of (1/3, 1/3, 1/3) This simple\ngame has many real-life examples. Colour polymorphism of male side-blotched lizards (17) is\none of the real-world examples. Another instance is when European honeybees after being put in\nthe local habitat of Japanese hornets in Japan, invaded the local honeybees but were not\ndeveloped for attacks from Japanese hornets. In contrast, Japanese honeybees have developed a\ncollective thermal defence mechanism against the hornets as a result of evolutionary adaptation\nfrom being in the same environmental place (18). The replicator equations for the Rock-\nPaperScissors game are given by:\n\n$\\dot{x_R}=x_R(-x_P+x_S-f)$\n\n$\\dot{x_P}=x_P(x_R-x_S-f)$\n\n$\\dot{x_S}=x_S(-x_R+x_P-f)$\n\nwhere the finesses and the average fitness are:\n\nIt has evolved from symmetric games where all the individuals have the same payoff matrix and\nthe same strategies available to non-symmetric games where the players have different strategies\nor payoffs assigned to them. One of the most popular non-symmetric games is the Battle of\nsexes. This game illustrates a coordination problem between two players with different\npreferences. The game involves two players who want to spend the evening together but have\ndifferent preferences over two activities: football and ballet or any other conflicting hobbies.\nThe husband prefers football, while the wife prefers ballet. Despite their different preferences,\nboth players would prefer to be together than apart. This creates a situation where they need to\ncoordinate their choices, leading to multiple equilibria."}, {"title": "4. RESULTS AND DISCUSSION", "content": "4.1. RPS Game\n\nIn the Rock-Paper-Scissors (RPS) game, a Nash equilibrium (NE) occurs when players choose\nRock, Paper, and Scissors with equal with equal probability to win, tie, or lose. While no player\nbenefits from changing their strategy, the equilibrium's stability depends on the relative payoffs\nfor winning, losing, and tying. If a strategy performs better than the population average, its\nfrequency rises, while less successful strategies decline. This leads to cyclical dominance, where\none strategy temporarily prevails but is eventually overtaken, causing the population to oscillate\nin a closed loop as shown by the simulation as show in Figure (1) below.\n\nFor the RPS game, a single trajectory of 1000 data points was enough for sindy to predict the\nreplicator equation SINDy is easily able to predict the replicator equation for RPS game taking a\nsmaller number of data points than these correctly predict the basis functions but the coefficients\nwere slightly off."}, {"title": "4.2. Battle of Sexe", "content": "The Battle of the Sexes game has two pure strategy Nash equilibria, where both players coordinate\non the same outcome: Both players choose Outcome A. The payoffs are (2, 1). Both players\nchoose Outcome B. The payoffs are (1, 2).\n\nIn addition to these pure strategy equilibria, there is a mixed strategy Nash equilibrium where both\nplayers play a mix of strategies. In this equilibrium, each player assigns probabilities to their\nchoices such that they are indifferent to the other player's strategy. The mixed strategy equilibrium\ncan be found by solving the following system:\n\nLet p represent the likelihood that Player 1 choose Outcome A, and 1-p represent the likelihood\nthat Player 1 selects Outcome B. Let q represent the likelihood that Player 2 choose Outcome A,\nand let 1-q represent the likelihood that Player 2 selects Outcome B. The mixed strategy\nequilibrium is given by:\n\nP=1/3 Q=2/3\n\nIn this equilibrium, each player chooses according to these probabilities, leading to expected\npayoffs where neither player has an incentive to deviate from their mixed strategy.\n\nTo analyse the dynamics of the Battle of the Sexes using replicator dynamics, we consider the\nevolution of the strategies over time. The replicator equation for this game describes how the\nproportion of players using each strategy changes based on their relative fitness.\n\nFor the battle of sexes game, the number of data points required were considerably more. In order\nto reduce the number of data points, multiple shorter trajectories were generated which gave better\nresults compared to a single larger trajectory."}, {"title": "4. CONCLUSION", "content": "In conclusion, by applying the SINDy (Sparse Identification of Nonlinear Dynamics) framework,\nwe can derive the replicator equation directly from observed data points (changes in the number\nof species). This approach enables us to get the underlying differential equation which will help\nus predicting the future outcomes.\n\nBy understanding how the population of a species evolves over time, it will become possible to\nidentify critical tipping points where the population of one species may blow up or go extinct due\nto over-harvesting or environmental changes. The governing equation will provide insights for\npreventing a species from being driven to extinction in a local environment."}]}