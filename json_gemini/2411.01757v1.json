{"title": "Mitigating Spurious Correlations via Disagreement Probability", "authors": ["Hyeonggeun Han", "Sehwan Kim", "Hyungjun Joo", "Sangwoo Hong", "Jungwoo Lee"], "abstract": "Models trained with empirical risk minimization (ERM) are prone to be biased towards spurious correlations between target labels and bias attributes, which leads to poor performance on data groups lacking spurious correlations. It is particularly challenging to address this problem when access to bias labels is not permitted. To mitigate the effect of spurious correlations without bias labels, we first introduce a novel training objective designed to robustly enhance model performance across all data samples, irrespective of the presence of spurious correlations. From this objective, we then derive a debiasing method, Disagreement Probability based Re-sampling for debiasing (DPR), which does not require bias labels. DPR leverages the disagreement between the target label and the prediction of a biased model to identify bias-conflicting samples\u2014those without spurious correlations\u2014and up-samples them according to the disagreement probability. Empirical evaluations on multiple benchmarks demonstrate that DPR achieves state-of-the-art performance over existing baselines that do not use bias labels. Furthermore, we provide a theoretical analysis that details how DPR reduces dependency on spurious correlations.", "sections": [{"title": "1 Introduction", "content": "In the realm of machine learning, many classification models employ Empirical Risk Minimization (ERM) [46], which optimizes average performance. However, this approach has been found to underperform on certain groups of data [4, 15, 11] due to the prevalence of spurious correlations within training datasets [31, 38, 39]. Spurious correlations refer to the strong correlations between target labels and easy-to-learn attributes (i.e., bias attributes), which are present in a majority of the training examples. ERM-trained models often rely on these bias attributes [12], leading to biased predictions and poor generalization on minority groups where spurious correlations are absent. For example, consider the cow/camel classification task illustrated in Figure 1. A majority of camel images feature desert backgrounds, while a majority of cow images feature pasture backgrounds. Models trained via ERM might learn to recognize animals based on their backgrounds\u2014desert for camels and pasture for cows\u2014rather than on their distinctive features. This reliance can result in misclassifications, such as erroneously identifying a camel in a pasture as a cow. Addressing these spurious correlations is a critical issue across various applications, including medical imaging [36], algorithmic fairness [10], and education [37]."}, {"title": "2 Related work", "content": "Debiasing with bias annotations. Numerous previous works utilize bias labels for debiasing [38, 48, 18, 3, 44, 53]. For example, Group DRO [38] employs bias labels to define groups and directly enhances worst-group accuracy to mitigate the effect of spurious correlations; meanwhile, LISA [48] mixes two samples with the same label but different domains, or with different labels but the same domain, canceling out spurious correlations and learning invariant predictors. These methods have demonstrated their effectiveness across multiple benchmarks with spurious correlations. However, annotating bias labels for each training example is labor-intensive, and obtaining such labels can sometimes be challenging due to privacy concerns as well [51]. Consequently, in more recent studies, some researchers have utilized only a small set of bias-annotated data to reduce reliance on bias labels [24, 35, 19]. For example, DFR [24] uses a small group-balanced dataset with bias labels to retrain the last layer of the ERM-trained model.\nDebiasing without bias annotations. In an effort to eliminate reliance on bias annotations, recent studies predominantly focus on reducing bias without explicit bias labels [34, 22, 27, 1, 29, 28, 49, 45]. Given the unavailability of bias labels, these methods commonly employ a two-stage strategy: (1) identifying bias-aligned and bias-conflicting samples, and (2) training the debiased model by leveraging information obtained from (1). The identification of bias-conflicting samples is accomplished through the use of a deliberately biased model, trained either with generalized cross-entropy loss [34, 22, 27, 1, 29] or standard cross-entropy loss [28, 49, 45]. For instance, LfF [34] and DFA [27] regard samples as bias-conflicting samples if the biased model exhibits higher cross-entropy losses on these samples compared to the debiased model. Subsequent efforts then focus on enhancing classification accuracy for these identified bias-conflicting samples. Numerous studies have proposed diverse debiasing methods [14, 52, 8, 23], including those based on contrastive learning [49, 20] and unsupervised clustering [40, 42].\nMany debiasing methods that do not require bias labels aim to enhance performance on the bias-conflicting group, yet the optimal extent of this enhancement remains uncertain. We contend that a debiased model should exhibit consistent performance across both bias-aligned and bias-conflicting groups. However, to the best of our knowledge, no existing training objective is explicitly designed for this purpose. Therefore, we introduce a novel training objective tailored for this purpose, from which we develop DPR-a debiasing method that does not rely on bias labels."}, {"title": "3 Problem formulation", "content": "We consider a multi-class classification problem with a dataset $\\mathcal{D} = \\{(x_i, y_i)\\}_{i=1}^n$, where each $x_i \\in \\mathcal{X}$ represents an input, and each $y_i \\in \\mathcal{Y}$ is the corresponding label from $K$ possible classes. These examples are presumed to be sampled from a training distribution $P$. Given a classification model $f_\\theta : \\mathcal{X} \\rightarrow \\mathbb{R}^K$ that maps an input to $K$ logits, and a convex loss $l : \\mathcal{X} \\times \\mathcal{Y} \\rightarrow \\mathbb{R}_{>0}$, ERM aims to find a model that minimizes the expected loss $\\mathbb{E}_{(x,y)\\sim P}[l(f_\\theta(x), y)]$. To this end, we typically minimize a surrogate loss $L_{avg}$:\n$L_{avg} = \\frac{1}{n} \\sum_{(x,y) \\in \\mathcal{D}} l(f_\\theta(x), y)$.\n(1)\nThe cross-entropy (CE) loss is commonly used for training classification models. It is defined as $l_{ce}(f_\\theta(x), y) = -f_\\theta(x)[y] + \\log \\sum_{y'} \\exp(f_\\theta(x)[y'])$, where $f_\\theta(x)[y]$ denotes the logit corresponding to the $y$-th class label.\nWe assume there is a spurious correlation presence indicator $b \\in \\mathcal{B} = \\{\\text{correlated}, \\text{uncorrelated}\\}$ in the dataset. As this indicator denotes whether spurious correlations are present within each sample, it can also be considered as a bias-aligned or bias-conflicting group indicator. Similar to the Group DRO setting [38, 17], we adopt the latent prior probability change assumption [43]. With a group indicator $b$, we assume\n$P(x, y | b) = Q(x, y | b), \\quad P(b) \\neq Q(b)$,\n(2)\nwhere $P$ and $Q$ denote the training and test data distributions, respectively. Under this assumption, $P(x, y)$ and $Q(x, y)$ are represented as mixtures of the conditional distributions $P(x, y | b)$. Our goal is to find models that are robust against spurious correlations. Regardless of the presence of spurious correlations within each data example, a model that does not rely on these correlations should exhibit strong performance across all examples. In other words, the debiased model should perform consistently well on both bias-aligned and bias-conflicting groups. To this end, we propose the following training objective to avoid spurious correlations:\n$\\min_\\theta \\max_{b \\in \\mathcal{B}} L_b := \\frac{1}{n_b} \\sum_{(x, y, b) \\in G_b} l(f_\\theta(x), y)$,\n(3)\nwhere $G_b$ is a subset of the training data composed of samples drawn from $P(x, y | b)$ and $n_b$ is the size of $G_b$. The proposed objective aims to minimize the maximum average loss over bias-aligned and bias-conflicting groups, thereby reducing the reliance of classification models on spurious correlations.\nHowever, to utilize the above objective, we must know the information about bias attributes. In the next section, we describe a practical method to train the debiased model using Equation (3) without bias labels."}, {"title": "4 DPR: Disagreement Probability based Resampling for debiasing", "content": "We present DPR, a resampling method derived from the proposed objective, which does not require bias annotations during training. First, we provide a walk-through of how the objective in Equation (3) can be reformulated as a weighted loss minimization problem. Next, we detail a method for calculating the weight of each training example, along with proxies for both bias-aligned and bias-conflicting groups. Finally, we provide a full description of our algorithm."}, {"title": "4.1 Problem reformulation", "content": "To utilize the objective in Equation (3) without bias annotations, we reformulate this objective as a weighted loss minimization problem. For this purpose, we introduce the following assumption:\nAssumption 1. Let $b_a \\in \\mathcal{B}$ and $b_c \\in \\mathcal{B}$ represent the bias-aligned and bias-conflicting groups, respectively. The neural network, parameterized by $\\theta$, satisfies that $\\mathcal{L}_{b_a} < \\mathcal{L}_{b_c}$.\nIn Assumption 1, we assume that the model, parameterized by $\\theta$, exhibits a higher average loss on the bias-conflicting group compared to the bias-aligned group in the training dataset. Under this assumption, the maximum average loss over groups in Equation (3) can be expressed as follows:\n$\\max_{b \\in \\mathcal{B}} L_b = \\frac{1}{n_{b_c}} \\sum_{(x, y, b_c) \\in G_{b_c}} l(f_\\theta(x), y)$\n(4)\n$= \\frac{1}{n_{b_c}} \\sum_{(x, y, b) \\in \\mathcal{D}} p(b = b_c | x) l(f_\\theta(x), y)$\n(5)\n$= \\frac{1}{n} \\sum_{(x, y, b) \\in \\mathcal{D}} \\frac{p(b = b_c | x)}{P(b = b_c)} l(f_\\theta(x), y)$.\n(6)\nWhen Assumption 1 is satisfied, Equation (4) holds. Given that all samples in $G_{b_c}$ have $p(b = b_c | x)$ equal to 1, whereas all samples in $G_{b_a}$ have $p(b = b_c | x)$ equal to 0, Equation (5) is derived from Equation (4). As $P(b = b_c)$ is equal to $\\frac{1}{n}$, Equation (6) is obtained. By denoting $\\frac{1}{n} \\cdot \\frac{p(b = b_c | x)}{P(b = b_c)}$ as $r(x, y, b)$, we obtain a weighted loss minimization as follows:\n$\\min_\\theta \\sum_{(x, y, b) \\in \\mathcal{D}} r(x, y, b) l(f_\\theta(x), y)$.\n(7)\nNote that the weight $r(x, y, b)$ can be interpreted as the sampling probability."}, {"title": "4.2 Sampling probability with group proxy", "content": "In order to train the model using Equation (7), it is necessary to compute the sampling probability $r(x, y, b)$ for each training example. However, directly calculating the probabilities $p(b = b_c | x)$ and $P(b = b_c)$ is unfeasible without bias labels. To overcome this limitation, we first introduce proxies for the bias-aligned and bias-conflicting groups. We then derive substitutes for the probabilities $p(b = b_c | x)$ and $P(b = b_c)$ using a biased model.\nGroup proxy. We focus on the characteristics of the biased model for the group proxies. Following Nam et al. [34], the biased model $f_\\theta^b$ is trained using ERM with the generalized cross-entropy (GCE) loss [50]:\n$l_{GCE}(f(x), y) = \\frac{1 - P(y | x)^q}{q}$ (8)\nwhere $p(y|x)$ represents the probability assigned to the target label $y$ by the neural network after a softmax layer, and $q \\in (0, 1]$ is a hyperparameter. The GCE loss amplifies the bias of the model by up-weighting the gradient of the cross-entropy loss for samples with high probability $p_\\theta^b(y|x)$, thereby training the model to rely on spurious correlations. Consequently, the biased model tends to predict correctly for bias-aligned samples and incorrectly for bias-conflicting samples [34]. Building on this insight, leveraging the predictions $y_{bias}$ of the biased model, we employ the agreement between the label and the biased model's prediction (i.e., $y = y_{bias}$) as a proxy for the bias-aligned group $b_a$, and the disagreement (i.e., $y \\neq y_{bias}$) as a proxy for the bias-conflicting group $b_c$."}, {"title": "4.3 Training algorithm", "content": "We outline the entire training process for our method as follows. First, we train the biased model $f_\\theta^b$. Next, we compute the sampling probability $r(x, y)$ using the pretrained biased model. Before proceeding to train the debiased model $f_\\theta$, it is worth noting that Equation (7) is derived under Assumption 1. Thus, it is essential to fulfill Assumption 1 when training the debiased model using Equation (7). We leverage the characteristics of the biased model for this purpose. The biased model typically exhibits higher loss on bias-conflicting samples and lower loss on bias-aligned samples, thereby fulfilling Assumption 1. Consequently, we initialize the model $f_\\theta$ with the biased model $f_\\theta^b$ and then train $f_\\theta$ using training examples sampled with the probability $r(x, y)$. We also employ data augmentation to enhance the diversity of bias-conflicting samples. Simply oversampling these samples without enhancing their diversity does not effectively mitigate bias [27]. Therefore, we enhance the diversity of bias-conflicting samples through data augmentation techniques such as random color jitter and random rotation. The complete training procedure is outlined in Algorithm 1."}, {"title": "5 Theoretical analysis", "content": "In this section, we theoretically demonstrate that DPR minimizes losses for both bias-aligned and bias-conflicting groups while reducing the disparity between their losses. All proofs are deferred to Appendix A. Let $\\mathcal{L}_{avg}$ be the expected average loss:\n$\\mathcal{L}_{avg}:= \\mathbb{E}_{(x, y) \\sim P}[l(f_\\theta(x), y)].$\n(12)\nLet $\\mathcal{L}_b$ be the average loss of group $b$:\n$\\mathcal{L}_b := \\mathbb{E}_{(x, y) \\sim P_b}[l(f_\\theta(x), y)],$\n(13)\nwhere $P_b = P(x, y | b)$ denotes the training distribution conditioned on $b$, for any $b \\in \\mathcal{B}$. In this setting, we derive the following inequality for the loss gap between the bias-aligned and bias-conflicting groups.\nTheorem 1. Suppose that the loss function $l(f_\\theta(x), y)$ is upper-bounded by a constant $C > 0$. Given two distinct groups $b_a \\in \\mathcal{B}$ and $b_c \\in \\mathcal{B}$ such that $b_a \\neq b_c$, the following inequality holds with probability at least $1 - \\delta$, for any $\\delta > 0$:\n$\\mathcal{L}_{b_a} - \\mathcal{L}_{b_c} \\leq 2 \\cdot \\max_{b \\in \\mathcal{B}} \\mathcal{L}_b + C \\cdot \\max_{b \\in \\mathcal{B}} \\sqrt{\\frac{8 \\log (|\\mathcal{B}| / \\delta)}{n_b}}$\n(14)\nTheorem 1 specifies that the upper bound on the disparity between losses for bias-aligned and bias-conflicting groups is determined by the maximum average loss over groups and a term dependent on the size of the smaller group. Additionally, we derive an inequality associated with the expected average loss.\nTheorem 2. In the same setting as Theorem 1, the expected average loss is bounded above with probability at least $1 - \\delta$:\n$\\mathcal{L}_{avg} \\leq \\max_{b \\in \\mathcal{B}} \\mathcal{L}_b + C \\cdot \\sqrt{\\frac{2 \\log (1 / \\delta)}{n}}$ (15)\nAccording to Theorems 1 and 2, our proposed training objective not only closes the loss gap between bias-aligned and bias-conflicting groups but also reduces the expected average loss. However, in Equation (14), there remains a loss gap due to a term inversely related to the square root of the size of the smaller group. Note that DPR is a resampling method derived from the proposed objective when Assumption 1 is fulfilled, and it identifies and upsamples bias-conflicting samples. Thus, it efficiently minimizes both terms of the upper bound described in Equation (14). Given that $\\mathcal{L}_{avg}$ is expressed as a weighted sum of $\\mathcal{L}_b$ and $\\mathcal{L}_{b_c}$, these theorems indicate that DPR enhances performance across both bias-aligned and bias-conflicting groups while reducing the performance gap between them."}, {"title": "6 Experiments", "content": "6.1 Datasets\nWe evaluate the debiasing performance of DPR using six benchmark datasets that exhibit spurious cor-relations. Colored MNIST and Multi-bias MNIST are synthetic datasets designed under the premise that models learn bias attributes first. Conversely, BAR, BFFHQ, CelebA, and CivilComments-WILDS are real-world datasets where inherent biases degrade model performance. We follow the evaluation protocols of previous studies [1, 27, 28] and provide a detailed description of these datasets in Appendix B.1.\nColored MNIST. Colored MNIST (C-MNIST) is a synthetic dataset designed for digit classification, comprising ten digits, each spuriously correlated with a specific color. Following the protocols in Ahn et al. [1], we set the ratios of bias-conflicting samples, denoted as $p$, at 0.5%, 1%, and 5% for the training set, and 90% for the unbiased test set. We report the accuracy on this unbiased test set.\nMulti-bias MNIST. Multi-bias MNIST (MB-MNIST) [1] is a synthetic dataset designed to incorporate more complex patterns compared to C-MNIST and biased-MNIST [41]. MB-MNIST comprises eight attributes: digit [26], alphabet [7], fashion object [47], Japanese character [6], digit color, alphabet color, fashion object color, and Japanese character color. The digit shape is the target attribute, while the other seven attributes serve as bias attributes. In MB-MNIST, bias is introduced by aligning the digit with each of the other seven attributes, each with a probability of $1 - p$. In our experiments, $p$ is set to 10%, 20%, and 30% for the training set and 90% for the unbiased test set, as in Ahn et al. [1]. We report the accuracy on this unbiased test set.\nBiased action recognition. The biased action recognition (BAR) dataset [34], designed for action classification, comprises six action classes such as climbing and fishing, each spuriously correlated with a specific place. The training set of BAR contains only bias-aligned samples, while the test set consists solely of bias-conflicting samples. We report the accuracy on this bias-conflicting test set.\nBiased FFHQ. Biased FFHQ (BFFHQ) is a real-world facial dataset, which has age (young or old) as a label and gender (male or female) as a bias attribute. Predominantly, females are young and males are old in this dataset. We use a bias-conflicting ratio of $\\rho = 0.5\\%$ in the training set and report accuracies on both an unbiased test set with $\\rho = 50\\%$ [1] and a bias-conflicting test set with $\\rho = 100\\%$ [27].\nCelebA. CelebA [30] is a dataset for facial classification. The goal is to classify celebrity hair color as blond or non-blond, which is spuriously correlated with gender. Notably, only a few blond-haired celebrities are male. Following prior studies [49, 38], we report both average and worst-group accuracies on the test set, where groups are defined as combinations of class labels and bias labels.\nCivilComments-WILDS. CivilComments-WILDS [5, 25] is a text classification dataset aimed at identifying whether online comments are toxic or non-toxic. The label is spuriously correlated with demographic identities such as gender, race, and religion. Following previous works [28, 25, 49], we report both average and worst-group accuracies on the test set, where groups are defined as combinations of class labels and bias labels."}, {"title": "6.2 Experimental setup", "content": "Baselines. We compare our method with six baselines on various benchmarks: ERM, JTT [28], DFA [27], CNC [49], PGD [1], and LC [29]. ERM denotes conventional training without any considerations for debiasing, while the others are debiasing methods that do not require bias annotations during training.\nImplementation details. For all datasets except CelebA and CivilComments-WILDS, we follow the experimental settings of Ahn et al. [1]. Specifically, for CMNIST and MB-MNIST, we employ two distinct types of simple CNN models, respectively. For BAR and BFFHQ, we utilize a ResNet18 [16] pretrained on ImageNet [9]. In the case of CelebA, we use a pretrained ResNet50, following the experimental settings of Zhang et al. [49]. For CivilComments-WILDS, we deploy a pretrained BERT model and follow the experimental setup detailed in Liu et al. [28]. Moreover, we apply data augmentation techniques\u2014including random resize crop, random color jitter, and random rotation for all vision datasets except CelebA, as discussed in Section 4.3. Further details on model architectures, hyperparameters, and image processing are provided in Appendix B.2."}, {"title": "6.3 Experimental results and analysis", "content": "Classification accuracy. Table 1 presents the average accuracies on unbiased test sets for C-MNIST and MB-MNIST. DPR consistently outperforms or matches the performance of other baselines across all experiments with varying bias-conflicting ratios. Notably, for the MB-MNIST dataset with a ratio of 30%, DPR achieves an unbiased test accuracy of 94.04%, outperforming PGD by 3.28%. Even for MB-MNIST with a ratio of 10%, where all baselines except PGD fail to achieve higher accuracy, DPR exhibits the highest accuracy of 62.21%. In the more complex setting of MB-MNIST, compared to C-MNIST, the effectiveness of DPR is even more pronounced. The superiority of our method is further demonstrated on real-world benchmarks, as shown in Table 2. Our method consistently achieves the best performance for each real-world dataset. Specifically, for the BFFHQ dataset, DPR achieves an accuracy of 87.57% on unbiased test sets, which is 3.37% higher than PGD, and an accuracy of 76.80% on bias-conflicting test sets, which is 6.20% higher than LC. For the CelebA and CivilComments-WILDS datasets, our method achieves the highest worst-group accuracy compared to other baselines, with groups defined as the combination of the target and bias labels. We especially highlight the results for the BFFHQ benchmark, where our method improves accuracy on both unbiased and bias-conflicting test sets. This result supports our claim that DPR enhances performance on both bias-aligned and bias-conflicting groups.\nIdentifying group via disagreement probability. To discern whether each sample belongs to the bias-aligned or bias-conflicting group, we check if the target label disagrees with the prediction of the biased model and use its probability as an up-weight. To evaluate whether the disagreement probability between the target label and the prediction of the biased model distinguishes bias-conflicting samples from bias-aligned samples effectively, we plot the distributions of disagreement probabilities $p(y \\neq y_{bias}|x)$ for each bias-aligned and bias-conflicting sample. The experiment is conducted on the C-MNIST dataset. As illustrated in Figure 2, bias-aligned samples generally exhibit smaller disagreement probabilities compared to bias-conflicting samples. This result demonstrates that disagreement probability effectively differentiates bias-aligned and bias-conflicting samples. Moreover, the relatively high disagreement probability associated with bias-conflicting samples enables DPR to effectively identify and upsample bias-conflicting samples, suggesting that the disagreement probability $p(y \\neq y_{bias}|x)$ serves as an efficient substitute for the bias-conflicting probability $p(b = b_c|x)$."}, {"title": "7 Conclusions and Limitations", "content": "We present DPR, a resampling method that leverages disagreement probability to identify and upsample bias-conflicting samples. This method is derived from a novel training objective designed to achieve consistent performance across both bias-aligned and bias-conflicting groups. It does not rely on bias annotations and has demonstrated state-of-the-art performance across spurious correlation benchmarks. However, DPR has certain limitations: its effectiveness depends on how well the biased model captures the spurious correlation structure, as it uses the predictions of this model to infer the group to which each training sample belongs. Moreover, DPR employs a two-stage approach that complicates the training process and introduces additional hyperparameters. Despite these limitations, DPR's simple implementation and strong performance, supported by theoretical analysis illustrating its ability to reduce loss disparity between groups and minimize average loss, underscore its usefulness in mitigating reliance on spurious correlations."}, {"title": "B Experimental details", "content": "B.1 Benchmarks\nWe provide a detailed description of the datasets utilized in Section 6. In Figures 4 to 8, each column corresponds to a distinct class. The images positioned above the dashed line represent bias-aligned samples, whereas those below represent bias-conflicting samples.\nColored MNIST. Colored MNIST (C-MNIST) is a synthetic dataset designed for digit classification that introduces a controlled spurious correlation between digit shape and color. This dataset consists of ten digits from the MNIST dataset, each associated with a specific RGB color. Following the setting in Ahn et al. [1], ten RGB colors are uniformly selected and applied to the grayscale MNIST images. The image generation involves assigning colors based on the predetermined bias-conflicting ratio, $p$. Specifically, each image is colored to create a bias-conflicting sample with probability $p$, and a bias-aligned sample otherwise. For bias-aligned samples of a given class $y$, the digit is colored using $c \\sim N(C_y, \\sigma I_{3 \\times 3})$, where $C_y \\in \\mathbb{R}^3$ is the predefined color vector for class $y$. Conversely, bias-conflicting samples receive a color from any class other than $y$, i.e. $C_{U_y} \\in \\{C_i\\}_{i \\in [10] \\backslash y}$, and colored using $c \\sim N(C_{U_y}, \\sigma I_{3 \\times 3})$. The experiments utilize bias-conflicting ratios of 0.5%, 1%, and 5%, with $\\sigma$ set to 0.0001. Additionally, we use a 10% of training data as validation data, and an unbiased test set with a bias-conflicting ratio of 90% is employed for performance evaluation.\nMulti-bias MNIST. Multi-bias MNIST (MB-MNIST) is a synthetic dataset derived from Ahn et al. [1] to incorporate more complex patterns compared to C-MNIST and biased-MNIST [41]. MB-MNIST comprises eight attributes: digit [26], alphabet [7], fashion object [47], Japanese character [6], digit color, alphabet color, fashion object color, and Japanese character color. The digit shape is the target attribute, while the other seven attributes serve as bias attributes. In MB-MNIST, bias is introduced by aligning the digit and its color with probability $1 - p$. Similarly, the other six attributes are also independently aligned with the digit, each with probability $1 - p$. In our setting, the ratios of bias-conflicting samples are 10%, 20%, and 30% as in Ahn et al. [1]. As CMNIST, we use 10% of the training data as validation data. Test samples are generated with a bias-conflicting ratio of 90% for all bias attributes to create an unbiased test set.\nBiased action recognition. The biased action recognition (BAR) dataset [34], designed for action classification, is a real-world dataset that encompasses six action classes: climbing, diving, fishing, racing, throwing, and vaulting. Each class is spuriously correlated with a specific place. The training set of BAR consists exclusively of bias-aligned samples, while the test set consists solely of bias-conflicting samples. For example, all the training samples for the climbing class are associated with rock walls, but the test samples for climbing are associated with different settings, such as ice cliffs.\nWe utilize the data splits defined in Ahn et al. [1], which allocate 10% of the training set to the validation set.\nBiased FFHQ. Biased FFHQ (BFFHQ) was constructed from the real-world facial dataset FFHQ [21], which has age (young or old) as a label and gender (male or female) as a bias feature. This benchmark was conducted in previous works [27, 1, 22]. Individuals aged between 10 and 29 are labeled as \"young\", while those aged between 40 and 59 are labeled as \"old\". In this dataset, the majority of females are young, while males are predominantly old. The training set contains only 0.5% bias-conflicting samples. We report accuracies on both an unbiased test set with a bias-conflicting ratio of 50% [1] and a bias-conflicting test set [27].\nCelebA. CelebA [30] is a real-world dataset for face classification. Following Sagawa et al. [38], the goal is to classify celebrities' hair color as either blond or non-blond, which exhibits a spurious correlation with gender (male or female). Notably, only a small fraction of blond-haired celebrities are male, which leads to poor performance of ERM-trained models on this group. We employ the training, validation, and test splits as specified in Sagawa et al. [38] and report both the average accuracy and the worst-group accuracy on the test set. In this context, the group is defined as the combination of the class label and the bias label as in prior studies [49, 29, 38].\nCivilComments-WILDS. CivilComments-WILDS [5, 25] is a dataset for text classification problems. The goal is to classify whether an online comment is toxic or non-toxic, which exhibits a spurious correlation with the mention of certain demographic identities, including male, female, white, black, LGBTQ, Christian, Muslim, and other religions. We use the same data splits as described in Koh et al. [25] and report both the average accuracy and the worst-group accuracy on the test dataset. Here, groups are defined as combinations of class labels and bias labels, as described in previous works [28, 25, 49]."}, {"title": "B.2 Implementation details", "content": "We provide descriptions of the implementation details. For CelebA and CivilComments-WILDS, we follow the experimental settings outlined in Zhang et al. [49] and Liu et al. [28], respectively. For the other datasets\u2014CMNIST, MB-MNIST, BAR, and BFFHQ\u2014we follow the experimental setups presented in Ahn et al. [1]. The hyperparameter for GCE, denoted as $q$, is set to 0.7 as in Zhang and Sabuncu [50]. All classification models are trained using an NVIDIA RTX A6000."}, {"title": "B.2.1 Model architectures and hyperparameters", "content": "The model architectures and hyperparameters for each dataset are described:\nC-MNIST. As in Ahn et al. [1], we utilize a simple CNN architecture (SimConv-1). Please see Appendix B of Ahn et al. [1] for detailed network implementation. We train the model for 100 epochs with SGD optimizer, a batch size of 128, a learning rate of 0.02, weight decay of 0.001, momentum of 0.9, and learning rate decay of 0.1 at every 40 steps. For C-MNIST with bias-conflicting ratios of 0.5% and 1%, we use a temperature of 1; for a ratio of 5%, we use a temperature of 1.1.\nMB-MNIST. We use a different type of simple CNN model (SimConv-2), following Ahn et al. [1]. Please refer to Appendix B in Ahn et al. [1] for network implementation. We train for 100 epochs with SGD optimizer, a batch size of 32, a learning rate of 0.01, and weight decay of 1e-4, momentum of 0.9. For the MB-MNIST dataset, we use temperatures of 0.9, 1.1, and 1.3 for the ratios of 10%, 20%, and 30%, respectively.\nBAR. We use a ResNet18 pretrained on ImageNet as in Kim et al. [22]. We train for 100 epochs with SGD optimizer, a batch size of 16, a learning rate of 5e-4, weight decay of 1e-5, momentum of 0.9, learning rate decay of 0.1 at every 20 steps, and a temperature of 0.6.\nBFFHQ. We utilize an ImageNet-pretrained ResNet18 as in Lee et al. [27]. We train for 160 epochs with Adam optimizer, a batch size of 64, a learning rate of 1e-4, weight decay of 0, learning rate decay of 0.1 at every 32 steps, and a temperature of 0.9."}, {"title": "C Additional ablation study", "content": "C.1 Ablation study on q of GCE\nWe conduct an ablation study on the C-MNIST and MB-MNIST datasets, which have bias-conflicting ratios of 0.5% and 30%, respectively, to assess the impact of GCE parameter $q$. As depicted in Table 4, varying $q$ demonstrates distinct effects on the performance of biased and debiased models. For C-MNIST, increasing $q$ enhances the debiased"}]}