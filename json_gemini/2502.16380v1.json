{"title": "Understanding Fixed Predictions via Confined Regions", "authors": ["Connor Lawless", "Tsui-Wei Weng", "Berk Ustun", "Madeleine Udell"], "abstract": "Machine learning models are designed to predict outcomes using features about an individual, but fail to take into account how individuals can change them. Consequently, models can assign fixed predictions that deny individuals recourse to change their outcome. This work develops a new paradigm to identify fixed predictions by finding confined regions in which all individuals receive fixed predictions. We introduce the first method, ReVer, for this task, using tools from mixed-integer quadratically constrained programming. Our approach certifies recourse for out-of-sample data, provides interpretable descriptions of confined regions, and runs in seconds on real world datasets. We conduct a comprehensive empirical study of confined regions across diverse applications. Our results highlight that existing point-wise verification methods fail to discover confined regions, while ReVer provably succeeds.", "sections": [{"title": "1. Introduction", "content": "Machine learning is increasingly used in high-stakes settings to decide who receives a loan [13], a job interview [3], or even an organ transplant [33]. Models predict outcomes using features about individuals, without considering how individuals can change them [27]. Consequently, models may assign an individual a fixed prediction which is not responsive to the individual's actions.\nThe responsiveness of a model is integral to its safety in settings where predictions map to people. In lending and hiring, fixed predictions may preclude individuals from access to credit and employment. In content moderation, a fixed prediction can ensure that malicious actors are unable to evade detection by manipulating their features. There has been little work that mentions this effect, let alone studies it. In spite of this, fixed predictions arise in practice. Recently, a predictive model used to allocate livers in the United Kingdom was found to discriminate on the basis of age, precluding all young patients, no matter how ill, from receiving a liver transplant [33]. Despite the gravity of this problem, no existing methods can characterize the set of individuals who receive fixed predictions under a model.\nThe difficulties in detecting fixed predictions stem from challenges in optimization, interpretability, and data collection. Verifying recourse for a single individual is a non-trivial combinatorial problem that requires performing exhaustive search over a subset of the feature space that captures both the model as well as actionability constraints [22, 43]. Characterizing all fixed predictions represents an even more intensive setting that requires searching over any plausible individual. Moreover, even when individuals without recourse can be identified, it is hard to determine the cause of these fixed predictions [38]. The standard point-wise approach to check model responsiveness [see 22] can only verify recourse for available data, and does not provide guarantees on model responsiveness"}, {"title": "2. Problem Statement", "content": "We consider a classification task of predicting a label $y \\in \\{0,1\\}$ from a set of $d$ features $\\mathbf{x} = [X_1, X_2, ..., X_d] \\in \\mathcal{X}$ in a bounded set feature set $\\mathcal{X}$. We study linear classification models, a broad function class encompassing popular methods such as logistic regression, linearizable rule-based models (e.g., rule sets, decision lists), and concept-bottleneck models [21, 41]. We assume access to the linear classifier $f(\\mathbf{x}) = \\text{sign}(\\mathbf{w}^T\\mathbf{x} + b)$ where $\\mathbf{w} \\in \\mathbb{R}^d$ is the vector of coefficients and $b \\in \\mathbb{R}$ is the intercept of the classifier. Without loss of generality, we assume $f(\\mathbf{x}) = 1$ is the desired outcome (e.g., receiving a loan). We use boldface variables (e.g., $\\mathbf{x}$) to denote vectors, and standard text with subscripts (e.g., $x_a$) to denote a specific element of a vector.\nActionability Constraints The recourse verification problem [22] tests whether an individual $\\mathbf{x} \\in \\mathbb{R}^d$ can obtain the desired outcome of a model by actions on their features. Each action is a vector $\\mathbf{a} \\in \\mathbb{R}^d$ that shifts the features of the individual to $\\mathbf{x} + \\mathbf{a} = \\mathbf{x}' \\in \\mathcal{X}$. We refer to the set of all"}, {"title": "Definition 2.1.", "content": "The recourse set consists of all feasible actions for an individual $\\mathbf{x}$ that lead to the desired outcome:\n$\\text{Recourse}(\\mathbf{x}, f, \\mathcal{A}) = \\{\\mathbf{a} : f(\\mathbf{x} + \\mathbf{a}) = 1, \\mathbf{a} \\in \\mathcal{A}(\\mathbf{x})\\}$\nWe say an individual receives a fixed prediction under a classifier $f$ and action set $\\mathcal{A}$ if $\\text{Recourse}(\\mathbf{x}, f, \\mathcal{A}) = \\emptyset$, and has recourse if $|\\text{Recourse}(\\mathbf{x}, f, \\mathcal{A})| \\geq 1$\nVerification with Regions This paper studies the problem of verifying recourse over an entire region of the feature space $\\mathcal{R} \\subseteq \\mathcal{X}$. This region could represent plausible characteristics of decision subjects (e.g., any loan applicants), or a sub-group of interest (e.g., all Black female loan applicants). We start by generalizing the notions of recourse and fixed predictions to regions instead of individual data points."}, {"title": "Definition 2.2.", "content": "A region $\\mathcal{R}$ is responsive under a classifier $f$ and action set $\\mathcal{A}$ if all individuals within the region have recourse. A region $\\mathcal{R}$ is confined if all individuals within the region have a fixed prediction.\nNote that a region is responsive if all individuals within the region have recourse. Similarly, a region is only confined if all individuals are assigned fixed predictions. If the region contains a mix of individuals with recourse and fixed predictions, the region is neither confined nor fixed.\nThe goal of the Region Recourse Verification Problem (RVP) is to certify whether a given region $\\mathcal{R}$ is confined, responsive, or neither. This task can be cast as an optimization problem that finds the largest confined area $\\mathcal{S}(f, \\mathcal{A})$ within the region $\\mathcal{S} \\subset \\mathcal{R}$. For simplicity, we drop the explicit dependence of $\\mathcal{S}$ on $(f, \\mathcal{A})$. Let $\\text{Size}(\\mathcal{S})$ be a function that quantifies the size of the confined area $\\mathcal{S}$. Given a region $\\mathcal{R}$, a classifier $f$, and an action set $\\mathcal{A}$, the RVP can be modeled as the following optimization problem:\n$\\begin{aligned}\n&\\underset{\\mathcal{S}}{\\text{maximize}}& \\text{Size}(\\mathcal{S}) \\\\\n&\\text{subject to}& \\forall \\mathbf{x} \\in \\mathcal{S} : \\text{Recourse}(\\mathbf{x}, f, \\mathcal{A}) = \\emptyset \\\\\n&& \\mathcal{S} \\subset \\mathcal{R}\n\\end{aligned}$\nAn optimal solution to this optimization problem, $\\mathcal{S}^*$, can be used to directly verify whether the entire region $\\mathcal{R}$ is confined, responsive, or neither:\n$\\text{Verify}(\\mathcal{S}^*, \\mathcal{R}) = \\begin{cases}\n\\text{Responsive,} & \\text{if } \\mathcal{S}^* = \\emptyset \\\\\n\\text{Confined,} & \\text{if } \\mathcal{S}^* = \\mathcal{R} \\\\\n\\text{otherwise}\n\\end{cases}$\nUse Cases Verifying recourse over regions is a powerful tool that can be used to catch potential harms that arise from fixed predictions before deploying a model, characterize confined regions, and audit discrimination.\nDetecting Harms before Deployment. Existing approaches that verify recourse for individual data points may fail to find confined regions before deploying a model, especially in settings with large distribution shifts. This failure can result in tangible harms such as precluding individuals from"}, {"title": "3. Verification via Confined Boxes", "content": "Towards formally verifying recourse over an entire region, we formulate a mixed-integer quadratically constrained program (MIQCP) to solve the RVP.\nCharacterizing Regions with Boxes We focus on a special case of the RVP that finds the largest confined box. A box is a set defined by simple upper and lower bound constraints on each dimension. Let $U_j = \\max_{\\mathbf{x} \\in \\mathcal{R}}X_j, L_j = \\min_{\\mathbf{x} \\in \\mathcal{R}}X_j$ be the upper and lower bound for each feature $j$ in the region. Given an upper bound, $\\mathbf{u} \\in \\mathbb{R}^d : \\mathbf{u} < \\mathbf{U}$, and lower bound, $\\mathbf{l} \\in \\mathbb{R}^d : \\mathbf{l} > \\mathbf{L}$, a box $\\mathcal{B}_{\\mathcal{R}}(\\mathbf{u}, \\mathbf{l})$ is defined as $\\mathcal{B}_{\\mathcal{R}}(\\mathbf{u}, \\mathbf{l}) = \\{\\mathbf{x} \\in \\mathcal{R} : \\mathbf{l} < \\mathbf{x} < \\mathbf{u}\\}$. We focus on boxes due their interpretability, which can help model developers understand the source of fixed predictions. Boxes can be viewed as a type of decision rule, which have been widely studied for their interpretability within the broader ML community (e.g., [23, 24, 25]). For ease of notation we drop the explicit dependence on $\\mathcal{R}$ and refer to boxes as $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$. We define the size of a box $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$ as the sum of the normalized ranges of each feature:\n$\\text{Size}(\\mathcal{B}(\\mathbf{u}, \\mathbf{l})) = \\sum_{j=1}^{d} \\frac{u_j - l_j}{U_j - L_j}$\t(1)"}, {"title": "Generating Confined Boxes", "content": "We start by formulating the related problem of auditing whether a given box $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$ in region $\\mathcal{R}$ contains any data points with recourse, which we denote the Region Recourse Existence Problem (REP). Let $\\mathbf{x} \\in \\mathbb{R}^{d-q} \\times \\mathbb{Z}^q$ be a decision variable representing an individual, and $\\mathbf{a} \\in \\mathbb{R}^{d-q} \\times \\mathbb{Z}^q$ represent an action. We assume that the region $\\mathcal{R}$, feature space $\\mathcal{X}$, and action set $\\mathcal{A}$ can be represented by a set of constraints over a mixed-integer set (see Figure 1 for an example). This general assumption encompasses a variety of potential regions and feature sets. We model the REP as a mixed-integer linear program (MILP) over $\\mathbf{x}$ and $\\mathbf{a}$ (see Appendix A for details).\nRecall that the RVP can be cast as an optimization problem to find the largest confined region within $\\mathcal{R}$. By definition the REP is infeasible for every confined box. To certify that the REP is infeasible for a given box, and by extension certify that the box is confined, we leverage a classical result from linear optimization called Farkas' lemma:\nTheorem 3.1 (Farkas [7]). Let $A \\in \\mathbb{R}^{m \\times n}$ and $\\mathbf{b} \\in \\mathbb{R}^{m}$. Then exactly one of the following two assertions is true:\nI. There exists $\\mathbf{x} \\in \\mathbb{R}^{n}$ such that $A\\mathbf{x} < \\mathbf{b}$\nII. There exists $\\mathbf{y} \\geq 0$ such that $A^T\\mathbf{y} = 0$ and $\\mathbf{b}^T\\mathbf{y} = -1$\nFarkas' lemma states that we can certify that a system of inequalities over continuous variables $A\\mathbf{x} < \\mathbf{b}$ is infeasible by finding a Farkas certificate $\\mathbf{y} \\geq 0$ such that $A^T\\mathbf{y} = 0$ and $\\mathbf{b}^T\\mathbf{y} = -1$. In our context, we can thus view the problem of finding a confined box as a joint problem of selecting a box and finding an associated Farkas certificate for the REP. However, Farkas' lemma only applies to continuous variables, and the REP can include discrete variables.\nWe extend Farkas' certificates to the discrete setting using a simple strategy that simultaneously generates certificates for all possible continuous restrictions of the REP. A continuous restriction of a MILP is a restricted version of the optimization problem where all discrete variables are fixed to specific values. Note that a box is confined if and only if every continuous restriction of the REP is infeasible.\nLet $\\mathcal{C}$ be the set of continuous restrictions, where each restriction $c \\in \\mathcal{C}$ corresponds to a specific set of fixed values for the discrete variables (e.g., $x_1 = 1, x_2 = 2$ for a problem with two discrete variables $X_1, X_2 \\in \\mathbb{Z}^2$). Note that the set $\\mathcal{C}$ is finite, from the assumption $\\mathcal{R}$ is bounded and only discrete variables are fixed, but grows exponentially with respect to the number of discrete variables. If there are no discrete variables in the REP, there is a single continuous restriction representing the full problem with no fixed values. In settings where there are a large number of discrete variables, enumerating all possible continuous restrictions may become computationally intractable. However, we prove in Section 3.1 that under very general constraints and minimal assumptions we can relax many if not all of the discrete variables in the REP. Under these new theoretical results, the set of restrictions that the algorithm must consider is often incredibly small (e.g., $|\\mathcal{C}| \\leq 4$ for all the datasets and actionability constraints considered in Kothari et al. [22]).\nWe formulate a continuous restriction $c \\in \\mathcal{C}$ of the REP as a linear program (LP) (see Appendix A), which we represent in the following standard form:\n$C_c\\mathbf{x} + D_c\\mathbf{a} < \\mathbf{b}_c(\\mathbf{u}, \\mathbf{l})$\nwhere where $C_c$ and $D_c$ are $m \\times d$ matrices and $\\mathbf{b}_c(\\mathbf{u}, \\mathbf{l})$ is a $m$-dimensional vector that is a linear function of the box upper and lower bounds $\\mathbf{u}, \\mathbf{l}$. Here $m$ represents the number of constraints in the continuous restriction of the REP.\nMIQCP Formulation We can now formulate the RVP as MIQCP that finds the largest box with Farkas certificates of infeasibility for every continuous restriction. Let $\\mathbf{y}_c \\in \\mathbb{R}^m$ be decision variables representing the Farkas certificate for a continuous restriction $c \\in \\mathcal{C}$, and $\\mathbf{u}, \\mathbf{l} \\in \\mathbb{Z}^d$ represent the upper and lower bounds of a box. Note that there is one variable in $\\mathbf{y}$ for every constraint in the"}, {"title": "continuous restriction.", "content": "We can now find the largest confined box $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$ with associated certificates of infeasibility $\\mathbf{y}_c$ for $c \\in \\mathcal{C}$ using the Farkas Certificate Problem (FCP):\n$\\begin{aligned}\n&\\underset{\\mathbf{y}_c, \\mathbf{u}, \\mathbf{l}}{\\text{maximize}}& \\sum_{d=1}^{d} \\frac{u_d - l_d}{U_d - L_d}  \\\\ (2a)\n&\\text{subject to}& \\mathbf{b}_c(\\mathbf{u}, \\mathbf{l})^T \\mathbf{y}_c = -1 &\\forall c \\in \\mathcal{C}  \\\\ (2b)\n&& C_c^T\\mathbf{y}_c = 0 &\\forall c \\in \\mathcal{C}  \\\\ (2c)\n&& D_c^T\\mathbf{y}_c = 0 &\\forall c \\in \\mathcal{C}  \\\\ (2d)\n&& \\mathbf{y}_c \\geq 0 &\\forall c \\in \\mathcal{C}  \\\\ (2e)\n&& \\mathbf{L} \\leq \\mathbf{l} \\leq \\mathbf{u} \\leq \\mathbf{U}  \\\\ (2f)\n&& \\mathbf{u}, \\mathbf{l} \\in \\mathbb{Z}^d  \\\\ (2g)\n\\end{aligned}$\nThe objective of the problem is to maximize the size of the box, as defined in Equation (1). Constraints (2b)-(2e) follow from Farkas' lemma and ensure that $\\mathbf{y}_c$ is a valid certificate of infeasibility for the continuous restriction $c$ of the REP. Constraint (2f) ensures the FCP generates a valid box within the region $\\mathcal{R}$. We restrict $\\mathbf{u}, \\mathbf{l}$ to be integer variables to prevent numerical precision issues when solving this MIQCP in practice. This is not an onerous assumption as any continuous variable $x_j$ with a desired precision $10^{-p}$ can be re-scaled and rounded to an integer variable $10^p x_j$. The problem is quadratically constrained due to the inner product of $\\mathbf{b}_c(\\mathbf{u}, \\mathbf{l})$ and $\\mathbf{y}_c$ in constraint (2b). While MIQCPs are often more computationally demanding than MILPs, the FCP can be solved in seconds on real-world datasets using commercial solvers [e.g., 1], as the problem scales with the number of features and actionability constraints (which are typically small) rather than the number of data points in the data set.\nWhen verifying recourse over a fixed box $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$ the FCP can be decomposed into $|\\mathcal{C}|$ problems (solved independently for each continuous restriction). If the FCP is infeasible for any continuous restriction $c$, then the RVP is infeasible for the box. If the FCP is feasible for all continuous restrictions $c \\in \\mathcal{C}$, then the box is responsive. Alas, when optimizing over potential boxes, the FCP cannot be decomposed as the variables $\\mathbf{u}, \\mathbf{l}$ link all the continuous restrictions.\nGenerating Multiple Boxes Solving an instance of the FCP generates a single confined box or certifies that the region is responsive. However, in practice, a given region may contain multiple confined regions. To provide model developers and stakeholders with a comprehensive view of individuals with fixed predictions, the FCP can be run sequentially to enumerate multiple (or all) confined boxes with the region. It does so by iteratively adding no-good cuts to exclude previously discovered confined regions from $\\mathcal{R}$ (see Appendix B for details)."}, {"title": "3.1 Handling Discrete Variables", "content": "In the preceding section, the RVP was solved by enumerating and finding Farkas' certificates for all continuous restrictions of the REP. However, this approach scales exponentially with respect to the number of discrete variables in the REP. In this section, we show that under a very broad set of actionability constraints and general assumptions we can relax all the discrete variables in the REP and still verify recourse over the entire region.\nLinear Recourse Constraints We consider a restricted set of constraints, which we call linear recourse constraints (detailed in Table 2). These constraints include a broad class of actionability constraints such as monotonicity, categorical encodings, and immutability. They can be used to define the feature space $\\mathcal{X}$, the region $\\mathcal{R}$, or the action set $\\mathcal{A}$. Linear recourse constraints encompass many actionability constraints considered in previous literature including all the constraints in [22, 40, 43]. We denote an action set comprised only of these constraints as linear recourse constraints."}, {"title": "4. Experiments", "content": "We present experiments showing that point-wise approaches fail to correctly find confined regions, while our methods to audit recourse over regions accurately find such regions when they exist. Hence our methods can help decision-makers avoid harms from deploying models with fixed predictions. We include code to reproduce our results at https://github.com/conlaw/confined_regions/and provide additional details and results in Appendix E.\nSetup We evaluate our approach on three real-world datasets in consumer finance (heloc [8], givemecredit[14]) and content moderation (twitterbot [10]). Each dataset include features that admit inherent actionability constraints that apply to all individuals (e.g., preserving feature encoding)"}, {"title": "Methods", "content": "We compare our method to pointwise baselines that audit recourse over a sample of individual data points to generate outputs for the entire region. Given a sample of individual data points, these point-wise approaches output that a region is responsive (confined) if all data points have recourse (no recourse). We generate different baselines by using different strategies to select which individual data points to include in the sample.\n\u2022 Data: We use all data points from the training dataset that fall within the region.\n\u2022 Region: We sample 100 data points uniformly at random from the region being audited.\n\u2022 Score: We evaluate the data points within the region with the highest and lowest classifier score (i.e. $\\text{argmax }\\mathbf{w}^T\\mathbf{x}$ and $\\text{argmin }\\mathbf{w}^T\\mathbf{x}$).\n\u2022 ReVer: We implement our approach, Region Verification (ReVer), in Python using Gurobi [1] to solve all MIQCPs.\nResults We summarize our results in Table 3 for all datasets and methods. We use ReVer to certify whether each region is responsive, confined, or neither. We use these results to evaluate the reliability"}, {"title": "On Preempting Harms during Model Development", "content": "Our results demonstrate that individualized recourse verification approaches fail to properly predict whether a region is responsive or confined. All baseline approaches result in blindspots, ranging from 2.8% to 37.4% of regions, and loopholes, ranging from 0.6% to 20% of regions. The baseline approaches incorporate both separable and non-separable actionability constraints. Consequently, these blindspots and loopholes arise from focusing on individual data points instead of the region as a whole and highlight the importance of region-specific methods. In Appendix F we show that these failures are exacerbated in settings whether there is a distribution shift in the test dataset.\nBlindspots and loopholes represent failure cases that undermine the benefits of algorithmic recourse and lead to tangible harms if left undetected in model development. Consider a content moderation setting where a machine learning model is used to remove sensitive content. A loophole could represent malicious content (e.g., discriminatory or offensive content) that is able to bypass the filter by changing superficial features of the post. In a consumer finance application, a blindspot represents unanticipated individuals that receive fixed predictions and are precluded from ever getting access to a loan. In both these settings, rectifying the problem after deployment would involve training a new machine learning model (e.g., by dropping features that lead to fixed predictions, or adding new features that promote actionability) which can be time-consuming, costly, and continues to inflict harm while the existing model operates. This highlights the importance of auditing recourse over regions it foresees potential harms that occur when deployed models assign fixed predictions."}, {"title": "On Characterizing Fixed Predictions", "content": "In Section 5 we show sample regions that our algorithm certifies as confined. These regions are represented by simple decision rules (e.g., 'Age 21-25 and Male') and can help model developers debug the sources of fixed predictions. For instance, the latter example may prompt a model developer to remove features related to age and gender from the dataset.\nIn some settings, fixed predictions are rare and can be represented by a small number of regions (see e.g., the case study in Section 5). However, in complicated settings there may be a large a number of confined regions. To demonstrate this phenomenon, we run our approach sequentially to enumerate up to 100 confined regions within our benchmark datasets. For each dataset, we audit a region encompassing any plausible individual (i.e., any individual satisfying indisputable conditions"}, {"title": "5. Demonstration", "content": "Setup We showcase the potential of ReVer as a tool for auditing potential discrimination via a case study of the Pennsylvania Criminal Justice Sentencing Risk Assessment Instrument (SRAI) [35]. The SRAI is a simple linear scoring system that uses 37 features, including age and gender, to predict the risk of an offender committing a re-offense (i.e., criminal recidivism). The guidelines state that an offender is deemed low-risk if the SRAI risk score is under 5 points.\nWe use ReVer as a tool to audit whether there are any protected groups that are precluded from being predicted as low-risk. To that end, we specify an action set that does not allow changes to protected characteristics (i.e., age and gender), and enforces logical constraints on the features (e.g., to have a prior conviction for violent crime the number of previous convictions needs to be at least one). Full details of the actionability constraints are included in Appendix G. Note that we allow every unprotected characteristic (i.e., criminal history) to be mutable. This choice allows us to answer whether any protected group, based solely on protected characteristics, is never predicted to be low risk.\nResults ReVer finds two confined regions:"}, {"title": "6. Concluding Remarks", "content": "Our paper introduces a new paradigm for algorithmic recourse that seeks to characterize fixed predictions by finding confined regions, areas in the feature space where a model is not responsive to individuals' actions. This work highlights that characterizing confined regions can help model developers pre-empt harms that arise from deploying models with fixed predictions. Our work introduces the first method to tackle this problem by leveraging tools from MIQCP to find confined boxes within a region of the feature space. Our method provides interpretable descriptions of confined regions, can be run in seconds for real-world datasets, and enables data-free auditing of model responsiveness. However, these methods should be extended to address the following limitations:\n\u2022 Our methods are designed to work with linear classifiers. In principle, our methods can be extended to any model that can be represented by a MILP. However, many MILP-representable models (e.g., tree ensembles) would require solving a large, computationally-intractable MIQCP and need new algorithmic approaches.\n\u2022 ReVer finds confined boxes. Boxes are an interpretable way to characterize regions but have limited expressive power. Future work should explore whether more expressive classes capture confined regions with fewer items."}, {"title": "Appendix A. REP Integer Programming Formulation", "content": "Recall the following:\n\u2022 $\\mathbf{x} \\in \\mathbb{R}^{d-q} \\times \\mathbb{Z}^q$ is a decision variable representing an individual.\n\u2022 $\\mathbf{a} \\in \\mathbb{R}^{d-q} \\times \\mathbb{Z}^q$ is a decision variable representing an action.\n\u2022 $f(\\mathbf{x}) = \\text{sign}(\\mathbf{w}^T\\mathbf{x} + b)$ is the linear classifier where $f(\\mathbf{x}) = 1$ is the desirable outcome.\n\u2022 $\\mathcal{X}$ represents the feature space.\n\u2022 $\\mathcal{R}$ represents the region of interest.\n\u2022 $\\mathcal{A}(\\mathbf{x})$ represents a set of feasible actions for a given individual $\\mathbf{x}$ under the set of actionability constraints.\nWe assume that $\\mathcal{X}, \\mathcal{R}$, and $\\mathcal{A}$ can all be represented via a set of constraints in a MILP optimization model. We formulate the REP for a given region of interest $\\mathcal{R}$ as the following MILP:\n$\\begin{aligned}\n&\\mathbf{w}^T(\\mathbf{x} + \\mathbf{a}) \\geq b  \\\\ (3a)\n&\\mathbf{x} + \\mathbf{a} \\in \\mathcal{X}  \\\\ (3b)\n&\\mathbf{x} \\in \\mathcal{R}  \\\\ (3c)\n&\\mathbf{a} \\in \\mathcal{A}(\\mathbf{x})  \\\\ (3d)\n&\\mathbf{x} \\in \\mathcal{B}(\\mathbf{u}, \\mathbf{l})  \\\\ (3e)\n&\\mathbf{x}, \\mathbf{a} \\in \\mathbb{R}^{d-m} \\times \\mathbb{Z}^m  \\\\ (3f)\n\\end{aligned}$\nNote that this problem has no objective as it is a feasibility problem. Constraint (3a) ensures that the data point $\\mathbf{x}$, after taking action $\\mathbf{a}$, is classified with the desirable outcome. Constraints (3c) and (3b) ensure that $\\mathbf{x} + \\mathbf{a}$ if a valid feature vector (i.e., included in $\\mathcal{X}$), and $\\mathbf{x}$ is part of the region of interest. Constraint (3d) ensures that the action $\\mathbf{a}$ satisfies the actionability constraints. Finally Constraint (3e) ensures that $\\mathbf{x}$ is included in the box $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$. Note that any solution to the REP represents a feasible $\\mathbf{x} \\in \\mathcal{B}(\\mathbf{u}, \\mathbf{l})$ with recourse. Thus the region $\\mathcal{B}(\\mathbf{u}, \\mathbf{l})$ is confined if and only if the REP is infeasible."}, {"title": "A.1 Continuous Restriction", "content": "Recall that $\\mathcal{C}$ is the set of continuous restrictions of the REP, where a continuous restriction $c \\in \\mathcal{C}$ corresponds to the REP with fixed values for the discrete variables (e.g., $x_1 = 1, x_2 = 2$ for discrete variables $\\mathcal{ID} = \\{x_1, x_2\\}$). Let $v_j \\in \\mathcal{ID}$ represent a discrete variable, and $s_j$ be its fixed value in continuous restriction $c$. We can incorporate continuous restrictions into the MILP formulation by adding the following additional constraints that fix the values of discrete variables in the formulation:\n$v_j = s_j \\forall v_j \\in \\mathcal{ID}$\nNote that since all discrete values are fixed, this is not a linear program over the $d-q$ continuous variables."}, {"title": "Appendix B. Generating multiple confined boxes", "content": "Solving an instance of the RVP can generate single confined box. However in practice, a given region may contain multiple confined boxes. To provide model developers or stakeholders with a holistic view of fixed predictions, the RVP can be run sequentially to enumerate multiple (or all) confined boxes with the region. We do so by adding no-good cuts to the FCP that exclude previously discovered regions. This is equivalent to re-solving the RVP for a new region $\\mathcal{R}' \\subset \\mathcal{R}$ that excludes existing confined boxes.\nLet $\\bar{\\mathbf{u}}, \\bar{\\mathbf{l}}$ be an existing confined box. Let decision variables $\\mathbf{z}_{u}, \\mathbf{z}_{l} \\in \\{0, 1\\}^d$ track whether the new box $\\mathbf{u}, \\mathbf{l}$ is outside the existing box. We model the no-good cuts that exclude $\\bar{\\mathbf{u}}, \\bar{\\mathbf{l}}$ via the following linear constraints:\n$\\begin{aligned}\n&u_d \\leq \\bar{l}_d - 1 + (U_d - \\bar{l}_d - 1)(1 - z_{ud}) &\\forall d \\in [d] \\\\ (4a)\n&l_d \\geq \\bar{u}_d + 1 + (L_d - \\bar{u}_d + 1)(1 - z_{ld}) &\\forall d \\in [d] \\\\ (4b)\n&\\sum_{d}^{d} z_{ud} + z_{ld} \\geq 1 \\\\ (4c)\n&\\mathbf{z}_{u}, \\mathbf{z}_{l} \\in \\{0, 1\\}^d \\\\ (4d)\n\\end{aligned}$\nConstraint (4a) checks whether the upper bound for feature $d$ in the new box is less than the lower bound for feature $d$ in the existing box. Note that these constraints are enforced if $z_{ud} = 1$. Constraint (4b) checks an analogous condition for the lower bound of feature $d$. Constraints (4c)-(4d) ensure that at least one constraint of type (4a) or (4b) are active. In other words, it ensures that the new region must fall outside the previous region by ensuring that at least one feature differs in the new box. We exclude constraints for bounds that are tight with the population bounds (i.e., $u_d = U_d$ or $l_d = L_d$) as they are implied in the FCP. Given that our procedure tends to generate sparse regions (i.e., regions that change few features from their population upper and lower bounds), these no good-cuts typically add a very small number of binary variables and constraints to the full formulation."}, {"title": "Appendix C. Proof of Theorem 3.2", "content": "We prove this result by showing that the polyhedron defining feasible individuals $\\mathbf{x"}, "and actions $\\mathbf{a}$ under linear recourse constraints is totally unimodular, which means that all extreme points of the polyhedron are integral. Consequently, the linear relaxation of the REP is feasible if and only the discrete REP is feasible.\nWe start by (re)-introducing important notation:\n\u2022 $\\mathbf{x}$ is a decision variable corresponding to an individual with the region $\\mathcal{R}$.\n\u2022 $\\mathbf{a}$ is a decision variable corresponding to an action which must be feasible under the action set $\\mathcal{A}(\\mathbf{x})$.\n\u2022 $v_j$ represents a set of variables corresponding to feature $j$ (i.e., $x_j, a_j, or x_j + a_j$).\nConsider the following mixed-integer polyhedron that represents all feature space, region, and actionability constraints.\n$\\begin{aligned}\n&\\mathbf{x} + \\mathbf{a} \\in \\mathcal{X} \\\\ (5a)\n&\\mathbf{x} \\in \\mathcal{R} \\\\ (5b)\n&\\mathbf{x} \\in \\mathcal{B}(\\mathbf{u}, \\mathbf{l}) \\\\ (5c)\n&\\mathbf{a} \\in \\mathcal{A}(\\mathbf{x}) \\\\ (5d)\n&\\mathbf{x}, \\mathbf{a} \\in \\mathbb{R}^{d-m} \\times \\mathbb{Z}^m \\\\ (5e)\n\\end{aligned}$\nRecall that for Theorem 3.2, we consider a subset of possible constraints used in $\\mathcal{X}, \\mathcal{R}, \\mathcal{A}$ called linear recourse constraints which were introduced in Section 3.1. We"]}