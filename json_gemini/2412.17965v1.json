{"title": "LMV-RPA: Large Model Voting-based Robotic Process Automation", "authors": ["Osama Hosam Abdellaif", "Ahmed Ayman", "Ali Hamdi"], "abstract": "The need for automating high-volume and unstructured data processing is becoming increasingly critical as organizations aim to improve operational efficiency. In a move to automate workflows, Optical Character Recognition (OCR) plays a key role in it, yet traditional OCR engines frequently struggle with accuracy and efficiency when dealing with complex document layouts and ambiguous text structures. This challenge becomes more pronounced in large-scale tasks, where both speed and precision are essential. In this paper, we address these challenges by introducing LMV-RPA, a new Novel Large Model Voting-based Robotic Process Automation (RPA) system designed to enhance the accuracy and efficiency of OCR workflows. The research problem centers around the limitations of single-engine OCR systems and the need for a more robust solution that would handle complex, high-volume data with greater precision and speed. Our key contribution is the implementing a majority voting mechanism that integrates the outputs from multiple OCR engines-Paddle OCR, Tesseract OCR, Easy OCR, and DocTR-alongside Large Language Models (LLMs), such as LLAMA 3 and Gemini-1.5-pro. This mechanism improves the OCR output to convert it into structured JSON format, significantly enhancing accuracy, particularly for documents with complex and ambiguous layouts. The methodology of this research is the multi-phase pipeline, where each OCR engine's text extraction is processed by LLMs. The results are then combined using a majority voting mechanism, to make sure that the most accurate text is selected for conversion. This approach not only increase accuracy but also optimizes processing speed, striking a balance between precision and efficiency. LMV-RPA achieves 99% accuracy in OCR tasks, compared to the baseline model with 94%, while reducing processing time by 80%. Benchmark evaluations validate the system's scalability, demonstrating that LMV-RPA provides a faster, more reliable, and scalable solution for automating large-scale document processing tasks, outperforming existing OCR-RPA integrations.", "sections": [{"title": "1 Introduction", "content": "In today's rapidly evolving digital landscape, businesses want to automate their repetitive and time-consuming tasks to enhance operational efficiency and reduce costs. Robotic Process Automation (RPA) has become one of the most important technologies, enabling organizations to streamline workflows by replicating human interactions with digital systems using software-based robots. These robots can manage tasks such as sending emails, scraping data from websites, handling files, and logging into applications with consistent precision [13,18]. Top RPA platforms, including UiPath and Automation Anywhere, have demonstrated significant success in automating structured, rule-based tasks across various industries. However, the integration of Optical Character Recognition (OCR) [5,10,6] within these platforms has been essential for automating workflows that involve extracting text from images or scanned documents [21]. RPA in combination with OCR plays a crucial role in enabling organizations to reallocate human resources from mundane tasks to higher-value work, while also reducing the risk of human error [24,11].\nWhile these RPA platforms bring great benefits, significant challenges remain when processing unstructured data. Traditional RPA systems [1] excel in automating repetitive, rule-based tasks but often face limitations when dealing with complex workflows that involve unstructured or semi-structured data, such as document text recognition [17]. While the UiPath and Automation Anywhere platforms are efficient in many respects, they still face performance bottlenecks, mainly in handling large-scale OCR tasks. The traditional OCR engines frequently employed in these systems, such as Tesseract and Paddle OCR, often struggle with issues related to ambiguous characters, intricate document layouts, and variations in text structures [3,14]. These challenges limit the effectiveness of traditional RPA platforms [16,4,2] in scenarios requiring the processing of high volumes of unstructured data, resulting in inefficiency in both speed and accuracy [9,23].\nTo address these limitations, we propose LMV-RPA, a Large Language Model-Driven Robotic Process Automation system that enhances the accuracy and efficiency of OCR workflows. The key contribution of this research is the introduction of a majority voting mechanism between two distinct Large Language Models (LLMs), aimed at improving the conversion of OCR outputs into structured JSON format. Our system integrates multiple OCR engines-Paddle OCR, Tesseract OCR, Easy OCR, and DocTR-into a multi-phase pipeline. Each OCR engine's output is processed by LLMs, with a majority voting mechanism selecting the most accurate result. This approach allows for increased accuracy, adaptability, and scalability when handling large volumes of unstructured data and outperform common RPA platforms like UiPath and Automation Anywhere [3,14].\nThrough extensive benchmarking, we show that LMV-RPA significantly improves both processing speed and accuracy in OCR-driven automation, offering a more scalable and efficient solution compared to existing RPA platforms. This"}, {"title": "2 Related Work", "content": "The integration of Optical Character Recognition (OCR) with advanced automation frameworks has garnered considerable attention as organizations as they attempt automate the processing of unstructured data. OCR plays a very important role in converting text from scanned documents and images into structured formats; however, traditional OCR engines fail to work on complex text recognition due to inconsistencies in character recognition and layout interpretation [13]. To address these challenges, recent research has introduced multi-engine OCR frameworks and Large Language Models (LLMs) to enhance the efficiency and accuracy of text extraction and conversion workflows.\nPrevious research was dedicated mostly to single-engine OCR solutions, which, while effective for clean and structured text; however, they usually fail to deliver accurate results when faced with noisy images, diverse fonts, or intricate document layouts. For example, Tesseract, a widely adopted OCR engine, struggles with unstructured and ambiguous text data, resulting in frequent recognition errors [3]. Such limitations have highlighted the need for more robust systems capable of handling a broader range of input complexity."}, {"title": "3 Research Methodology", "content": "We design the LMV-RPA model to constantly observe a specific directory for any new invoice files, process the images of detected ones using OCR engine[18], and further refine the extracted data with the help of an LLM in order to create structured JSON [9]. The system then populates the database with the structured data and generates a formatted Template Report automatically; the system works in a completely automated loop[15]."}, {"title": "3.1 LMV-RPA Model", "content": "The LMV-RPA system is designed to continuously monitor a specified directory for new image files, comparing the current files to previously detected ones at regular intervals. Upon detecting a new valid image, it utilizes multiple OCR engines, including PaddleOCR, Tesseract, EasyOCR, and DocTR, to extract text data from the image. This text then undergoes processing via two Large Language Models, which structure the extracted data in JSON format. A majority"}, {"title": "3.2 Directory Monitoring and File Detection", "content": "The LMV-RPA system is designed to continuously monitor a specified directory D for new image files. At any given time t, the system compares the files present in the directory with the files detected at time t - \u0394t (where \u0394t is the monitoring interval). A new file f\u1d62 is detected if:\nf\u1d62 \u2208 F(t) \\ F(t \u2013 \u0394t)\nIf the newly detected file f\u1d62 belongs to the set of valid image files I, it is then sent for further processing; otherwise, it is ignored."}, {"title": "3.3 Multi-OCR Text Extraction", "content": "Once a valid image file f\u1d62 \u2208 I is detected, the LMV-RPA system utilizes multiple OCR engines to extract text data T\u2096. These OCR engines include PaddleOCR, Tesseract, Easy OCR, and DocTR, where each engine is indexed by k\u2208 {1,2,3,4}. For each OCR engine O\u2096, the system extracts textual content as:\nT\u2096 = O\u2096(f\u1d62)\nThis multi-engine approach ensures that text data from the image is captured effectively, accounting for variations in document structures and complexities."}, {"title": "3.4 Data Structuring via Large Language Models (LLMs)", "content": "After extracting the text T\u2096 from each OCR engine, the raw text is sent to two separate Large Language Models (LLMs) [19,8] for data structuring. Specifically:\n-The first LLM L\u2081 processes T\u2096 to convert it into structured JSON format J\u2096.\n-Simultaneously, the second LLM L\u2082 also processes the same extracted text data T\u2096.\nThis step is repeated for the outputs from each OCR engine. The transformation process is represented as:\nJ\u2096 = L\u2081,\u2082(T\u2096)"}, {"title": "3.5 Majority Voting for Final JSON", "content": "To ensure the accuracy of the structured data, the system applies a majority voting mechanism across the different JSON outputs J\u2096 from the OCR engines. This voting process helps in determining the most accurate and reliable final JSON output:\nJf\u1d62\u2099\u2090\u2097 = MajorityVote(J\u2096)\nThis ensures that any inconsistencies or errors introduced by individual OCR engines or LLM models are minimized, and the final result is robust and accurate."}, {"title": "3.6 Continuous Automation", "content": "The LMV-RPA system operates in a continuous loop, as shown in Algorithm 1. It monitors the directory for new files and processes them as they are detected. The process continues as long as there are new files to process, ensuring that the system remains operational and automated:\nwhile t\u2208T, perform LMV-RPA process"}, {"title": "4 Benchmark and Experimental Design", "content": "The data used in this research was collected from various sources, primarily focusing on document image datasets that simulate real-world OCR tasks. The utilized dataset consists of 100 diverse document images sourced from platforms like Kaggle and Roboflow [22], as well as Koz\u0142owski's \"Samples of Electronic Invoices\" [12]. These images were carefully selected to ensure a wide range of text complexity, image quality, and formats to thoroughly test the performance of different OCR engines. The datasets were specifically chosen to evaluate the effectiveness of the LMV-RPA system in handling various document structures, while emphasizing image clarity and its impact on the accuracy and speed of text extraction.\nThe research was conducted in a simulated document processing environment where the LMV-RPA system was benchmarked using various OCR engines, including Paddle OCR, Tesseract, EasyOCR, and DocTR. All OCR engines were"}, {"title": "6 Conclusion", "content": "This study has provided a comprehensive comparison of UiPath, Automation Anywhere, MLV-RPA, focusing on how these three tools are able to execute the automation processes quicker and more accurately. While Both UiPath and Automation Anywhere show regular performance and require longer processing time; the custom-built model of MLV-RPA proved to be very accurate with a result of 99%, although taking more time in processing tasks. By contrast, LMV-RPA strikes the best balance of speed and accuracy. Thus, it is an extremely effective solution for quick and reliable automation.\nThese findings underline the potential of custom-built RPA systems in solving particular automation challenges. Indeed, MLV-RPA is best for activities that demand high accuracy, whereas LMV-RPA works best for those tasks that require the highest speed. Hence, it is vital for organizations to consider their needs for automation and balance speed and accuracy requirements while choosing an RPA tool to improve efficiency in operations and meet their business objectives successfully."}, {"title": "7 Data and Code Availability", "content": "The dataset used in this research is available at the following link: data set.\nThe code repository for this project can be found at: Repo."}]}