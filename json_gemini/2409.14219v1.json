{"title": "MEGA-PT: A Meta-Game Framework for Agile Penetration Testing", "authors": ["Yunfei Ge", "Quanyan Zhu"], "abstract": "Penetration testing is an essential means of proactive defense in the face of escalating cybersecurity incidents. Traditional manual penetration testing methods are time-consuming, resource-intensive, and prone to human errors. Current trends in automated penetration testing are also impractical, facing significant challenges such as the curse of dimensionality, scalability issues, and lack of adaptability to network changes. To address these issues, we propose MEGA-PT, a meta-game penetration testing framework, featuring micro tactic games for node-level local interactions and a macro strategy process for network-wide attack chains. The micro- and macro-level modeling enables distributed, adaptive, collaborative, and fast penetration testing. MEGA-PT offers agile solutions for various security schemes, including optimal local penetration plans, purple teaming solutions, and risk assessment, providing fundamental principles to guide future automated penetration testing. Our experiments demonstrate the effectiveness and agility of our model by providing improved defense strategies and adaptability to changes at both local and network levels.", "sections": [{"title": "Introduction", "content": "With the exponential growth of network technologies and the escalating frequency of security incidents, cybersecurity has become a global concern [2,9]. In response to these challenges, penetration testing has emerged as a crucial solution for uncovering system vulnerabilities and assessing network security through authorized ethical attacks [4]. However, traditional manual penetration testing performed by skilled IT professionals has several limitations. It can be time-consuming, resource-intensive, and prone to human error. Relying solely on manual testing often falls short of identifying all vulnerabilities within the system. Thus, there is a need for automation and the integration of advanced threat intelligence into the penetration testing process, enabling a more efficient and scalable approach to enhancing cybersecurity.\nCurrent proposed automated penetration testing methods are increasingly becoming non-standard, complex, and resource-consuming, despite tool advancements. Reinforcement learning (RL) or Markov Decision Process (MDP) based methods [3,4] suffer from the curse of dimensionality, as they define the state space as the collection of all known information for each machine on the network. Partially Observable Markov Decision Process (POMDP) methods [8] face"}, {"title": "Problem Formulation", "content": "Penetration testing is an ethical attack aimed at identifying system vulnerabilities, providing defense suggestions, and offering risk assessments. In this context, the term attacker refers to the penetration testing agent, while the defender represents the system security management engine. To describe attacker behaviors"}, {"title": "Micro Tactic Games", "content": "When an attacker gains access to one node, there are multiple steps involved before he completes the exploration and exploitation process on the node. To model the sequential moves at each local node, we use the concept of an extensive-form game tree to explicitly and visually represent the sequential moves, possible outcomes, and information available at each decision point in a strategic interaction.\nGame-theoretic Modeling\nDefinition 1 (Micro Tactic Game (MTG)). The Micro Game of the MEGA-PT is defined by a set of Micro Tactic Games (MTG) {\u0393_v}_{v\u2208V} where V is the set of nodes in the system. Given a node v \u2208 V in the network, the MTG on node v can be represented by an extensive-form game tuple \u0393_v = (N_v^c, H_v^c, P, {A_i}_{i\u2208N_v^u c}, \u03c3_v, {u_i}_{i\u2208N_v}, Z_v^\u00ba), where each components represents:\nPlayers N = {a,d} There are two main players in the game: the attacker (a) and the defender (d). Additionally, c is the nature that represents the system randomness.\nHistories H^\u00ba Each vertex in the game tree h \u2208 H^\u00ba corresponds to a unique sequence of actions taken from the beginning of the game.\nTurn Function P : H^\u00ba \u2192 N \u222a {c} The function P(h) determines whose turn it is to make a move at each decision point for a given history vertex h.\nTechniques A^A is a set of techniques that player i can take. A(h) denote the feasible techniques for player i = P(h) at vertex h \u2208 H^\u00ba\u201d .\nSystem Randomness \u03c3\u2208 \u03a3^\u00ba Nature's fixed policy o specifies the system randomness, which could be related to network traffic load, randomized system configuration, hardware failures, etc.\nTactic Expected Outcomes Z_u Z_u represents the finite set of possible outcomes for each attack sequence in the MTG. These outcomes correspond to the results observed at the leaf vertices of the game tree, which could be the credentials to user devices, authorized connection to the server, no vulnerability found, etc."}, {"title": "Penetration Plans", "content": "Before we define tactics or strategies, we need to understand the basis on which players make their decisions. For any strategic player, decisions are made based on the current knowledge of the situation. However, it is sometimes challenging for the player to obtain the complete interaction history due to partial observations. Consequently, there are decision vertices in the game tree that the player cannot distinguish between. In an extensive-form game, this is called an information set. In this work, we refer to this information set as a knowledge set.\nDefinition 2 (Knowledge Set). Given the MTG at node v \u2208 V, a knowledge set I_i^H of a player i represents a set of decision vertices where the player i has the same available techniques and cannot distinguish between the vertices.\nThe concept of knowledge set helps us better describe the decision-making process for both players. Given the MTG at the current node, attackers can construct their tactics in different ways. One approach is to have a sequential"}, {"title": "Global Attack Strategy", "content": "Definition 11 (Global Attack Strategy). Consider the MTG defined in Definition 1 and the MSP defined in Definition 10. The global attack strategy in MSP is a mapping from the state space to the global action space, i.e., \u03c0^9 : S \u2192 \u0394(A^9). For node v \u2208 V, given the MTG \u0393^v and the local plan profile \u03a6^v = (\u03c3_v^d, \u03c3_v^a, \u03c3^c), the global attack strategy is given by\n\u03c0^' (a^9 | s) = \u03c0^' (a^9 = (v, z) | s = v) = \u03c4^v(z | \u03a6^v), \u2200 z \u2208 Z_v,\nwhere \u03c4^\u00ba (z | \u0424^\u00ba) is the tactic outcome probability as defined in Def. 7.\nThe global attack strategy in the MTG outlines the cyber kill chain and the sequence of tactics across the entire system. Rather than focusing on the details at each local node, the MSP connects all the nodes in the network, offering a comprehensive risk assessment for the entire system. This holistic approach allows organizations to better understand the interconnections within their network and the cascading effects of vulnerabilities throughout the system."}, {"title": "Meta Penetration Game and Playbook", "content": "Policy evaluation offers a way to estimate the effectiveness of the global attack strategy \u03c0^\u00ba in terms of expected cumulative utilities. Similar to traditional MDPs, policy evaluation of the global attack strategy computes the value functions using the Bellman equations. For all states s \u2208 S, the value function under \u03c0^\u00ba is given by\nV^{\u03c0^\u03b8}(s) = \\sum_{a^\u03b8 \u2208 A^\u03b8} \u03c0^\u03b8(a^\u03b8 | s) \\sum_{s' \u2208 S} T(s' | s, a^\u03b8) [R(s, a^\u03b8, s') + \u03b3 V^{\u03c0^\u03b8}(s')].\nThe value at each node in the system describes the expected return starting from that node and then acting according to the global attack strategy \u03c0^9. For the players at the MTG, the utility of each outcome describes the expected reward of taking that action and moving to the next node in the macro strategy process. Thus, we define the utility functions in the MTG as follows.\nDefinition 12 (MTG Utilities). Given the global attack strategy \u03c0^9 \u2208 \u03a0^9, the attacker's utility functions of reaching outcome z \u2208 Z^\u00ba in the MTG at node v \u2208V are defined as the\nu_a(z = u) = \\sum_{S'EV} T(s' \\ s = v, a = (v, u)) [R(s,a, s') + \u03b3 V^{\u03c0^\u03b8}(s')],\nwhere V^{\u03c0^\u03b8} is the policy evaluation value function in (10). The defender's utility is the opposite of the attacker, i.e., u_d(z) = -u_a(z) for all z \u2208 Z^\u00ba."}, {"title": "Meta-Security Game", "content": "Definition 13 (Meta-Security Game). Given the network system graph G = (V,E), the meta-security game is composed of two parts: \u039e = ({\u0393_v}_{v\u2208\u03bd}, \u039b^9), where {\u0393_v}_{\u03bd\u2208v} is the set of MTGs as defined in Definition 1 and A^9 is the macro strategy process as defined in Definition 10.\nThe MSP and the MTGs are inherently coupled, as the local penetration plans in the MTGS naturally affect the global attack strategy, while the policy evaluation at the MSP helps provide the utilities in the MTGs. Hence, a holistic solution concept is necessary for the proposed meta-security game.\nDefinition 14 (Meta Penetration Playbook). Consider the meta-security game \u039e = ({\u0393_v}_{v\u2208\u03bd}, \u039b^9) defined in Definition 13, the meta penetration playbook \u03be = ({{\u03a6_v}_{v\u2208\u03bd}, \u03c0^\u03b8) is composed of two elements:\n\u2022 Local Penetration profile: \u03a6^v = (\u03c3_v^d*, \u03c3_v^a*, \u03c3^c) constitutes the local penetration plans of all players for the MTG at node \u0393^v for each v \u2208 V,\n\u2022 Global Attack Strategy: \u03c0^\u03b8 is the global attack strategy in the macro strategy process,\nwhich satisfy two conditions:"}, {"title": "Computation", "content": "To determine the optimal meta-penetration playbook, we propose the following algorithm to find the exact solution. In this section, we use the purple teaming defense as the penetration scheme and solution concept to describe the computational process. For other security schemes, the general structure of the algorithm remains the same, but the method for obtaining the local penetration profile in each MTG differs (line 7 in Algorithm 1).\nTo analyze the risks of each node and evaluate the effectiveness of the system defense, we define the network risk score as a measurement metric. For each node v\u2208V in the system, we are interested in whether the attacker has access to this node, and what is the expected damage he can create. Let Vmax \u2208 R+ be the maximum damage that the attacker could cause. Given the meta-security game and the corresponding meta penetration playbook \u00a7, the network risk score of node v \u2208 V is a normalized risk value Risk(v | \u00a7) \u2208 [0, 1] given by V^{\u03c0^\u03b8} (v)/Vmax if V^{\u03c0^\u03b8} (v) is non-negative; otherwise the score is set to 0."}, {"title": "Case Study", "content": "We use the network topology depicted in Figure 2 as a case study to demonstrate the effectiveness of MEGA-PT. The system consists of 5 nodes, including the web server, two user devices, the application server, and the critical asset. The MTG trees for each node are illustrated in Appendix A. These game trees align with attack scenarios from the MITRE ATT&CK model and can be adjusted to fit specific system structures. We evaluate the performance of our model through numerical experiments conducted in a self-built Python simulator. While the model's applicability extends to practical systems given the network topology and vulnerability trees, the details on how to gather this information are beyond the scope of this paper.\nThe penetration testing agent acts as an attacker entering the system from the external network, starting at the web server. The goal is to penetrate the system and potentially affect operations at the critical asset. We assume that there is an artificial node in the network representing a successful compromise of operations. Once the attacker reaches this node, the penetration process is considered terminated. In our experiments, we set the parameters as follows: the immediate rewards for entering each node and the penalty are specified in Table 1. The attacker's capability is denoted as ca = 0.8 by default, and we use \u03b3 = 0.9 for the policy evaluation process."}, {"title": "Optimal Penetration Plan and Purple Teaming", "content": "Figure 5 illustrates the value of each node in the network during the meta penetration playbook computation. We consider three types of attackers with different capabilities: a weak attacker with ca = 0.2, a median attacker with ca = 0.5, and a strong attacker with ca = 0.8. In the left column, we test the model under a fixed defense strategy. Specifically, at the web server, the probability of the defender granting access is 0.7. At the application server, the probability of the defender enforcing strict authorization policies is 0.3. Finally, at the critical asset, the probability of the defender executing the command is 0.6.\nThe value of each node represents the expected accumulated reward if the attacker starts penetration from that node. As observed in the figures, when the attacker is weak, even with a fixed defense strategy, no node in the system yields a positive reward. However, as the attacker's capabilities increase, certain states in the system can provide positive rewards. The stronger the attacker, the higher the maximum reward achievable. The potential system damage can be mitigated by adopting a purple teaming defense strategy. In Figure 5, the right column demonstrates that when implementing purple teaming and adjusting the defense plan, scenarios where the attacker previously gained positive rewards turn into negative rewards as the strategy converges. The attacker can only achieve gains"}, {"title": "Vulnerability Adaptability", "content": "We consider a scenario where the MTG changes within the network. In this experiment, we assume a change at the application server where no longer any information can lead to the critical asset. This change might occur if the system encrypts this information or restores the database, preventing the attacker from decrypting or accessing the data related to the critical asset. Consequently, the MTG at the application server changes, with the only outcome being staying at the same node after exploration.\nWe compute the meta penetration playbook under a fixed defense strategy before and after the local node change:\nBefore: \u00a7 = (\u03a6^{web}, \u03a6^{app}, \u03a6^{user1}, \u03a6^{user2}, \u03a6^{asset}, \u03c0^\u03b8);\nAfter: \u00a7' = (\u03a6^{web}, \u03a6^{app'}, \u03a6^{user1}, \u03a6^{user2}, \u03a6^{asset}, \u03c0^{\u03b8'}).\nIt can be noticed that in the meta penetration playbook, the vulnerability change only affects the application server and the global attack strategy, while the other plans remain the same. This indicates that we only need to recompute the MTG at that node while retaining the original structure of the other nodes and updating the global attack policy.\nThe comparison of global attack strategies before and after this local node change is illustrated in Table 2 and Table 3. Prior to the vulnerability change, the attacker from the web server had a high probability (Pr = 0.7) of transferring to the application server to further attack the system. However, after the change, since there is no longer a connection between the application server and the critical asset, our computed penetration plan adjusts its global attack strategy and no node would transfer to the application server anymore. The attacker would focus solely on the user devices to find any information that could compromise the operation. This result demonstrates that MEGA-PT can effectively adapt to local vulnerability changes."}, {"title": "Network-level Scalability", "content": "In this scenario, we demonstrate the scalability of MEGA-PT by increasing the number of user devices within the subnet. We assume that all users share the"}, {"title": "Conclusion", "content": "In this work, we propose MEGA-PT, a meta-game agile penetration testing model for automated and effective penetration testing. This model features MTGs for local node interactions and a macro strategy process for network-wide attack chains. It adheres to the TTPs in real cyber security frameworks,"}, {"title": "Appendix: Micro Tactic Game Trees", "content": ""}]}