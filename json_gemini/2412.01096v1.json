{"title": "How the use of feature selection methods influences the efficiency and accuracy of complex network simulations", "authors": ["Katarzyna Musial", "Jiaqi Wen", "Andreas Gwyther-Gouriotis"], "abstract": "Complex network systems' models are designed to perfectly emulate real-world networks through the use of simulation and link prediction. Complex network systems are defined by nodes and their connections where both have real-world features that result in a heterogeneous network in which each of the nodes has distinct characteristics. Thus, incorporating real-world features is an important component to achieve a simulation which best represents the real-world. Currently very few complex network systems implement real-world features, thus this study proposes feature selection methods which utilise unsupervised filtering techniques to rank real-world node features alongside a wrapper function to test combinations of the ranked features. The chosen method was coined FS-SNS which improved 8 out of 10 simulations of real-world networks. A consistent threshold of included features was also discovered which saw a threshold of 4 features to achieve the most accurate simulation for all networks. Through these findings the study also proposes future work and discusses how the findings can be used to further the Digital Twin and complex network system field.", "sections": [{"title": "I. INTRODUCTION", "content": "COMPLEX network simulation can range from a wide array of approaches and design. The ability to model any real-world network results in the application of complex network systems to be ultimately endless. Currently, the most common use of complex network systems are in social networks, biological networks, transportation networks and chemical networks [1] with each of these overarching topics having many sub topics, many of which overlap between topics, that all utilise the ability to simulate interactions of objects within the real-world.\nSocial network simulators (SNSs) are the focus for this experiment. SNSs are designed to simulate the internal workings of network dynamics while accurately simulating genuine networked systems. This is intended to address the issues of incomplete data brought on by data scarcity, privacy concerns, and a lack of ground truth. The simulations of these social networks can be created based on simulated data, hybrid data (constructed with both real and simulated data) or purely real-world data [2], [3]. The goal of this research is to investigate the accuracy and efficiency of the network simulations created using purely real data. Currently there are no SNSs that implement real-world node attributes in a dynamic network, however, there are examples of static networks that utilise real-world attributes or features [4]\u2013[6]. Using a static framework similar to previous SNSs the real-world features can be implemented and tested to see how different combinations of real-world features effect the efficiency and accuracy of the network simulation.\nAlthough there are static networks models that have implemented real-world attributes into their simulation, currently there is no example of a SNS that has utilised feature selection methods commonly used in machine learning to filter and rank features that are best suited for the simulation. Feature selection methods involve pre-processing data using filter, wrapper, embedded methods or hybrid methods in an attempt to select more relevant features within a data set [7]. In terms of implementing a feature selection method within the SNS the methods used to select features in machine learning will be transferred into a complex network system context and implemented in order to achieve the best possible feature combination within the SNS [8].\nIn this report research into feature selection methods and the data sets used for the experimentation will be presented in the background research (Section II). The subsequent significance, aims, research questions and objectives will then be stated, followed by a detailed analysis of the methodology as well as the experimental setup (Section III), followed by the results (Section IV), future work (Section V) and finally the concluding statements (Section VI)."}, {"title": "II. BACKGROUND", "content": "Three components need to be considered prior to development of the feature selection method for the SNS: (i) SNSs as a whole and (ii) the machine learning techniques used in order to evolve the SNS to include relevant real-world features. From this research, it is understood how feature selection methods can be used within the SNS context."}, {"title": "A. Social Network Simulation", "content": "Social network systems have been a relevant topic for over 40 years and were originally discussed in psychology and ecology to describe the interactions between humans and the interactions between animals in their own habitats. The most famous version of an early social network is the karate club network [9] which is now commonly used as a baseline test for new link prediction or community detection algorithms [10]. The karate club network simulates 34 members with connections between themselves constituting to a friendship involving those who frequently interacted with one another outside of club activities."}, {"title": "B. Feature Selection", "content": "The goal of the feature selection method is to select the most relevant node features to use in the SNS. The following background research will highlight feature selection techniques used in classification problems to provide context when applying the feature selection methods to the SNS.\n1) Filter Methods: Filter methods select features based on a performance measure calculated by various metrics. The filtering process depends on the search strategy which could include backward elimination, forward selection, heuristic feature subset selection and bidirectional selection. [7]. Each of these searching strategies would be applicable to the features within the SNS, however, a filter method is only as useful as the evaluation techniques being used to filter out the features. Thus, the following feature evaluation methods: (i) variance, (ii) multi-collinearity, (iii) Laplacian and (iv) mutual information will be examined.\nVariance ranks each of the features based on how unique its information is compared to the other features in the set. A feature with a low variance means that its values are similar to another feature and thus not useful in differentiating the nodes within the system [17].\nMulticollinearity ranks features based on the correlation between any two features. In this way it is similar to basing ranks off variance, however, this method will ensure that if two features are closely correlated one of the features will be ranked lower ensuring that the more distinct feature is included within the feature groups of the simulation. An example for cars when looking at horsepower, cars tend to have a larger engine-size when the horse power is larger thus, only one of these features should be chosen [18].\nThe Laplacian score is an unsupervised filter method which constructs a nearest neighbour graph to model the local structure of the feature space. The selected features are the ones that best respect the nearest neighbour structure. The Laplacian score is calculated using a diagonal matrix of the weighted connections between nodes which represent the features. The nodes obtain a connection whenever a feature is \"close\" enough to another feature. This is determined using the K nearest neighbour of the nodes and if two features sit within a cluster they are considered connected. Once the diagonal matrix is calculated the features with the lowest score are considered the most relevant as they best fit the local structure of the nearest neighbour structure [19].\nMutual information (MI) is typically a supervised method that will be modified for an unsupervised context. It is calculated using relative entropy which measures the distance between two distributions [20]. Using this the MI is the sum of the log of the join probability of two features over the marginal probabilities of the two features [18]. Having a MI score of 0 means there is no MI between the two features. In the context of an unsupervised filter method this is desirable. If two features have a high MI score it means having both features in the feature space is not necessary [21].\n2) Hybrid Subset Method: The FS-SNS model uses a hybrid method to combine the filtering methods discussed above. Most hybrid methods use a filter method of some kind to choose promising features first, then wrapper methods are applied on the retrieved features to test best combinations of features [22]. There are various issues with the hybrid feature selection algorithms. The main two are that the hybrid approaches can still require a significant number of wrapper evaluations despite the fact that many unnecessary features are removed through the initial filter method. Secondly, due to the removal of features by the filter method the hybrid methods will not take into account interactions between the selected features and the pruned features. This may lead to the loss of opportunities to achieve the highest level of precision. [23]. However, with these limitations the hybrid method deployed in the FS-SNS shown in section III-B enables features to be initially ranked [7] and then tested based on their rankings in order to prevent information loss from completely removing features and to show the accuracy of the SNS in correlation to the number of features included."}, {"title": "III. SNS MODEL AND EXPERIMENTAL SETUP", "content": "The feature selection algorithms were tested using an existing SNS structure [12], [24] referred to as the Base SNS in this article. The Base SNS itself is made up of 4 modules, the Feature, Network, Main and Evaluation modules. The Feature module represents the node features either through crisp representation or fuzzy representation. Crisp representation was used for this experiment which converts all the feature values to be between 0 and 1. The feature distances are then calculated for each node due to the interaction cost being replaced by the number of edges. The Network module uses the feature distance calculation with weights from the Social DNA to determine links between nodes [12]. The pDNA (preferential attachment) and hDNA (heterogeniety) weights are assigned to the nodes features between -1 and 1 where -1 means it is not used while 1 is the highest weight. They are then optimised using the HyperOpt function."}, {"title": "B. Feature Selection with Social Network Simulations", "content": "The following design incorporates the FS methods discussed in II-B with the Base SNS structure. The FS-SNS has two components, the first being the feature ranking followed by the feature combination wrapper. The two processes combined act as a hybrid method to test the possible feature combinations in line with their individual rankings, seen in figure III-B.\nTo calculate the feature ranking the filtering metric scores are calculated for each feature and summed along with a weighting based on the number of times it is ranked as 1st, 2nd or 3rd amongst the various filtering metrics.\nThe final scores (FS) are calculated by incorporating feature rank weightings multiplied by the sum of the filtering metrics scores with R and S denoting feature rank and filter metric scores respectively.\n$FS = \\frac{(\\sum R(1) \\times 3 + (\\sum R(2)) \\times 2 + (\\sum R(3)))}{3}$"}, {"title": "C. Experimental Setup", "content": "The experimental setup requires data processing and cleaning, followed by the setting of parameters used for each experiment.\n1) Data Sets Processing and Cleaning: The following data sets are used in the experiments and with the information about their basic characteristics is shown in Table I.\nThe repositories used to obtain the datasets include: the Animal Social Network Repository (ASNR) [29], Stanford Network Analysis Project (SNAP) [30] and UCINET IV Datasets [31].\nThe goal of the preprocessing and cleaning was to ensure each of the networks follow the below criteria:\n1) Network is not bipartite\n2) Nodes share the same feature set\n3) Node features have specific meanings. (e.g. genotypes are a typical counter-example as they need to be reprocessed to be fed into the SNS)"}, {"title": "IV. RESULTS", "content": "Below results show the effects of utilising the feature selection method (FS-SNS) alongside the Base SNS discussed in Section III-A. For selected simulated networks the feature rankings (IV, V) will be shown to explain the increase in accuracy of the simulated networks. Results from the Base SNS and FS-SNS are compared to highlight which filtering methods generalised over the largest number of networks to achieve the closest degree distribution similarity. Finally, the efficiency of tested methods will also be considered for each of the networks.\nThe degree distribution error comparison (Figure 2) shows the comparison between Base SNS and FS-SNS when the degree distribution error score calculated by the JS divergence is considered."}, {"title": "V. FUTURE WORK", "content": "To extend the research conducted in this study, different values for metrics specified in the experimental setup can be tested in order to potentially improve the simulation results of the real world networks including more iterations of the HyperOpt function. The encounter rate in particular could be a focus point for further research as having an encounter rate of 1 can result in unrealistic degrees as seen in the large social media networks where it is unlikely that one user will come across every other user in the network. A change in the similarity metrics could also be tested such as measuring the clustering coefficient instead of the degree distribution which was chosen to align with previous studies using the social DNA simulator [13].\nFurther testing of different filtering metrics to improve the feature selection model could be a point of interest for future work as well as using a different wrapping method which could tie into improving the overall structure of the SNS simulator to allow it to handle string values instead of purely categorical binary data which prevented the use of features in specific networks [39]. Furthermore, designing the SNS to be able to handle bi-partite networks would allow for more networks to be tested and currently with the limitation of NetworkX and the current speed of optimisation of the Social DNA using HyperOpt very large networks (>10,000 nodes) as a whole are unable to be included in the experimentation.\nFrom the results of this study the feature selection method can be implemented in future studies to help researchers decide on features to include in their CNS and by utilising the FRM discussed in the Section IV a systematic way of testing which features to incorporate in a CNS can now be conducted for future work. Outside of node features, using"}, {"title": "VI. CONCLUSION", "content": "This study showcases the improvements achieved by implementing a feature selection method for the proposed SNS in the previous study [13]. The feature selection method FS-SNS improved the accuracy of the Base SNS for 8 out of 10 network simulations.\nThe results and discussion detailed the different causes in simulation accuracy and showed why implementing the feature selection method alongside the SNS improved the accuracy of the simulation. To summarise, the main influencing factor in the way the FS-SNS performed was how relevant a particular feature was to the relationships in the network. As discussed some of the networks contained little node attribute information to help determine the specific connections found in the network and thus performed worse than other simulations. Networks such as the Songbird and Vampire bat did not have enough relevant features to simulate the relationships in the graph unlike the Wolf and Barnswallow networks. Another major factor to the performance of the FS-SNS was the topology of the networks such as the Ant social network which acted similarly to a small world network where preferential attachment and heterogeneity were less important, while networks such as the social media network Deezer or dominancebased Baboon network followed a more traditional scale free architecture. These differences in network architecture were reflected in how the SNS performed. These cases show that although selecting the right real-world node attributes improves the accuracy of the SNS, to further model the networks seen in the real-world with greater accuracy, topological features, network structure and the type of connections should also be considered. With these findings and the proposed FS-SNS, researchers can continue designing simulations of real-world networks with the inclusion of real-world node features for the purpose of further advancing the research fields of Digital Twins and Complex network systems."}]}