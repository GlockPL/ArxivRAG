{"title": "Automating the Search for Artificial Life with Foundation Models", "authors": ["Akarsh Kumar", "Chris Lu", "Louis Kirsch", "Yujin Tang", "Kenneth O. Stanley", "Phillip Isola", "David Ha"], "abstract": "With the recent Nobel Prize awarded for radical advances in protein discovery, foundation models (FMs) for exploring large combinatorial spaces promise to revolutionize many scientific fields. Artificial Life (ALife) has not yet integrated FMs, thus presenting a major opportunity for the field to alleviate the historical burden of relying chiefly on manual design and trial-and-error to discover the configurations of lifelike simulations. This paper presents, for the first time, a successful realization of this opportunity using vision-language FMs. The proposed approach, called Automated Search for Artificial Life (ASAL), (1) finds simulations that produce target phenomena, (2) discovers simulations that generate temporally open-ended novelty, and (3) illuminates an entire space of interestingly diverse simulations. Because of the generality of FMs, ASAL works effectively across a diverse range of ALife substrates including Boids, Particle Life, Game of Life, Lenia, and Neural Cellular Automata. A major result highlighting the potential of this technique is the discovery of previously unseen Lenia and Boids lifeforms, as well as cellular automata that are open-ended like Conway's Game of Life. Additionally, the use of FMs allows for the quantification of previously qualitative phenomena in a human-aligned way. This new paradigm promises to accelerate ALife research beyond what is possible through human ingenuity alone.", "sections": [{"title": "1 Introduction", "content": "A core philosophy driving Artificial Life (ALife) is to study not only \u201clife as we know it\u201d but also \u201clife as it could be\u201d [Langton, 1992]. Because ALife primarily studies life through computational simulations, this approach necessarily means searching through and mapping out an entire space of possible simulations rather than investigating any single simulation. By doing so, researchers can study why and how different simulation configurations give rise to distinct emergent behaviors. In this paper, we aim, for the first time, to automate this search through simulations with help from foundation models from AI.\nWhile the specific mechanisms for evolution and learning within ALife simulations are rich and diverse, a major obstacle so far to fundamental advances in the field has been the lack of a systematic method for searching through all the possible simulation configurations themselves. Without such a method, researchers must resort to intuitions and hunches when devising perhaps the most important aspect of an artificial world-the rules of the world itself.\nPart of the challenge is that large-scale interactions of simple parts can lead to complex emergent phenomena that are difficult, if not impossible, to predict in advance [Anderson, 1972, Wolfram and Gad-el Hak, 2003]. This disconnect between the simulation configuration and its resulting behavior makes it difficult to intuitively design simulations that exhibit self-replication, ecosystem-like dynamics, or open-ended properties. As a result, the field often delivers manually designed simulations tailored to simple and anticipated outcomes, limiting the potential for unexpected discoveries.\nGiven this present improvisational state of the field, a method to automate the search for simulations themselves would transform the practice of ALife by significantly scaling the scope of exploration. Instead of probing for rules and interactions that feel right, researchers could refocus their attention to the higher-level question of how to best describe the phenomena we ultimately want to emerge as an outcome, and let the automated process of searching for those outcomes then take its course.\nDescribing target phenomena for simulations is challenging in its own right, which in part explains why automated search for the right simulation to obtain target phenomena has languished [Stepney and Hickinbotham, 2024, Stanley and Lehman, 2015]. Of course, there have been many previous attempts to quantify ALife through intricate measures of life [Sharma et al., 2023], complexity [Mota et al., 2013, Lloyd, 2001], or \"interestingness\" [Schmidhuber, 1997, Pathak et al., 2017, Secretan et al., 2011]. However, these metrics almost always fail to fully capture the nuanced human notions they try to measure [Lloyd, 2001, Karwowski et al., 2023].\nWhile we don't yet understand why or how our universe came to be so complex, rich, and interesting, we can still use it as a guide to create compelling ALife worlds. Foundation models (FMs) trained on large amounts of natural data possess representations often similar to humans [Zhang et al., 2018, Fu et al., 2023, Zhang et al., 2023] and may even be converging toward a \u2018platonic' representation of the statistics of our real world [Huh et al., 2024]. This novel property makes them appealing candidates for quantifying human notions of complexity in ALife.\nIn this spirit, we propose a new paradigm for ALife research called Automated Search for Artificial Life (ASAL). The researcher starts by defining a set of simulations of interest, referred to as the substrate. Then, as shown in Figure 1, ASAL enables three distinct methods for FMs to identify interesting ALife simulations:\n1. Supervised Target Searching for a simulation that produces a specified target event or sequence of events, facilitating the discovery of arbitrary worlds or those similar to our own.\n2. Open-Endedness Searching for a simulation that produces temporally open-ended novelty in the FM representation space, thereby discovering worlds that are persistently interesting to a human observer.\n3. Illumination Searching for a set of interestingly diverse simulations, enabling the illumination of alien worlds.\nThe promise of this new automated approach is demonstrated on a diverse range of ALife substrates including Boids, Particle Life, Game of Life, Lenia, and Neural Cellular Automatas. In each substrate, ASAL discovered previously unseen lifeforms and expanded the frontier of emergent structures in ALife. For example, ASAL revealed exotic flocking patterns in Boids, new self-organizing cells in Lenia, and identified cellular automata which are open-ended like the famous Conway's Game of Life. In addition to facilitating discovery, ASAL's FM framework allows for quantitative analysis of previously qualitative phenomena in"}, {"title": "2 Related Works", "content": "ALife Motivations ALife is a diverse field that studies life through artificial simulations, with the key difference from biology being its pursuit of the general properties of all life rather than just the specific instantiation of life on Earth [Langton, 1992]. ALife systems range widely from cellular automata to neural network agents, but the field generally focuses on emergent phenomena like self-organization, open-ended evolution, agentic behavior, and collective intelligence [Aguilar et al., 2014]. These ALife ideas have also trickled into AI [Nisioti et al., 2024, Risi, 2021, Jiang et al., 2023, Ha and Tang, 2022, Clune, 2019, Hughes et al., 2024, Schmidhuber, 2013, Silver et al., 2017, Wang et al., 2020, Dennis et al., 2020, Parker-Holder et al., 2022].\nALife Substrates Many substrates are used in ALife to study phenomena at different levels of abstraction and imposed structure, ranging from modeling chemistry to societies. Conway's Game of Life and other \"Life-Like\" cellular automatas (CA) were critical to the field in the early days and are used to study how complexity may emerge from simple local rules [Games, 1970, Wolfram and Gad-el Hak, 2003]. Lenia generalizes these to continuous dynamics [Chan, 2018, 2020, 2023], and inspired future variants like FlowLenia [Plantec et al., 2023] and ParticleLenia [Mordvintsev et al., 2022]. Neural Cellular Automata (NCA) further generalize Lenia by modeling any continuous CA by parameterizing the update rule with a neural network [Mordvintsev et al., 2020]. Instead of operating in a 2-D grid, ParticleLife (or Clusters) uses particles in euclidean space interacting with each other to create dynamic self-organizing patterns [Ventrella, 2017, Mohr, 2023]. Similarly, Boids uses bird-like objects to model the flocking behavior of real birds and fish [Reynolds, 1987]. BioMaker CA and JaxLife are structured substrates designed to study the agentic behavior of plants and societies [Lu et al., 2024a, Randazzo and Mordvintsev, 2023], joining other notable substrates like Evolved Virtual Creatures [Sims, Karl, 1994], Polyworld [Yaeger et al., 1994], and Neural MMO [Suarez et al., 2019] that focus on studying survival in natural environments. Some substrates are constructed to study more exotic phenomena, such as self-replicating programs [Ofria and Wilke, 2004, Alakuijala et al., 2024]. All of these systems are designed to explore specific aspects of life, with a common theme of emergence from simple components.\nOur method aims to be substrate agnostic, with the constraint that the substrate can be displayed as an image. The majority of ALife substrates are made renderable for human interpretability, including the non-visual substrates like the program based ones [Alakuijala et al., 2024].\nAutomatic Search Algorithms in ALife Automatic search has been a useful tool in ALife whenever the target outcome is well defined. In the early days, genetic algorithms were used to evolve CAs to produce a target computation [Packard, 1988, Mitchell et al., 1993]. More recently, Chan [2020] uses objectives specific to Lenia (e.g. speed) to search for new organisms. BioMaker uses a objective which measured how many agents survived after many timesteps [Randazzo and Mordvintsev, 2023]. NCA's objective is to make the final state look like a given target image [Mordvintsev et al., 2020].\nNovelty search [Lehman and Stanley, 2011a,b] is a search algorithm inspired by ALife but requires a good representation space to be effective. MAP-Elites [Mouret and Clune, 2015] is a search algorithm which searches along two predefined axis of interest.\nIntrinsically motivated discovery uses search in the representation space of an autoencoder to discover new self-organizing patterns [Reinke et al., 2019, Falk et al., 2024]. LeniaBreeder [Faldor and Cully, 2024] uses MAP-Elites [Mouret and Clune, 2015] to search for organisms which have specific properties for e.g. mass and speed. Although LeniaBreeder does provide an unsupervised algorithm as well, it has only been shown to work in Lenia and cannot guide searches via prompt or an open-ended formulation. Additionally,"}, {"title": "3 Methods: Automated Search for Artificial Life", "content": "Figure 2 depicts our proposed paradigm, Automated Search for Artificial Life (ASAL), which includes three algorithms built on vision-language FMs. Each method discovers ALife simulations through a different kind of automated search. Before diving into the details, relevant concepts and notations are introduced next.\nAn ALife substrate, S encompasses any set of ALife simulations of interest (e.g. the set of all Lenia simulations). These could vary in the initial states, transition rules, or both. S is parameterized by \u03b8, which defines a single simulation with three components:\n\u2022 the initial state distribution, $Init_\\theta$,\n\u2022 the forward dynamics step function, $Step_\\theta$,"}, {"title": "3.1 Supervised Target", "content": "An important goal in ALife is to find simulations where a desired event or sequence of events take place [Bedau et al., 2000]. Such discovery would allow researchers to identify worlds similar to our own or test whether certain counterfactual evolutionary trajectories are even possible in the given substrate, thus giving insights about the feasibility of certain lifeforms.\nFor this purpose, ASAL searches for a simulation that produces images that match a target natural language prompt in the FM's representation. The researcher has control of which prompt, if any, to apply at each timestep."}, {"title": "3.2 Open-Endedness", "content": "A grand challenge of ALife is finding open-ended simulations [Stanley et al., 2017, Bedau et al., 2000]. Finding such worlds is necessary for replicating the explosion of never-ending interesting novelty that the real world is known for.\nAlthough open-endedness is subjective and hard to define, novelty in the right representation space captures a general notion of open-endedness [Lehman and Stanley, 2011a, Stanley et al., 2017, Hughes et al., 2024]. This formulation outsources the subjectivity of measuring open-endedness to the construction of the representation function, which embodies the observer. In this paper, the vision-language FM representations act as a proxy for a human's representation [Zhang et al., 2018].\nWith this novel capability, ASAL searches for a simulation which produces images that are historically novel in the FM's representation. Some preliminary experiments showed that historical nearest neighbor novelty produces better results than variance based novelty."}, {"title": "3.3 Illumination", "content": "Another key goal in ALife is to automatically illuminate the entire space of diverse phonemena that can emerge within a substrate, motivated by the quest to understand \"life as it could be\" [Bedau et al., 2000]. Such illumination is the first step to mapping out and taxonomizing an entire substrate.\nTowards this aim, ASAL searches for a set of simulations that produce images that are far from their nearest neighbor in the FM's representation. We find that nearest neighbor diversity produces better illumination than variance based diversity."}, {"title": "4 Experiments", "content": "This section experimentally validates the effectiveness of ASAL across various substrates, then presents novel quantitative analyses of some of the discovered simulations, facilitated by the FM. Before presenting the experiments, here is a summary of the FMs and substrates used. The appendix includes additional details about the substrates and experimental setups, as well as supplementary experiments."}, {"title": "4.1 Searching for Target Simulations", "content": "This section explores both single targets and sequences of targets over time."}, {"title": "4.1.1 Single Target", "content": "The effectiveness of searching for target simulations specified by a single prompt is explored in Lenia, Boids, and Particle Life. Equation 2 is optimized with the prompt applied once after T simulation timesteps. CLIP is the FM and Sep-CMA-ES [Ros and Hansen, 2008] is the optimization algorithm.\nFigure 3 shows the optimization works well from a qualitative perspective at finding simulations matching the specified prompt. The results of more prompts are shown in appendix Figure 12, Figure 13 and Figure 14. Some of the failure modes suggest that when optimization fails, it is often caused by the lack of expressivity of the substrate rather than the optimization process itself."}, {"title": "4.1.2 Temporal Targets", "content": "We investigate the effectiveness of searching for simulations producing a target sequence of events using the NCA substrate. We optimize Equation 2 with a list of prompts, each applied at evenly spaced time intervals of the simulation rollout. We use CLIP for the FM. Following the original NCA paper, we use backpropagation through time and gradient descent with the Adam optimizer for the optimization algorithm [Mordvintsev et al., 2020].\nFigure 4 shows it is possible to find simulations that produce trajectories following a sequence of prompts. By specifying the desired evolutionary trajectories and employing a constraining substrate, ASAL can identify update rules that embody the essence of the desired evolutionary process. For instance, when the sequence of prompts is \"one cell\" then \"two cells\", the corresponding update rule inherently enables self-replication."}, {"title": "4.2 Searching for Open-Ended Simulations", "content": "To investigate the effectiveness of searching for open-ended simulations, we use the Life-Like CAs substrate and optimize the open-ended score from Equation 3. CLIP serves as the FM. Because the search space is relatively small with only 262,144 simulations, brute force search is employed."}, {"title": "4.3 Illuminating Entire Substrates", "content": "We use the Lenia and Boids substrates to study the effectiveness of the illumination algorithm from Equation 4. CLIP is the FM. A custom genetic algorithm performs the search: at each generation, it randomly selects parents, creates mutated children, then keeps the most diverse subset of solutions.\nThe resultant set of simulations is shown in the \"Simulation Atlas\" in Figure 6. This visualization highlights the diversity of the discovered behaviors organized by visual similarity. In Lenia, ASAL discovers many previously unseen lifeforms resembling cells and bacteria organized by color and shape. In Boids, ASAL rediscovers flocking behavior, as well as additional behaviors such as snaking, grouping, circling, and other variations. Larger simulation atlases are shown in appendix Figure 16 and Figure 17."}, {"title": "4.4 Quantifying ALife", "content": "Not only can FMs facilitate the search for interesting phenomena, but they also enable the quantification of phenomena previously only amenable to qualitative analysis, as shown in this section.\nFigure 7 shows different ways of quantifying the emergent behaviors of these complex systems.\nIn Figure 7a, we linearly interpolate the parameters between two Boids simulations. The intermediate simulations lack the characteristics of either simulation and appear disordered, demonstrating the nonlinear, chaotic nature of the boids parameter space. Importantly, this qualitative observation is now possible to support quantitatively by measuring the CLIP similarity of the final states of the intermediate simulation to both the original simulations.\nFigure 7b evaluates the effect of the number of particles in Particle Life on its ability to represent certain lifeforms. In this case we search for \"a caterpillar\" and find that they can only be found when there are at least 1,000 particles in the simulation, matching the \"more is different\" observation [Anderson, 1972].\nFigure 7c quantifies the importance of each of the simulation parameters in Particle Life by individually sweeping each parameter and measuring the resulting standard deviation of the CLIP prompt alignment score. After identifying the most important parameter, this corresponds with the strength of interaction between the green and yellow particles, which is critical for the formation of the caterpillar.\nFigure 7d shows that the speed of change of the CLIP vector over simulation time for a Lenia simulation. This metric plateaus exactly when the simulation looks to have become qualitatively static, providing a useful simulation halting condition."}, {"title": "4.5 Agnostic to Foundation Model", "content": "To study the importance of using the proper representation space, we ablate the FM used during illumination of Lenia and Boids. We use CLIP, DINOv2, and a low level pixel representation.\nAs shown in Figure 8, for producing human-aligned diversity, CLIP seems slightly better than DINOv2, but both are qualitatively better than the pixel representation. This result highlights the importance of deep FM representations over low-level metrics when measuring human notions of diversity."}, {"title": "5 Conclusion", "content": "Summary This project launches a new paradigm in ALife by taking the first step towards using FMs to automate the search for interesting simulations. Our approach is effective in finding target, open-ended,"}, {"title": "A Substrate Details", "content": "\u2022 Boids simulates N \"bird-like objects\" (boids) moving in a 2-D Euclidean space [Reynolds, 1987]. All boids weight-share a single neural network that steers each boid left or right based on the K nearby boids in its local frame of reference. The substrate is the weight-space of the neural network. For all experiments, we use N = 128 boids and K = 16 neighbors. Each boid's neural network sees its boid neighbors' position and velocity in its own local frame of reference. The position and velocity are processed separately for each neighbor, and eventually mean pooled to get a global vector, making the entire boid permutation invariant to its local neighbors index ordering. This vector is then further processed to get a continuous control signal of how much to turn left or right. The speed of all boids is fixed to ensure stability. We simulate boids for a total of 1000 timesteps\n\u2022 Particle Life (or Clusters) simulates N particles, each belonging to one of K types, interacting in a 2-D Euclidean space [Ventrella, 2017, Mohr, 2023]. The substrate is the space of K \u00d7 K interaction matrices and the  \u03b2 parameters to determine how close particles can get to each other. The initial state is sampled randomly and the particles self-organize to form dynamic patterns. For all experiments we use N = 5000 particles and K = 6 types of particles. Following [Mohr, 2023], the interaction rule between particles is based on the K \u00d7 K interaction matrix entry, where a positive value ensures attraction and a negative value ensures repulsion. For each type of particle, there is an additional B parameter which controls the distance at which the particle starts repelling all other particles, as to avoid excessive clumping. The asymmetry in the interaction matrix allows for complex interactions to take form. Particle Life is simulated for a total of 1000 timesteps.\n\u2022 Life-like Cellular Automata (CA) generalizes Conway's Game of Life to all binary-state CAs that operate in 2-D lattice where the state transition depends solely on the number of living Moore neighbors and the current state of the cell [W\u00f3jtowicz, 2001]. The substrate has 218 = 262,144 possible simulations. The initial state is a random 64 \u00d7 64 grid, where the sparsity level is uniformly sampled from U(0.05, 0.4). Life-life CAs are simulated for 2048 timesteps.\n\u2022 Lenia generalizes Conway's Game of Life to continuous space and time, allowing for higher dimensions, multiple kernels, and multiple channels [Chan, 2018]. We utilize the LeniaBreeder codebase, which defines the substrate with 45 dimensions for dynamics and 32 \u00d7 32 \u00d7 3 = 3,072 dimensions for the initial state [Faldor and Cully, 2024]. The search space is centered at a solution found by Chan [2020]. To maintain stability, the dynamics parameters are bounded by an lower and upper threshold using a sigmoid function. Lenia is simulated for 256 timesteps.\n\u2022 Neural Cellular Automata (NCA) parameterizes any continuous cellular automata by representing the local transition function through a neural network [Mordvintsev et al., 2020]. The substrate is the weight-space of the neural network. The architecture is similar to the original NCA architecture but replaces the fixed sobel filters with learned convolutional filters. The initial state is randomly sampled by rendering a randomly sized circle at a random location. We simulate the NCA for 256 timesteps."}, {"title": "B Experiment Details", "content": "The code and instructions to replicate all experiments can be found at https://github.com/SakanaAI/asal."}, {"title": "B.1 Target", "content": "Single Target For single prompt optimization, the Sep-CMA-ES algorithm is employed. Each simulation is evaluated using a single initial state seed. The optimization runs with a population size of 16 for 10,000 iterations, using a mutation rate of 0.1.\nThe results from additional prompts are shown in Figure 12, Figure 13, and Figure 14. The training curves for all experiments are shown in Figure 9."}]}