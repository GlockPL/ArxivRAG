{"title": "Tango*: Constrained synthesis planning using chemically informed value functions", "authors": ["Daniel Armstrong", "Zlatko Jon\u010dev", "Jeff Guo", "Philippe Schwaller"], "abstract": "Computer-aided synthesis planning (CASP) has made significant strides in generating retrosynthetic pathways for simple molecules in a non-constrained fashion. Recent work introduces a specialised bidirectional search algorithm with forward and retro expansion to address the starting material-constrained synthesis problem, allowing CASP systems to provide synthesis pathways from specified starting materials, such as waste products or renewable feed-stocks. In this work, we introduce a simple guided search which allows solving the starting material-constrained synthesis planning problem using an existing, uni-directional search algorithm, Retro*. We show that by optimising a single hyperparameter, Tango* outperforms existing methods in terms of efficiency and solve rate. We find the Tango* cost function catalyses strong improvements for the bidirectional DESP methods. Our method also achieves lower wall clock times while proposing synthetic routes of similar length, a common metric for route quality.", "sections": [{"title": "1 Introduction", "content": "Synthesis planning, where chemists design routes of chemical reactions to synthesise a complex molecule from simple or purchasable building blocks, is a key task in synthetic chemistry. The process used for this, retrosynthetic analysis, involves recursively performing reversed reactions, where a bond is broken to simplify a molecule into two or more component precursors 1,2. Originally proposed by Corey in 1969, Computer-Assisted Synthesis Planning (CASP) aims to automate this process\u00b3. Since the seminal patent mining work of Lowe, which provided a large dataset of machine-readable chemical reactions, the CASP field has expanded significantly, with a plethora of approaches developed 4-10. CASP systems typically have two primary components: a single-step retrosynthesis model, which decomposes a molecule into simpler precursors, and a search algorithm that explores the search graph constructed from outputs of the single-step model 6,8,11\u201314. The iterative application of single-step models and exploration of the generated search space typically continues until a molecule is \"solved,\" which is specified as having all leaf nodes belonging to a predefined set of purchasable building blocks. This approach of finding a path to any available precursor differs substantially from the approach expert chemists may take, where chemists can plan a synthesis with numerous constraints in mind, such as avoiding certain reactions and solvents, or starting from a specific precursor, known as a \"structure-goal\"2. By starting from a building block containing a key structural motif, the overall molecular complexity gain in a synthesis route can be lowered, a technique called \"semi-synthesis\" 15,16. There is also considerable interest in repurposing waste compounds into useful products, a technique called \"waste valorisation\" 17\u201319.\nWhile designing constrained and steerable chemical synthesis is a daily practice in synthetic chemistry, it has received little attention in the CASP literature, with existing algorithms simply seeking to find any \"valid\" pathway to purchasable molecules."}, {"title": "2 Related Work", "content": "Computer-Assisted Synthesis Planning (CASP) tools typically formulate synthesis planning as a tree search, with each step corresponding to disconnecting a molecule into precursors through a retro\" chemical reaction. Two primary approaches are used for selecting retro\" reactions. Firstly, template-based methods extract chemical graph transformations from a corpus and train a neural network to select a transformation given an input 6,11. Template-free methods frame single-step retrosynthesis as a conditional language generation problem, with molecules encoded as SMILES strings or as a graph-edit prediction task 10,12,23,24. Additionally, models that leverage graph features for direct generation have been developed9,25. Significant focus has been placed on how to use single-step models in multi-step synthetic planning. Initial approaches used hand-curated rules, while more recent methods use neural-network guided graph exploration, such as Monte Carlo Tree Search (MCTS) or AND-OR graph search methods 8,11,13,14,26,27. A key development was driven by Chen et al. 8, who proposed an A-star-like algorithm guided by a neural network that estimates the cost to synthesise a molecule from any arbitrary purchasable building block. More novel methods have utilised self-play and experience-based learning to improve navigation of the search space 28\u201331. While single-step model performance continues to improve, this has not always been translated into the real-world performance of multi-step CASP systems 12,32-34"}, {"title": "Constrained Single-Step Retrosynthetic Models", "content": "In recent years, there has been increased focus on introducing constraints into single-step retrosynthesis models with specific goals. Toniato et al. utilised reaction class tokens to steer the output of single-step retrosynthetic transformers towards specific reaction classes35. Following a similar approach, Thakkar et al. introduced \"disconnection prompts\" to guide single-step models to break specific bonds 36. In the multi-step planning domain, Westerlund et al. proposed a disconnection-aware transformer to encourage the breaking of bonds and allow the freezing of bonds during the search process, discarding any reaction that violates the frozen bond constraint 37. Interestingly, such bond constraints do not appear to impede the search process, indicating that simple, chemically informed rules can be powerful in data-driven retrosynthesis techniques."}, {"title": "Starting Material Constrained Synthesis Planning", "content": "Despite its potential use in waste valorisation and semi-synthesis, constrained synthesis planning has received limited attention in the literature. This approach imposes an additional constraint by focusing on the utilisation of specific starting materials. The LHASA program included such rules; however, they relied on expert-designed rules, limiting scalability 20. GRASP utilised reinforcement learning to develop a goal-driven synthesis planning tool that can target either arbitrary products or specific starting materials21. Recent state-of-the-art work proposed a bidirectional search algorithm, Double-Ended Synthesis Planning (DESP), which uses both forward- and retro-expansion models, guided by a value network that estimates the cost of synthesising molecule m2 specifically from molecule m122. Constrained synthesis planning has also emerged as a target in synthesisable molecular design. Guo et al. introduced a method for the de novo generation of synthesisable molecules using enforced building blocks in the synthesis pathway 38. To date, all starting material constrained synthesis planning tools have relied on specialised architectures, reinforcement learning, or expert-defined rules. In this work, we show instead that the problem can be approached with a simple cheminformatics calculation."}, {"title": "3 Methods", "content": "TANGO* Overview\nWe adopt the traditional structure of the synthesis planning problem using a top-down, or retrosynthetic, search algorithm. Due to its strong performance and built-in compatibility with node cost-based guidance functions, we use Retro*8 as the baseline search algorithm. The Retro* algorithm uses a best-first approach, selecting the lowest-cost node at any given iteration. In the original paper, a neural network that estimates the cost (number of chemical reactions) required to synthesise a given node from an arbitrary chemical building block is used to provide cost values for each node. To adapt the Retro* algorithm to the starting material constrained setting, we utilise a computed function, TANGO, to estimate the structural and chemical similarity of a node to a specific starting material. TANGO employs a weighted combination of Tanimoto Similarity and Fuzzy Matching Substructure (FMS) to compute molecular similarity. The Tango* cost is bounded by the interval ([0, 1]), while the Retro* cost is theoretically bounded by ([0, \u221e)) and practically varies around the range ([0, 10] ). To balance the influence of these mechanisms in the search dynamics, a scalar hyperparameter (k)"}, {"title": "4 Experiments", "content": "Tango* is built on the Retro* algorithm, using a reference implementation provided by DESP22. For our estimation of node cost, we combine the original Retro* Value function with an adaptation of the TANGO reward introduced by Guo and Schwaller 38.\nOur experiments are structured to answer the following questions: (1) Can a non-neural computed node cost function be used to adapt general-purpose synthesis planning tools to the constrained setting? (2) Can such a system outperform existing specialised models for starting material-constrained planning? (3) Can the cost function additionally provide improvements to existing bidirectional search methods? (4) As the TANGO function is empirically computed as opposed to estimated, does TANGO generalise from simple to harder datasets more effectively?"}, {"title": "4.1 Experimental setup", "content": "Datasets. To evaluate our system's performance, we utilise the common USPTO-190 dataset introduced by Chen et al. 8, which is a set of 190 challenging target molecules extracted from USPTO-Full. Additionally, we use the datasets introduced by Yu et al. 22, namely Pistachio Reachable and Pistachio Hard. The sets of target, starting material pairs are extracted for a set of commercial building blocks, we use canonical SMILES strings provided in the set of 23 million molecules from eMolecules used by Chen et al. 8 and Yu et al. 22.\nMachine learning models. To avoid variance due to subtle differences in data pre-processing techniques and to ensure a meaningful comparison, we use the Retro* value network and single-step retrosynthesis model provided by Yu et al. 22,33.\nHyperparameter Optimisation. We use a hyperparameter k to balance the starting material guidance of TANGO with the general guidance of the Retro* Value Network. To evaluate the ability of our method to generalise from simpler to more complex molecules, we choose the Pistachio Reachable dataset for hyperparameter tuning. We find a value of k = 25 optimises both Solve Rate and Average Number of expansions. We employ an additional parameter, c, to specify the ratio of FMS to Tanimoto Similarity, with c defining the FMS weight. Through empirical testing, we determine the optimal value to be c = 0.3. In the results section, we will refer to Tango with c = 0.0 as Tango(1, 0) and Tango with c = 0.3 as Tango(0.7, 0.3)."}, {"title": "4.2 Tango* solve rate and algorithm efficiency", "content": "While there remains a lack of a clearly agreed-upon 'gold standard' for reporting the quality of synthetic routes generated by CASP systems, a few metrics are commonly used. The Solve Rate indicates the system's ability to find viable solutions, while the Average Route Length (in terms of the number of reactions) indicates route quality. In addition to reporting metrics regarding the outputs of Tango*, we aim to evaluate how efficient Tango* is at navigating the retrosynthetic search space and assess the effect of computational overhead on the system. To this end, we report the Average Number of Expansions (N) and Wall Clock Time.\nThe primary results are displayed in Table 1. Tango(1, 0)* demonstrates improvements in the starting material-constrained setting and consistently outperforms the neural network-enhanced Retro* (referred to as Retro* + D) across all benchmarks and expansion limits while displaying greater algorithmic efficiency, as measured by the average number of expansions N. In addition, Tango(1, 0)* achieves higher or comparable solve rates to both DESP methods across all three datasets, doing so with a strictly lower average number of expansion calls, clearly demonstrating the power of the TANGO reward to navigate the retrosynthetic action space. We find that the value of k, optimised on Pistachio Reachable, shows strong generalisation performance to the more challenging datasets, with Tango* being the best-performing method across all iteration levels on USPTO-190.\nWe perform an ablation of the FMS : Tanimoto Similarity weighting in the TANGO cost function, which we refer to as Tango(0.7, 0.3). We find that although the incorporation of FMS into the cost function improves the solve rate and reduces expansion calls for Pistachio Reachable, such results do not carry over to the more challenging datasets. We hypothesise that Tanimoto Similarity offers greater granularity for guidance than FMS, enabling higher performance on more complex datasets.\nTo examine the general applicability of the TANGO cost in guiding various search algorithms, we explore its integration into the recently proposed bidirectional search methods, DESP-F2F and DESP-F2E22. This integration is achieved by replacing the pairwise synthetic distance network, D, with the TANGO cost function. The hyperparameters k and c are set to the same values as Tango (1,0). Our findings show that the addition of TANGO reward generally leads to a substantial increase in the solve rate for both DESP methods, while also reducing the average number of expansions and route length. Particularly noteworthy is the impressive performance of Tango-F2F at high expansion budgets, where it achieves a 99.3% solve rate on Pistachio Reachable and improves accuracy by approximately 25% compared to the next best method on the more challenging UPSTO-190 and Pistachio Hard datasets. We note that as the added bidirectional search of DESP outperforms Retro* + D, TANGO-DESP methods should be expected to outperform Tango*."}, {"title": "4.3 Wall clock time and route length ablations", "content": "As both DESP and Tango* introduce computational overhead that may decouple the number of expansion calls from the computational resources required, we report the wall clock time. Tango* consistently achieves a lower wall clock time than alternative starting material-constrained methods. Finally, we investigate the average number of reactions per solved route for each method. Tango* achieves shorter route lengths than all existing methods on USPTO-190, but only matches existing methods on other datasets. The strongest results in terms of route length come from the combination"}, {"title": "4.4 Why does Tango* work?", "content": "Despite access to a starting material constrained node cost function (one with access to information from ground truth routes at test time), Retro* +D does not show a substantial increase in performance compared to Retro*. In contrast, Tango*'s incorporation of a privileged node cost function provides significant performance improvements. We hypothesize that, as a computed cost function, the TANGO cost function should be relatively invariant to the molecular inputs and maintain strong performance at test time. Let V: M\u2192 R be a node cost function where M is the space of molecules. For node cost to effectively guide retrosynthetic search the function should generally satisfy:\n$V(m_i) > V(m_{i+1}) \\forall i \\in 1, ..., n - 1$ (1)\nwhere $m_1, ..., m_n$ represents molecules along a synthetic path from root to starting material.\nA potential caveat to the above constraint might be \"tactical combinations\", the synthetic complexity of a molecule temporarily increases during a retrosynthesis, to allow a major complexity-reducing reaction Gajewska et al. 39. We believe that retrosynthetic value functions should continue to show synthetic distance estimate decreases even for the complexity-increasing step. We also expect a stronger monotonic decrease for routes that are solved by a method, compared to routes not solved, as this indicates that the node cost function can accurately prioritise nodes in the search tree. To systematically evaluate these hypotheses about TANGO's effectiveness and empirically assess the relative strength of different guidance functions, we analyse their behavior on ground truth synthetic routes in the test set. Using the USPTO-190 dataset, we extract the linear synthetic path from root molecule $m_r$ to expert-defined starting material $m_s$. We define synthetic distance $d(m_1, m_2)$ as the minimum number of reactions required to synthesize $m_1$ from $m_2$. For each molecule $m_i$ in this path, we calculate:"}, {"title": "4.5 Case Study: Synthesis of Useful Compounds from Renewable/Waste Feedstock", "content": "A key aim of starting-material-constrained synthesis planning is to enable the discovery of synthetic pathways to useful compounds from renewable or waste feedstocks. Previous evaluations relied on a database of 17 million chemical building blocks from the eMolecules database. We aim to demonstrate the effectiveness of our method, Tango*, in finding synthesis pathways to useful small molecules starting exclusively from renewable or waste feedstocks. For renewable building blocks, we use a set of 146 small molecules previously curated by Wo\u0142os et al. 17. For useful compounds, we extract a set of 110 small molecules from a curation of the WHO List of Essential Medicines, previously developed by Gao et al. 40. We conduct the search using the Tango(1, 0) set of hyperparameters previously described, but set the expansion budget to 1,000 model calls. In Figure 5, we present a strong route, discovered by Tango* but not Retro*, to the chemotherapy drug Chlorambucil, starting"}, {"title": "5 Conclusion", "content": "In this work, we introduce Tango*, a simple adaptation of the Retro* algorithm to the starting material-constrained setting without any model retraining. We demonstrate that our TANGO guided search method strictly outperforms the similar neural network-guided Retro* + D. Despite relying on single-ended search, Tango* either outperforms or matches the performance of specialised DESP models and search algorithms, providing routes that satisfy the specified goal for a greater number of compounds. Application of the TANGO node cost function to the DESP methods also yields substantial improvements, particularly to the F2F method, which achieves the strongest solve rate performance of all investigated systems. It proposes routes with a comparable length and does so with a lower number of expansion calls and reduced wall clock time.\nWe show that existing neural node cost functions fail to provide a granular and monotonic decrease in node cost throughout a retrosynthesis pathway, particularly struggling on more challenging routes. In contrast, the computed Tango* cost function displays better monotonicity and granularity on both solved and unsolved routes. This work indicates that there may be substantial room for improvement in developing novel guidance functions for retrosynthesis tools.\nWe anticipate that future developments in similar methods will unlock synthesis planning tools with diverse and flexible structure constraints, allowing expert chemists to specify key intermediates or predefined substructure goals at any position in the synthetic route."}, {"title": "A Appendix", "content": "A.1: Compute Details\nWall clock time comparisons were implemented on a GPU-enabled workstation with the following specifications.\n\u2022 CPU: 12-core AMD Rysen 9 7900X\n\u2022 RAM Memory: 64 GB\n\u2022 GPU: NVIDIA A6000 48 GB\nA.2: Retro* Algorithm\nWe note this algorithm description is largely taken from the DESP paper Yu et al. 22.\nRetro* defines the following quantities:\n\u2022 $V_m$: For a molecule m, $V_m$ is an unconditional estimate of the minimum cost required to synthesise m. This estimate is provided by a neural network.\n\u2022 $rn(m|G)$: For a molecule m in the search graph G, the \"reaction number\" $rn(m|G)$ represents the estimated minimal cost to synthesise m.\n\u2022 $V_t(m|G)$: For a molecule m in the search graph G with the target molecule $p^*$, $V_t(m|G)$ denotes the estimated minimal cost to synthesise $p^*$ starting from m.\nRetro* operates through iterative phases of selection, expansion, and update. We follow the DESP implementation of Retro* as follows:\n**Selection:** Choose the molecule from the set of frontier nodes F that minimises the expected cost of synthesising the target $p^*$ given the current search graph G:\n$m_{select} = \\arg \\min_{m \\in F} V_t(m|G)$ (2)\n**Expansion:** As detailed in Algorithm 2, apply a one-step retrosynthesis model to the selected node mselect, and add the resulting reactions and precursor molecules to the search graph G. Initialise each new molecule node with:\n$rn(m|G) \\leftarrow V_m$\n**Update:**\nFirst, propagate the reaction number values upward to ancestor nodes. For a reaction node R, update its reaction number as the sum of its childrens' reaction numbers plus the cost of the reaction $c(R)$:\n$rn(R|G) \\leftarrow c(R) + \\sum_{m \\in ch(R)} rn(m/G)$ (3)\nFor a molecule node m, update its reaction number to be the minimum reaction number among its child reactions:\n$rn(m|G) \\leftarrow \\min_{R \\in ch(m)} rn(R|G)$ (4)\nNext, propagate the values of $V_t(m|G)$ downward to descendant nodes. Starting from the target molecule $p^*$:\n$V_t(p^*|G) \\leftarrow rn(p^*|G)$ (5)\nFor subsequent reaction nodes R, update the value as:"}, {"content": "A.2: Retro* Algorithm\nWe note this algorithm description is largely taken from the DESP paper Yu et al. 22.\nRetro* defines the following quantities:\n\n $V_t(R|G) \\leftarrow rn(R|G) - rn(pr(R)|G) + V_t(pr(R)|G)$ (6)\nFinally, for molecule nodes m that are not the target $p^*$:\n$V_t(m|G) \\leftarrow \\min_{R \\in pr(m)} V_t(R|G)$ (7)\nHere, ch(R) denotes the set of child molecules of reaction R, and ch(m) represents the set of child reactions of molecule m. Similarly, pr(R) denotes the parent molecule of reaction R, and pr(m) represents the set of parent reactions of molecule m.\nThis implementation ensures that at each iteration, the algorithm selects the most promising node to expand based on the estimated cost, propagates cost updates throughout the search graph, and efficiently guides the search towards the most cost-effective synthesis pathways."}, {"title": "A.3: Dataset Details", "content": "We provide details on the used datasets in Table 3. The Table is taken directly from the original paper 22."}, {"title": "A.4: TANGO Hyperparameter Screening", "content": "Here we provide a hyperparameter screen of TANGO weight and Tanimoto weight across the 3 Tango augmented methods, Tango*, TANGO DESP-F2E and TANGO DESP-F2F. Due to computational resource limitations, this screen was conducted exclusively on Pistachio Reachable with a small expansion budget of 50. In general, a higher Tango Weight (> 15) tends to lead to a higher solve rate, consistent accross all methods.\nA Tanimoto weight of 0.75 performs strongly for the TANGO DESP-F2F Tango* methods on the Pistachio Reachable test set, consistent with previous results."}, {"title": "A.5: Renewable synthesis of WHO Essential Medicines datasets", "content": "The sources of small molecule WHO Essential Medicines and renewable and waste compound feeds Wo\u0142os et al. 17, Gao et al. 40 are not machine-readable. We used a vision-enabled large language model (GPT-40) to parse compound names from the Supplementary Information sections of the aforementioned papers."}, {"title": "A.6: Value function failiure points", "content": "In Figure 7, we analyze discrepancies between model-predicted number of synthesis steps (Retro*\nand SynthDist) and ground truth values across four synthetic transformations. In these examples,\nmodels overestimate synthetic complexity compared to ground truth, likely due to their focus on\nstructural features rather than strategic synthetic planning. This is evident in: (a) ring-opening of\ntetrahydropyran introducing rotatable bonds of an alkyl chain, (b) TBDMS protection adding heavy\natoms, (c) oxidation of primary alcohols changing atom connectivity and adding heavy atoms, and (d)\nlactone formation creating additional ring complexity. These cases demonstrate how the models may\nmisinterpret strategic intermediates with increased synthetic complexity as being further away from\ncommercially available building blocks while in reality, these intermediates help disconnections over\nmultiple steps, suggesting potential areas for improvement in retrosynthetic prediction algorithms."}]}