{"title": "Meta-Transfer Learning Empowered Temporal Graph Networks for Cross-City Real Estate Appraisal", "authors": ["Weijia Zhang", "Jindong Han", "Hao Liu", "Wei Fan", "Hao Wang", "Hui Xiong"], "abstract": "Real estate appraisal is important for a variety of endeavors such as real estate deals, investment analysis, and real property taxation. However, the market value of real estate can be simultaneously influenced by various complicated intrinsic and extrinsic factors, which impose great challenges on precise valuation. Recently, deep learning has shown great promise for real estate appraisal by harnessing substantial online transaction data from web platforms. Nonetheless, deep learning is data-hungry, and thus it may not be trivially applicable to enormous small cities with limited data. To this end, we propose Meta-Transfer Learning Empowered Temporal Graph Networks (MetaTransfer) to transfer valuable knowledge from multiple data-rich metropolises to the data-scarce city to improve valuation performance. Specifically, by modeling the ever-growing real estate transactions with associated residential communities as a temporal event heterogeneous graph, we first design an Event-Triggered Temporal Graph Network to model the irregular spatiotemporal correlations between evolving real estate transactions. Besides, we formulate the city-wide real estate appraisal as a multi-task dynamic graph link label prediction problem, where the valuation of each community in a city is regarded as an individual task. A Hypernetwork-Based Multi-Task Learning module is proposed to simultaneously facilitate intra-city knowledge sharing between multiple communities and task-specific parameters generation to accommodate the community-wise real estate price distribution. Furthermore, we propose a Tri-Level Optimization Based Meta-Learning framework to adaptively re-weight training transaction instances from multiple source cities to mitigate negative transfer, and thus improve the cross-city knowledge transfer effectiveness. Finally, extensive experiments based on five real-world datasets demonstrate the significant superiority of MetaTransfer compared with eleven baseline algorithms.", "sections": [{"title": "1 INTRODUCTION", "content": "Real estate appraisal plays a crucial role in establishing fair and unbiased assessments of property market values, serving as a cornerstone in various real estate transactions [33, 34]. Whether applying for a mortgage, refinancing, or selling a property, accurate appraisals ensure equitable dealings and protect the interests of all parties involved. Beyond individual transactions, real estate appraisal serves the broader public good by underpinning key business and financial activities. Appraisal reports empower stakeholders, ranging from homebuyers and sellers to investors and lenders, to make well-informed decisions, manage risks, and ensure transparency in the market. Moreover, it assists tax authorities in accurately determining property taxes, thereby supporting the equitable distribution of public resources and contributing to the overall economic stability of society [29].\nExisting real estate appraisal methods can be primarily classified as traditional valuation methods and automated valuation methods. Traditional valuation methods, such as income approach, cost approach, sales comparison approach, and hedonic pricing approach, heavily rely on domain expertise, which hinders their prevalence among non-experts [29, 45]. In contrast, automated valuation methods attempt to automatically generate valuations in a data-driven manner by leveraging machine learning algorithms, e.g., support"}, {"title": "2 PRELIMINARIES", "content": "A city contains a set of residential communities \\(C = \\{c_1,\\dots, c_{|C|} \\}\\), each of which is denoted as \\(c_i = (l_i, z)\\), where \\(l_i\\) is the location of \\(c_i\\), and \\(z\\) is the attributes of \\(c_i\\) at time \\(t\\). A residential community consists of a set of real estates, where each real estate \\(e\\) has its own apartment attributes \\(x\\). Please refer to Section 4.1.1 for the details of communities and apartment attributes.\nDefinition 1: Transaction Event. We define the \\(n\\)-th chronological real estate transaction event in a city as \\(s_n = (e_n, c_i, t, y_n) \\in S\\), which indicates a real estate \\(e_n\\) located in residential community \\(c_i\\) is traded on unit price \\(y_n\\) per square meter at time \\(t\\), and \\(S\\) denotes the set of transaction events in the city.\nWe further define a real estate \\(e_n\\) of community \\(c_i\\) to be appraised its unit price \\(\\hat{y}\\) at time \\(t\\) as a potential transaction event \\(s = (e_n, c_i, t, -)\\), where \"-\" denotes the unit price of transaction needs to be appraised. Then our cross-city real estate appraisal problem can be formally formalized below:\nProblem 1: Cross-City Real Estate Appraisal. Given a set of source cities \\(U_{src} = \\{u_1, ..., u_{|U|} \\}\\) with abundant historical real estate transaction data \\(D_{src}\\), a target city with scarce historical transaction data \\(D_{tgt}\\), our problem is to estimate real estate unit price \\(y_n\\) of each potential transaction event \\(\\hat{s}_n = \\langle e_n, c_i, \\hat{t}, -\\rangle\\) in the target city:\n\\[f(s_n; D_{src}, D_{tgt}) \\rightarrow y_n\\qquad(1)\\]\nwhere \\(f(\\cdot)\\) is valuation model we aim to learn from \\(D_{src}\\) and \\(D_{tgt}\\)."}, {"title": "3 METHODOLOGY", "content": "Figure 2 shows the framework overview of MetaTransfer. By modeling each city's residential communities with the real estate transactions as a temporal event heterogeneous graph and regarding the real estate appraisal of each community as an individual task, the city-wide real estate appraisal is reformulated as a multi-task dynamic graph link label prediction problem. Then, we employ a Multi-Task Temporal Graph Network (MTTGN), which consists of an Event-Triggered Temporal Graph Network and a Hypernetwork-Based Multi-Task Learning module, as the base model for real estate appraisal. In each meta-training iteration, a set of source cities are first sampled. For each sampled city, the data is split as a support set and a query set for meta-transfer learning. Then, the inner-loop and outer-loop optimizations are sequentially performed to distill source cities' knowledge into MTTGN's parameters, where a set of instance weights are generated by a Weight-Generating Network (WGN) to re-weight each source instance's gradient during outer-loop optimization for mitigating negative knowledge distillation. Next, we introduce an extra hyper-loop optimization to update WGN's parameters by evaluating MTTGN on target city's available data. After multiple meta-training iterations are completed, MTTGN's parameters that contain extensive real estate market knowledge will be used to initialize the model for fast adaptation to the target city."}, {"title": "3.2 Multi-Task Dynamic Graph Link Label Prediction Formulation", "content": "Real estate market value is decided not only by its apartment attributes but also by the attributes of the community it belongs to [9]. For example, real estate located in a community with complete facilities around, e.g., malls, subway stations, and schools, tend to have a higher price than belonging to a community in a desolate place. Furthermore, the real estate prices are highly correlated with historical real estate transactions that occurred in the same community and neighboring communities [45]. However, as transaction events can continually occur at any location (community) and time, they are exhibiting irregular growth patterns in both spatial and temporal domains. This poses a significant challenge to model the irregular spatiotemporal correlations between real estate prices and evolving transaction events. Therefore, we construct a temporal event heterogeneous graph to effectively characterize the above irregular spatiotemporal correlations, which is defined below:\nDefinition 2: Temporal Event Heterogeneous Graph. a temporal event heterogeneous graph is defined as \\(G_t = (V_t, \\&_t)\\), where \\(t\\) denotes the time when a transaction event occurs, \\(V_t\\) is a set of heterogeneous nodes including real estates and residential communities at \\(t\\), and \\(\\&_t\\) is a set of undirected edges indicating connectivity between nodes at \\(t\\).\nDue to the node heterogeneity in the graph, we define two types of edges, e-c and c-c. Specifically, e-c edges can be represented as \\((e, c, t, y)\\) describing a transaction event that occurred to real estate \\(e\\) located in the community \\(c\\) at time \\(t\\), whereas c-c edges reflect the spatial proximity between two communities. Thus, the graph is continually evolving with new transaction events occurring, or new communities joining. We first define the edge connection between a real estate \\(e_n\\) and a community \\(c_i\\) when the transaction event \\(s_n = (e_n, c_i, t, Y_n)\\) occurs:\n\\[e_{n-C_i} = \\begin{cases}\\text{True, } & \\text{if } s_n \\text{ occurred} \\\\\\text{False, } & \\text{if otherwise}\\end{cases}\\qquad(2)\\]\nThe edge connection between community \\(c_i\\) and community \\(c_j\\) is defined as:\n\\[c_{i-C_j} = \\begin{cases}\\text{True, } & \\text{if } p_{ij} < \\epsilon \\\\\\text{False, } & \\text{if otherwise}\\end{cases}\\qquad(3)\\]\nwhere \\(p_{ij}\\) is the spherical distance between \\(c_i\\) and \\(c_j\\), \\(\\epsilon\\) is a distance threshold, and each community has a self-loop to connect with itself. In particular, each e-c edge is associated with a label \\(y\\), indicating the price of the corresponding transaction. Hence, given the real estate node, community node, and transaction time of their edge, real estate appraisal can be reformulated as a link label prediction problem on the temporal event heterogeneous graph.\nBesides the spatiotemporal correlations, as shown in Figure 3, we observe the apparently diverse distributions of real estate prices in different communities. To handle such diversity, we regard the real estate appraisal for each community as an individual task \\(T_i\\) and real estate transactions that occurred in a community as the instances of a task. Then, as illustrated in Figure 12 in Appendix, we further reformulate the real estate appraisal for each city as a city-wide multi-task dynamic graph link label prediction sub-problem:\nSub-Problem 1: City-Wide Multi-Task Dynamic Graph Link Label Prediction. Given a temporal event heterogeneous graph \\(G_t\\), a"}, {"title": "3.3 Irregular Spatiotemporal Correlations Modeling Between Transactions", "content": "Since transaction events may occur at any time in a community and the spatial connections between communities are also irregular, which induces both temporal and spatial irregularity in the temporal event heterogeneous graph. To this end, we design an Event-Triggered Temporal Graph Network (TGN) to capture irregular spatiotemporal correlations based on the temporal event heterogeneous graph. As illustrated in Figure 13 in Appendix, TGN enables to incorporate the evolving transaction events to sequentially update the embedding of communities involved in the events through a time-aware embedding evolution module and also integrate the up-to-date embedding of neighboring communities via a dimensional attentive graph convolution."}, {"title": "3.3.1 Time-Aware Embedding Evolution", "content": "To incorporate the time-varying real estate market knowledge from each community, we maintain a temporal state embedding \\(h\\) for each community \\(c_i\\) by dynamically updating it along with the occurrence of transaction event \\(s_n = (e_n, c_i, t, y_n)\\). While the time elapsing between two successive transaction events in a community usually varies, these time intervals hold valuable insights into the volatility and cyclicality of the real estate market [2]. Therefore, we develop a time-aware embedding evolution module to update the community's embedding by effectively capturing the knowledge from temporally irregular transaction events and carefully considering the time interval between events. Formally, given a transaction event \\(s_n = (e_n, c_i, t, Y_n)\\) and the last state embedding \\(h^{-\\Delta t}\\) of \\(c_i\\), where \\(t - \\Delta t\\) represents the time of last transaction involving \\(c_i\\) before \\(s_n\\) and \\(\\Delta t\\) is the time interval, we adopt a time gating mechanism to control the influence of a community's past knowledge:\n\\[g^{-\\Delta t} = \\exp(-\\text{ReLU}(W_g [\\phi(\\Delta t) || x_n || y_n || h_t])), \\qquad(4)\\]\n\\[\\hat{h}_t^{-\\Delta t} = g_t^{-\\Delta t} \\odot h_t^{-\\Delta t}, \\qquad(5)\\]\nwhere \\(||\\) indicates the concatenation operation, \\(W_g\\) and \\(\\text{ReLU}(\\cdot)\\) are learnable parameters and activation function, respectively, and \\(\\odot\\) denotes element-wise product. To learn to characterize real estate market's cyclicality within the time interval, we adopt the original time interval with learnable Fourier features [41] to derive the time embedding:\n\\[\\phi(\\Delta t) = [\\Delta t, \\cos(\\omega_1 \\Delta t), \\sin(\\omega_1 \\Delta t), ..., \\cos(\\omega_d, \\Delta t), \\sin(\\omega_d \\Delta t)], \\qquad(6)\\]\nwhere \\(\\omega_1, ..., \\omega_d\\) are learnable parameters. Then we update the temporal state embedding to \\(h_t^i\\) via a Gated Recurrent Unit (GRU) operation [4]:\n\\[h_t^i = \\text{GRU} ([x_n || y_n || z], h^{-\\Delta t}). \\qquad(7)\\]"}, {"title": "3.3.2 Dimensional Attentive Graph Convolution", "content": "Given a real estate \\(e_{\\hat{n}}\\) to be appraised and the latest state embedding \\(h_t^i\\) of community \\(c_i\\) it belongs to, we can directly combine the features \\(x\\) of real estate node and embedding \\(h_t^i\\) of community node with the time \\(\\hat{t}\\) of a potential transaction to predict the link label, namely the real estate unit price \\(y_{\\hat{n}}\\). However, the embedding of a community is updated only when a transaction event occurs there. If a community does not have transaction events for a long time,"}, {"title": "3.4 Intra-City Knowledge Sharing", "content": "As aforementioned, each community in a city is formulated as an individual task to meet unique real estate price distribution. Directly learning individual parameters for each community is infeasible because of limited or even missing transaction data of communities. Indeed, extensive universal knowledge hidden in real estate transactions can be shared by all tasks of a city. To enforce intra-city knowledge sharing and simultaneously capture task-specific knowledge, a straightforward method is to jointly learn a shared feature extractor for all tasks in a city, while separately learning the task-specific output layer. Nonetheless, the above approach is inappropriate for our problem setting due to the following three reasons. First, many tasks only have extremely sparse transaction data or even no data available, which cannot support task-specific parameter learning. Second, there are thousands of residential communities in a city, and training task-specific output layers for such massive tasks may suffer from low learning efficiency and poor scalability. Third, it is difficult to generalize task-specific parameters from a task set (i.e., a set of tasks) in the source city to another task set in the target city, which degrades model's capability in cross-city knowledge transfer.\nTo overcome the above limitations, we propose a Hypernetwork-Based Multi-Task Learning (HMTL) module. The key idea is to generate task-specific output layer's parameters based on a learnable hypernetwork [14] shared across all tasks of a city. Concretely,"}, {"title": "3.5 Cross-City Knowledge Transfer", "content": "We elaborate the proposed Tri-Level Optimization Based Meta-Learning framework for effective knowledge transfer from multiple source cities to a target city. The framework is comprised of two components: meta-learning with instance re-weighting and tri-level optimization."}, {"title": "3.5.1 Meta-Learning with Instance Re-Weighting", "content": "Transfer learning has been introduced as a powerful technique for cross-city knowledge transfer [6, 39, 40]. However, the above studies using typical transfer learning methods are limited to transferring knowledge from only a single source city, which causes unstable and useless transfer risks [42]. Inspired by the recent success of meta-learning in handling data-scarce traffic prediction problems by transferring knowledge from multiple source cities [25, 42], we recast the cross-city knowledge transfer for real estate appraisal as a meta-learning problem. As aforementioned, we formulate each city as a task set for city-wide multi-task learning. Therefore, different from prior studies [25, 42] that introduce mete-learning to transfer knowledge from a set of tasks extracted from source cities to a new task of target city, we aim to develop meta-learning to extract transferable knowledge from a set of task sets (multiple source cities) with abundant transaction data to rapidly adapt such knowledge to a new task set (a target city) with insufficient data.\nSpecifically, given a task set in a city, the base model MTTGN aims to jointly minimize the Mean Absolute Error (MAE) loss between the estimated unit price and ground truth unit price of real estate transactions for all tasks:\n\\[L(S; \\theta) = \\frac{1}{|S|} \\sum_{s_n \\in S} |\\hat{y}_n - y_n|, \\qquad(12)\\]\nwhere \\(\\theta\\) denotes all learnable parameters in MTTGN, and are exactly the knowledge to be generalized to the target city."}, {"title": "3.5.2 Tri-Level Optimization", "content": "Given model \\(\\theta^{(k+1)}\\) that have updated via Eq. (15), the goal of instance weight \\(\\lambda_n\\) is that after adapting model \\(\\theta'^{(k+1)}\\) on the target city's training set, the model's estimation error on the target city's test set is minimum. To achieve this goal, we propose to upgrade the above bi-level optimization to a tri-level optimization based meta-learning framework. In addition to the above inner-loop and outer-loop optimizations, we introduce an extra hyper-loop optimization to specifically update \\(\\omega\\) during meta-training by making full use of the target city's training set. Specifically, we also split the target city's training set as a support set \\(S_{tgt}\\) and a query set \\(Q_{tgt}\\). Then, the hyper-loop optimization is formalized as:\n\\[\\theta'^{(k+1)} \\leftarrow \\theta^{(k+1)} - \\gamma_1 \\nabla_{\\theta^{(k+1)}} L(S_{tgt}; \\theta^{(k+1)}), \\qquad(17)\\]\n\\[\\omega^{(k+1)} \\leftarrow \\omega^{(k)} - \\gamma_2 \\nabla_{\\lambda_n} L(Q_{tgt}; \\theta'^{(k+1)}) \\cdot \\nabla_{\\omega^{(k)}} \\lambda_n, \\qquad(18)\\]\nwhere \\(\\gamma_1\\) and \\(\\gamma_2\\) are the learning rates. Through tri-level optimization, the weight-generating network is updated with the training proceeding to generate dynamic weights for source instances, which realizes adaptive knowledge distillation and mitigates negative knowledge transfer from source cities to the target city. Note all the learnable instance weights are generated by a shared weight-generating network that is independent of instances size, which guarantees the great scalability of our instance re-weighting module on large-scale data from the source cities."}, {"title": "4 EXPERIMENTS", "content": "This section analyzes the experimental results. More experiments for the analysis on instance weights and efficiency test are provided in Appendix A.1 and Appendix A.2. Implementation details of MetaTransfer are provided in Appendix A.3."}, {"title": "4.1 Experimental setup", "content": "We conduct experiments based on five real-world datasets in correspondence to five representative cities in China, which are all collected from one of the world's largest commercial real estate web platforms\u00b2. The statistics of each dataset are summarized in Table 1. The datasets include historical real estate transaction data, residential communities data, and Point of Interests (POIs) data. The used real estate apartment attributes mainly include the number of several kinds of rooms, house area, structure, decoration, orientation, heating method, floor number, whether tax free, transaction ownership, building type, elevator household ratio, completion year. The used community attributes primarily contain the number of subway stations, bus stations, kindergartens, primary and middle schools, colleges, hospitals, pharmacies, malls, supermarkets, banks, restaurants, cafes, parks, cinemas, gymnasiums around the community, and the distance to the nearest above various facilities. The real estate price distributions of five datasets are illustrated in Figure 8 in Appendix.\nWe choose three large cities, Chengdu, Wuhan, and Guangzhou, as source cities, and two small cities, Mianyang and Shaoxing, as target cities. All source cities datasets range from January 01, 2018 to December 31, 2019. Target cities datasets Mianyang ranges from October 10, 2018 to December 31, 2019, and Shaoxing ranges from September 17, 2018 to December 31, 2019, respectively. We chronologically order each dataset based on the transaction time. For each target city dataset, we respectively take the first 20, 100, and 500 transaction instances for training, and the rest for testing. For each source city dataset, we only use the data instances whose transaction times are not later than the target city's training instances."}, {"title": "4.1.2 Evaluation Metrics", "content": "Three widely used metrics, including Mean Absolute Error (MAE), Mean Absolute Percentage Error (MAPE), and Root Mean Square Error (RMSE), are adopted for performance evaluation. The ground truth unit price and estimated"}, {"title": "4.1.3 Baselines", "content": "We compare MetaTransfer with eleven representative and competitive baselines, including one statistical baseline (HA), two classic machine learning baselines (LR [31], and GBRT [19]), three deep learning baselines (DNN, MugRep [45], and ST-RAP [21]), and five knowledge transfer baselines (FT-DNN, FT-MTTGN, MAML-DNN [7], MAML-MTTGN, and ST-GFSL [25]).\nNote that we do not select the models [17, 39, 42, 44] as baselines because they are specifically designed for regional spatio-temporal prediction tasks, whereas our problem does not incorporate the same region concept. The details of these baselines are provided in Appendix A.4."}, {"title": "4.2 Overall Performance", "content": "Table 2 report the performance of our model and all compared baselines on two target city datasets with different number of training instances in target city w.r.t. three metrics. Consistently, MetaTransfer achieves the best performance across all datasets with different training instances. Moreover, we have several observations. Firstly, the deep learning approaches with knowledge transfer (i.e., FT-DNN, FT-MTTGN, MAML-DNN, MAML-MTTGN, ST-GFSL, and MetaTransfer) basically outperform the approaches without knowledge transfer (i.e., HA, LR, GBRT, DNN, MugRep, ST-RAP), which verifies that extensive valuable knowledge can be transferred from data-rich sources cities to substantially improve deep learning model's performance in data-scarce target city. Especially, the improvement is most pronounced when target cities only have very few 20 training instances. Secondly, by comparing meta-learning approaches to fine-tuning approaches with the same base models (i.e., MAML-DNN vs FT-DNN, MAML-MTTGN vs FT-MTTGN), we observe meta-learning approaches have superior performance, this is because MAML is designed for learning general knowledge from a set of tasks that can be extracted from multiple source cities to facilitate fast learning on a new task of target city, which is suitable for cross-city real estate appraisal with multi-source cities, while fine-tuning approaches simply mix multi-source data into one dataset, ignoring the heterogeneity of multiple source cities. Thirdly, we find knowledge transfer approaches with MTTGN as base model (i.e., FT-MTTGN, MAML-MTTGN, MetaTransfer) surpass approaches FT-DNN, MAML-DNN, ST-GFSL, demonstrating the more powerful capability of MTTGN to capture the complicated association factors, e.g., irregular spatiotemporal correlation and price diversity among real estate transactions, for accurate real estate appraisal. Lastly, we observe MetaTransfer are superior to the best baseline MAML-MTTGN though they are with the same base model MTTGN. The reason is that MetaTransfer introduces instances adaptive re-weighting with tri-level optimization framework, which effectively mitigates negative knowledge transfer from the instance level during meta-training."}, {"title": "4.3 Ablation Study", "content": "We evaluate the performance of MetaTransfer and it's four variants on both Mianyang and Shaoxing with 100 training instances for three metrics: (1) w/o TGN removes the TGN module; (2) w/o HMTL removes the HMTL module, thus all communities have"}, {"title": "4.4 Effect of Different Source City", "content": "We study the effect of different source cities on the knowledge transfer to target cities by removing the corresponding source city during meta-training. We present MAE of MetaTransfer on both Mianyang and Shaoxing with 100 training instances in Figure 5(a). As can be seen, for target city Mianyang, the model without source city Chengdu causes the most obvious performance degradation, while"}, {"title": "4.5 Effect of Different Transferred Knowledge", "content": "We study the effects of different transferred knowledge from features perspective and parameters perspective, and present results of MetaTransfer on both Mianyang and Shaoxing with 100 training instances w.r.t. three metrics in Figure 6 and Figure 7.\nFeatures Perspective. We first study the effect of transferable knowledge to extract different types of features via masking the corresponding features of source cities data, so that the model cannot learn how to model these features during meta-training: (1) mask Estate masks real estate apartment attributes; (2) mask Community masks the residential community attributes; (3) mask Price masks the historical transaction's unit price; (4) Complete doesn't mask any feature. As shown in Figure 6, we can observe lack of any features knowledge results in remarkable performance decline, which verifies that all these features knowledge are positively transferable for cross-city real estate appraisal. In addition, we find mask Price leads to more obvious performance reduction than mask Estate than mask Community, which indicates correlated transaction's price modeling is the most helpful knowledge to be transferred across cities by our model, then is real estate features and community features. This discovery indicates that spatiotemporal correlations between real estate prices widely exist in various cities, and how to model such price correlations is critical knowledge for real estate appraisal.\nParameters Perspective. To study the effect of different transferred knowledge preserved in model's parameters, we replace a part of model's parameters that have been well trained in source cities data with the random initialization, then adapt the modified model to target city: (1) repl TGN replaces parameters of TGN module; (2) repl Hyper replaces parameters of hypernetworks in HMTL; (3) repl FI replaces parameters of feature integration function in Eq. (11); (4) Complete keeps all parameters. As can be seen in Figure 7, replacing any component's parameters leads to obvious performance degradation, which demonstrates each component of our model indeed preserves and transfers valuable knowledge from source cities to target city. Moreover, we observe replacing TGN module's parameters especially damages model's performance,"}, {"title": "5 RELATED WORK", "content": "Real Estate Appraisal. Traditional valuation methods for real estate primarily include income approach, cost approach, sales comparison approach, and hedonic price model. Income approach [1] appraises real estate market value based on the income that real estate can generate. Cost approach [13] appraises real estate by considering the land and construction values as well as the improvements' depreciated cost. Sales comparison approach [26] estimates real estate market value relying on comparison with recent sales of similar real estates. Hedonic price model [3] assumes that the real estate market value can be regarded as the aggregation of its individual characteristics. However, these methods heavily rely on expert knowledge [29], which prevents their application by non-experts. Besides, automated valuation methods appraise real estate market value based on automatic machine learning techniques [37], such as linear regression [35], support vector regression [22], boosted regression trees [30], and deep neural networks [5, 20, 43, 45]. These methods have garnered significant interest among researchers because they enable automated real estate appraisal, making them easily accessible even to non-domain experts, and thus are with excellent practicability [27]. Furthermore, some works [8-10] study to rank real estates by considering the perspectives of mixed land use, online user reviews and offline moving behaviors, as well as real estate individual, peer and zone dependency. In addition, there are a few studies attempting to incorporate the relations between real estates. For example, You et al. [43] use a random walk strategy to generate real estate sequences based on location, followed by a recurrent neural network for price prediction, but this sampling method may result in the loss of valuable information. The recent works [21, 45] introduce graph neural networks to model the dependencies of real estate transactions and residential communities. However, they fail to consider time-aware correlations among transactions and the diversity of communities. Most importantly, all the above studies investigate real estate appraisal for a single city dataset. The cross-city real estate appraisal problem remains under-explored.\nCross-City Knowledge Transfer. Previous studies for cross-city knowledge transfer can be categorized into single source city transfer learning [6, 12, 17, 18, 28, 39, 40] and multiple source cities transfer learning [25, 42, 44] in terms of the source cities number. As an early single source city transfer learning method, Wei et al. [40] aims to improve air quality prediction by transferring the learned semantically related dictionaries and labelled instances from a source city to a target city. Wang et al. [39] studies to transfer the region-level features between cities by learning an inter-city region matching function to match each region of a target city to a similar region in a source city. Jin et al. [17] adopts a meta-learning paradigm to train a region weighting network, then the prediction model can be pre-trained on a single source city with learned region weights to initialize fine-tuning on the target city. The training strategy of our weight-generating network is connected to [17], but we present a tri-level optimization framework to realize more fine-grained instance-level re-weighting on multiple source cities data for the"}, {"title": "6 CONCLUSION", "content": "In this paper, we investigated the cross-city real estate appraisal problem which aims to transfer valuable knowledge from multiple data-rich source cities to the data-scarce target city to improve valuation performance. Specifically, we proposed Meta-Transfer Learning Empowered Temporal Graph Networks, MetaTransfer, where the task of city-wide real estate appraisal was reformulated as a multi-task dynamic graph link label prediction problem. Along this line, we first designed an Event-Triggered Temporal Graph Network to model the irregular spatiotemporal correlations between evolving real estate transactions. Then, a Hypernetwork-Based Multi-Task Learning module was proposed to simultaneously facilitate intra-city knowledge sharing and community-wise knowledge learning. Furthermore, to achieve effective cross-city knowledge transfer, we proposed a Tri-Level Optimization Based Meta-Learning framework to adaptively re-weight training transaction instances from multiple source cities so that transfer helpful knowledge to the target city. Finally, extensive experiments on five real-world datasets demonstrated the effectiveness of MetaTransfer."}, {"title": "A ADDITIONAL EXPERIMENTS", "content": "This section provides additional experiment details and results."}, {"title": "A.1 Analysis on Instance Weight", "content": "Figure 9 shows the change of instance weights during meta-training for target city Mianyang and Shaoxing, where Mean denotes the mean of all weights for source"}, {"title": "A.1.1 Change of Weights", "content": "Figure 9 shows the change of instance weights during meta-training for target city Mianyang and Shaoxing, where Mean denotes the mean of all weights for source instances, and SD refers to standard deviation of all weights. The meta-training is repeated 5 times with different random seeds. As can be observed, the overall trend of instance weights Mean value first increases, then gradually decreases. This is because at first most instances from source cities are valuable for target city, thus the instance weights Mean value becomes larger to enhance knowledge transfer at the beginning of meta-training. However, with meta-training proceeding, the effect of many source instances may be exhausted, or even be negative. Hence, the weights for these useless instances become small. Moreover, we observe the instance weights SD value always keeps an increasing trend. This is because the useful and useless source instances become divergent as meta-training goes, weight-generating network generates larger weights for these useful instances and smaller weights for useless instances. It indicates our model to mitigate negative knowledge transfer across cities."}, {"title": "A.1.2 Case Study", "content": "Figure 10 depicts the spatial distribution of source instances weights when transfer knowledge to Mianyang, and the spatial distributions of real estate prices and the number of POIs around community. We can discover that the instances weights are negatively correlated with real estate prices and the number of POIs. One possible explanation is lower real estate prices and less POIs usually signify unprosperous areas, and the real estates in unprosperous areas of metropolises have more similar pattern to real estates in small cities like Mianyang. Thus, our model weights more on these source instances of unprosperous areas to learn more valuable knowledge for real estate appraisal in target city."}, {"title": "A.2 Efficiency Test", "content": "Figure 11 displays the average latency of various models when responding to a real estate appraisal request. The results indicate that MetaTransfer (i.e., MTTGN) has the lowest response latency among these models, under 4ms (3.8ms, 3.7ms) for both Mianyang and Shaoxing. It suggests that MetaTransfer has a highly efficient inference process for practical use. MetaTransfer has superior efficiency than GBRT (8.3ms, 6.9ms) for it does not require a time-consuming model ensemble. Particularly, compared to MugRep (24.4ms, 14.9ms), MetaTransfer is notably more efficient because it has efficiently optimized the correlation modeling process between real estate transactions, while MugRep repeatedly involves all neighboring historical transactions into computation to respond each real estate appraisal request. Moreover, MetaTransfer is more efficient than ST-RAP, which requires multiple graph convolution operations for its diverse neighboring entities, such as communities, amenities, and transportation stations. All these results demonstrate the efficiency and practicality of MetaTransfer."}, {"title": "A.3 Implementation Details", "content": "All experiments are performed on a Linux server with 20-core Intel(R)"}]}