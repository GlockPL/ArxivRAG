{"title": "Efficient and Universal Neural-Network Decoder for Stabilizer-Based Quantum Error Correction", "authors": ["Gengyuan Hu", "Wanli Ouyang", "Chao-Yang Lu", "Chen Lin", "Han-Sen Zhong"], "abstract": "Quantum error correction is crucial for large-scale quantum computing, but the absence of efficient decoders for new codes like quantum low-density parity-check (QLDPC) codes has hindered progress. Here we introduce a universal decoder based on linear attention sequence modeling and graph neural network that operates directly on any stabilizer code's graph structure. Our numerical experiments demonstrate that this decoder outperforms specialized algorithms in both accuracy and speed across diverse stabilizer codes, including surface codes, color codes, and QLDPC codes. The decoder maintains linear time scaling with syndrome measurements and requires no structural modifications between different codes. For the Bivariate Bicycle code with distance 12, our approach achieves a 39.4% lower logical error rate than previous best decoders while requiring only 1% of the decoding time. These results provide a practical, universal solution for quantum error correction, eliminating the need for code-specific decoders.", "sections": [{"title": "Main", "content": "Quantum computing systems are highly susceptible to environmental noise, making quantum error correction (QEC) (1, 2) essential for practical implementations. QEC protects quantum information by encoding logical qubits across multiple physical qubits, analogous to classical error correction. However, quantum error correction is fundamentally more challenging due to constraints imposed by quantum mechanics, including the no-cloning theorem (3) and measurement-induced wavefunction collapse.\nThe stabilizer formalism (4) has emerged as the leading theoretical framework for quantum error correction, providing a systematic approach to encode quantum information. While the encoding process is straightforward in the stabilizer formalism, the decoding problem presents a significant challenge, having been proven NP-complete (5) to achieve optimal accuracy. As a result, a practical decoder which allows real-time error suppressing on a quantum computer requires a well designed trade off between accuracy and decoding speed. Although efficient specialized decoders exist for certain codes such as the surface code (6, 7), many advantageous schemes like quantum low-density parity-check (QLDPC) codes (8) and color code (9) still suffers from either low decoding accuracy or long decoding latency.\nTwo primary approaches have emerged for achieving efficient decoding beyond the surface code. The matching-based approach, which has demonstrated both high accuracy and computational efficiency for surface codes, focuses on decomposing complex encoding schemes into surface code-like sub-blocks for decoding (10). The belief propagation (BP) based approach adapts classical BP"}, {"title": "1.1 Decode on the Tanner graph", "content": "In the quantum circuit model, quantum computations are executed through sequences of elementary quantum gates acting on qubits, analogous to classical logic gates in digital circuits. However, physical implementations are susceptible to errors during all operations, including gate operations, qubit initialization, and measurements. This realistic scenario is characterized by the circuit-level noise model.\nTo protect quantum information against such noise, stabilizer codes are employed. A [[n, k, d]] stabilizer code is defined by a set of n \u2212 k stabilizer generators, represented by a 2n \u00d7 (n \u2212 k) binary symplectic matrix H = [\u00b7|\u00b7]. Each row in H represents a stabilizer generator, and each column of each half corresponds to a qubit. The matrix elements specify Pauli operators through the mapping:\n(0|0) \u2192 1, (0|1) \u2192 Z, (1|0) \u2192 X, (1|1) \u2192 Y\n(1)\nsuch that each stabilizer generator is a product of Pauli operators on the encoded qubits.\nOur approach begins by representing this stabilizer structure as a Tanner graph (FIG.1). In this representation, stabilizer generators become check nodes and qubits become data nodes, with edges indicating non-zero matrix elements. The Tanner graph serves not only as a mathematical equivalent representation for a stabilizer code but also as an abstracted description of the code's hardware topology. Signals from the quantum device implementing the described code can be naturally embedded into the graph for feature extraction.\nDuring quantum error correction, measurements from each stabilizer generator are collected in successive cycles until the logical qubit measurement is required. The collected measurement results from previous cycles, called syndromes, are used to correct the logical measurement results through decoding. To connect the decoding problem with the syndrome, we extend the basic Tanner graph by incorporating nodes and edges representing logical observables, which are also defined as products of Pauli operators. We then embed all syndrome data into the extended Tanner graph G(Vdata, Vcheck, Vlogical, Estabilizer, Elogical), treating each time as a slice of a temporal dynamic graph. This formulation transforms the decoding problem into a temporal graph classification task, seeking a mapping f:\nf : G\u2081 ({St}) \u2192 C, S\u2081 \u2208 F,C\u2208 Fs, C\u2208 F\n(2)\nwhere {S} represents the syndrome sequence, and C is a binary vector indicating logical qubit flips,"}, {"title": "1.2 Efficient universal decoding across different code families", "content": "Our previous section established the theoretical framework for universal neural decoders, yet significant challenges persist in optimizing two critical dimensions: modeling the topological structure of quantum codes and capturing temporal dependencies in syndrome sequences. To address these challenges, we propose a three-phase neural decoding architecture :\n1. Spatial Feature Extraction: Embedded multiplicative message passing (MMP) operators process syndrome patterns on Tanner graph slices, explicitly leveraging parity-check constraints.\n2. Temporal Context Integration: Historical syndrome correlations are captured through linear attention mechanisms, preserving linear inference complexity (O(T)) while enabling parallel training.\n3. Logical Error Prediction: Final decoding decisions are generated via topology-grounded graph pooling, incorporating code-specific boundary conditions."}, {"title": "1.3 Robustness to noise strength", "content": "Since our neural network decoder learns an implicit noise model from training data rather than relying on explicit noise parameters, adapting it to new noise models is challenging. Therefore, it"}, {"title": "2 Discussion", "content": "In this work, we have developed a universal framework for quantum error correction decoding using graph neural networks. Our decoder demonstrates superior performance in both accuracy and speed compared to existing approaches. While the framework's architecture is conceptually straightforward, its consistent success across diverse test cases validates the potential of neural network-based approaches."}]}