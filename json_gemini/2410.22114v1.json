[{"title": "Policy Gradient for Robust Markov Decision Processes", "authors": ["Qiuhao Wang", "Shaohang Xu", "Chin Pang Ho", "Marek Petrik"], "abstract": "We develop a generic policy gradient method with the global optimality guarantee for robust Markov Decision Processes (MDPs). While policy gradient methods are widely used for solving dynamic decision problems due to their scalable and efficient nature, adapting these methods to account for model ambiguity has been challenging, often making it impractical to learn robust policies. This paper introduces a novel policy gradient method, Double-Loop Robust Policy Mirror Descent (DRPMD), for solving robust MDPs. DRPMD employs a general mirror descent update rule for the policy optimization with adaptive tolerance per iteration, guaranteeing convergence to a globally optimal policy. We provide a comprehensive analysis of DRPMD, including new convergence results under both direct and softmax parameterizations, and provide novel insights into the inner problem solution through Transition Mirror Ascent (TMA). Additionally, we propose innovative parametric transition kernels for both discrete and continuous state-action spaces, broadening the applicability of our approach. Empirical results validate the robustness and global convergence of DRPMD across various challenging robust MDP settings.", "sections": [{"title": "1. Introduction", "content": "Markov decision processes (MDPs) serve as a fundamental model in dynamic decision-making and reinforcement learning (Puterman, 2014; Sutton and Barto, 2018; Meyn, 2022). Classical MDPs typically consider stochastic environments and assume that the model parameters, such as transition probabilities, are precisely known. However, in most real-world applications, such as finance (Sun et al., 2023) and healthcare (Goh et al., 2018), model parameters are estimated from noisy and limited observation data, and these estimation errors may lead to policies that perform poorly in practice. Using the idea of robust optimization, Robust MDPs (RMDPs) allow one to compute policies that exhibit resilience to parameter errors (Iyengar, 2005; Nilim and El Ghaoui, 2005). RMDPs do not assume precise knowledge of transition probabilities but instead allow these probabilities to vary within a specific ambiguity set, aiming to seek a policy that is optimal under the worst-case plausible realization of the transition probabilities (Xu and Mannor, 2006; Mannor et al., 2012; Hanasusanto and Kuhn, 2013; Tamar et al., 2014; Delgado et al., 2016). Compared to MDPs, the performance of RMDPs is less sensitive to the parameter errors that arise when estimating the transition kernel from empirical data, as is often the case in reinforcement learning (Xu and Mannor, 2009; Petrik, 2012; Petrik et al., 2016).\nThe prevailing literature on RMDPs predominantly assumes rectangular ambiguity sets, which constrain the errors in the transition probabilities independently for each state (Wiesemann et al., 2013; Ho et al., 2021; Panaganti and Kalathil, 2021). This assumption is crucial for RMDPs to maintain traceability, ensuring that an optimal policy of the RMDP can be computed using dynamic programming (Iyengar, 2005; Nilim and El Ghaoui, 2005; Kaufman and Schaefer, 2013; Ho et al., 2021). In contrast, RMDPs with general ambiguity sets are NP-hard to solve (Wiesemann et al., 2013). The simplest rectangularity assumption, known as (s, a)-rectangularity, permits the adversarial nature to independently select the worst transition probability for each state and action pair. However, this (s, a)-rectangularity assumption can be overly restrictive, often yielding conservative policies. This paper, therefore, explores the more general s-rectangular ambiguity set (Le Tallec, 2007; Wiesemann et al., 2013; Derman et al., 2021; Wang et al., 2022), which allows the adversarial nature to choose transition probabilities without observing the action. Our results also readily extend to other notions of rectangularity, including k-rectangular (Mannor et al., 2016) and r-rectangular RMDPs (Goyal and Grand-Cl\u00e9ment, 2022). While rectangularity assumptions have been extensively studied particularly in the tabular setting (Iyengar, 2005; Nilim and El Ghaoui, 2005; Le Tallec, 2007; Kaufman and Schaefer, 2013; Wiesemann et al., 2013; Ho et al., 2018; Behzadian et al., 2021b; Ho et al., 2021, 2022), such rectangular ambiguity sets can be still quite restrictive in modeling ambiguity, particularly in large-scale or continuous contexts.\nPolicy gradient techniques have gained significant popularity in reinforcement learning (RL) due to their remarkable empirical performance and flexibility in large and complex domains (Silver et al., 2014; Xu et al., 2014). By parameterizing policies, policy gradient methods exhibit scalability across large state and action spaces, and these methods can also easily leverage generic optimization techniques (Konda and Tsitsiklis, 1999; Bhatnagar et al., 2009; Petrik and Subramanian, 2014; Pirotta et al., 2015; Schulman et al., 2015, 2017; Behzadian et al., 2021a). Recent studies show that many policy gradient algorithms can guarantee global optimality in tabular MDPs, even when optimizing non-convex objectives (Mei et al., 2020; Agarwal et al., 2021; Bhandari and Russo, 2021; Xiao, 2022; Yuan et al., 2022). Despite the importance of policy gradient methods in RL, the development of gradient-based approaches for solving RMDPs, with provable optimal robustness guarantees, is still an open area of research.\nThe main goal of this paper is to address the limitations of the existing RMDP literature by developing a computationally tractable algorithm for RMDPs with provable convergence guarantees, applicable to both the tabular and large-scale continuous settings. Our framework comprises four components, each of which represents a novel contribution.\nOur first contribution is Double-Loop Robust Policy Mirror Descent (DRPMD), a new generic policy gradient scheme for solving RMDPs. DRPMD accommodates various commonly used parameterized policy classes, such as softmax parameterization, Gaussian parameterization, and neural policy classes, allowing for more flexible policy representations. Inspired by double-loop algorithms designed for saddle point problems (Jin et al., 2020; Luo et al., 2020; Razaviyayn et al., 2020; Zhang et al., 2020), DRPMD features two nested loops: an outer loop that updates policies, and an inner loop that approximately computes the worst-case transition probabilities.\nAs our second contribution, we prove that DRPMD is guaranteed to converge to a globally optimal policy with linearly increasing step sizes. While assuming an oracle for solving the inner problem, our proposed algorithm achieves a fast global convergence rate of $O(\\epsilon^{-1})$ for general RMDPs under both direct parameterization and softmax parameterization, even in non-rectangular cases. To address the potentially high computational costs of solving the inner loop optimally, we propose an adaptive schedule for reducing approximation errors, which is sufficient to ensure convergence to the optimal solution and enhance the algorithm's efficiency. To the best of our knowledge, DRPMD is the first gradient-based method for RMDPs with softmax parameterization that offers a provable convergence guarantee. For special s-rectangular RMDPs with direct parameterization, DRPMD achieves an even faster rate of $O(\\log(\\epsilon^{-1}))$, achieving the best iteration complexity among policy gradient methods for rectangular RMDPs.\nOur third contribution is a novel gradient-based algorithm for solving the inner maximization problems in s-rectangular RMDPs, named Transition Mirror Ascent (TMA). While the outer loop closely resembles exact policy mirror descent updates in classical MDPs (Xiao, 2022), the inner loop must optimize over an infinite number of transition probabilities in the ambiguity set. TMA employs mirror ascent updates to compute the inner worst-case transition kernel and enjoys a proven fast linear convergence rate, comparable to the best-known convergence result provided by value-based inner solution methods that rely on the contraction operator (Iyengar, 2005; Nilim and El Ghaoui, 2005; Wiesemann et al., 2013; Ho et al., 2021).\nAs our fourth contribution, we propose two innovative and complete transition parameterizations to enhance the scalability of TMA. The first is inspired by the analytical form of the worst-case transition in KL-divergence constrained (s, a)-rectangular RMDPs, scaling well in RMDPs with large-scale state spaces and function approximation. The second is characterized by the Gaussian Mixture model, adapting well to RMDPs with continuous state spaces and function approximation. To facilitate learning these transition parameters without expensive gradient computations, we develop a stochastic variant of the TMA method, named Monte-Carlo Transition Mirror Ascent (M\u0421\u0422\u041c\u0410).\nTogether, our contributions comprise a comprehensive robust policy gradient framework for solving RMDPs. Compared to an earlier conference version of this work (Wang et al., 2023), we introduce several significant enhancements in this paper. First, the DRPMD method generalizes the outer projected gradient descent update from DRPG by employing a more flexible mirror descent update, which also ensures provably faster convergence rates through refined difference analysis techniques for various parameterized policy classes. Notably, the softmax policy parameterization explored in this paper has not been previously studied in the context of gradient-based algorithms for RMDPs. Second, we extend the inner solution method to a more versatile TMA, outperforming prior projected gradient techniques by providing a faster convergence guarantee. Third, while our previous work included a transition parameterization, we now introduce updated entropy parametric transitions and propose a new Gaussian mixture transition parameterization to improve the scalability of TMA. Lastly, we present MCTMA, a stochastic variant that enhances the practicality of our approach for real-world applications. These advancements collectively represent a significant improvement over the prior work.\nThe remainder of the paper is organized as follows. We summarize relevant prior work in Section 2 and review the basic notation and fundamental results of nominal MDPs and RMDPs in Section 3. Section 4 describes the outer loop of our proposed DRPMD algorithm and demonstrates its global convergence guarantee. The algorithms and transition parameterizations for addressing the inner loop are detailed in Section 5. Finally, in Section 6, we present experimental results that illustrate the effective empirical performance of our algorithms.\nWe use the following notation throughout the paper. Regular lowercase letters (e.g., $p$) denote scalars, boldface lowercase letters (e.g., $\\mathbf{p}$) represent vectors, and boldface uppercase letters (e.g., $X$) denote matrices. Indexed values are printed in bold for vectors and in the regular font for scalars. Specifically, $p_i$ refers to the $i$-th component of a vector $\\mathbf{p}$, whereas $\\mathbf{p}_i$ is the $i$-th vector of a sequence of vectors. All vector inequalities are understood to hold component-wise. Calligraphic letters and uppercase Greek letters (e.g., $\\mathcal{X}$ and $\\Xi$) are reserved for sets. The symbol $\\mathbf{e}$ denotes a vector of all ones of the size appropriate to the context. The set $\\mathbb{R}$ represents real numbers, and the set $\\mathbb{R_+}$ represents non-negative real numbers. The probability simplex in $\\mathbb{R}^S$ is denoted as $\\Delta^S$. For vectors, we use $||\\cdot||$ to denote the $l_2$-norm. For a differentiable function $h(x, y)$, we use $\\nabla_xh(x, y)$ to denote the partial derivative of $h$ with respect to $x$."}, {"title": "2. Related Work", "content": "Robust MDPs with rectangular uncertainty sets are typically tackled using value-based methods, which compute the optimal policy's value function by solving the robust Bell-man equation (Iyengar, 2005; Nilim and El Ghaoui, 2005; Kaufman and Schaefer, 2013; Wiesemann et al., 2013; Ho et al., 2021). Subsequent research has extended these methods to sample-based approaches (Roy et al., 2017; Tessler et al., 2019; Badrinath and Kalathil, 2021; Wang and Zou, 2021; Liu et al., 2022; Panaganti et al., 2022b; Panaganti and Kalathil, 2022; Zhou et al., 2024). Additionally, approximate dynamic programming (ADP) techniques (Powell, 2007) have been extended to approximate robust Bellman updates in value-based methods (Tamar et al., 2014; Zhou et al., 2021; Ma et al., 2022). The application of ADP to value-based methods facilitates the use of function approximation to address the curse of dimensionality (Roy et al., 2017; Badrinath and Kalathil, 2021; K\u00f6se and Ruszczy\u0144ski, 2021), offering an efficient approach for improving algorithm scalability.\nIn addition to advancements in value-based methods, there has been growing interest in developing gradient-based methods in non-robust settings. Policy gradient (Williams, 1992; Sutton et al., 1999) and their extensions (Konda and Tsitsiklis, 1999; Kakade, 2001; Schulman et al., 2015) have demonstrated success in various applications. Although the surge of interest in policy gradient methods in RL, the theoretical understanding of convergence behavior remains limited to local optima and stationary points. It was not until recently that the global optimality of various policy gradient methods was established (Mei et al., 2020; Agarwal et al., 2021; Bhandari and Russo, 2021; Li et al., 2021; Cen et al., 2022; Xiao, 2022; Yuan et al., 2022; Bhandari and Russo, 2024). Stochastic policy gradient methods, which estimate first-order information via samples, have also been proposed, with studies focusing on both sample and iteration complexity (Shani et al., 2020; Xu et al., 2020; Lan, 2023).\nDespite these advancements, gradient-based methods for solving RMDPs remain largely unexplored. A recent work by Wang and Zou (2022) proposes a policy gradient method for solving RMDPs with a particular (s, a)-rectangular linear contamination ambiguity set. While this algorithm is compellingly simple, it is limited to the R-contamination set, which has been shown to be equivalent to ordinary MDPs with a reduced discount factor (Wang et al., 2023). Another related work by Li et al. (2022) develops an extended mirror descent method for solving RMDPs. Our DRPMD algorithm shares similarities with their outer policy update but improves upon it in several respects. Specifically, their results are confined to (s, a)-rectangular RMDPs and appear to be challenging to generalize to s-rectangular sets. In contrast, our algorithm converges to the globally optimal policy for s-rectangular RMDPs. Moreover, their method assumes solving the inner loop optimally in each policy update, which can be computationally expensive, whereas DRPMD introduces a decreasing adaptive tolerance sequence without compromising convergence. Another noteworthy work by Zhou et al. (2024) explores a data-driven robust natural actor-critic algorithm to address (s, a)-rectangular RMDPs. Their approach introduces two well-constructed ambiguity sets and leverages function approximation techniques to efficiently manage large-scale robust RL problems.\nRegarding RMDPs with the s-rectangular ambiguity set, Kumar et al. (2023) propose an algorithm achieving the $O(\\epsilon^{-1})$ convergence rate; however, it relies on a strong assumption that the robust objective function is smooth, which may not hold for many ambiguity sets (Lin et al., 2024). Another related work by Kumar et al. (2024) considers the ball-constrained ambiguity set, provides a closed-form expression of the worst-case transition kernel, and proposes a robust policy gradient method. Concurrently, Li et al. (2023) introduces a double-loop algorithm for solving s-rectangular RMDPs, achieving the same $O(\\epsilon^{-1})$ convergence rate as Wang et al. (2023). This work (Li et al., 2023) also introduces an inner solution method for the s-rectangular RMDPs inner problem, though it converges at a slower global rate of $O(\\epsilon^{-2})$ compared to TMA. Interestingly, Li et al. (2023) also addresses RMDPs with a non-rectangular ambiguity set by employing projected Langevin dynamics, a Monte Carlo method for solving the inner problem.\nIt is worth noting that all aforementioned related works feature a double-loop structure, alternately updating the outer policy and solving the inner problem optimally, whether by using analytical worst-case transition kernel for a specific ambiguity set (Wang and Zou, 2022; Kumar et al., 2024) or by assuming the existence of an oracle for solving the inner problem (Li et al., 2022; Kumar et al., 2023). From this point of view, our DRPMD method generalizes and extends these approaches. Apart from the double-loop methods, Lin et al. (2024) proposes the first single-loop robust policy gradient method for s-rectangular RMDPs with a global optimality guarantee. Compared to existing methods with a double-loop structure, their single-loop method avoids the costly computation required for the search of an inner approximation, offering better computational efficiency.\nWhile our present paper exclusively focuses on RMDPs, it is worth mentioning that there is an active line of research studying a related model, called distributionally robust MDPs, which assumes the transition kernel is random and governed by an unknown probability distribution that lies in an ambiguity set (Ruszczy\u0144ski, 2010; Xu and Mannor, 2010; Shapiro, 2016; Chen et al., 2019; Grand-Cl\u00e9ment and Kroer, 2021; Shapiro, 2021; Liu et al., 2022; Yu et al., 2024)."}, {"title": "3. The Model", "content": "This section reviews MDPs and RMDPs. We summarize their necessary notations and fundamental concepts that will be used throughout the paper."}, {"title": "3.1 Markov Decision Processes", "content": "A nominal MDP is specified by a tuple $(\\mathcal{S}, \\mathcal{A}, p, c, \\rho)$, where $\\mathcal{S} = \\{1, 2, \\dots, S\\}$ and $\\mathcal{A} = \\{1, 2, \\dots, A\\}$ are the finite state and action sets, respectively. The probability distribution of transiting from the current state $s$ to the next state $s'$ after taking an action $a$ is denoted as a vector $p_{sa} \\in \\Delta^S$ and in a part of the transition kernel $p := (p_{sa})_{s \\in \\mathcal{S}, a \\in \\mathcal{A}} \\in (\\Delta^S)^{\\mathcal{S} \\times \\mathcal{A}}$. The cost of the aforementioned transition is denoted as $C_{sas'}$ for each $(s, a, s') \\in \\mathcal{S} \\times \\mathcal{A} \\times \\mathcal{S}$. We assume that $C_{sas'} \\in [0, 1]$ for each $s, s' \\in \\mathcal{S}$ and $a \\in \\mathcal{A}$. This is without loss of generality because translating the costs by a constant or multiplying them by a positive scalar does not change the set of optimal policies (Puterman, 2014). The initial state is selected randomly according to the initial state distribution $\\rho \\in \\Delta^S$.\nA (stationary) randomized policy $\\pi := (\\pi_s)_{s \\in \\mathcal{S}}, \\pi_s \\in \\Delta^A$ is a probability density function that prescribes taking action $a \\in \\mathcal{A}$ with probability $\\pi_{sa}$ whenever the MDP is in state $s \\in \\mathcal{S}$. We use $\\Pi = (\\Delta^A)^S$ to denote the set of all randomized stationary policies. The total expected discounted cost of this MDP is defined as\n$J_p(\\pi, \\rho) := \\mathbb{E}_{\\pi, \\rho, \\tilde{s}_0 \\sim \\rho} \\Big[ \\sum_{t=0}^{\\infty} \\gamma^t \\cdot C_{\\tilde{s}_t a_t s_{t+1}} \\Big],$ (1)\nwhere $\\gamma \\in (0, 1)$ is the discount factor, reflecting how costs are weighted over time. The random variables are denoted by a tilde here and in the remainder of the paper. Here, $\\mathbb{E}_{\\pi, \\rho, \\tilde{s}_0 = s}$ represents the expectation of a dynamic where the action $a_t$ follows the distribution $\\pi_{\\tilde{s}_t}$, the state $\\tilde{s}_{t+1}$ follows the distribution $p_{\\tilde{s}_t a_t}$, and the initial state is taken as $s \\in \\mathcal{S}$."}, {"title": "3.2 Robust Markov Decision Processes", "content": "RMDPs generalize MDPs to account for model ambiguity, aiming to find policies that are resilient to ambiguity. More specifically, in an RMDP $(\\mathcal{S}, \\mathcal{A}, \\mathcal{P}, c, \\rho)$, the transition kernel $p$ is assumed to be adversarially chosen from an ambiguity set of plausible values $\\mathcal{P} \\subset (\\Delta^S)^{\\mathcal{S} \\times \\mathcal{A}}$ (Hanasusanto and Kuhn, 2013; Wiesemann et al., 2013; Petrik and Subramanian, 2014; Russell and Petrik, 2019; Ho et al., 2021). Our end goal is to find a robust policy that minimizes the expected total cost under the worst-case transition kernel from $\\mathcal{P}$:\n$\\min_{\\pi \\in \\Pi} \\max_{p \\in \\mathcal{P}} J_p(\\pi, \\rho).$ (9)\nHere, the outer minimization in (9) reflects the agent's objective, while the inner maximization represents the objective of the adversarial nature. By appropriately calibrating $\\mathcal{P}$ to include the unknown true transition kernel, the optimal policy derived from (9) can ensure reliable performance (Russell and Petrik, 2019; Behzadian et al., 2021b; Panaganti et al., 2022a).\nMost standard methods for solving (9), such as robust value iteration (Iyengar, 2005; Nilim and El Ghaoui, 2005; Wiesemann et al., 2013), modified policy iteration (Kaufman and Schaefer, 2013) and partial policy iteration (Ho et al., 2021), focus on estimating the robust values of policies and selecting policies based on these estimates. These method often assume the that the RMDP is rectangular (Iyengar, 2005; Nilim and El Ghaoui, 2005; Wiesemann et al., 2013; Ho et al., 2021), where the ambiguity on transitions related to different states (state-action pairs) is uncoupled, and the adversary is allowed to select the worst possible realization for each state (state-action pair) unrelated to others.\nTwo common classes of ambiguity sets are considered in this paper. We say an ambiguity set $\\mathcal{P}$ is (s, a)-rectangular (Iyengar, 2005; Nilim and El Ghaoui, 2005; Le Tallec, 2007) if it is a Cartesian product of sets $\\mathcal{P}_{s,a} \\subseteq \\Delta^S$ for each state $s \\in \\mathcal{S}$ and action $a \\in \\mathcal{A}$, i.e.,\n$\\mathcal{P} := \\{p \\in (\\Delta^S)^{\\mathcal{S} \\times \\mathcal{A}} | p_{s,a} \\in \\mathcal{P}_{s,a}, \\forall s \\in \\mathcal{S}, a \\in \\mathcal{A}\\},$\nwhereas an ambiguity set $\\mathcal{P}$ is s-rectangular (Wiesemann et al., 2013) if it is defined as a Cartesian product of sets $\\mathcal{P}_s \\subseteq (\\Delta^S)^A$, i.e.,\n$\\mathcal{P} := \\{p \\in (\\Delta^S)^{\\mathcal{S} \\times \\mathcal{A}} | p_s = (p_{s,a})_{a \\in \\mathcal{A}} \\in \\mathcal{P}_s, \\forall s \\in \\mathcal{S} \\}.$\nAlthough the rectangularity is a standard assumption in most prior works on RMDPs, it is not essential for describing or analyzing the proposed method DRPMD. We only require $\\mathcal{P}$ to be compact to guarantee the existence of an inner maximum. This condition is satisfied by the majority of ambiguity sets considered in prior research, including $L_1$-ambiguity sets (Ho et al., 2021), $L_{\\infty}$-ambiguity sets (Givan et al., 2000; Behzadian et al., 2021b), $L_2$-ambiguity sets (Nilim and El Ghaoui, 2005), and KL-ambiguity sets (Iyengar, 2005; Nilim and El Ghaoui, 2005). While rectangularity benefits the development of algorithms for solving the inner maximization, it is not strictly necessary (see Li et al. (2023)).\nFrom an optimization perspective, the optimal policy $\\pi^*$ for this RMDP is the solution $(\\pi^*, p^*)$ of the global minimax problem (9), where $\\pi^*$ minimizes the function $\\Phi(\\pi) := \\max_{p \\in \\mathcal{P}} J_p(\\pi, p)$, and $p^*$ is the worst-case transition kernel that maximizes $J_p(\\pi^*, p)$ (Jin et al., 2020; Luo et al., 2020; Razaviyayn et al., 2020; Zhang et al., 2020). Thus, the problem of solving the RMDP is allowed also to be considered as solving the following equivalent problem\n$\\min_{\\pi \\in \\Pi} \\{ \\Phi(\\pi) := \\max_{p \\in \\mathcal{P}} J_p(\\pi, p) \\}.$ (10)\nWhen using parameterized policies, we overload the notation $\\Phi$ to represent the inner maximization for parameterized policies as well, denoting $\\Phi(\\theta) := \\max_{p \\in \\mathcal{P}} J_p(\\pi^{\\theta}, p)$, which captures the worst-case performance of the RMDP under a parameterized policy.\nA natural generalization of policy gradient methods to the robust setting would be to simply solve (10) by gradient descent on the function $\\Phi$. However, this is challenging because the function $\\Phi$ may not be differentiable due to the inner maximization problem. Also, since $\\Phi$ is neither convex nor concave, its subgradient might not exist either (Nouiehed et al., 2019; Lin et al., 2020). These complications motivate the need for the double-loop iterative scheme, which we propose for solving RMDPs in Section 4."}, {"title": "4. Double-Loop Robust Policy Mirror Descent", "content": "In this section, we present a policy gradient approach for solving RMDPs. As the main contribution of this section, we demonstrate that our algorithm guarantees a globally optimal solution to the optimization problem in (10), despite the objective function being neither convex nor concave. Additionally, we establish that our algorithm offers the first global convergence guarantee for addressing RMDPs using the more practical and widely adopted softmax parameterization. This contrasts with prior works that focus exclusively on direct parameterization (Li et al., 2022; Wang and Zou, 2022; Li et al., 2023; Kumar et al., 2024). For the time being, we assume the existence of an oracle capable of solving the inner maximization problem. We will provide further discussions and algorithms for addressing the inner problem in Section 5.\nWe refer to our proposed policy gradient scheme as Double-Loop Robust Policy Gradient (DRPMD), summarized in Algorithm 1. The term \u201cdouble-loop\" aligns with established terminology in the game theory literature (Nouiehed et al., 2019; Thekumparampil et al., 2019; Jin et al., 2020; Zhang et al., 2020), indicating that the algorithm operates within two nested loops. Specifically, DRPMD iteratively searches for an optimal policy in (10) by taking steps along the policy gradient. At each iteration $t$, Algorithm 1 performs an inner update to seek an approximate worst-case transition kernel $p_t$, solving the inner maximization problem to a specified precision $\\epsilon_t$. Once $p_t$ is computed, DRPMD proceeds to minimize $J_p(\\pi^{\\theta}, p_t)$ while incorporating a distance term $D(\\theta, \\theta_t)$, ensuring that the updated parameter $\\theta_{t+1}$ remains close to $\\theta_t$. It is worth emphasizing that the only first-order information utilized by DRPMD to solve (10) is the partial derivative $\\nabla_{\\theta}J_p(\\pi^{\\theta}, p)$. As a result, the non-differentiability of $\\Phi(\\theta)$ does not impede the implementation of DRPMD.\nWhen the tolerances $\\{\\epsilon_t\\}_{t>0}$ are appropriately chosen, DRPMD can efficiently compute a near-optimal policy with guaranteed global convergence. The adaptive tolerance sequence $\\{\\epsilon_t\\}_{t>0}$ is inspired by prior work on algorithms for RMDPs (Ho et al., 2021). The subsequent convergence analysis offers further guidance on suitable choices for $\\epsilon_t$. This adaptive approach not only ensures convergence but also significantly accelerates the algorithm, as demonstrated by our experimental results in Section 6. In contrast, such an adaptive scheme is not considered in other policy gradient algorithms studied within the context of zero-sum games and robust MDPs (Nouiehed et al., 2019; Thekumparampil et al., 2019)."}, {"title": "4.1 Global Optimality: Direct Parameterization", "content": "We commence our analysis with the direct policy parametrization", "divergences": "n$\\pi_{t+1"}, "in \\underset{\\pi \\in \\Pi}{\\text{arg min}} \\{a_t(\\nabla_{\\pi}J_p(\\pi_t, p_t), \\pi) + D(\\pi, \\pi_t)\\} $\n$= \\underset{\\pi \\in \\Pi}{\\text{arg min}} \\{a_t(\\nabla_{\\pi}J_p(\\pi_t, p_t), \\pi) + \\frac{1}{\\eta_t} B_{\\eta_tP_t}(\\pi, \\pi_t) \\},$ (11)\nwhere $a_t > 0$ is the step size and $B_{\\mu}(\\pi, \\pi')$ is defined as a weighted Bregman divergence function, that is for any $\\mu \\in \\Delta^S$,\n$B_{\\mu}(\\pi, \\pi') := \\mathbb{E}_{s \\sim \\mu} [B(\\pi_s, \\pi'_s)"], "pi'_s)": "h(\\pi_s) - h(\\pi'_s) - (\\nabla h(\\pi'_s)", "h": "Delta^A \\to \\mathbb{R"}, {"pi'_s)": "frac{1"}, {"divergence": "generated by the negative entropy", "i.e.,\n$h(\\pi_s)": "sum_{a \\in \\mathcal{A"}, {"pi'_s)": "sum_{a \\in \\mathcal{A"}, {"pi_t": "pi_{t,s})_{s \\in \\mathcal{S}} \\in (\\Delta^A)^S$ can be represented as\n$\\pi_{t+1} = \\underset{\\pi \\in \\Pi}{\\text{arg min}} \\{ \\frac{1}{1 - \\gamma} \\sum_{s \\in \\mathcal{S}} d^p_t(s) (a_t (q^{\\pi_t, p_t}_{sa}, \\pi_s) + B(\\pi_s, \\pi_{t,s})) \\},$\nwhich can be further decoupled to multiple independent mirror descent updates across states, taking the form as\n$\\pi_{t+1,s} = \\underset{\\pi \\in \\Delta^A}{\\text{arg min}} \\{a_t (q^{\\pi_t, p_t}_{sa}, \\pi_s) + B(\\pi_s, \\pi_{t,s}) \\}, \\forall s \\in \\mathcal{S}.$\nIt is worth noting that while SE distance is chosen, the mirror"}]