{"title": "Neuroevolution Neural Architecture Search for Evolving RNNs in Stock Return Prediction and Portfolio Trading", "authors": ["Zimeng Lyu", "Amulya Saxena", "Rohaan Nadeem", "Hao Zhang", "Travis Desell"], "abstract": "Stock return forecasting is a major component of numerous finance applications. Predicted stock returns can be incorporated into portfolio trading algorithms to make informed buy or sell decisions which can optimize returns. In such portfolio trading applications, the predictive performance of a time series forecasting model is crucial. In this work, we propose the use of the Evolutionary eXploration of Augmenting Memory Models (EXAMM) algorithm to progressively evolve recurrent neural networks (RNNs) for stock return predictions. RNNs are evolved independently for each stocks and portfolio trading decisions are made based on the predicted stock returns. The portfolio used for testing consists of the 30 companies in the Dow-Jones Index (DJI) with each stock have the same weight. Results show that using these evolved RNNs and a simple daily long-short strategy can generate higher returns than both the DJI index and the S&P 500 Index for both 2022 (bear market) and 2023 (bull market).", "sections": [{"title": "1 Introduction", "content": "In the field of finance and particularly in the context of time series analysis, predicting stock returns is generally considered more feasible and common than predicting absolute stock prices for the following reasons: first, the statistical properties such as the mean, variance, and autocorrelation of stock returns tend to be stationary over time, which makes them feasible for statistical and machine learning models [48]. Second, stock return is a relative measure, therefore more meaningful for investors who are more interested in percentage changes in investments. Third, investors are generally more interested in returns than absolute stock prices because stock returns directly relate to portfolio performance and risk management [21].\nStock return prediction is crucial for numerous finance applications. Predictive analytics in stock returns significantly aids in optimum asset allocation and risk-adjusted portfolio construction [11]. Furthermore, it plays a crucial role in risk managements, where forecasts are integral for metrics such as Value at Risk (VaR) and Conditional Value at Risk (CVaR) to estimate potential portfolio losses under varying market conditions [45]. Additionally, algorithmic trading strategies leverage return predictions to execute high-volume, high-speed trading strategies[3]. On a corporate scale, return forecasts influence strategic financial decision making including timing for market entries or exits, capital restructuring, and planning mergers or acquisitions [22]. Moreover, it opens new perspective into making macroeconomic forecasting and analysis under the predicted market and economic conditions [39].\nIn portfolio algorithmic trading, predicted stock returns are crucial for making informed high-frequency buy or sell decisions to optimize returns. These applications can simply be divided into two principal components. The first component is the predictive model, which needs to be adapt at processing and analyzing large volumes of high-frequency stock data to forecast stock returns. The second component is the portfolio trading strategy, which utilizes the predicted returns of each stock within the portfolio to make trading decisions. The goal of this method is not only maximize profit but also meticulously manage risk. Therefore the predictive performance of time series forecasting models is crucial for such portfolio trading algorithms as the prediction performance directly affects the portfolio trading returns.\nDesigning robust time series forecasting models using neuroevolution for each stock within a portfolio was investigated. The predictive performance of these models had a direct impact on the trading returns of the portfolio. Preliminary work explored potential of neuroevolution (NE) neural architecture search (NAS) to evolve recurrent neural networks (RNNs) using the Evolutionary eXploration of Augmenting Memory Models (EXAMM) algorithm [33], which is capable of generating reliable stock return predictions to enable increased profits through simple trading strategies. We constructed a portfolio consisting of equally weighted companies across the thirty companies listed on the Dow-Jones Industrial Index (DJI), and RNNs were evolved for each of the DJI companies individually for predicting returns."}, {"title": "2 Related Work", "content": ""}, {"title": "2.1 Stock Prediction", "content": "Time series stock prediction employs a variety of methods ranging from traditional statistical models, such as autoregressive integrated moving average (ARIMA) [40] and autoregressive conditional heteroskedasticity (ARCH) [41], to more advanced machine learning techniques, as the classical and traditional statistical models generally fail to capture the complex, non-liner dynamics in stock data. Those models often require data to be stationary and cannot handle sudden shifts in volatility [24]. On the other hand, machine learning models offer several advantages that address these limitations. They are capable of capturing non-linear relationships, dynamically learning from non-stationary data. They excel in handling large volumes of noisy data and can detect complex patterns that are often missed by traditional models[25]. Selvin et al.demonstrated even basic machine learning models outperform classical methods [41]. Recent research in deep learning, provides more reliable predictions in volatile market conditions after major disruptions like the COVID-19 pandemic [15].\nRNNs are commonly used for time series predictions, such as stock price, stock or market trends, and stock returns. Smith et al. [44], Pawal et al. [37], and Ghosh et al. [18] make stock price predictions with long-short term memory recurrent neural networks (LSTM-RNN). Stock market trends have also been be predicted using RNNs [54] and LSTMs [51] [17]. Zhang et al.have even incorporated deep belief networks (DBN) with LSTM networks to forecast stock price movement [53].\nAlongside these researches, there has been growing interest in applying genetic and evolutionary algorithms to the field of stock market prediction. Genetic algorithms offer a different approach to model optimization, relying on principles of natural selection and genetics to evolve solutions over successive generations [31]. For instance, Chung and Shin [9] introduced an efficient genetic algorithm-based approach for feature selection in stock market prediction, as have Xie et al. [50]. Jozefowicz et al.conducted empirical studies demonstrating the effectiveness of genetic algorithms in optimizing the hyperparameters of deep neural networks for financial forecasting [23]. Thakkar et al.applied information fusion-based genetic algorithm for stock price and trend prediction [47]. Chen et al.used combination of genetic algorithm feature selection with LSTM networks for stock predictions [8]."}, {"title": "2.2 Financial Decision Making", "content": "Neuroevolution and neural architecture search are less commonly used for financial market tradings and financial decision making. Nadkarni et al.combined neuroevolution and principal component analysis (PCA) to make trading decisions in financial market [32]. Consunji et al.designed a neuroevolution algorithm called EvoTrader that evolves neural networks to predict future market price movements for bitcoin trading [38]. Slimene et al.used neuroevolution to evolve neural networks for early financial distress prediction of Tunisian companies [4].\nThe predictive ability of RNNs can also aid in portfolio trading and portfolio optimizations. Cao et al.proposed online portfolio analysis for high frequency trading with RNNs [6]. Ta et al.utilized LSTM networks to make portfolio optimization based stock movement predictions [46]. Zhang et al.proposed an optimal hedging strategy using LSTM-RNN [52]. Ma et al., Cao et al., and Sen et al.implemented portfolio optimization models using deep learning RNN and LSTM models [29][5][42]. Time series forecasting models are also used in other financial decision making applications, such as online fraud detection on transactions using RNNs [49], risk management for automatic trading systems using LSTM [43], foreign exchange rate forecasting using RNNs [13], and economic factors forecasting with RNNs [34]."}, {"title": "3 Method", "content": ""}, {"title": "3.1 EXAMM", "content": "In comparison with other work, this work utilizes the Evolutionary eXploration of Augmenting Memory Models (EXAMM) neuroevolution algorithm [33] to evolve RNNs to make stock return predictions. EXAMM evolves progressively larger RNNs through a series of mutation and crossover (reproduction) operations from minimal seed networks that only contain input to output connections. The population of RNNs is distributed across distinct islands where genomes in each island are evolved independently to preserve gene diversity, and periodically perform inter-island crossover for information exchange. New genomes are generated through 11 types of mutations and 2 types of crossovers [33]. Weights of new generated genomes were inherited from parents to significantly reduce the amount of training needed [27]. Islands are repopulated periodically to prevent the performance of islands become stagnant [28].\nCompared to other time series forecasting models, the uniqueness of EXAMM comes from the flexibility in evolving networks using node and edge level mutations along with inter- and intra-island for genome reproduction, and as well as its weight inheritance method which allows generated genomes to effectively inherit parents' weights to achieve good fitness without requiring a large number of training epochs [27]. The combination of using memory cells, recurrent edge connections, and weight inheritance make it extremely well suited for generating RNNs for time series forecasting models. The flexibility of choosing different types of mutations and crossovers during the evolutionary process allows it to evolved RNNs that are specifically tailored for each stock, and has the potential to custom evolve RNNs for hundreds or even thousands of stocks without hand redesigning and tuning them."}, {"title": "3.2 Portfolio Trading Strateges", "content": ""}, {"title": "3.2.1 Long-Only Strategy", "content": "A simple trading strategy is long-only strategy, where all stocks are bought with cash and no short selling is allowed. In the long-only strategy, a stock is purchased when the predicted stock return is positive, and that position is held until the predicted return for the stock becomes negative. Algorithm 1 shows the simple portfolio long-only strategy. At time t, first sell any previously bought stocks if their predicted return is negative to allocate capital. Then buy all stocks with predicted positive returns with the currently available capital. Since stocks have equal weight in the portfolio, we use an equal amount of capital to purchase each stock. At time t, the capital to invest in stock i is the available cash amount at time t divided by the total number of stocks that have positive predicted stock return:\nCapital[t, i] = CashAmount[t]/Count(StocktoInvest [t]) (1)\nAt the end of the testing period, all holdings are liquidated and which is used to calculate the overall investment return. The portfolio trading return is calculated by:\nReturn = (C1-Co)/Co (2)\nIn the equation above, $C_o$ is the total initial capital for investments. At the end of the testing period, all stock holdings are cleared and $C_1$ is the overall cash collected at the end of the testing period.\nThe success of using long-only strategy is based on the expectation that the stock price of invested stocks should gradually increase, so that they will eventually generate positive investment returns. However the Long-only investment strategies inherently pick up market risk and are fully exposed to market fluctuations [12]. During a bull market, the long-only strategy typically outperforms the market with significant gains. However, during a bear market, such a strategy can lead to significant loss [14]."}, {"title": "3.2.2 Daily Long-Short Strategy", "content": "The daily long-short trading strategy is more commonly used in finance literature [20, 35]. Compared to a long-only strategy, a daily long-short strategy offers enhanced risk management by hedging against market volatility. This strategy is capable of generating returns in both bull and bear markets by taking long positions in stocks expected to appreciate in value and short positions in those expected to depreciate.\nIt is commonly practice to allocate (or borrow) 50% of the total investment portfolio to capital designated for short selling. For example, if the initial investment capital is $100, an equivalent amount of $100 can be allocated for short selling, culminating in a total investment portfolio valued at $200. Therefore 50% of the $200 is allocated for short selling. Algorithm 2 demonstrates such simple long-short trading strategy. We first define the hyperpa-rameters NumStocksLong as the number of stocks to long, and NumStocksShort as the number of stocks to short.\nAt the beginning of time [t], the portfolio is sorted by predicted stock returns. Transactions are only executed at time [t] if all NumStocksLang stocks demonstrate a positive predicted return, and all NumStocksShort stocks demonstrate a negative predicted return. If those conditions are met, first all current positions are liquidated, which includes selling any held stocks and repaying shares that were borrowed for short selling. Based on the available capital at time [t], the amount of capital for taking long positions and short selling is then calculated."}, {"title": "4 CRSP Dataset", "content": "The Center for Research in Security Prices (CRSP) dataset is a comprehensive collection of data on the U.S. stock market. It contains all stocks on the NYSE, AMEX, and NASDAQ, and covers wide range of market indexes, open-end mutual funds, exchange-traded funds (ETFs), U.S. Treasury securities, and corporate bonds. CRSP data is known for its high level of accuracy and is highly reliable for academic research and financial modeling [7, 26]. CRSP data has a long historical range from December 1925 to present, with daily, monthly, quarterly, and annual data. The dataset contains valuable variables for financial research such as stock prices, returns, trading volumes, and dividend yields."}, {"title": "4.1 Portfolio Selection", "content": "In portfolio trading related literature, the portfolios used for testing generally contains hundreds or even thousands of stocks [2] [35], and the most commonly used portfolios include the S&P 500 index and the Russell 1000 index. As this work focus on testing forecasting ability of EXAMM in predicting stock returns and maximizing returns on the simple portfolio trading strategies, we instead use the companies from a small yet well-known index - Dow-Jones Industrial Average (DJI) as our portfolio.\nIn particular, we use the 30 Dow Jones Industrial Average (DJI) companies before the index change which occurred on Feb 26th 2024 as our portfolio. The current companies in the Dow Jones Industrial Average (DJI) include a diverse range of sectors from technology to healthcare. Some of the notable companies are the Microsoft Corporation, Apple Inc, JP Morgan Chase & Co., Visa Inc., Walmart Inc., United Health Group Incorporated, The Procter & Gamble Company, Johnson & Johnson, and The Home Depot, Inc. Other companies in the index are Merck & Co., Inc., Chevron Corporation, Salesforce, Inc., The Coca-Cola Company, The Walt Disney Company, Cisco Systems, Inc., McDonald's Corporation, Caterpillar Inc., Verizon Communications Inc., International Business Machines Corporation, American Express Company, Intel Corporation, Amgen Inc., NIKE, Inc., Walgreens Boots Alliance Inc., (WBA) Goldman Sachs Group, Inc., Honeywell International Inc., The Boeing Company, The Travelers Companies, Inc., 3M Company, and Dow Inc.\nThe DJI index is a price-weighted index, which means that companies with higher stock prices have more influence on the index's performance regardless of the actual size or market capitalization of the company. In our experiments, the portfolio is consisted of the 30 DJI companies and each company instead has equal weight in the portfolio, as we are investigating the overall performance of our methodologies."}, {"title": "4.2 Predictors", "content": "We choose 7 economic predictors that are associated with stock returns in stock data. Those predictors are directly obtained from the CRSP dataset or calculated by using variables form CRSP dataset. The 7 predictors are shown in table 1.\nReturn is the percentage change of stock price from time [t - 1] to time [t], which in the case of this data is day-to-day, it is also the forecasting output parameter. Volume Change is the percentage change of stock trading volume from time [t - 1] to time [t]. Bid-Ask Spread measures the difference between the highest price buyers are willing to pay (Bid) and the lowest price the sellers are willing to sell (Ask), and the Ask price is usually higher than the Bid price. Illiquidity measures if the stock can easily be sold for cash."}, {"title": "4.3 Datasets", "content": "The length of historical data for each of the DJI companies are different, but more than half of the 30 DJI companies' historical stock data are available in CRSP dataset since late 1992. We use the year of 1992 as the starting year of the training data. As newer companies such as Amazon Inc. and VISA Inc. do not have historical stock data going back to the late 1990s or 2000s, we then use the stock data from whenever it became available.\nThe actual market return on DJI index is -8.78% in the year of 2022 and 13.7% in the year of 2023, which provide a good avenue for into the stock return performance and its affect in portfolio trading returns for both bull and bear years. We created two datasets to test the performance of stock return predictions. The first dataset contains stock data from 1992 to 2020 as training data, stock data in year 2021 as validation data, and stock data in 2022 as testing data. The second dataset contains training data from 1992 to 2021, validation data from year of 2022, and testing data from year of 2023. For simplicity, we name the two datasets by the year of the testing data. The first dataset is called the 2022 DJI company dataset, and the second dataset is called the 2023 DJI company dataset.\nFor both datasets, the validation and testing data are the stock data of an entire calendar year, which is 250 to 252 data points. The length of training data varies among different companies. For example, in the 2022 DJI company dataset, Walgreens Boots Alliance Inc. has 1511 rows of training data, and Apple Inc has 7306 rows of training data."}, {"title": "5 Results", "content": ""}, {"title": "5.1 Experiment Setup", "content": "Each EXAMM run for each stock was repeated 10 times using [REMOVED FOR REVIEW]'s research computing systems. This system consists of 2304 Intel\u00ae Xeon\u00ae Gold 6150 CPU 2.70GHz cores and 24 TB RAM, with compute nodes running the RedHat Enterprise Linux 7 system. Each EXAMM run utilized 16 cores.\nEach EXAMM run used 10 islands, each with a maximum capacity of 10 genomes. Recurrent connections could span any time-skip generated randomly $U(1, 10)$. Backpropagation (BP) through time was run with a learning rate of n = 0.001 and used Adam momentum with $\\mu$ = 0.9. Each generated RNNs was trained for 20 BP epochs. Gradient boosting and gradient scaling [36] were used when the gradient norm was below the threshold of 0.05 or above the threshold of 1.0. RNNs were evolved for each of the 30 DJI companies for both 2022 and 2023 DJI company datasets with the RNN that achieved the best validation performance across the 10 repeated EXAMM runs for the stock being selected, resulting in a total of 60 unique RNNs for stock return predictions.\nFor each DJI company, fully connected two-layer LSTM, GRU, MGU models were also trained using 1000 back-propagation epochs, with Adam as the optimizer and a learning rate of n = 0.0001. The two-layer memory cell models had two hidden layers of memory cells, fully connected with the number of hidden layers equals to the input layer size. The initial weights for those models were generated randomly using Xavier weight initialization, and the models with highest validation performance over the 10 repeated training runs were selected for testing.\nTo compare EXAMM's predictive performance with time series forecasting models, we conducted experiments with support vector regression (SVR), random forest regressor (RF), AutoRegressive integrated moving average (ARIMA), and autoregressive recurrent networks (AR). The hyperparameters for those models were tuned using Python's hyperprameter tunning package OPTUNA [1] using the validation data. Testing Returns are reported based on the best validation results over 10 repeated training runs."}, {"title": "5.2 Transaction Costs", "content": "Transaction costs refer to the costs associated with buying or selling stocks. There are two simple ways to calculate the transaction fees. The first is to use (Bid-Ask)/2 as a proxy for transaction costs and apply that transaction cost when selling or buying a stock [10]. When selling a stock, SellingPrice = StockPrice \u2013 (Bid \u2013 Ask)/2, when buying a stock, BuyingPrice = StockPrice + (Bid \u2013 Ask)/2. The second way to incorporate a transaction fee is to buy the stock with the Ask price and sell with the Bid price. The transaction cost is incorporated in stock transactions when purchasing with a higher stock price (Ask) and selling with a lower stock price (Bid).\nThe DJI companies generally have high trading volumes and high liquidity. High liquidity typically results in narrow bid-ask spreads because there are more buyers and sellers. And transaction fees are extremely low compared to its stock price. For example, the average stock price for Apple Inc in 2023 is $172.55, and the average transaction fee calculated by (Bid - Ask)/2 is $0.08.\nTable 2 shows the portfolio trading return using the simple long strategy using 2022 and 2023 DJI company datasets. The first column [RET(%)] shows the portfolio trading return without incorporating any transaction costs. The second column [RET w/ TC1(%)] shows the portfolio trading return using (Bid \u2013 Ask)/2 as transaction cost for each trade. The third column [RET w/ TC2(%)] shows the portfolio return using Ask price to buy and Bid price to sell. From this table we observe that using the same dataset and the same trading strategy, the effects of transaction costs on stock returns are minimal, using either way of incorporating them. Due to this, for our results we do not not incorporate transaction costs in the experiments of the following sections."}, {"title": "5.3 Return Prediction Performance", "content": "Table 3 shows the portfolio returns using the simple long-only strategy in Algorithm 1. The trading decisions were made using the different forecasting methods on both the 2022 and 2023 DJI company datasets. Tables 3 and 4 show that the portfolio returns using RNNs evolved by EXAMM for predictions are generally higher than the other time series forecasting methods in both 2022 and 2023. In 2022, the DJI index return is -8.78% and EXAMM predictions incorporating long-only strategy return is -9.44%, while using predictions generated by GRU result in portfolio return of -8.38%, slightly higher than DJI index return and EXAMM predictions. As discussed in Section 3.2.1, a negative return is inevitable in a bear market. Trading decisions made with any forecasting models will end up having negative investment return using the long-only strategy. However, in 2023, the DJI index return was 13.7% and the S&P 500 index return was 26.29%. Trading decisions made by EXAMM generated RNNs resulted in returns significantly higher than both DJI index and S&P 500 market index only using DJI's 30 high liquidity companies. Trading decisions made by other forecasting models, such as MGU, GRU, ARIMA, and RF, only generated returns that were higher than DJI index."}, {"title": "5.4 Portfolio Long-Short Strategy", "content": "Tables 5 and 6 present the results of employing a simple long-short portfolio trading strategy, which utilizes various stock quantities for daily investments and short selling. This strategy mitigates risk factors across both bull (2023) and bear (2022) market conditions.\nIn table 5, returns higher than the 2022 DJI index return of -8.78% are highlighted in bold. Given that 2022 was a bear market, the S&P 500 index exhibited a decline of -18.11%. Thus, returns exceeding this threshold are not distinctly marked, as the majority of the results in the table outperformed the S&P 500 index. Notably, engaging in more short selling in 2022 yielded returns that not only surpassed market averages but also generated substantial profits in a declining market environment.\nTable 6 highlights returns that are higher than the 2023 DJI index return of -13.70% in bold. Additionally, returns surpassing the 2023 S&P 500 index of 26.29% are highlighted in green. Optimal results were generally observed when the portfolio allocated between 10% to one-third of its total size to long positions and short selling, producing profits that consistently outperformed the market indices.\nFurthermore, integrating stock return forecasts derived from EXAMM-evolved RNNs with simple long-short trading strategies outperform the market benchmarks in both 2022 and 2023, employing only 30 high liquidity stocks. These results underscore the significant potential of using EXAMM to evolve RNNs for stock return predictions, thereby enhancing the informed decision-making process in portfolio trading for investments."}, {"title": "6 Conclusion", "content": "This work investigated using neuroevolution to evolve and train time series forecasting recurrent neural networks for stock return predictions in combination with basic stock trading strategies. The RNN models were evolved for each DJI company independently on two datasets prepared for forecasting of the DJI companies' 2022 and 2023 returns, without manually designing or tune the hyperparameters specifically for each model. This significantly reduced the amount of human effort in designing and optimizing these models for each company, and also opens up the opportunity for extending this work to larger portfolios such as the S&P 500 and S&P 1500 companies.\nIncorporating simple long-short strategies with the stock return predictions generated by EXAMM evolved RNNs generated significantly higher returns than other time series forecasting models, as well as the DJI index returns. Note that it is more difficult to generate high returns with only 30 high liquidity companies. This is especially for long-short strategies, as the companies are less likely to reduce in value. Further returns could be gained by using custom portfolios which could, for example, add 30 low or medium liquidity companies to allow more potential for short selling generating increased returns. Further, there is the opportunity to evolve, design and train TSF RNNs which incorporate data from all companies simultaneously, as this could allow them to incorporate correlation between company prices into the forecasts. Finally, returns could potentially be further improved the design of more advanced strategies for buying, selling, shorting and holding stocks, which could be developed using machine learning methods such as reinforcement learning or markov decision processes.\nLastly, the stock market is highly volatile and challenging to accurately forecast, especially when only incorporating time series data. Other external information such as interest rate changes, quarterly business reports and general consumer sentiment can highly influence the performance of a stock. Designing hybrid methods which can incorporate other sources of information could result in better forecasts. Further, we investigated validating our models on a year of data, and tested them without adapting weights or parameters for an additional year, which is an extremely long time for stock forecasting. Refining and updating the models more frequently (e.g., monthly or weekly) or utilizing online forecasting methods could also further improve results."}]}