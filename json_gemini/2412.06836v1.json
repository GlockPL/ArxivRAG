{"title": "GRUvader: Sentiment-Informed Stock Market Prediction", "authors": ["Akhila Mamillapalli", "Bayode Ogunleye", "Sonia Timoteo Inacio", "Olamilekan Shobayo"], "abstract": "Stock price prediction is challenging due to global economic instability, high volatility, and the complexity of financial markets. Hence, this study compared several machine learning algorithms for stock market prediction and further examined the influence of a sentiment analysis indicator on the prediction of stock prices. Our results were two-fold. Firstly, we used a lexicon-based sentiment analysis approach to identify sentiment features, thus evidencing the correlation between the sentiment indicator and stock price movement. Secondly, we proposed the use of GRUvader, an optimal gated recurrent unit network, for stock market prediction. Our findings suggest that stand-alone models struggled compared with Al-enhanced models. Thus, our paper makes further recommendations on latter systems.", "sections": [{"title": "1. Introduction", "content": "The general public are increasingly interested in stock market prediction and, more specifically, the traders, investors, and decision-makers [1]. This is due to their interest in making informed and strategic decisions on their financial stock business, investments, and intentions to invest. The stock market influences the economic growth of every nation, enabling the buying and selling of investments, which supports businesses and boosts the economy [2]. Therefore, accurate stock market prediction is vital to understand the market and mitigate investment loss. Recent advancements in technology and machine learning (ML) techniques have improved stock market prediction [1]. However, due to the unpredictive nature of stock markets, the influence of external factors, and the high complexity and volatility (short-term fluctuations and long-term trends), enabling a more stable and accurate prediction of stock markets is challenging. Traditional models like autoregressive integrated moving average (ARIMA) have shown effectiveness in short-term forecasting [3]. ARIMA is useful for capturing trends and seasonality [4]; however, it is limited when capturing complex and non-linear relationships. Furthermore, theories like the efficient market hypothesis (EMF) and random walk theory suggest that historical data are insufficient when predicting stock prices because the prices randomly change and are influenced by external factors such as financial news [5]. Improvements in AI have led to the application of neutral-network-based prediction models such as recurrent neural networks (RNNs) and convolutional neural networks (CNNs), which are effective with time series data but face challenges with unstructured (text) data [6,7].\nRecent studies have emphasized the importance of incorporating textual data because investor sentiment or external events (for example, Brexit and COVID-19) significantly impact stock price movement [8]. Previous studies [9-11] have explored various ML models for stock prediction, incorporating the text data sentiment. However, these models exhibited low performance for predicting stock prices. Further to this, our literature synthesis (presented in Section 2) indicates that only a few methodologies were robust to exogenous variables from sources such as financial news, company news, market sentiment, public opinion, and investor sentiment. In addition, the literature review findings suggest that despite extensive studies on the application of ML algorithms in this context, optimal stock prediction models are limited. For example, [11] used a regression model to predict stock movement based on a sentiment indicator, but did not clarify which stocks were analyzed and no information was provided about exogenous features towards the behavior of the target variable. Additionally, there was no comparison conducted against other models, nor was optimality achieved.\nTo this end, our study aims were to develop a stock price prediction model and deter-mine the influence of public sentiment. To achieve this, the study formulated this problem as a regression task. In doing so, we utilized the stock dataset collected by Yukhymenko [11] from 30 September 2021 to 29 September 2022 and compared our approach with several state-of-the-art (SOTA) stock price prediction models, including traditional methods like ARIMA. Therefore, our results were two-fold. The first results were those from the experi-ment conducted to compare ML algorithms using the stock price dataset only. The second results were those from the experiment that incorporated public sentiment. The latter experiment helped to provide information on the behavior of exogenous features towards stock price. Based on our comprehensive experimentation, we identified that GRUvader was the best-performing stock prediction model. This paper confirmed that GRUvader has a simple architecture (which is fast, computationally inexpensive, and adaptable to noisy data) and can serve as a general-purpose stock price prediction model. This implied that GRUvader could detect sentiment from different stock-related text datasets and, most importantly, would be efficient at handling sequential data for short- and long-term stock price forecasting. The results of this study not only offer insights into the comparative ef-fectiveness of different ML techniques, but also provide valuable guidance for the selection of optimal models based on specific data characteristics. Specially, the findings identified the model with superior accuracy, providing useful insights for stock market stakeholders regarding the key drivers of stock prices. The remainder of this paper is organized into four primary sections. Section 2 focuses on the literature review, Section 3 outlines the methodology, the following sections present the results, and the final section provides conclusions and recommendations for future research."}, {"title": "2. Related Works", "content": "Stock price movement can be modelled in several ways. There are two popular con-cepts to this. The first is to model a classification task where the direction of the movement of stock prices can be predicted as \u201cup\u201d or \u201cdown\u201d. The second is to predict the stock prices by formulating the problem as a regression task. The former approach is suitable for decision-making processes, especially when beneficiaries are only interested in stock movement indicators. A popular ML algorithm for this approach is logistic regression [12]. The latter approach is more beneficial because it provides an understanding of financial gains or losses in the form of estimates and, therefore, it is more popular. Predicting stock prices provides valuable insights into financial market trends, guides investment decisions, and supports the development of effective financial strategies. Studies like [13-18] have highlighted the reliance of investors and portfolio managers on stock price prediction to make informed investment decisions. Accurate stock price prediction allows investors to proactively adopt their portfolios, capitalize on emerging opportunities, and strategically manage risks, ultimately resulting in more robust investment outcomes. Conventional statistical learning algorithms such as linear regression have been used to model stock price movement [19]. Further to this, other techniques like the moving average [20] and exponential smoothing [21] have also been applied. Moreover, time series models such as generalized autoregressive conditional heteroskedasticity [22,23] and ARIMA [24] have been extensively used. However, these models have been criticized for their limitations regarding model complex patterns within the stock price dataset [25].\nMore recently, advancements in technology have led to the development and appli-cation of ML algorithms for stock price prediction. These ML algorithms-ranging from traditional ML algorithms (K-nearest neighbor [26], support vector regression [27], decision tree [28], random forest [29], and XGboost [30]) to deep learning algorithms (RNN [31], LSTM [32], Bi-LSTM [33], GRU [34], Bi-GRU [35], and GAN [36])-have been used to model stock price movement. In a comparative experimental study, the authors of [37] showed that feed-forward neural networks yielded better results compared with ARIMA and ARIMAX. Furthermore, the long short-term memory (LSTM) network introduced by [38] is a type of RNN designed to effectively manage both long-term and short-term dependencies. Several studies have demonstrated the effectiveness of LSTM in stock pre-diction. For example, the authors of [39] showed that attention-based LSTM outperformed conventional LSTMs in predicting stock market movements. Study [40] showed that LSTM could be used to enhance predictive performance by leveraging both past and future se-quences in a time series. Similarly, the authors of [41] combined Bi-LSTM with a CNN, showing a 9% improvement in prediction performance compared with single pipeline models. The authors of [42] proposed a simple GAN model with LSTM as a generator and a CNN as the discriminator, incorporating 13 technical indicators, and demonstrated that the generative adversarial network (GAN) outperformed other models like LSTM, artificial neural network (ANN), support vector machine (SVM), and ARIMA for stock price prediction. Ref. [43] used a GAN with an LSTM generator and a multiple perceptron (MLP) discriminator, outperforming traditional a model based on RMSE and MAE. The authors of [44] proposed a gated recurrent unit (GRU) with LSTM and a dropout layer to model stock prices based on historical data from S&P 500. Their results demonstrated better performance compared with the RNN, CNN, and other ensembled techniques. Further to this, study [45] indicated that integrating news data with stock data and feeding them into a GRU model led to enhanced prediction results, surpassing LSTM models in accuracy. The authors of [46] combined a GRU and LASSO dimensionality reduction, achieving improved accuracy for stock price prediction using data from the Shanghai Composite Index.\nMore recently, the authors of [47,48] emphasized the influence of financial news and investors' words on stock price movement. They further stated that stock price prediction was more challenging due to these constraints and, as such, the researchers considered modelling stock price movement by integrating sentiment indicators and financial stock price datasets. A sentiment indicator can be obtained by performing a sentiment analysis of financial news or the words of stakeholders/investors. A sentiment analysis is the process of classifying emotions or opinions, expressing natural language into categories such as positive, negative, and neutral [49-51]. The authors of [40,47,48] asserted that the sentiment analysis of financial news or stakeholder/investor comments is crucial for the forecasting of stock trends. The importance of sentiment analyses for stock prediction has been emphasized in previous studies. For example, the authors of [8] incorporated investor sentiment to predict the CS1300 index using LSTM. The LSTM model outperformed the traditional time series models for financial data. Moreover, the authors of [52,53] demonstrated how incorporating a lexicon-based sentimental analysis of financial news with historical stock data could effectively predict market trends for indices like DIJA and S&P 500. Similarly, [54] found that combining a sentiment analysis with stock data to model stock, particularly a CNN, produced good results. The authors of [55] showed the efficiency of using support vector regression (with multiple kernel learning) and SentiWordNet to model stock price movement. Further to this, study [11] used a GAN to model stock prices; however, their study failed to provide details on the influence of the sentiment indicator utilized. To conclude, it is worth stating that the majority of these studies ignored the use of hyperparameter tuning. In addition, most existing studies did not provide explicit or comprehensive details of the sentiment score implemented. As such, it is difficult to assess the reliability and efficiency of the models."}, {"title": "3. Methodology", "content": "This paper proposed the use of GRUvader for stock price prediction. In doing so, we compared GRUvader with a traditional time series model (namely, ARIMA) and state-of-the-art ML models. The selection of the ML algorithms was based on their performances shown in the stock market prediction literature, as reviewed in the previous section. In subsequent sections, this study presents details of the datasets and our approach."}, {"title": "3.1. Datasets", "content": "This study used two datasets to model stock market prediction. The first was the stock price dataset and the second was the text data. Below, we provide an overview of the datasets."}, {"title": "3.1.1. Stock Price Dataset", "content": "The stock price dataset was collected by Yukhymenko [11]. This dataset has been extensively used in the literature [9,56] to model stock prices. The dataset contains the daily information of 25 companies from 30 September 2021 to 29 September 2022. The dataset includes 6300 observations over eight features (namely, date, open, high, low, close, adjusted close, volume, and stock name). The data were collected only on weekdays (Monday to Friday), and no missing values were found. The companies represented in the dataset were Tesla (TSLA), Microsoft (MSFT), Amazon (AMZN), Google (GOOG), Apple (AAPL), Netflix (NFLX), Taiwan Semiconductor Manufacturing Company Limited (TSM), Coca Cola (KO), Ford (F), Procter & Gamble Company (PG), Costco (COST), Disney (DIS), Verizon (VZ), Salesforce (CRM), Intel (INTC), Boeing (BA), Blackstone (BX), Northrop Grumman Corporation (NOC), PayPal (PYPL), Enphase Energy (ENPH), NIO In (NIO), ZS, and XPeng Inc (ZPEV). Each company contributed approximately 252 records."}, {"title": "3.1.2. Text Dataset", "content": "The text data used in this study were tweets collected from Twitter (currently known as X) by Yukhymenko [11], which contained four attributes (namely, date, tweet, stock name, and company name, as shown in Figure 2). The dataset contained 80,792 observations and, for the purpose of this study, only tweets with more than 10 likes were selected."}, {"title": "3.2. Our Approach", "content": "This paper deployed GRUvader as a hybrid approach for stock price prediction. GRUvader combines the power of a deep learning algorithm and lexicon-based sentiment analysis for prediction. This paper explains the two components below.\nA gated recurrent unit (GRU) is a type of RNN designed as a simple alternative to LSTM networks. A GRU utilizes a gating mechanism that enables it to selectively update its hidden state at each time step, effectively learning both short- and long-term dependencies in sequential data. This makes a GRU effective for applications such as language translation, speech recognition, and time series forecasting. A GRU comprises two gates (namely, a reset gate and an update gate) to control the flow of information. The reset gate is used to determine how much of the previous hidden state should be forgotten. The update gate is used to control how much new information should be added to the hidden state. These gates allow GRUs to selectively retain or discard information, enabling the effective learning of temporal patterns while using fewer parameters than LSTMs, resulting in a simpler and computationally efficient model. Thus, a GRU can be mathematically represented as follows:\nReset Gate ($r_t$) = $(W_r . [h_{t-1}, x_t] + b_r)$ (1)\nUpdate Gate ($u_t$) = $\\sigma (W_u . [h_{t\u22121}, x_t] + b_u)$ (2)\nCandidate Activations ($\\hat{h_t}$) = $tanh(W_h. [r_t * h_{t\u22121}, x_t] + b_h)$ (3)\nOutput ($h_t$) = $(1 - u_t) * h_{t\u22121} + u_t * \\hat{h_t}$ (4)\nwhere $x_t$ is the input vectors at time t; $h_t$ is the new hidden state at time t; $h_{t-1}$ is the previous hidden state; $W_r$, $W_u$, and $W_h$ are the weight matrices for the reset gate, update gate, and candidate activation, respectively; $b_r$, $b_u$, and $b_h$ are the bias vectors for the reset gate, update gate, and candidate activation, respectively; \u03c3 is the sigmoid activation function; and Tanh is the hyperbolic tangent activation function."}, {"title": "3.2.1. Sentiment Analysis", "content": "In this context, a sentiment analysis is the process of classifying public or investor emotions and opinions expressed in text into categories such as positive, negative, and neutral. There are two popular approaches to a sentiment analysis, namely, an ML approach and a lexicon-based approach [49-51]. This study utilized the lexicon-based approach because a supervised ML approach requires a large, labelled dataset for training purposes. Unfortunately, this is not readily available. Based on this, we employed the VADER lexicon to analyze the sentiment of the text data. This helped to measure the exogenous features related to stock. VADER (Valence Aware Dictionary and Sentiment Reasoner) was specifically designed for social media content and uses a lexicon and rule-based approach to analyze the polarity and intensity of emotions. The VADER lexicon comprises 7517 words and phrases, each of which are assigned sentiment scores ranging from -4 to +4. The VADER algorithm breaks down text into tokens and, based on the labels in the lexicon, it assigns an overall sentiment score (normalized compound score) in a range of -1 to +1."}, {"title": "3.2.2. Experimental Setup", "content": "The GRU was implemented in Python using the Keras library (https://colab.research.google.com/, accessed on 9 October 2024). In the GRU architecture, we used two GRU layers. The first layer was a GRU with 50 units and the second layer comprised a dropout layer (20%) to prevent overfitting and an output layer to predict the adjusted closing price. Further to this, we performed hyperparameter tuning on the number of units, dropout rate, and learning rate using a random search approach to minimize validation loss. The optimal model configuration was selected based on the performance with the validation set and training was enhanced using callbacks like EarlyStopping and ReduceLROnPlateau to effectively improve and avoid overfitting. The Adam Optimizer was chosen for training due to its adaptive learning rates and computational efficiency. Adam combines the features of Adagrad and RmSProp, making it suitable for the optimization of non-stationary objectives with sparse gradients, which helps to achieve faster convergences and more stable parameter updates compared with traditional optimizers. Thus, we could summarize our experimentation as follows, and the workflow is presented in Figure 3."}, {"title": "3.3. Evaluation Metrics I", "content": "For the evaluation of the sentiment analysis lexicons, we randomly selected 2000 tweets (1225 positive, 263 neutral, and 511 negative) and manually labelled them as positive, negative, or neutral to create a reference dataset. In cases of disagreement, the tweets were discussed within the team to agree on the label. Thus, the 2000 labelled tweets were used to validate the performance of the lexicons. A confusion matrix was used to evaluate the performance of the lexicons by comparing the actual values with the predicted results. This was useful to calculate the statistical metrics, namely, true-positive (TP), true-negative (TN), false-positive (FP), and false-negative (FN). These metrics could be described as follows:\nTrue-positive (TP): The number of instances where the model correctly predicted a positive outcome.\nFalse-positive (FP): The number of instances where the model incorrectly predicted a positive outcome when it should have been negative.\nTrue-negative (TN): The number of instances where the model correctly predicted a negative outcome.\nFalse-negative (FN): The number of instances where the model incorrectly predicted a negative outcome when it should have positive.\nThe statistical metrics were used to calculate the classification metrics (namely, accu-racy, precision, recall, and F1-score), which could be described as follows:\nAccuracy: Measurement of how often the model correctly predicted the outcome.\nAccuracy = $\\frac{TP + TN}{TP + TN + FP + FN}$ (5)\nRecall: Measurement of the actual positive instances that were correctly predicted by the model.\nRecall = $\\frac{TP}{TP + FN}$ (6)\nPrecision: Measurement of the positive predictions that were actually correct.\nPrecision = $\\frac{TP}{TP + FP}$ (7)\nF1-score: The harmonic means of precision and recall, providing a balance between the two metrics.\nF1 score = 2 \u00d7 $\\frac{Precision \\times recall}{Precision + recall}$ (8)"}, {"title": "3.4. Evaluation Metrics II", "content": "For the evaluation of the regression models, we employed the R-squared, mean square error, and the mean absolute error. These metrics could be described as follows:\nMean absolute error (MAE): The MAE measured the average of the absolute dif-ferences between the predicted and actual values, providing an intuitive reflection of prediction errors.\nMAE = $\\frac{1}{n} \\sum_{i=1}^{n} |y_i - \\hat{y}_i|$ (9)\nMean square error (MSE): The MSE measured the average squared difference between the predicted and actual values, penalizing large errors more than MAE.\nMSE = $\\frac{1}{n} \\sum_{i=1}^{n} (y - \\hat{y^i})^2$ (10)\nAdjusted R-squared: The adjusted $R^2$ values were based on the number of predictors, ensuring it accounted for the model complexity.\nAdjusted - $R^2$ = 1 - $\\frac{\\frac{\\sum{(y - \\hat y)^2}}{n-k-1}}{\\frac{\\sum{(y - \\bar y)^2}}{n-1}}$ (11)"}, {"title": "4. Results", "content": "This section presents our experimental results in a two-fold manner. First, we present the results of the lexicon-based sentiment analysis. Second, we present the stock market prediction results."}, {"title": "4.1. Sentiment Analysis Results", "content": "To choose the best NLP model for the sentiment analysis of tweets, 2000 tweets were randomly selected and manually labelled as positive, negative, or neutral. These manually labelled sentiments were than compared with the predictions from three models (AFINN, TextBlob, and VADER). The models were evaluated based on accuracy, precision, recall, and F1-score, as shown in Table 1."}, {"title": "4.2. Correlation", "content": "Figure 4 shows the correlation coefficients of various stocks. The results indicated that META and TSLA had the highest correlation coefficients, which were moderate. The order was as follows: TSLA (0.44), META (0.44), BA (0.33), PG (0.21), NIO (0.29), AMD (0.30), AAPL (0.15), and PYPL (0.28). The correlation coefficients showed that, in general, the sentiment indicator provided a moderate to low impact on the price movement. However, it is worth stating that the analysis was based on the sentiment scores of daily tweets. Ag-gregating scores on a weekly or monthly basis may have yielded a stronger correlation. The volume of tweets (as shown in Table 2) may also have affected the correlation coefficients. We selected the sentiment indicator variable only to assess if the stock price had any impact on public sentiment."}, {"title": "4.3. Model Performance", "content": "This section presents the results of our experiment on stock prediction using various ML models, both without and with the incorporation of a sentimental analysis. We eval-uated the performance of the models using metrics such as adjusted $R^2$, MAE, MSE, and accuracy. Tables 3 and 4 summarize the evaluation results."}, {"title": "5. Conclusions", "content": "This paper aimed to develop a stock price prediction model with improved perfor-mance. In addition, we examined the influence of exogenous features in the form of public sentiment. In doing so, several ML algorithms, including ARIMAX, LSTM, GRU, Bi-LSTM, Bi-GRU, and GAN, were used to predict stock prices using both historic stock data and sentiment scores derived from tweets. Our results justified that incorporating a sentiment analysis significantly improves the performance of stock model prediction, particularly with GRUvader. However, our experimental findings indicated that sentiment indicators did not improve performance for all algorithms, as was the case for the GAN in this study.\nTo conclude, this paper highlights the importance of exogenous features such as tweets in financial prediction and shows that sentiment indicators can play a crucial role in predicting stock price movement. Theoretically, this study provides evidence that a sentiment analysis can enhance stock prediction models. However, this is not the case for all algorithms. There is a need for continuous comparative studies in this domain due to the ongoing challenges in capturing complex market movement. Thus, this study identifies and outlines future work as follows:\nIn future studies, we aim to develop a compound stock price prediction model that examines and incorporates more exogenous features (such as financial news, financial reports, other social media platforms, and geopolitical event indicators).\nFurther to this, future studies should consider investigating the influence of senti- ments from other assets (for example, sentiments from cryptocurrency text) on stock price movement.\nFuture work should consider integrating specific stock language models and deep learning algorithms to examine the ability of the hybrid approach to manage long-term dependencies and complex patterns.\nThe study also emphasizes the need to extend this methodology to other sectors and explore its potential for identifying market trends during volatile conditions."}]}