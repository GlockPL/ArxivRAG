{"title": "Towards a Knowledge Graph for Models and Algorithms in Applied Mathematics", "authors": ["Bj\u00f6rn Schembera", "Frank W\u00fcbbeling", "Hendrik Kleikamp", "Burkhard Schmidt", "Aurela Shehu", "Marco Reidelbach", "Christine Biedinger", "Jochen Fiedler", "Thomas Koprucki", "Dorothea Iglezakis", "Dominik G\u00f6ddeke"], "abstract": "Mathematical models and algorithms are an essential part of mathematical research data, as they are epistemically grounding numerical data. In order to represent models and algorithms as well as their relationship semantically to make this research data FAIR, two previously distinct ontologies were merged and extended, becoming a living knowledge graph. The link between the two ontologies is established by introducing computational tasks, as they occur in modeling, corresponding to algorithmic tasks. Moreover, controlled vocabularies are incorporated and a new class, distinguishing base quantities from specific use case quantities, was introduced. Also, both models and algorithms can now be enriched with metadata. Subject-specific metadata is particularly relevant here, such as the symmetry of a matrix or the linearity of a mathematical model. This is the only way to express specific workflows with concrete models and algorithms, as the feasible solution algorithm can only be determined if the mathematical properties of a model are known. We demonstrate this using two examples from different application areas of applied mathematics. In addition, we have already integrated over 250 research assets from applied mathematics into our knowledge graph.", "sections": [{"title": "1 Introduction", "content": "Data and knowledge driven approaches constitute the fourth pillar of science. Computer simulations generate vast amounts of data, big measurement data are recorded in physics, and statistical data are collected in social science cohort studies, to name some examples. In general, for scientific reasoning, the processing and generation of data is becoming increasingly important. Moreover, sharing and citing research data is more and more acknowledged as a key part of the scientific process [6]. To enable this and to ensure good scientific practice, research data must be documented and stored in accordance with the FAIR principles [36] as a means to avoid dark data [28]. In particular, all relevant information that has led to a scientific finding must be documented in order to be able to replicate and reproduce the result at a later date or by third parties [3, 26].\nSpecifically in branches of science using mathematical methods, research data take many forms. Mathematics is typically still associated with classical mathematical artifacts, namely documents with mathematical proofs and formulae. However, this definition falls short, as applied mathematics produce huge amounts of data based on numerical methods. These particular fields heavily rely on mathematical models and algorithms for the generation of numerical or symbolic data [4, 35]. A comprehensive overview of types of mathematical research data can be found in [6].\nFor a complete epistemic understanding, all models and solution algorithms must be documented. In order to tackle similar problems or to improve efficiency, alternate, competing or complementing models and solution schemes can be identified from this knowledge, which goes beyond reproducibility. The conceptual foundations for semantic knowledge representation for these research assets were laid in [29, 30], where an ontology for mathematical models and algorithms was proposed. Building on top of this conceptual work in [29], we present a matured version of a joint ontology of models and algorithms stemming from applied mathematics, and a knowledge graph (KG) with to date more than 2000 elements, ready for production service. To this end, the paper is structured as follows: Sec. 2 provides an overview of relevant related work. Sec. 3 first discusses the preliminary work on which our approach is based on, then details our extensions and the merging of the ontologies. Sec. 4 afterwards describes the transition from the joint ontology to a KG with data using examples. Sec. 5 concludes the paper with a summary and an outlook."}, {"title": "2 Related Work", "content": "To date, the use and development of ontologies in mathematics is not yet widespread, as the realization that all research data are relevant and should be made FAIR has only recently become more commonly accepted.\nPreliminary work in the area of mathematical models exists, e.g., introducing taxonomic classifications of mathematical artifacts [9], which were eventually"}, {"title": "3 Merging MathModDB and MathAlgoDB", "content": "In this section, we review the previously introduced ontologies for mathematical models and algorithms laid out in [29, 30] and present an extension and con-"}, {"title": "3.1 Previous Ontology Structures and their Shortcomings", "content": "In [29], mathematical models have been identified as one of the central categories of mathematical research data and the Mathematical Models Ontology (Math-ModDB) has been developed, with its essential classes shown in Fig. 1a. The same holds true for numerical algorithms, leading to the MathAlgoDB ontology with its essential classes shown in Fig. 1b.\nThese class names showed some inconsistencies with other common standard nomenclature, such as Wikidata\u00b2 and the ORKG\u00b3. Hence, minor modifications of the original design were made by renaming the classes Application Domain to Research Field and Application Problem to Research Problem.\nMajor adjustments became necessary as a result of the following considerations. Solving a scientific problem derived from an application problem via modeling (represented in MathModDB) requires addressing algorithmic subproblems (represented in MathAlgoDB). In [29], this connection was made through the relation uses algorithmic problem and its inverse used by model problem, representing the process where mathematical modeling is followed by solving model equations with a numerical algorithm via the class of Algorithmic Problems. In [29], it was already mentioned that distinguishing between a mathematical problem and an algorithmic subproblem can be challenging. Sometimes,"}, {"title": "3.2 Computational Tasks as the missing Link", "content": "In the preliminary work, MathModDB as the ontology for mathematical models and MathAlgoDB as the ontology for algorithms were rather separate developments. However, since they represent two sides of the same epistemic coin, they have been unified in this approach, see Fig. 2.\nThis is evident as the connections between the two parts are now made through several classes. First, a Computational Task class had to be introduced, which is complementary to the Algorithmic Task class and represents the semantic information content that a specific computational task is closely related to an algorithmic problem class. For example, the Computational Task of calculating the time evolution of a dynamical system model is directly linked to the Algorithmic Task of solving coupled ordinary differential equations.\nSecond, the Publication class originally developed for MathAlgoDB is now also linked to MathModDB, since the reference information where a mathemat-"}, {"title": "3.3 Quantities are central to semantic Knowledge Repre-sentation", "content": "As stated in the previous section, quantities play a decisive role in mathematical expressions as they give models their actual semantic meaning. Hence, next to the Quantity class, the Quantity Kind class was introduced. The rationale behind this distinction is to enhance clarity and precision in our semantic representations by categorically separating basic quantities from the specific quantities that occur in the use cases. For example, the electrical membrane potential of a cell, which occurs as a quantity in one of the bio-physiological use cases, is a specialization of the quantity Electrical Potential. In electrostatics, the difference in this potential between two points is given by the basic quantity Voltage, which is an individual of the Quantity Kind class. Voltage then refers to the corresponding entries in the controlled vocabulary QUDT4 [14, 17] and in Wikidata5."}, {"title": "3.4 Metadata Enrichment for mathematical Models", "content": "The existing ontologies were revised with regard to the integration of external information sources, in particular controlled vocabularies. This is intended to drive the enrichment of the KG with metadata in an unambiguous way. The information was added either as data properties or annotation properties depending on whether the information can be used to make new findings in reasoning or it should only be available to users. Individuals from the Quantity class can now be equipped with IDs from QUDT. Only if quantities are clearly presented, potential risks of incorrect units or misinterpretation, which have already led to issues elsewhere, can be avoided.\nIn addition, individuals in the Research Field class can now be assigned identifiers from the German Research Foundation (DFG)7, Mathematics Subject Classification (MSC)8 [22] and Physics Subject Headings (PhySH)9 [31] classification systems. Furthermore, it is now possible to link individuals with their equivalents in Wikidata."}, {"title": "3.5 Metadata Enrichtment for mathematical Algorithms", "content": "One major goal of MathAlgoDB is the proposition of a catalog of appropriate numerical algorithms for a concrete application problem. As stated, mathematical modeling boils down to a computational task containing a formulation with quantities. The formulation will be general (take e.g. \"solve ordinary differential equation\"), but the modeling will provide additional properties for the formulation (e.g. stiff/nonstiff, scalar, first order, linear) or the quantities involved (e.g. the system matrix A in the formulation of a linear ODE $y' = Ay$ is symmetric) and are now available through MathModDB.\nIn order to use that information, several changes were made to MathAlgoDB. Most of these are related to algorithm selection for specific application tasks. We need to augment the information on algorithms that is currently present with information about (the properties of) the objects it is working on or is expected to produce. For instance in the case of linear equations, for the mathematical formulation of \"solve $Ax = b$ for $x$\":\n\u2022 General algorithms like LU decomposition will work for all square and invertible matrices.\n\u2022 Conjugate Gradient will require A to be symmetric and positive definite (s.p.d.).\n\u2022 If A is Toeplitz, solving with Trench's algorithm is recommended.\n\u2022 Expectation Maximization/Maximum likelihood type algorithms are generally applicable for problems with a positivity constraint on A and x, but particularly recommended provided b is Poisson-distributed.\nIn the preliminary approach, this was implemented by using named tasks and subtasks, defining a general linear equation task and a linear equations for s.p.d. matrices subtask. As we showed, this is an approach that works fine for purely theoretical considerations and follows the structure of typical textbook derivations of algorithms.\nHowever, this implies that no automatic assignment of models to computational tasks or algorithms is possible. The new approach defines properties for"}, {"title": "4 Living Knowledge Graph of Models & Algorithms", "content": "As of mid August 2024, more than 120 mathematical models and over 200 algorithms have been added as individuals, turning the conceptual ontology into a living KG. The models come from more than twenty various research fields. Among others, there are models from continuum mechanics, semiconductor physics, enzyme kinetics or biophysics. Moreover, mathematical models used in archaeology and Egyptology are also included. Up to now, the current data corpus consists of manually maintained, curated information only. This is primarily due to the high demands placed on the data quality of an algorithm and model database. High data quality is of great importance for third parties to be able to rely on the information and to use the contained information for their own research or for verification purposes."}, {"title": "4.1 Use Case: From falling Apples to moving Planets", "content": "As a illustrative example, we consider the famous story of Sir Isaac Newton being inspired to formulate his theory of gravitation by watching the fall of an apple from a tree in the year 1666. We have implemented this within the MathModDB KG by including a Research Field named \u201cPomology\" (science of fruits) containing \u201cGravitational Effects on Fruit\" as a specific Research Problem. Currently, there is a choice of two Mathematical Models addressing this problem, i.e., \"Free Fall Models\" without and with the effect of air drag, both of them assuming constant gravitation. The former one, actually dating back to Newton, contains the simple \"Free Fall Equation\", $\\ddot{x} = g$, as a Mathematical Formulation. That equation contains the (time-derivative of the) free fall velocity $v$ and the gravitational acceleration $g$. Obviously, these two Quantities are assigned to the Quantity Kinds velocity and acceleration, respectively. The free fall model with air drag may be described by the nonlinear equation $\\ddot{x} = g - \\frac{\\rho C_D A v^2}{2m}$ which, in addition to the case without drag, contains the density of air $\\rho$, the drag coefficient $C_D$, the cross section A and the mass of the apple m.\nWithin the context of these \"Free Fall Models\", several different Computational Tasks can be formulated, e.g., how long does it take for an apple to reach the ground, or with which velocity will it hit the ground. While the above"}, {"title": "4.2 Use Case: Like a Virus - Romanization of Northern Tunesia", "content": "From 146 BC to 350 AD, Roman culture spread across Northern Tunisia. Today, this can be traced by looking at archaeological evidence and historical records such as the administrative status of cities. In the Research Field of Roman Archaeology, this phenomenon is studied under the Research Problem of \"Romanization Spreading in Northern Tunisia\".\nIn [21], the spreading was modeled using a susceptible-infected (SI) model from the epidemiology domain on interregional networks with a time-dependent spreading rate. In this Mathematical Model the state of each region m at time t is given by $s_m(t)$, the number of susceptible (non-Romanized) cities, and $i_m(t)$, the number of infected (Romanized) cities. The change in the number of susceptible and infected cities over time is described by the following Mathematical Formulations,\n$\\frac{ds_m(t)}{dt} = -s_m(t) a(t) \\sum_{n=1}^{N_R} G_{m,n}i_n(t)$\n$\\dot{i_m(t)} = P_m - s_m(t)$\nwith a(t), G, $P_m$ and $N_R$ denoting the Quantities time-dependent spreading rate, interregional contact network, total number of cities in region m, and total number of regions, respectively.\nTwo Computational Tasks are associated with the model. These are: 1) the determination of approximate spreading curves $\\$(t)$ using arbitrary parameters for G and a(t) in a first-order Runge-Kutta scheme and 2) the determination of optimal parameters G and a(t) with respect to the real-world data using the Prescaled Metropolis-Adjusted Langevin Algorithm to minimize a loss function.\nThe initial value ODE problem in MathAlgoDB can be handled as in the Free Fall Model. Properties of the problem that would hint to use the Langevin Algorithm are high dimension, smoothness and availability of strong gradient information."}, {"title": "4.3 Data Flows in the Knowledge Graph", "content": "Templates were developed that facilitate the process for researchers wishing to add mathematical models to the MathModDB in order to make these models FAIR. They are provided as Markdown files and are designed to have a low entry barrier, allowing users with little to no experience to get started easily while guaranteeing the important details of the mathematical model are gathered. The filled-in templates then serve as a basis for a further semantically annotated standardized description of the model employing the MathModDB ontology.\nMaRDMO [24] is an extension of the Research Data Management Organiser [10], the most widely used tool for data management planning in Germany [11], facilitating the documentation of interdisciplinary workflows. It offers a standardized questionnaire and integrates with resources like the MaRDI Portal10, Wikidata, and other knowledge bases. Utilizing the MathModDB ontology, MaRDMO allows the documentation of mathematical models either independently or as part of larger workflows. It facilitates seamless integration with the KG by connecting existing model entities and creating new ones when necessary [25]. This capability positions MaRDMO as a user-friendly and interdisciplinary interface to explore and contribute to the KG.\nThe MathAlgoDB KG can be accessed via a web interface which can be used to retrieve information and browse the graph. Furthermore, the web interface has recently been extended to allow for the addition of new data into the KG. The joint ontology including the examples shown above is available at https://mtsr2024.m1.mardi.ovh/.\nThe SPARQL query shown in sec. 4.1 can be sent to the corresponding SPARQL port at https://sparql.mtsr2024.m1.mardi.ovh/mathalgodb/query in order to obtain the results presented above."}, {"title": "5 Conclusion & Outlook", "content": "We have presented extensions of the original design for semantically representing mathematical models and algorithms and merged two previously distinct ontologies (sec. 3), becoming a living knowledge graph (sec. 4). The extensions include renaming due to harmonization effort (sec. 3.1), the introduction of a Computational Task class (sec. 3.2), the incorporation of controlled vocabularies for the Research Field class and for the base quantities within a new class Quantity Kind (sec. 3.3) as well as enabling and implementation of metadata enrichment for both models (sec. 3.4) and algorithms (sec. 3.5). With these, we are now able to semantically represent the essential parts of modeling and simulation as they occur in many mathematized branches of science. More complex models than simple free fall models presented in sec. 4.1 have been implemented, such as the dynamics of planets in our solar system. This hints to a potential future work introducing a class encompassing theoretical methods or concepts such as the gravitational theory and classical mechanics."}]}