{"title": "GENERATIVE ARTIFICIAL INTELLIGENCE FOR\nNAVIGATING SYNTHESIZABLE CHEMICAL SPACE", "authors": ["Wenhao Gao", "Shitong Luo", "Connor W. Coley"], "abstract": "We introduce SynFormer, a generative modeling framework designed to efficiently explore and navigate synthesizable chemical space. Unlike traditional molecular generation approaches, we generate synthetic pathways for molecules to ensure that designs are synthetically tractable. By incorporating a scalable transformer architecture and a diffusion module for building block selection, SynFormer surpasses existing models in synthesizable molecular design. We demonstrate SynFormer's effectiveness in two key applications: (1) local chemical space exploration, where the model generates synthesizable analogs of a reference molecule, and (2) global chemical space exploration, where the model aims to identify optimal molecules according to a black-box property prediction oracle. Additionally, we demonstrate the scalability of our approach via the improvement in performance as more computational resources become available. With our code and trained models openly available, we hope that SynFormer will find use across applications in drug discovery and materials science.", "sections": [{"title": "1 Introduction", "content": "The discovery of novel functional molecules is a central challenge in chemical science and engineering and is crucial for addressing key societal and technological challenges, including those related to healthcare [1, 2, 3], energy [4, 5], and sustainability [6, 7, 8]. However, the process of discovery is often risky, complex, time-consuming, and resource-intensive [9, 10, 11]. Recent advances in artificial intelligence (AI) [12], particularly in generative modeling [13, 14, 15], have opened up new avenues for generative molecular design [16, 17, 18, 19, 20, 21, 22, 23]. The expressivity of deep learning models, coupled with automatic differentiation [24] and increasingly affordable computational resources, have made it possible to model the complex distribution of molecular structures directly. This capability allows for efficient exploration of broader virtual chemical space than traditional virtual screening approaches [25, 26, 27], with more fine-grained and controllable navigation compared to conventional combinatorial fragment-based methods [28, 29].\nDespite the promise of generative design methods, their adoption has remained somewhat limited. One major challenge is that most generative models often produce synthetically intractable molecular structures when targeting specific design goals, such as optimizing property scores [30, 31, 32, 33]. When designed molecules cannot be synthesized and validated in the lab at a reasonable cost, their practical value is limited. In addition, the actionability of computer-aided molecular design is crucial for achieving rapid design cycles in early-stage drug discovery [34, 35] and for enabling closed-loop autonomous discovery [36, 37, 38, 39, 40]. This issue, though long-standing and observed in earlier combinatorial algorithms, has become more pronounced with the advent of deep generative AI models.\nThere has been considerable interest in incorporating synthetic accessibility into molecular design methods [30, 33]. The most straightforward strategy is to incorporate a heuristic synthetic accessibility score as a design criterion [30, 41]. However, quantitatively estimating synthetic accessibility must account for factors such as regioselectivity, functional group compatibility, and building block availability, all of which contribute to a rugged structure-synthesizability landscape that makes the design of such scores an ongoing challenge. While notable efforts have been made to quantify synthetic accessibility [42, 43, 44], achieving reliable quantification through a simple heuristic remains a distant goal. Advances in the sample efficiency of molecular optimization [45, 46] have made it feasible to conduct explicit retrosynthesis analysis for each designed molecule as a means of evaluating synthetic accessibility [47]. However, the computational overhead remains significant, making this approach impractical for most existing generative design models. Furthermore, unsynthesizable molecules provide no learning signal, and when a model continues to propose such molecules, the sparse feedback hinders effective learning.\nA more ideal and effective approach to synthesizable molecular design, in our opinion, involves constraining the design process to focus exclusively on synthesizable molecules by designing synthetic pathways rather than simply designing structures. With the growing role of massive make-on-demand libraries\u2014whose sizes exceed what can be fully enumerated [27, 48, 49, 50, 51, 52, 53]-this class of methods has gained increasing interest, spanning both traditional Monte Carlo techniques [54, 55, 56, 57, 58, 59, 60] and more recent generative approaches [61, 62, 63, 64, 65, 66, 67]. Despite this progress, current synthesis-centric methods still fall short in terms of controllability and efficiency in navigating the chemical space, and as a result have not achieved widespread adoption. These methods that rely on property scores to guide the design process often exhibit lower efficiency in optimizing expensive oracles compared to structure-centric methods [45], as they model the synthetic action sequence-property landscape, which is inherently more complex than the structure-property landscape. Some recent models offer a more controlled exploration of local chemical spaces by using a reference input molecule [61, 64, 65, 67]. However, the low reconstruction rates for theoretically feasible molecules suggest a risk of partial collapse during decoding, suggesting that the practical chemical space accessible to these models is smaller than the theoretically accessible space. This behavior leads to certain regions of the chemical space becoming inaccessible, regardless of the input, ultimately hindering the overall design process.\nHerein, we build upon our previous contributions [65, 67] to introduce SynFormer, a generative AI framework designed for efficient and controllable navigation within a synthesizable chemical space. Like earlier synthesizable design methods, SynFormer is a synthesis-centric approach, generating synthetic pathways by readily available building blocks through robust chemical transformations, ensuring synthetic traceability subject to the limitations of those transformation rules. SynFormer distinguishes itself from previous models with its compute-efficient and scalable transformer architecture [14], which empirically shows improvements in performance as the training dataset grows. To select suitable molecular building blocks from the large, discrete, and multimodal space of commercially-available options, SynFormer incorporates a denoising diffusion model as a token head module [15]. The framework is fully end-to-end differentiable, enabling effective training and optimization.\nWe demonstrate the utility and versatility of the SynFormer framework through two instantiations: (1) SynFormer-ED, an encoder-decoder model that generates synthetic pathways corresponding to a given input molecule for exact or approximate reconstruction of that input, and (2) SynFormer-D, a decoder-only model for generating synthetic pathways that is amenable to fine-tuning towards specific property goals. Both models are trained on a simulated chemical space derived from a curated set of 115 reaction templates and 223,244 commercially available building blocks, extending beyond Enamine's REAL Space [50]. We validate SynFormer's capabilities by demonstrating success on (a) reconstructing molecules within both the Enamine REAL and ChEMBL [68] chemical spaces; (b) local synthesizable chemical space exploration given a reference molecule; and (c) global synthesizable chemical space exploration guided by black-box property prediction model. These results not only highlight SynFormer's ability to navigate synthesizable chemical space using varied control strategies but also demonstrate its practical applicability in real-world molecular design use cases. The scalability of the SynFormer framework with respect to both training data and model size suggests considerable potential for further performance enhancement. In conclusion, these findings underscore SynFormer's flexibility and potential to impact molecular design across various domains, including drug development and materials science."}, {"title": "2 SynFormer: a generative framework for synthesizable molecular design", "content": "SynFormer is a generative framework designed for modeling synthesizable chemical spaces, as schematically illustrated in Figure 1. Although it is challenging to predict which molecules can be synthesized without experimental validation, the progress of make-on-demand libraries such as Enamine REAL Space [50], GalaXi [51], and eXplore [52] has"}, {"title": "3 Results", "content": ""}, {"title": "3.1 Molecule reconstruction and chemical space coverage", "content": "An important factor that affects a model's performance in molecular design applications is its coverage of chemical space [72]. Even though the theoretical synthesizable chemical space constructed from reaction templates and building blocks is vast, previous models have shown that a trained model can struggle to generate molecules that are known to be synthesizable [64, 65, 57, 67]. This limitation can hinder the model's effectiveness in molecular design if it cannot access the chemical space where the optimal design resides. To assess the coverage of chemical space, we tested the SynFormer-ED model on molecule reconstruction: how often SynFormer-ED can reconstruct a viable synthetic path given a large set of potential molecules of interest.\nWe evaluated reconstruction on a randomly selected subset of 1,000 molecules from ChEMBL Database and Enamine's REAL Diversity Set (Figure 2A and B). SynFormer-ED successfully recovers 66% of molecules from REAL, notably higher than that achieved by ChemProjector [67] and SynNet [30]. ChEMBL, by comparison, is a curated database of bioactive molecules with drug-like properties, which includes molecules whose syntheses may require building blocks or reactions beyond SynFormer's training set. This results in a reconstruction rate of 20%-lower than in REAL Space but still an improvement over previous models.\nWe further demonstrate that the model's performance, as measured by the binary cross-entropy (BCE) of the molecular fingerprints (FPs) [69], improves with increasing model size and training data (Figure 2C). Notably, we also observed that the performance of the largest model did not outperform the second-largest model when insufficient data was available. This finding suggests that estimating training performance based on early epochs may not be an effective"}, {"title": "3.2 Local chemical space exploration with SynFormer", "content": "In this section, we present the application of SynFormer-ED in exploring the local chemical space around a given reference molecule, projecting it into a synthesizable chemical space. We demonstrate two use cases of our model in molecular design: (1) generating synthesizable analogs for unsynthesizable designs and (2) hit expansion within synthesizable chemical space."}, {"title": "3.2.1 Synthesizable analog generation", "content": "In molecule reconstruction experiments, we observed that SynFormer-ED is able to generate structurally similar outputs even when provided with unsynthesizable (according to its building blocks and reactions) molecules. This capability allows SynFormer-ED to be applied to generate synthesizable structural analogs of unsynthesizable designs, as illustrated in Figure 3A. The implicit goal is to preserve as much of the overall structure and key pharmacophores as possible, effectively transforming non-feasible molecules into synthesizable compounds, akin to \u201cprojecting\u201d the input molecule onto the synthesizable space.\nTo evaluate the impact of synthesizable projection, we first followed the experimental setup of Luo et al. [67] and used SynFormer-ED to generate synthesizable analogs for molecules identified as unsynthesizable by ASKCOS [75] in [30]. The original molecules were optimized using de novo design methods targeting ten multi-objective scores, each ranging from 0 to 1, where higher values are preferable. These scores encompass structural features, physicochemical properties, and metrics related to similarity or dissimilarity to known drugs, as well as the presence of specific substructures [76]. After the generation of analogs, we evaluated them using the same objective scores that the original designs were optimized for. As shown in Figure 3B, the synthesizable projection effectively eliminated the peak in synthetic accessibility (SA) scores [42] at around 6-7 observed in the original designs, shifting the distribution toward more easily synthesizable molecules. Additionally, a significant fraction of the generated analogs exhibited objective scores comparable to those of the original molecules (Figure 3C and Figure S2 in the Supporting Information). We demonstrate two examples in Figure 3D. Starting with high-scoring but seemingly-unsynthesizable molecules, SynFormer-ED generated analogs that preserved key structural features while correcting the unsynthesizable fragments. The generated analogs retained objective scores comparable to those of the original molecules and are inherently synthesizable (Figure S4 in Supporting Information), demonstrating SynFormer-ED's ability to transform an unsynthesizable molecule into a synthesizable analog while maintaining structural integrity.\nTo further validate the utility of SynFormer-ED in realistic drug discovery scenarios, we explored its application in structure-based drug design (SBDD) [77, 78, 79]. While numerous SBDD algorithms can generate ligands with promising predicted binding affinities (e.g., via 3D pocket-conditioned generation), these methods are often criticized for overlooking synthetic accessibility [80, 81]. SynFormer-ED addresses this gap by projecting the outputs of such"}, {"title": "3.2.2 Hit expansion within synthesizable chemical space", "content": "Building on SynFormer-ED's ability to explore local synthesizable chemical space around reference molecules, we applied it to hit expansion within synthesizable chemical space. By allowing the model to select sub-optimal intermediate choices of building blocks or reactions via a beam search, SynFormer-ED can generate sets of close analogs around known hits, as illustrated in 4A. This approach aims to produce additional molecules that preserve the core motifs and overall structural integrity, potentially enhancing design objectives and expanding the pool of candidates for downstream processes, such as hit-to-lead optimization.\nFollowing the setup in [85], we screened ZINC250k [86], a subset of ZINC database [87], using a predictive model for inhibition activity against c-Jun NH2-terminal kinase 3 (JNK3) [88, 89, 90]. The top 10 scoring molecules, with scores ranging from 0.49 to 0.68 (the higher, the better), were selected as hits and input into SynFormer-ED to generate analogs, which were then evaluated with the JNK3 inhibition predictor. As a baseline, a nearest neighbor search within Enamine REAL (approximately 7 billion molecules) was performed for the hits, retrieving approximately 100 of the most similar molecules for each hit and evaluating them for JNK3 inhibition. While both SynFormer-ED and the nearest neighbor search identified additional molecules with scores higher than those from a simple screening of ZINC250k, SynFormer-generated analogs exhibited a larger enrichment in the high-scoring region (Figure 4B). We present two sets of examples in Figure 4C. Though both methods produced analogs retaining the overall structure with higher predicted inhibition than the original hits, the SynFormer-ED analogs consistently achieved higher scores compared to those from the nearest neighbor search.\nTo further validate SynFormer-ED's capability in a more realistic hit expansion scenario, we used experimentally verified ligands for Human Pyruvate Kinase M2 (PKM2, PDB ID: 3ME3) [91] and Lysine Acetyltransferase 2A (KAT2A, PDB ID: 5MLJ) [92] as reference molecules and evaluated their Vina docking scores. SynFormer-ED was used to expand the reported ligands, generating 191 analogs for PKM2, with 179 of them with Tanimoto similarities greater than 0.5 and Vina score changes lower than 1 kcal/mol. For KAT2A, SynFormer-ED generated 200 analogs, 111 of which met the criteria of Tanimoto similarity above 0.5 and Vina score changes lower than 1 kcal/mol. Figure 4D and E present three generated analogs for ligands targeting PKM2 and KAT2A, respectively, showing competitive Vina scores while preserving the overall structure, along with their synthetic pathways (see Figure S11 and 12 in the Supporting Information for more examples). Notably, in the case of KAT2A, the synthetic pathways of the generated analogs are diverse despite the structural similarity of the final analogs, highlighting that the SynFormer-based approach is not limited by the synthetic pathways of the input hits. This flexibility allows the generation of analogs with distinct synthetic routes, which traditional path-based enumeration strategies [93, 85] cannot achieve. Combined with these results, SynFormer-ED demonstrates significant potential in hit expansion, enabling the generation of practical, synthesizable analogs suitable for further drug development stages."}, {"title": "3.3 Global chemical space navigation with SynFormer", "content": "In this section, we demonstrate the application of SynFormer to global chemical space navigation, enabling the optimization of molecular properties treated as a black-box function across broad chemical spaces [45]. This process, also known as de novo molecular optimization, is key to exploring novel molecular designs. We first show that SynFormer-D can be fine-tuned using reinforcement learning to generate high-scoring molecules (Figure 5A). Furthermore, we demonstrate how SynFormer-ED can be integrated as a mutation step within an evolutionary algorithm (Figure 5C), achieving state-of-the-art sample efficiency while constraining the design space to synthesizable chemical space."}, {"title": "3.3.1 Molecular optimization by fine-tuning SynFormer-D with reinforcement learning", "content": "We fine-tuned SynFormer-D using reinforcement learning (RL) to guide its generation toward high-scoring molecules. Specifically, we adopted a variant of the REINFORCE algorithm [94], which iteratively generates a batch of molecules, evaluates their properties, and fine-tunes the model parameters with the goal of maximizing the desired properties (detailed methods can be found in the Methods section). In our experiments, we optimized predicted binding affinity against the dopamine receptor D2 (DRD2) [95] as an exemplary oracle function. As shown in Figure 5B, our method (denoted as SF-RL) successfully biases generation toward high-scoring molecules and outperforms several popular optimization methods [96, 29]. Although SF-RL's sample efficiency is lower than the most efficient algorithms like GraphGA [29] and REINVENT [19], these results confirm the feasibility and effectiveness of fine-tuning SynFormer-D for de novo molecular optimization. Given that much of the algorithm's design space of RL is yet to be explored, the potential for additional algorithmic improvements in RL-based fine-tuning remains substantial."}, {"title": "3.3.2 Molecular optimization by using SynFormer-ED as a mutation operator within a genetic algorithm", "content": "Lastly, we demonstrate a genetic algorithm framework incorporating SynFormer-ED projection as a mutation step. After the standard processes of crossover and mutation to diversify the candidate pool, SynFormer-ED projects all candidates into synthesizable chemical space. This step not only corrects unsynthesizable fragments and linkages, ensuring synthetic accessibility, but also introduces additional diversity into the candidate pool. Generated molecules are then scored and ranked, with the top-performing ones selected for further iterations (Figure 5C). For crossover and mutation rules, we follow the GraphGA algorithm [29], a well-established molecular optimization method that regularly performs well in molecular optimization benchmarks [45, 98] and real-world applications [41].\nWe evaluated the performance of this genetic algorithm, denoted as GraphGA-SF, across four tasks from the GuacaMol benchmark [76]: Sitagliptin MPO, Scaffold Hop, Perindopril MPO, and Ranolazine MPO. As shown in Figure 5D, GraphGA-SF demonstrated optimization efficiency comparable to the original GraphGA and the state-of-the-art RL method, Augmented Memory (denoted as AugMem) [97], while significantly outperforming previous methods for synthesizable molecular optimization. Notably, in the Sitagliptin MPO task, where the primary objective score often favored unsynthesizable molecules, conventional methods without synthesizability constraints tended to generate exclusively unsynthesizable compounds (See SA Score in Figure 5E and structure in Figure 5F). On the other hand, synthesis-centric design methods, such as SynNet [65] and DoG-Gen [64], struggled to find meaningful optimization signals due to the sparse signal and their limited coverage of chemical space. In contrast, GraphGA-SF matched the performance of GraphGA while ensuring each design has a synthetic pathway like other synthesis-centric methods. We highlight the best designs from each genetic algorithm in Figure 5F, showing that the molecules generated by GraphGA-SF were significantly more synthesizable, with only a modest sacrifice in the main objective score.\nOur results demonstrate that by combining the optimization capability of GraphGA with SynFormer-ED's ability to restrict the design space to synthesizable compounds, GraphGA-SF can effectively and efficiently optimize molecular properties while maintaining synthetic feasibility. Furthermore, SynFormer-ED's integration as a mutation operator exemplifies its potential as a generalizable component in molecular design algorithms, allowing these frameworks to confine their search to synthesizable chemical spaces. This adaptability enables SynFormer-ED to leverage ongoing advances in de novo molecular design algorithms, offering a versatile and robust solution to the problem of synthesizable molecular design."}, {"title": "4 Discussion", "content": "In this paper, we introduced SynFormer, a generative modeling framework designed to efficiently explore and navigate synthesizable chemical space. We curated a set of reaction rules that allow the model to construct a synthesizable chemical space beyond Enamine REAL Space, ensuring that the designed molecules are feasible for synthesis subject to the reliability of such rules. By integrating transformer architectures with a diffusion module, SynFormer enhances the ability to make beneficial choices of building blocks and reactions during autoregressive bottom-up pathway generation, surpassing previous models for synthesizable molecular design. We demonstrated two key applications of SynFormer: local chemical space exploration and global optimization within synthesizable chemical space, both of which yielded successful results. Additionally, we showed that SynFormer is a scalable architecture, with the potential for further performance improvements with increased resources. While our focus was on applications in drug discovery, the models are readily applicable to other domains of small organic molecule design [4, 7].\nThere are several areas where we expect further improvements can be made. First, the reconstruction rate of SynFormer-ED is not perfect, suggesting that certain regions of synthesizable chemical space may remain inaccessible, even though the model possess the reaction templates and building blocks that should make it possible to reach them. Additionally, RL-based fine-tuning in SynFormer-D currently requires a relatively large number of oracle calls to achieve competitive results. Another limitation lies in the quality and coverage of reaction templates and building blocks. These templates do not account for stereochemistry, meaning that chiral centers can only be inherited from building blocks, not installed during synthesis. Furthermore, the Enamine building blocks we choose are designed for combinatorial library construction and do not comprehensively cover commercially available materials. These constraints may limit the model's applicability to somewhat flat, linearly-constructed sp\u00b2-rich structures and restrict its use for more complex molecules like natural products [99]. Expanding the SynFormer framework to include more sophisticated reactions and a broader range of building blocks is possible, but will require further validation."}, {"title": "5 Methods", "content": ""}, {"title": "Synthesizable Chemical Space Construction", "content": "A synthesizable chemical space is defined as a set of molecules that can be accessed from purchasable starting materials (building blocks) through a series of reliable chemical transformations. One well-known example of such a chemical space is Enamine REAL Space (REadily AccessibLe) [50], which consists of 48 billion molecules. These molecules can be synthesized by applying 1-3-step synthetic transformations derived from approximately 170 well-validated parallel synthesis protocols to over 143,000 qualified building blocks. The synthesis and delivery of molecules within the REAL Space typically takes 3-4 weeks, with an average synthesis success rate of 80%, which attests to the validity of the way of constructing synthesizable chemical space. In this work, we aim to cover the REAL Space and extend it further by incorporating additional reactions and a greater number of reaction steps to mimic a general organic synthesis endeavor."}, {"title": "Reaction templates", "content": "Reaction rules are encoded as strings using the SMARTS grammar [100], known as reaction templates. We created a set of 86 reaction templates, which directly implement the 169 reactions used in the January 2022 version of the REAL"}, {"title": "Representing synthetic pathways using postfix notation", "content": "In SynFormer, synthetic pathways are represented using the postfix notation of synthesis [67]. In this format, the operators (chemical reactions) follow their operands (molecular building blocks), providing a structured and concise way to represent reaction sequences. Each synthesis pathway is encoded as a sequence of tokens, where each token represents either a reaction step or a building block. This linear sequence simplifies the representation of converging synthetic pathways by eliminating the need for \u201cparentheses\u201d to indicate the order of operations, making it particularly amenable to autoregressive modeling. This approach enables efficient handling of complex synthetic routes while ensuring that each step in the pathway is captured in the correct order."}, {"title": "SynFormer", "content": "The SynFormer framework is a generative modeling architecture designed to explore synthesizable chemical space by generating synthetic pathways for molecules rather than molecular graphs. SynFormer is based on a transformer architecture with a diffusion module to select molecular building blocks. We designed two variants of the model to handle distinct molecular design tasks:\n\u2022 SynFormer-D, a decoder-only model designed for generating new molecules or optimizing molecules based on feedback from a black-box objective function.\n\u2022 SynFormer-ED, an encoder-decoder model that generates synthetic pathways based on a given reference molecule, enabling local chemical space exploration."}, {"title": "Transformer decoder", "content": "SynFormer adopts the transformer decoder architecture as its backbone [14]. The decoder generates postfix notations of synthesis in an auto-regressive manner, which is, predicting the next token according to previous tokens. We assign embedding vectors to each reaction template and the [START] token, and convert building blocks fingerprint into continuous-valued vectors with a multi-layer perceptron (MLP) in the beginning. To indicate the position of each token within the sequence, we add positional encodings [14] to the embedding vectors.\nThe transformer decoder gathers information for each token from its preceding tokens via the multi-head attention mechanism [14], where each token's embedding vector is first projected to query, key, and value vectors, and then updated by aggregating the values of other tokens weighted by the softmax-ed inner product of the query vector and the other token's key vector."}, {"title": "Following the transformer decoder, we use a classifier based on an MLP to predict the next token's type.", "content": "If it is predicted as an [END] token, the decoding process will be terminated. If it is predicted as a reaction, another classifier is used to predict the probability of each reaction template being the next token. When the next token is predicted as a building block, a diffusion module is used to generate molecular fingerprints which are subsequently used to retrieve building blocks from the database."}, {"title": "Transformer encoder", "content": "The transformer decoder can be conditioned by a transformer encoder, i.e., given reference molecule represented by a SMILES string. The transformer encoder produces vector representations for each token in the SMILES string, which the decoder can attend to via the cross attention mechanism [14]."}, {"title": "Diffusion module for building block fingerprints", "content": "We build a denoising diffusion model to learn the distribution of molecular fingerprints, represented as n-dimensional binary vectors, where n denotes the number of bits in the fingerprint. This distribution is modeled as a joint Bernoulli binary distribution of n dimensions.\nDuring training, the forward diffusion process perturbs the fingerprint vector by randomly flipping each bit according to the following noise distribution:\n$q(x_t^{(j)}|x_{t-1}^{(j)}) = Bernoulli(x_t^{(j)} | \\bar{\\alpha}_t x_0^{(j)} + (1 - \\bar{\\alpha}_t) \\cdot \\frac{1}{2}), j = 1 ... n. $\nwhere $x_0^{(j)}$ represents the j-th bit of the ground truth fingerprint vector, and $x_t^{(j)}$ represents the perturbed bit. Here, $\\bar{\\alpha}_t$ is a value that controls the noise level, which we define using a formulation similar to multinomial diffusion [70]. $\\alpha_t$ starts at 1 and monotonically decreases to 0. When $\\bar{\\alpha}_t$ = 0, the distribution q becomes the uniform Bernoulli distribution, where the noise level reaches the maximum. The denoiser network learns the bitwise Bernoulli distribution of ground truth fingerprints conditioned on the perturb fingerprint and the embeddings from the transformer decoder. It is trained by minimizing the binary cross entropy loss that measures the discrepancy between the distribution and the ground truth fingerprint.\nThe inference process is known as the reverse diffusion process, where we start with a random bit vector drawn from the uniform Bernoulli distribution, and denoise it iteratively with the denoiser network. Finally, the denoised bit vector is used as a fingerprint to retrieve building block molecules from the database."}, {"title": "Reinforcement learning fine-tuning", "content": "For global optimization tasks, SynFormer-D was fine-tuned using a variant of the REINVENT algorithm [19] based on REINFORCE [94], a type of reinforcement learning (RL). Our RL setup was designed to minimize the following loss function, which incentivizes the model to bring the pseudo-log-likelihood (PLL) of generating a synthetic pathway closer to the objective score of the product molecules:\n$\\mathcal{L}(\\theta) = E \\left[\\left(PLL_{\\theta}(p, m) - \\sigma \\cdot S(m)\\right)^{2}\\right],$\nwhere $\\theta$ represents the trainable network parameters, p is the synthetic pathway, m is the product molecule, S(m) is the objective score of molecule m, typically scaled between 0 and 1 (the higher, the better), $\\sigma$ is a constant scaling factor, $PLL_{\\theta}(p, m)$ is the pseudo-log-likelihood of generating the pathway p leading to molecule m. The pseudo-log-likelihood, $PLL_{\\theta}(p, m)$, is computed as the sum of three terms: the log-likelihood of selecting each token (reaction step or building block), the log-likelihood of selecting each reaction type, and the empirical log-likelihood value of the building block fingerprints:\n$PLL_{\\theta}(p) = \\sum_{i} log P_{\\theta}(x_{i}) + log P_{\\theta}(x_{building block}),$\nwhere $x_i$ represents each component of a synthetic path (token, reaction). The empirical likelihood of the building block fingerprints is approximated by:\n$P_e(x_{building block}) = x_{denoised} \\cdot x_{target} + (1 - x_{denoised}) \\cdot (1 - x_{target}),$\nwhere $x_{denoised}$ is the denoised fingerprint vector, $x_{target}$ is the ground truth fingerprint."}, {"title": "Genetic algorithm with SynFormer-ED as a mutation operator", "content": "We integrated SynFormer-ED as a mutation step into an evolutionary framework for global chemical space exploration and optimization. The genetic algorithm follows a standard workflow: starting with a pool of candidates randomly sampled from the ZINC database, pairs of molecules are selected to undergo crossover, producing an offspring pool. Mutation is then applied to each offspring with a specific probability, followed by an additional mutation step where SynFormer-ED projects all offspring into synthesizable space. This step ensures that unsynthesizable fragments are corrected and adds additional diversity to the candidate pool. The offspring pool will be evaluated, and the highest-scored ones will form the next generation for the next iteration. The crossover and mutation rules were adopted from the GraphGA [29] algorithm; specifically, crossover involves graph matching and exchanging molecular halves, while mutation employs a set of hand-coded rules including both atom- and fragment-level modifications. We adopted the hyperparameters from [98]."}, {"title": "Evaluation Details", "content": "This section describes the precise settings used in the evaluation of SynFormer-ED and SynFormer-D."}, {"title": "Reconstruction and local chemical space exploration", "content": "SynFormer-ED was employed for reconstruction, analog generation, and hit expansion. The workflows for these tasks are similar: SynFormer-ED encodes the input molecule and decodes it into synthetic pathways, using a search width of 24 and an exhaustiveness of 64 during decoding. For reconstruction and analog generation, Tanimoto (Jaccard) similarity [105] to the input molecule based on Morgan fingerprints [106] was evaluated for each generated molecule, with the most similar molecule selected as the output. In hit expansion, generated molecules were evaluated based on both the design objective score and Tanimoto similarity.\nWe tested the reconstruction performance on a random sample of 1,000 molecules from Enamine's REAL Space [50] and the ChEMBL database [107]. Molecules were sampled from the REAL Diversity Set, which includes 48.2 million molecules and maximizes diversity to represent the broader REAL Space. These molecules comply with the Rule of 5 (R05) [108] and Veber criteria [109], making them suitable for drug-like properties. ChEMBL samples were taken from version 29 of the database, released in 2021.\nThe Synthetic Accessibility (SA) Score [42], a heuristic measure evaluating structural complexity based on fragment frequency in PubChem [110], was used to assess the synthesizability of the generated molecules. For synthesizable analog generation, 10 objective scores from the GuacaMol benchmark [76] were used, which involve optimizing various physicochemical properties, similarities or dissimilarities to known drugs, and specific structural motifs.\nIn hit expansion, we also used a predictive model [90] to assess inhibition against c-Jun N-terminal Kinase-3 (JNK3), a member of the mitogen-activated protein kinase family. This model is a random forest classifier utilizing ECFP6 fingerprints trained on the ExCAPE-DB dataset [89].\nAutoDock Vina [84] was employed to evaluate binding affinities against protein targets in both structure-based drug design and hit expansion tasks. Protein structures and pocket information were sourced from the LIT-PCBA dataset [83], and an exhaustiveness setting of 16 was used for most calculations.\nFor baseline comparisons in analog finding, we conducted a nearest neighbor search within Enamine REAL. This was done by accessing the Enamine website (https://new.enaminestore.com/draw-search) and downloading approximately 100 nearest neighbors by adjusting the similarity threshold value."}, {"title": "Global chemical space exploration", "content": "For both SF-RL and GraphGA-SF, we employed these models to solve molecular optimization problems without predefined starting points [45]. In each experiment, we assumed the presence of an oracle, i.e., a function that evaluates the desired property of a molecule, providing the ground truth value. As property evaluation is often time- and resource-intensive in real-world scenarios, each experiment was limited to 10,000 oracle calls, meaning up to 10,000 molecules could be evaluated. During optimization, all evaluated molecules were recorded, and the primary performance metric was the area under the curve (AUC) of the top-K average property value versus the number of oracle calls (AUC top-K). The reported AUC values were min-max scaled to the range [0, 1].\nWe evaluated the global chemical space optimization capabilities of SF-RL and GraphGA-SF on optimizing DRD2 inhibition [111] and four multi-objective properties from the GuacaMol benchmark [76]: Sitagliptin MPO, Scaffold Hop, Perindopril MPO, and Ranolazine MPO. DRD2 inhibition was assessed using a classifier trained on the ExCAPE-DB dataset [89], employing a support vector machine (SVM) with a Gaussian kernel and ECFP6 fingerprints to distinguish"}, {"title": "A Additional method details", "content": ""}, {"title": "A.1 Model architectures", "content": ""}, {"title": "A.1.1 Transformer decoder", "content": "SynFormer adopts the standard Transformer decoder architecture [14", "tokens": ""}]}