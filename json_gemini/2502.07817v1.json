{"title": "Temporal Model On Quantum Logic", "authors": ["Francesco D'Agostino"], "abstract": "This paper introduces a unified theoretical framework for modeling temporal memory dynam- ics, combining concepts from temporal logic, memory decay models, and hierarchical contexts. The framework formalizes the evolution of propositions over time using linear and branching temporal models, incorporating exponential decay (Ebbinghaus forgetting curve) and reactivation mechanisms via Bayesian updating. The hierarchical organization of memory is represented using directed acyclic graphs to model recall dependencies and interference. Novel insights include feedback dynamics, re- cursive influences in memory chains, and the integration of entropy-based recall efficiency. This approach provides a foundation for understanding memory processes across cognitive and computa- tional domains.", "sections": [{"title": "Temporal Logic Extensions: Preliminaries and Linear Time Models", "content": ""}, {"title": "Preliminaries", "content": "Let t \u2208 R represent a temporal parameter. A proposition P \u2208 S at time t is denoted P(t)."}, {"title": "Definition 2.", "content": "The temporal state space of a proposition P is defined as:\nT(P) = {P(t) | t\u2208R}."}, {"title": "Definition 3.", "content": "A temporal transition function f : T(P) \u00d7 R \u2192 T(P) governs the evolution of P(t). Formally:\nP(t + \u2206t) = f(P(t), \u2206t)."}, {"title": "Definition 4.", "content": "A proposition P is said to evolve in linear time if t progresses along a single deterministic timeline:\nt1 < t2 = P(t1) precedes P(t2)."}, {"title": "Definition 5.", "content": "A branching time model introduces B(t), a branching set of states:\nB(t) = {Pt(t) | b \u2208 B, B is the set of branches.}"}, {"title": "Proposition 1 (Deterministic Evolution).", "content": "If P evolves in linear time, P(t) is unique for all t \u2208 R:\nVt1, t2 \u2208 R, t1 \u2260 t2 \u21d2 P(t1) \u2260 P(t2).\nProof. Linear time implies a single deterministic timeline. Thus, the mapping t \u2192 P(t) is injective, ensuring P(t) is unique for each t."}, {"title": "Linear Temporal Logic", "content": ""}, {"title": "Definition 6.", "content": "Temporal operators are defined as:\nAlways: P holds if P(t) is true for all t e R.\nEventually: \u25c7P holds if P(t) is true for some t \u2208 R.\nNext: OP holds if P(t + \u2206t) is true for a specific \u2206t > 0."}, {"title": "Theorem 1 (Linear Temporal Constraints).", "content": "For a proposition P in linear time, the following equiva- lences hold:\nOP \u21d2 \u25c7P, OP \u21d2 OP.\nProof. If P, P(t) holds for all t. Hence, there exists at least one t such that P(t), satisfying \u25c7P. However, \u25c7P only ensures P(t) holds at some t, not all t. Thus, \u25c7P \u21d2 OP."}, {"title": "Proposition 2 (Temporal Transition Consistency).", "content": "For all P \u2208 S evolving in linear time:\n(P) \u21d2 \u25a1(OP).\nProof. If (P), then P(t) is true at all t + \u2206t. This implies (P), where \u25cbP holds consistently for all transitions."}, {"title": "Branching Time Extensions", "content": ""}, {"title": "Definition 7.", "content": "In a branching time model, P(t) att branches into multiple states:\nP(t) = \\cup_{bEB} P_{b}(t),\nwhere B is the set of all branches."}, {"title": "Proposition 3 (Branch Realization).", "content": "A branch b \u2208 B is realized if:\n\u2203t\u2208 R, M(P_{b}(t)) \u2260 1.\nProof. Measurement M collapses P_{b}(t) into a resolved state. If M(P_{b}(t)) = 1 for all t, the branch remains unrealized."}, {"title": "Corollary 1 (Branching Superposition).", "content": "If P(t) exists across branches, it holds in superposition:\nP(t) = \\cup_{bEB} {P_{b}(t)}."}, {"title": "Realization and Decay Dynamics", "content": ""}, {"title": "Definitions and Preliminaries", "content": ""}, {"title": "Definition 8.", "content": "A proposition P \u2208 S is said to be in a realized state during the interval [tr,tf), denoted:\nP(!t) for t \u2208 [tr,tf),\nwhere tr is the time of realization and tf is the time the realization ends."}, {"title": "Definition 9.", "content": "After tf, the relationship weakens, and P transitions to a decayed memory state, denoted:\nP(?t) for t\u2265 tf."}, {"title": "Definition 10.", "content": "The decay function d(t) governs the strength of the relationship for P(?t), where:\nd(t): [tf,\u221e) \u2192 [0, 1],\nsuch that d(tf) = 1 and limt\u2192\u221e d(t) = 0."}, {"title": "Definition 11.", "content": "The reactivation function r(Cm,t) determines whether P(?t) transitions back to P(!t') under a triggering context Cm. Formally:\nr(C_{m,t}) = \\begin{cases}\n1, & \\text{if } C_m \u2260 \u00d8, \\\\\n0, & \\text{if } C_m = \u00d8.\n\\end{cases}"}, {"title": "Theorems and Propositions", "content": ""}, {"title": "Theorem 2 (Realization-Decay Transition).", "content": "For any P\u2208S, the temporal state of P transitions as:\nP(t) = \\begin{cases}\nP(!t), & \\text{t\u2208 [tr,tf)}, \\\\\nP(?t), & \\text{t\u2265ts}.\n\\end{cases}\nProof. By Definition 8, P(!t) holds during [tr, tf). At tf, by Definition 9, P(?t) replaces P(!t), indicating a decayed memory state. Thus, P(t) transitions as described."}, {"title": "Proposition 4 (Decay Strength).", "content": "The strength of P(?t) over time is given by:\nStrength(P(?t)) = d(t), t\u2265 tf."}, {"title": "Proposition 5 (Memory Reactivation).", "content": "If Cm \u2260 \u00d8, the decayed state P(?t) transitions back to P(!t') for some t' > tf:\nP(?t) \\xrightarrow{C_m} P(!t').\nProof. By Definition 11, r(Cm,t) = 1 if Cm \u2260 \u00d8. The triggering context Cm activates the transition, restoring P(!t') as the realized state."}, {"title": "Corollary 2 (Persistent Decay).", "content": "If Cm = \u00d8, P(?t) remains in the decayed state:\nP(?t) \u2192 \\varnothing as t\u2192\u221e.\nProof. For Cm = \u00d8, r(Cm, t) = 0. Thus, by Definition 11, no reactivation occurs, and P(?t) follows the decay function d(t), tending to \\varnothing as t \u2192 \u221e."}, {"title": "Theorem 3 (Unified Realization and Decay).", "content": "The dynamics of P(t) can be expressed as:\nP(t) = \\begin{cases}\nP, & \\text{t\u2208 [tr,tf)}, \\\\\nd(t)P_m, & \\text{t\u2265 tf}.\n\\end{cases}\nProof. By Theorem 1, P(t) transitions from P(!t) to P(?t). For t\u2265 tf, the memory state P(?t) is governed by the decay function d(t), weighted by the memory representation Pm. Thus, the dynamics follow the described form."}, {"title": "Proposition 6 (Temporal Operator Decay).", "content": "For P\u2208 S, the temporal operator \u25c7P holds if:\n\u2203t \u2265 tf, d(t) > 0.\nProof. The operator \u25c7P requires P(t) to hold at some t. Since d(t) > 0 implies P(?t) \u2260 1, the condition is satisfied for t > tf as long as d(t) > 0."}, {"title": "Corollary 3 (Memory Fading and Temporal Logic).", "content": "If d(t) = 0 as t \u2192 \u221e, \u25a1P(?t) cannot hold:\nP(?t) = 0, as t\u2192\u221e.\nProof. The operator \u25a1P(?t) requires P(?t) to hold for all t > tf. If d(t) = 0 for t \u2192 \u221e, P(?t) \u2192 1, violating the condition."}, {"title": "Ebbinghaus Memory Decay Dynamics", "content": ""}, {"title": "Definition 12.", "content": "The memory decay function d\u0118(t), based on Ebbinghaus' forgetting curve, is defined as:\nde(t) = e^{-x(t-tf)},\nwhere:\n>> 0 is the decay constant, determining the rate of memory fading,\ntf is the time at which the realization ends,\nt\u2265 tf is the time of observation."}, {"title": "Proposition 7 (Ebbinghaus Decay Dynamics).", "content": "For P(?t) governed by de(t), the strength of the memory state is:\nStrength(P(?t)) = e^{-x(t-tf)} for t \u2265 tf.\nProof. By Proposition 6, the strength of P(?t) decays exponentially with time t beyond tf. Substituting de(t) = e^{-x(t-tf)}, the result follows directly."}, {"title": "Theorem 4 (Ebbinghaus Temporal Limit).", "content": "As t \u2192 \u221e, the strength of P(?t) decays to zero:\n\\lim_{t\\to\\infty} Strength(P(?t)) = 0.\nProof. By Proposition 7, Strength(P(?t)) = e^{-x(t-tf)}. Taking the limit as t \u2192 \u221e:\n\\lim_{t\\to\\infty} e^{-x(t-tf)} = 0.\nHence, the memory state P(?t) approaches \\varnothing as t \u2192 \u221e."}, {"title": "Proposition 8 (Reactivation with Decay).", "content": "If Cm \u2260 \u00d8 triggers reactivation at time t' > tf, the strength of P(?t) is restored to a realized state:\nP(?t) \\xrightarrow{C_m} P(!t'), with Strength(P(!t')) = 1.\nProof. Reactivation requires r(Cm,t') = 1, resetting de(t') to its maximum value, de(t') = 1. The transition restores P(!t') as the realized state."}, {"title": "Corollary 4 (Decay and Subsequent Reactivation).", "content": "If P(?t) decays following de(t), repeated reactivation at intervals tk resets de(t). Formally:\ntk > tk-1 \u21d2 de(tk) = 1 \u2200k\u2208N.\nProof. Each reactivation resets the decay curve de(t) to 1, as proven in Proposition 8. Thus, de(tk) = 1 for all k."}, {"title": "Proposition 9 (Decayed Memory and Ebbinghaus Curve).", "content": "If Cm = \u00d8, P(?t) follows de(t) without reactivation:\nStrength(P(?t)) = e^{-x(t-tf)} as t\u2192\u221e.\nProof. By Theorem 4 and Proposition 8, the absence of reactivation ensures de(t) continues decaying exponentially. Thus, P(?t) \u2192 \\varnothing as t \u2192 \u221e."}, {"title": "Memory Interference and Hierarchical Contextual Dynamics", "content": ""}, {"title": "Definitions and Preliminaries", "content": ""}, {"title": "Definition 13.", "content": "Let S denote the set of all propositions. A subset {P1, P2, ..., Pn} C S forms a memory chain if there exists a relation R : S \u00d7 S \u2192 [0,1] such that:\nR(Pi, P\u2081) > 0 \u2200i, j\u2208 {1,2,..., n}."}, {"title": "Definition 14.", "content": "A hierarchical context C is a nested structure:\nC = {C1, C2,... },\nwhere Ci Ci+1 represents a subcontext contained within a broader context."}, {"title": "Definition 15.", "content": "A proposition P belongs to a specific context C if:\nPEC\ni such that P\u2208 Ci and Ci \u2208 C."}, {"title": "Definition 16.", "content": "The contextual degree of relation RC(Pi, Pj) measures the relationship between two propositions Pi, Pj within a shared context Ck:\nRC(Pi, Pj) = \\begin{cases}\nR(P_{i}, P_3), & \\text{if } P_i, P_j \u2208 C_k, \\\\\n0, & \\text{otherwise}.\n\\end{cases}"}, {"title": "Hierarchical Memory Chains", "content": ""}, {"title": "Proposition 10 (Hierarchical Chains).", "content": "Propositions in C form a hierarchical memory chain if:\nRc(Pi, Pj) > 0 \u2200Pi, Pj \u2208 Ck and Ck \u2286 C.\nProof. By Definition 16, Rc(Pi, Pj) > 0 indicates a relationship within the shared context Ck. If Pi, Pj are in Ck and Ck CC, then the memory chain is hierarchical."}, {"title": "Theorem 5 (Contextual Hierarchical Propagation).", "content": "If Pi \u2208 Ck and Ck \u2286 C, the recall of Pi propagates to Pj in broader contexts C\u03b9 (l > k):\nRC(P_i, P_j) > T \u21d2 P_j \\text{ is recalled}.\nProof. If RC(Pi, P\u2081) > T, Pj shares a strong relationship with Pi in Ck. The propagation extends to C\u03b9 (l > k) since Ck C Cl, maintaining the relationship."}, {"title": "Entanglement in Hierarchical Structures", "content": ""}, {"title": "Proposition 11 (Contextual Entanglement).", "content": "Propositions Pi, P; within a shared context Ck are entan- gled if:\nRc(Pi, Pj) > Te,\nwhere Te is the entanglement threshold. Formally:\nRC(Pi, Pj) > Te \u21d2 Pi \\leftrightarrow Pj.\nProof. By Definition 16, Rc(Pi, Pj) > te implies a strong relationship within Ck. This mutual depen- dence results in entanglement Pi \\leftrightarrow Pj."}, {"title": "Corollary 5 (Hierarchical Entanglement).", "content": "Entangled propositions in a lower context Ck remain entan- gled in higher contexts C\u0131 (l > k):\nPi\\leftrightarrow Pj \\text{ in } C_k \u21d2 Pi \\leftrightarrow Pj \\text{ in } C_i.\nProof. If Pi\\leftrightarrow Pj in Ck, the relationship Rc (Pi, Pj) > te holds in Ck. Since Ck C Cl, the entanglement persists in Cr."}, {"title": "Graph Representation of Hierarchical Contexts", "content": ""}, {"title": "Definition 17.", "content": "The hierarchical structure C is represented as a directed acyclic graph G(C) = (V,E), where:\nV = {Ck | Ck \u2208 C}, E = {(Ck, C\u2081) | Ck \u2286 Ci}.\nProposition 12 (Hierarchical Recall). The recall of a proposition Pi propagates through the graph G(C) along the path \u03c0:\nP(\\text{recall } P_i) = \\sum_{\\pi\\in G(C)} \\prod_{(C_k,C_i) \\in \\pi} R_C(P_i, P_j).\nProof. Each path through G(C) contributes to the recall probability. The product of RC(Pi, Pj) along the path determines the strength of propagation, and summing over all paths yields the total recall probability."}, {"title": "Corollary 6 (Cross-Contextual Recall).", "content": "If Pi \u2208 Ck and Pj \u2208 C\u0131, recall propagates if Ck \u2286 C\u2081:\nC_k \\subseteq C_i \u21d2 P(\\text{recall } P_j) > 0.\nProof. By Proposition 10, recall propagates through G(C). If Ck \u2286 C\u2081, the path includes (Ck, Ci), enabling propagation to Pj."}, {"title": "Temporal Relations and Recall Speed", "content": ""}, {"title": "Definition 18.", "content": "The recall latency TR(Pi) is the time required for Pi(?t) to transition to Pi(!t). Recall latency depends on:\nRc(Pi, Pj): Degree of relation between Pi and a recalled proposition Pj,\nE: Environmental factors influencing the recall process."}, {"title": "Proposition 13 (Recall Latency and Relation Strength).", "content": "If Rc(Pi, Pj) > Rc(Pi, Pk), then:\nTR(P_i|P_j) < TR(P_i | P_k).\nProof. Recall latency TR(Pi) is inversely proportional to RC(Pi, Pj). If Rc(Pi, Pj) > RC(Pi, Pk), the latency TR(Pi | Pj) is shorter."}, {"title": "Definition 19.", "content": "The environmental facilitation factor E modifies recall latency:\nTR(P_i) = \\frac{TB(P_i)}{\\varepsilon},\nwhere TB(Pi) is the base latency and E > 0 amplifies or diminishes TR(Pi)."}, {"title": "Environmental Circumstances and Recall Variability", "content": ""}, {"title": "Definition 20.", "content": "Environmental circumstances E influencing recall are defined as:\nE = f(Cexternal, Cinternal),\nwhere:\nCexternal: External stimuli or context,\nCinternal: Internal cognitive states such as focus or emotional relevance."}, {"title": "Proposition 14 (High Environmental Facilitation).", "content": "If E > 1, recall latency is reduced:\n\\varepsilon >1 \u21d2 TR(P_i) < TB(P_i).\nProof. From Definition 19, TR(Pi) = TB(Pi)/\\varepsilon. If E > 1, then TR(Pi) < TB(\u0420\u0456)."}, {"title": "Proposition 15 (Low Environmental Facilitation).", "content": "If E < 1, recall latency increases:\n\\varepsilon < 1 \u21d2 TR(P_i) > TB(P_i).\nProof. By Definition 19, TR(Pi) = TB(Pi)/\\varepsilon. If E < 1, then TR(Pi) > TB(\u0420\u0456)."}, {"title": "Exceptions in Recall Latency", "content": ""}, {"title": "Definition 21.", "content": "An exceptional recall event occurs when a proposition Pk, despite weak relation RC(Pi, Pk), transitions rapidly due to high environmental facilitation:\nTR(PK) \u2192 TR(Pj) as E\u2192\u221e.\nLemma 1 (Environmental Override of Relation Strength). If E \u2192 \u221e, recall latency becomes independent of RC(Pi, Pk):\n\\lim_{8\\to\\infty} TR(Pk) = 0 \u2200Pk.\nProof. As E \u2192 \u221e, TR(Pk) = TB(PA)/\\varepsilon \u2192 0. This holds regardless of Rc(Pi, Pk)."}, {"title": "Proposition 16 (Nonlinear Recall Latency).", "content": "For low relation strength Rc(Pi, Pk), TR(Pk) follows:\nTR(Pk) = g(Rc(Pi, Pk), E),\nwhere g is nonlinear for Rc(Pi, Pk) \u2192 0.\nProof. As RC(Pi, Pk) \u2192 0, TB(Pk) \u2192 \u221e. Environmental facilitation modifies this behavior via a nonlinear function g, depending on E."}, {"title": "Observations", "content": ""}, {"title": "Corollary 7 (Far Connections with High Facilitation).", "content": "If Rc(Pi, Pk) < 1 but E \u226b 1, recall latency approaches rapid transition:\nRC(Pi, Pk) <1^E\u226b1 \u21d2 TR(Pk) \u2192 0."}, {"title": "Corollary 8 (Weak Relations and Slow Recall).", "content": "If Rc(Pi, Pk) \u2192 0 and E \u2248 1, recall latency diverges:\nRC(Pi, Pk)\u21920^E\u22481 \u21d2 TR(Pk) \u2192 \u221e.\nProof. By Proposition 15, as Rc(Pi, Pk) \u2192 0 with no amplification (E \u2248 1), TR(Pk) = \\frac{1}{RC(Pi,Pk)} \u2192 \u221e."}, {"title": "Temporal Conditions for Memory and Recall Dynamics", "content": ""}, {"title": "Definition 22.", "content": "Let P(?t) represent a proposition in a memory state and P(!t) represent a proposition in an actuated state of anamnesis. The transition from P(?t) to P(!t) occurs over a recall latency TR(Pi), defined as:\nTR(Pi) \\qquad P(?t)\\longrightarrow P(!t)."}, {"title": "Definition 23.", "content": "The recall latency TR(Pi) is determined by:\nTR(P_i) = \\frac{1}{RC(Pi, Pj) \\cdot E},\nwhere:\nRc(Pi, Pj): Degree of relation to an already recalled proposition Pj,\nE: Environmental facilitation factor."}, {"title": "Theorem 6 (Time-Dependent Transition Probability).", "content": "The probability of transitioning from P(?t) to P(!t) at time t is given by:\nP(transition at t) = 1 \u2212 e^{-\\frac{t}{TR(Pi)}}.\nProof. The transition probability follows an exponential activation model based on recall latency TR(Pi). The cumulative probability over time is:\nP(\\text{transition at } t) = \\int_{0}^{t} e^{-\\frac{\\tau}{TR(Pi)}} d\\tau,\nwhich simplifies to:\n1-e^{-\\frac{t}{TR(Pi)}}."}, {"title": "Lemma 2 (Relation Strength and Transition Speed).", "content": "If Rc(Pi, Pj) > Rc(Pi, Pk), then the transition time satisfies:\nTR(Pi | Pj) <TR(Pi | Pk).\nProof. By Definition 23, TR(P\u2081) is inversely proportional to Rc(Pi, Pj). Hence, stronger relations reduce the latency TR(Pi), satisfying the inequality."}, {"title": "Corollary 9 (Environmental Modulation of Recall Time).", "content": "For fixed Rc(Pi, Pj), higher E reduces tran- sition latency:\n\\varepsilon_1 > \\varepsilon_2 \u21d2 TR(P_i | \\varepsilon_1) < TR(P_i | \\varepsilon_2).\nProof. From Definition 23, TR(Pi) = \\frac{1}{RC(Pi, Pj)E}. Increasing & decreases Tr(Pi), proving the corollary."}, {"title": "Temporal Hierarchies in Recall Dynamics", "content": ""}, {"title": "Definition 24.", "content": "A proposition Pi belongs to a temporal hierarchy H(P) if it satisfies:\nH(P) = {P | TR(Pi) \u2264 \u0454 for a given threshold e}."}, {"title": "Proposition 17 (Hierarchical Transition Order).", "content": "For a set of propositions {P1, P2, ..., Pn} in H(P), transitions occur in the order of increasing TR:\nTR(P1) <TR(P2) <\uff65\uff65\uff65<TR(P\u2082) \u21d2 P\u2081 \u2192 P\u2082 \u2192 \u2026 \u2192 Pn.\nProof. The transition order follows directly from the latency TR(Pi). Propositions with shorter latencies transition first, dictating the hierarchical order."}, {"title": "Lemma 3 (Interruption by Environmental Facilitation).", "content": "A proposition Pk \u2209 H(P) may transition earlier than P; \u2208 H(P) if Ek \u00bb Ej:\nEk \u00bb Ej \u2192 TR(Pk) <TR(Pj).\nProof. Environmental facilitation & modifies TR(Pi) = 1/(RC(Pi,Pj)*E). If Ek \u00bb Ej, the reduction in TR(Pk) overrides relation strength RC(Pi, Pk), allowing earlier transition."}, {"title": "Temporal Dynamics of Memory and Recall", "content": ""}, {"title": "Theorem 7 (Unified Transition Dynamics).", "content": "The state of Pi(t) evolves as:\nPi(t) = \\begin{cases}\nP(?t), & t <TR(Pi), \\\\\nP(!t), & t\u2265 TR(Pi).\n\\end{cases}\nProof. By Definition 22, Pi(?t) transitions to Pi(!t) after a recall latency TR(Pi). The transition dynamics follow the defined temporal framework, resulting in the stated evolution."}, {"title": "Corollary 10 (Iterative Transitions in Temporal Hierarchies).", "content": "If H(P) contains multiple propositions, the state evolution satisfies:\nPi(t) = P(?t) \\quad  \\forall i \\text{ with } TR(P_i) > t.\nProof. Propositions with TR(P\u2081) > t remain in P(?t) until their respective latencies elapse, transitioning to P(!t) afterward."}, {"title": "Entropy and Memory Chains", "content": ""}, {"title": "Definition 25.", "content": "The entropy H(C) of a memory chain C = {P1, P2, . . ., Pn} is defined as:\nH(C) = - \\sum_{i=1}^{n} p(P_i) \\log p(P_i),\nwhere p(Pi) is the probability of recalling Pi within C."}, {"title": "Proposition 18 (Entropy and Relation Strength).", "content": "If the average Rc(Pi, Pj) in C is high, then H(C) is low. Conversely, if Rc(Pi, Pj) is low, H(C) increases.\nProof. Strong relationships (Rc(Pi, Pj)) lead to higher p(Pi) values, reducing H(C). Weaker relationships spread p(Pi) more evenly, increasing H(C)."}, {"title": "Theorem 8 (Entropy and Recall Latency).", "content": "Higher entropy in C corresponds to longer average recall latency TR(C). Formally:\nH(C) \\propto \\frac{1}{n} \\sum_{i=1}^{n} TR(Pi).\nProof. Higher entropy indicates weaker organization and lower relation strengths. By Definition 23 of TR(Pi), lower Rc(Pi, Pj) increases Tr(Pi). Averaging over n propositions links H(C) to TR(C)."}, {"title": "Simultaneous Influences in Memory Chains", "content": ""}, {"title": "Definition 26.", "content": "Let S = {P1,P2,...,Pn}. The simultaneous influence I(Pi, Pj) of Pi on Pj is defined as:\nI(Pi, Pj) = \\frac{RC(P_i, P_i)}{TR(P_i)}."}, {"title": "Proposition 19 (Mutual Influence).", "content": "If Pi and Pj are entangled, their mutual influence is:\nI(Pi, Pj) = I(Pj, Pi).\nProof. Entanglement implies Rc(Pi, Pj) = RC(Pj, Pi), and TR(Pi) and TR(Pj) influence each other symmetrically. Hence, I(Pi, Pj) = I(Pj, Pi)."}, {"title": "Theorem 9 (Simultaneous Influence on Recall Latency).", "content": "The recall latency TR(Pi) is adjusted by the cumulative influence of all related propositions Pj:\nTR(P_i) = \\frac{1}{\\sum_{j\\neq i} I(P_j, P_i)}\nProof. The recall latency TR(Pi) is defined as inversely proportional to the cumulative influence I(Pj, Pi) of all related propositions Pj, as stated in Definition 23. The cumulative influence I(Pj, Pi) is given by:\nI(P_j, P_i) = \\frac{RC(P_j, P_i)}{TR(P)}.\nwhere Rc (Pj, Pi) denotes the relational strength between Pj and Pi, and TR(P;) represents the recall latency of Pj. By summing the influence I(Pj, Pi) over all j \u2260 i, the total influence on Pi is expressed as:\n\\sum_{j\\neq i} I(P_j, P_i) = \\sum_{j\\neq i} (\\frac{RC(P_j, P_i)}{TR(P)}).\nThe recall latency TR(Pi) is defined to be inversely proportional to this total influence, leading to:\nTR(P_i) = \\frac{1}{\\sum_{j\\neq i} I(P_j, P_i)}\nTo verify, substitute I(Pj, Pi) into the equation:\nTR(P_i) = \\frac{1}{\\sum_{j\\neq i} (\\frac{RC(P_j, P_i)}{TR(P)})}\nThis demonstrates that TR(Pi) decreases as the cumulative influence \u2211jzi I(Pj, Pi) increases, aligning with the relationship that higher influence leads to reduced recall latency. By the definition of cumulative influence and its inverse proportionality to recall latency, the theorem is established rigorously and directly."}, {"title": "Dynamic Feedback and Ebbinghaus Curve Reset", "content": ""}, {"title": "Definition 27.", "content": "The feedback influence F(Pi, Pj) from Pi to Pj modifies TR(Pj) when Pi is recalled. This is modeled as:\nF(Pi, Pj) = \u03b1\u00b7 Rc(Pi, Pj),\nwhere a is a feedback coefficient."}, {"title": "Proposition 20 (Ebbinghaus Reset Mechanism).", "content": "If Pi is recalled at tr, the Ebbinghaus decay of Pi resets to:\nde(Pj,t) = e^{-x(t-tr)},\nwhere X is the decay constant."}, {"title": "Proof.", "content": "Recalled Pi increases the salience of Pj, resetting its decay de(Pj,t) to its initial value (e\u00ba = 1) at t = tr."}, {"title": "Theorem 10 (Feedback Influence on Recall Latency).", "content": "The adjusted recall latency TR(Pj) after Pi is recalled satisfies:\nTR(P_i) = \\frac{TB(P_i)}{1+F(Pi, P_i)}\nProof. By Definition 27, feedback F(Pi, Pj) reduces TR(P;) by increasing the salience of Pj. The adjust- ment scales inversely with 1 + F(Pi, P;)."}, {"title": "Corollary 11 (Feedback Loop in Recall Dynamics).", "content": "Repeated recall of Pi creates a feedback loop for Pj:\nTR(P_i) \\to 0 \\quad \\text{as } F(P_i, P_j) \\to \\infty.\nProof. As F(Pi, Pj) grows unbounded, TR(P;) = TB(P_i)/(1+F(Pi,Pj)) \u2192 0, ensuring rapid recall of Pj."}, {"title": "Bayesian Inference and Ebbinghaus Reset Mechanism", "content": ""}, {"title": "Definition 28.", "content": "Let Pi and P; be two propositions in a memory chain. The conditional probability P(Pj | Pi) represents the likelihood of recalling P; given that Pi has been recalled."}, {"title": "Definition 29.", "content": "The Bayesian update rule for P(P; | Pi) after Pi is recalled is given by:\nP(P_j | P_i) = \\frac{P(P_i | P_j)P(P_j)"}, {"P(P_i)}\nwhere": "nP(Pi | Pj): Likelihood of recalling Pi if P; is present", "nP(P;)": "Prior probability of recalling P"}]}