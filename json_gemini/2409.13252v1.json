{"title": "Leveraging Knowledge Graphs and LLMs to Support and Monitor Legislative Systems", "authors": ["Andrea Colombo"], "abstract": "Knowledge Graphs (KGs) have been used to organize large datasets\ninto structured, interconnected information, enhancing data ana-\nlytics across various fields. In the legislative context, one potential\nnatural application of KGs is modeling the intricate set of intercon-\nnections that link laws and their articles with each other and the\nbroader legislative context.\nAt the same time, the rise of large language models (LLMs) such\nas GPT has opened new opportunities in legal applications, such as\ntext generation and document drafting. Despite their potential, the\nuse of LLMs in legislative contexts is critical since it requires the\nabsence of hallucinations and reliance on up-to-date information,\nas new laws are published on a daily basis.\nThis work investigates how Legislative Knowledge Graphs and\nLLMs can synergize and support legislative processes. We address\nthree key questions: the benefits of using KGs for legislative systems,\nhow LLM can support legislative activities by ensuring an accurate\noutput, and how we can allow non-technical users to use such\ntechnologies in their activities. To this aim, we develop Legis AI\nPlatform, an interactive platform focused on Italian legislation that\nenhances the possibility of conducting legislative analysis and that\naims to support lawmaking activities.", "sections": [{"title": "1 Introduction", "content": "Knowledge Graphs (KGs) have been widely popular in recent years\ndue to their ability to organize vast amounts of complex data in a\nway that is easily navigable and semantically rich. KGs have found\napplications across diverse fields, from healthcare and finance [13]\nto biology [7] and education [20]. Their power lies in transforming\nunstructured data into structured, interconnected information, en-\nabling more sophisticated data analytics [10, 14], for instance, by\nutilizing graph algorithms [21] or by improved machine learning\noutcomes and more intuitive user interactions. In the context of\nlegislative systems, a Knowledge Graph model can be used to repre-\nsent legislative data that interconnects various entities such as bills,\nstatutes and legislators. It enables an easy integration and retrieval\nof complex legislative information, providing insights into the rela-\ntionships and dependencies between different components of the\nlegislative framework. Given the unstructured nature of legislative\ntexts, the main challenge in this context is to build a domain-specific\nKnowledge Graph, i.e., an accurate and reliable KG [18], that could\nbe used to conduct interactive and quantitative analysis.\nMore recently, with the advent of large language models (LLMs),\nsuch as GPT or LLama, many practical applications of LLMs in\nthe legal context are possible, such as legal text classification, in-\nformation extraction and retrieval pipelines that have started to\nappear [6, 19], with also some first attempt in more critical tasks\nsuch as Legal Documents Drafting [12]. However, in the latter case,\nthe presence of hallucinations makes the task much harder due to\nthe critical nature of the drafting of a new legal document, be it a\nnew law or a contract. LLMs are, in fact, black-box models that fall\nshort of capturing and accessing factual and updated knowledge,\nwhich undermines the results of such tools, for instance, by not\npresenting a proper legal foundation for drafted legal documents.\nIn contrast, Knowledge Graphs (KGs) store up-to-date external\nknowledge but do not offer users the friendly access and human\ninterpretability that an LLM can achieve.\nIn this work, we analyze how we can use Legislative Knowledge\nGraphs and LLM to support legislative processes. In particular, our\nresearch questions might be summarized as follows:\nRQ1 Which are the benefits of using Knowledge Graphs to represent\nlegislative systems?\nRQ2 How can we use Large Language Models to support legislative\nactivities in an accurate manner and without hallucinations?\nRQ3 How can we present the result of these approaches to interested\nstakeholders, mainly non-IT users?\nTo answer such research questions, we have been inspired by\nrecent literature showing the benefits of leveraging the synergy\nbetween a domain-specific Legislative Knowledge Graph - that we"}, {"title": "2 Background", "content": "The foundations of this work rely on the possibility of representing\nlegislative systems in a Knowledge Graph. While most of the liter-\nature has notably focused on RDF-based graph approaches [1, 2],\npushed by the Semantic Web community and the need to link knowl-\nedge bases by providing globally unique and resolvable identifiers\nover multiple domains, we looked at a more flexible solution, which\ncould offer more graph traversal capabilities and a more compact\nrepresentation of the complexities of legislative systems. Our pro-\nposed solution was to use property graphs, a type of data structure\nwhere nodes (vertices) and edges (relationships) can have associ-\nated properties (key-value pairs) [3]. This allows for detailed and\ncomplex information to be captured within the graph, facilitating\nadvanced querying and analysis. In addition, the recent develop-\nment of expressive conceptual, machine-readable XML models of\nvarious aspects of general legislative knowledge, such as the Legal\nKnowledge Interchange Format (LKIF) [11], LegalRuleML [4] and\nAkoma Ntoso (AKN) [5] simplify the possibility of transforming\nan initially unstructured source of data into a graph database. In\nparticular, AKN has also been adopted by a wide range of interna-\ntional organizations and national legislation, such as the European\nParliament [17] or the Italian bureaucracy, making it also useful for\ndeveloping a consistent, interchangeable pipeline that is applicable\nto distinct legislative systems. In fact, by leveraging the XML tags\nof the standard, we can gather knowledge graphs consistent across\nnational legislations, making them comparable.\nThe Italian Legislative Property Graph In [8] we presented\nboth the schema of a Legislative Property Graph and we applied\nit to the Italian legislation, whose laws are available in AKN. This\nalso included an ETL pipeline from Normattiva [9], the official\ndata source of Italian laws, to extract relevant properties of nodes\nand edges, enriching the overall model. These include the domain\nof reference identified by the ministry that signed the law or the\nspecificity of the references, i.e., whether the reference further\nspecifies a paragraph of interest."}, {"title": "3 Overview of the Legis AI Platform", "content": "The Legis AI Platform platform aims to analyze, monitor, and sup-\nport Italian legislative activity by utilizing graph database tech-\nnologies and artificial intelligence, with integrations that leverage\nthe capabilities of generative Al in a precise and effective manner.\nThe goal is to provide a comprehensive, real-time, updated, and\neasily accessible analysis tool to better understand the evolution\nand complexity of the Italian legislative system. Its home page can"}, {"title": "3.1 Law Analysis", "content": "The first module of the platform focuses on the individual analysis\nof legal texts by illustrating their metadata, querying the Legislative\nKnowledge Graph, and employing linguistic metric functions to\nderive insights into the textual quality of the law. All of this is\nthen presented to the user in a readable textual report, obtained\nby leveraging the capabilities of LLMs to create fluent text starting\nfrom a list of factual inputs. Here, we leverage the KG as a plain\ndata source to retrieve the laws of interest. For each law, linguistic\nmetrics are computed and presented both in the form of indicators\nand within a report that is generated on the fly by an LLM and\npresented in the UI. In this module, we try to tackle RQ2 and RQ3\nfrom a practical perspective: by limiting the task of the LLM to\nthe generation of textual reports and providing all the necessary\ninput, we manage to leverage the enormous potential in generating\ntext but without incurring in major distortion within the text and\npresenting a quality report in a user-friendly and interactive format,\ni.e., allowing users to choose the set of laws to be compared with.\nTextual Analysis. After the selection of a law of interest, linguis-\ntic quality metrics are computed. In particular, we consider simple\nmetrics such as the average length of words, the average length of\nsentences, the relative number of gerunds, adjectives, and pronouns,\nand more complex readability indexes that are popular in the lin-\nguistic computing literature, namely, the Flesch Reading Ease index,\nthe Embedding and Center Embedding indices and the Gulpease\nindex, which is specifically designed for the Italian language. All of\nthem are good indicators of textual complexities in laws [15].\nReport Generation. The readability and comprehensibility indices\nare used to generate textual reports using generative artificial intel-\nligence. Users can select a set of laws of interest against which a\nspecific law can be compared. For instance, you can compare the\nquality of a newly published law against the set of laws referring\nto the same topic. As the model is specifically parametrized and\nrequested not to provide recommendations, the model is not subject\nto the problem of producing \"hallucinations\" and sticks to the task"}, {"title": "3.2 Supporting the Lawmaking Process", "content": "The second module of the platform addresses other aspects of all\nresearch questions as it aims to assist users in the legislative initia-\ntive process in two ways: by allowing a preventive analysis of the\nlaws currently under review - such that their text can be improved\nbefore publication - and by providing support for the identification\nof the legislative landscape regarding a certain topic the legislator\nmight want to address.\nPreventive Analysis of Draft Laws. Each proposal that is in\ndiscussion or has been presented in the Italian parliament can be\ngathered through a dedicated API 1. For such soon-to-be laws, meta-\ndata are extracted and presented to users, such as the proponent's\nname, which is then linked to its biographical information via the\nconnection to Wikidata. In this module, we also implemented the\nfunctionality we envisioned for Section 3.1. However, in this sce-\nnario, we are allowing a preventive analysis, which could help the\nlegislative initiative process be driven towards a better quality of\nthe proposals, bringing in less ambiguity and complexity in the\ntext.\nUnlike the comparison proposed for existing laws, here the task\nis more complex. In fact, while for the latter, users could choose\nset of laws based on pre-defined metadata of the law, such as the\npublication year or the domain, their absence in drafted laws raises\nthe problem of defining a set of laws to be used for this task. To\nthis end, we developed an approach that first uses LLMs to identify\nthe relevant laws that treat the same topics as the draft ones. This\napproach can be summarized by the following three steps:\n(1) Topic Extraction. First, an appropriately parameterized\nLLama-3 70B model is asked to identify the reference topics\nfor the title or keywords entered. For example, if \"regula-\ntion of artificial intelligence technologies\" is entered, the\ncorresponding domains will be \"computer science\" and \"in-\nnovative technologies\".\n(2) Extraction of Relevant Laws via Textual Embedding.\nUsing a textual embedding model 2, in-force laws 3 that ad-\ndress the same topics are retrieved. For this purpose, a Vector\nIndex on the Knowledge Graph is used, enabling an efficient\nsearch called Approximate Nearest Neighbor (ANN) through\nthe Hierarchical Navigable Small World (HNSW) algorithm.\n(3) Generation of the Report. As for the analysis of existing\nlaws, the LLama-3 70B model is asked to generate the fi-\nnal report based on the statistics calculated on the new bill\nproposal.\nIdentification of the Normative Landscape. In a related sec-\ntion of this module, we also developed an approach to support\nthe drafting of new law proposals, allowing the identification of\nthe normative framework within which they will be inserted. To"}, {"title": "3.3 Monitor System Complexity", "content": "In the remaining modules, we use the Knowledge Graph represen-\ntation to perform interactive analyses, mainly on an aggregate level.\nSpecifically, we let the user perform queries over the legislative\nsystem by leveraging a user-friendly front-end that communicates\nwith the graph through Cypher, Neo4j's declarative query language.\nUsers can modify parameters, such as the temporal granularity of\ninterest, and download the resulting datasets from the analyses. We\nalready showed how a graph data model is very good at represent-\ning the complexity of the interconnection of a legislative system [8],\nallowing non-trivial queries that compute system complexity met-\nrics or that allow users to monitor its temporal evolution."}, {"title": "4 Evaluation Approach and Future Work", "content": "We plan to conduct two studies to validate the results and metrics\nderived from our approaches and presented in our platform. First,\nwe will perform a user study, asking legal experts (e.g., law students)\nto evaluate the quality of a sample of laws or even individual law\narticles. The results of this study will allow us to validate the indices\npresented on the platform and the reports generated by the LLM.\nThen, we will validate the second module of Legis AI Platform\nby conducting an empirical study: we will use recent laws that\nhave come into force as a test set to calculate recall and precision\nmeasures, determining the tool's usefulness in identifying relevant\nacts that have been in fact used as the legal foundation of the law.\nIn addition, we plan to continue our interactions with the po-\ntential users of the platform, namely legislator representatives (i.e.,\nCamera dei Deputati), journalists, and researchers who have ex-\npressed their interest in such a tool. More specifically, we will try\nto understand how to leverage the graph representation to perform\nnetwork analysis, eventually by combining them with LLMs.\nIn future iterations, we plan to further explore LLM's potential\nsynergies with Legislative Knowledge Graphs. In particular, we plan\nto develop interactive ChatBots that can leverage the data model\neither to answer complexity queries made in natural language, by\nusing Text-to-Cypher approaches, or by using it as an assistant\nthat helps investigate the content of the laws and using the inter-\ndependencies of the KG to provide more complete responses. While\nwe are now focusing on the Italian landscape, we also plan to\nreplicate or even compare distinct national legislation with a project\nover the US federal laws that has already started."}, {"title": "5 Conclusion", "content": "The platform was built to assist in the supervision and support\nof legislative processes. This was achieved by developing a user-\nfriendly platform based on the most recent technologies and ap-\nproaches adapted to the context of computer law. We focused on\nthe reporting activity and on supporting the lawmakers in draft-\ning new laws. Great care has been taken to ensure the absence of\n\"hallucinations\" and to maintain a neutral stance of the AI models,\nthus preventing them from providing recommendations or opinions\non the issues. This was achieved through a combined approach of\nprompt engineering, retrieval-augmented generation on a graph,\nand objective metrics for evaluating the quality of laws."}]}