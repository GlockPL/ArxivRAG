{"title": "Chemical Reaction Neural Networks for Fitting Accelerated Rate Calorimetry Data", "authors": ["Saakaar Bhatnagar", "Andrew Comerford", "Zelu Xu", "Davide Berti Polato", "Araz Banaeizadeh", "Alessandro Ferraris"], "abstract": "As the demand for lithium-ion batteries rapidly increases there is a need to design these cells in a safe manner to mitigate thermal runaway. Thermal runaway in batteries leads to an uncontrollable temperature rise and potentially fires, which is a major safety concern. Typically, when modelling the chemical kinetics of thermal runaway calorimetry data (e.g. Accelerated Rate Calorimetry (ARC)) is needed to determine the temperature-driven decomposition kinetics. Conventional methods of fitting Arrhenius Ordinary Differential Equation (ODE) thermal runaway models to Accelerated Rate Calorimetry (ARC) data make several assumptions that reduce the fidelity and generalizability of the obtained model. In this paper, Chemical Reaction Neural Networks (CRNNs) are trained to fit the kinetic parameters of N-equation Arrhenius ODEs to ARC data obtained from a Molicel 21700 P45B. The models are found to be better approximations of the experimental data. The flexibility of the method is demonstrated by experimenting with two-equation and four-equation models. Thermal runaway simulations are conducted in 3D using the obtained kinetic parameters, showing the applicability of the obtained thermal runaway models to large-scale simulations.", "sections": [{"title": "1 Introduction", "content": "Thermal runaway in battery packs is a major safety concern for commercial applications such as electric vehicles, potentially leading to catastrophic outcomes like battery pack fires. This phenomenon occurs due to thermal abuse conditions that lead to exothermic degradation reactions of battery components, such as anode decomposition, cathode conversion, SEI decomposition, and electrolyte breakdown[1, 2]. Typical thermal abuse failure modes include, but are not limited to, physical damage, internal short circuits, overcharging, or overheating (e.g., extreme temperature exposure) [1]. The heat released un- der such conditions, when a cell or group of cells fails, can lead to a chain reaction where adjacent cells enter a self-heating state and undergo thermal runaway [3]. This propagation can consume an entire battery module or pack. These safety concerns are even more pressing in today's electrification environment, particularly as the industry moves towards higher power and energy density cells[1, 4]. To address these concerns, cell and pack manufacturers must adhere to strict safety protocols to avoid catastrophic outcomes. Simulation-driven design offers a platform to optimize designs and aid in the prevention and mitigation of thermal runaway. For example, thermal analysis of novel heat shield materials can be conducted efficiently to understand their effectiveness at mitigating propagation.\nTypically, when modeling thermal runaway, chemical decomposition kinetics are represented by multiple Arrhenius Ordinary Differential Equations (ODEs) [2, 5, 6]. These reaction rates, combined with the reaction enthalpy, allow for the prediction of chemical heat generation under abuse scenarios. For each of the Arrhenius ODEs, the kinetic parameters and heat of reaction must be determined. In the literature, a popular model is that proposed by Hatchard et al. [5]. This model utilized calorimetry- derived data to model thermal runaway in an 18650 Lithium Cobalt Oxide (LCO) cell for the anode, cathode, and SEI decomposition reactions. The model utilized a lumped approach, that is treating the jellyroll as a single temperature, and demonstrated excellent agreement with experimental oven tests. This model has been the basis of a number of subsequent models and has been extended to simulate other cell types, 3D domains (i.e. not lumped), additional decomposition reactions (e.g., electrolyte breakdown and short circuit events), and different cathode chemistries[6-10]. In addition to these Hatchard-derived models, parameter estimation for the generic Arrhenius ODE have been proposed in the literature. The model by Shelkea et al. [11], which is similar to [5] and [6], but with the addition of a mix term to match the experimental accelerated rate calorimetry (ARC) data, is one example. Ping et al. [12] demonstrated a five-stage model also based on ARC data. The kinetic and reaction heat parameters were determined through a combination of parameter fitting and literature data. More details regarding this method are provided later. Feng et al. [13] proposed an elaborate mathematical model based on literature (e.g. [5]) and some novel formulations, demonstrating excellent agreement with the ARC experimental data. Their model utilized parameters from the literature and adjusted the parameters to fit experimental data; limited details of the fitting methods were provided. Chen et al. [14] introduced an ARC-derived two-stage model. The advantage of this model is it requires fewer parameters than the four-stage NREL model. Their approach demonstrated good agreement with the ARC experimental data. In general, the models currently in literature can intricately model the physics of thermal runaway, but parameter identification often relies on literature data or laborious and not necessarily robust identification methods.\nParameter estimation for thermal runaway modelling remains a major challenge and typically re- lies on calorimetry data to measure chemical heat release. In literature, there are several types of calorimetry data used, each with their own advantages and disadvantages. Some examples include: Accelerated Rate Calorimetry (ARC)[11, 13-17]; Fractional Thermal Runaway Calorimetry (FTRC) developed by NASA [18]; and Differential Scanning Calorimetry (DSC) [2, 19, 20]. FTRC can ac- curately measure heat generation and gas release during thermal runaway, offering the advantage of shorter experimental time frames compared to other calorimetry-based approaches. To the authors' knowledge, no fitting has been done on this data yet, but it represents a promising method. DSC is a thermal analysis technique that measures heat flow into or out of a sample (e.g. cathode material) as it undergoes a controlled temperature ramp. This heat flow can be used to characterize the heat generation of individual battery components, separately. Finally, ARC is one of the most common ways to characterize battery thermal runaway response for a single cell. In this experiment, the intact cell is first placed inside a thermally isolated cell holder in a sealed calorimeter chamber. The test initiates in a heat-wait-seek mode, where a heater heats the calorimeter incrementally, then pauses to allow thermal transients to decay and equilibrium conditions to be reached. If any increase in temperature rate surpasses a preset threshold value (indicating exothermic reactions), the calorimeter switches to exotherm mode. In this mode, the calorimeter tracks the temperature rise and maintains zero temperature differential between the cell surface and the calorimeter walls, ensuring adiabatic conditions. The final phase involves either full thermal runaway and subsequent cooling or simply cooling if the temperature rate falls below the preset threshold value.\nTypically in the literature, the most common method for determining reaction heat and kinetic parameters from ARC calorimeter-based data involves introducing temperature stages and linearizing the governing Arrhenius kinetic ODE within these stages[12, 14]. Parameters are then determined using least squares fitting. Dividing the data into more stages generally leads to a better representation of the underlying data. These types of thermal runaway models can be considered cell-based models as they do not directly elucidate the individual reaction kinetics of the electrodes[21]. Alternative models that provide more detailed reaction kinetic information, are the DSC component-based models (e.g. [19, 22]). Unfortunately, for the cell-based models, the numerous approximations made during the linearization process reduce the fidelity of the model and often fail to accurately represent the"}, {"title": "", "content": "underlying data (see section 3.2). Some of these inaccuracies can be alleviated through manual tuning, ultimately yielding a reasonable representation of the original data and the physical phenomena can be obtained, albeit through a laborious process.\nChemical Reaction Neural Networks (CRNNs) have been proposed to discover reaction coefficients, parameters and pathways in systems governed by the Arrhenius equations [23]. In CRNNs, the differ- ential equation\n$\\frac{dc}{dt}=f(c, \\theta, t)$,\n(1)\nis integrated in a fully differentiable manner w.r.t $\\theta$, similar to Neural ODEs [24], where f is the neural network formulated using the system of ODEs governing the chemical reactions modelled, $\\theta$ are time-independent parameters to be learnt using stochastic gradient descent using a loss metric, and c represents the time-dependent system state.\nPuliyanda et al. [25] used CRNNs to obtain chemical kinetic models from noisy spectroscopic data, achieving significant performance improvements over least squares regression. Kircher et al. [26] proposed the Global Reaction Neural Network (GRNN) architecture, embedding thermodynamic and stoichiometric prior knowledge into the network architecture, which autonomously learned kinetic models directly from noisy reactor data. Koenig et al. [22] used CRNNs to learn the thermal decompo- sition models of Nickel-Cobalt-Manganese (NMC) cathodes using DSC data, obtaining more physically consistent fits by avoiding empirical assumptions made when fitting using the Kissinger method[27]. These studies demonstrated that, since the learned parameters are constrained to obey the governing ODEs, the physics-informed nature of the CRNN method outperformed other data-driven methods in terms of better accuracy and lower data requirements. Additionally, the resulting models are physi- cally interpretable in the form of the governing ODEs.\nThis work proposes a novel method to obtain accurate fits for Arrhenius equation-based thermal runaway models from experimental Accelerated Rate Calorimetry (ARC) data. CRNNs are utilized to learn the required parameters. A staging and linearization-based fitting method is demonstrated on the data, showing its shortcomings in creating accurate models. The obtained parameters are then tuned via training a CRNN, resulting in learned models that better represent the data. The experiment is conducted on two and four-stage models, showing the flexibility of the method. The tuned parameters are tested in 3D simulations of ARC and oven tests, demonstrating improved workflow and performance compared with more traditional methods cited in the literature."}, {"title": "2 Experimental Setup", "content": "The battery cell under investigation was a Molicel 21700 P45B with a mass of 0.066kg and a capacity of 4.5Ah. The sample cell was inserted into a holder within the ARC reactor. The cell was preconditioned by gradually heating it to a controlled temperature of 50\u00b0C. These conditions were allowed to equi- librate to ensure a uniform baseline temperature. To investigate thermal runaway, a Heat-Wait-Seek (HWS) testing protocol was employed. Initially, the cell underwent a temperature ramp exceeding 0.02\u00b0C/min to bring it close to the onset of self-heating. Once stabilized at this temperature, the ARC initiated the HWS protocol. During this protocol, the sample was heated in increments of 5 \u00b0C and then allowed to equilibrate (\u201cwait\u201d) for over 40 minutes. Adiabatic conditions were maintained by adjusting the chamber temperature to match that of the cell. Subsequently, the calorimeter entered a \"seek\" mode for 10 minutes to detect any exothermic activity: If any signs of self-heating (e.g., a sustained temperature rise of 0.02 \u00b0C/min ), the ARC transitioned to exotherm mode, otherwise the heat-wait-seek cycle was repeated. In exotherm mode, the ARC tracked the temperature rise due to exothermic reactions and endeavored to maintain adiabatic conditions by dynamically adjusting the chamber temperature and provide detailed thermal behavior such as cell (top, middle and bot- tom) as well as ambient temperature. The setup of the cell within the chamber and the location of thermocouples on the cell surface are shown in Figures (1a)-(1c).\nThe collected ARC data is used to determine the heat rate (in \u00b0C/min) versus temperature (in \u00b0C), as well as temperature versus time. Figures (1d) and (le) show the collected data for heat rate versus temperature and temperature versus time, respectively."}, {"title": "3 Methods and Models", "content": null}, {"title": "3.1 TR ODE System", "content": "The thermal runaway modelling equations in this work take the form of an Arrhenius reaction equation to model the decomposition kinetics and are given by,\n$\\frac{dc_i}{dt}=f_i(c_i) A_i e^{-\\frac{E_{a,i}}{k_b T}}, i=1,2...,N$\n(2)\n$f_i(c_i) = c_i^{n_i} (1 - c_i)^{m_i}$,\n(3)\nwhere $c_i$ is the normalized reactant concentration, $A_i$ is the frequency factor, $E_{a,i}$ is the activation energy, $k_b$ is the Boltzmann constant, T is the temperature, and N refers to the number of stages in the model. $m_i$ and $n_i$ are reaction orders from the rate law. The reaction orders determine whether the reaction is nth order (when $m_i = 0$) or an auto-catalytic type i.e. the reaction increases as the product is generated ($m_i > 0$) [28, 29].\nThe heat $Q_i$ from each exothermic stage decomposition can be calculated using\n$Q_i = h_i \\frac{dc_i}{dt}$,\n(4)\nwhere $h_i$ is the reaction enthalpy. The temperature update of the cell due to the thermal runaway can then be computed using\n$m_{cell}C_p \\frac{dT}{dt} = \\sum_{i=1}^N Q_i + Q_{diss}$,\n(5)\nwhere $m_{cell}$ and $c_p$ represent the mass and specific heat of the cell respectively, and $Q_{diss}$ is the dissipative heat flux due to natural convection and radiation. This term is modelled as"}, {"title": "", "content": "$Q_{diss} = A_{cell}[h_{conv} (T_{\\infty} - T) + \\epsilon \\sigma (T_{\\infty}^4 - T^4)]$,\n(6)\nwhere $A_{cell}$ refers to the area of the cell, $h_{conv}$ is the convective heat transfer coefficient [30], $\\epsilon = 0.8$, $\\sigma$ is the Stefan-Boltzmann constant, and $T_{\\infty}$ is the far field temperature.\nA good model representing the the thermal runaway process is achieved by obtaining the values of the following kinetic and reaction heat parameters,\n$\\theta_i = [A, E_a, h, m, n]_i, \\forall i=1,2..N$,\n(7)\nsuch that the temperature and heat rate profiles (shown in Figure 2) predicted by integrating the model are a close match to the experimental ARC data."}, {"title": "3.2 Linearized Arrhenius kinetics", "content": "The most common method for fitting the unknown parameters described by Equation 7 to ARC data involves staging and linearizing the governing equations of the model. The number of stages, N, depends on the specific model. For example, Chen et al. [14] used a two-stage model, whereas Sun et al. [31] and Ping et al. [12] used four and five-stage models, respectively, to describe the thermal runaway process."}, {"title": "", "content": "$h_i = m c_p (T_{end} - T_{start})$.\n(8)\nEquations 2 -5 are rewritten, through a series of simplifying assumptions described in [14, 31] as\n$ln[\\frac{dT}{dt}] = ln[A_i(T_{end} - T_{start})] - \\frac{E_{a,i}}{RT}$\n(9)\nUtilizing the staged experimental data, the slope and intercept of the $ln(\\frac{dT}{dt})$ v/s $\\frac{1}{T}$ plot return the value of $E_{a,i}$ and $A_i$ respectively.\nThe linearization method, although straightforward to implement, relies on a set of assumptions that limits its applicability. For example, it typically assumes a linear decrease in reactant concentra- tion as a function of temperature [31]. However, in practice, integrating the models usually reveals a nonlinear dependency of $c_i$ on T [14]. Furthermore, the reaction orders ($m_i, n_i$) are often adopted from previous studies and, therefore, may not fit the current dataset, resulting in a sub-optimal fit."}, {"title": "3.3 CRNN for ARC data fitting", "content": "In a CRNN, the parameters to be fitted are treated as trainable variables. Instead of linearizing the governing ODEs, and obtaining the parameters by minimizing a least squares error, the governing ODEs are directly learned using the data, with parameter updates made iteratively via a gradient- based approach. An advantage of this method is that no simplifying assumptions are made on the ODE system, leading to no loss of accuracy or generality during the fitting process.\nThe orange nodes denote trainable parameters (obtained via gradient- based optimization), and the blue nodes denote state variables, the time histories of which are obtained via ODE integration. The output of a subnetwork is the concentration reaction rate $\\frac{dc_i}{dt}$ and the rate of heat generated $Q_i$ by stage. Figure (4b) shows how each subnetwork is assimilated into the overall training loop. The resultant system of ODEs is integrated via a differentiable ODE integrator, and the system state $[c_1(t), c_2(t), ...c_N(t), T]$ is used to compute the loss $\\mathcal{L}$ relative to the experimental data. Reverse-mode automatic differentiation [32] is leveraged to compute $\\frac{\\partial L}{\\partial \\Theta_i}$, which is then used to update the values of $\\Theta_i$ via gradient descent.\nIn this work, the trainable parameters $\\Theta_i$ in the CRNN are initialized using the linearization method (Section 3.2). This improved initial guess, over random initialization, accelerates the optimization process. The loss function used to measure the difference between the predicted solution is the $L2$ norm of temperature history:\n$Loss = \\frac{\\sum_{j=1}^{N_{ts}} (T^{pred}_j - T^{truth}_j)^2}{N_{ts}}$,\n(10)\nwhere $N_{ts}$ is the number of timesteps.\nThe fully differentiable computational training loop was set up using the JAX [33] automatic differentiation framework. The differentiable ODE solver library Diffrax [34], based on JAX, was used to solve the CRNN ODE system. Kvaerno's 5th order method [35] is employed for the numerical stiff ODE solve, and the Adam [36] optimizer is utilized to minimize the loss. For all results shown, the optimization is done for 10,000 steps with a scheduled learning rate, starting at $10^{-3}$ and decreasing by a factor of 0.9 every 300 steps."}, {"title": "4 Results and Discussion", "content": "A CRNN is used to fit the ARC data shown in Figure 2. The data is divided into N stages, every stage is linearized and a fit for the kinetic parameters $\\Theta_i$ is obtained $\\forall i = 1.....N. The obtained parameters are used to initialize the CRNN and are improved via optimizing the loss of the CRNN (given by Equation 10) iteratively. The fitting process is demonstrated for N=2 and N=4, showing the flexibility of the proposed method. The model obtained from the four-stage fit is used in a 3D simulation of ARC and oven tests, to demonstrate the portability of the resulting thermal runaway models to accurate"}, {"title": "4.1 Two-stage model", "content": "A two-stage model of the ARC data takes the form:\n$\\frac{dc_1}{dt} = c_1A_1 e^{(-\\frac{E_{a,1}}{R T})}$,\n(11)\n$\\frac{dc_2}{dt} = (1 - c_2)^{m_2} A_2 e^{(-\\frac{E_{a,2}}{R T})}$,\n(12)\n$m c_p \\frac{dT}{dt} = \\sum_{i=1}^2 h_i \\frac{dc_i}{dt}$,\n(13)\nwith Equations 11 and 12 being particular instances of Equation 2. This model lumps the overall heat generation process into two terms and can still be motivated by the chemical kinetics of the decomposition reactions. For example, during stage one, two dominant decomposition exothermic re- actions contribute to heat generation: the decomposition of the SEI and the reaction of intercalated lithium at the anode with electrolyte. In the second stage, which is the dominant source of heat, the following processes can be observed: electrolyte decomposition; cathode material decomposition and release of oxygen; the reaction of released oxygen with the electrolyte; and potentially an internal short circuit (ISC) due to separator melting. Examples of the different reaction processes can be found in the literature, e.g. Kim et al. [6], Coman et al. [8], Feng et al. [13], Chen et al. [14] among others.\nThe description of the staging and linearization is identical to Section 3.2 and is omitted here for brevity. The temperatures used for the staging, as shown in Figure (2), were $T_{start} = 124\u00b0C$, $T_1 = 167\u00b0C$, and $T_{end} = 472\u00b0C$. Figures (5) shows the integrated solution for parameters initially returned from the linear fit (Figs. (5a),(5c)), and for parameters after training a CRNN (Figs. (5b), (5d)). Figure (5a) shows the temperature increase with time compared to the experimental data, and it is observed that there is a significant difference in the profile of temperature evolution. An overprediction of temperature is observed until the system is close to thermal runaway, where it turns to an underprediction and the thermal runaway time is not correctly predicted. Figure (5c) shows the heat rate plotted against temperature, and a significant deviation of the prediction is observed with respect to the experimental data.\nAfter CRNN training, where the linear fit results are used to initialize the CRNN parameters, Figures (5b) and (5d) show much better adherence to the experimental data. The temperature leading up to and during thermal runaway is in better agreement with the experimental data, and the thermal runaway time and peak temperature is better predicted. The heat rate prediction is closer to exper- imental observation as well. The \"linear\" part of the heat rate increase is better approximated, and the region of large heat rate is approximated by the model more closely, leading to a better fit overall."}, {"title": "4.2 Four-stage model", "content": "A four-stage model fitted to the ARC data gives more flexibility and will yield a better approximation of the heat rate data. The model takes the form:"}, {"title": "", "content": "$\\frac{dc_1}{dt} = c_1A_1 e^{(-\\frac{E_{a,1}}{R T})}$,\n(14)\n$\\frac{dc_2}{dt} = c_2 A_2 e^{(-\\frac{E_{a,2}}{R T})}$,\n(15)\n$\\frac{dc_3}{dt} = c_3^{n_3} (1 - c_3)^{m_3} A_3 e^{(-\\frac{E_{a,3}}{R T})}$,\n(16)\n$\\frac{dc_4}{dt} = c_4 (1 - c_4)^{m_4} A_4 e^{(-\\frac{E_{a,4}}{R T})}$,\n(17)"}, {"title": "", "content": "$m c_p \\frac{dT}{dt} = \\sum_{i=1}^4 h_i \\frac{dc_i}{dt}$.\n(18)\nThe reaction kinetics in this model are more representative of the physical processes occurring during thermal runaway."}, {"title": "4.3 21700 battery cell simulation", "content": "To demonstrate the fitted parameters in a realistic scenario, 3D simulations of a single 21700 cell were conducted under ARC and oven test conditions.\nThermal runaway was modeled using the modified energy equation, which includes an additional source term $S_{TR}$, given by\n$\\rho c_p \\frac{\\partial T}{\\partial t} = \\nabla \\cdot (\\kappa \\nabla T) + S_{TR}$,\n(19)\nwhere is $\\rho$ the density, $C_p$ is the heat capacity, and $\\kappa$ is the thermal conductivity. $S_{TR}$ is then given by the fitting values obtained from the OD model, that is"}, {"title": "", "content": "$S_{TR} = \\sum_{i=1}^N h_i \\frac{dc_i}{dt}$.\n(20)\nWhere $h_i$ represents the enthalpy of different battery components. $S_{TR}$ is active only within the jellyroll of the cell and is modeled using a four-stage thermal runaway model and the parameters obtained in Section 4.2. The governing energy equation includes boundary conditions for radiation and natural convection. In the ARC test, the ambient temperature is determined by the temperature recorded inside the chamber. For the oven test, the temperature reference is a single value repre- senting the oven temperature. While more accurate simulations could incorporate natural convection volume surrounding the cell (e.g. the ARC chamber), these were simplified in the current simulations.\nGoverning Equation (19) is discretized using a Galerkin least squares stabilized finite element method."}, {"title": "5 Conclusion", "content": "This work explored using Chemical Reaction Neural Networks (CRNNs) to perform kinetic parameter fitting of multi-stage thermal runaway models governed by the Arrhenius equations to ARC data. The issues with using linearization to obtain the kinetic parameters were discussed and demonstrated, and the linear fit results were improved using a CRNN for both two-stage and four-stage models. The obtained parameters showed much better agreement with experimental data. The four-stage fit was also used to simulate ARC and oven tests in 3D, with results showing agreement with experiments. This further demonstrated the applicability of the derived thermal runaway models to simulations involving batteries or battery packs, where thermal runaway is a major safety concern and hence is a crucial design factor. The proposed method is flexible and can generalize to several stages, cell types, and stoichiometries, representing a step toward enhanced battery pack safety through simulation-driven design."}, {"title": "6 CRediT Authorship Statement", "content": "Saakaar Bhatnagar: Conceptualization, Formal Analysis, Methodology, Software, Visualization, Writing- Original Draft\nAndrew Comerford: Conceptualization, Project Administration, Supervision, Validation, Visu- alization, Writing- Review and Editing\nZelu Xu: Conceptualization, Formal Analysis, Validation\nDavide Berti Polato: Data Curation, Investigation, Resources\nAraz Banaeizadeh: Project Administration, Supervision, Writing- Review and Editing\nAlessandro Ferraris: Data Curation, Investigation, Resources"}]}