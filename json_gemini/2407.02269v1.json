{"title": "IFTT-PIN: A Self-Calibrating PIN-Entry Method", "authors": ["Kathryn McConkey", "Talha Enes Ayranci", "Mohamed Khamis", "Jonathan Grizou"], "abstract": "Personalising an interface to the needs and preferences of a user often incurs additional interaction steps. In this paper, we demonstrate a novel method that enables the personalising of an interface without the need for explicit calibration procedures, via a process we call self-calibration. A second-order effect of self-calibration is that an outside observer cannot easily infer what a user is trying to achieve because they cannot interpret the user's actions. To explore this security angle, we developed IFTT-PIN (If This Then PIN) as the first self-calibrating PIN-entry method. When using IFTT-PIN, users are free to choose any button for any meaning without ever explicitly communicating their choice to the machine. IFTT-PIN infers both the user's PIN and their preferred button mapping at the same time. This paper presents the concept, implementation, and interactive demonstrations of IFTT-PIN, as well as an evaluation against shoulder surfing attacks. Our study (N=24) shows that by adding self-calibration to an existing PIN entry method, IFTT-PIN statistically significantly decreased PIN attack decoding rate by ca. 8.5 times (p=1.1e-9), while only decreasing the PIN entry encoding rate by ca. 1.4 times (p=0.02), leading to a positive security-usability trade-off. IFTT-PIN's entry rate significantly improved 21 days after first exposure (p=3.6e-6) to the method, suggesting self-calibrating interfaces are memorable despite using an initially undefined user interface. Self-calibration methods might lead to novel opportunities for interaction that are more inclusive and versatile, a potentially interesting challenge for the community. A short introductory video is available at https://youtu.be/pP5sfniNRns.", "sections": [{"title": "I. INTRODUCTION", "content": "Personalising a user interface to the needs and preferences of a user often incurs additional interaction steps for the user. For example, a user might be required to navigate menus to define what action to attach to a button, or an expert might be required to configure an interface to a user's needs prior to interaction. Those calibration procedures are important because an interface cannot always be used in the same way by everyone, for example due to sensory or motor impairments.\nIn this paper, we demonstrate a new method, called self-calibration, that enables the personalising of an interface without the need for explicit calibration procedures. Under self-calibration, a user can interact with a machine using their preferred interaction style right from the start, and the machine can nonetheless infer what the user is trying to achieve. Self-calibration is thus an important property of interactive systems that might contribute in reducing usability barriers.\nA second-order effect of self-calibration is that an outside observer cannot easily infer what a user is trying to achieve, simply because they cannot understand the user's actions which are personalised from the start. We chose this security angle as a way to demonstrate self-calibration capabilities via a PIN entry task. This might not be the best application of self-calibration - which we argue later remains to be invented - but it is the best way we have found to explain and allow users to experience the properties of a self-calibrating interfaces.\nWe developed IFTT-PIN (If This Then PIN) based on the PIN-entry method presented by Roth et al. in [1], and later iterated upon with methods like SwinPIN [2], which allow users to enter the PIN of their choice via an elimination process. In [1], users click on a button whose color is the same as their digit. IFTT-PIN is adding self-calibration to [1], which means that buttons do not have any color assigned to them at the start of the interaction. Users are free to define the color of each button in their mind and use them as such without informing the interface prior to interaction. After a few iterations, IFTT-PIN can infer both the digit the user had in mind and the color of each button used. IFTT-PIN can thus effectively calibrate itself to each user at interaction time, demonstrating a new interactive experience.\nWe evaluated IFTT-PIN as a potential defense mechanism against shoulder surfing attacks, where malicious observers try to infer a user password by watching their actions 'over their shoulder'. We present results from a user study (N=24) carried out to determine the usability, security, and motor memorability of IFTT-PIN as an authentication method compared to the traditional PIN-entry method.\nWe first present our implementation of a Roth et al. interface [1], explain how self-calibration has been implemented to create IFTT-PIN and offer readers to experience IFTT-PIN via a web-based demonstrators. We then review shoulder-surfing literature and present key results from our user study on IFTT-PIN. We conclude by identifying limitations and promising research directions for self-calibrating interfaces.\nFor the remainder of this paper, we refer to the traditional PIN entry method we find on our smartphones or at an ATM as TRAD. Roth et al. [1] interface is referred to as ROTH. Our method is referred to as IFTT-PIN."}, {"title": "II. CONTRIBUTIONS", "content": "\u2022 A new PIN entry method, called IFTT-PIN, leveraging self-calibration to allow users to choose the meaning conveyed by each button on-the-fly without calibration.\n\u2022 The first demonstration of a self-calibrating interface using discrete user actions (i.e., using buttons).\n\u2022 An online interactive demonstrator that allows to explain the self-calibrating paradigm in a few minutes on a computer or smartphone.\n\u2022 A novel approach to overwhelm the observer in shoulder surfing scenarios relying on on-the-fly code-pad configuration.\n\u2022 A user study quantifying the usability, security, and memorability of IFTT-PIN, and introducing the SUTO score, a metric for quantifying security-usability trade-offs."}, {"title": "III. UNDERSTANDING ROTH", "content": "Quoting directly from Roth et al. [1]: \u201cThe principal idea is to present the user the PIN digits as two distinct sets e.g., by randomly coloring half of the keys black and the other half white. The user must enter in which set the digit is by pressing either a separate black or white key. Multiple rounds of this game are played to enter a single digit and it is repeatedly played until all digits are entered. The verifier e.g., the automatic teller machine (ATM), determines the entered PIN digits by intersecting the chosen sets.\u201d.\nIn other words, ROTH relies on the following logic: \u201cIf the user pressed the button B, then they indicated that their digit is of color C, thus their digit is among the set of digits currently colored in \u0421.\u201d.\nWe re-implemented Roth et al. interface as follows."}, {"title": "A. Interface Design", "content": "We split our interface into three parts (Figure 1). The top part displays the PIN, with a black rectangle indicating to the user which of the four digits is currently being entered. The middle part shows all possible digits (from 0 to 9) colored in yellow or gray according to which set they belong to. Think of this section as the machine asking the user: \"What color is the digit you want to type?\". The bottom part is dedicated specifically for the user to answer that question. In the case of [1], the user feedback takes place via two colored buttons. Here the left button is yellow, and the right button is gray. Think of this section as the human answering to the machine: \"My digit is yellow\" or \"My digit is gray\"."}, {"title": "B. Interaction Vocabulary", "content": "For simplicity, we use a limited interaction vocabulary (Figure 2) that helps explain our work in simple steps.\nActions are what the users do in order to convey their meanings. Here the users' actions are to press either the left or the right button\nMeanings are what the users want to say to the machine, Here the users' meanings are: \"My digit is yellow\" or \"My digit is gray\".\nIntents are what the users want the machine to do, here entering a specific PIN, one digit at a time.\nTo put it simply, an action conveys a meaning that is used to infer an intent."}, {"title": "C. Decision Principle", "content": "Knowing the color assigned to each button, the interface identifies the digit the user wants to enter by reasoning as follows: \u201cIf the user pressed the left button (action), then they indicated that their digit is currently yellow (meaning), thus their digit is among the yellow-colored digits and all the gray digits can be discarded (intent).\u201d, see Figure 3."}, {"title": "D. ROTH Interactive Demonstration", "content": "We encourage the readers to familiarise themselves with ROTH PIN entry method before moving to the next section.\nIn the best case scenario, we narrow digits down from 10 to 5 to 2 to 1 (3 clicks). Worst case from 10 to 5 to 3 to 2 to 1 (4 clicks)."}, {"title": "IV. UNDERSTANDING IFTT-PIN", "content": "Having understood and interacted with ROTH, we remind the reader that our contribution with IFTT-PIN lies in the introduction of self-calibration to the ROTH interface."}, {"title": "A. Interface Design", "content": "To adequately demonstrate the potential of self-calibration, we wanted to allow users to express more varied preferences. We thus increased the number of buttons from 2 to 9, corresponding to an increase in the possible color patterns from 2 to 5102. Buttons are now black to indicate that they do not have a color attached to them yet. A user simply decides a color pattern to apply on the buttons in their mind and without having to communicate this decision to the device. The user can start using the buttons that way immediately. For example, the top three buttons could be yellow and all the others gray. See Figure 4 for more examples."}, {"title": "B. Assumptions", "content": "To explain IFTT-PIN, we first need to understand the assumptions made in ROTH:\n1) The user's possible intent is one of ten possible digits.\n2) The user's possible meaning is either yellow or gray.\n3) The user can perform one of N actions, pressing one of the N button.\n4) The mapping between the user's actions and their meanings is known. In ROTH, pressing the left button conveys the meaning yellow and the right button conveys the meaning gray.\n5) The user is assumed to be consistent in their usage of the interface. One button can only express one color.\nAssumption 4 is the one we remove in IFTT-PIN, which means that buttons have no predefined colors and the reasoning used in section III-C (\"If a user presses the left button (action), then it indicates that their digit is currently yellow (meaning).\") cannot be used because we do not know the color attached to each button. To work around this problem, we exploit assumption 5 by explicitly measuring user's consistency."}, {"title": "C. Self-calibration Principle", "content": "A user's consistency is something we can observe. If we ask a user to type a specific digit, say 1, and the user presses the same button twice, both when the digit 1 is yellow and again when it is gray, then we can confidently say that the user is being inconsistent with its use of the interface.\nBut we do not know which digit the user is entering. However, the context given by the PIN entering task and our assumption 1 (\"The user's possible intent is one of ten possible digits\") constraints the number of possible digits. We can\n\u00b2The number of combinations is 2\ud835\udc41 - 2. The 2\ud835\udc41 computes the number of possible combinations for 2 colors applied on N buttons. We then add -2 because there are 2 invalid combinations, all yellow or all gray."}, {"title": "V. EVALUATING IFTT-PIN", "content": "We studied user's perception of the usability of our self-calibrating interface, as well as IFTT-PIN effectiveness as a potential protection against shoulder surfing attacks."}, {"title": "A. Shoulder surfing attacks", "content": "Shoulder surfing involves looking over a victim's shoulder in order to view information on their screen without their explicit consent. Due to sensitivity of content on mobile devices, users tend to be concerned about the privacy of their devices as an individual gaining access may be able to exploit them with malicious intent.\nSmartphones are mainly protected by PINs, which are generally composed of only numbers and are typically short (4-6 digits) for memorability and speed of entry. For mobile devices, predominant PIN lengths are 4 digits which are easily compromised [3].\nBiometric authentication methods, such as fingerprint scanning and facial recognition are the most common alternative to PINs with a study by Markert et al. [4] in 2020 showing that 60% of their participants used biometric methods [4]. But Meng et al. has shown that the accuracy of biometric methods is \"not stable\" [5] (e.g., due to sensor failures or poor lighting conditions) and therefore require a knowledge-based backup authentication method, which is often the aforementioned 4 digit numeric PINs\u00b3. Thus, biometric authentication \"cannot provide universal protection from shoulder surfing attacks\" [6]; the extra security they provide is minimal as they are not a replacement for PINs.\nThe entering of PINs remains the stereotypical shoulder surfing attack scenario and a large body of work focuses on reducing the risk of PIN-based authentication methods that can\n\u00b3On Android, users can choose either a PIN or a pattern, and PINs can be over four digits long.\nbe securely used in uncontrolled public environments. Common strategies include overwhelming the observer with visual decoys [7]\u2013[9], indirect and/or clustered input [1], [2], [9], [10] (e.g., cognitive trap door concept behind [1], combination of gesture and colors with SwiPIN [2]), and hidden secondary communication channels [11]\u2013[14] (e.g., tactile feedback with LTF [15], eye-gaze input with GazeTouchCrossPin [16] and CueAuthGaze [14]).\nIFTT-PIN offers a novel type of protection mechanism by leveraging self-calibration which removes the need for a pre-established mapping between user's actions and their meanings. The user establishes this mapping on the fly, and can redefine it every time they use the interface, which makes it harder for malicious observers to interpret the user's actions.\nTo determine whether self-calibration has the potential to become an effective component of security applications, we designed a user study to determine the usability, security, and memorability of IFTT-PIN compared with the TRAD and ROTH methods, as well as with results from other methods previously reported in the literature."}, {"title": "B. Evaluation Framework", "content": "All PIN-entry methods we reviewed completed some form of evaluation where both the security and usability were tested, see Table I. When evaluating security, studies consist of emulating a shoulder surfing attack and requiring the participant to try to decode PINs. Human-based attacks involve obtaining a user's PIN through direct observation, whereas recording-based attacks involve recording the authentication session to obtain the PIN [18].\nWhen evaluating usability the majority of studies focused on entry time and error rates, and some included usability questionnaires results, such as the NASA Task Load Index (NASA TLX) [19] and the System Usability Score (SUS) [20].\nIn addition, we decided to study IFTT-PIN usability at regular time intervals over 1 month. Our goal was to study motor memorability, not the memorability of the authentication token (here a 4-digit PIN), but rather the ability to remember the workings of an interface after a few days without using it. We also wanted to observe users' performances and potential change of behavior as they become familiar with the interface.\na) Threat model.: Our attacker is assumed to have a clear, unobstructed, view of the user's device and can record a video of the password being entered.\nb) Variables.: Dependent variables include efficiency, effectiveness, and memorability which will be measured through entry time, error rate and how well participants can remember how to use the interfaces at various time intervals. The independent variables include the device as well as the PIN being entered, with the different conditions being each of the different PIN entry methods (TRAD, ROTH, IFTT-PIN).\nc) Design structure.: We do not expect participants to experience any fatigue, therefore, we can choose a within subject design which means each participant is exposed to all of the conditions."}, {"title": "C. Security", "content": "We chose recording-based attacks where participants watched a video showing someone entering PINs with a completely unobstructed view, with full control over the videos and were allowed to pause and rewind at will. We measure how many PINs users can correctly decode within a set time frame, as well as the digit decoding rate per minutes.\nOnly 2 participants were able to decode 1 or 2 digits from IFTT-PIN during the 5 minutes initially planned for. To avoid a flooring effect, we conducted an additional 1-hour long study to determine more accurately the security level of IFTT-PIN with a subset of 7 participants."}, {"title": "D. Usability", "content": "We measured the \"extent to which a product can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use\" [21] as follows:\nEffectiveness is the \"accuracy and completeness with which users achieve specified goals\" [17]. We measure effectiveness through the error rates when entering PINs.\nEfficiency is the \"resources expended in relation to the accuracy and completeness with which users achieve goals\" [17]. We measure this through the time taken to enter PINs as well as the rate of digit entering per minute.\nSatisfaction is the users being \u201cfree from discomfort with positive attitudes towards the use of the product\" [17]. Users filled the the System Usability Scale (SUS) questionnaire [20] for each user authentication method. This scale gives us a \u201cglobal view of subjective usability\u201d and is known to be a reliable qualitative measure of usability. As a reference, a SUS score of 68 would be considered average [20]."}, {"title": "E. Memorability", "content": "We measured \"how well users re-establish proficiency with the system functionality after a time period not using the system\" [22]. We repeated our usability tests with the same participants at three intervals, day 0, day 7 and day 21."}, {"title": "VI. RESULTS", "content": "We invited 24 participants (14 males, 10 females) aged between 18 and 24, of which 7 took part in the extended 1h-long security study on IFTT-PIN. Before completing the study, all participants were presented with information sheets and consent forms and were made aware they could withdraw from the study at any time without any consequences. All participants agreed to participate and filled out demographic questionnaires which also provided questions about knowledge of authentication methods as well as shoulder surfing.\nUsing a Likert scale, we determined the IT proficiency level of participants. 71.6% claimed to be either proficient or highly proficient. 83.3% of participants felt very comfortable using a mobile phone while the remaining participant felt comfortable. 67% of participants knew what the term shoulder surfing meant. After being provided with a definition, 42% of participants said that they had experienced a shoulder surfing attack. 54.2% of participants felt concerned about shoulder surfing and would be willing to have more secure authentication methods implemented for daily use. One participant had heard about IFTT-PIN previously but did not enter or decode a PIN via IFTT-PIN prior to this study."}, {"title": "A. Security Results", "content": "Security results are reported in Table II. CueAuthGaze has the lowest reported attack success rate (0.05%) while IFTT-PIN has the lowest per digit decoding rate (0.12 digits/min)"}, {"title": "B. Usability Results", "content": "Usability results are reported in Table III. IFTT-PIN is the slowest entry method reported with an average entry time of ca. 38 seconds (M=38.01, SD=14.86) and an average encoding rate of ca. 8 digits per minutes (M=7.91, SD=2.24). CueAuthGaze, which scored well on security metrics, has the highest reported PIN entry error rate (17.28%), ca. 4.5x higher than IFTT-PIN. Interestinglt, IFTT-PIN has one of the lowest PIN entry error rates of the methods reported in Table III.\nA repeated measures ANOVA showed a significant main effect for the entry method on PIN entry time (F=105, p=1.2e-21) with post hoc Bonferroni corrected t-tests revealing significant differences between TRAD and ROTH (t=-29.5, p=4.4e-31), TRAD and IFTT-PIN (t=12, p=2.2e-15), and ROTH and IFTT-PIN (t=-4.4, p=1.8e-4). Encoding rate showed similar level of significance for the entry method effect on encoding rate (F=137, p=9.3e-25) with post hoc Bonferroni corrected t-tests revealing significant differences between TRAD and ROTH (t=13.6, p=2.9e-17), TRAD and IFTT-PIN (t=11.1, p=3.9e-14), and ROTH and IFTT-PIN (t=-2.85, p=0.02). However no significant differences were found between entry method on the PIN entry error rate. Overall, our results confirmed that by adding self-calibration to the ROTH method, IFTT-PIN significantly decreased PIN entry encoding rate by only ca. 1.4 times (p=0.02), which is to be compared with the ca. 8.5 times (p=1.1e-9) decrease in PIN attack decoding rate reported in section VI-A.\nMetrics reported for IOC have been extracted from the original paper from Roth et al. [1] and should match with our user testing of ROTH. We found a close match between IOC and ROTH for PIN entry time (23.23 and 24.19 respectively), but found a surprising discrepancy on the PIN entry error rate (respectively 9% and 1.88%) which we have not been able to explain.\nWe found a surprisingly high error rate for TRAD (M=4.04, SD=5.89) which we attribute to our observation that participants felt competitive and tried to maximise entry speed during TRAD entry tests, despite being instructed against it."}, {"title": "C. Memorability results", "content": "Memorability results are reported in Table IV. A repeated measures ANOVA showed a significant main effect for the day of evaluation on encoding rate (F=3.75, p=0.03) with post hoc Bonferroni corrected t-tests revealing significant differences between day 0 and day 7 (t=-4.15, p=1.2e-3), day 0 and day 21 (t=-6.5, p=3.6e-6), but not a significant difference between day 7 and day 21 (t=-1.65, p=0.33). No significant differences were found between evaluation days on the PIN entry error rate. Overall, our results confirmed that a self-calibrating interface like IFTT-PIN is memorable even if not used for a couple of weeks, with users effectively remembering how to enter a PIN without needing to remember specific color patterns.\nOn day 21, the overall usability was highest for TRAD (96.31), followed by ROTH (79.88), and then IFTT-PIN (58.13). While IFTT-PIN SUS score increased after each testing sessions, it remained relatively low indicating IFTT-PIN remains less usable than established methods and suffer from usability issues [23]."}, {"title": "D. SUTO - Security-Usability Trade-Off", "content": "Security applications face a security-usability trade-off (SUTO). Simply put, a system that is secure and not usable will not be used while a system that is usable and not secure is at risk of attack [24].\nTo quantify the usability vs. security trade-off, we define a SUTO score as the ratio of the rate of digits being entered to the rate of digits being decoded.\n$SUTO\\,score = \\frac{Rate\\,of\\,entering}{Rate\\,of\\,decoding}$ (1)\nThe SUTO score quantifies how difficult it is for a PIN to be simultaneously observed and decoded. A SUTO score of 1 indicates that the time required to enter the PIN equals the time needed to decode it. A SUTO score above 1 indicates that the attacker would take longer to decode the PIN than to enter it. The higher the SUTO scores the better, within limits of usability.\nSUTO scores are reported in Table V. ROTH scored 10.62 and IFTT-PIN 65.91, confirming that adding self-calibration provides an additional protection against shoulder surfing attacks (ca. 8.5 times, see section VI-A) without a corresponding decrease in entry time (ca. 1.4 times, see section VI-B), hence firmly improving the security-usability trade-off. To put this\ninto perspective, on average, it would take about 41 minutes to decode a PIN that took 38 seconds to enter using IFTT-PIN assuming full access to a video recording.\nCueAuthGaze [14], which scored high on security metrics, has a SUTO score of 6.20 suggesting a less favorable ratio of entering time over decoding time. We will refrain from making conclusion based on this results as the decoding rate we reconstructed for CueAuthGaze might be affected by flooring effect as described in the security section."}, {"title": "VII. LIMITATIONS AND FUTURE WORK", "content": "While IFTT-PIN scores the highest on the SUTO score, we must keep in mind that its usability as a daily PIN entry mechanism is limited due to its high entry time (M=38.01) and below average system usability scores (M=58.13). Similarly to other methods, IFTT-PIN might be better positioned for less frequent, but more secure, PIN entry requirements, such as\nprotecting specific sensitive applications on a mobile devices (e.g., a banking app).\nIn our opinion, interesting follow-up studies would look into the diversity of users' choice of action-to-meaning mapping for self-calibrating interfaces. The question is whether allowing users to choose how to use an interface effectively leads to more varied and personalized interaction schemes, and whether users change their preferences over time. Studying these preferences for other interaction modalities, such as gestures or voice commands, would add interesting challenges both algorithmic and in terms of interface design.\nTo improve usability, options to consider includes adding feedback mechanisms (e.g., a way to show how far along users are in the digit entry process), increasing the color-set size to reduce entry time, reducing the number of buttons (9 buttons was confusing to users), and adding a method to account for user mistakes (e.g., an undo last-action button).\nTo improve the SUTO score, and as already suggested in Roth et al. [1], we could introduce a probabilistic approach where the user does not need to enter the exact PIN to open the vault, but simply to reduce the set of possible PINs to a small number that includes the correct PIN. An attacker would only be able to recover a set of possible PINs, not knowing which specific PIN is the correct one. Another approach would be to introduce a hidden communication channel that only the user can access. For example, using special glasses that reveal the color assigned to each digit to the user only. Outside observers or cameras would not see the color on the digit, making it impossible to reverse-engineer the PIN.\nFor interested parties, more studies \"in the wild\" would inform how users interact differently with IFTT-PIN in an uncontrolled environment. Repeating previous studies to compute more reliable SUTO scores for other PIN entry methods would also benefit the community."}, {"title": "VIII. CONCLUSION", "content": "We presented IFTT-PIN, a PIN-entry method conceived as a vehicle to introduce the self-calibration paradigm. IFTT-PIN allows users to enter the PIN of their choice via an elimination process by indicating the color assigned to their digit (yellow or gray). To express their choice, users click on a button whose color is the same as their digit. But buttons do not have any color assigned to them at the start of the interaction. Users are free to define the color of each button in their mind and use them as such without informing the interface. After a few iterations, IFTT-PIN can infer both the digit the user had in mind and the color of each button used. IFTT-PIN can thus effectively calibrate itself to each user at interaction time, demonstrating a new interactive experience.\nFor this reason, we proposed IFTT-PIN as a novel approach to protect against shoulder surfing attacks. Because the color of each button is not pre-defined and only pre-exists in the user's mind, it is significantly harder for an attacker to make sense of the user's actions in real time. By adding self-calibration to ROTH, IFTT-PIN statistically significantly decreased PIN attack decoding rate by ca. 8.5 times (p=1.1e-9), while only decreasing the PIN entry encoding rate by ca. 1.4 times (p=0.02), leading to a positive security-usability trade-off with a SUTO score increasing from 10.62 for ROTH to 65.91 for IFTT-PIN. IFTT-PIN's entry rate significantly improved 21 days after first exposure (p=3.6e-6), suggesting self-calibrating interfaces are memorable despite using an initially undefined user interface.\nWhile it remains unclear how self-calibrating interfaces could be genuinely beneficial in our everyday world, we would like to encourage researchers to investigate what other interfaces and applications could benefit from the proposed self-calibration paradigm - especially towards more inclusive interactive devices where users can express their intention in an intuitive, fluid and personalized way without resorting to explicit calibration procedures. We hope this work will help inspire the community to invent them."}, {"title": "A. Algorithmic Illustration", "content": "The interpretation hypotheses process is illustrated in Figure 5 after one, four, and eight clicks from a typical interaction. For visual clarity, we only show the process for digit 0, 1, 2, and 3, as if the user could only enter one of those four digits.\nAfter one click, the top-left button is marked with a dot because the user just clicked on that button. This dot is yellow for digit 0 and 3, and gray for digit 1 and 2, because, at the time the user clicked on the button, the digits 0 and 3 were yellow, and digits 1 and 2 were gray. After one click, there is no way to know which digit the user is entering, nor what color is assigned to that button, all hypotheses are consistent.\nAfter four clicks, the middle button has received two clicks from the user. If the user was entering digit 0 and 2, they would have used the middle button to mean alternatively yellow and gray, which would be a breach of the consistency assumption. Thus, the user is not entering digit 0 or 2. For digit 1 and 3, both times the user clicked on the middle button to mean the same color. The middle button would be yellow if the user was typing a 1, and gray if the user was typing a 3, but both options remain consistent at this stage, and the user might well be entering any of them, we just can't tell yet.\nAfter eight clicks, the top-left button would have been used for both yellow and gray if the user was entering digit 1. Only our interpretation of the button color according to digit 3 remains fully consistent, thus we can conclude that the user is trying to enter the digit 3. This process is best understood interactively and an interactive demonstration is available on the link shared in section IV-D).\nOnce we have identified a digit, we automatically know which color the user is attributing to each button. In other words, the process of entering the first digit under the self-calibration paradigm is calibrating the system for subsequent use by the same user. Within the IFTT-PIN interface, we show this by assigning colors to each button once the interface has identified a new digit. When the user reuses the same buttons to enter a second digit, it will therefore take less iteration than when entering the first digit by falling back to the reasoning from section III-C. For buttons that remain undefined (black), we keep using the self-calibration algorithm.\nThe sequence of colors applied to digits is important to identify to the correct hypothesis as fast as possible. We detail this active learning problem in appendix C."}, {"title": "B. Algorithmic Details", "content": "Measuring consistency requires us to keep track of past interactions and to interpret them in light of each possible digit (d \u2208 D) the user might be intending to enter. Specifically", "digit": "If the user is trying to type the digit d", "as": "If a user is trying to enter digit d"}, {"as": "there is exactly one digit for which", "title": "C. Active Choice of Colors", "content": "In [1], the sequence of color was pre-defined and ensured that the digit could be uniquely identified. In IFTT-PIN, we are actively deciding which color to assign to each digit at each iteration according to the history of interaction and in order to identify the user intent as fast as possible. For self-calibration problems, an active planning strategy has been proposed in [25] which we implemented in IFTT-PIN. We added an additional constraint that each colored set of digits must be balanced at each iteration, in other words, there must always be five yellow digits and five gray digits. The implementation details are beyond the scope of this paper, but our code will be made available online for inspection (not linked here for blind review)."}]}