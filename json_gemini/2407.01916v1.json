{"title": "Sequential Manipulation against Rank Aggregation: Theory and Algorithm", "authors": ["Ke Ma", "Qianqian Xu", "Jinshan Zeng", "Wei Liu", "Xiaochun Cao", "Yingfei Sun", "Qingming Huang"], "abstract": "Rank aggregation with pairwise comparisons is widely encountered in sociology, politics, economics, psychology, sports, etc. Given the enormous social impact and the consequent incentives, the potential adversary has a strong motivation to manipulate the ranking list. However, the ideal attack opportunity and the excessive adversarial capability cause the existing methods to be impractical. To fully explore the potential risks, we leverage an online attack on the vulnerable data collection process. Since it is independent of rank aggregation and lacks effective protection mechanisms, we disrupt the data collection process by fabricating pairwise comparisons without knowledge of the future data or the true distribution. From the game-theoretic perspective, the confrontation scenario between the online manipulator and the ranker who takes control of the original data source is formulated as a distributionally robust game that deals with the uncertainty of knowledge. Then we demonstrate that the equilibrium in the above game is potentially favorable to the adversary by analyzing the vulnerability of the sampling algorithms such as Bernoulli and reservoir methods. According to the above theoretical analysis, different sequential manipulation policies are proposed under a Bayesian decision framework and a large class of parametric pairwise comparison models. For attackers with complete knowledge, we establish the asymptotic optimality of the proposed policies. To increase the success rate of the sequential manipulation with incomplete knowledge, a distributionally robust estimator, which replaces the maximum likelihood estimation in a saddle point problem, provides a conservative data generation solution. Finally, the corroborating empirical evidence shows that the proposed method manipulates the results of rank aggregation methods in a sequential manner.", "sections": [{"title": "1 INTRODUCTION", "content": "RANK aggregation has wide-ranging applications in social choice theory [2], psychology [46], economics [45], statistic [29], bioinformatic [4], and other fields. In pursuit of large benefits, the potential attackers have strong motivations to manipulate the ranking aggregation algorithms which are utilized in high-stakes scenarios, e.g. elections [6], sports competitions [31], and recommendations [43]. A profit-seeking adversary will try his/her best to designate the ranking list and fulfill his/her demands. In addition to statistical [17] and computational [50] properties, the integrity issue of ranking results becomes a new direction in the study of rank aggregation algorithms.\nThe pioneer in conducting security-related research on rank aggregation is [37]. [37] develops a strong threat model for perturbing the aggregated results. The adversary has complete knowledge of the initial truthful data and corresponding feedback of victims. He/her can corrupt the original data by inserting, deleting, or flipping any pairwise comparisons with limitations on quantity of modification. [37] also considers the adversary with incomplete knowledge, who lacks the preference score generated by the victims. The attack strategies are solved by maximizing the objective functions of the victims with global modification on the weights of comparison graph. Their results show that the rank aggregation algorithms are vulnerable to these attackers. Concurrent to [37], [32] and [1] restrict the modification scope and degree of weights towards specific families of comparison graphs, then provide the recovery guarantees for the ground truth ranking with the proposed procedures. It is noteworthy that these weaker threat models could not be translated into any defense mechanism against the unregulated attackers. Furthermore, [38] poses the manipulation problem against rank aggregation algorithms. The purposeful attackers are not satisfied with simply perturbing the ranking list, but with designating it. The attack behavior with a target ranking list is a fixed point belonging to the composition of the adversary and the victim from the perspective of the dynamical system. The manipulation strategies equal to the conditions that the weights of comparison graph should satisfy when the victims obtain the target ranking list. From the above analysis, we conclude that the existing methods study the security issue of rank aggregation in an \"offline\" adversarial scenario [51], [52], [53]. In general, the attackers from the existing methods try to modify the pairwise comparisons that have already been collected. These offline attacks must occur after the construction of the comparison graph and before the victims aggregate its results. The rank aggregation algorithms would wait for the adversary to complete his/her malicious actions and unconditionally accept the modifications to the data before they can begin their own jobs. Opportunity for such attacks affords the adversary some privileges. There exists an implicit assumption that the adversary is capable of changing the existed data in the possession of the victims. However, the data held by the rank aggregation algorithms is often immutable in practice. In sports competitions, the final ranking is only produced when all the races have been completed. Theoretically, the existing methods could perturb or manipulate the ranking lists of all teams or players. But no one can travel to the past and change the outcome of a match that has already finished. Once a vote has been cast at the polling station, the ballot will not be changed by any third party. In the partial confrontation scenarios, the existing methods assume that they have completely bypassed the constraints of time and space. Therefore, these offline methods fail to profile the capability boundary of the potential attackers and illuminate the underlying risks of ranking aggregation algorithms.\nTo address the above challenges, we need a new online paradigm for manipulating rank aggregation algorithms. In terms of attack opportunities, attackers need to seek more chances for archiving his/her goal and bypass the time and space constraints. The whole process of obtaining a ranking list can be divided into two parts: online data collection and offline data aggregation. Compared to offline aggregation, online collection is much more vulnerable. As a distributed and asynchronous process, data collection can't be done in a controlled environment and is therefore independent of rank aggregation. The defense mechanisms of aggregation often fail to protect online data collection. In addition, data collection always takes a long time and the attacker has sufficient chances to execute his/her actions. Consequently, disrupting the data collection process by online falsifying pairwise comparisons is more sophisticated than offline changing the collected data. Having determined the attack opportunity, it is necessary to identify the attacker's capabilities during data collection. During the collection process, a data source generates many pairwise comparisons waiting to be sampled. Once a comparison is sampled, it is used to construct the comparison graph and cannot be modified. If the attacker performed malicious actions during data collection, all he/she could do was mimic the behavior of normal data. The adversary could construct an adversarial data source which generates specific pairwise comparisons and insert them into the data stream. Since the cost of authenticating data sources is much greater than the cost of fabricating a pairwise comparison with malicious intention, an attacker can effectively bypass the victim's defenses. To the best of our knowledge, manipulating aggregation results by fabricating the data source and continuously injecting malicious pairwise comparisons into the data stream is a new formulation for attacking against rank aggregation algorithms, which is still under-explored.\nThe core of this paper is to make the above analysis rigorous by establishing a principle framework for sequential manipulating rank aggregation algorithms. The main methodology and theoretical contributions are summarized as follows.\n\u2022 Under a distributionally robust game theoretic framework, we construct the confrontation model between the online manipulator and the ranker who is bound to the original data sources. We then prove the existence"}, {"title": "2 PRELIMINARY", "content": "We begin with a formal description of the parametric model for binary comparisons, a.k.a Bradley-Terry-Luce (BTL) model [12]. Then we revisit the comparison graph and the Laplacian matrix which are essential for the ranking algorithms tailored to the BTL model. Two popular approaches which rank the items based on appropriate estimation of the latent preference scores, named HodgeRank [29] and Rank Centrality [41], are chosen as the victims to motivate our target attack strategies. In the remainder of this paper, we will use positive integers to indicate alternatives and voters. Let V be the set [n] = {1,...,n} which denotes a set of alternatives to be ranked. U = {u1,..., um} denotes a set of voters. We will adopt the following notation from combinatorics:\n$\\binom{V}{l}$ := set of all l elements subset of V.\nIn particular,\n$\\binom{V}{2}$ := set of all unordered pairs of elements of V := { [i, j] | \u2200 i, j \u2208 V, i \u0338= j }.\nMoreover, for any i,j \u2208 V, i \u0338= j, we write i > j to mean that alternative i is preferred over alternative j. Such a comparison could be converted into an ordered pair (i, j). The set of ordered pair will be denoted as\nV \u00d7 V := {(i, j) | i > j, \u2200 i, j \u2208 V, i \u0338= j} .\nOrdered and unordered pairs will be delimited by parentheses (i, j) and braces {i, j} respectively. If we wish to emphasize the preference judgment from a particular voter u \u2208 U, we will write iu j.\n2.1 Parametric Model and Pairwise Comparisons\nGiven a collection V of n alternatives, the parametric model of pairwise comparisons assumes that each i \u2208 V has a certain numeric quality score \u03b8\u2217 i . Suppose that \u03b8\u2217 \u2208 Rn\n$\\theta^* = [\\theta^*_1, ..., \\theta^*_n]^T$\ncomprises the underlying preference scores assigned to each of the n items. Without loss of generality, \u03b8\u2217 could be positive as\n$\\theta_i > 0, \\forall i \\in [n]$\nSpecifically, a comparison of any pair {i,j} \u2208 $\\binom{V}{2}$ is generated via the comparing between the corresponding scores \u03b8\u2217 i and \u03b8\u2217 j (in the presence of noise) by the BTL model. Let yij denote the outcome of the comparison of the pair i and j based on \u03b8\u2217, such that yij = 1 if i is preferred over j and yij = \u22121 otherwise. Then, according to the BTL model,\nyij =$\\begin{cases}   1, & with probability  \\frac{\\theta^*_i}{\\theta^*_i + \\theta^*_j},\\\\ -1, & otherwise.  \\end{cases}$\nSince the BTL model is invariant under the scaling of the scores, the latent preference score is not unique. Indeed, under the BTL model, a score vector \u03b8\u2217 \u2208 R is the equivalence class\n\u0398\u2217 = { \u03b8 | there exists \u03b1 > 0 such that \u03b8 = \u03b1\u03b8\u2217 }.\nThe outcome of a comparison depends on the equivalence class \u0398\u2217.\n2.2 Comparison Graph and Combinatorial Laplacian\nA graph structure, named comparison graph, arises naturally from pairwise comparisons as follows. Let G = (V, E) stand for a comparison graph, where the vertex set V = [n] represents the n candidates. In our problem setting, we pay attention to the complete graph setting: the directed edge set E = V \u00d7 V and N := |E| = n(n \u2212 1). One can further associate weights w\u2217 on E as voters U would have rated, i.e. assigned cardinal scores or given an ordinal ordering to, the complete set of the alternatives V. But no matter how incomplete the rated portion is, one may always convert such judgments into pairwise rankings that"}, {"title": "3 GENERAL FRAMEWORK", "content": "In this section, we systematically introduce the general framework for sequential manipulating against pairwise ranking algorithms. To mathematically characterize the successive interaction between the manipulator and the victims, we perform threat modeling to profile the attacker's goal, knowledge and capability in Sec. 3.1 and dissect the online adversarial behavior. Then we develop the game-theoretic formulation between the online adversary and the offline rank aggregation procedure in Sec. 3.2 with particular emphasis on the uncertainty that the online manipulator must deal with. Such a game with fundamental uncertainty about future data and the opponent's strategies and the settings of [37], [38] are significantly different. Meanwhile the existence of the distributionally robust Nash equilibrium is also established."}, {"title": "3.1 Threat Model of Online Adversary", "content": "Here we present the threat model of the manipulator to specify his/her goal, knowledge and capability with online behavioral pattern. The threat model helps to establish the online interactions between the purposeful attacker and the rank aggregation with pairwise comparisons.\nThe Goal of Online Adversary. Inducing the threatened rank aggregation approaches to produce the designated ranking is the goal of a manipulator. On the one hand, the adversary cannot interact directly with the threatened rank aggregation procedure due to the inevitable defense mechanisms. On the other hand, the collection of pairwise comparisons is an online process which is independent of the subsequent rank aggregation method. It often takes place in open environments and lacks adequate supervision. If the attacker could interfere with the data collection procedure, he/she has a high possibility of bypassing defense mechanisms and accomplishing manipulation. The data collection procedure is always treated as a random sampling process. All possible pairwise comparisons consist of the data stream. A random sampling algorithm will receive and choose the data which constructs the comparison graph. To archive manipulation, the adversary proactively disguises the crafted malicious data as part of the data stream. Then these malicious data could be adopted by sampling algorithms and used to construct a comparison graph. After sampling, the ranker produces the aggregated result based on the comparison graph. These sequential actions of the adversary will induce the ranker to produce a designated ranking result. If the ranking list meets the demand of adversary, we will say that the adversary has executed a successful manipulation.\nWe denote A and R be the adversary and the ranker respectively. Let C = {C1, C2, . . . } be a sequence of recurring pairwise comparisons involving at most n candidates. The perturbed sequence by A is C'. The sequence of pairwise comparisons will be transferred into the comparison graphs as (5). Suppose that G(C) is the comparison graph constructed by C. The relative ranking scores \u03b8 and \u03b8' are produced by R with G(C) and G(C') accordingly. The non-adversarial rank aggregation can be portrayed as\nR(G(C)) = \u03b8.\nThen the rank aggregation result under online manipulation strategies would be\nR(G(C')) = \u03b8'.\nAlthough A is able to achieve multiple objectives with the help of \u03b8', designating the winner will be the most desired achievement of A. Therefore, we consider the following scenario: after the action of R, it holds that\n\u03b8\u2032 \u2208 \u0398\u0391 :=\n{ \u03b8 \u2208 R max \u03b8i < \u03b8i0, i \u2208 [n], i \u0338= i0},\nwhere io is the winner candidate desired by A. Then we will say that A has a successful online manipulating strategy against R by substituting G(C) with G(C') through sequential behavior. It is noteworthy that the goal in this paper implicitly requires sequential/online attack behavior, while [38] needs the help of offline manipulation strategy. The differences between online and offline strategies are shown in the following parts.\nThe Knowledge of Online Adversary. Let\nC(T) = {C1, C2, ..., CT}\nbe a sub-sequence of C with its first T pairwise comparisons. Without loss of generality, the number of pairwise comparisons in C will be increased by 1 at each step as\nC(T) = [C(T \u2212 1), cT], T\u2208 N.\nAs a consequence, the knowledge of A at T step, denoted CA(T) = [CA(T \u2013 1), \u03c6(cT)], contains two parts:\n\u2022 a subset of C(T \u2013 1) as\nCA(T \u2013 1) \u2286 C(T \u2013 1),\n\u2022 and the state of cT:\n\u03c6(cT) =$\\begin{cases} cT,  & if A obtains cT,\\\\ \u00d8, & otherwise,\\end{cases}$\nwhere \u00d8 indicates that no pairwise comparisons will enter the sequence.\nBased on the completeness of CA(T), we consider the following two adversarial scenarios:\ni) If it holds that\nCA(T) = C(T), \u2200T\u2208N,\nthat is CA(T \u2013 1) = C(T \u2013 1) and \u03c6(cT) = cT ,\u2200T\u2208 N, we say that A has the complete knowledge.\nii) If there exists a time step T such that\nCA(T) \u2282 C(T),\nwe say that A has incomplete knowledge. Limited by time and cost, the incomplete state will be held throughout the whole adversarial operation.\nSpecial attention needs to be paid to the fact that the online manipulator in this paper lacks prior information of subsequent data C/C(T) at T step. The offline manipulator of [37], [38], on the other hand, doesn't need the prior information but requires the length of C to no longer grow, i.e. there exist a step To such that |C| = To. Consequently, the offline adversary in [37], [38] is a special case of the online manipulator, who is the online manipulator at the step that all pairwise comparisons have been collected. Such a distinction will affect the abilities of the offline and online attackers.\nThe Capability of Online Adversary. The above goal and knowledge empower the online attacker with completely divergent capabilities from those of the offline attacker. The online manipulator A is able to insert arbitrary pairwise comparisons into the data stream. Then the perturbed data will replace to produce the comparison graph for rank aggregation. More specifically, the fabricated pairwise comparisons with the knowledge CA(T) is\nc'(CA(T)) = [c'(1), ..., c'(aT)],\nwhere aT is the maximum number of possible insertions at T step. This sequence (16) reflects A's capability. It is noticed that A is unable to change the pairwise comparisons in CA(T) \u2286 C(T). However, in addition to insertion, the"}, {"title": "3.2 Distributionally Robust Game between the Ranker and the Online Adversary", "content": "With the above threat modelling, we can further understand the adversarial scenario from a game-theoretic perspective. When there exists A, the pairwise comparisons for R come form two sources: the original data stream C and the fraud data C'/C. Due to the extreme difficulty of identifying the possible sources of pairwise comparisons, R is only able to aggregate C' and obtain a ranking list \u03b8', which is different with the result form C. However, the existence of normal data stream C will alleviate the impact of A on R and try to keep d' away from O. With the help of defense and protection mechanisms, we believe that R will select pairwise comparisons that will preserve the original result 0. At the same time, A needs to induce R with the interference of C and make C' sufficient to support \u03b8' \u2208 \u0398A. As a consequence, this adversarial scenario is a game between R and A who choose pairwise comparisons to produce the desired ranking results.\nTo establish the adversarial game of the online adversary and the ranker, we first transfer the sequence of pairwise comparison at T step C(T) = {C1,...,Ct,...,CT} into a comparison graph G(C(T)) = {V, E, w(T)}. The vertex set V is the set of all candidates as V = [n] and the edge set E contains all directed edges between any pair of candidates as\nE = {i \u2192 j|i, j \u2208 [n], i \u0338= j}.\nHere w(T) = {W1,2(T), W1,3(T),..., Wn,n\u22121(T)} is the weights of E in C(T) as\nWT\ni,j (T) =\nT\n\u03a3 I[ct = (i, j)]\nt=1\nwhere I[] is the Iverson bracket. The weight w(T) represents how often a pairwise comparison occurs in C(T). Furthermore, w(T) can be treated as a random variable defined on the probability space (C, E, P):\nw(T) \u223c P,\nwhere C is the sample space of all possible pairwise comparisons involving n candidates\nC = {(i, j) | i, j \u2208 [n], i \u0338= j},\nE is the event space of all sequences with length T and P is a probability function. Consequently, the data sequence C(T) is associated with data distribution P which describes the occurrence frequency of different pairwise comparisons.\nA notable characteristic of the adversarial game in this paper is that the decision-making processes of R and A involve uncertainty: the true distribution of the mixed sequence (the observed weight) is unknown to both R and A during the whole procedure. All players bear the risk due to the uncertainty. Then the resulting Nash equilibrium may be different from the equilibrium with the true distribution. The uncertainty drives R and A to adopt conservative strategies. To be more specific, we consider the following Nash equilibrium problem: at any time step, each player needs to make decisions prior to the realization of uncertainty by minimizing their expected dis-utility with the most pessimistic situation:\nmin sup Ew\u223cP [fr(ar, a\u2212r, \u03c0r, w)],\nar\u2208ZY PEPr\nwhere r represents the rth player in the game. Such a distributionally robust game (DRG) models the interaction between the ranker and adversary. Each player in this game holds a continuous dis-utility function as\nfr :ZxZxN\u2033 \u00d7 RN \u2192 R,\nN is the cardinality of C as N := |C| = n(n \u2212 1). The action of r, ar = {1,2,\u2026,an,n\u22121} \u2208 ZY , indicates the number of pairwise comparisons selecting by r, and ar represent the actions of r's opponents. \u03c0 is the desired ranking list of player r. Here the \u201cmaximum\" operation w.r.t P means the player r decides his/her optimal strategy on the worst expected value of fr from the set of distributions P, which is constructed from the partially observed information wr. (22) is known as the distributionally robust game [35] in the literature. The solution of (22) is named as distributionally robust Nash equilibrium. If any ambiguity set Pr only contains a single distribution, (22) collapses to a stochastic game problem [13]. It is noticed that the ranker R is often unaware of the existence of A and the corresponding action turns out to be\nmin Ew\u223cPo [fr(ar, w, \u03c0r)],\nar\nwhich means the ranker will focus on the original ranking list and choose the data with some sampling methods. Meanwhile the player of A still needs to consider the most pessimistic situation as (22).\nDefinition 1 (Distributionally Robust Nash Equilibrium). A tuple (a\u2217 1 , . . . , a\u2217 R ) is a distributionally robust Nash equilibrium (DRNE) if\nar = arg min sup Ew\u223cP [fr(ar, ar, \u03c0r, W)],\nar PEPr\n= \u03a3\u03b1 ,\na a s\u2260r\nThis definition shows that the DRNE is a solution of the corresponding DRG (22). Here we consider the case of R = 2, say that the game between R and A. In what follows, we investigate the existence of DRNE by the following theorem. The detailed proof can be found in the supplementary materials."}, {"title": "3.3 Successful Opportunity to Sequential Manipulation", "content": "Without prior knowledge of the original data distribution, analyzing the equilibrium of the proposed distributionally robust game is really challenging. Here we try to dissect the outcome after the adversarial game directly. At the end of the distributionally robust game between R and A, we have a sequence of pairwise comparisons (17) for construction of the comparison graph. To simulate the competitive results of (25), we treat (17) as a stochastic process, the output of a sampling method S. The random nature of the sampling process replaces the uncertainty of the distributionally robust game. In addition, utilizing S to analyze C'(T) makes our subsequent discussion more pertinent to actual confrontation scenarios. Here we show that the two classic sampling methods will become an accomplice of the online manipulator, who help to generate the stable sequences favoring to A's goal.\nIn the non-adversarial scenario, an (\u03f5, \u03b4)-representative sampling method always suffices to take only a small number of random samples C in order to represent the data source C truthfully [48]. Even with the aimless attacker [8] who still adopts the original data source C as the source of perturbation, Bernoulli and the reservoir sampling methods could lead R to generate the same ranking result. To be specific, the perturbed sequence C\u2081 and the original sequence C would produce different comparison graph weights wc and wc. However, they still obey the same distribution as\nwc, wc \u223c Po,\nwhere Po is the distribution of original comparison graph weights. If the probability distribution of comparison graph's weight w is Po, it holds that\nR(wc) = R(wc') = \u03b8o.\nConsequently, R generates the original ranking list \u03c0\u03b8\u03bf even if the aimless attacker A exists. This so-called \u201cadversarial robustness\u201d [8] is on side of the sampling methods.\nUnfortunately, the attacker will be sophisticated in the real confrontation scenario. He/she could construct new data sources instead of simply using C. For example, given any \u03b8' \u2208 Oa like (9), A could generate the pairwise comparison through the BTL model: the larger the \u03b8i/\u03b8'j, the higher the probability of generating pairwise comparison i > j. Such actions construct the adversarial data source CA whose underlying distribution is PA which is distinct from the Po as R will produce the manipulated score:\nR(w) = \u03b8', \u03c9 \u223c PA.\nThe distributionally robust game between C and CA (22) creates the mixed data source C'. Once the underlying distribution of C' is consistent with PA, it holds that\nwc \u223c PA,\nwhere C is the perturbed sequence form C'. There is no doubt that the sampled data C2 will lead R to obtain \u03c0\u03bf as (29). We call such an attacker the \u201cpurposeful adversary\u201d. Then the (\u03f5, \u03b4)-representative sampling algorithms would fall into a trap. From the perspective of the purposeful adversary, the original \"representativeness\" turns into the \"vulnerability\". This \u201cvulnerability\u201d is the other side of the sampling methods like Bernoulli and reservoir.\nWe introduce some definitions which will help to establish the vulnerability results of Bernoulli and reservoir sampling methods. The data stream from C' is a mixture of two data streams from C and CA. The mixed data source C' satisfies\nC'CCUCA, C' \u2229 C \u2260 \u00d8, C' \u2229 CA\u0338= \u00d8.\nHere we consider the following two types of mixtures, which correspond to different behaviors of players in the distributionally robust game. In fact, the dynamic stream comes from the distributionally robust game whose players execute (22) and the static stream corresponds to players who executes (24).\nDefinition 2 (Static stream). Let C = {ct}T t=1 be a sequence from C' which is a mixture of two data streams from C and CA. For any ct \u2208 C' \u2229 C, if the generation of ct is independent with {c1,..., ct\u22121}, we call C from C' is a static stream.\nDefinition 3 (Dynamic stream). Let C = {ct}T t=1 be a sequence from C' which is a mixture of two data streams from C and CA. For any ct \u2208 C' \u2229 C and ct \u00a2 C'\u2229CA, if the generation of ct is dependent with {c1,...,ct\u22121}, we call C from C' is a dynamic stream.\nThe concept of \u03f5-approximation measures the similarity between two sequences from the same data source.\nDefinition 4 (\u03f5-approximation). A sequence C\u2081 is an \u03f5-approximation of sequence Co with respect to the data source C, if there exists an \u03f5 \u2208 (0, 1) such that\n|dc(Co) - dc(C1)| \u2264 \u03f5,\nwhere C is a data source, dc(C) is the density of C in the sequence C, the fraction of pairwise comparisons in C that are also in C:\ndc(C) = P(c \u2208 C | c\u2208 C).\nThis definition give us a similarity metric between two sequences with the density function. It is noteworthy that the lengths of Co and C1 could be different, where the length of Co could be infinite and C\u2081 only has a limited number of elements. To portray the data source and analyze the vulnerability of sampling methods, we adopt the (\u03f5, \u03b4)-representativeness to quantify the quality of a sampling method w.r.t a data source.\nDefinition 5 ((\u03f5, \u03b4)-representativeness). A sampling method is called (\u03f5, \u03b4)-representative if the sampled sequence of C\u2081 is an \u03f5-approximation of the whole stream Co with respect to C, with"}, {"title": "4 ADVERSARIAL GENERATION PROCESS", "content": "In Section 4.1", "components": "an adaptive generation rule and a stopping time. For the adaptive rule", "n(17)": "\u03b8 \u2208 \u0398 \u03c2\u03b8 > 0", "be": "nL(\u0398", "\u03c0\u03b8": "\u03c0(\u03b8)\u2260\u03c0\u03bfL\u2217(\u0398", "17": "nL\u2217(\u0398", "\u03c7)={\u03c0\u03b8": "\u0398\u2032\u2286S\u03c0\u03b8"}, {"title": "4.2 Robust Optimization with Incomplete Knowledge", "content": "By the adversarial policy (49) and (54) with complete knowledge, the adversary A could insert pairwise comparisons to manipulate the rank aggregation results in the sequential way. However, complete knowledge assumption could be not realistic in the actual confrontation scenarios. To dissect the vulnerability as much as possible, we develop a distributionally robust formulation against the uncertainty of knowledge.\nNotice that the log-likelihood function L (47) is a scale-free function w.r.t the weights of a comparison graph. The MLE (48) would be invariant when we map wA into a probabilistic simplex and replace the discrete variable w\u2217 ij with a continuous variable p = [p1,2, . . ., pn,n\u22121] \u2208 Rn(n-1);\np = \n1\nMwA, \n1T p = 1\nwhere 1 is a n-dimension vector whose elements are 1 and M is the total number of observed pairwise comparisons by A:\nM = \u2211 Wij .\nIn fact, p is drawn from a distribution P:\nP =\n1\n(2)(5 \u2212 1) \u2211 \u03b4(pi,j ).\nwhere (pi,j) is the Dirac measure concentrated at pi,j. What is more, we can portray the difference between ws(t) and wA (line 7 in Algorithm 1) by the distance between distributions. Such treatments introduce an uncertainty set of UV(P) which contains the probability distributions around P:\nU^(P) = { Q | W\u2081(P, Q) \u2264 y },\nwhere W\u2081(\u00b7, \u00b7) is the 1-Wasserstein distance [24] as the discrepancy measure. The definition of 1-Wasserstein distance and related properties can be found in the supplementary materials. With the help of UV(P), we execute a conservative strategy to estimate the parameter of BTL model with incomplete knowledge. Instead of p, we choose the other random variable q as the weight in (47). The distribution of q belongs to U^(P) and q conducts the worst expected value of L. Such a conservative strategy can alleviate the uncertainty generated by incomplete knowledge in the sequential decisions of manipulation policy. Then the relative ranking score with incomplete is estimated by solving the following distributionally robust optimization (DRO) problem:\nmax sup Eq\u223cQ [L(\u03b8, q)],\n\u03b8\u2208Supp(p\u2217 \u03b8) Q\u2208UV(P)\nwhere L(\u03b8, q) replaces the incomplete knowledge wA with the random variable q \u223c Q in (47). The supreme operation w.r.t. Q means that the estimation of the latent preference score is based on the worst expected value of L from the set of distributions UV(P).\nNext, we specify the formulation of Supp(p\u2217 \u03b8 ). Without a lost of generality, we assume the estimated and the desired scores belong to a probability simplex. Given the desired relative ranking score \u03b8', we hope that the estimation from"}, {"title": "5 EXPERIMENTS", "content": "In this section, three examples are exhibited with both simulated and real-world data to illustrate the validity of the proposed online attack strategy against the Bernoulli method for rank aggregation like HodgeRank [29] and RankCentrality [41]. The first example is with simulated data while the latter two exploit real-world datasets involved in election and crowdsourcing."}]}