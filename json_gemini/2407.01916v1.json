{"title": "Sequential Manipulation against Rank Aggregation: Theory and Algorithm", "authors": ["Ke Ma", "Qianqian Xu", "Jinshan Zeng", "Wei Liu", "Xiaochun Cao", "Yingfei Sun", "Qingming Huang"], "abstract": "Rank aggregation with pairwise comparisons is widely encountered in sociology, politics, economics, psychology, sports, etc. Given the enormous social impact and the consequent incentives, the potential adversary has a strong motivation to manipulate the ranking list. However, the ideal attack opportunity and the excessive adversarial capability cause the existing methods to be impractical. To fully explore the potential risks, we leverage an online attack on the vulnerable data collection process. Since it is independent of rank aggregation and lacks effective protection mechanisms, we disrupt the data collection process by fabricating pairwise comparisons without knowledge of the future data or the true distribution. From the game-theoretic perspective, the confrontation scenario between the online manipulator and the ranker who takes control of the original data source is formulated as a distributionally robust game that deals with the uncertainty of knowledge. Then we demonstrate that the equilibrium in the above game is potentially favorable to the adversary by analyzing the vulnerability of the sampling algorithms such as Bernoulli and reservoir methods. According to the above theoretical analysis, different sequential manipulation policies are proposed under a Bayesian decision framework and a large class of parametric pairwise comparison models. For attackers with complete knowledge, we establish the asymptotic optimality of the proposed policies. To increase the success rate of the sequential manipulation with incomplete knowledge, a distributionally robust estimator, which replaces the maximum likelihood estimation in a saddle point problem, provides a conservative data generation solution. Finally, the corroborating empirical evidence shows that the proposed method manipulates the results of rank aggregation methods in a sequential manner.", "sections": [{"title": "INTRODUCTION", "content": "RANK aggregation has wide-ranging applications in so-cial choice theory [2], psychology [46], economics [45],statistic [29], bioinformatic [4], and other fields. In pursuitof large benefits, the potential attackers have strong moti-vations to manipulate the ranking aggregation algorithmswhich are utilized in high-stakes scenarios, e.g. elections[6], sports competitions [31], and recommendations [43]. Aprofit-seeking adversary will try his/her best to designate\nthe ranking list and fulfill his/her demands. In additionto statistical [17] and computational [50] properties, theintegrity issue of ranking results becomes a new directionin the study of rank aggregation algorithms.\nThe pioneer in conducting security-related research onrank aggregation is [37]. [37] develops a strong threat modelfor perturbing the aggregated results. The adversary hascomplete knowledge of the initial truthful data and cor-responding feedback of victims. He/her can corrupt theoriginal data by inserting, deleting, or flipping any pair-wise comparisons with limitations on quantity of modifi-cation. [37] also considers the adversary with incompleteknowledge, who lacks the preference score generated bythe victims. The attack strategies are solved by maximizingthe objective functions of the victims with global modifi-cation on the weights of comparison graph. Their resultsshow that the rank aggregation algorithms are vulnerable tothese attackers. Concurrent to [37], [32] and [1] restrict themodification scope and degree of weights towards specificfamilies of comparison graphs, then provide the recoveryguarantees for the ground truth ranking with the proposedprocedures. It is noteworthy that these weaker threat modelscould not be translated into any defense mechanism againstthe unregulated attackers. Furthermore, [38] poses the ma-nipulation problem against rank aggregation algorithms.The purposeful attackers are not satisfied with simply per-turbing the ranking list, but with designating it. The attackbehavior with a target ranking list is a fixed point belongingto the composition of the adversary and the victim fromthe perspective of the dynamical system. The manipulationstrategies equal to the conditions that the weights of com-parison graph should satisfy when the victims obtain thetarget ranking list. From the above analysis, we concludethat the existing methods study the security issue of rankaggregation in an \"offline\" adversarial scenario [51], [52],[53]. In general, the attackers from the existing methodstry to modify the pairwise comparisons that have alreadybeen collected. These offline attacks must occur after theconstruction of the comparison graph and before the vic-tims aggregate its results. The rank aggregation algorithmswould wait for the adversary to complete his/her maliciousactions and unconditionally accept the modifications to thedata before they can begin their own jobs. Opportunity forsuch attacks affords the adversary some privileges. Thereexists an implicit assumption that the adversary is capableof changing the existed data in the possession of the victims.However, the data held by the rank aggregation algorithmsis often immutable in practice. In sports competitions, thefinal ranking is only produced when all the races have beencompleted. Theoretically, the existing methods could per-turb or manipulate the ranking lists of all teams or players.But no one can travel to the past and change the outcomeof a match that has already finished. Once a vote has beencast at the polling station, the ballot will not be changedby any third party. In the partial confrontation scenarios,the existing methods assume that they have completelybypassed the constraints of time and space. Therefore, theseoffline methods fail to profile the capability boundary of thepotential attackers and illuminate the underlying risks ofranking aggregation algorithms.\nTo address the above challenges, we need a new onlineparadigm for manipulating rank aggregation algorithms. Interms of attack opportunities, attackers need to seek morechances for archiving his/her goal and bypass the time andspace constraints. The whole process of obtaining a rankinglist can be divided into two parts: online data collection andoffline data aggregation. Compared to offline aggregation,online collection is much more vulnerable. As a distributedand asynchronous process, data collection can't be done in ac trolled environment and is therefore independent ofrank aggregation. The defense mechanisms of aggregationoften fail to protect online data collection. In addition, datacollection always takes a long time and the attacker hassufficient chances to execute his/her actions. Consequently,disrupting the data collection process by online falsifyingpairwise comparisons is more sophisticated than offlinechanging the collected data. Having determined the attackopportunity, it is necessary to identify the attacker's capabil-ities during data collection. During the collection process, adata source generates many pairwise comparisons waitingto be sampled. Once a comparison is sampled, it is used toconstruct the comparison graph and cannot be modified.If the attacker performed malicious actions during datacollection, all he/she could do was mimic the behavior ofnormal data. The adversary could construct an adversarialdata source which generates specific pairwise comparisonsand insert them into the data stream. Since the cost ofauthenticating data sources is much greater than the cost offabricating a pairwise comparison with malicious intention,an attacker can effectively bypass the victim's defenses. Tothe best of our knowledge, manipulating aggregation resultsby fabricating the data source and continuously injectingmalicious pairwise comparisons into the data stream isa new formulation for attacking against rank aggregationalgorithms, which is still under-explored.\nThe core of this paper is to make the above analysisrigorous by establishing a principle framework for sequen-tial manipulating rank aggregation algorithms. The mainmethodology and theoretical contributions are summarizedas follows.\n\u2022 Under a distributionally robust game theoretic frame-work, we construct the confrontation model betweenthe online manipulator and the ranker who is bound tothe original data sources. We then prove the existence"}, {"title": "PRELIMINARY", "content": "We begin with a formal description of the parametric modelfor binary comparisons, a.k.a Bradley-Terry-Luce (BTL)model [12]. Then we revisit the comparison graph and theLaplacian matrix which are essential for the ranking algo-rithms tailored to the BTL model. Two popular approacheswhich rank the items based on appropriate estimation of thelatent preference scores, named HodgeRank [29] and RankCentrality [41], are chosen as the victims to motivate ourtarget attack strategies. In the remainder of this paper, wewill use positive integers to indicate alternatives and voters.Let V be the set [n] = {1, \u00b7 \u00b7 \u00b7, n} which denotes aset of alternatives to be ranked. U = {u1, \u00b7 \u00b7 \u00b7, um} denotesa set of voters. We will adopt the following notation fromcombinatorics:\n$\binom{V}{l}$ := set of all l elements subset of V.\nIn particular,\n$\\binom{V}{2}$ := set of all unordered pairs of elements of V\n:= { [i, j] | \u2200 i, j \u2208 V, i \u2260 j }.\nMoreover, for any i, j \u2208 V, i \\neq j, we write i > j tomean that alternative i is preferred over alternative j. Sucha comparison could be converted into an ordered pair (i, j).The set of ordered pair will be denoted as\nV \u00d7 V := {(i, j) | i > j, \u2200 i, j \u2208 V, i \\neq j} .\nOrdered and unordered pairs will be delimited by paren-theses (i, j) and braces {i, j} respectively. If we wishto emphasize the preference judgment from a particular voteru \u2208 U, we will write iu j."}, {"title": "2.1 Parametric Model and Pairwise Comparisons", "content": "Given a collection V of n alternatives, the parametric modelof pairwise comparisons assumes that each i \u2208 V has acertain numeric quality score \u03b8\u2217. Suppose that \u03b8\u2217 \u2208 Rn\n\u03b8\u2217 = [\u03b8\u22171, \u00b7 \u00b7 \u00b7 , \u03b8\u2217n]T (1)\ncomprises the underlying preference scores assigned to eachof the n items. Without loss of generality, \u03b8\u2217 could bepositive as\n\u03b8\u2217i > 0, \u2200 i \u2208 [n].\nSpecifically, a comparison of any pair {i, j} \u2208 $\\binom{V}{2}$ isgenerated via the comparing between the correspondingscores \u03b8\u2217i and \u03b8\u2217j and (in the presence of noise) by the BTL model.Let yij denote the outcome of the comparison of the pair iand j based on \u03b8\u2217, such that yij = 1 if i is preferred over jand yij = \u22121 otherwise. Then, according to the BTL model,\n2, with probability \u03b8\u2217i / (\u03b8\u2217i + \u03b8\u2217j),\nyij ={\n(2)\n\u22121, otherwise.\nSince the BTL model is invariant under the scaling of thescores, the latent preference score is not unique. Indeed,under the BTL model, a score vector \u03b8\u2217 \u2208 Rn is theequivalence class\n\u0398\u2217 = {\u03b8 | there exists \u03b1 > 0 such that \u03b8 = \u03b1\u03b8\u2217} .\nThe outcome of a comparison depends on the equivalenceclass \u0398\u2217."}, {"title": "2.2 Comparison Graph and Combinatorial Laplacian", "content": "A graph structure, named comparison graph, arises natu-rally from pairwise comparisons as follows. Let G = (V, E)stand for a comparison graph, where the vertex set V = [n]represents the n candidates. In our problem setting, wepay attention to the complete graph setting: the directededge set E = V \u00d7 V and N := |E| = n(n \u2212 1). Onecan further associate weights w\u2217 on E as voters U wouldhave rated, i.e. assigned cardinal scores or given an ordinalordering to, the complete set of the alternatives V. Butno matter how incomplete the rated portion is, one mayalways convert such judgments into pairwise rankings thathave no missing values as follows. For each voter u \u2208 U,the pairwise ranking matrix is a skew-symmetric matrixYu = {yij}\n\u2208 {\u22121, 0, 1}n\u00d7n as\nyiju = \u2212yjiu, \u2200 (i, j) \u2208 E, \u2200 u \u2208 U,\n(3)\nwhere\nyiju = {\n1, if i uj,\n\u22121, if j ui,\n0, otherwise.\n(4)\nFurthermore, we associate weight with each directed edgeas w\u2217 = [w\u221712, w\u221713, \u00b7 \u00b7 \u00b7 , w\u2217nn\u22121] \u2208 Z+ as\nw\u2217ij := \u2211 I[yiju > 0] + I[yjiu \\neq 0],\n(5)\nu\u2208U\nwhere I[\u00b7] is the Iverson bracket. Consequently, we canrepresent any pairwise ranking data as a comparison graphG with edge weights w\u2217.\nGiven a graph G and weights w\u2217, it is common to con-sider the weight matrix W\u2217 with w\u2217ij as matrix elements, aswell as the diagonal degree matrix D\u2217 = diag(d1, \u00b7 \u00b7 \u00b7 , dn)given by di = \u2211j\u2208V wij, which represents the volumetaken by each node in the graph G. The combinatorialLaplacian Lo is defined as\nLo = D\u2217 \u2212 W\u2217. (6)\nIn both solving process and the theoretical analysis, thecombinatorial Laplacian Lo plays a vital role in the popularapproaches based on the parametric model.\nRemark 1. In this paper, we select HodgeRank [29] andRankCentrality [41] to verify that online manipulation be-havior is a potentially significant threat to rank aggregationmethods. This is due to the following considerations. First,these two representative methods that have received muchrecent attention have been well studied by [15], [17], [29]and their theoretical properties guarantee the promisingrecovery performance. The successful manipulation will bein stark contrast to the original aggregated results. Second,the variants of HodgeRank and RankCentrality are hottopics of the literature [11], [14], [33], [36]. The online at-tack method proposed in this paper has a large potentialvictimization. Third, the destructive results of these twoestimators for the famous Bradley-Terry\u2013Luce (BTL) modelwill prompt researchers to focus on the security issue of rankaggregation in the high-stakes applications.\nRemark 2. When exists a purposeful adversary, the collectedpairwise comparisons would be a mixture of the data whichsupports the original ranking list and the fabricated databy the adversary. To manipulate the aggregated results,the attacker will predict the ranker's behavior with incompleteinformation and fabricate the suitable pairwise compar-isons. Therefore, we need a mathematical tool to formu-late the ranker's and the adversary's behaviors, which hasbeen extensively modeled as a two-player, non-cooperativegame in the adversarial learning [20]. Specifically, the con-frontation scenario between the online manipulator and theranker who takes control of the original data source isformulated as a distributionally robust game that deals withthe uncertainty of knowledge. The ranker's set of actionscorresponds to selecting pairwise comparisons and mini-mizing the difference between the aggregation result andthe original ranking list. Meanwhile, the adversary's set ofactions corresponds to generate pairwise comparisons andminimizing the difference between the aggregation resultand the desired ranking list. For two players, the upcomingdata is the uncertain knowledge.\nRemark 3. Although the offline [38] and online attackershave the same goal, different behavioral patterns resultin the two having different knowledge and capabilities.Specifically, let To be the stopping time of data collection,the offline attacker has full/partial knowledge of the com-parison graph weight WA(To). Then the offline manipulatorhas the ability to modify w(To) in its entirety, increasingor decreasing the values of wijA(To) at arbitrary position1.Meanwhile, the online manipulator of this paper sequen-tially obtains his/her knowledge but knows nothing aboutthe forthcoming pairwise comparisons. More importantly,the online attacker will execute his/her strategy based onthe knowledge wa(t) at each time step t instead of wait-ing for the moment To. Thus, the greatest limitation onthe ability of the online attacker is that he/she can onlyinsert fabricated pairwise comparisons. The online attackparadigm could bypass the existing defense mechanisms ofrank aggregation algorithms and break the barrier oftime. We provide an example in Fig. 1. It is noteworthy thatutilizing the offline method at each time step can't achieve asimilar result as the online method, since the offline methoddoes not guarantee that the collected data keep unchanged.\nRemark 4. In order to accomplish an effective online attackwithout modifying the collected data, the adversary willgenerate the most destructive data to inject based on thecurrent partial information and stop when the ambiguityof ranking list falls below a certain level. This paper devel-ops a general framework against the parametric models ofrank aggregation, especially the BTL model. The proposedadversarial generation process, corresponding to the thirdcore contribution, can designate the leading candidate of theaggregated ranking lists by HodgeRank and RankCentral-ity. In addition, the offline attack methods [37], [38] cannotyield the available attack results in the online manipulationsetting of this paper."}, {"title": "3 GENERAL FRAMEWORK", "content": "In this section, we systematically introduce the generalframework for sequential manipulating against pairwise ranking algorithms. To mathematically characterize the suc-cessive interaction between the manipulator and the vic-tims, we perform threat modeling to profile the attacker'sgoal, knowledge and capability in Sec. 3.1 and dissect theonline adversarial behavior. Then we develop the game-theoretic formulation between the online adversary and theoffline rank aggregation procedure in Sec. 3.2 with particularemphasis on the uncertainty that the online manipulatormust deal with. Such a game with fundamental uncertaintyabout future data and the opponent's strategies and thesettings of [37], [38] are significantly different. Meanwhilethe existence of the distributionally robust Nash equilibriumis also established."}, {"title": "3.1 Threat Model of Online Adversary", "content": "Here we present the threat model of the manipulator tospecify his/her goal, knowledge and capability with onlinebehavioral pattern. The threat model helps to establish theonline interactions between the purposeful attacker and therank aggregation with pairwise comparisons.\nThe Goal of Online Adversary. Inducing the threatenedrank aggregation approaches to produce the designatedranking is the goal of a manipulator. On the one hand,the adversary cannot interact directly with the threatenedrank aggregation procedure due to the inevitable defensemechanisms. On the other hand, the collection of pairwisecomparisons is an online process which is independent ofthe subsequent rank aggregation method. It often takesplace in open environments and lacks adequate supervision.If the attacker could interfere with the data collection pro-cedure, he/she has a high possibility of bypassing defensemechanisms and accomplishing manipulation. The data col-lection procedure is always treated as a random samplingprocess. All possible pairwise comparisons consist of thedata stream. A random sampling algorithm will receive andchoose the data which constructs the comparison graph. Toarchive manipulation, the adversary proactively disguisesthe crafted malicious data as part of the data stream. Thenthese malicious data could be adopted by sampling algo-rithms and used to construct a comparison graph. Aftersampling, the ranker produces the aggregated result basedon the comparison graph. These sequential actions of theadversary will induce the ranker to produce a designatedranking result. If the ranking list meets the demand ofadversary, we will say that the adversary has executed asuccessful manipulation.\nWe denote A and R be the adversary and the rankerrespectively. Let C = {C1, C2, . . . } be a sequence of recurringpairwise comparisons involving at most n candidates. Theperturbed sequence by A is C'. The sequence of pairwisecomparisons will be transferred into the comparison graphsas (5). Suppose that G(C) is the comparison graph con-structed by C. The relative ranking scores \u03b8 and \u03b8\u2032 areproduced by R with G(C) and G(C\u2032) accordingly. The non-adversarial rank aggregation can be portrayed as\nR(G(C)) = \u03b8. (7)\nThen the rank aggregation result under online manipulationstrategies would be\nR(G(C\u2032)) = \u03b8\u2032. (8)\nAlthough A is able to achieve multiple objectives with thehelp of \u03b8\u2032, designating the winner will be the most desiredachievement of A. Therefore, we consider the followingscenario: after the action of R, it holds that\n\u03b8\u2032 \u2208 \u0398A := { \u03b8 \u2208 Rn\\ \u03b8ii0 > \u03b8io} ,\nmax\ni\u2208[n],i\\neq io\n(9)\nwhere io is the winner candidate desired by A. Then wewill say that A has a successful online manipulating strategyagainst R by substituting G(C) with G(C\u2032) through sequen-tial behavior. It is noteworthy that the goal in this paperimplicitly requires sequential/online attack behavior, while[38] needs the help of offline manipulation strategy. The"}, {"title": "The Knowledge of Online Adversary", "content": "differences between online and offline strategies are shownin the following parts.\nThe Knowledge of Online Adversary. Let\nC(T) = {C1, C2, \u00b7 \u00b7 \u00b7 , CT} (10)\nbe a sub-sequence of C with its first T pairwise compar-isons. Without loss of generality, the number of pairwisecomparisons in C will be increased by 1 at each step as\nC(T) = [C(T \u2212 1), cT] , T \u2208 N. (11)\nAs a consequence, the knowledge of A at T step, denotedCA(T) = [CA(T \u2212 1), \u03c6(cT)] , contains two parts:\n\u2022 a subset of C(T \u2212 1) as\nCA(T \u2212 1) \u2286 C(T \u2212 1), (12)\n\u2022\nand the state of cT:\n(cT) ={\ncT, if A obtains cT,\n(13)\n\u00d8, otherwise,\nwhere \u2205 indicates that no pairwise comparisons willenter the sequence.\nBased on the completeness of CA(T), we consider thefollowing two adversarial scenarios:\ni) If it holds that\nCA(T) = C(T), \u2200 T \u2208 N, (14)\nthat is CA(T \u2212 1) = C(T \u2212 1) and \u03c6(cT) = cT, \u2200 T \u2208N, we say that A has the complete knowledge.\nii) If there exists a time step T such that\nCA(T) \u2282 C(T), (15)\nwe say that A has incomplete knowledge. Limitedby time and cost, the incomplete state will be heldthroughout the whole adversarial operation.\nSpecial attention needs to be paid to the fact that theonline manipulator in this paper lacks prior information ofsubsequent data C/C(T) at T step. The offline manipulatorof [37], [38], on the other hand, doesn't need the priorinformation but requires the length of C to no longer grow,i.e. there exist a step To such that |C| = To. Consequently,the offline adversary in [37], [38] is a special case of theonline manipulator, who is the online manipulator at thestep that all pairwise comparisons have been collected.Such a distinction will affect the abilities of the offline andonline attackers.\nThe Capability of Online Adversary. The above goal andknowledge empower the online attacker with completelydivergent capabilities from those of the offline attacker. Theonline manipulator A is able to insert arbitrary pairwisecomparisons into the data stream. Then the perturbed datawill replace to produce the comparison graph for rankaggregation. More specifically, the fabricated pairwise com-parisons with the knowledge CA(T) is\nc\u2032(CA(T)) = [c\u2032(1), \u00b7 \u00b7 \u00b7 , c\u2032(aT)] , (16)\nwhere aT is the maximum number of possible insertionsat T step. This sequence (16) reflects A's capability. It isnoticed that A is unable to change the pairwise comparisonsin CA(T) \u2286 C(T). However, in addition to insertion, the"}, {"title": "3.2 Distributionally Robust Game between the Ranker and the Online Adversary", "content": "offline attackers of [37", "38": "could delete or flip a pairwisecomparison ct \u2208 CA(T) \u2286 C(T)", "CA(T)": "c\u2032(CA(T) )). (17)\n(17) is a mixture of the collected data C\u2032(T \u2212 1)", "sources": "the original data stream C and the frauddata C\u2032/C. Due to the extreme difficulty of identifyingthe possible sources of pairwise comparisons"}, ".", ["n"], {"n": "i \\neq j"}, ".", 18, {"w1,2(T)": "w1", "3(T)": "."}, ".", 19, ["is the Iverson bracket. The weight w(T) repre-sents how often a pairwise comparison occurs in C(T).Furthermore, w(T) can be treated as a random variabledefined on the probability space (C, E, P):\nw(T) \u223c P, (20)\nwhere C is the sample space of all possible pairwise com-parisons involving n candidates\nC = {(i, j) | i, j \u2208 [n"]], "uncertainty": "the true distribution of the mixed se-quence (the observed weight) is unknown to both R and Aduring the whole procedure. All players bear the risk dueto the uncertainty. Then the resulting Nash equilibrium maybe different from the equilibrium with the true distribution.The uncertainty drives R and A to adopt conservativestrategies. To be more specific", "problem": "at any time step", "situation": "nar = arg min sup Ew~Pfr(ar", "a-r,\u03c0r,w)": 22, "as\nfr": "Z \u00d7 Z \u00d7 N\u2033 \u00d7 RN \u2192 R", "N": "C| = n(n \u2212 1). The actionofr, ar = {1, 2, ..., aN } \u2208 Z, indicates the number ofpairwise comparisons selecting by r, and a\u2212r representthe actions of r's opponents. \u03c0 is the desired ranking listof player r. Here the \u201cmaximum\u201d operation w.r.t P meansthe player r decides his/her optimal strategy on the worstexpected value of fr from the set of distributions P, whichis constructed from the partially observed information wr.(22) is known as the distributionally robust game [35"}