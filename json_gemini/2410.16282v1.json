{"title": "Optimal Ground Station Selection for Low-Earth Orbiting Satellites", "authors": ["Duncan Eddy", "Michelle Ho", "Mykel J. Kochenderfer"], "abstract": "This paper presents a solution to the problem of optimal ground station selection for low-Earth orbiting (LEO) space missions that enables mission operators to precisely design their ground segment performance and costs. Space mission operators are increasingly turning to Ground-Station-as-a-Service (GSaaS) providers to supply the terrestrial communications segment to reduce costs and increase network size. However, this approach leads to a new challenge of selecting the optimal service providers and station locations for a given mission. We consider the problem of ground station selection as an optimization problem and present a general solution framework that allows mission designers to set their overall optimization objective and constrain key mission performance variables such as total data downlink, total mission cost, recurring operational cost, and maximum communications time-gap. We solve the problem using integer programming (IP). To address computational scaling challenges, we introduce a surrogate optimization approach where the optimal station selection is determined based on solving the problem over a reduced time domain. Two different IP formulations are evaluated using randomized selections of LEO satellites of varying constellation sizes. We consider the networks of the commercial GSaaS providers Atlas Space Operations, Amazon Web Services (AWS) Ground Station, Azure Orbital Ground Station, Kongsberg Satellite Services (KSAT), Leaf Space, and Viasat Real-Time Earth. We compare our results against standard operational practices of integrating with one or two primary ground station providers.", "sections": [{"title": "1. INTRODUCTION", "content": "In recent years, easier access to space has led to a significant rise in the new constellations and missions being launched by commercial, government, and academic organizations. This change has been driven by new launch providers, cheaper ride-sharing launch opportunities, and the successful demonstration commercial-off-the-shelf-based small satellites. Historically, mission operators have provisioned dedicated ground segments to support each satellite or constellation separately. However, this leads to significant upfront capital expenditures, poor asset utilization rates, limited communications opportunities, and low data downlink volumes.\nTo address these challenges, the industry has moved increasingly to a GSaaS model where ground station providers build out a global network of station locations and mission operators subsequently contract with providers to integrate with their network. This model reduces mission operator capital expenditure costs by spreading the cost over multiple customers while simultaneously increasing the usage of each antenna. Mission operators also benefit from increased scalability by being able to access existing global antenna networks, increasing the number of potential communications opportunities. This in turn improves data downlink volumes, reduces communication gaps, enables greater operational flexibility, and reduces mission lead-times.\nHowever, this new model also comes with its own challenges. There are integration and operational costs associated with using a provider. Additionally, the overall mission performance parameters for data downlink volume and contact frequency depend the combined selection of all station locations as well as the satellite orbits. Selecting the providers and stations to support a mission involves weighing considerations such as desired coverage, operational costs, latency and data throughput, uplink and downlink capabilities, reliability, and scheduling availability. This selection is complicated by the number of different potential providers, large selection of potential locations, and varying cost models between providers. Between the 6 largest ground station providers, there are over 91 ground station locations currently in operation. The providers and stations considered are listed in Appendix A.  This paper presents a solution to the ground station selection problem based on an integer programming (IP) formulation.\nEarly work proposed the idea federated ground station networks, a loose, virtual association of global stations to increase mission data downlink access while simultaneously lowering cost and reducing integration barriers [1-3]. The primary focus of these works was on the software engineering challenges and architectural approaches for networking, scheduling, and data dissemination for a multi-mission, multi-operator ground station network.\nIn terms of station selection, past authors have focused on improving ground station placement for reducing downlink"}, {"title": "2. PROBLEM FORMULATION", "content": "We consider the problem of selecting a ground station network that optimizes a single performance objective while adhering to relevant selection constraints. The mission may include one or more satellites defined by set S. The set of potential ground station providers P and station locations L are known and the problem is simply determining which locations should be selected. The mission start time $t_{opt}^{s}$ and end time $t_{opt}^{e}$ define the optimization window with total duration $T_{opt} = t_{opt}^{e} - t_{opt}^{s}$.\nIf we had an oracle that could compute all possible contact opportunities for all spacecraft over the entire mission duration using perfect knowledge of each object's predicted trajectory, then the ground station selection problem would be equivalent to the satellite task planning problem of selecting ground contact opportunities that optimize the desired objective. However, due to non-conservative orbital perturbations, it is not possible to accurately predict spacecraft orbits in LEO over a multi-year mission. Therefore, we instead consider the surrogate problem of optimizing the provider and location selection on a short segment of the mission duration defined by simulation start time $t_{sim}^{s}$ and end time $t_{sim}^{e}$ with total duration $T_{sim}$. The optimal station selection for this duration is considered to be the optimal selection over the entire mission.\nThis assumption is appropriate so long as the simulation window is long enough such that the distribution of contacts over the simulation period is representative of the distribution of contacts over the entire mission. Appendix B discusses this in further depth, and finds that a propagation window of 7 to 10 days is sufficient, though at least 20 days is recommended. Alternatively if the mission uses repeat ground-track orbits and the simulation window matches the repetition period, then the optimization of providers and locations of the surrogate problem is exactly the same as optimizing over the entire mission duration.\nThe problem of provider and location selection becomes the problem of optimizing selected contact opportunities for a set of satellites the optimal providers and locations are simply the providers and locations corresponding to the selected contacts in the planning problem. There has been extensive work in the domain of satellite task planning with many different algorithmic approaches presented in literature since it was first presented by Hall et al. [27]. Solution approaches include dynamic programming [28], ant-colony optimization [29], mixed-integer linear programming [30], Monte Carlo tree search [31], and maximum independent set local search heuristics [32].\nFor this paper, we adopt an integer programming approach inspired by past mixed-integer linear programming work due to the unique benefits of this approach. If an optimization problem can be expressed as an IP, it can then be solved using software libraries such as Gurobi [33] or COIN-OR [34]. These libraries are fast, efficient, and have undergone extensive validation and use across numerous disciplines. Most importantly, as part of the solution to any problem, the solver returns an optimality certificate that states whether the returned solution is globally optimal, is suboptimal, or if the problem is infeasible and there is no possible valid solution. This certificate is useful for a system engineering in understanding the overall performance of the mission ground segment. The next step is to express the ground station optimization problem as an IP.\nIP Formulation\nAn integer program is a variation of a linear program where the objective and constraints are linear functions and all decision variables are integers. To express the ground station optimization problem as an IP, we consider a set of ground station providers P. For each provider, there is a tuple $(p, P) \\in P$, where $p \\in \\{0,1\\}$ is a design variable that is 1 if the provider is selected and 0, otherwise, and P is a data-object that provides constant-information associated with that specific provider. Each provider has a set of ground station locations denoted $L^{P}$, while the set of all stations is denoted L. Each station $(l, L) \\in L$ has an associated design variable $l \\in \\{0, 1\\}$. The location L has a fixed data rate $L_{dr}$. The ground network is optimized with respect to individual satellites S E S. Each satellite has a fixed data rate $S_{dr}$.\nFrom P, L, and S, we compute the set of all contacts C over the simulation window defined by $(t_{sim}^{s},t_{sim}^{e})$. For each contact $(c, C) \\in C$ there is a binary decision variable $c \\in \\{0, 1\\}$ that indicates whether contact C has been selected."}, {"title": "3. EXPERIMENTS", "content": "To evaluate the performance of the IP optimization solution, we simulate optimization problems by randomizing the cost and data downlink parameters across all providers and stations in Appendix A. The range of potential values used to generate the random scenarios are listed in Table 1. Spacecraft are randomly sampled from the set of objects with altitudes between 300 km to 1000 km from the Celestrak active satellite database [35].\nThe spacecraft dynamics are propagated using the SGP4 propagator [36]. The simulation window $T_{sim}$ is set to be 7 days long and the optimization window $T_{opt}$ is set to 365 days for all cases. The simulation window was selected by propagating the spacecraft dynamics out for various simulation windows and analyzing at what point the number of contacts per day and mean gap and contact duration level out. These results are shown in Appendix B. A 10\u00b0 minimum elevation mask is applied at all locations when calculating contact opportunities. All simulations were run on a workstation with a 64-core 2.0 GHz Intel AMD EPYC 7713 processor.\nWe consider two primary problem variations\u2014a total mission cost minimization problem and a data downlink maximization problem. These problem variations are constructed to represent practical system design trade studies that might be undertaken as part of designing a space mission ground segment. The problem variations are constructed by composing an objective function with a subset of the possible constraint functions in Section 2.\nFigure 2 shows how the optimal solution of the cost minimization problem compares to the average one-provider and two-provider solutions. As expected, the IP optimization problem that is free to optimize over all potential ground station providers out performs the best possible networks when only a one or two ground station providers are considered. One surprising result is that, despite minimizing the total cost, the IP optimzied solution also outperforms the one- and two-provider solutions in terms of total data downlinked at as well, which would not normally be expected since the objective does not include any explicit regularization term that would encourage data downlink maximization. We can see that the IP formulation is relatively fast with the average solution time being under 100 seconds for constellations of up to 10 satellites. One interesting trend that is observed is that the total normalized cost appears to plateau for the two-provider solution when the constellation size reaches 10 satellites. This can be explained by saturation of the ground station network and an inability to support more contacts for new satellites. That is, the constellation size has become large enough that all antennas are in nearly constant use, saturating the network, so that adding more satellites does not lead to an increase in number of contacts taken and therefore added cost.\nFigure 3 shows that optimizing a ground station network for maximizing data downlink can significantly increase the total amount of data compared to one- and two-provider ground station networks without significantly increasing cost. For a 1 satellite mission the data-optimized ground station network is able to downlink over 300% more data over the entire life of the mission at only 25% increase cost compared to a one-provider solution, and able to downlink over 200% more data compared to a two-provider solution. For a 10 satellite constellation the optimized ground station network can still downlink nearly 300% and 200% more data than the one- and two-provider networks at only 5% increased cost. The explanation for this significant performance improvement is that the IP formulation is able to use the lowest-cost station in regions where there is overlapping station coverage (e.g. Europe), as well as add single stations in non-saturated regions (e.g. the Pacific Ocean) to increase total capacity. The runtime of the solution increases nearly linearly with constellation size with the optimal network for a 10-satellite constellation being found within 35 seconds on average."}, {"title": "4. CONCLUSIONS", "content": "This paper introduced and solved the problem of ground station provider and location selection for space mission designers. The problem was posed as an integer programming problem. Three different objective functions and fourteen different potential constraint functions were presented. These objective functions and constraint functions can be composed to conduct different types of design studies of satellite ground station networks. Two primary classes of optimization problems were analyzed mission cost minimization and data volume maximization. For mission cost minimization, the IP solution was shown to reduce total mission cost while simultaneously improving total data downlink. For data volume maximization problems, an IP-optimized ground station network was seen to increase the total data downlink by up to 300% compared to optimal single-provider networks and 200% compared to the optimal two provider networks. In future work, it would be desirable to consider a multi-objective optimization of ground networks so that instead of optimizing for a single design parameter, the network is optimized simultaneously for multiple considerations. Additionally, it would be desirable to investigate the unconstrained network design problem, where instead of selecting from a set of fixed locations, a network is optimized over any viable terrestrial location. Finally, the map gap objective and constraint introduce a large number of auxiliary variables and equations which has a significant negative performance impact, so finding an alternative formulation or solution approach is desireable."}, {"title": "APPENDICES", "content": "The software utilized to formulate the contact optimization problem and prepare this publication is available at https://github.com/sisl/ground-station-optimizer."}, {"title": "B. SURROGATE OPTIMIZATION ASSUMPTION ANALYSIS", "content": "This paper employs surrogate optimization approach where the ground station network is optimized over a short simulation window that is less than the entire mission duration. This is assumed to be a good proxy for optimizing over the entire mission and provides the benefit of reducing the problem size, thereby improving runtime performance. It also serves to address the challenge of accurately predicting contact windows over a potentially multi-year space missions by eliminating the need to simulate the entire mission duration. The surrogate optimization is appropriate so long as the distribution of contacts and contact properties of the surrogate problem is similar to that of longer propagations.\nTo test whether this was an appropriate assumption we randomly sampled 100 different active satellites with altitudes between 300 km and 1000km, propagated their orbits for varying time durations, computed the contact opportunities over each duration, then computed statistics on the distribution of contacts and contact properties. Figure 4 shows the results of this experiment. We can see that the mean gap duration starts to level out after 7 days of propagation and is near the steady-state value by 20 days of propagation. While there appears to be significant variation in the mean contact duration and average number of contacts per day, in absolute numbers the total range of variation is relatively small at 13 seconds and 10 contacts per day respectively. The cause for this variation needs to be further investigated, though may be artifacts of the propagation method or the sample size may not be large enough. From these results we recommend a simulation optimization window of at least 7 days, however 20 days is preferred when computationally possible."}, {"title": "C. MISSION COST MINIMIZATION PROBLEM", "content": "The mission cost minimization problem detailed in Section C aims to reduce the overall expenses of the ground station network throughout the mission's duration while ensuring that each satellite achieves a specified minimum data downlink requirement. This formulation incorporates constraints for station contact exclusion and satellite contact exclusion to maintain schedules that are physically realistic. Additionally, a constraint on the minimum contact duration is included to guarantee that each contact meets a required minimum length. The enforcement of a minimum data downlink per satellite is necessary to prevent degenerate solutions, where no ground stations or providers are selected, resulting in an optimal but non-functional zero-cost outcome. The design constants of this problem are $D_{min}$, the required per-satellite, minimum data downlink volume, $T_{period}$, the duration over which the minimum data downlink amount must be achieve, and $t_{step}$ the discrete increment over which the adherence to the minimum data downlink constraint is checked. The full optimization problem is"}, {"title": "D. DATA VOLUME MAXIMIZATION PROBLEM", "content": "The problem presented in Section D is designed to maximize the total volume of data downlinked throughout the mission period while imposing a constraint on the maximum allowable operational costs. This formulation includes station contact exclusion and satellite contact exclusion constraints to ensure that the scheduling remains physically feasible. Additionally, a constraint on the minimum contact duration is incorporated to ensure that each contact meets the necessary minimum time requirement. The maximum operational cost constraint is needed to prevent the optimizer from selecting all available providers and locations, which would maximize downlink opportunities but result in an impractical degenerate solution. The design parameters for this problem are $E_{max}$, which denotes the highest permissible monthly operational cost, and $t_{min}$, representing the minimum acceptable duration for each contact. The full problem is"}, {"title": "E. MAXIMUM COMMUNICATIONS GAP MINIMIZATION PROBLEM", "content": "The problem of minimizing the maximum communications gap is the final problem variation. This problem variation represents the design optimization study of a performance-oriented mission design that seeks to minimize communications gaps subject to station exclusion, satellite exclusion, and minimum contact duration constraints. A minimum satellite data downlink constraint also must be included otherwise the problem admits a degenerate solution where no contacts are scheduled. Additionally, a maximum monthly cost constraint needs to be introduced to prevent the degenerate solution of scheduling all contacts. The design constants of this problem are $C_{max}$, the maximum monthly cost, $D_{omin}$, the per-satellite, minimum data downlink amount, $T_{period}$, the duration over which the minimum data downlink amount must be achieve, and $t_{step}$ the discrete increment over which the adherence to the minimum data downlink constraint is checked. The full problem is"}]}