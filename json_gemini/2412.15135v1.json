{"title": "Probabilistic Strategy Logic with Degrees of Observability", "authors": ["Chunyan Mu", "Nima Motamed", "Natasha Alechina", "Brian Logan"], "abstract": "There has been considerable work on reasoning about the strategic ability of agents under imperfect information. However, existing logics such as Probabilistic Strategy Logic are unable to express properties relating to information transparency. Information transparency concerns the extent to which agents' actions and behaviours are observable by other agents. Reasoning about information transparency is useful in many domains including security, privacy, and decision-making. In this paper, we present a formal framework for reasoning about information transparency properties in stochastic multi-agent systems. We extend Probabilistic Strategy Logic with new observability operators that capture the degree of observability of temporal properties by agents. We show that the model checking problem for the resulting logic is decidable.", "sections": [{"title": "Introduction", "content": "Multi-Agent Systems (MASs) often involve agents that operate autonomously and interact with each other in dynamic and sometimes adversarial ways. Understanding the transparency and observability of these interactions is crucial for ensuring secure, efficient, and cooperative behaviour. In particular, information transparency and agent observability directly impact the security and privacy of MASs in which agents share information and where there is a risk of unintentional data leakage. Analysing information transparency helps identify potential sources of data leakage and design mechanisms to prevent it. The ability to control what agents can observe and the information they can induce is crucial for safeguarding sensitive data and preventing information leakage. In addition, the decision-making processes of agents are influenced by the information they possess about each other's behaviours and intentions. Quantified analysis of information transparency and agent observability plays a key role in determining the accuracy and effectiveness of decision-making within MASs.\nThis paper addresses the challenge of specifying, verifying and reasoning about information transparency properties within MASs. In particular, we specify observability properties from a standpoint of information transparency within"}, {"title": "Related Work", "content": "There has been a significant amount of work on logical specification and formal verification of MAS with imperfect information. Various methods have been developed to support the model checking of such logics, such as those focusing on epistemic logics for knowledge about the state of the system, e.g., [18,6,17,7,4,19]."}, {"title": "Partially Observable MAS", "content": "In this section, we introduce partially observable multi-agent systems which constitute the formal basis of our approach.\nWe write Dist(X) for the set of all discrete probability distributions over a set X, i.e., all functions \\( \\mu : X \\rightarrow [0,1] \\) s.t. \\( \\Sigma_{x \\in X} \\mu(x) = 1 \\). Given a set X, we denote by \\( 2^X \\) the power set of X, by X* the set of all finite words over X, and by \\( X^\\omega \\) the set of all infinite words over X.\nDefinition 1. A stochastic transition system (POMAS) is a tuple G = (Ag, S, Act, T), where\n*   Ag = {1, ..., n} is a finite set of agents;\n*   S is a finite set of states;"}, {"title": "The Logic oPSL", "content": "Strategy Logic [12] and Probabilistic Strategic Logic (PSL) [3] are formal languages designed for reasoning about multi-agent systems, where autonomous agents make strategic decisions in an environment. These logics focus on capturing the strategic interactions among agents in a multi-agent system, where"}, {"title": "Verification of oPSL", "content": "Since OPSL extends PSL, its model checking problem is undecidable, even when restricted to partially observable multi-agent systems with only a single agent [3,10].\nHowever, if we restrict our attention to memoryless strategies, the model checking problem becomes decidable.\nTheorem 1. Model checking OPSL sentences when the semantics is interpreted only with memoryless strategies, is decidable.\nWe describe the model checking procedure exhibiting decidability in the next section."}, {"title": "Model Checking Algorithm", "content": "In this section, we outline the model checking algorithm for OPSL when considering memoryless strategies. The complete procedure can be found in the supplementary material. The basis of the procedure lies in that for PSL [3], but the novel operators of OPSL present highly non-trivial challenges, as we will see.\nGiven a partially observable multi-agent system M, we will define first-order logic formulas \\( \\alpha_{\\varphi,s} \\) by induction over state formulas \\( \\varphi \\) and states s, written in the signature of real arithmetic. The construction will be such that for all OPSL sentences \\( \\varphi \\) and states s, we have that \\( \\alpha_{\\varphi,s} \\) holds in the theory of real arithmetic if and only if s IF \\( \\varphi \\). Using the decidability of this theory, we then get a model checking algorithm.\nThroughout we will often write \\( \\top_{cond} \\) for some metalogical condition cond, defined as \\( \\top_{cond} := \\top \\) if cond is true, and \\( \\top_{cond} := \\bot \\) otherwise. We will denote the equality symbol inside of the real arithmetic formula by \\( \\approx \\) to avoid any confusion.\nAtoms and Booleans Let \\( \\alpha_{p,s} := \\top_{p\\in L(s)} \\). We put \\( \\alpha_{\\varphi \\wedge \\psi,s} := \\alpha_{\\varphi,s} \\wedge \\alpha_{\\psi,s} \\) and \\( \\alpha_{\\neg\\varphi,s} := \\neg\\alpha_{\\varphi,s} \\).\nExistential quantifier Given the formula \\( \\exists x.\\varphi \\), we introduce variables \\( r_{x,\\theta,a} \\), intuitively encoding the probability that the strategy x performs action a upon observing \\( \\theta \\in \\Theta_s \\). Let \\( \\alpha_{\\exists x.\\varphi,s} := \\exists (r_{x,\\theta,a})_{\\theta\\in\\Theta_s,a\\in Act}[Dist_x \\wedge \\alpha_{\\varphi,s}] \\), where\n\\[ Dist_x := [\\Lambda_{\\theta \\in \\Theta_s, a \\in Act} r_{\\alpha,\\theta,a} \\ge 0] \\wedge [\\Lambda_{\\theta \\in \\Theta_s} \\Sigma_{a \\in Act} r_{\\alpha,\\theta,a} \\approx 1]. \\]\nThe formula Dist encodes that the variables \\( r_{x,\\theta,a} \\) give probability distributions for each \\( \\theta \\).\nFull observability formulas Given the formula \\( \\Oslash_k\\varphi \\), we write a formula that expresses that it is not the case that \\( s \\Vdash \\Oslash_k\\varphi \\). The reason for this double negation is that we can relatively easily express \\( s \\Vdash \\Oslash_k\\varphi \\): this holds iff there exist paths \\( \\pi,\\pi' \\in Path_M(s) \\) such that \\( \\pi \\Vdash \\varphi \\) and \\( \\pi' \\Vdash \\neg\\varphi \\), but \\( obs_k(\\pi) = obs_k(\\pi') \\). To check this, we will describe a rooted directed graph \\( G_{\\Oslash_k\\varphi} \\) inside of the real arithmetic formula, such that infinite walks through the graph (starting from the root) correspond precisely to pairs \\( \\pi,\\pi' \\in Path_M(s) \\). Furthermore, we will identify a set \\( For_{\\Oslash_k\\varphi} \\) of vertices in the graph, such that infinite walks \\( (\\pi,\\pi') \\) through the graph reach \\( For_{\\Oslash_k\\varphi} \\) infinitely often if and only if \\( \\pi \\Vdash \\varphi \\), \\( \\pi' \\Vdash \\neg\\varphi \\), and \\( obs_k(\\pi) = obs_k(\\pi') \\). Given this, all we then need to express that \\( s \\Vdash \\neg\\Oslash_k\\varphi \\) is that there exists an infinite walk through the graph that hits \\( For_{\\Oslash_k\\varphi} \\) infinitely often.\nNote that  can be considered to be an LTL formula over atomic propositions W = \\( 2^{Max(\\varphi)} \\), where Max(\\varphi) is the set of maximal state subformulas of \\( \\varphi \\). So we can construct nondeterministic B\u00fcchi automata \\( \\mathcal{A}_{\\Oslash_k\\varphi} = (Q_\\varphi, D_\\varphi, q_{\\Oslash_k\\varphi}, F_\\varphi) \\) and \\( \\mathcal{A}_{\\neg\\Oslash_k\\varphi} = (Q_{\\neg\\varphi}, D_{\\neg\\varphi}, q^*_{\\varphi}, F_{\\neg\\varphi}) \\) over alphabet W, recognising those w \\( \\in W^{\\omega} \\) such that w \\( \\Vdash_{LTL} \\varphi \\) and w \\( \\Vdash_{LTL} \\neg\\varphi \\) respectively. We finally define \\( \\alpha_{k,s} \\) by stating that we cannot reach vertices in \\( For_{\\Oslash_k\\varphi} \\) from the root that go back to"}, {"title": "Complexity", "content": "Theorem 2. Model checking OPSL can be done in space triple exponential with respect to the OPSL sentence, and double exponential with respect to the partially observable multi-agent system."}, {"title": "Conclusions and Future Work", "content": "This paper provides a framework for expressing and reasoning about observability within MAS, along with the capability to quantify the degree of observability under specified strategies. The framework contributes to formal analysis and verification in multi-agent systems, especially for properties relating to information security, privacy, and trustworthiness. In particular, OPSL enables a rigorous analysis of agent observability and information transparency, allowing the assessment of how much information about system behaviours is available to different agents. This is crucial for identifying potential vulnerabilities and understanding the security implications of information exposure.\nIn considering future directions, there are several areas that would be interesting to explore. First, the interconnections and synergies between OPSL and other logics, such as epistemic logics, would augment the framework's expressive capabilities. Another possible line of work involves extending oPSL to include additional aspects of multi-agent systems, such as hierarchical structures or more complex forms of actions. Adapting OPSL to navigate dynamic and evolving environments, where agents' strategies may undergo temporal transformations, presents another area for investigation, as does investigating the application of the framework in the domains of AI safety and responsibility. Finally, incorporating game-theoretic approaches may allow balancing between utility and security."}, {"title": "The Model Checking Procedure", "content": "Take a partially observable multiagent system M = ((Ag, S, Act, T), Ap, L, {obsi}i\u2208Ag), and an OPSL sentence \\( \\varphi \\). Note that since we are considering the semantics of oPSL with memoryless strategies, we do not need to consider history formulas interpreted on histories, but instead on individual states. For this reason, we will throughout the description of the model checking procedure refer to history formulas as state formulas.\nWe will define first-order logic (FOL) formulas \\( \\alpha_{\\varphi,s} \\) by induction over state formulas \\( \\varphi \\) and states s, written in the signature of real arithmetic. The construction will be such that for all OPSL sentences \\( \\varphi \\) and states s, \\( \\alpha_{\\varphi,s} \\) holds in the theory of real arithmetic if and only if s \\( \\Vdash \\varphi \\). Using the decidability of the theory of real arithmetic, we then get a model checking algorithm.\nThroughout this text we will often write \\( \\top_{cond} \\) for some metalogical condition cond, defined as \\( \\top_{cond} := \\top \\) if cond is true, and \\( \\top_{cond} := \\bot \\) otherwise. We will denote the equality symbol inside of the real arithmetic formula by \\( \\approx \\) to avoid any confusion.\nAlso throughout this construction, we will often in our explanations ignore the presence of the valuation in the semantics, and write e.g. s \\( \\Vdash \\varphi \\) for non-sentences \\( \\varphi \\). We assume the valuation to still be there in the background, but it usually does not add much to the intuitions and explanations of the constructions, so we leave it out for brevity. Similarly, we will often write \\( \\pi \\Vdash \\varphi \\) instead of \\( \\pi, \\nu, 0 \\Vdash \\varphi \\) for path formulas.\nWe will only speak of the complexity of the construction after we have fully described it.\nAtoms and Booleans Let \\( \\alpha_{p,s} := \\top_{p\\in L(s)} \\). We put \\( \\alpha_{\\varphi \\wedge \\psi,s} := \\alpha_{\\varphi,s} \\wedge \\alpha_{\\psi,s} \\) and \\( \\alpha_{\\neg\\varphi,s} := \\neg\\alpha_{\\varphi,s} \\).\nExistential quantifier Given the formula \\( \\exists x.\\varphi \\), we introduce variables \\( r_{x,\\theta,\\alpha} \\), intuitively encoding the probability that the strategy x performs action a upon observing \\( \\theta \\in \\Theta_s \\). We let\n\\[ \\alpha_{\\exists x.\\varphi,s} := \\exists (r_{x,\\theta,\\alpha})_{\\theta\\in\\Theta_s,a\\in Act}[Dist_x \\wedge \\alpha_{\\varphi,s}], \\]\nwhere\n\\[ Dist_x := [\\Lambda_{\\theta \\in \\Theta_s, \\alpha \\in Act} r_{\\alpha,\\theta,\\alpha} \\ge 0] \\wedge [\\Lambda_{\\theta \\in \\Theta_s} \\Sigma_{\\alpha \\in Act} r_{\\alpha,\\theta,\\alpha} \\approx 1]. \\]\nThe formula Dist encodes that the variables \\( r_{x,\\theta,\\alpha} \\) give probability distributions for each \\( \\theta \\)."}]}