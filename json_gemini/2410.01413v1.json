{"title": "IMPROVING FUZZY RULE CLASSIFIER WITH BRAIN STORM OPTIMIZATION AND RULE MODIFICATION", "authors": ["Yan Huang", "Wei Liu", "Xiaogang Zang"], "abstract": "The expanding complexity and dimensionality in the search space can adversely affect inductive learning in fuzzy rule classifiers, thus impacting the scalability and accuracy of fuzzy systems. This research specifically addresses the challenge of diabetic classification by employing the Brain Storm Optimization (BSO) algorithm to propose a novel fuzzy system that redefines rule generation for this context. An exponential model is integrated into the standard BSO algorithm to enhance rule derivation, tailored specifically for diabetes-related data. The innovative fuzzy system is then applied to classification tasks involving diabetic datasets, demonstrating a substantial improvement in classification accuracy, as evidenced by our experiments.", "sections": [{"title": "1 Introduction", "content": "Computational intelligence, such as neural networks, decision trees, and fuzzy logic, is increasingly employed for complex problem-solving (Akbal, 2018).Fuzzy rule-based classification systems are particularly valuable in machine learning, offering interpretable solutions in various domains, including security, image analysis, and medical diagnostics (Zhu et al., 2023, 2024). However, these classifiers often struggle with high-dimensionality or multiple variables, leading to an exponential increase in the rule search space and impacting system performance and efficiency (Tan et al., 2012). In our study, we develop a fuzzy logic-based expert system using 'if-then' rules and membership functions to establish a core rule base (Varniab et al., 2019). The interaction between membership functions and rule structures is crucial for the concurrent development of these systems (Tsai and Chen, 2018), creating a fuzzy connection between inputs and outputs (Shunmugapriya and Kanmani, 2017; Shi et al., 2022). Generating these rules from training data in a high-dimensional space presents a significant search challenge within this vast space. Gene selection algorithms, such as those employing simplified swarm optimization combined with multi-filter ensemble techniques(Lai and Huang, 2021), have demonstrated effective strategies for navigating the complexity of high-dimensional search spaces (Tuba et al., 2019). Various methods exist for developing rule-based classifications in fuzzy logic systems, ranging from simple heuristics to complex techniques like fuzzy neural networks, cluster analysis, and evolutionary algorithms (Kim et al., 2018; Castro Gertrudes et al., 2019; Liska and Melsheimer, 1994). Heuristic approaches inspired by natural phenomena, such as swarm behavior optimization, algorithmic cooling simulations, luminescent insect-based optimization, and bee foraging-inspired techniques, are well-recognized (Amponsah et al., 2021)(MAN et al., 2017; Shill et al., 2019; Ilango et al., 2019). Parameter adjustments in these algorithms are crucial for influencing optimization convergence speed (Binu and Selvi, 2015). The Brain Storm Optimization (BSO) algorithm, while effective in fuzzy systems for rule creation, membership function formulation, and knowledge extraction, faces challenges such as low accuracy and slow convergence in scenarios with expanding spatial dimensions or variables (Zen et al., 2017)(Sovatzidi and Iakovidis, 2022). This paper addresses these challenges, particularly in large datasets, by introducing a refined BSO approach tailored for such complexities. Our fuzzy classification system is developed in two phases: initially setting membership functions using a uniform distribution, then enhancing BSO with an exponential average approach. This strategy includes constraints on rule length, number, and class distribution, enabling efficient inference rule formulation for data classification, significantly reducing the"}, {"title": "2 Analyzing the Challenges", "content": "The rule base is vital in a fuzzy system, containing critical rules for data categorization. Two key aspects need attention when formulating these rules: rule acquisition and rule optimization strategy. Rule acquisition involves extracting precise rules from large datasets to meet the fuzzy system's requirements. Rule optimization strategy balances rule length and quantity, aiming for interpretability and accuracy without overburdening computations. Fuzzy systems are preferred in classification for their adaptability and lack of a learning phase, but designing them becomes challenging as the search space grows more complex and dimensional. This article proposes a new approach to address these challenges."}, {"title": "3 Innovations in Data Classification: Brain Storm Enhanced Fuzzy System", "content": null}, {"title": "3.1 Membership Functions Based on Uniform Distribution", "content": "In this subsection, we propose a novel method for developing fuzzy and non-fuzzy membership functions using uniform distribution. The choice of uniform distribution is based on its flexibility and adaptability, allowing for efficient function design without being constrained by specific data distribution positions. The linear-scaled membership mechanism is crucial for assigning variable association degrees to data points, essential for rule formulation. Establishing a membership function involves selecting the function type, determining the number of functions per attribute, and defining each function's boundaries.\nThe input database can be represented as:\n$\\D=X_{ij},0<i,j<m,n$  (1)\nWhere X denotes the elements in the database, m is the total number of attributes, and n represents the number of data objects.\nIn the rule base, each rule corresponds to a specific attribute cluster, denoted as Ai, where i identifies and distinguishes each rule.\nAccording to the terminology used in this paper, p represents the number of membership functions assigned to each attribute in a rule, indicating the total membership functions per attribute. Each function is defined by three interval parameters: a, the lower limit marking the start and affecting the orientation; b,the midpoint, representing the peak with the highest membership degree; and c,the upper limit, concluding the function and influencing its shape and position.\nEq. 2 in our study innovatively illustrates how the attribute vector is used in the membership function to determine the value of p.\n$\\A_i \\rightarrow \\mu_{ik} ; 0<k<p$   (2)\nwhere $\\rightarrow$ indicates a correspondence relationship, with $\\mu_{ik}$ representing the k-th membership function for the i-th attribute.\nIn this section, each membership function, characterized by parameters a, b and c,divides the attribute vector forA\u00a1 into p intervals, intervals, each further segmented into smaller intervals. The boundary parameters\u2014minimum, central, and maximum of these segments are computed using the methodologies described in Eq.3 and Eq.4.\n$\\H_{ik}=f (X_i;a,b,c)$ (3)\n$\\f (X_i;a,b,c) =max \\left(\\frac{(max (X_i)+min (X_i))}{2} \\right)$ (4)"}, {"title": "3.2 Formulating and Refining Rules via Storm Optimization Technique", "content": "Rule generation and refinement are crucial in fuzzy systems, employing an enhanced BSO algorithm integrated with an Exponential Weighted Moving Average (EWMA) model [18]. This algorithm generates random rules and selects the most effective ones based on rule length, quantity, and class distribution."}, {"title": "3.2.1 Overall Framework", "content": null}, {"title": "3.2.2 Evaluation Metric for Algorithm Effectiveness", "content": "In every proposed solution, assessing its effectiveness is critical. We introduce a novel fitness metric to appraise solution effectiveness, focusing on optimizing rule number and distribution. This fitness function considers three key factors: rule length, distribution and magnitude, and rule alignment within the database. Methods are designed to balance these factors and, through database input and rule effectiveness evaluation, improve the rule set.\nThe fitness function in this paper adopts a maximization approach, focusing on rule length, distribution and magnitude, and alignment within the database. The calculation method is as follows:\n$\\G=\\alpha g_1+\\Beta g_2+\\gamma g_3$ (5)\nWhere \u03b1, \u03b2 and y serve as weighting constants for the objective functions g\u2081,g2 and g3. The rule length is evaluated by its summation, isolated from rule count and attributes, and normalized to a 0 to 1 scale. If g\u2081 close to 1 indicates a short, less complex rule. The primary goal is to maximize this target by minimizing rule length, calculated as follows:\n$\\g_1=1-\\frac{\\sum_{i=1}^r m_i}{r*m}$ (6)\nwhere mi indicative of each rule's span and r symbolizes the aggregate count of such rules.\nAnother primary goal is to establish correlations between the rules and the database, assessing by how often each rule appears. A membership function categorizes the database for easy rule comparison. Effective rules are those with frequent matches. To quantify this, we calculate the ratio of the number of rules to total data objects, normalizing in the range of 0 to 1, as follows:\n$g_2=\\frac{\\sum_{i=1}^r M (l_i,D)}{1*n}$ (7)\nwhere M (li,D) signifies the frequency of occurrences of rule li in correlation with the"}, {"title": "3.2.3 Process of Brain Storm Optimization Algorithm", "content": "The traditional BSO algorithm has been enhanced by integrating the Exponential Moving Average (EWMA) [18], aimed at improving solution exploration within the search space. This refined algorithm updates solutions each iteration, effectively utilizing global information to enrich evolutionary diversity.\nIn accordance with Fig.3, we elaborate on the operational procedure of the algorithm:\nInitialization: We randomly initialize pp strategies in the exploration area Ii=[Ii1,Ii2,\u2026,Iiq] where i = 1,2...,q, and each \"scheme\" represents a potential solution.\nClassification: We apply membership functions from Eq.2 and Eq.3 to classify data into corresponding classes.\nEvaluation: According to Eq. 15, Eq. 16, and Eq. 17 to assess classification results.\nGeneration of New Scheme: A new scheme is formulated using strategies from Eq. 3 to Eq. 5.\nBSO Operation: The BSO algorithm refines the fuzzy system, creating a new configuration.\nNew scheme generated: Employing the BSO algorithm to enhance the fuzzy system.\nGeneration of New \"q\": New candidate solutions It+1, are generated, adjusted by scaling factor v and noise term N (\u03bc,\u03c3) as per Eq. 12 and Eq. 13.\nComparison and Replacement: New solutions are compared with existing ones using the weighted average method from Eq. 14 for possible replacement.\nIs termination information encountered: The process checks if termination criteria are met based on predefined settings.\nThe Best Solution: The algorithm selects the optimal solution based on the highest performance metrics evaluated.\nThe candidate schemes are updated based on fitness values. For the schemes detailed in Section 3.2.1, updates incorporate the cluster's central point plus a random variable. In Sections 3.2.2 and 3.2.3, updates use the average central points of clusters. Remaining schemes are adapted using the method in Eq. 9. Specifically, for the schemes in Sections 3.2.2 and 3.2.3, the mean of central points is calculated and used to adjust the scheme to better align with data distribution. Other methods are iteratively updated as outlined in Eq.9, integrating stochastic elements to enhance diversity.\n$\\I_{t+1}=I_t+\\xi N (\\mu,\\sigma)$ (9)\nwhere It+1 denotes the random variable at time step t+1, t is the time step, $\\xi$ cts as the scaling coefficient for the random variable, and N (\u03bc,\u03c3) represents a normal distribution with mean \u00b5 and standard deviation \u03c3.\n$\\xi=S*logsig(\\frac{NC_{max}}{K})$ (10)\nwhere s represents a random variable ranging from 0 to 1. NCmax indicates the maximum iteration count, and NC specifies the current iteration. The parameter K adjusts the slope of the logsig() function.\n$E_{t+1}=\\epsilon *I_t+ (1-\\epsilon) E_t$ (11)\nIn this research, we incorporate the Exponential Weighted Moving Average (EWMA) model into our brainstorming-inspired optimization algorithm to improve search efficiency. The mathematical"}, {"title": "3.2.4 Rule Weight", "content": "In a fuzzy classifier system, assigning weights to rules is crucial for optimizing system performance. With r rules, rules, each varying in fuzziness or uncertainty when faced with data, effective allocation of weights is essential. We use two criteria for this: the degree of compliance between rules and the database, and the length of the rules. The formula for assigning weights to rules is:\n$W (R_{opt}) =\\frac{1}{2}* (g_1+g_2)$ (14)\nwhere Ropt is the current rule, g\u2081 is the rule length obtained from Eq. 6, and g2 is the rule-database match obtained from Eq. 7."}, {"title": "4 Experiments", "content": "Here is a concise process for data classification in fuzzy systems. After defining membership functions and rules, input data undergoes fuzzification to convert it into fuzzy values based on the membership function definitions. Non-fuzzy computations then calculate a fuzzy evaluation value, representing the degree of membership in specific fuzzy sets, which is used to assign a class label to the input data.\nAligned with earlier concepts, this section evaluates the performance of the fuzzy system introduced in this paper for data classification. The assessment includes experimental trials and a comprehensive analysis of the results."}, {"title": "4.1 Experimental Settings", "content": "Dataset: The experiment was conducted using the \"Pima Indians Diabetes (PID)\" dataset from the UCI Machine Learning Repository (Meneganti et al., 1998). This dataset consists of 768 samples, each described by 8 medical attributes related to the diagnosis of diabetes in Pima Indian women aged 21 and older. The attributes include: (1) number of pregnancies, (2) plasma glucose concentration (after a 2-hour oral glucose tolerance test), (3) diastolic blood pressure (mm Hg), (4) triceps skin-fold thickness (mm), (5) 2-hour serum insulin (mu U/ml), (6) body mass index (BMI), (7) diabetes pedigree function, and (8) age. The target variable is binary, indicating whether an individual has been diagnosed with diabetes (1) or not (0). This dataset is widely recognized in the research community for benchmarking classification algorithms due to its moderate complexity and the presence of both continuous and categorical variables. It is commonly used in machine learning tasks to assess the performance of various classifiers, including those related to fuzzy classification systems.\nEvaluation Metrics: In comparing the proposed fuzzy system in this paper with a pre-existing system, three key metrics are used: sensitivity, specificity, and accuracy. Below, we define each of these metrics specifically:\n$Sensitivity=\\frac{TP}{TP+FN}$ (15)\n$Specificity=\\frac{TN}{TN+FP}$ (16)\n$Accuracy=\\frac{TP+TN}{TN+FP+TP+FN}$ (17)\n\"Correct\" (TP) indicates correctly identified instances, \"False Positive\" (FP) represents incorrect identifications, \"True Negative\" (TN) signifies correct rejections, and \"False Negative\" (FN) corresponds to incorrect rejections.\nThe Linux operating system environment with 32 GB of memory was utilized, and initial parameters were set based on empirical knowledge. Using the Brain Storm Optimization algorithm, a set of solutions was generated, and the performance of the current parameter combination was evaluated. Iterative adjustments were made to the values of e and K based on performance evaluation until the best parameter combination was chosen. The performance of our proposed fuzzy system was compared with the AGFS algorithm, a well-established benchmark in fuzzy rule design known for its adaptive genetic algorithm. This comparison highlighted the"}, {"title": "4.2 Qualitative Assessment", "content": "Table 2 displays sample rules for the PID dataset, generated using the enhanced Brain Storm Optimization algorithm, crucial for subsequent classification. Our study evaluates the effectiveness of a membership function derived from a uniform distribution in generating and optimizing fuzzy rules, vital in scenarios with large datasets. Traditional approaches do not address the challenge of increased convergence speed when the search space or number of variables expand. Fig. 4 shows that varying e and K values do not significantly affect classification accuracy, mainly influenced by rule generation. The uniform distribution effectively mitigates position impact, significantly improving fuzzy system accuracy."}, {"title": "4.3 QUANTITATIVE EVALUATION", "content": "In this section, we quantitatively evaluate the proposed fuzzy system. We start with an in-depth analysis of the system's performance by varying the values of the e and K constants. Fig.4(1) and 4(2) show how different values of e and K influence sensitivity, specificity, and accuracy, considering an 80% proportion of the training set for PID. The results unequivocally demonstrate that the classification performance of the fuzzy system remains stable regardless of variations in e and K. This stability indicates the system's good robustness and adaptability, maintaining high performance under various conditions with strong generalization capabilities.\nConvergence speed is crucial for assessing algorithmic performance. This article compares our algorithm's convergence speed with the AGFS algorithm. The x-axis represents the iteration count during training, implying an increase in the volume of training data. The y-axis measures convergence"}, {"title": "5 CONCLUSION", "content": "To tackle the challenge of diminished scalability and accuracy in fuzzy systems when confronted with the rapid expansion of dimensionality or variables, this paper introduces a modified approach to the conventional rule definition process specifically for diabetic classification. It presents a groundbreaking method for generating fuzzy system rules through an enhanced Brain Storm optimization algorithm, incorporating an exponential model to better address the nuances of diabetes data. For membership function design, a straightforward technique based on uniform distribution is adopted. The fuzzy scores generated by this system are utilized for the classification of diabetic samples, demonstrating superior performance compared to the existing AGFS approach. Future research will aim to further enhance the system's impact on diabetic classification by replacing the distribution-based method with a specifically designed optimization procedure for the membership function."}]}