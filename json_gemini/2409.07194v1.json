{"title": "Cyber Deception: State of the art, Trends, and Open challenges", "authors": ["Pedro Beltr\u00e1n L\u00f3pez", "Manuel Gil P\u00e9rez", "Pantaleone Nespoli"], "abstract": "The growing interest in cybersecurity has significantly increased articles designing and implementing various Cyber Deception (CYDEC) mechanisms. This trend reflects the urgent need for new strategies to address cyber threats effectively. Since its emergence, CYDEC has established itself as an innovative defense against attackers, thanks to its proactive and reactive capabilities, finding applications in numerous real-life scenarios. Despite the considerable work devoted to CYDEC, the literature still presents significant gaps. In particular, there has not been (i) a comprehensive analysis of the main components characterizing CYDEC, (ii) a generic classification covering all types of solutions, nor (iii) a survey of the current state of the literature in various contexts. This article aims to fill these gaps through a detailed review of the main features that comprise CYDEC, developing a comprehensive classification taxonomy. In addition, the different frameworks used to generate CYDEC are reviewed, presenting a more comprehensive one. Existing solutions in the literature using CYDEC, both without Artificial Intelligence (AI) and with AI, are studied and compared. Finally, the most salient trends of the current state of the art are discussed, offering a list of pending challenges for future research.", "sections": [{"title": "I. INTRODUCTION", "content": "EMERGING in the contemporary digital age, organizations of all sectors face a growing threat of cyberattacks that compromise the confidentiality, integrity and availability of their data and systems [1], [2]. These attacks, ranging from the theft of personal information to the sabotage of critical infrastructures [3], have become increasingly sophisticated and difficult to detect and respond. In this context, cybersecurity has become a strategic priority for businesses and governments [4]. Nevertheless, traditional security measures are often insufficient to protect against Advanced Persistent Threats (APT) [5] or zero-day attacks [6]. Because of this critical factor, one could say there is a need of novel and effective defense strategies capable of preempting these attacks and mitigating them more effectively [7]. This is where CYDEC comes into play, an innovative strategy redefining the cybersecurity landscape.\nCYDEC [8] is based on the principle of deception [9], a strategy used in various forms of conflict throughout history, from warfare to espionage. This form of defense makes it possible to fight attacks preemptively and reactively [10] to mitigate them efficiently and without consequence. In doing so, it not only diverts the attacker's attention but also gathers valuable intelligence on their methods, tools, and targets, creating a context of continuous learning [11].\nThat is, CYDEC offers multiple advantages. In particular, it facilitates the detection of threats that conventional measures may miss by collecting information obtained from deception [12]. Any interaction with these decoys is automatically identified as suspicious, enabling faster and more accurate detection. In addition, by interacting with the decoys, attackers reveal Tactics, Techniques, and Procedures (TTPs) [13] that can be used to strengthen defenses and anticipate future attacks. Understanding and predicting attacker behavior allows organizations to adjust their security strategies proactively [14]. CYDEC also wears down and deters attackers, creating a more complex and challenging environment, increasing operational costs, and decreasing the likelihood of success [15]. Finally, it is a cost-effective solution, as creating and maintaining decoys is often less expensive than protecting every asset in an organization against all possible threats [16].\nAlthough the CYDEC has been an integral part of our defenses for some time, it is in recent years that its value has been significantly enhanced due to the numerous benefits it offers. As depicted in Fig. 1, since 2018, articles in the literature have been on the rise due to increased attention from both industry and academia.\nA. Existing CYDEC survey\nTherefore, studies have been conducted that compile and analyze existing research on CYDEC, as shown in Table I. These surveys have been analyzed because of their great impact on the scientific community, since previous surveys are too old and do not include the main characteristics analyzed. The characteristics analyzed for each of the surveys are as follows: Fundamentals (the survey describes the fundamental aspects of CYDEC), Taxonomy Proposal (the survey proposes its own taxonomy), Framework (the survey analyzes articles based on frameworks), Attack (the survey analyzes articles based on attack strategy), AI (the survey analyzes deception mechanisms using different AI modalities), Technological Readiness Level (TRL) (the survey analyzes the TRL of the deception mechanisms analyzed) and Open challenges (the survey presents open challenges)."}, {"title": "B. Research questions", "content": "This article addresses the identified gaps by analyzing the different existing frameworks on CYDEC, and proposes a conceptual framework that incorporates AI and the different phases of defense. In addition, a robust and comprehensive taxonomy, capable of comprehensively classifying each mechanism of CYDEC, is also presented. In addition, the current articles on CYDEC in the literature and the different mechanisms of AI existing in this field are analyzed using different metrics that no other survey has used such as TRL, Attack, Dimensions or Phases, among others.\nWithin this context, and adhering to the storyline outlined in Section I, it becomes essential to address the following Research Questions (RQ):\nRQ1: What are the fundamentals aspects of CYDEC?\nThis question delves into the core principles and foundational concepts of CYDEC. It aims to uncover the essential elements that make deception a viable and effective strategy.\nRQ2: What CYDEC taxonomies exist? By examining existing taxonomies, this question assesses their effectiveness in categorizing various deception mechanisms. It looks into how these taxonomies help organize and understand the diverse strategies employed in CYDEC.\nRQ3: What are the relevant CYDEC frameworks? This inquiry surveys the landscape of CYDEC frameworks, identifying their key characteristics and methodologies. It seeks to highlight the distinct features and structures that define these frameworks.\nRQ4: What are the characteristics of the CYDEC mechanisms? This question investigates the essential traits of highly impactful CYDEC mechanisms used in defense and offense. It focuses on these mechanisms' operational aspects and effectiveness in various scenarios.\nRQ5: What are the characteristics of the AI mechanisms in CYDEC? Exploring the integration of AI in CYDEC, this question identifies the primary features and capabilities of AI-driven techniques. It looks at the role of AI in enhancing deception strategies and its impact.\nRQ6: What trends and open challenges have emerged in CYDEC? This inquiry aims to uncover current trends and emerging challenges within the field of CYDEC. It examines recent advancements and highlights the unresolved issues that present future research and innovation opportunities."}, {"title": "C. Contributions", "content": "Fig. 2 shows where and how the above questions are addressed in this document as a table of contents. Specifically, Section II discusses the fundamentals of CYDEC with emphasis on the five fundamental questions (what, where, why, when, and how). Section III reviews the main taxonomies in the literature, identifying their advantages and disadvantages. Subsequently, our taxonomy is presented, capable of comprehensively classifying any CYDEC mechanism. Section IV discusses the CYDEC frameworks identified in the taxonomy, emphasizing the phases they cover, whether they use AI, the dimensions, or the application scenario. In addition, Section IV presents our CYDEC framework capable of preventing, detecting, reacting, and generating forensic analysis with the help of AI. Next, Section VI describes and compares the main CYDEC solutions found in the state-of-the-art, analyzing their main features identified in Section V. Subsequently, Section VI-C performs the same analysis of the previous section but pays special attention to the use of AI in the CYDEC field. Section VII presents a set of future research challenges. Finally, Section VIII provides an overview of the conclusions drawn from the work."}, {"title": "II. BACKGROUND", "content": "This section provides a comprehensive definition of CYDEC as recognized by the scientific community. It aims to thoroughly specify the primary principles of CYDEC to address RQ1 (refer to Fig. 2). To fully elucidate CYDEC, five fundamental inquires are addressed throughout this section: what CYDEC is, where CYDEC is used, why CYDEC is used, when CYDEC is used, and how CYDEC is used.\nA. What?\nCYDEC [25], also known as active defense, is an advanced computer security strategy that uses different mechanisms to make a specific target believe something it is not. Gene Spafford first introduced this concept in 1989 [26]. Gene referred to an active defense to identify attacks that have already begun, identify the attackers' techniques, and provide them with false data. It is worth remarking CYDEC is a strategy that goes beyond simply using decoys. It is based on various techniques and tactics designed to implement dynamic deception [27], aiming to confuse and deceive attackers in various environments and situations. This strategy focuses on creating a realistic environment that is carefully manipulated to disorient adversaries and cause them to make poor decisions.\nConcretely, CYDEC can be used for both attack and defense [28]. In the case of defense, defenders can carry out actions that deceive the attacker to mitigate and even learn from his/her actions. In the case of an attack, attackers can use deception to improve stealth when entering a system or make the defender focus on some hidden point in the system. In essence, CYDEC is based on the premise that defenders and attackers can improve their security posture not only by fortifying their systems and networks but also by actively manipulating the digital environment to confuse, disorient, and frustrate [29], [30].\nB. Where?\nThe versatility of CYDEC, coupled with its adaptability, renders it applicable across a spectrum of defensive and offensive scenarios [31]. In defensive operations, CYDEC can be a robust shield against malicious actors, employing deceptive tactics to mislead and thwart adversaries' advances. Whether defending critical infrastructures or safeguarding sensitive information, the fluidity of deception within CYDEC enables swift adjustment to evolving threats."}, {"title": "C. Why?", "content": "CYDEC has emerged as a cornerstone in organizations' cyber defense toolkit, and this prominence is justified for several key reasons that reflect its relevance and effectiveness in today's cybersecurity landscape [32], [33]. These reasons range from its ability to confuse and disorient adversaries to its ability to improve early threat detection, reduce the risk of successful attacks, and strengthen an organization's overall security posture. In addition, CYDEC's flexibility to adapt to diverse environments and scenarios, as well as its ability to generate intelligence on adversaries' Tactics, Techniques, and Procedures (TTP), are aspects that underscore its strategic importance in protecting critical assets and mitigating threats. The following are some of the advantages of using CYDEC:\nMaking it more difficult for attackers: CYDEC introduces uncertainty and confusion into the cyber environment, making the attackers' task more difficult [34]. Flooding the digital space with lures and traps increases complexity for adversaries, causing them to waste time and resources on fake assets instead of focusing on the organization's real systems and data.\nImprove early detection: By placing digital decoys at strategic locations in the network, CYDEC facilitates early detection of malicious activity. These false signals act as early warning signs, allowing security teams to quickly identify and respond to intrusion attempts before they can cause significant damage [35].\nReduce attack surface: By implementing CYDEC measures, organizations can effectively reduce their attack surface, decreasing the opportunities for attackers to find and exploit vulnerabilities in their systems and networks [36]. This limits the adversary's chances of success by reducing the risk and thus the impact of the attack.\nDiscourage adversaries: The presence of CYDEC elements can deter cyber adversaries by leading them to believe that the environment is well protected and that their activities can be easily detected and thwarted. This heightened risk perception can lead attackers to seek easier and less protected targets rather than confront robust defenses [37].\nGather Threat Intelligence: Cyber detection protects against cyberattacks and provides a unique opportunity to gather intelligence on adversaries' TTP [38]. By observing how attackers interact with lures and traps, security teams can gain valuable information to improve their defense strategies further and anticipate future attacks by reducing the impact of 0-days or detecting behaviors characteristic of these attacks."}, {"title": "D. When?", "content": "In the attack context, CYDEC offers tools and methodologies that enable attackers to enhance their stealth strategies and deter adversary defenses. These strategies can be found throughout the lifecycle of an attack defined by attackers knowledge bases such as MITRE ATT&CK [39], from the reconnaissance and entry phase through execution to maintaining access and data exfiltration. CYDEC facilitates both the identification of vulnerabilities in systems and networks and the planning and execution of effective attacks, making it a valuable tool for advanced threat actors and offensive operations teams.\nOn the defensive side, CYDEC provides resources to harden infrastructures and protect them against intrusions and exploits and can be used for prevention, detection, reaction, or forensic analysis. Using CYDEC as a defensive approach provides enhanced defense capabilities at any part of the defense lifecycle [40].\nIn addition, the versatility of CYDEC allows it to be applied in both real-time situations, e.g., to respond immediately to emerging threats, and in non-real-time contexts, e.g., to perform retrospective analysis and continuously improve cybersecurity. This means that organizations can use CYDEC not only as a reactive tool to address current threats but also as a strategic platform to strengthen their defenses and anticipate future challenges in the cybersecurity landscape."}, {"title": "E. How?", "content": "Effective implementation of CYDEC involves combining techniques and tools designed to deceive cyber adversaries and strengthen an organization's defenses [41]. There are various ways to carry out deception actions depending on whether to attack or defend. This discipline encompasses a variety of creative approaches to deceive adversaries, confusing and discouraging them from their malicious objectives. While there is no single way to conduct CYDEC, its successful implementation involves thoroughly understanding the tactics and techniques available and the organization's specific infrastructure and environment. In addition to this knowledge, numerous tools can simplify the way CYDEC techniques are achieved [42], as will be shown in Sections III-D and III-E."}, {"title": "III. TAXONOMY", "content": "Currently, several taxonomies have been proposed to classify the different CYDEC techniques according to specific criteria, both in terms of attack [43] and defense [19], [44], [45]. However, none of these classifications has considered such important aspects as the dimension in which deception is employed or whether it is used to attack or defend. Moreover, another crucial point that differentiates our taxonomy from previous proposals lies in classifying deception according to the phase in which they are employed and include more CYDEC techniques. Considering the limitations of previous taxonomies, in Fig. 3 a detailed taxonomy is presented. With this proposed taxonomy, the research question RQ2 (refer to Fig. 2) is solved with this taxonomy, which focused on whether a complete taxonomy correctly classifies CYDEC mechanisms and, if not, propose one to classify them.\nThis taxonomy focuses on accurately characterizing the CYDEC technique used in each case. Moreover, it is important to note that we have divided the proposed taxonomy into five components, i.e., Strategy, Dimension, Phase, Tactic, and Technique. With these components, we can characterize any deception mechanism present in the current literature. Furthermore, the main characteristics of each deception mechanism used can be described and specified in great detail."}, {"title": "A. Strategy", "content": "The first step in characterizing the technique is identifying whether it is a defensive or an attacking action.\nAttack [46]: Attack by deception is a sophisticated strategy cybercriminals employ to compromise systems and gain unauthorized access to sensitive information. This strategy involves manipulating and disseminating false information, impersonating, creating digital decoys, and distributing disguised malware, among others. Attacks of this type can be particularly difficult to detect and mitigate, as the deception techniques are designed to confuse and evade conventional defenses. For example, an attacker could inject false information into a network or device or perform a Man-In-The-Middle (MITM) attack to eavesdrop on traffic between two victims.\nDefense [47]: Defense by deception is a proactive or reactive strategy to protect against cyber threats. This tactic involves implementing security measures designed to confuse and disorient attackers, making it more difficult for them to infiltrate systems or steal data. These measures often include the use of decoys, honeypots, and false data to mislead attackers, diverting their efforts away from valuable assets and towards traps that waste their time and resources. By creating an environment where attackers cannot easily distinguish between real and fake targets, defense by deception can effectively reduce the likelihood of successful breaches and increase the chances of detecting malicious activities early."}, {"title": "B. Dimension", "content": "The dimension is intended to identify the component(s) used to deceive the attacker or defender [48].\nData [49]: The goal of deception through data manipulation is to sow confusion and erode adversaries' confidence in the information they receive, which can significantly weaken their operations or strategies. This data is often related to fundamental aspects of the infrastructure, such as authentication, system activity, or information flow. This manipulation can involve anything from creating false records to subtly modifying existing data to alter its interpretation or validity. Deception's effectiveness depends on the accuracy of the data manipulation and the ability to anticipate and counter potential adversary responses.\nNetwork [50]: Network deception involves manipulating components and information transmitted over digital communication systems. This can be done through techniques such as redirections or even the creation of decoy network components or modification of information transmitted over the network. The main objective of this deception is to mislead adversaries or influence their actions and perceptions. Both attackers and defenders can employ this strategy. Attackers can use deception to disguise their actions, making it difficult for security systems to detect and mitigate their activities. On the other hand, defenders can use deception as a tool to identify and neutralize threats, as well as to protect their systems from potential attacks.\nSystem [51]: The system dimension involves strategically manipulating the essential elements that constitute computer systems. This includes the base operation of a computer system, i.e., its operating system, and extends to encompass hardware components and storage management. The goal is to deceive adversaries or defend against their attacks by selectively modifying these systems. Actors can employ various techniques to manipulate systems and their operating environments. This could include inserting suspicious behavior into a system, altering configuration to create vulnerabilities, etc. On the other hand, defenders can use deception in the system dimension to strengthen the security of their systems. This may involve implementing advanced protection measures that pretend to be vulnerabilities to lure attackers and expose their intentions.\nSoftware [18]: The software dimension refers to the strategic manipulation of software and applications used in systems. This includes everything from computer applications to specific scripts and tools used in digital environments. Actors may employ various tactics to manipulate software and its functionalities in this dimension. This may involve inserting malicious code into applications to create vulnerabilities that can be exploited. Similarly, defenders may use software deception to create decoys or fake applications that mimic legitimate ones to lure and neutralize attackers."}, {"title": "C. Phase", "content": "The phase focus on positioning the deception mechanism used at a particular point in the defense or attack's life cycle.\nMITRE ATT&CK [52]: MITRE ATT&CK phases have been integrated into our taxonomy because they provide a comprehensive and detailed framework for understanding and categorizing the tactics and techniques used by adversaries in their attack campaigns. MITRE ATT&CK is a matrix that organizes adversary behaviors into different phases, allowing defense teams to understand better how attacks are carried out and how they can respond more effectively [53].\nBy incorporating the MITRE ATT&CK phases, it is possible to show how CYDEC solutions can be applied in each of the 14 stages of the attack lifecycle (reconnaissance, resource development, initial access, execution, persistence, privilege escalation, defense evasion, credential access, discovery, lateral movement, collection, command and control, exfiltration and impact). In addition, by aligning the taxonomy with MITRE ATT&CK, knowledge and best practices from the cybersecurity community can be leveraged using this widely recognized framework.\nFundamentals defense phases [54]: To represent the phases of defense, the four fundamental phases have been used, namely, prevention, detection, reaction, and forensics. These phases provide a solid framework for understanding how to approach cybersecurity challenges from different perspectives.\nThe same strategy has not been followed as with the attack using MITRE ATT&CK, because MITRE Defend [55] is at a very early stage of development, and we do not consider it to be fully aligned with the functions of our taxonomy. Moreover, in MITRE Defend, deception is only present in one of the phases of the defense and, in our humble opinion, deception should be present in all phases of the defense as another component that can be used to reinforce security. Deception can be an effective tool to help prevent, detect, react, and perform forensics in a cybersecurity environment. Therefore, we do not see it as a separate phase, but as an integrated strategy that can be used in all phases of the defense lifecycle. Additionally, MITRE Engage [56], which focuses on adversary engagement operations, has not been used for similar reasons. MITRE Engage is also in its nascent stages and lacks the maturity and comprehensive integration needed to fit seamlessly into our existing taxonomy. Moreover, the concept of adversary engagement, like deception, is seen as an overarching strategy rather than a distinct phase. It is crucial to embed these tactics throughout all defense phases to create a robust and adaptive security posture."}, {"title": "D. Tactic", "content": "There are several ways to carry out a deception. Therefore, characterizing the purpose of the deception mechanism, i.e., what objective or objectives at the level of deception are intended to be achieved, it is necessary to describe it. To carry out this characterization, we will use some tactics used by some of the surveys analyzed in the state of the art that have been obtained from [57]\u2013[59] studies. These tactics bring together the main objectives for which deception is used and some of them have characteristics in common.\nIn addition, each of the techniques and tactics subsequently defined will be accompanied by an icon used later in Section VI.\n\u2714 Masking [57], [58]: Masking refers to the strategy of hiding sensitive information or critical data within a digital environment or communication so that it is not easily noticeable to unauthorized observers or detection systems. This tactic involves camouflaging the existence or nature of specific elements through techniques such as data manipulation, hiding services or disguising interfaces. The key here is to hide sensitive information or data, focusing on camouflaging specific elements through data manipulation and service hiding. While masking alters specific data, camouflage causes elements to blend naturally with others, avoiding detection.\nRepackaging [57], [58]: Repackaging focuses on modifying the presentation or appearance of a digital object to make it appear different or harmless, thus evading detection or exploiting user trust. This tactic involves altering the format, packaging or labeling of a digital resource to hide its true identity or malicious purpose. Malicious actors use it to distribute malware or phishing, while defenders use it to create lures or traps. The main difference with Masking is that Repackaging changes the presentation or labeling of the digital object.\nDazzling [57], [58]: Dazzling is a deception strategy that seeks to overwhelm or confuse an adversary by generating an excessive amount of information, events or distractions, thus making it difficult to identify or pay attention to relevant or malicious information. This tactic involves flooding the target with excessive data, errors or false signals. Both attackers and defenders use it to confuse, distract or deter adversaries. The key here is information overload, in contrast to the more subtle tactics of Masking and Repackaging.\nMimicking [57], [58]: Mimicking, on the other hand, refers to the practice of creating a replica or simulation of a genuine object, entity or behavior to fool an adversary into believing they are interacting with the real entity. This tactic involves reproducing or emulating specific characteristics of an object or system to generate a convincing appearance or behavior. The main difference is that Mimicking relies on imitation, rather than concealment or modification of appearance.\nInventing [57], [58]: Inventing involves the creation or introduction of fictitious or simulated elements, entities or events to deceive or confuse an adversary. This tactic is used to create decoys, traps, or false signals that can lure, distract, or misdirect adversaries, as well as to gather information about their tactics or intentions. The invention focuses on the creation of false elements, in contrast to the modification or concealment of existing elements.\nDecoying [57], [58]: Decoying aims to draw adversaries' attention to false or lower-value targets to protect an organization's critical or sensitive assets. This tactic presents decoys or false signals that divert attackers' attention away from valuable assets. The key here is distraction and protection by presenting false targets.\nBait [57], [58]: Baiting refers to the use of false or attractive information to capture adversaries and deceive them, gaining information about their tactics or intentions. This tactic presents seemingly valuable information to lure adversaries into taking certain actions, allowing defenders to better understand threats. The difference with other tactics is that Baiting uses active luring through false information.\nConcealment [59]: Concealment involves actively hiding critical information or resources within a digital environment to make it difficult for adversaries to detect or compromise. Rather than directly exposing valuable assets, defenders conceal them using techniques such as encryption, network segmentation or the use of cloaking systems. The key here is active concealment of critical information.\nCamouflage [59]: Camouflage focuses on hiding or disguising digital elements or sensitive information within a specific environment to avoid detection or recognition by unauthorized observers or security systems. This tactic integrates digital elements into the surrounding environment so that they go unnoticed. The main difference with Concealment is that Camouflage focuses on integration into the environment.\nFalse Information [59]: False Information involves the deliberate dissemination of incorrect or misleading information to confuse, misinform or manipulate adversaries. This tactic provides false information that can lead adversaries to make incorrect decisions, hindering their attempts to compromise the security of the organization. The key is manipulation through active disinformation.\nLies [59]: Lies also relies on the communication of incorrect or misleading information, but is distinguished from False Information because it generally responds to specific questions or requests. This tactic provides false answers to divert attention or create incorrect expectations. The difference lies in its reactive and targeted use compared to the general dissemination of false information.\nDisplays [59]: Displays refers to the presentation or display of information or digital elements in a specific or misleading manner to manipulate adversaries. This tactic displays digital objects or assets in a way that suggests a false or distorted reality. The difference with Inventing is that Displays manipulates the appearance of existing real objects, while Inventing creates new fake objects."}, {"title": "E. Technique", "content": "Finally, the technique or techniques used for the proposed deception, defined as specific methods, procedures or approaches applied to achieve the intended deceptive result, must be specified. These techniques are divided into defense and attack because there are several techniques that are independent depending on whether defense or attack is required.\nATTACK\nPhishing [60]: Phishing is an attack technique in which an attacker attempts to trick users into divulging sensitive information, such as passwords, financial information, or login credentials, by masquerading as a legitimate entity.\nInjection [61]: Injection is an attack technique that involves the insertion of malicious code, commands or packets into an application, system or network to compromise its security or functionality.\nSpoofing [62]: Spoofing is an attack technique in which an attacker falsifies or manipulates source information in an attempt to impersonate someone.\nObfuscation [63]: Obfuscation is an attack technique that involves modifying the source or binary code of a program or application to make it difficult for defenders to understand or analyze.\nMITM [64]: MITM attack is a technique in which an attacker intercepts and modifies communication between two parties without either party being aware of the attacker's presence.\nHoney-X: From an attack perspective, the Honey-X technique involves deploying decoys or traps within a targeted network to deceive and compromise defense systems and users.\nPoisoning [65]: Poisoning is an attack technique that involves manipulating data or systems to introduce false or malicious information, aiming to disrupt operations, create vulnerabilities, or gain unauthorized access.\nDEFENSE\n\u2714Moving Target Defense (MTD) [66]: MTD are techniques that involve the active reconfiguration of network assets and defensive tools to make it difficult for an adversary to attack.\nHoney-X [67]: Honey-X deception strategies refer to the use of technologies such as traps, patch traps, trap files, etc., that masquerade as legitimate network assets but include advanced monitoring capabilities that allow system administrators to obtain information about the attackers.\nObfuscation [68]: Obfuscation defenses are strategies designed to confuse, deter, or disorient adversaries by presenting false or misleading information instead of real network assets. For example, it is used to defend the Intellectual Property Rights (IPR) of a code so that it cannot be copied.\nDecoy [69]: Decoying involves deliberately presenting false or attractive targets within the network to lure and confuse adversaries. These decoys may include fake systems, services, or data designed to trick adversaries into revealing their tactics or intentions.\nRedirections [70]: The Redirection technique involves intentionally directing traffic or adversaries' attention to the network's false or less critical targets to protect more valuable or sensitive assets. This technique diverts adversaries to decoys or traps, hindering their ability to identify and compromise real network assets.\nPerturbations [71]: Perturbation is a CYDEC technique that involves deliberately inserting noise or distractions into the digital environment to limit the leakage of sensitive or confidential information. This technique seeks to confuse or make it difficult for adversaries to understand data by introducing additional elements that distract their attention or make it difficult to analyze."}, {"title": "IV. CYDEC FRAMEWORKS", "content": "To address RQ3 (refer to Fig. 2), it is necessary to determine whether a framework can use CYDEC in various dimensions, employing different tactics to fully defend specific assets using deception. To this end, we aim to answer research question RQ3. The search for articles based on deception frameworks or architectures has resulted in the articles shown in Table III, which are described below, grouped and introduced according to their similarities (Game Theory, Software Defined Networking (SDN), etc.). In this table, the Strategy feature has been omitted due to the fact that no framework developing an attack strategy has been found.\nA. Current frameworks\nIn [72], a deception network (D-Net) methodology that redirects traffic from a compromised operational network (O-Net) to an identically configured deception network, minimizing further compromise of operational data and assets was proposed. Specifically, it uses packet rewriting techniques using SDN technologies, ensuring that the attacker does not notice the switch from O-Net to D-Net. This solution allows the attack to be observed and contained in a secure environment, continuing normal operations on the O-Net and studying the adversary's tactics without the adversary noticing.\nIn the article [73] introduced the Active Deception Framework (ADF), an extensible development environment designed to build sophisticated CYDEC applications. ADF utilized a SDN-based infrastructure that facilitated continuous monitoring and rapid response to adversarial activity. This framework provided a rich set of Application Programming Interfaces (APIs) that enabled the secure implementation, orchestration, and deployment of deception techniques, sparing security administrators from having to deal with low-level technical details. ADF was noted for its ability to create honeypot networks, distort attackers' perceptions, and deplete their resources through spatio-temporal mutation techniques. On the other hand, [74] presented a specific framework for Internet of Things (IoT), using honeynets to protect IoT devices from cyberattacks, especially IoT-specific attacks. This framework incorporated an OAuth authentication mechanism that verified the authenticity of requests and redirected suspicious traffic to a Honeynet for analysis, preventing attacks and allowing to capture and study attacker behavior, providing a double layer of defense.\nSimilarly, the work in [75] also focused on protecting IoT networks, but with a focus on mitigating Dristributed Denial of Service (DDoS) attacks. This framework used SDN technology to redirect traffic and continuously monitor the network, enabling a proactive defense that significantly reduced the effectiveness of DDoS attacks by implementing defense strategies based on dynamic orchestration of network resources. Besides, Game theory optimized cyber defense strategies were proposed in [76] and [77]. Specifically, the former proposed a Partially Observable Stochastic Game (POSG) model to capture the dynamic interaction between a network defender and an attacker. In this context, the defender introduced honeypots strategically to deceive the attacker. In contrast, the attacker developed strategies based on imperfect observations of the network state, allowing to simulate and analyze how the decisions of both players affected the network security in real-time. Likewise, the latter used the CHIMERA framework, based on Partially Observable Markov Decision Process (POMDP), to autonomously plan and orchestrate CYDEC in real-time, classifying the adversary's actions into TTPs and creating a deception environment that sought to deflect, distort, exhaust, and discover the attackers' intentions.\nSome studies, such as [74] and [73], shared the use of honeypots and CYDEC techniques to protect networks and devices. This two articles focused on analyzing and redirecting attacks using honeypots. In addition, [78] introduced Citrus, a novel method to generating attack signatures incorporating host-based telemetry extracted from honeypot endpoints. In particular, Citrus used a module called Tangerine to analyze information from intelligence sources, normalize data and generate signatures of malicious behavior, enabling rapid defense against emerging attacks. Meanwhile, the work in [79] presented an efficient honeypot architecture designed to capture high-quality attack data, using three main modules, decoy, orchestrator, and captor, coordinated to provide sensitivity, countermeasures and stealth.\nFurthermore, the IoV-specific framework, HoneyCar, was described in [84], configuring vulnerabilities in honeypots to deceive attackers and gather valuable information about their tactics and techniques. Besides, a shadow controller-based framework for protecting the SDN control plane against reconnaissance attacks, was presented in [80], using shadow controllers to respond to reconnaissance traffic and improve network availability by constantly changing the attack surface.\nIn [86], an optimal defensive deception framework for container-based cloud environments was presented using Deep Reinforcement Learning (DRL). This framework orchestrated and updated decoy placement strategies dynamically to maximize attacker confusion and minimize actual attack paths, integrating adaptability capabilities in dynamic cloud environments. Another interesting technique called Decepti-SCADA is in [81], which introduced a framework designed for Supervisory Control And Data Acquisition (SCADA) systems using decoys and malicious interaction detection. Decepti-SCADA employed Docker containers to create highly interactive decoys that replicated real operating systems, using a web-based management system to deploy and monitor these decoys.\nThe paper in [87] presented DOLOS, an architecture that unifies Moving Target Defense (MTD) and Cyber Deception techniques. DOLOS integrates deception and randomization techniques directly into production systems, avoiding traditional disadvantages. In particular, it uses agents deployed on each computer in the system, managed by a central controller. This architecture creates a dynamic and confusing attack surface, forcing attackers to interact with numerous fake services before compromising the real ones.\nAdditionally, authors in [83] presented a system that used CYDEC techniques to protect against various types of malware, creating deception playbooks that mapped malware behaviors to specific deception tactics. DodgeTron, described in [82], implemented a standalone CYDEC system that dynamically analyzed malware to discover attack techniques and build deception playbooks, providing a proactive and effective defense against advanced threats such as APTs.\nThe Security Orchestration, Automation, and Response (SOAR) System in [85] is another orchestration framework for cyber deception that analyzes malware behavior by observing WinAPI calls and mapping them to MITRE ATT&CK techniques. From these observations, SOAR designs deception techniques to confuse the detected malware. Concretely, it slant is reactive, requiring an agent to detect running malware, which limits its effectiveness against rapidly mutating threats.\nBased on a thorough analysis of the frameworks proposed in the literature discussed in Table III, the lack of a generic framework adaptable to various environments has been identified. In addition, it was noted that existing frameworks focus on specific deception techniques rather than taking advantage of the full spectrum of techniques currently available. Specifically, it was also noted that these frameworks do not take advantage of the different dimensions of deception identified (i.e, Data, Network, System or Software) or the different phases of defense (i.e, prevention, detection, reaction or forensic). Furthermore, only a few of the most recent frameworks consider the use of advanced methods of deception. It is also observed that none of the current frameworks develop an offensive or attack strategy when reacting to attacks or threats being a possible challenge to address in the future.\nTherefore, it has been decided to design a defensive generic framework that elevates deception to a higher level. This perspective will combine various techniques designed to prevent, detect, react, and facilitate forensic analysis, thus improving security mechanisms. In addition, advanced methods of AI will be incorporated to optimize and automate these techniques, ensuring a more robust and adaptive defense against emerging threats."}, {"title": "B. Our proposed framework", "content": "This section presents the proposed CYDEC based framework. Fig. 4 shows an abstract view of the resulting design framework", "Layers": "First, the layers contained in the framework, its main functions and components as well as tools that could be used to fulfill the functionality are described.\nIn Fig. 4, the names of the layers that compose the framework are represented as blue boxes, internally"}]}