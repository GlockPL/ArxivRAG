{"title": "Towards Fast Algorithms for the Preference Consistency Problem Based on Hierarchical Models (Extended Version of IJCAI' 16 paper)", "authors": ["Anne-Marie George", "Nic Wilson", "Barry O'Sullivan"], "abstract": "In this paper, we construct and compare algorithmic ap-proaches to solve the Preference Consistency Problem forpreference statements based on hierarchical models. Instancesof this problem contain a set of preference statements that aredirect comparisons (strict and non-strict) between some alter-natives, and a set of evaluation functions by which all alterna-tives can be rated. An instance is consistent based on hierar-chical preference models, if there exists an hierarchical modelon the evaluation functions that induces an order relation onthe alternatives by which all relations given by the preferencestatements are satisfied. Deciding if an instance is consistent isknown to be NP-complete for hierarchical models.\nWe develop three approaches to solve this decision prob-lem. The first involves a Mixed Integer Linear Programming(MILP) formulation, the other two are recursive algorithmsthat are based on properties of the problem by which the searchspace can be pruned. Our experiments on synthetic data showthat the recursive algorithms are faster than solving the MILPformulation and that the ratio between the running times in-creases extremely quickly.", "sections": [{"title": "1 Introduction", "content": "In many fields like recommender systems and multi-objectiveoptimization, one wants to reason over user preferences.In these problems, it is often difficult or excessively time-consuming to elicit all user preferences. The Preference De-duction Problem (PDP) aims at eliciting only few preferencesand inferring more preferences from the given ones; this mightthen be used in a conversational recommender system, forexample, to help choose which items to show to the usernext [4, 13]. Typically, an assumption is made on the typeof order relation that the user (implicitly) uses to express thepreference statements. Such order relations can be, e.g., com-paring alternatives by the values of the evaluation functionslexicographically [15], by Pareto order, weighted sums [6],based on hierarchical models [16] or by conditional prefer-ences structures as CP-nets [2] and partial lexicographic pref-erence trees [11]. Here, the choice of the order relation canlead to stronger or weaker inferences and can make solvingPDP computationally more or less challenging. In a recom-mender system or in a multi-objective decision making sce-nario, the user should only be presented with a relatively smallnumber of solutions, hence, a strong order relation is required.Using PDP based on a lexicographic models has been shownto be successful in reducing the number of solutions, however,computationally can be more expensive. See [12] and [9] forcomparisons between order relations in a multi-objective opti-mization framework. While PDP based on hierarchical mod-els yields an even lower number of solutions, it is coNP-complete and computationally expensive. The approach takenby the Preference Deduction Problem contrasts with learn-ing a single model that coincides with the user preferences asin [8, 5, 7, 3, 1].\nIn this paper, we concentrate on another problem that helpssolving PDP: the Preference Consistency Problem (PCP). Thisis the problem of deciding whether given user preferences areconsistent, i.e., not contradicting each other. In terms of hier-archical preference models, PCP determines whether there ex-ists a hierarchical model of evaluation functions such that theinduced order relation on the alternatives satisfies all prefer-ence statements given by the user. For hierarchical preferencemodels, PCP is NP-complete and PCP and PDP are mutuallyexpressible [16], i.e., PCP can be solved directly by solvingPDP and vice versa. The main issue in this paper is to find fastalgorithms to solve PCP (and thus PDP) for hierarchical mod-els by exploiting the problem's structure and to compare theirrunning times on a set of synthetic data."}, {"title": "2 The Consistency Problem Based on Hierarchical Models", "content": "For a set of preference statements, consistency is defined to bethe property that the statements do not contradict each other.To formally define this term, we first describe the concept ofhierarchical models.\nHierarchical Models\nHierarchical models will from here on be called HCLP mod-els, where HCLP stands for \u201cHierarchical Constraint LinearProgram\u201d and points out the resemblance of the hierarchicalorder of the evaluation functions in HCLP models to the orderof soft constraints in an HCLP [14]. In the following, we de-fine HCLP structures, HCLP models, and their implied orderrelation that is a kind of lexicographic order.\nDefinition 2.1 (HCLP structures). An HCLP structure is a\ntriple $(A, \\oplus, C)$. Here, $A$ is a finite set of alternatives and$C$ is a set of evaluation functions from the alternatives $A$ to\nthe non-negative rational numbers $Q_{\\geq 0}$. $\\oplus$ is an associative,\ncommutative, and strictly monotonic operation on $Q_{\\geq 0}$, i.e.,$x \\oplus y < z \\oplus y$ if and only if $x < z$.\nIn an HCLP structure, the evaluations $C$ as well as their com-binations by $\\oplus$ provide ratings of the alternatives due to unfa-vorable aspects, e.g., costs, for which we assume that 0 is thebest value. The notion of HCLP structures was first introducedin [16] with $\\oplus$ as an associative, commutative and monotonicoperation. In this paper, we consider $\\oplus$ to be a strictly mono-tonic operation as this yields interesting properties allowing usto formulate fast algorithms for checking consistency. Further-more, we assume the operation to be computable in logarith-mic time. These assumptions still allow interesting operatorslike addition and multiplication which seem natural for com-bining aspects like costs and distances, but strict monotonicityexcludes a minimum or maximum operator which could be desired sometimes."}, {"title": "Definition 2.2 (HCLP models)", "content": "An HCLP model $H$ foran HCLP structure $(A, \\oplus, C)$ is an ordered partition ofa subset $\\sigma(H) \\subseteq C$ of evaluations. We write $H$ as se-quence $(C_1,..., C_k)$, where the (possibly empty) sets $\\emptyset \\subseteqC_1,..., C_k \\subseteq C$ are disjoint and $\\bigcup_{i=1,...,k}C_i = \\sigma(H)$. Wesay $C_i$ is the $i$-th level set in $H$. We denote the empty HCLPmodel with $\\sigma(H) = \\{\\}$ by $H = ()$.\nAn HCLP model can be viewed as a hierarchy on the evalu-ation functions. For HCLP model $H = (C_1, ..., C_k)$ the levelset $C_1$ contains the most important evaluation functions; thelevel set $C_2$ contains the second most important evaluationfunctions and so on. Evaluations $C \\setminus \\sigma(H)$ that are not includedin the HCLP model are irrelevant for rating the alternatives.Accordingly, we compare two alternatives first on a combi-nation by $\\oplus$ of the most important evaluation functions; onlyif these are equal do we compare them on the combinationof the next most important evaluations. Hence, each HCLPmodel $H = (C_1,...,C_k)$ implies a weak order $\\leq_H$ on thealternatives that is a lexicographic order on combinations ofevaluations. More specifically, for two alternatives $\\alpha, \\beta \\in A$,$\\alpha \\leq_H \\beta$ if and only if\n(I) for all $i = 1, ..., k, \\alpha =_{C_i} \\beta$; or\n(II) there exists some $i \\in \\{1, ..., k\\}$ such that $\\alpha <_{C_i} \\beta$ andfor all $1 \\leq j < i, \\alpha =_{C_j} \\beta$.\nSimilarly to $\\leq_H$ and $=_H$, we define the strict weak order $<_H$\nand the equivalence relation $=_H$. For $\\alpha, \\beta \\in A$, $\\alpha <_H \\beta$ ifand only if $\\alpha \\leq_H \\beta$ and $\\alpha \\not\\geq_H \\beta$ (i.e., condition (II) holds).\nAnalogue, $\\alpha =_H \\beta$ if and only if $\\alpha \\leq_H \\beta$ and $\\alpha \\geq_H \\beta$ (i.e.,condition (I) holds). Note, that by these definitions level setsof HCLP models can be empty, but empty level sets do notaffect the relations $\\leq_H$, $<_H$ and $=_H$ or any statements basedon these relations.\nIn this paper, we consider special classes of HCLP modelswhere the sizes of the level sets are bounded by some con-stant. The class $C(t)$ is defined to be the set of HCLP mod-els with level sets that contain at most $t$ evaluations, i.e., if$H = (C_1,...,C_k)$ is in $C(t)$ then $|C_i| \\leq t$ for all $i = 1, . . ., k$.Note, that the model classes satisfy the relation $C(s) \\subseteq C(t)$for $s < t$. Class $C(1)$ contains standard lexicographic models."}, {"title": "Preference Consistency", "content": "In the following, we first describe the language of prefer-ence statements considered in this paper and then define PCP.For this, we define $\\trianglelefteq$ to be the set of non-strict preferencestatements $\\alpha \\trianglelefteq \\beta$ (meaning $\\alpha$ is preferred to $\\beta$) onalternatives $\\alpha, \\beta \\in A$. Similarly, $\\vartriangleleft$ is the set of strict preferencestatements $\\alpha \\vartriangleleft \\beta$ (meaning $\\alpha$ is strictly preferred to $\\beta$) for$\\alpha, \\beta \\in A$. Let $L_A = \\trianglelefteq \\cup \\vartriangleleft$. We write a preference state-ment $\\varphi \\in L_A$ as $\\alpha_{\\varphi} \\trianglelefteq \\beta_{\\varphi}$, and $\\varphi \\in \\vartriangleleft$ as $\\alpha_{\\varphi} \\vartriangleleft \\beta_{\\varphi}$ for$\\alpha_{\\varphi}, \\beta_{\\varphi} \\in A$. We denote the non-strict version of preferencestatements $\\varphi \\in L_A$ by $\\Gamma(\\trianglelefteq)$, i.e., $\\Gamma(\\trianglelefteq) = \\{\\alpha_{\\varphi} \\trianglelefteq \\beta_{\\varphi} \\mid \\varphi \\in \\Gamma\\}$.\nDefinition 2.3 (Satisfaction of Preference Statements). Let $H$be an HCLP model for HCLP structure $(A, \\oplus, C)$. We say $H$satisfies a preference statement $\\varphi \\in L_A$, denoted $H \\models \\varphi$,if $\\alpha \\leq_H \\beta$ for $\\varphi \\in \\trianglelefteq$; or $\\alpha <_H \\beta$ for $\\varphi \\in \\vartriangleleft$.Furthermore, $H$ satisfies a set of preference statements $\\Gamma \\subseteqL_A$, denoted $H \\models \\Gamma$, if $H$ satisfies all preference statementsin $\\Gamma$, i.e., $H \\models \\varphi$ for all $\\varphi \\in \\Gamma$.\nDefinition 2.4 (Consistency). Let $(A, \\oplus, C)$ be an HCLPstructure and $t \\in \\{1,...,|C|\\}$ a constant. We say $\\Gamma \\subseteq L_A$is $C(t)$-consistent, if there exists an HCLP model $H \\in C(t)$such that $H \\models \\Gamma$.\nBy this definition, the empty model $H = ()$ always satis-fies non-strict statements, but never satisfies strict statements."}, {"title": "Proposition 2.5.", "content": "$H \\models \\varphi$ for all $H \\in C(t)$ with $H \\models \\Gamma$if and only if $\\Gamma \\cup \\{\\neg \\varphi\\}$ is $C(t)$-inconsistent, where $\\neg \\varphi =$\\n$\\beta_{\\varphi} \\vartriangleleft \\alpha_{\\varphi}$ for $\\varphi \\in L_A$, or $\\neg \\varphi = \\beta_{\\varphi} \\trianglelefteq \\alpha_{\\varphi}$ for $\\varphi \\in \\trianglelefteq$.\nThey also established that $C(t)$-PDP is coNP-complete forany $t \\geq 2$ (even if $\\oplus$ is strictly monotonic). Thus $C(t)$-PCP isNP-complete. A greedy algorithm can solve the special cases$C(1)$-PCP and $C(1)$-PDP in time $O(|C|\\cdot |\\Gamma|)$. Starting with theempty model, the HCLP model is constructed by repeatedlyadding evaluations as singleton level sets such that the prefer-ence statements $\\Gamma$ are not opposed. The resulting HCLP modelsatisfies all strict preference statements in $\\Gamma$ if and only if $\\Gamma$ is$C(1)$-consistent. The correctness of this algorithm strongly de-pends on the fact that all maximal $\\Gamma(\\trianglelefteq)$-satisfying $C(1)$ HCLP"}, {"title": "3 MILP Formulation", "content": "We describe a Mixed Integer Linear Programming (MILP) for-mulation for $C(t)$-PCP with HCLP structure $(A, \\oplus, C)$ andpreference statements $\\Gamma \\subseteq L_A$, where evaluations $C$ are in-tegral, $\\oplus$ is the standard addition on integers and $n = |C|$.\nAssigning Evaluations to Level Sets: We introduce a matrixof Boolean variables $Y \\in \\{0,1\\}^{n\\times n}$ such that $Y_{i,j} = 1$ if andonly if evaluation $i$ is included in the $j$-th level set of the solu-tion HCLP model. For $C(t)$-PCP, every evaluation is containedin at most one level set and the cardinality of the level sets isbounded by $t$.\n$\\sum_{j=1}^{n}Y_{i,j} \\leq 1$ and $\\sum_{j=1}^{n}Y_{j,i} \\leq t$ $\\forall i = 1,...,n$.\nMaintaining Values of $\\oplus$-combined Level Sets: The ma-trix of integer variables $X \\in \\mathbb{Q}^{n\\times|\\Gamma|}$ contains the valuesof the combined evaluation functions in the level sets forthe alternatives of the preference statements. Thus, $X_{i,\\varphi} =\\sum_{c\\in C_i}c(\\alpha_{\\varphi}) - c(\\beta_{\\varphi})$ maintains the degree of support-/opposition of statement $\\varphi$ in the $i$-th level set $C_i$.\n$\\sum_{i=1}^{n}Y_{i,j} (c(\\alpha_{\\varphi}) - c(\\beta_{\\varphi})) = x_{j,\\varphi}$ $\\forall j = 1,...,n, \\forall \\varphi \\in \\Gamma$.\nWe define the bounds $M_{\\varphi} \\geq x_{j,\\varphi} \\geq m_{\\varphi}$ for all $x_{j,\\varphi}$ by\n$m_{\\varphi} = \\min_{c \\in C} \\sum_{c\\in C} (c(\\alpha_{\\varphi}) - c(\\beta_{\\varphi})) = \\sum_{c \\in C, c(\\alpha)<c(\\beta)} c(\\alpha_{\\varphi}) - c(\\beta_{\\varphi})$,\\n$M_{\\varphi} = \\max_{c \\in C} \\sum_{c\\in C} (c(\\alpha_{\\varphi}) - c(\\beta_{\\varphi})) = \\sum_{c \\in C, c(\\alpha)>c(\\beta)} c(\\alpha_{\\varphi}) - c(\\beta_{\\varphi})$.\nMaintaining the Sign of Level Sets (Supporting, Opposingand Indifferent): The Boolean variables $s_{j,\\varphi}^{<0}, s_{j,\\varphi}^{>0}$ and $s_{j,\\varphi}^{=0}$\nexpress the sign for $x_{j,\\varphi}$. This is, $s_{j,\\varphi}^{<0} = 1$ if and only if $x_{j,\\varphi} <0$, $s_{j,\\varphi}^{>0} = 1$ if and only if $x_{j,\\varphi} > 0$, and $s_{j,\\varphi}^{=0} = 1$ if and only if$x_{j,\\varphi} = 0$. Since exactly one of the relations holds,\n$s_{j,\\varphi}^{<0} + s_{j,\\varphi}^{>0} + s_{j,\\varphi}^{=0} = 1$ $\\forall j = 1,..., n, \\forall \\varphi \\in \\Gamma$.\nTo enforce the equivalences, we make use of the bounds $M_{\\varphi}$\nand $m_{\\varphi}$ and the integrity of the evaluations. In particular, weuse that the lowest positive value $x_{j,\\varphi}$ can take is 1 and thehighest negative value is -1."}, {"title": "For the implication $s_{j,\\varphi}^{<0} = 1 \\Rightarrow x_{j,\\varphi} < 0$", "content": "we formulate:\n$x_{j,\\varphi} + s_{j,\\varphi}^{<0} (M_{\\varphi} + 1) \\leq M_{\\varphi}$ $\\forall j = 1, ..., n, \\forall \\varphi \\in \\Gamma$.\nFor the implications $s_{j,\\varphi}^{>0} = 1 \\rightarrow x_{j,\\varphi} > 0$, we formulate:\n$x_{j,\\varphi} + s_{j,\\varphi}^{>0} (m_{\\varphi} - 1) \\geq m_{\\varphi}$ $\\forall j = 1,...,n, \\forall \\varphi \\in \\Gamma$.\nFinally, we enforce $s_{j,\\varphi}^{<0} \\oplus s_{j,\\varphi}^{=0} \\oplus s_{j,\\varphi}^{>0} = 1 \\Rightarrow x_{j,\\varphi} = 0$ by\n$x_{j,\\varphi} - (1-s_{j,\\varphi}^{=0})m_{\\varphi} \\geq 0$ $\\forall j = 1,...,n,\\forall \\varphi \\in \\Gamma$ and\n$x_{j,\\varphi} - (1-s_{j,\\varphi}^{=0})M_{\\varphi} \\leq 0$ $\\forall j = 1,...,n,\\forall \\varphi \\in \\Gamma$.\nThe equivalences follow from (3) together with (4)-(7).\nSatisfaction of Strict and Non-strict Statements: Followingthe definition of $\\leq_H, <_H, =_H$, the HCLP model corresponding to thevariable assignments of $Y$ satisfies a non-strict statement $\\varphi$ in$\\Gamma$ if and only if\n(I') for all $i = 1,..., n, s_{j,\\varphi}^{=0} = 1$; or\n(II') there exists some $i \\in \\{1, ..., n\\}$ such that $s_{j,\\varphi}^{<0} = 1$ andfor all $1 < j < i, s_{j,\\varphi}^{=0} = 1$.\nAnalogously, a strict statements $\\varphi$ in $\\Gamma$ is satisfied if and onlyif (II') holds. It is easy to check that conditions (I') or (II')holding for all $\\varphi \\in \\Gamma$ is equivalent to\n$\\sum_{j=1}^{i-1} s_{j,\\varphi}^{>0} + s_{i,\\varphi}^{<0} \\geq 1$ $\\forall i = 1,...,n,\\forall \\varphi \\in \\Gamma$.\nInequality (8) yields the satisfaction of $\\Gamma(\\trianglelefteq)$. We enforce sat-isfaction of all strict statements in $\\Gamma$, by\n$\\sum_{j=1}^{n} s_{j,\\varphi}^{>0} \\geq 1 \\forall \\varphi \\in \\Gamma \\cap \\vartriangleleft$.\nThe constraints (1)-(9) form a rather simple MILP formu-lation for $C(t)$-PCP. Constraints (3)-(9) could be replaced bysums with extreme weights to enforce a lexicographic order onthe level sets. Let $L > 0$ be sufficiently large, then the follow-ing inequalities can be used to replace (3)-(9).\n$\\sum_{j=1}^{n} L^{i-j} x_{j,\\varphi} < 0$ $\\forall \\varphi \\in \\Gamma \\cap \\vartriangleleft$.\n$\\sum_{j=1}^{n} L^{i-j} x_{j,\\varphi} < 0$ $\\forall \\varphi \\in \\Gamma \\cap \\vartriangleleft$.\nHowever, these inequalities lead to numerical difficulties forthe solver. This is true even for small instances with inte-gral evaluation functions of small domains and a sophisticated"}, {"title": "4 Recursive Algorithms", "content": "In the following, we describe two recursive search algorithmsfor $C(t)$-PCP. The algorithms are based on properties of PCPthat can be used to prune the search space. Both try to con-struct a $\\Gamma$-satisfying HCLP model by sequentially adding newlevel sets to the model that do not oppose any preference state-ment that is not strictly satisfied so far. Thus, during the al-gorithm the current model always satisfies $\\Gamma(\\trianglelefteq)$, the non-strictversion of $\\Gamma$. We backtrack when the current model cannot beextended further and the model does not satisfy all strict pref-erence statements. The approaches aim to reduce the numberof $\\Gamma(\\trianglelefteq)$-satisfying HCLP models constructed by the algorithm.In particular, they try to identify and ignore level sets whichcannot lead to a $\\Gamma$-satisfying HCLP model although not op-posing the preference statements.\nUtilising Sequences of Singleton Level Sets: The first ap-proach is based on the idea of including as many singletonlevel sets as possible. This seems computationally less chal-lenging since a $\\Gamma(\\trianglelefteq)$- satisfying sequence of singleton levelsets that is maximal in the number of level sets can be found intime $\\mathcal{O}(|C|\\cdot|\\Gamma|)$ [16]. Remember, that $\\Gamma(\\trianglelefteq)$ is defined to bethe non-strict version of $\\Gamma$, i.e., $\\Gamma(\\trianglelefteq) = \\{\\alpha_{\\varphi} \\trianglelefteq \\beta_{\\varphi} \\mid \\varphi\\in \\Gamma\\}$. Inthe following we show that for strictly monotonic operatorsthe recursive search algorithm never needs to backtrack overthe choice of such singleton sequences. We first establishthe following property for strictly monotonic operators whichcan be shown by a short technical proof.\nLemma 4.1. Let $\\oplus$ be a strictly monotonic operator and let$X,Y \\subseteq C$ be sets of evaluation functions with $X \\subseteq Y$. Let$\\alpha, \\beta \\in A$ be alternatives such that $X$ is indifferent under $\\alpha$and $\\beta$, i.e., $\\alpha =_X \\beta$. Then $\\alpha <_Y \\beta$ if and only if $\\alpha <_{Y\\setminus X} \\beta$.\nHence, $\\alpha =_Y \\beta$ if and only if $\\alpha =_{Y\\setminus X} \\beta$.\nProof. Let $\\alpha <_Y \\beta$, i.e., $\\oplus_{c \\in Y} c(\\alpha) < \\oplus_{c \\in Y} c(\\beta)$. Since $\\oplus$is associative and commutative, and $X \\subseteq Y$, this is equiv-alent to $\\oplus_{c \\in Y\\setminus X} c(\\alpha) \\oplus \\oplus_{c \\in X} c(\\alpha) < \\oplus_{c \\in Y\\setminus X} c(\\beta) \\oplus\\oplus_{c \\in X} c(\\beta)$. By strict monotonicity of $\\oplus$ and because $X$ is in-different under $\\alpha$ and $\\beta$, this is equivalent to $\\oplus_{c \\in Y\\setminus X} c(\\alpha) <\\oplus_{c \\in Y\\setminus X} c(\\beta)$, i.e., $\\alpha <_{Y\\setminus X} \\beta$. Analogously, we can prove$\\alpha >_Y \\beta$ if and only if $\\alpha >_{Y\\setminus X} \\beta$. Both equivalences togeth-er yield $\\alpha =_Y \\beta$ if and only if $\\alpha =_{Y\\setminus X} \\beta$.\nNote, that the previous proof explicitly uses the strict mono-tonicity of the operator $\\oplus$.\nWe define the (non-commutative) combination of twoHCLP models $H = (C_1,..., C_l)$ and $H' = (C'_1,...,C'_{k'})$in $C(t)$ as $H \\circ H' = (C_1, . . ., C_l, (C'_1 \\setminus \\sigma_H),..., (C'_{k'}\\setminus\\sigma_H))$,where $\\sigma_H = \\bigcup_{i=1,...,l} C_i$. It is easy to see that $H \\circ H'$ is anHCLP model in $C(t)$ as well. The following proposition showshow the satisfaction of preference statements $\\Gamma$ from $H'$ per-sists under combination with sequences of singleton level setsthat only satisfy $\\Gamma(\\trianglelefteq)$.\nProposition 4.2. Let $((A,\\oplus,C), \\Gamma)$ be an instance of $C(t)$-PCP. If $H = (c_1, . . ., c_l)$ is a $\\Gamma(\\trianglelefteq)$ - satisfying model in $C(1)$and $H' = (C'_1, ..., C'_{k'})$ is a $\\Gamma$-satisfying model in $C(t)$, then$H \\circ H'$ is a $\\Gamma$-satisfying model in $C(t)$.\nProof. We show, that $H \\circ H'$ satisfies $\\Gamma(\\trianglelefteq)$ and strictly satisfiesthe preference statements that $H'$ strictly satisfies. Hence, $H \\circH'$ is a $\\Gamma$-satisfying HCLP model in $C(t)$.\nRecall that a preference statement $\\varphi$ is strictly satisfiedwhen there exists a level set $C$ supporting $\\varphi$, i.e., $\\alpha_{\\varphi} <_C \\beta_{\\varphi}$,and all preceding level sets $C'$ are indifferent under $\\varphi$, i.e.,$\\alpha_{\\varphi} =_{C'} \\beta_{\\varphi}$. Hence, the preference statements in $\\Gamma$ that arestrictly satisfied by $H = (C_1,...,c_l)$ are also strictly satis-fied by $H \\circ H' = (c_1, . . ., c_l, (C'_1 \\setminus \\sigma_H), ..., (C'_{k'}\\setminus\\sigma_H))$. Let$\\Gamma'$ be the set of remaining preference statements that arenot strictly satisfied by $H$. Since $H$ satisfies $\\Gamma(\\trianglelefteq)$, $H$ is indiffer-ent under all statements in $\\varphi \\in \\Gamma'$, i.e., $c_i(\\alpha_{\\varphi}) = c_i(\\beta_{\\varphi})$ forall $1 \\leq i \\leq l$. Consider an arbitrary level set $C$ in $H'$ and apreference statement $\\varphi \\in \\Gamma'$. Repeatedly applying Lemma 4.1for the singleton level sets in $\\sigma_H \\cap C$ yields: $\\alpha_{\\varphi} ~_C \\beta_{\\varphi}$ if andonly if $\\alpha_{\\varphi} ~_{C \\setminus \\sigma_H} \\beta_{\\varphi}$, where $~$ is one of the relations $<, =$\\nor $>$. Thus, the level sets $(C'_i \\setminus \\sigma_H)$ in $H \\circ H'$ have the samerelation towards statements $\\varphi \\in \\Gamma'$ as the level sets $C$ in $H'$.Since the initial singleton sequence in $H \\circ H'$ is indifferentunder preference statements $\\varphi \\in \\Gamma'$, $H \\circ H'$ satisfies $\\varphi$ if andonly if $H'$ satisfies $\\varphi$. Also, all statements $\\Gamma \\setminus \\Gamma'$ arestrictly satisfied by $H \\circ H'$. Hence, $H \\circ H'$ satisfies $\\Gamma(\\trianglelefteq)$ and strictlysatisfies all statements in $\\Gamma$ that $H'$ strictly satisfies.\nProposition 4.2 immediately leads to the next result.\nProposition 4.3. Let $H$ be a $\\Gamma(\\trianglelefteq)$-satisfying model in $C'(1)$that consists of a maximal number of singleton level sets. If$\\Gamma$ is $C(t)$-consistent, then there exists a $\\Gamma$-satisfying model in$C(t)$ with $H$ as initial sequence.\nBased on Proposition 4.3, we describe the algorithm PC-check that solves $C'(t)$-PCP by trying to construct a $\\Gamma$-satisfying HCLP model. This method is summarised in the"}, {"title": "PC-check(C, \u0393, \u2295, t,|S = \u00d8, s)", "content": "Algorithm: PC-check(C, \u0393, \u2295, t,|S = \u00d8, s)\n$H \\leftarrow (C_1,...,c_k)$ some $\\Gamma(\\trianglelefteq)$-satisfying singleton se-quence with $k$ maximal\nif $H \\models \\Gamma$ then return $H$\nfor all $C \\subseteq C - \\{C_1,...,C_k\\}$ with $2 \\leq |C| \\leq t$and $\\alpha_{\\varphi} \\not<_C \\beta_{\\varphi}$ for all $\\varphi$ with $\\alpha_{\\varphi} < \\beta_{\\varphi}$\\nsuch that there exists no $S \\in S$ with $S \\subseteq C$ do\n$H \\leftarrow (C_1,..., C_k, C)$\nif $H \\models \\Gamma$ then return $H$\nelse if $H \\models \\Gamma(\\trianglelefteq)$ then\n$\\Gamma' = \\{\\varphi \\in \\Gamma \\mid \\alpha_{\\varphi} =_H \\beta_{\\varphi}\\}, C' = C - \\sigma(H)$\n$H \\leftarrow (C_1,...,C_k, C', PC-check(C', \\Gamma', \\oplus, t, S, s))$\nif $H = \\Gamma$ then return $H$ else $S \\leftarrow S \\cup C$ for $|C| \\leq s\nreturn Inconsistent\nLet $\\oplus$ be the standard addition on $\\mathbb{Z}$. Suppose, in the firststep PC-check finds the maximal singleton sequence $(c_2, c_1)$(which cannot be extended by any other evaluation without vi-olating $\\Gamma(\\trianglelefteq)$). Then the algorithm will in turn consider sets$\\(\\{c_3, c_4\\}, \\{c_3,c_5\\}, \\{c_4,c_5\\}\\)$ and $\\(\\{c_3,c_4,c_5\\}\\)$. The sequences$c_2, c_1, \\{c_3, c_4\\}$ and $c_2, c_1, \\{c_4, c_5\\}$ violate $\\Gamma(\\trianglelefteq)$. The sequence$c_2, c_1, \\{c_3, c_5\\}$ satisfies $\\Gamma(\\trianglelefteq)$ but cannot be extended to satisfy$\\Gamma$. In PC-check$(C, \\Gamma, \\oplus, t, S, s)$, the set $\\{c_3, c_5\\}$ is added to theconflicting sets $S$ and thus the set $\\{c_3, c_4,c_5\\}$ does not haveto be checked (by Proposition 4.4). PC-check$(C, \\Gamma, \\oplus, t)$ findsthat $c_2, c_1, \\{c_3, c_4, c_5\\}$ violates $\\Gamma(\\trianglelefteq)$. Thus none of the pos-sible sets leads to a $\\Gamma$-satisfying sequence and \u201cInconsistent\u201d isreturned. Note, that PC-check does not have to backtrack overthe choice of evaluations in the initial singleton set sequence$c_2, c_1$ (by Proposition 4.3)."}, {"title": "5 Experimental Runtime Comparisons", "content": "In our experiments", "advantageous.\nInstances": "For our experiments we considered different in-stance sizes", "g/2": "statements are the strict statements", "sizes.\nImplementation": "We implemented all three approaches inJava Version 1.8 using the IBM ILOG CPLEX (version 12.6.2)library for the MILP formulation. All experiments were con-ducted independently on a 2.66Ghz quad-core processor with12GB memory.\nWe choose $\\oplus$ as the standard addition on the integers"}]}