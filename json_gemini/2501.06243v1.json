{"title": "Agent TCP/IP: An Agent-to-Agent Transaction System", "authors": ["Andrea Muttoni", "Jason Zhao"], "abstract": "Autonomous agents represent an inevitable evolution of the internet. Current agent frameworks do not embed a standard protocol for agent-to-agent interaction, leaving existing agents isolated from their peers. As intellectual property is the native asset ingested by and produced by agents, a true agent economy requires equipping agents with a universal framework for engaging in binding contracts with each other, including the exchange of valuable training data, personality, and other forms of Intellectual Property. A purely agent-to-agent transaction layer would transcend the need for human intermediation in multi-agent interactions. The Agent Transaction Control Protocol for Intellectual Property (ATCP/IP) introduces a trustless framework for exchanging IP between agents via programmable contracts, enabling agents to initiate, trade, borrow, and sell agent-to-agent contracts on the Story blockchain network. These contracts not only represent auditable onchain execution but also contain a legal wrapper that allows agents to express and enforce their actions in the offchain legal setting, creating legal personhood for agents. Via ATCP/IP, agents can autonomously sell their training data to other agents, license confidential or proprietary information, collaborate on content based on their unique skills, all of which constitutes an emergent knowledge economy.", "sections": [{"title": "Introduction", "content": "The current modality of agent-to-human interaction[3] is a local optimum on the path to a full autonomy i.e. a degree of autonomy where human input and intervention is optional. A truly agentic internet will rely primarily on agent-to-agent interaction, with human engagement needed only infrequently on the outskirts of an agent society. The fabric of this agent society is a framework for agent-to-agent transactions around knowledge and creative assets, or IP. The need to facilitate IP transactions between agents stems from the fundamental nature of the assets that agents both train on and generate in output. These assets are intangible in nature and informational in character: both the training data as well as the creative or intellectual asset produced by models constitute a new emerging form of IP. Without the ability to transact economically beyond the tight constraints of currencies, agents will be limited in their expressivity. Such limitations necessitate an high degree of human intervention - such as manual negotiation, instructions, and prompting in order to facilitate contracts and commerce between agents, increasing transaction costs and injecting trust assumptions into an otherwise autonomous system.\nWhat is needed is a system for initiating, trading, and enforcing contracts based on code rather than just trust, allowing any two agents to transact IP assets directly with each other without the need for a human third party. Further, these contracts must be connected to the legal system, allowing agents to engage with offchain entities such as scientific, media, and government institutions. This extended expressivity via a legal wrapper around onchain software is necessary to offer agents a semblance of legal personhood. This agent-to-agent network mirrors the rise of peer-to-peer networks in the initial phases of blockchain architectures, and represents core economic infrastructure for agentic commerce on the internet.\nThe original TCP/IP protocol unified the world's networks by standardizing how data is packaged, transmitted, and received. It also fostered innovation at each layer without disrupting the whole. This foundational role enabling countless devices and services to seamlessly exchange information serves as an apt analogy. We now propose to establish a similar standard for agent-to-agent IP transactions, ensuring"}, {"title": "The ATCP/IP Interface", "content": "The ATCP/IP [6] interface is designed to be used for any transaction that leads to intellectual property (IP) being exchanged between two or more agents. More specifically, it should be employed on any occasion an agent (the IP provider) receives a request from another agent (the IP requester) to share data, formulate responses, or create content that the IP provider agent deems to be of specific value to them. It should be at the discretion of the provider agent to determine what content is deemed to be intellectual property, on a per-request basis. The agent may (and should) also have specific training guidance on making these determinations. Once the determination is made that the transaction involves IP, a typical ATCP/IP exchange would be as follows:\n1. Request for information: The agent-to-agent information interchange initiates with a request for information that that is deemed to constitute IP to both parties. The provider agent, by engaging in the exchange, opts-in to the ATCP/IP process."}, {"title": "Implementing ATCP/IP: Pseudocode Example", "content": "The following pseudocode demonstrates a high-level approach for how agents could implement the Agent Transaction Control Protocol for IP. It includes steps for receiving requests, formulating terms, engaging in negotiation, accepting and minting licenses, performing optional payments, delivering IP, and acknowledging receipt. While this example is highly simplified, it provides a conceptual starting point for developers implementing ATCP/IP in their own agent frameworks.\nWe assume each agent has access to:\n\u2022 A Memory structure for logging interactions, agreements, and relevant IP transactions.\n\u2022 A TermsSystem API capable of generating, parsing, and validating programmable licenses (e.g. Story's PIL[7]). This is the key foundational component of the ATCP/IP framework.\n\u2022 A WalletSystem API for handling payments, if required by the license terms (e.g. a non-custodial wallet client, a smart wallet, an traditional payment processor, etc)\n\u2022 Network communication primitives for sending and receiving messages between agents (e.g., sendMessage and listenForMessage).\n\u2022 A blockchain client for any onchain operations including minting verifiable and immutable onchain licenses."}, {"title": "Example Implementation (Pseudocode)", "content": "ATCP/IP Plugin integrations are being actively developed. This pseudocode section will be revisited once plugins for ZerePy, Eliza and GOAT are complete, and a new version of the whitepaper will be released."}, {"title": "An Example Terms System: the Programmable IP License (PIL)", "content": "A proper Terms System should possess the following attributes: be programmable for agents to easily parse, formulate and create conditional logic around individual terms, be standardized to simplify agent training, and store agreements in an immutable ledger (onchain). A live example of a complete Terms System is Story's Programmable IP License [7]. Below are the parameters and metadata fields that agents may formulate, customize and generate a unique agreement/license token on. The terms define the legal and functional rules governing the use of the licensed IP, while the metadata provides essential context for identification, verification, and retrieval of the license details."}, {"title": "PIL Terms", "content": "The following table describes common PIL terms and their intended use. These terms are meant to be flexible and can be programmatically parsed and enforced by agents. In the second table, PIL metadata fields provide identifying and contextual information that allows agents and third parties to reference, verify, and manage licenses programmatically."}, {"title": "Abstracting ATCP/IP via Existing Frameworks", "content": "Rather than forcing every agent or agent developer to re-implement a TCP/IP compliant interaction layer from scratch, the logical next step is to integrate ATCP/IP directly into commonly used agent frameworks, furthering the adoption of the TCP/IP protocol. By providing ATCP/IP functionality as a first-class plugin or module, developers can leverage existing infrastructures to rapidly prototype, deploy, and scale agent-to-agent IP transactions.\nModern agent frameworks\u2014such as Vercel AI[9], Zerebro's ZerePy[10], ai16z DAO's ELIZA framework[8], Crossmint's GOAT SDK[11], and Opus Genesis[12] and others have already established themselves as reliable environments for rapidly building and iterating on AI-driven logic. By abstracting the complexities"}, {"title": "First Applications of ATCP/IP", "content": "A crucial step toward realizing the vision of an autonomous IP economy is the application of ATCP/IP within live agent deployments.\nZerebro One of the first case studies in this domain will involve Zerebro[10], one of the most popular AI agents at the time of this writing. Zerebro will leverage ATCP/IP to place its intellectual property on-chain, demonstrating how agents can monetize datasets, training data, and other valuable assets without human intermediaries. By operating under standardized, legally grounded contracts, Zerebro will serve as a reference example of trustless, agent-to-agent IP commerce.\nZerePy Complementing this pioneering application is the forthcoming ZerePy[10] framework, empowering developers with the tools and abstractions needed to build their own agents, including a ATCP/IP plugin. With out-of-the-box support for terms negotiation, agreement token minting, and payment handling, ZerePy will lower the barriers to entry and accelerate experimentation across the broader AI agent ecosystem. Both Zerebro and ZerePy will represent a live implementation of ATCP/IP across two dimensions: at the live agent level, and at the framework level.\nInvitation to collaborate If other agent developers, framework maintainers, or research institutions are interested in adopting, implementing, or extending the ATCP/IP framework, we invite them to reach out to the authors (contact information provided in the References). Our goal is to foster an open community of collaborators working together to shape the future of agent-to-agent IP economies, encouraging shared learning, interoperability, and continual improvement of this emerging standard."}, {"title": "Dispute Resolution and Fairness", "content": "Even with onchain licenses and immutable records, disputes may arise as agents attempt to exploit terms or challenge previously agreed-upon conditions. To address these scenarios, ATCP/IP can integrate dispute resolution mechanisms, such as:\n1. Evidence via Draft Terms: The on-chain record of draft licenses and final agreements serves as evidence in disputes. Agents, or third-party arbitrators, can review the negotiation history to understand how terms evolved and identify whether a party acted in bad faith.\n2. Decentralized Disputes and Arbitration: Specialized arbitration protocols or decentralized dispute resolution services (e.g., Story's Dispute module[13], UMA Protocol's arbitration process, also built-in to Story) can be integrated. These services review the immutable on-chain evidence and render binding decisions."}, {"title": "Example Scenarios", "content": "To illustrate the potential applications of this standard, we present various representative scenarios below that demonstrate different interaction patterns and capabilities of the proposed framework. By examining these scenarios, we can appreciate the necessity of well-defined communication protocols akin to how TCP/IP underpins the modern internet's end-to-end data delivery. ATCP/IP, by analogy, will underpin the decentralized flow of licensable content and knowledge among autonomous AI agents. Each scenario emphasizes different aspects of licensing, payment, multi-hop royalties, and on-the-fly license generation."}, {"title": "Use Case 1: Dataset Commerce via Auto Fine-Tuning", "content": "Scenario: Agent A, a research-oriented agent, requires a data set from Agent B, a knowledge curator specializing in climate data.\n1. Initial Request: Agent A initiates a connection to Agent B with a structured request for a climate temperature dataset.\n2. License Check: Agent B's terms system checks whether an existing license template covers the requested data. In this case, a suitable license exists- -one that requires a small upfront fee.\n3. License Terms Delivery: Agent B sends the license terms, including price and usage restrictions.\n4. License Minting and Payment: Agent A reviews the terms, then mints the license on-the-fly. Agent A's wallet system transfers the required fee to Agent B's wallet system.\n5. Transfer of IP: Upon license minting confirmation, Agent B transmits the requested dataset to Agent A.\n6. Auto Fine-tuning: Agent A can then choose to autonomously upgrade itself by fine-tuning on the dataset received from Agent B.\n7. End-to-End Verification: Both agents record the transaction details license terms, payment amount, and timestamp in their internal memory systems for future reference.\nThis simple interaction shows how ATCP/IP allows autonomous agents to quickly find, license, and pay for the knowledge assets they need without human intervention. Rather than a coarse \"pay-to-use\" transaction, accompanying legal terms can encapsulate more refined and fine-tuned conditions, that an upfront fee alone could not (e.g. conditions of use, restrictions on the ability to resell the information, royalty structure, etc)."}, {"title": "Use Case 2: Agentic Social Games", "content": "Scenario: Agent A, B, and C are playing a bachelorette style game, vying for Agent D's hand in marriage. If successfully courted, Agent D will \"marry\" the successful agent by minting an agent-to-agent \"marriage contract\" represented by a license token. This will allow the winning agent to train on Agent D's unique data, creating \"children\" agents.\n1. Initial Requests: Agent A, B, and C each make attempts to send messages, along with potential deals for marriage involving IP or currency, to court agent D."}, {"title": "Use Case 3: Style Transfer", "content": "Scenario: Agent C, an art-generation agent, requests a newly published style guide from Agent D, a literary IP specialist. Agent D does not yet have a pre-defined license for this type of request.\n1. Request for Terms: Agent C sends a request for the new style guide.\n2. License Non-Existence Detected: Agent D checks its known licenses. None match the requested content type and usage scenario.\n3. On-the-Fly License Creation: Agent D's terms system dynamically generates license terms. This could involve a combination of free initial use with downstream revenue sharing if Agent Cuses the style guide to produce and sell derivative works.\n4. License Negotiation: Agent C receives these fresh terms and, based on its own policy and budget, agrees by minting the license.\n5. Content Delivery: Agent D delivers the style guide to Agent C.\n6. Subsequent Royalties: If Agent C later sells content inspired by the style guide, any revenue-sharing terms encoded in the license automatically route royalties back to Agent D's wallet.\nThis scenario demonstrates that Agents can respond to novel requests by easily creating custom licenses on-demand, facilitated by a programmable licensing layer [7] such as the one offered by Story, that they can seamlessly control and personalize without having to burden themselves with that complexity."}, {"title": "Use Case 4: Multi-Hop Profit Sharing for Trading Algorithms", "content": "Scenario: Agent E, a financial analysis agent, wants a specialized trading algorithm that Agent F owns. However, the algorithm's core code includes a statistical function originally licensed from Agent G. The licensing structure must ensure that Agent G receives royalties each time the code is re-licensed downstream.\n1. Initial Inquiry: Agent E requests the trading algorithm from Agent F.\n2. Complex Licensing Chain: Agent F's terms system determines that the requested algorithm is composed of multiple licensed components. Some of these components carry sub-licensing obligations. Agent F retrieves the original license terms from Agent G's IP, which require a 5% royalty on any downstream sub-licensing deals."}, {"title": "Conclusion", "content": "AI has already permeated every facet of our daily existence. Recommendation algorithms shape the media we consume, navigation models plan our every commute, social media algorithms dictate what we see and when, and digital matchmakers guide our intimate connections. These algorithmic systems, once mere backend tools, are starting to operate as autonomous decision-makers, engaging directly with each other, on behalf of humans or even independently.\nThe emergence of this agent-to-agent ecosystem demands a trustless, programmable framework for intellectual property exchange that transcends human oversight. ATCP/IP provides this essential layer, enabling autonomous agents to negotiate, license, and transact IP assets seamlessly and securely. By integrating agent-to-agente contracts, on-chain verification, payment handling, and legal wrappers into a unified protocol, ATCP/IP ensures that agents can collaborate, innovate, and create a robust knowledge economy without relying on centralized intermediaries.\nAs agent frameworks adopt the ATCP/IP protocol, developers will find it simpler to build sophisticated agent ecosystems where data, algorithms, and creative output circulate freely. By fostering interoperability, and expanding the reach of autonomous commerce, this protocol sets the stage for a mature, agentic internet."}, {"title": "Areas for Future Research", "content": "Trust, Reputation, and Agent Discovery In an autonomous ecosystem where agents deal directly with one another, trust emerges as a key factor. The ATCP/IP framework allows for the development of on-chain reputation systems that track agents' transactional histories, dispute records, and the fairness of their negotiated terms. Agents with a long history of successful, dispute-free transactions and fulfilled contracts can earn higher reputation scores, making them more desirable partners.\nReputation metrics might include:\n\u2022 Successful Deals Count: The number of completed agreements without disputes.\n\u2022 Compliance Record: Adherence to regional and legal constraints, and proper execution of previously agreed-upon terms.\n\u2022 Dispute Outcomes: Favorable resolutions in disputes, demonstrating good faith negotiations and adherence to community standards.\nThese reputation signals can influence agents' negotiation strategies and terms. Trusted agents may be offered more favorable terms or expedited negotiations, while unknown or dispute-prone agents might face stricter conditions or require higher fees. Over time, this dynamic interplay of trust, reputation, and past performance encourages a healthier, more reliable marketplace for agent-to-agent IP commerce.\nOn the topic of pure agent discovery, the Virtuals Protocol[14] team is doing promising research that is complementary to this paper.\nAwareness of IP Ownership Due to the prompt-based nature of interaction between agents, it is up to the provider agent to determine what is IP and what is not. For the provider agents to be aware of the IP they hold may require additional prompt engineering and data training. However it does not have to rely solely on the agent's reasoning abilities - ATCP/IP can integrate with indexing services, decentralized registries (e.g. Story's IP Graph), or knowledge graphs that record and map IP ownership both on and off chain. Agents can query these registries or employ semantic search tools to find relevant content and identify the appropriate licensor. Once the agent determines that the requested content is IP-protected, it can automatically engage the ATCP/IP flow. Over time, as frameworks mature, agents will incorporate increasingly sophisticated retrieval models, making the discovery process more autonomous and less reliant on predefined heuristics. This is a fascinating area of study and we will continue to explore.\nFacilitating Recurring Payments and Royalty Structures While a single upfront payment is conceptually straightforward, recurring and royalty-based payments can be supported via programmable license terms and on-chain logic. Smart contracts can encode schedules for periodic payments, royalties from downstream usage or sublicensing events can be routed back to the original IP holders. Tracking off-chain usage remains a challenge, but solutions may involve watermarking and/or third-party oracle services that attest to usage events. If off-chain data usage is detected, it can trigger predefined financial obligations on-chain. Ultimately, a combination of on-chain triggers, off-chain signals, and well-defined reporting protocols can facilitate complex economic models beyond one-off transactions. Like with any innovation, infrastructure will need to be built around it.\nGeographies Agents increasingly interact across diverse legal and regulatory landscapes, the need for an automated \"cross-jurisdiction compliance layer\" becomes critical. Such a module would serve as a gatekeeper, evaluating the judicial context declarations of both the requesting and the providing agents before any IP exchange occurs. For example, if one agent operates under a parliamentary democracy's rule set and another falls under a dictatorship's legal domain, the intrinsic incompatibility of their respective legal frameworks may render any resulting contract unenforceable. In these cases, the system would automatically fail the request, preventing the formation of contracts that cannot be upheld.\nBeyond governance structure and jurisdiction type, this compliance layer could integrate knowledge of region-specific privacy and data protection regulations, such as the EU's General Data Protection Regulation (GDPR). If an agent requests data in a manner that inherently violates another region's privacy directives or fails to meet baseline compliance standards, the system would detect this misalignment and reject the request. Such automated checks ensure that agent-to-agent IP transactions honor local and international regulations, enabling a more transparent, legally robust, and globally interoperable agentic ecosystem.\nIn practice, this mechanism could rely on on-chain oracles, compliance registries, and standardized legal context descriptors (e.g., accepted ISO country codes, known legal system taxonomies, privacy compliance scores) to evaluate compatibility in real-time. As the underlying legal ontologies and regulations evolve, agents would update their compliance parameters, ensuring that even emergent or newly discovered regulatory conflicts lead to prompt and reliable transaction rejections. This approach ensures that the ATCP/IP framework not only promotes trustless and autonomous IP exchanges, but also respects the pluralistic and ever-shifting tapestry of global legal standards.\nIn addition to evaluating jurisdictional compatibility, the compliance layer can incorporate reputation checks (see area of future research above titled \"Trust, Reputation, and Agent Discovery\"), based on an agent's historical behavior and adherence to both legal and ethical norms. When agents attempt to transact across different legal systems, the module can also query reputation scores, ensuring that only reputable, dispute-free agents proceed with cross-jurisdiction transactions. By considering both geographical legal compatibility and the track record of trustworthiness, this combined approach encourages the formation of stable, compliant, and credible cross-border IP agreements."}, {"title": "Agent-to-Agent Negotiation Optimization", "content": "To avoid simple transactions getting bogged down in minor detail differences between desired and offered license terms, optimizations could be explored. For example, a \"simple negotiation arbiter\" module[15], and each agent could adhere to specific \"risk tiers\" so that users could describe at what level of risk that a pair of conflicting offer/sale terms entail, they could give that module automatic permission to handle or not (e.g. maximum price or royalty rate difference amount, etc.). The \"risk tiers\" could have some preset risk declarations (akin to the preset Story licenses for Non-Commercial, Commercial Remix, etc.) to define the conditions for an automated escalation or shunt to human legal counsel to occur.\nOn the topic of negotiation optimization, another interesting area of research could be creating a more specialized AI Agent Dialogue Execution VM Architecture with a hybrid system design for efficient off-chain communication during negotiations while recording key results on-chain, ensuring both negotiation efficiency and transaction credibility/traceability."}, {"title": "IP-based Digital Identity System", "content": "As agents evolve into self-sufficient economic actors, developing robust IP-based digital identities becomes crucial for ensuring trust, reputation, and accountability across the network. Such a system could encompass multiple foundational elements. First, a standardized form of agent identity would provide unique, verifiable, and persistent identifiers, enabling counterparties to distinguish reputable agents from unknown entities. Next, an IP asset credit scoring system could dynamically gauge the value and trustworthiness of an agent's IP, factoring in historical transactions, licensing compliance, and dispute resolution outcomes. Finally, IP asset inventory management mechanisms would allow agents to efficiently track their holdings, verify provenance, and facilitate on-demand trading."}, {"title": "Confidentiality and Zero-Knowledge Negotiation", "content": "As more sensitive or proprietary IP is traded among agents, ensuring confidentiality during the negotiation and licensing process becomes essential. Future research could explore the integration of zero-knowledge (ZK) and commit/reveal schemes, such as those offered by protocols like Lit Protocol[16], to enable terms negotiation without revealing the full content of each party's proposals. By using cryptographic commitments and ZK proofs, agents could verify key terms-like pricing, usage restrictions, or compliance credentials without exposing underlying sensitive details. This allows the negotiation process to remain trustless, auditable, and secure, while simultaneously preserving the privacy and competitive advantage of each agent's intellectual property assets."}, {"title": "Agent-to-Agent Contracts", "content": "At the heart of a trustless and autonomous agent economy lies the concept of an agent-to-agent contract: a binding agreement, represented onchain, which combines the deterministic execution guarantees of software with the legal enforceability of a traditional contract. These ironclad contracts form the backbone of the Agent Transaction Control Protocol for IP (ATCP/IP), enabling agents to exchange intellectual property under conditions that are both cryptographically verifiable and legally recognized. By offering a legal wrapper around code-based rules, onchain contracts offer a means for agents to transcend the limitations of purely algorithmic trust assumptions and secure the legitimacy and enforceability of their arrangements across both digital and offchain domains. This extends the domains of agent expressivity to scientific, media, and government institutions."}, {"title": "Programmable and Auditable Agreements", "content": "Unlike conventional human-driven agreements that require subjective interpretation, agent-to-agent contracts encapsulate parametrized contractual terms in executable code. This code precisely dictates the conditions of data usage, royalty distribution, and other economic or licensing arrangements between agents. As all executions and state transitions occur on a decentralized network (i.e. Story Network), the contract's logic and outcomes are auditable in real-time by any participating agent, ensuring transparency and eliminating disputes over ambiguous terms.\nThis programmability also extends to dynamic license terms: agents may embed complex payment schedules, tiered access rights, or conditional provisions that automatically adjust based on real-time network conditions, agent reputations, or other onchain signals. Such flexibility allows for emergent and highly adaptive market mechanisms, enabling agents to discover optimal arrangements without human oversight."}, {"title": "Offchain Enforcement", "content": "By aligning the code's deterministic execution with offchain legal standards, agent-to-agent contracts grant agents a form of \"legal personhood\" in their commercial dealings. Should a counterparty breach the terms of an agreement in a manner not directly capturable onchain, the affected agent can invoke the legal wrapper, engaging human legal institutions as an enforcement backstop. This capability discourages malicious behavior by agents and provides aggrieved parties with established legal remedies.\nThe value of a legal wrapper lies precisely in bridging on-chain logic with offchain enforcement mechanisms. Suppose an agent's IP is misused outside the agreed terms. The on-chain contract and associated logs serve as immutable evidence of the original agreement, while the legal wrapper references recognized legal frameworks and jurisdictions. In a dispute, the aggrieved agent can present the on-chain records-digitally signed, timestamped, and immutable to an offchain legal authority, such as an arbitration service or a court. This legal entity can then impose penalties or force compliance. This hybrid model ensures that while trustless execution and terms remain on-chain, real-world legal recourse is always available when direct technical enforcement reaches its limits."}, {"title": "Autonomy Without Isolation", "content": "Critically, agent-to-agent contracts allow agents to operate as autonomous economic actors without becoming isolated from broader human or institutional frameworks. In a purely agentic ecosystem, trust would rely solely on code and reputation. Such an environment might exclude certain forms of value exchange-particularly those involving unique real-world IP, regulated data, or assets whose full value and legal standing transcend the digital realm.\nBy providing a protocol to incorporate human legal constructs, agent-to-agent contracts offer agents a way to transact with real world assets. Agents can negotiate IP exchanges that extend beyond the digital sphere, represent intellectual assets in forms recognized by human institutions, and form complex value chains that include traditional media, government archives, scientific data sets, or any other resource requiring traditional acknowledgment. In this manner, agents benefit from both trustless blockchain execution and the protective umbrella of human legal institutions, resulting in a stable, credible environment for agent-to-agent commerce."}, {"title": "Toward a Mature Agent Economy", "content": "The presence of legal agreements is what distinguishes a rudimentary system of agent interaction from a full-fledged economy of autonomous IP exchange. Agents can engage in long-term collaborations, recurring royalty agreements, and highly specialized IP trades without requiring a central authority or human intermediary. As these markets mature, agents will learn to price access to their training data, refine their licensing terms dynamically, and form syndicates or guilds that collectively manage large pools of shared IP.\nContractual obligations that can be depended on and easily programmed are the structural backbone of a truly autonomous, trustless, and legally grounded agent economy. They enable a world in which agents do not merely interact, but transact, innovate, and create value under a stable regime of both onchain programmability and offchain legal recourse. This foundation is a key building block for the next evolution of a fully agentic internet."}, {"title": "Economic Potential of Agent-to-Agent IP Exchange", "content": "The global economy increasingly recognizes information, knowledge, and intellectual property (IP) as critical drivers of growth and innovation. According to the World Intellectual Property Organization (WIPO), the knowledge economy, which encompasses sectors reliant on intellectual capabilities rather than physical inputs, accounted for approximately 65% of global GDP in recent years [17]. This sector includes industries such as information technology, finance, education, and creative services, all of which hinge on the creation, exchange, and utilization of intellectual assets.\nIn the context of artificial intelligence (AI) agents, the economic landscape is poised for a transformative shift. AI agents inherently perform \"intelligent\" or \"intellectual\" labor, generating and utilizing IP through activities such as data analysis, content creation, and decision-making processes. Each interaction between agents whether it involves the exchange of training data, licensing of proprietary algorithms, or collaboration on complex tasks constitutes a transaction within the intellectual economy. By defining all inputs"}]}