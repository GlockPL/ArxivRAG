{"title": "Peaking into the Black-box: Prediction Intervals Give Insight into Data-driven Quadrotor Model Reliability", "authors": ["J.J. van Beers", "C.C. de Visser"], "abstract": "Ensuring the reliability and validity of data-driven quadrotor model predictions is essential for their accepted and practical use. This is especially true for grey- and black-box models wherein the mapping of inputs to predictions is not transparent and subsequent reliability notoriously difficult to ascertain. Nonetheless, such techniques are frequently and successfully used to identify quadrotor models. Prediction intervals (PIs) may be employed to provide insight into the consistency and accuracy of model predictions. This paper estimates such PIs for polynomial and Artificial Neural Network (ANN) quadrotor aerodynamic models. Two existing ANN PI estimation techniques - the bootstrap method and the quality driven method - are validated numerically for quadrotor aerodynamic models using an existing high-fidelity quadrotor simulation. Quadrotor aerodynamic models are then identified on real quadrotor flight data to demonstrate their utility and explore their sensitivity to model interpolation and extrapolation. It is found that the ANN-based PIs widen considerably when extrapolating and remain constant, or shrink, when interpolating. While this behaviour also occurs for the polynomial PIs, it is of lower magnitude. The estimated PIs establish probabilistic bounds within which the quadrotor model outputs will likely lie, subject to modelling and measurement uncertainties that are reflected through the PI widths.", "sections": [{"title": "I. Introduction", "content": "DATA-DRIVEN system identification techniques are often employed to develop models of highly non-linear systems, such as the quadrotor. These data-driven approaches to quadrotor aerodynamic model identification are convenient and attractive due to limited knowledge on analytical descriptions of the quadrotor [1, 2]. Subsequently, many quadrotor models have been successfully identified in literature using a plethora of grey and black-box system identification techniques [1, 3, 4].\nOf particular note are the use of polynomial step-wise regression and Artificial Neural Networks (ANNs). Sun et al. [1] construct polynomial models of the quadrotor for the high-speed (14 ms\u00af\u00b9) flight regime through step-wise regression. By exploiting knowledge on influential states of the system, informed choices on the candidate regressors are made. Subsequently, the stepwise algorithm sequentially selects the best model structure, hence the term 'grey'-box. Even though the selected regressors are visible in the final model, their selection is inherently phenomenological. Hence, these models occasionally produce unexpected predictions, particularly when noise is present in the system. ANNs are an increasingly popular modelling choice by virtue of their generalizability and aptitude for capturing unknown non-linearities [3]. Consequently, they are employed to approximate dynamics in unexplored and extreme regions of the flight envelope. Take, for instance, the use of ANNs to facilitate quadrotor model identification on high-speed flight data (up to 18 ms\u00af\u00b9) by Bauersfeld et al. [4]. However, as a black-box modelling technique, it is ambiguous as to how exactly the ANN inputs (e.g. system states) interact to produce the model outputs. Evaluating the reliability and validity of the resultant ANN models is challenging and proves to be a potential barrier to their widespread use in the aerospace industry [5]. Indeed, uncertainty in the inputs may culminate in some unexpected model outputs for similar (e.g. noisy) inputs [6]. Ensuring safety and reliability are paramount to the accepted use of autonomous quadrotors and, thus, this lack of model reliability measures for such grey and black-box models needs to be addressed.\nOne way to describe the reliability of a model's prediction is through its confidence in that prediction. To this end, the associated prediction intervals (PIs) - the interval wherein a future observation will lie with a given probability (i.e. confidence) - may be used as a proxy for reliability. PIs account for both variations due to model uncertainty and variations due to measurement uncertainty (e.g. noise), up to a specifiable confidence level (typically 95%). Therefore, the often-used confidence interval (CI), which describes only model uncertainty, is a component of the PI."}, {"title": "II. Derivation of Quadrotor Model Inputs", "content": "As this paper is concerned with the validity of PIs for quadrotor models, it is important to first provide context on the system itself. This then motivates the choices for the necessary inputs variables of the aerodynamic models.\nFollowing Newton's laws of motion, eq. (1) and eq. (2) can be derived to describe the kinematics of the quadrotor in the body reference frame, {B} (see fig. 1). Here, m denotes the mass of the quadrotor and I, its moment of inertia.\nVB = [u, v, w]T represents the body velocity and \u03a9\u0432 = [p,q,r]T the body rotational rates. FB and MB describe the (aerodynamic) forces and moments acting on the quadrotor body. The rotational matrix from the North-East-Down\n$m (\\dot{V_B} + \\Omega_B \\times V_B) = R_{BE}mg + F_B$\n$\\dot{I\\Omega_B} + \\Omega_B \\times I\\Omega_B = M_B$\nSubsequently, aerodynamic models of the quadrotor should incorporate the body velocity, VB, and the body rotational rates, \u03a9\u0392.\n$T = k_0 \\sum_i \\omega_i$\nAnalytical models of the quadrotor provide further insight into useful input variables. For example, eq. (3) describes a simple model of the total thrust generated by the rotors [2, 11]. w\u2081 denotes the angular velocity of the ith rotor\u2020 and ko is a constant for a given quadrotor which may be identified from hovering data. Note that, per the definition of {B} in fig. 1, the thrust vector points in the negative ZB direction.\n$\\omega_{avg} = \\frac{\\sum_i \\omega_i}{4}$\nConsequently, the rotor speeds, w, are informative for aerodynamic quadrotor models. However, to avoid over-fitting, their aggregated influence (through eq. (4) [1]) is used instead. Likewise, the differential thrust between the rotors can account for differences between the rotors. Following the quadrotor layout in fig. 1, the so-called control rolling, pitching, and yawing moments are defined in eq. (5), eq. (6), and eq. (7) respectively. Here, SR \u2208 {\u22121,1} describes the rotation direction of the first rotor (such that clockwise = 1).\n$U_p = (\\omega_1 + \\omega_4) \u2013 (\\omega_2 + \\omega_3)$\n$U_q = (\\omega_1 + \\omega_2) \u2013 (\\omega_3 + \\omega_4)$\n$U_r = S_R [(\\omega_1 + \\omega_3) \u2013 (\\omega_2 + \\omega_4)]$\nFurthermore, literature on analytical quadrotor models [2, 11] also emphasize the importance of the angle of attack of the rotor plane, the influence of the induced velocity, and the effects of blade flapping on the aerodynamics of the quadrotor. While the angle of attack itself is difficult to obtain accurately for the quadrotor, the attitude angles (i.e. [\u03c6, \u03b8,4]7) may instead be used as a proxy of this, assuming that |0| < \ud480 and || < \ud480. The quadrotor attitudes are represented by their trigonometric identities (i.e. sin (\u00b7) and cos (\u00b7)) to accommodate their periodic nature. This also bounds, and effectively normalizes, the attitude. The induced velocity describes the added velocity of the airflow as it passes through the rotors and may be computed through eq. (8) where vh denotes the induced velocity during hover [2].\n$v_{in}^2 = \\sqrt{(V cos \\alpha_r)^2 + (v_h \u2013 V sin \\alpha_r)^2}$\nThe effects of blade flapping are related to the advance ratios [2] - a variable which contextualizes the body velocities with respect to the rotor tip velocities. Equation (9) describes how these advance ratios may be computed.\n$\\mu_x = \\frac{u}{\\omega_{avg} R}$\n$\\mu_y = \\frac{v}{\\omega_{avg} R}$\n$\\mu_z = \\frac{v_{in}}{\\omega_{avg} R}$\nTherefore, the basis of input states for the quadrotor aerodynamic models identified in this paper are summarized in eq. (10).\nX = [u, v, w, vin, p, q, r, wavg, sin \u00a2, cos \u00f8, sin 0, cos 0, Up, Uq, Ur, \u03bcx, y, z, vin]\nIt is assumed that the rotors are aligned with the XB-\u0443\u0432 plane."}, {"title": "III. Prediction Interval Estimation Methods", "content": "\u00ea\nAlthough regression aims to approximate a dependent variable given a set of predictors, measurements of these are often contaminated with bias and noise. Further uncertainties and errors arise from modelling misspecification. Both sources of uncertainty induce a variation in model predictions, which may be modelled through eq. (11) [6]. Here, \u03c3 encompasses the uncertainty associated with the measurements (i.e. dependent variable) and o denotes the variance due to modelling misspecification and uncertainty. The total variance, \u03c3\u00b2, may then be used to construct the prediction intervals (PIs) for a specifiable confidence level, 1 \u2013 a. Typically, a = 0.05 is used, leading to 95% intervals. Note that, since the PIs consider both and o, they encompass the associated confidence intervals (CIs).\n$\\sigma^2 = \\hat{\\sigma}_\\epsilon^2 + \\hat{\\sigma}_\\eta^2$\nThe corresponding PI bounds, for a given measurement value, yi, and accompanying total variance, 7, can be obtained through eq. (12). In eq. (12), t t gives two sided test statistic for the chosen confidence level, 1 a, and n gives the degrees of freedom (i.e. number of observations of the sample, i).\n1-\u03b1/2\nN-2\n1-\u03b1/2\n$L_i (x_i) = \\hat{y_i}-t_{1-\\alpha/2,\\frac{N}{n}} \\sqrt{\\hat{\\sigma}_T^2}$\n$U_i (x_i) = \\hat{y_i} + t_{1-\\alpha/2,\\frac{N}{n}} \\sqrt{\\hat{\\sigma}_T^2}$\nThe PI coverage probability (PICP), defined in eq. (13), accesses the validity of a PI by verifying if the desired confidence level is reached [6, 8]. N denotes the number of test data points and ci describes if the measurement is contained within the bounds of the PI (where Li = lower bound, U\u2081 = upper bound). Thus, PIs are considered valid if PICP \u2265 1 \u2013 a. Note that the PICP metric alone imposes no requirement on the width of the PIs, which may be impractically wide.\n$PICP = \\frac{1}{N} \\sum_{i=1}^{N} C_i$\nwhere:\n$C_i =\\begin{cases} 1, y_i \\in [L_i, U_i] \\\\ 0, otherwise \\end{cases}$\nTherefore, complimentary to the PICP, the mean PI width (MPIW) is often used to parameterize the width of the PIs and is typically normalized with respect to the range of the measurement data. The MPIW is given by eq. (14). Both the PICP and the MPIW should be used in tandem to describe the overall PI quality, seeing as the deficiencies of one metric are perfectly accommodated by the other [7]. A high quality PI is thus valid, yet narrow.\n$MPIW = \\frac{1}{N} \\sum_{i=1}^{N}(U_i-L_i)$\nConveniently, for polynomial models, the total variance associated with a prediction may calculated through eq. (15) under the assumptions that the measurement error term, e, is zero-mean, independent, and identically distributed. In eq. (15), xo denotes the input data regressor matrix for which predictions should be made (i.e. to predict yo), X represents the regressor covariance matrix used for training the model, I gives the identity matrix and 2 may be approximated through eq. (16).\n$\\hat{\\sigma}_T^2 = \\hat{\\sigma}_\\epsilon^2 (1 + x_0^T (X^T X)^{-1} x_0)$\n$\\hat{\\sigma}_\\epsilon^2 = \\frac{1}{N_t-2} \\sum_{i=1}^{N_t} \\hat{\\epsilon}_i^2$\nIn eq. (16), Nt represents the number of samples used for training and \u00ea\u2081 = yi - \u0177i denotes the residual error for training sample, i. The computed 0 may then be inputted into eq. (12) to construct the polynomial PI."}, {"title": "B. ANN: Bootstrap", "content": "The bootstrap method exploits the inherent stochasticity of the ANN training process and can be applied to an already trained ensemble of ANNs. The spread of predictions across an ensemble of ANN models, initialized with distinct weights and trained on different subsets of the training data set, gives an approximation of the model misspecification uncertainty [6, 8]. The associated variance may be constructed through eq. (17) [6], where B gives the number of ANN models, \u0177\u00a1 denotes the ensemble averaged prediction of the measurement. For this reason, the bootstrap method can only be applied to an ensemble of ANNs. Although the appropriate number of ensembles depends on the system, increasing the number of ensembles does not always lead to improved performance [6].\n$\\hat{\\sigma}_{Yi}^2 = \\frac{1}{B-1} \\sum_{j=1}^B (\\hat{y_i}^j-\\hat{y_i})^2$\nThe variance due to the measurement errors, \u03c3\u00b2, is typically unknown and cannot easily be obtained explicitly. Instead, an additional ANN may be used to (implicitly) estimate this variance. Through the residuals between the model predictions and the measurement data, a new data set, D, = {xi, r}}1, }21, may be constructed linking the inputs, xi, to the variance residuals, r, defined in eq. (18) [6]. Note, that the data used to derive D, should be distinct to that used for training the initial ensemble of ANNs.\n$r_i = max((y_{m,i} \u2013 \\hat{v_i})^2 - \\hat{\\sigma}^2_{\\epsilon,i}),0)$\nThe o -predictor ANN may then be used to approximate o by minimizing the cost function defined in eq. (19) [6]. Note that this cost function is derived assuming that \u03c3\u03b5\u03b9 is Gaussian. Moreover, due to the approximation of o through the residual, r, the Bootstrap method tends to estimate wider PIs [6].\n$ \\xi = \\frac{1}{2} \\sum_{i=1}^{m} [-1n(\\sigma_{\\epsilon,i}^2) + \\frac{r_i}{\\sigma_{\\epsilon,i}^2}]$"}, {"title": "C. ANN: Quality Driven", "content": "Instead of estimating the PIs after-the-fact, another approach is to estimate them directly [7]. This is advantageous in that the PI bounds are obtained directly and no assumption needs to be made on their underlying distribution (e.g. eq. (12) is not used). Furthermore, the PI quality metrics (i.e. PICP and MPIW) may be considered during training. Such an approach is outlined by Pearce et al. [8] wherein a 'quality-driven' (QD) loss function incorporating proxies of the PI quality metrics are used to train an ensemble of feed-forward neural networks (FNNs). The output of each network are the upper and lower bounds of the PI associated with a prediction. The prediction itself may be reconstructed from these bounds, for example, by assuming their midpoint. The QD loss function is described in eq. (20).\n$QD = MPIW_C + N\\lambda\\ max\\ (0,(1-\\alpha) - PICP_S)^2$\nIn eq. (20), MPIWC \u2286 MPIW describes the MPIW only of samples which encompass their measurement value (i.e. MPIW for samples where the measurement lies outside the PI bounds are ignored). N is the batch size used for training and A is a tunable parameter that scales the importance of the PICP condition. PICP, represents the 'soft' PICP, defined in eq. (21), where S(\u00b7) denotes the sigmoid function and s is some softening factor. 'softening' of the PICP is encouraged to mitigate the non-linearity of the second term in eq. (20) for compatibility with the optimizers of existing neural network library implementations (e.g. tensorflow). Pearce et al. [8] suggest a value of s = 160 for consistent performance in regression tasks.\n$PICP_S = \\frac{1}{N} \\sum_{i=1}^{N} S(s(y_i - L_i)) \\cdot S(s(U_i - y_i))$"}, {"title": "IV. Numerical Validation of Prediction Intervals", "content": "In order to determine if the ANN PI estimation techniques do indeed produce valid PIs for the quadrotor, a numerical validation scheme is constructed. Equivalent polynomial models with associated PIs are also evaluated for reference.\nFor all modelling techniques, individual aerodynamic models are identified for the forces and moments of each of the axes (i.e. 6 models total, per identification technique). Moreover, a prediction interval criterion of 95% is specified for each PI estimation technique (i.e. each of the estimated PIs should contain at least 95% of the variation due to uncertainties in the data). The model identification scripts are programmed in Python (version 3.8.13).\nPolynomial aerodynamic models are identified through stepwise regression [12] following the same procedure as outlined by Sun et al. [1] for their grey-box models. The basic principle of stepwise regression is to identify the best model structure given a pool of candidate regressors. This is accomplished by sequentially adding the best-fitting regressor, orthogonalized with respect to the regressors currently in the model structure, and evaluating the current model structure for redundancy after regressor additions. In consultation with the authors of [1], the rotor speeds are also incorporated in the candidate regressors of F\u2082 for improved performance. The candidate regressors, along with the final model structures, can be found in appendix A.A.1 and appendix A.A.3 respectively.\nThe architectures of the ANN models for both PI estimation techniques are identical with only method-specific differences. Inspired by the ANNs of [3], all ANN models used here are composed of an ensemble of 10 dense FNNs, each with an input layer, a single hidden layer with 20 neurons, and an output layer. ReLU and a linear function constitute the hidden layer and output layer activation functions respectively. ADAM is used as the optimizer. The mean-squared-error and QD cost functions are employed for the bootstrap and quality-driven methods respectively. All ANNs are trained for 50 epochs. For the bootstrap method, an additional FNN with identical structure to the base ANNs is used, with the exception of 25 hidden neurons and a modified cost function given by eq. (19). tensorflow (version 2.2.0) is used to construct and train the ANNs. The input states for each ANN model can be found in appendix A.A.2."}, {"title": "B. Data Generation", "content": "An existing high-fidelity quadrotor simulation, developed by Sun et al. [10] in MATLAB\u00ae(version R2022a), is used to generate mock-flight data for quadrotor model identification and PI numerical validation under consistent conditions. The simulation model itself is a rotor-local polynomial model (i.e. aerodynamic forces and moments are modelled per rotor), whereas the models identified in this paper consider only their cumulative effect on the quadrotor frame (i.e point-mass forces and moments). This discrepancy introduces some model uncertainty, which should be accountable by the estimated PIs.\nIn the simulation, users can specify positional (XE, YE, ZE) and yaw angle (4) commands. These are used to generate a collection of simulated flight states and aerodynamic forces & moments for model identification (training set) and numerical validation (validation set). All reference signals are either step-like pulses or sinusoidal in nature, with varying amplitude and frequency. The training set consists of both decoupled and coupled force and moment manoeuvres (e.g. decoupled: sinusoid along x-axis only; coupled: sinusoid along multiple axes). An example coupled trajectory used for training is illustrated in fig. 3a. The validation set only consists of coupled manoeuvres, distinct from those seen during training (i.e. different couplings, amplitudes, and sinusoid frequencies).\nAs the simulation relies on a non-linear controller [10], the flight data is initially generated noise-free to avoid the non-Gaussian transformation of input uncertainties. Noise, sampled from a Gaussian distribution, is instead injected into the relevant model inputs (i.e. eq. (10)) and measurements before identification and numerical validation to simulate uncertainty. The employed noise statistics and illustrative examples of these noisy realizations are depicted in appendix A.B. The noise variances are chosen to be similar in magnitude to, if not worse than, widely used Inertial Measurement Unit (IMU) sensors such as the MPU6000 [13].\nFor numerical validation, the identified models are tasked with making predictions on 1000, independent noise contaminated, realizations of the validation set of flight trajectories. The subsequent spread in model predictions and measurements is observed, and the ability of the PIs to contain these evaluated for each run."}, {"title": "C. Numerical Validation Results", "content": "Table 1a and table 1b summarize the results of the numerical validation of the estimated PIs subject to Gaussain noise contamination. By definition, PIs can only be considered valid when both the variation in model predictions due to uncertain inputs and uncertain measurements satisfy the PICP condition (here: \u2265 95.00%). This is distinguished in the tables through the Model Variation and Measurement Variation columns respectively. For reference, the PICP and (normalized) MPIW with respect to the total variation in the training data are also shown through the Training column.\nIndeed, table 1a and table 1b show that all estimation techniques comfortably encompass at least 95% of the variations due to both uncertain inputs and uncertain measurements. Therefore, all considered estimation methods produce valid PIs. While this is perhaps unsurprising for the polynomial models, this is a significant result for the ANN PI estimation techniques as it demonstrates their capacity to estimate valid PIs for quadrotor aerodynamic models"}, {"title": "V. Application to Real Quadrotor Flight Data", "content": "While the numerical validation results show that the discussed PI estimation methods produce valid PIs, it is as of yet unclear how practical such PIs are when applied to real quadrotor flight data. Moreover, it would be beneficial if the estimated PIs widen when tasked with making predictions beyond the identification flight envelope but remain the same, or even decrease, when interpolating. To evaluate these, models and associated PIs are estimated on real quadrotor flight data obtained in a wind tunnel at different flight speeds.\nQuadrotor platform\nThe HDBeetle - a custom 3-inch quadrotor constructed from commercial components - is used as the test platform and is depicted in fig. 2. The physical properties of the HDBeetle are summarized in table 2. This quadrotor is equipped with the Holybro Kakute F7 (STM34F745) flight controller. BetaFlight is elected for the flight control software since it is open-source and supports Bi-directional DSHOT. The latter of which facilitates the high-frequency and sufficiently synchronized reading of the motor (e)RPMs\u2020. Such information is necessary to identify accurate models of the quadrotor. A disadvantage of BetaFlight is that it has limited autonomous support, hence all flights are piloted. Subsequently, the HDBeetle is outfitted with the DJI Digital FPV system to facilitate piloted first-person-view (FPV) flight.\nThe body accelerations and rotational rates are measured by the on-board IMU (MPU6000). Moreover, BetaFlight also estimates the quadrotor's attitude through sensor fusion of the IMU data. While these states are logged at 500 Hz by BetaFlight, they are pre-filtered (through a series of notch and low-pass filters) before logging. Fortunately, the motor rotational speeds are available, also at 500 Hz, without any pre-processing."}, {"title": "B. Data Acquisition", "content": "The quadrotor is flown in both the CyberZoo and Open Jet Facility (fig. 7) of the Faculty of Aerospace Engineering at the Delft University of Technology. Both facilities are equipped with the OptiTrack motion capturing system, which completes the state vector by providing accurate attitude and velocity information at 120 Hz*. The CyberZoo is an open flight arena of approximately 7x10x10 m in height, width, and length respectively. This confined space only allows for hovering and low-speed flights (up to 5 ms\u00af\u00b9). The aim of the low-speed flights is to fly as fast as possible by orbiting around an object stationed at the center of the CyberZoo, as depicted in fig. 3b. High-speed flights (up to 14 ms\u00af\u00b9) are flown in the Open Jet Facility (OJF) wherein both 'steady state' and 'active' flights are flown. The steady state flights involve keeping the quadrotor in approximately the same position while the active flights aim to excite the longitudinal forces and moments. These therefore involve flying into and away from the incident wind to excite Fx & Fz (refer to fig. 8) and rapidly pulsing the pitch to excite My. As only these forces and moments can be excited safely for piloted FPV flight in the wind-tunnel, the demonstration of PI practicality for real-world models is limited to the longitudinal forces and moments. Nonetheless, the results found should extend to the lateral models by virtue of the symmetry of the quadrotor. Both the steady state and active flights were performed at wind speeds of 5, 8, 10, and 14 ms\u00af\u00b9. These wind speeds are recorded through LabView at 500 Hz."}, {"title": "C. Data Processing", "content": "Due to a lack of reliable timestamp information in the equipped version of BetaFlight, the onboard data is aligned with the OptiTrack data (re-sampled to 500 Hz) through a cross-correlation of the attitude angles from each data source for each flight. For the OJF data, the wind tunnel measurements are synchronized and added to the (re-sampled) OptiTrack velocities using timestamp information prior to the onboard alignment.\nThe synchronized data is then passed through an extended Kalman Filter (EKF), based on [14], to fuse the onboard sensor information with the (wind-combined) OptiTrack data and to estimate IMU biases. While OptiTrack is often considered ground-truth, occasional dropouts in tracking occur, for example, during high-speed flight where the quadrotor is pitched significantly and the tracking markers are thus obscured (see, for example, attitudes reached during some manoeuvres: fig. 8). This results in erroneous oscillations in the OptiTrack data, which is mitigated by the IMU data in the EKF. Subsequently, the data is further filtered using a low-pass 4th order butter-worth filter at 100 Hz [1]."}, {"title": "D. Model Identification", "content": "Quadrotor longitudinal aerodynamic models are then identified using the same procedure as for the simulation models in section IV.A but with candidate polynomials and ANN input vectors as shown in appendix A.C.1 and appendix A.C.2 respectively. For identification, the body rotational rates and rotor speeds are taken from the onboard data while the velocities and attitudes stem from OptiTrack. Table 9 summarizes the identified polynomial model structures. Figure 9, fig. 10, and fig. 11 depict the predictive capacities, and associated PIs, of the identified models of the HDBeetle constrained to regions of relevant excitation manoeuvres. All models appear to fit the measurement data well, especially for low frequencies.\nTo investigate the behaviour of the estimated PIs when subjected to interpolation and extrapolation, the quadrotor models are identified on data limited to 10 ms\u00af\u00b9 but excluding 8 ms\u00af\u00b9 wind tunnel flights. These models are then tasked with making predictions on the 0, 5, and 10 ms\u00af\u00b9 training (identification) data, on wind tunnel 8 ms\u00af\u00b9 data (model interpolation), and on wind tunnel 14 ms\u00af\u00b9 data (model extrapolation). It is expected that the PIs stay approximately the same, or shrink, when interpolating but widen (through a larger MPIW) once the models begin extrapolating."}, {"title": "E. Real-world PI Performance", "content": "Table 3 presents the PI performances of the longitudinal HDBeetle aerodynamic models subject to the identification (training) data, model interpolation (8 ms\u00af\u00b9 data), and model extrapolation (14 ms\u00af\u00b9 data). To facilitate a comparison between the difference flight speeds, the absolute MPIW values are shown in table 3.\nBoth the bootstrap and quality driven ANN PI estimation techniques experience a decrease in MPIW when interpolating and an increase when extrapolating. This suggests that the ANN PIs adequately reflect uncertainty in the model due to extrapolation. As the estimated PIs are found to be valid in section IV, they can be said to provide\n\u03c3\u0177\nFig. 12 Comparison of the variance due to modelling uncertainty of the polynomial estimated PIs (second term in eq. (15)) for the longitudinal models of the HDBeetle for the identification, interpolation, and extrapolation data sets. The inset plots depict these comparisons without the outliers.\nprobabilistic bounds - which grow with uncertainty - within which the model predictions will likely lie despite their black-box nature. This is significant as it establishes an expected range of predictions for black-box models, subject to system uncertainties. Such information may be exploited to avoid surprises and inform (model-predictive or robust) controllers or to identify and evaluate extreme scenarios by considering the interval limits. Likewise, the PI growth can be monitored as a proxy for model extrapolation and confidence in ANN predictions.\nContrarily, from table 3, it would appear that the polynomial PI widths remain constant regardless of interpolation or extrapolation. This is inconsistent with the expected behaviour. Revisiting the polynomial PI equation, eq. (15), reveals that the PIs can only grow from differences between the observed model regressor variances and the new regressor values subject to the new input data. In fact, the polynomial PIs do indeed grow due to this model uncertainty term, albeit very slightly, as illustrated in fig. 12. It is clear that the extrapolation data set stimulates a significant widening of the polynomial PIs while the interpolation set does not. Note that the outliers represent 0.7% of the data and may arise from artefacts in the data. For instance, in the wind tunnel, the local air speeds of the turbulent air near the edges of the nozzle are unknown. As the quadrotor is flown manually, excursions to these regions occur on occasion, especially for active flights. Likewise, un-modelled effects, such as reverse flow, which occur in the CyberZoo flights may also contribute to these outliers. While the growth of the polynomial PIs appears to be visually significant in fig. 12, the associated changes in magnitudes are minuscule in comparison to the PI width (for Fx:\n\u03c3\u0177 = 0.002%; Fz:\n\u03c3\u0177 = 0.048%; and My:\n\u03c3\u0177 = 0.070% of MPIW). For the quadrotor models identified here (i.e. including the simulation models) it appears that the error residual variance, 2 (first term in eq. (15)), is the dominant term governing the width of the polynomial PI. Indeed, eq. (15) is only valid for interpolation (i.e. within the scope of the training data) and not extrapolation as nothing can reliably be said about the new variation of the measurement data. This highlights some of the limitations of the Polynomial PI estimation technique, as there is - visually - minimal indication of extrapolation, unlike for the ANN counterparts. Nonetheless, this extrapolation is still apparent in the growth of the o\u0177 model uncertainty terms.\nFurthermore, all PI estimation techniques show a drop in PICP when extrapolating, reflecting a degradation in model fit. This is most pronounced for models of F\u2082, and especially so for the ANN models. Overall, this deterioration in performance can be explained by differences between the identification, interpolation, and extrapolation datasets for key states of the longitudinal models, as summarized in Figure 13. Indeed, the greatest differences between the extrapolation and identification sets occur for states related to F\u2082. Physically, the rotors need to work harder to counteract higher"}, {"title": "VI. Conclusion", "content": "Through mock data obtained from a high-fidelity quadrotor simulation, all considered prediction interval (PI) estimation techniques (polynomial, ANN bootstrap, and ANN quality driven) are shown to be numerically valid for aerodynamic quadrotor models subject to Gaussian noise statistics. Of the ANN estimation techniques, the bootstrap method appears to be superior in terms of PI quality and practicality. Indeed, the bootstrap method may be directly applied to an existing ensemble of ANN quadrotor models, provided that training datasets are available. Moreover, the polynomial PI results suggest that the width of the estimated PIs are reflective of the approximation power of the underlying model whereby excessively wide PIs may indicate a lack of approximation power.\nAs the PI estimation techniques produce valid PIs, they are successfully applied to real quadrotor high-speed (up to 14 ms\u00af\u00b9) flight data. The sensitivity of the estimated 95% PIs to model interpolation and model extrapolation for each of the techniques is evaluated. Both ANN PI estimation techniques experience a swelling of PI widths for model extrapolation, reflecting a growing model uncertainty. These PIs remain unchanged, or shrink, when interpolating. Such behaviour is desirable in practice as insights into the model confidence and, crucially, the (95%) prediction bounds of the otherwise black-box ANN models can be ascertained and accounted for. This behaviour is much less pronounced for the polynomial PIs, to the point that they are effectively unchanged for both model interpolation and extrapolation. The roots of this lie in the PI estimation itself, where the dominant term - associated with residual error variances - remains"}, {"title": "A. Appendix", "content": "As these regressor pools can get quite large", "a$\nwhere": "n$P_2(x, z) = x^2 + 2.xz + z^2$\nThe chosen candidate regressors for the simulation models are based on the gray-box models of Sun et al. [1, 10"}]}