{"title": "Using Crank-Nikolson Scheme to Solve the Korteweg-de Vries (KdV) Equation", "authors": ["Qiming Wu"], "abstract": "The Korteweg-de Vries (KdV) Equation is a well-known mathematical model that describes the behavior of waves on a shallow water surface. In this project, I will explore 2 approaches (explicit and implicit finite difference method) to solving this equation and compare their performance.", "sections": [{"title": "1 Intuitives and Initial Attempts", "content": "The Korteweg-de Vries (KdV) Equation is a well-known mathematical model that describes the behavior of waves on a shallow water surface. In this project, I will explore 2 approaches (explicit and implicit finite difference method) to solving this equation and compare their performance.\nGiven the KdV equation\n$\\frac{3}{2}u_t = u u_x + u_{xxx} = 0,$ (1)\nwhere u(x, t) is the wave amplitude, x is the spatial coordinate, t is time, and subscripts denote partial derivatives. The equation is defined on an interval and the initial data is\n$u(x, 0) = \\sqrt{c}\\ sech^2(\\frac{x}{2}),$ (2)\nwhere\n$sech(x) = \\frac{2}{e^x + e^{-x}}$ (3)\nAlso, to better show the finite difference method, I show the grid for solving this KdV equation in Figure 1.\nPreviously, I only dealt with second-order derivatives in the equation when using the finite difference scheme to solve some partial derivative equations (e.g., the 1D heat equation.). But for this KdV equation, I notice that there are first-order $u_x$ and third-order derivatives $u_{xxx}$ in it and they make things difficult."}, {"title": "2 Crank-Nikolson Scheme", "content": "Since the explicit method of solving the KdV equation is conditionally stable, I try to find an implicit method to better solve the problem. To discretize the equation using the Crank-Nicolson scheme, we let $x_i = i\\Delta x$ and $t_n = n\\Delta t$ be the discrete spatial and time coordinates, where $\\Delta x$ and $\\Delta t$ are the spatial and time steps, respectively. Using a central difference approximation for the spatial derivative and a weighted average of the forward and backward time steps for the time derivative, we obtain:\n$u_t \\approx \\frac{u_i^{n+1} - u_i^n}{\\Delta t},$ (11)\n$u_x \\approx \\frac{u_{i+1}^{n+1} - u_{i-1}^{n+1} + u_{i+1}^n - u_{i-1}^n}{4\\Delta x},$ (12)\n$u_{xxx} \\approx \\frac{(u_{i+2}^n - 2u_{i+1}^n + 2u_{i-1}^n - u_{i-2}^n) + (u_{i+2}^{n+1} - 2u_{i+1}^{n+1} + 2u_{i-1}^{n+1} - u_{i-2}^{n+1})}{4\\Delta x^3}$ (13)\nHowever, one of the difficulties is how to linearize the non-linear term in the KdV equation. That is, how to linearize the $uu_x$ in the KdV equation. In the view of implicit central difference, we approximate the terms in the following ways:\n$uu_x \\approx u_i^n \\frac{u_{i+1}^{n+1} - u_{i-1}^{n+1} + u_{i+1}^n - u_{i-1}^n}{4\\Delta x}$ (14)\nor\n$uu_x \\approx u_i^{n+1} \\frac{u_{i+1}^{n+1} - u_{i-1}^{n+1} + u_{i+1}^n - u_{i-1}^n}{4\\Delta x}$ (15)\nThen, I substitute these approximations into the KdV Equation 1 and obtain the following results.\nFirst, I define some terms in the following:\n$\\Delta \\alpha = \\frac{\\Delta t}{\\Delta x^3}, \\beta = \\frac{\\Delta t}{\\Delta x}$ (16)\nIf I use the approximation $uu_x \\approx u_i^n \\frac{u_{i+1}^{n+1} - u_{i-1}^{n+1} + u_{i+1}^n - u_{i-1}^n}{4\\Delta x}$, the result will be\n$\\frac{\\alpha}{4}(u_{i+2}^n - 2u_{i+1}^n + 2u_{i-1}^n - u_{i-2}^n) + \\frac{3\\beta}{4\\Delta \\alpha} u_i^n (u_{i+1}^{n+1} - u_{i-1}^{n+1}) = -\\frac{\\alpha}{4}(u_{i+2}^{n+1} - 2u_{i+1}^{n+1} + 2u_{i-1}^{n+1} - u_{i-2}^{n+1})$ (17)"}, {"title": "2.1 Stability", "content": "After solving the KdV equation, I need to see whether the Crank-Nicolson scheme is unconditionally stable for this problem. In order to validate its stability of this scheme, I use the Von Neumann stability analysis.\nFirstly, I assume $u_i^n = A^n e^{ik_j \\Delta x}$, where \u5165 is a complex number and $k_i$ is the wave number at grid point i. Considering this transformation in the solution I calculated above, I can gain the discrete equation. And divide two parts by $A^n e^{ik_j \\Delta x}$, I can gain the initial results as follows:\nSet\nr = $\\frac{\\alpha}{2}, \\frac{3\\beta}{8}$ n e^{ik_j \\Delta},\n$\\frac{\\alpha}{4} (e^{i2k\\Delta x} - e^{-i2k\\Delta x}) + \\lambda + (-i)\\frac{3\\beta}{8}(e^{ik\\Delta x} - e^{-ik\\Delta x})$\n= $\\frac{\\alpha}{4} (e^{-i2k\\Delta x} - e^{i2k\\Delta x}) + 1 + r(e^{ik\\Delta x} - e^{-ik\\Delta x}),$ (23)\nDirectly solve this equation is hard for me, but I can use the Euler's formula here:\n$sinx = \\frac{e^{ix} - e^{-ix}}{2i}, cosx = \\frac{e^{ix} + e^{-ix}}{2}$ (24)\nBased on this, I can further transform the equation to the following form:\n$\\lambda = \\frac{-0.5\\alpha i sin(2k\\Delta x) + 2ri sin(k\\Delta x) + 1}{0.5\\alpha i sin(2k\\Delta x) - 2ri sin(k\\Delta x) +1}$ (25)\nSet\n$Q = 0.5\\alpha i sin(2k\\Delta x) - 2ri sin(k\\Delta x) + 1,$\n$\\lambda = \\frac{2}{Q} - 1.$ (26)\nNow I just need to check the value of Q to see whether |\u03bb| is unconditionally stable. Rewrite the formula of Q as\n$Q = 2ri [sin(kdx) - \\frac{\\alpha}{4r}sin(2kdx)] + 1,$ (27)\nIt is cristal clear that r > 0, \u03b1 > 0, $\\frac{\\alpha}{4r}$ < 1, and therefore, I can obtain the result Q > 1. For any Q, I have |$\\frac{\\lambda - 1}{2}$| < 1. Therefore, I derive that\n|\u03bb| < 1. (28)\nIt is safe to conclude that the Crank-Nicolson scheme in this KdV problem is unconditionally stable."}, {"title": "2.2 Consistency", "content": "In order to analyze the consistency of the Crank-Nicolson scheme for problem, I need to determine if this method converges to the continuous solution as the discretization parameters (time step \u2206t and spatial step \u2206x) approach zero.\nLet us begin with the Taylor series of function u in t and x, I have the following formulas:\n$u_{t,i}^{n+1} = u_i^n + ku_{t,i}^n + \\frac{k^2}{2} u_{tt,i}^n + O(k^3)$,\n$u_{t,i}^{n-1} = u_i^n - ku_{t,i}^n + \\frac{k^2}{2} u_{tt,i}^n + O(k^3)$,\n$u_{i\\pm1}^n = u_i^n \\pm ku_{xt,i}^n + \\frac{k^2}{2} u_{xtt,i}^n + O(k^3);$\n$u_{i+1}^n = u_i^n + hu_x + \\frac{h^2}{2} u_{xx} - \\frac{h^3}{6} u_{xxx} + O(h^4)$,\n$u_{i+1}^{n+1} = u \\pm 2hu_x + \\frac{h^2}{2} u_{xx} \\pm \\frac{h^3}{6} u_{xxx} + O(h^2),$ (29)\nwhere k = \u2206t and h = \u2206x. Then, replace the relevant terms in Equation 2 with the above Taylor expansion series, I can obtain:\n$\\frac{3k}{4} u_u^n u + (k - \\frac{3k}{4}u_i^n) u_{t,i}^n u_{tt,i}^n+O(k^3)$,\n$u_{xt,i} + (\\frac{k^2}{2} - \\frac{3h\\beta}{2})u u_i^n + u_{ttt,i} u_{xttt,i} O(h^4).$ (30)\nThen, I define the error function Error(x,t), which use the original KdV equa- tion to minus the above equation. And the error function can be written as:\n$Error(x,t) = (1 - k + \\frac{3h\\beta}{4})\\frac{3h^3\\alpha}{2})ut + (1 - \\frac{k^2}{2} k + \\frac{3h^3}{8u} + O(k^3 + h^4).$ (31)\nNotice that in the previous definitions, I have k = \u2206t, h = \u2206x, \u03b1 \u03b1 = $\\frac{\\Delta t}{\\Delta x^3}, \\beta = \\frac{\\Delta t}{\\Delta x}$. And then, I use these terms in the above Error(x, t) functions:\n$Error(x,t) = (1 - \\frac{4 \\Delta t}{4} + \\frac{3 \\Delta t u_i^n /\\Delta x}{2})u_t + (\\frac{\\Delta t - 6}{4} - \\frac{4 \\Delta t + \\Delta t \\Delta x^2 u^n}{8} - ) u_x + O(k^3 + h^4).$ (32)\nBased on the above result, when \u2206t \u2192 0, \u2206x \u2192 0, the error function Error(x,t) \u2192 0. Therefore, the Crank-Nicolson scheme is consistent for the KdV equation here, and I expect it to converge to the exact solution as I refine the discretiza- tion parameters."}, {"title": "2.3 Convergence", "content": "Convergence means that the numerical solution obtained using the scheme con- verges to the exact solution of the KdV equation as the time step and the spatial discretization are refined.\nIn order to demonstrate the convergence of the proposed scheme, I need to demonstrate that this finite difference method can be written as a two-level scheme. It follows that I need to demonstrate the matrix A is unconditionally invertible.\nGiven that I have re-formulated the problem with the matrix in the above sections:\n$AU^{n+1} = BU^n,$ (33)\nwhere the A, B,$U^n,U^{n+1}$ are all matrices (vectors). Specifically,\n$U^{n+1} = [u_{i-2}^{n+1}, u_{i-1}^{n+1}, u_i^{n+1}, u_{i+1}^{n+1}]^T,$ (34)\n$U^n = [u_{i-2}^n, u_{i-1}^n, u_i^n, u_{i+1}^n]^T,$\nLet $\\zeta = \\frac{\u03b1}{4}, = \u03b1, \\frac{3\\beta}{8}$ At a, b for convenience. And the matrice A can be represented as\n$A = \\begin{bmatrix} 1 & -\\zeta  & 0 & 0 \\\\-\\gamma& 1&-\\zeta&0 \\\\0&-\\gamma&1&-\\zeta\\\\0&0&-\\gamma& 1 \\end{bmatrix}_{n \\times n}$ (35)\nI can observe that the matrix A is both square (n \u00d7 n) and symmetric. Now I will try to compute the eigenvalues of this matrix. First, let me formulate this problem as\n$det(A - \\lambda I) = 0,$ (36)\nwhere the matrix I is the identical matrix and As are the eigenvalues of the matrix A. Optimize the equation above further, I can obtain the following results:\n$A - \\lambda I = \\begin{bmatrix} 1-\\lambda & -\\gamma  & 0 & 0 \\\\-\\alpha/4& 1-\\lambda&-\\gamma&0 \\\\0&-\\alpha/4&1-\\lambda&-\\gamma\\\\0&0&-\\alpha/4& 1-\\lambda \\end{bmatrix}_{n \\times n}.$ (37)"}, {"title": "2.4 Considering Another Case", "content": "Let me consider another linearization case in the original KdV equation. That is, linearize the non-linear term $uux$ as $uux = u^{n+1}ux$. Now putting this term into the KdV equation, I have\n$\\frac{u_i^{n+1} - u_i^n}{\\Delta t} + \\frac{1}{4\\Delta x^3} [(u_{i+2}^{n+1} - 2u_{i+1}^{n+1} + 2u_{i-1}^{n+1} - u_{i-2}^{n+1})\n+ (u_{i+2}^{n+1} - 2u_{i+1}^{n+1} + 2u_{i-1}^{n+1} - u_{i-2}^{n+1})]$ (40)\n$\\frac{1.5 u_i^{n+1}}{4\\Delta x} (u_{i+1}^{n+1} - u_{i-1}^{n+1}+u_{i-1}^{n+1} u_x^{n+1}) = 0.$"}, {"title": "3 Experiments", "content": "Based on the above theoretical analyses, I implement the python programming method to iteratively solve the KdV equation. And the results are summarized in Figure 2. I plot the 2D figure of the solution of the KdV equation. Note that Figure 2(a) represents the initial status u(x, 0) of the equation. From the figures, I can see that when time increases, the curves start to become \"flat\""}, {"title": "4 Conclusion", "content": "In this project report, I have explored the Crank-Nikolson Scheme to solve the KdV equation. By using this implicit finite difference method, I can solve the KdV equation in a much fast way. Also, I show how to derive the scheme on the KdV equation problem, do the stability analysis to prove its unconditional stability, do the consistency analysis and finally combine all these analyses to prove the convergence of the scheme. However, since this is my first time imple- menting the finite difference method on the partial derivative equations, there may exist some minor mistakes in this report. Helpful discussions or suggestions are warmly welcomed!"}]}