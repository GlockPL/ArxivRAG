{"title": "DISCOVERING MAXIMALLY CONSISTENT DISTRIBUTION OF CAUSAL TOURNAMENTS WITH LARGE LANGUAGE MODELS", "authors": ["Federico Baldo", "Simon Ferreira", "Charles K. Assaad"], "abstract": "Causal discovery is essential for understanding complex systems, yet traditional methods often depend on strong, untestable assumptions, making the process challenging. Large Language Models (LLMs) present a promising alternative for extracting causal insights from text-based metadata, which consolidates domain expertise. However, LLMs are prone to unreliability and hallucinations, necessitating strategies that account for their limitations. One such strategy involves leveraging a consistency measure to evaluate reliability. Additionally, most text metadata does not clearly distinguish direct causal relationships from indirect ones, further complicating the inference of causal graphs. As a result, focusing on causal orderings, rather than causal graphs, emerges as a more practical and robust approach. We propose a novel method to derive a distribution of acyclic tournaments (representing plausible causal orders) that maximizes a consistency score. Our approach begins by computing pairwise consistency scores between variables, yielding a cyclic tournament that aggregates these scores. From this structure, we identify optimal acyclic tournaments compatible with the original tournament, prioritizing those that maximize consistency across all configurations. We tested our method on both classical and well-established bechmarks, as well as real-world datasets from epidemiology and public health. Our results demonstrate the effectiveness of our approach in recovering distributions causal orders with minimal error.", "sections": [{"title": "1 Introduction", "content": "Causal discovery is a critical task in numerous scientific disciplines, such as epidemiology, economics, and biology, as it enables researchers to uncover the underlying relationships between variables and better understand complex systems. Traditionally, inferring causal graphs from data has been a challenging endeavor, as existing algorithms often rely on strong, untestable assumptions Spirtes et al. (2001); Glymour et al. (2019); Peters et al. (2017); Assaad et al. (2022), such as causal sufficiency or faithfulness, which may not hold in real-world scenarios A\u00eft-Bachir et al. (2023). With the recent rise in the popularity of Large Language Models (LLMs), many have suggested that these models could provide a novel avenue for causal discovery Long et al. (2023a,b); Darvariu et al. (2024); Cohrs et al. (2024); Vashishtha et al. (2023). Unlike traditional methods, LLMs operate on metadata -leveraging pre-collected knowledge Darvariu et al. (2024) encoded in their training data and may therefore require fewer assumptions to infer causal relationships."}, {"title": "2 Related Works", "content": "Causal discovery is a crucial problem that has been tackled by scientist for many years. Indeed, many approaches have been proposed to infer causal graphs from observational data. Among these, we find constraint-based, noise-based, and score-based models Spirtes et al. (2001). However, these methods often rely on strong assumptions, besides being bound to the availability of data, and often provide partial solutions. The recent rise of Large Language Models (LLMs) has opened a new avenue for causal discovery. New methods relying on LLMs as an oracle have been proposed to infer causal relationships. In Cohrs et al. (2024), the authors adapt a classical constraint-based approach using LLMs for independence testing. More specifically, the PC algorithm is extended with the use of textual data to obtain an estimate of the conditional independence based on the knowledge of the LLM. This approach unfortunately retains most of the assumptions of the PC algorithm. Especially faithfulness and causal sufficiency are needed for this specific algorithm.\n\nA more successful approach accounts for the inherent uncertainty of LLMs. Indeed, LLMs are often associated with ambiguous and inconsistent replies when queried, so to mitigate this issue we can compute a robustness measure of the knowledge provided by the LLM. This is the case for Long et al. (2023a); Vashishtha et al. (2023); Darvariu et al. (2024), where uncertainty/consistency scores are computed by querying the LLM multiple times on a specific causal relationship. Averaging the answers allows to obtain an estimation of the consistency of the LLM on a causal edge. In Long et al. (2023a), authors developed a method that associates uncertainties to edges in a completed partially directed acyclic graph (CPDAG). The CPDAG is assumed to be a prior to the causal discovery process. In this context, the LLM is used as an imperfect expert that assigns a degree of certainty to the arcs. These are then leveraged in a Bayesian inference process to obtain the causal graph. Nevertheless, this approach assumes the availability of a CPDAG, which is usually the output of classical discovery methods (e.g. PC algorithm, GIS), which assume both faithfulness and causal sufficiency. In Darvariu et al. (2024) authors rely on a priors provided by the LLM in the form probabilities on a causal relationship - computed in a similar fashion to Long et al. (2023a) - alongside observational data, which are used in a montecarlo tree search to find the causal graph. Even though this approach does not require faithfulness and causal sufficiency, the method relies on the estimation of the Bayesian Information Criterion (BIC), which requires observational data besides the textual data associated to the variables.\n\nConcerning causal orders, Vashishtha et al. (2023) proposed a method for causal effect estimation through topological order. The work aims at identifying the parts of a causal order that are sufficient to estimate a specific causal effect. In doing so, the authors test two prompting approaches: pair-wise and triplet-wise queries. The former consists in asking the LLM if a variable $X_i$ causes $X_j$, much like in Long et al. (2023a); Darvariu et al. (2024), the latter tries to identify the causal relationship among triads of variables. The aim of the authors ultimately is to obtain a partial causal order to perform causal inference through the celebrated backdoor criterion Pearl (2009). To do so, they propose two methods: the first, in which the LLM is used to orient undirected edges in a CPDAG obtained from the PC algorithm, similarly to Long et al. (2023a); the second, in which the LLM is used to obtain priors in a score-based causal discovery algorithms. Both methods require observational and textual data, as well as the assumption of causal sufficiency - which is necessary to apply the backdoor criterion. Moreover, for the constraint-based approach also faithfulness is required. Ultimately, only part of the causal order is discovered.\n\nThe approach proposed in this work extends some of the ideas presented in Long et al. (2023a); Darvariu et al. (2024); Vashishtha et al. (2023).\n\nWe leverage the consistency score to identify the causal orders compatible with the knowledge provided by the LLM. We argue that finding a causal orders instead of causal graphs is a more direct task for the LLM, given the inherent causal ambiguity of natural language. Moreover, our approach does not rely on the availability of observational data, does not require causal sufficiency, and does not require any parametric assumptions."}, {"title": "3 Preliminaries", "content": "In this section, we introduce key concepts and notations related to causal inference.\n\nA causal graph $G = (V, E)$ consists of a set of nodes $V$ (or variables) and a set of directed edges $E$. The existence of directed edge between two nodes indicates that there is a direct causal effect from $X_i$ to $X_j$. Following standard causal assumptions Pearl (2009); Spirtes et al. (2001), we assume that $G$ is a directed acyclic graph (DAG), referred to as a causal DAG. In this paper, we assume that the causal DAG is unknown. Instead of attempting to reconstruct the DAG itself, we focus on discovering its corresponding causal order (Peters et al., 2017), defined as follows:\n\nDefinition 1 (Causal Order). Suppose a causal DAG $G$. A causal order compatible with $G$ is a bijective mapping $\u03c0: V\u2194 {1, ..., d}$ such that if $Y$ is a descendant of $X$ then $\u03c0(X) < \u03c0(Y), \u2200X, Y \u2208 V$.\n\nIt is important to note that, in general, multiple causal orders can be compatible with the same causal DAG. This occurs because a single DAG may permit several valid topological orderings of its nodes. Our approach seeks to identify one of the causal orders that are consistent with the underlying causal DAG. To represent a causal order graphically we utilize the concept of an acyclic tournament.\n\nDefinition 2 (Acyclic tournament). An acyclic tournament is a DAG with exactly one edge between each two vertices, in one of the two possible directions.\n\nAn acyclic tournament provides a graphical representation that fully encodes a causal order. Specifically, the direction of the edge between any two nodes directly reflects their relative position in the causal order. An illustration of the relationship between a causal DAG, one of its corresponding causal orders, and the acyclic tournaments consistent with that order is presented in Figure 2.\n\nIn our paper, we will make use of an abstraction which will serve as an intermediary representation, capturing directed relationships between nodes without committing to a fully resolved causal order or acyclic structure. By searching for such an abstraction as a starting point, we can harness its structure to identify or constrain the set of compatible acyclic tournaments. The abstraction that will be used is a semi-complete directed graph defined as follows:\n\nDefinition 3 (Semi-Complete Directed Graphs). A directed graph is said to be semi-complete if there is at least one arc between each pair of its vertices.\n\nNotice that a semi-complete directed graph can contain cycles, which introduces significant complexity when analyzing these structures. To effectively work with such graphs throughout this paper, we rely on the concept of strongly connected components (SCCs).\n\nDefinition 4 (Strongly connected components (SCCs)). A strongly connected component is a subgraph of a directed graph in which each node is reachable from every other node.\n\nTo establish a connection between semi-complete directed graphs and acyclic tournaments, we introduce the concept of compatibility, formalized in the following definition:\n\nDefinition 5 (Compatible Acyclic Tournament). Given a semi-complete directed graph $S = (V, E)$, an acyclic tournament $T$ is said to be compatible with $S$ if it can be derived from $S$ by reversing certain edges within each SCC of $S$, while leaving all other edges unchanged."}, {"title": "4 LLM-based Causal Order Search", "content": "This section presents the primary contribution of this paper: a novel algorithm, illustrated in Figure 1 and denoted as LCOS, for extracting causal knowledge from an LLM. The LCOS algorithm is specifically designed to discover the causal order among variables and its pseudo-code is given in Algorithm 1.\n\nThe LCOS algorithm begins, in Step 1 of Figure 1, by querying an LLM in a pairwise manner to determine causal relationships between each pair of variables, given their descriptions. However, it is well-documented that LLMs can be unreliable, as they are prone to hallucinations Huang et al. (2024). To address this issue, we follow a strategy similar to Kadavath et al. (2022) by incorporating consistency scores 1. The consistency score is computed by repeatedly querying the LLM with slight variations of a causal query and evaluating the concordance of its responses. This can help mitigate the unreliability of LLMs by prioritizing responses that are consistent across multiple iterations.\n\nSubsequently, in Step 2 of Figure 1, the LCOS algorithm constructs a semi-complete directed graph that maximizes consistency scores. To ensure the graph reflects only meaningful causal relationships,, in Step 3 of Figure 1, the LCOS algorithm eliminates uninformative variables, refining the structure further. Steps 1,2,3 of the LCOS algorithm is elaborated in detail in Section 4.1.\n\nHowever, this obtained graph may not necessarily represent a valid causal order, as it could contain cycles or bidirected edges. To address this, in Step 4 of Figure 1, the LCOS algorithm employs an optimal search algorithm (Algorithm 2) designed to leverage the structure of semi-complete directed graphs. This algorithm identifies the distribution of all possible acyclic tournaments that maximize the consistency scores among all possible acyclic tournaments. Further details of Step 4 of the LCOS algorithm are presented in Section 4.2."}, {"title": "4.1 Maximally Consistent Semi-Complete Directed Graphs", "content": "Following the approach adopted in Long et al. (2023a) and Kadavath et al. (2022), we assume to have a set of variables $X_1,..., X_n$ with a set of descriptive metadata associated to each variable (i.e. a textual description of the variable), $\u03bc_1, ..., \u03bc_n$. The queries are generated by prompting the LLM with a sentence of the form:\n\nConsider two variables: \"$\u00b5_i$\" and \"$\u03bc_j$\"; Does the first $verb_k$ the second? Reply only with a true or a false\n\nsuch that i \u2260 j and verbk represents a causal verb, i.e. verbk \u2208 {\"cause\",\"provoke\",\" af fect\", ...}. We decided to rely on True/False questions based on the results obtained in Kadavath et al. (2022),which show that LLMs are generally well-calibrated for these types of prompts. Following Long et al. (2023a), we posed the same question n times with varying causal verbs, i.e., \u2200k, k\u2032 \u2208 {1,\u2026,n}, verbk \u2260 verbk. This approach introduces slight perturbations to the input, allowing to evaluate the consistency of the LLM's responses under different phrasings. The proportion of True responses serves as our consistency score 2. Specifically, when an LLM is queried n times about"}, {"title": "4.2 Maximally consistent Acyclic Tournaments", "content": "The maximally consistent semi-complete directed graph without non-informative nodes $S$, obtained in Section 4.1 does not necessarily represent a valid causal order. Indeed, such a graph might include both cycles and bidirected edges. To obtain a valid causal order, we need to find the maximally consistent acyclic tournament that is compatible with the semi-complete directed graph.\n\nDefinition 7 (Maximally consistent acyclic tournament compatible with $S$). An acyclic tournament compatible with $S$ is said to be maximally consistent if it maximize the consistency score relative to all other acyclic tournaments compatible with $S$.\n\nIt is important to note that there might be many maximally consistent acyclic tournament compatible with $S$. To obtain them, we only need to investigate all acylic sub-tournament compatible with each SCC in $S$. Based on the SCCs, we might have different scenarios: On the one hand, we might have SCCs composed of single nodes (singletons), thus with a number of components equal to the number of nodes, implying that $S$ is already acyclic, i.e., there is only one acyclic maximally consistent acyclic tournament compatible with $S$. On the other hand, some SCCs may consist of multiple nodes. These components need to be \"acyclified\" to obtain an acyclic tournament. This can be achieved by finding the minimal set of edges to reverse in the SCC in order to eliminate all cycles while maximizing the consistency score. We call this problem the maximal tournament reversal problem.\n\nDefinition 8. The maximal tournament reversal (MTR) problem consists of finding the minimal set of edges to reverse in a strongly connected component to obtain an acyclic tournament of maximal consistency."}, {"title": "5 Experiments", "content": "The code was implemented in python 3.12. We relied on the ollama library to manage the LLMs. More specifically, the experiments were conducted using the llama-3.1 with 8B parameters. The graphs were implemented using igraph a C++ library with an optimized version of the exact solution of the FAS problem.\n\nDatasets We decided to test our method with a set of well-known benchmark included in the bnlearn library. We also relied on real-world data instances, mainly from the epidemiological and public health domain. These causal graphs are extracted from scientific literature, and have a double purpose: on the one hand, they serve to test the effectiveness of our method in a real-world scenario; on the other hand, we wanted to verify the presence of bias regarding bnlearn library, due to its extensive use as a benchmark in causal discovery Long et al. (2023a); Darvariu et al. (2024).\n\nCausal Order Evaluation The Causal Order Error (COE) is a metric that measures the divergence between the estimated topological order and the causal order of the true graph of the true graph and the estimated graph. The order of the true graph, $G_{ord} = (V, E_{ord})$, is a directed graph where each node v had directed edges to all its descendants in the true graph, thus:\n\n$\u2200v \u2208 V, \u2200u \u2208 Desc(v) \u2203 (v \u2192 u)$\n\nThe COE is computed as the number of edges in the descendant graph of the true graph that are not present in the estimated graph. Thus the COE is an asymmetric relationship in which the estimated edges among variables that are not in the same descendant path are not counted as mistakes, since they represent valid orders. Thus, we first define an indicator function for the COE:\n\n$I(G_{ord}, G) = \\begin{cases} 1 & \\text{if } E_{Desc_{i,j}} = 1 \\land E_{Desci,j} \u2260 E_{i,j} \\\\ 0 & \\text{otherwise} \\end{cases}$"}, {"title": "6 Conclusion", "content": "This paper presents a method to leverage LLMs for causal discovery. More specifically, we focus on identifying causal orders compatible with the knowledge provided by the LLM. The method is based on a top-down search strategy that does not require any parametric assumptions or causal sufficiency. We provide extensive experimental evidence that our method can recover a set of causal orders with a high level of accuracy that most of the time includes one of the correct orders for the true graph.\n\nEven though the results in Table 1 are promising, some notable open issues must be addressed. We should acknowledge that when SCCs grow in size the method might become computationally expensive. However, as shown experimentally, we were able to recover obtain a solution in a reasonable amount of time. As discussed in the experimental section, we decided to test the method using exclusively one LLM - the 11ama-3.1 with 7B parameters. This choice was made to reduce the complexity of the experiments, but testing the method with different LLMs is key to providing robust evidence on the efficacy of the approach. Another key factor in performance depends on the comprehensiveness of the text description associated with the variable. The simplicity and exhaustiveness of the description can greatly affect the performance of the method. Relying on domain experts to associate comprehensive metadata with the variables is crucial. Especially for the real-world dataset, we took care in providing detailed characterizations of the variables, extracting such knowledge from the scientific literature. Nevertheless, we do not know if the description was complete and exhaustive. As a last remark concerning natural language and prompting, in the scope of this work, we decided to rely on English to query the LLM. However, the method is language-agnostic and can be easily adapted to other languages. Moreover, it might be that querying the model using different languages might affect the consistency score and consequently the outcome. These aspects will be further investigated in future iterations of this work."}, {"title": "A Appendix", "content": "To prove Proposition A, we need firs to define the notion of Component Graphs.\n\nDefinition 9 (Component Graph). Let $G = (V,E)$ be a directed graph. The components graph of $G$ is the graph $G_\u03c3 = (V_\u03c3, E_\u03c3)$ where $V' = {\u03c3_1,\u03c3_2,...,\u03c3_\u03ba}$ is the set of strongly connected components of G and $E_\u03c3 = {(\u03c3_i,\u03c3_j) | \u039e\u03c5 \u2208 \u03c3_i, \u03c5 \u2208 \u03c3_j \\text{such that} (u, v) \u2208 E}$.\n\nDefinition 9 can be applied to abstract the strongly connected components of the maximally consistent semi-complete graph.\n\nNow we recall Proposition 1 and then we prove it.\n\nProposition 1. Suppose T is an acyclic tournament of maximal consistence compatible with S, then T is the maximally consistent (acyclic) tournament among all possible acyclic tournaments.\n\nProof. Suppose we have the maximally consistent semi-complete graph S. We define the components graph of S as $S = (V_\u03c3, E_\u03c3)$. Let us assume that T is an acyclic tournament of maximal consistence that is not compatible with S. We can build a graph T' compatible with S orienting all the edges in T according to $E_T$. The graph T' can be either acyclic or cyclic:"}]}