{"title": "A Systematic Literature Review of Spatio-Temporal Graph Neural Network Models for Time Series Forecasting and Classification", "authors": ["Flavio Corradini", "Marco Gori", "Carlo Lucheroni", "Marco Piangerelli", "Martina Zannotti"], "abstract": "In recent years, spatio-temporal graph neural networks (GNNs) have attracted considerable interest in the field of time series analysis, due to their ability to capture dependencies among variables and across time points. The objective of the presented systematic literature review is hence to provide a comprehensive overview of the various modeling approaches and application domains of GNNs for time series classification and forecasting. A database search was conducted, and over 150 journal papers were selected for a detailed examination of the current state-of-the-art in the field. This examination is intended to offer to the reader a comprehensive collection of proposed models, links to related source code, available datasets, benchmark models, and fitting results. All this information is hoped to assist researchers in future studies. To the best of our knowledge, this is the first systematic literature review presenting a detailed comparison of the results of current spatio-temporal GNN models in different domains. In addition, in its final part this review discusses current limitations and challenges in the application of spatio-temporal GNNs, such as comparability, reproducibility, explainability, poor information capacity, and scalability.", "sections": [{"title": "1 Introduction", "content": "In recent years, graph neural networks (GNNs) have emerged as a powerful class of artificial neural network models for processing data that can be represented as graphs. GNNs are in fact particularly well-suited for a wide range of practical and engineering applications where data naturally lend themselves to be represented as graph structures, such as applications to transportation networks, image analysis, and natural language processing. The intuitive concept behind this approach is that nodes in a graph can be put in correspondence to objects or concepts, whereas edges can be assumed to represent their mutual relationships. Data for these quantities can then be processed at once by a GNN model. GNNs can be used for three different classes of problems: at graph level, at edge level, and at node level. In a graph-level problem, the goal is to predict a property of a graph based on its entire structure, rather than on individual nodes or edges. For example, a molecule from a sample can be represented as a graph, and global properties of this molecule can be inferred from data coming from its entire structure in relation to the sample. In an edge-level problem, the goal is to predict the presence or absence of edges between pairs of nodes. As an example, this task can be used in recommendation systems to predict potential connections between users and items on the basis of past interactions. In node-level problems, the goal is to predict the identity or role of each node within a graph, in order to solve either a classification or a regression task. Noticeably, regression tasks can be \"autoregressions\", that is, they can include time.\nThis review examines then the specific use of GNNs on time series related tasks, with a particular focus on time series classification and forecasting. The idea behind the use of GNNs for time series"}, {"title": "2 Methodology for the systematic literature review", "content": "To conduct this SLR, four primary databases were consulted: Scopus, IEEE Xplore, Web of Science, and ACM. These databases were chosen for their comprehensive coverage of academic and scientific literature, ensuring a broad and inclusive search across multiple disciplines.\nPrior to commencing the literature search, some exclusion criteria were defined. First, papers from the current year 2024 were excluded because it has not yet ended, hence the review only covers up to year 2023. Second, only journal articles were considered, in order to guarantee the inclusion of \"established\" sources, whereas both conference papers and book chapters were excluded. The exclusion of conference papers is also made in order to keep the number of papers manageable. However, it is important to notice that relevant conference papers which provide useful benchmarks are anyway referenced throughout the text. Third, only articles published in English were included because of facility of fruition and comparison. Review articles are also not included, although they may be mentioned in the test.\nAn advanced search query submitted to the databases was designed to capture the breadth of the topic while maintaining specificity. The query used is ((\"graph neural network\" OR gnn) AND \"time series\") AND (classification OR forecasting). The first two elements of query aim to restrict the pool of GNN models to the time series domain, and the second part focuses the search on classification and forecasting applications.\nThe selection process of the papers followed the multi-stage approach described below:\n1. Database search: the search query was submitted to each of the four databases, and all records were imported into a csv file.\n2. Duplicate removal: duplicate records were identified and removed.\n3. Title and abstract screening: the remaining records were screened by reading their titles and abstracts. Studies that at first sight did not meet the criteria were discarded.\n4. Full-text screening: the full texts of the remaining papers were analyzed one by one, which led to a further assessment of eligibility.\n5. Data extraction: relevant data were extracted from the included studies, and analyzed in order to better discuss the approach and present the most common datasets and models for each identified field."}, {"title": "3 Overview of the publications", "content": "This section provides a comprehensive overview of the 156 selected journal articles. After their selection, the papers were grouped according to their domain of application, as better explained in the thematic analysis of Sec. 5. In the following, some bibliographic information about the reviewed articles is presented.\n illustrates the number of publications over time across different groups. A cumulative positive trend can be observed over time, reflecting an increasing interest in spatio-temporal GNN models across various fields, since 2020. The three most common groups that have seen the greatest increase in publications are \"Environment\", \"Generic\", and \"Mobility\u201d. For more details, see also the group numerosity reported in Tab. 1.\nAn inspection of the publication sources indicates that 95 different journals have published articles on GNN models for time series forecasting or classification. Tab. 2 lists the 15 journals which contain the highest number of published papers. The diversity of the journals indicates a vast range of potential applications for spatio-temporal GNN models in different fields. This suggests that researchers often select journals based on the specific domain of application, allowing them to reach targeted audiences and contribute within their respective fields. Such diversity also underlines the interdisciplinary nature of GNNs research, as it spans multiple domains. In order to examine the degree of collaboration among researchers, a co-authorship network was generated by using the VOSviewer software [42]."}, {"title": "4 Graph neural networks", "content": "This section introduces some fundamental definitions and notions at the basis of the study of time series with spatio-temporal GNNs.", "subsections": [{"title": "4.1 Definitions and notations", "content": "Definition 1 (Time series). A time series is a sequence of data points indexed in time order (that here is assumed to be regularly sampled, i.e., equispaced). An equispaced univariate time series of length T is a sequence of scalar observations collected over time, denoted as $I_t \\in \\mathbb{R}^T$. An equispaced multivariate time series of length T is a sequence of D-dimensional vector observations collected over time, denoted as $I_t \\in \\mathbb{R}^{D\\times T}$.\nDefinition 2 (Graph). A graph G is a pair of finite sets $G = (V,E)$, where $V = {1, ..., U_n }$ is a set of n nodes (also called vertices) and $E \\subseteq V \\times V$ is the set of edges. In an undirected graph each edge is an unordered pair of nodes {vi, vj}, while in a directed graph the edges have an orientation and correspond to ordered pairs (vi,vj). When an edge (vi, vj) or {vi, vj} exists, the nodes vi and vj are called adjacent.\nDefinition 3 (Spatio-temporal graph). A spatio-temporal graph is a 4-tuple $G = (V_t, E_t, X_t, T)$, where $T = {t_1,...,t_r }$ is a set of T timestamps t, $V_t = {v_1(t), ..., v_{n_t}(t) }$ is a set of nt nodes representing spatial entities at time t, $E_t = {e_1(t),...,e_{m_t}(t) }$ is a set of mt edges representing the relationships between nodes at time t, $X_t = {x_{v_1}(t), ..., x_{v_{n_t}}(t) }\\cup{r_{e_1}(t),..., r_{e_{m_t}}(t) }$ is a set of attributes associated with nodes and edges (xv; and re; are respectively the attributes of node vi and edge ei, and can be either scalars of vectors) at time t. Notice that the sets of nodes and edges can change over time, as well as the set of attributes Xt.\nDefinition 4 (Adjacency matrix). The adjacency matrix A of a graph G with $|V|$ = n nodes is a n\u00d7n square matrix, with Aij specifying the number of connections from node vi to node vj for i, j = 1,...,n. Here it is assumed that a graph cannot have more than one edge between any two nodes, so Aij can only be 0 or 1 depending on whether there is a connection or not.\nDefinition 5 (Degree matrix). The degree matrix D of a graph with $|V|$ = n nodes is a diagonal matrix whose entries are given by the degree of each node, i.e., the number of edges attached to the node. In formulas, its diagonal elements are given by\n$D_{ii} = \\sum_j A_{ij}$."}, {"title": "4.2 Overview of graph neural networks", "content": "Given a graph G = (V, E), a GNN model (not necessarily changing in time, i.e., spatio-temporal) aims to generate an embedding (i.e., a vector of real entries) for each node in the graph. An overall graph embedding consists of representing a graph into a possibly different-dimensional space while preserving its structural information.\nThe notion of GNN was initially proposed by Gori et al. in 2005 in Ref. [51] and by Scarselli et al. in 2009 in Ref. [160] as an architecture to implement a function that maps a graph G with n nodes into an m-dimensional Euclidean space. In Ref. [160] the target node's embedding was learned by first propagating forward at fixed weights neighbor information within the graph in an iterative manner, until a stable fixed point is reached (whose existence is guaranteed under certain assumptions by Banach's fixed point theorem), and then propagating errors on targets back across the graph. The calculation of node embeddings is in general quite complex, and over time many other methods have been developed. These methods are based on different architectures and sophisticated mechanisms. Based on these aggregating mechanisms, a taxonomy of GNN models with different classes has been defined. In this review, we adopt a taxonomy for the discussed spatio-temporal GNNs similar to the one proposed by Chen et al. in Ref. [18]. More details will be given in Subsec. 4.3."}, {"title": "4.3 Spatio-temporal GNNs and their taxonomy", "content": "The majority of research on spatio-temporal GNNs is focused on multivariate time series, as they can be naturally abstracted into spatio-temporal graphs, as depicted in Fig. 5. In this context, nodes correspond to different variables at a given time step, and edges represent relationships between variables. This spatio-temporal modeling assumes that the feature information of a node depends on both its\nown historical values and on the historical data from its neighboring nodes [223]. Once the the graph structure is given, information is propagated within it until the output is obtained, as better explained in the following.\nWhen it comes to the development of a GNN model, there are two primary approaches: one that handles spatial and temporal substructures in separate blocks, and another that integrates and processes these two substructures together [223]. This is implemented by means of modules that are purely spatial, purely temporal, or hybrid combinations of the two. These modules are then organized into a series of blocks to create the final spatio-temporal GNN model.\nIn the taxonomy of spatio-temporal GNNs used in this review, the focus is exclusively on the description of the spatial module that propagates the information within the nodes at fixed time t (not explicitly included in the following equations for simplicity), which is in the reviewed literature a fundamental aspect that differentiates one GNN model from another. Based on the mechanism at the basis of the information propagation in the graph at a given time step, spatio-temporal GNNs can be further classified as recurrent GNNs, convolutional GNNs, and attentional GNNs, as explained in the following. These classes are not mutually exclusive, as some models may fit into hybrid categories. In addition, the classes are not fully exhaustive, as there may be models that do not align with any of the existing categories. However, for the purpose of this review, the taxonomy discussed above is sufficient.\nRecurrent GNNs. Recurrent graph neural network modeling mainly includes the results of early studies on GNNs, where the node embeddings are generated by iteratively propagating neighbor information until a stable fixed point is reached. The iterative equation for the calculation of the embedding (or hidden state) of node u has the form\n$h^{(k)}_u = f (x_u, \\{x_v\\}, \\{r_{(u,v)}\\}, \\{h^{(k-1)}_v\\} | v \\in \\mathcal{N}(u))$,\nwhere k is the index related to iteration, f is a parametric trainable function, xu is the attribute associated to node u, r(u,v) is the weight of the edge (u, v) between the nodes u and v, $\\mathcal{N}(v)$ denotes the neighborhood of node v, and the initial hidden states $h^{(0)}$ are usually randomly initialized. As detailed in Ref. [160], which introduced recurrent GNNs, to ensure the convergence of Eq. (2), it is necessary that the iterative function f is a contraction mapping.\nConvolutional GNNs. Convolutional graph neural networks are closely related to recurrent graph neural networks. They were at first introduced by Kipf and Welling in 2017 in Ref. [91]. Unlike recurrent GNNs, which apply the same iterative contraction mapping f until an equilibrium is reached, convolutional GNNs use different parameters at each updating step, by stacking multiple graph convolutional layers to extract the node embeddings [200].\nA basic form for the equation for the kth layer of a convolutional graph neural network with n"}, {"title": "4.4 Determination of the graph structure", "content": "A crucial issue when dealing with spatio-temporal GNNs for time series problems is the determination of the graph structure, i.e. the connectivity of the nodes. Namely, some time series datasets come by nature with a pre-defined graph structure (e.g., road network), while some others do not. When a natural pre-defined graph structure is available, it helps the model to better capture the underlying dynamics of the system. When it is not directly available, it must be in some way defined by the user (based on domain knowledge or some metrics), determined by some algorithm (such as visibility graphs [224], [96], [183]), or learned by the model itself.\nOnce the graph structure has been determined, it is necessary to define the weighted graph adjacency matrix, which is a generalization of the graph adjacency matrix whose entries are given by the edge weights of the graph. The edge weights can be defined a priori by the user, or again, learned by the model itself based on a pre-defined architecture. In the first case, the edge weights are assigned based on some pre-defined metrics or criteria chosen by the user (e.g., spatial distance between the sites or similarity measures). In the latter case, the weights are continuously adjusted throughout training as the model learns from the data.\nEach section of the following thematic analysis examines which approach is prevalent."}]}, {"title": "5 Thematic analysis", "content": "This section explores the diverse applications of GNN models in different groups. As said, the selected journal papers are divided in groups according to the application domain. The goal is to provide an overview of the various empirical studies, the most common approaches, and the results obtained for different applications.\nIn each subsection of the following thematic analysis, a list of the benchmark models that appear in the selected journal papers will be provided. They will be classified as: mathematical and statistical"}, {"title": "5.1 Energy", "content": "The first group of papers is \"Energy\" (with 13 out of 156 papers), which includes all the studies related to energy systems. In particular, it includes research on electricity load, energy consumption, and power generation forecasting. This is somehow connected to the \"Environment\" subsection (Subsec. 5.2). Indeed, green energy sources are associated with environmental phenomena such as wind speed and solar radiation inflow. However, this subsection focuses on energy applications, whereas Subsec. 5.2 refers to the study of environmental data that may or may not be related to energy applications. Wind speed forecasting, for instance, is connected to wind power generation due to the cubic relationship between wind speed and wind power [7]. However, wind speed forecasting may also be of interest for other reasons, and thus it is included in the more general Subsec. 5.2.", "subsections": [{"title": "5.1.1 Overview", "content": "Energy forecasting is crucial for electricity power grid stability and operational efficiency. Accurate load and generation forecasts ensure that supply meets real-time demand, preventing outages and instability, and maintaining a reliable supply of power. In addition, effective forecasting allows for optimal scheduling of power plants and energy resources, reducing operational costs and improving overall system efficiency. The majority of econometric and machine learning models tend to focus on time series from a single site or consider multiple sites without explicitly capturing the relationships between them. GNN models may be an innovative and effective approach to addressing energy related problems.\nAn overview of the selected papers reveals a noticeable interest in the application of GNNs in the energy field since 2022. The most frequently studied fields include forecasting of wind ([63], [219], [105]) and solar power ([34], [167], [168], [155]), which are renewable energy sources characterized by their intermittency. The two most popular journals among the selected papers are Applied Energy by Elsevier, and Frontiers in Energy Research by Frontiers Media SA. The majority of the corresponding authors are affiliated with institutions in China and in the United States."}, {"title": "5.1.3 Proposed models", "content": "As for the taxonomy of the proposed GNN models, 8 out of 13 papers use a convolutional GNN, and the other 5 use an attentional GNN. Regarding the graph structure, the papers typically provide only a brief description. For example, it is rarely highlighted whether the graph structure is static or dynamic, and the way in which it is constructed is often described summarily. In some papers, the graph structure reflects the geographic location of the elements (e.g., wind or solar power plants, as in Refs. [219] and [155]), whereas in others it is based on the correlation or similarity between time series (as in Ref. [34]). In some studies, a pre-defined structure is imposed and the weighted adjacency matrix is learned directly from the model, often using the attention mechanism as in Ref. [168].\nThe most common loss function used to train the models is the MSE. Many papers mention the programming languages Python and Matlab, and few of them mention the Python libraries PyTorch [150] and TensorFlow [1] for the implementation of the GNN model. In this group, only Ref. [191] provides the link to the source code of the proposed residential load forecasting with multiple correlation temporal graph neural networks (RLF-MGNN) model (available at https://codeocean.com/capsule/ 9294192/tree/vl)."}, {"title": "5.2 Environment", "content": "The group \"Environment\" includes a significant number of the selected papers (27 out of 156), which suggests a considerable research interest on the application of GNNs in this field. However, this group is highly fragmented, as it includes a large number of subdomains and applications, all related to the study of environmental data."}, {"title": "5.2.1 Overview", "content": "The group of environmental studies is broad and includes several disciplines such as physics, climatology, oceanography, and atmospheric science. The breadth of the group is reflected in the number of case studies presented in the selected papers, which cover air quality prediction (in terms of PM2.5 concentration), sea temperature, wind speed, and other applications. Forecasting these quantities can be useful for several reasons. For instance, predicting wind speed or rainfall can assist in anticipating some extreme weather phenomena, and is also related to the prediction of green energy outputs. For example, in Refs. [7] and [8] the authors estimate the wind power forecasting error obtained by using wind speed forecasting models. As another example, predicting sea surface temperature can be useful for weather forecasting, fishing directions, and disaster warnings [209]. Moreover, monitoring and forecasting environmental data are crucial for evaluating the impact of human activities on the environment and tracking the progression of climate change."}, {"title": "5.2.3 Proposed models", "content": "Regarding the taxonomy of the proposed GNN models, the majority of papers present convolutional GNN (17 out of 27 papers), followed by 6 attentional GNNs and 3 hybrid architectures. The description in one paper (Ref. [39]), however, does not specify the classification of its model within the proposed taxonomy. As for the graph structure, not all of the papers describe it with sufficient precision, and some of them are vague about the graph construction and its static or dynamic nature. In almost half of the papers, the edge weights are learned directly from the model, often using the graph attention mechanism. When the graph structure is defined manually, the most popular criterion is the spatial distance between the sites (d), even in its exponential ($e^{-d}$) or inverse proportion (1/d) formulation.\nFinally, there are a few papers where more than one graph structure is fused together in order to capture more complex dynamics, as in Ref. [131].\nNot all papers specify the loss function used to train the models. Among those that do, MAE and MSE are used in roughly equal proportions. Many papers mention the programming language Python and the library PyTorch for the implementation of the models. Few papers also provide a link to the source code for the proposed model, as shown in Tab. 6."}, {"title": "5.3 Finance", "content": "\"Finance\" is another emerging field of study, though not yet widely explored, with 9 out of 156 selected papers. The difficulty of predicting financial data is a well-established fact. This is due to the inherently complex nature of markets, the influence of geopolitical events on them, and the unpredictable behavior of humans which is often irrational and difficult to predict. This complexity makes financial time series highly volatile, and accurate forecasts and data modeling are essential to develop effective trading strategies. GNNs are taken into consideration to model the inter-dependencies between variables together with series dynamics."}, {"title": "5.3.1 Overview", "content": "The \"Finance\" group is relatively narrow, in part due to the limited number of published papers. The majority of studies are concentrated on stock price prediction ([69], [149], [176], [186], [174]), with the aim of forecasting the future trend of the price of a company. Sometimes the stock prediction problem is seen as a classification task. Indeed, due to the stochastic nature and volatility of financial markets, predicting price movements (\"up\", \"neutral\", \"down\") can be more feasible than accurately forecasting specific prices. For example, assuming a daily granularity, a rise (\"up\") can be considered to occur when the next trading day's closing price (pt) is at least 0.55% higher than the previous day's closing price (pt-1), whereas if pt is more than 0.50% lower than pt\u22121, the price movement can be classified as a \"down\". Otherwise, it is classified as \"neutral\". All the selected papers addressing stock prices approach the problem from a classification perspective. Another distinctive aspect in this group of papers is that researchers usually also evaluate how their predictions affect the stability of investment returns over a specified period. This is commonly done through trading simulations in the test set, evaluated with metrics such as the Sharpe ratio and overall returns. These simulations require modeling rather than forecasting.\nAn examination of the selected papers indicates an interest in the application of GNNs in Finance from 2022. Two of the papers were published in IEEE Access by IEEE, while the remaining ones appeared in various other journals. Most of the corresponding authors are affiliated with academic institutions in China."}, {"title": "5.3.3 Proposed models", "content": "In terms of the taxonomy of the proposed GNN models, 5 out of 9 papers utilize attentional GNNS, while the other 4 papers employ convolutional GNNs. As for the graph structure, some papers use models which learn the graph structure themselves ([176], [111]), while some others defines it a priori based on the relationships between companies and stocks ([186], [72], [214]).\nSince the majority of papers deal with a stock movement classification problem, the most common loss function is the cross entropy. The majority of the papers explicitly indicate that Python is the programming language utilized, with nearly half employing PyTorch and a few utilizing TensorFlow. Only Ref. [186] provides a link to the source code of the proposed knowledge graph and graph convolution neural network (KG-GCN) model, available at https://github.com/Gjl12321/KG_GCN_Stock _Price-Trend_Prediction_System."}, {"title": "5.4 Health", "content": "The fourth group of papers is \"Health\", which includes 8 out of 156 publications. These papers focus on critical aspects of health monitoring, disease modeling, and diagnostic tools, with particular emphasis on the spread and diagnosis of disease. All the papers working with functional magnetic resonance imaging (fMRI) data were excluded from the analysis, as the dataset was generated as image sequences rather than time series. This key difference in data structure makes them less relevant to the spatio-temporal focus of this review."}, {"title": "5.4.1 Overview", "content": "Applications of GNNs in the \"Health\" group have been studied starting from 2021. The reason of this spread may be attributed to two key factors. The first reason is the growing presence of sensors in hospitals, which enable the collection of multivariate time series signals which can be used for the timely diagnosis of chronic diseases. The second reason is the spread of the COVID-19 pandemic, which has motivated researchers to investigate and forecast the spread of the virus. Epidemic forecasting is the most common topic among the selected papers. The prediction of epidemics presents two significant challenges. First, their seasonality can vary greatly over time, and they can manifest with different intensities and durations. Second, occasional pandemics can disrupt established patterns even for years. These complexities make the forecasting task more difficult, and machine learning and GNN models have been studied to address this issue. A common reference model for epidemic prediction is the SIR model [84], an acronym referring to individuals which stands for susceptible (S), infectious (I), and recovered (R). The SIR model divides the population into individuals who are susceptible to the disease, those who are infected and can spread it, and those who have recovered and are now immune, and uses differential equations to describe how the disease spreads. In general, some papers use it as benchmark (e.g., Ref. [220]).\nAll the selected papers are published in different journals, but primarily in the field of computer science. The majority of the corresponding authors are affiliated with academic institutions based in China."}, {"title": "5.4.3 Proposed models", "content": "As for the taxonomy of the proposed models, 5 out of 8 papers use a convolutional GNN architecture. Two papers use a pure attentional model, while another paper presents a hybrid convolutional-attentional architecture. Different approaches are used to define the graph structure. Some papers base their graphs on the geographical distribution of the data (as in Refs. [220], [142] and [234]), and others use models that learn the graph structure directly, as in Refs. [227] and [118]. There is also a paper that uses a variant of the visibility algorithm [183]. In almost all the cases, the graph is static.\nIn terms of programming languages, this community uses only Python with PyTorch. As for loss functions, MSE is typically used for prediction tasks, and cross entropy is used for classification tasks. Tab. 14 shows the links to the related source codes."}, {"title": "5.5 Mobility", "content": "The topic that includes the largest number of papers identified by the query (39 out of 156) is \"Mobility\u201d, which regards the movement of people. It includes urban traffic, air travel, and bicycle demand, among other applications. Given the large number of articles in this group, a more detailed comparison of benchmarks, models, and results can be provided."}, {"title": "5.5.1 Overview", "content": "Early traffic prediction is essential for improving the efficiency of transportation systems, helping drivers plan their trips more effectively, and preventing urban congestion. The advent of smart cities infrastructures and transportation systems has contributed to the collection of rich data from road sensors that can be used for this purpose. However, making accurate traffic forecasts is challenging due to constantly changing traffic patterns over time and space, as well as the influence of external factors such as weather conditions and special events. Unlike classical statistical and machine learning models, GNNs can be particularly effective for traffic forecasting due to their ability to model complex relationships in spatial and temporal domain. The increasing number of papers published each year in this group reflects both the growing research interest in this field and the growing confidence in GNN models. The most commonly investigated areas regard urban traffic ([133], [185], [33], [108], [107], [103], [128], [205], [127], [79], [106], [95], [94], [210], [59], [54], [231], [85], [146], [134], [241], [20], [2], [13], [55], [36], [15], [77]), especially urban traffic flow and urban traffic speed. Among the journals where the selected papers were published, Applied Intelligence by Springer is the most common, with 5 out of 39 papers. This is followed by ACM Transactions on Intelligent Systems and Technology and ACM Transactions on Knowledge Discovery from Data, both published by the Association for Computing Machinery, each with 4 out of 39 papers. Most of the corresponding authors are affiliated with Chinese institutions."}, {"title": "5.5.3 Proposed models", "content": "As for the proposed models, 18 out of 39 belong to the pure convolutional GNN paradigm, followed by 11 attentional GNNs, 9 hybrid convolutional-attention architectures, and 1 recurrent GNN. Regarding the definition of the graph structure, most of the papers discuss it in detail. Half of the papers are based on a pre-defined adjacency matrix, and among the remaining papers that propose models that learn the adjacency matrix on their own, a further half is based on a pre-initialization of the matrix, as for example in Ref. [79]. Here, more than in any other group, there are multiple ways to define the adjacency matrix, taking into account either the structure of the road network, the actual flow of people, or a combination of different information. More in detail, some models use the"}, {"title": "5.6 Predictive monitoring", "content": "In modern industry, sensor-based monitoring of processes has become essential. This pairs with the rapid growth of the Internet of Things (IoT), which aims at a smarter management across various applications [109]. In this framework, multi-sensor systems can be used to detect anomalies in complex scenarios and to monitor the overall status of a system. Predictive monitoring is a task that involves the continuous observation and analysis of a system, in order to forecast its future states and verify"}, {"title": "5.6.1 Overview", "content": "Predictive monitoring includes several techniques, such as anomaly detection, fault diagnosis and remaining useful life estimation. Anomaly detection is a technique that aims to identify abnormal data that are not due to random deviations, and are rather generated by a different underlying mechanism [62]. It is a prerequisite part of fault diagnosis [78]. Fault diagnosis is the process of determining whether a fault has occurred in a system, including the identification of the time, location, type, and severity of the fault. It is usually considered to be a classification problem. As for remaining useful life (RUL) estimation, it aims to determine how long a machine will operate before it needs to be repaired or replaced, and it is useful for scheduling maintenance interventions.\nThe selected papers implement these three techniques, with anomaly detection being less prevalent than the other two. The main applications studied are industrial (e.g., bearings fault diagnosis [221], [100], [141], [138], [212]) and mechanical (e.g, engines RUL estimation [192], [25], [182], [93]). There are also two papers dealing with energy related tasks, specifically fault diagnosis of photovoltaic systems [177] and energy networks [226]. They are included in this section due to their specific focus on fault classification rather than on energy-related time series forecasting. It shoud also be underlined that the majority of the papers aim at solving a classification task, which is typical of anomaly detection and fault diagnosis. As for RUL estimation, the quantity to be predicted is the RUL itself. For this reason, we do not refer to forecasting time horizons as in the other sections, since the goal is to estimate the RUL rather than to forecast data over future time intervals.\nThe majority of the collected papers were published in 2023 by authors affiliated with Chinese universities. The most popular journal for these topics is IEEE Transactions on Instrumentation and Measurement by the Institute of Electrical and Electronics Engineers by IEEE, with 5 out of 15 papers. All other journals contain only one of the selected articles. It can be observed that the majority of the articles are published in IEEE journals."}, {"title": "5.6.3 Proposed models", "content": "Half of the proposed GNN models (9 out of 16 papers) fall under the category of pure convolutional models", "138": ".", "100": [141], "182": "use the visibility graph algorithm proposed by Lacasa et al. in Ref. [96", "25": "is available at https://github.com/CUG-FDGroup, while the one for the graph network with causal connectivity and temporal convolutional neural network feature extractor proposed in Ref. [138"}]}]}