{"title": "VIRTUAL SENSING TO ENABLE REAL-TIME MONITORING OF INACCESSIBLE LOCATIONS & UNMEASURABLE PARAMETERS", "authors": ["Kazuma Kobayashi", "Farid Ahmed", "Syed Bahauddin Alam"], "abstract": "Real-time monitoring of critical parameters is essential for energy systems' safe and efficient operation. However, traditional sensors often fail and degrade in harsh environments where physical sensors cannot be placed (inaccessible locations). In addition, there are important parameters that cannot be directly measured by sensors. We need machine learning (ML)-based real-time monitoring in those remote locations to ensure system operations. However, traditional ML models struggle to process continuous sensor profile data to fit model requirements, leading to the loss of spatial relationships. Another challenge for real-time monitoring is \"dataset shift\" and the need for frequent retraining under varying conditions, where extensive retraining prohibits real-time inference. To resolve these challenges, this study addressed the limitations of real-time monitoring methods by enabling monitoring in locations where physical sensors are impractical to deploy. Our proposed approach, utilizing Multi-Input Operator Network virtual sensors, leverages deep learning to seamlessly integrate diverse data sources and accurately predict key parameters in real-time without the need for additional physical sensors. The approach's effectiveness is demonstrated through thermal-hydraulic monitoring in a nuclear reactor subchannel, achieving remarkable accuracy. Trained on high-fidelity simulations, this virtual sensor empowers real-time monitoring by delivering over 100,000x faster inferences with enhanced generalization capability than traditional simulation-based methods. This extraordinary acceleration empowers real-time decision-making, enabling immediate responses to anomalies and proactive maintenance without additional physical sensors, making it ideal for monitoring previously inaccessible locations. The implications extend far beyond nuclear reactors, offering a transformative solution for monitoring critical infrastructure in extreme environments across energy sectors.", "sections": [{"title": "1 Introduction", "content": "Virtual sensors have found diverse applications, from environmental monitoring to intricate industrial systems, by utilizing existing measurements and computational models to estimate quantities that are difficult or expensive to measure directly Zhao et al. [2024], Martin et al. [2021]. These sensors are integral to digital twins, offering insights beyond the capabilities of physical sensors Zhao et al. [2024], Song et al. [2023]. Virtual sensors can be developed using either model-based or data-driven approaches Zhao et al. [2024]. Model-based methods rely on established physical laws and principles, while data-driven methods employ machine learning (ML) algorithms to identify patterns in sensor data. Model-based virtual sensors require existing sensor data to accurately infer and update model parameters, ensuring precise estimations Kerst et al. [2019], Bilbao et al. [2022]. Although powerful, these methods necessitate prior knowledge of the system's physics, which may be unavailable in many real-world scenarios. Data-driven virtual sensing, on the other hand, offers flexibility by directly learning complex relationships from data Zhao et al. [2024], Dimitrov and G\u00f6cmen [2022]. However, data-driven methods require suitable ML algorithm and technique to enable real-time monitoring of important parameters by inferring quantities that are challenging or costly to measure directly using available sensor measurements and computational models Zhao et al. [2024].\nTraditional machine learning (ML) techniques, such as neural networks Bishop [1994], Hecht-Nielsen [1992], decision trees Quinlan [1986], Song and Ying [2015], and support vector machines Hearst et al. [1998], Pisner and Schnyer [2020], have long been applied to predict and analyze system behaviors based on historical and/or operation data. These methods have facilitated improvements in predictive maintenance Widodo and Yang [2007], Qu et al. [2010], anomaly detection Kuty\u0142owska [2015], Widodo and Yang [2007], Qu et al. [2010], Muniyandi et al. [2012], Jalal and Ezzedine [2020], Singh and Govindarasu [2018], and system optimization Qazi et al. [2015], Perera et al. [2019], reducing downtime and enhancing operational efficiency Han and Zhang [2021], Narciso and Martins [2020], Weichert et al. [2019]. However, the dynamic and complex nature of modern energy systems often surpasses the capability of these traditional approaches, particularly when dealing with high-dimensional data or variable conditions Albuquerque et al. [2022], Kaur et al. [2018], Zhou et al. [2016], Sun et al. [2020].\nImportantly, ML models often encounter challenges when dealing with the continuous, real-time, high-dimensional Thudumu et al. [2020], Hassan et al. [2022], and interdependent relationships within sensor data streams Thudumu et al. [2020], Ayadi et al. [2017]. These models need help to effectively capture the complex interactions and dependencies between sensor readings, potentially leading to a loss of critical information and compromised predictive accuracy. With the advancement of sensing technologies, these challenges will become more severe. For instance, high-resolution distributed sensors have recently been used to monitor critical assets in demanding environments and difficult-to- instrument locations Abdul Rahim et al. [2015], Klute et al. [2016], Arhant et al. [2018]. These distributed sensors provide thousands of strain or temperature measurements per meter of a single high-definition sensor. The ultra-high- resolution data can fully map the contour of physical quantities for a structure under test or the continuous quantities' \"profile\" of a process in real-time. However, traditional ML algorithms (like SVMs, decision trees, or linear regression) are not inherently designed to handle high-dimensional. They require fixed-size input and output vectors and can struggle with the scalability issues presented by the functional input data (e.g., distributed measurements). When using traditional ML or conventional deep learning approaches, the continuous distributed input data might need to be discretized or simplified to fit the model requirements. This can lead to the loss of important information about spatial relationships and continuity in the sensor data, leading to inefficient monitoring. Also, traditional models are typically trained on discrete samples from the dataset.\nMoreover, ML models are challenged by the phenomenon of \"dataset shift,\" Kobayashi and Alam [2024] where the statistical properties of the data change over time due to varying conditions in the operational environment. This necessitates frequent retraining of the models to maintain their accuracy and relevance. However, the process of retraining is often computationally expensive and time-consuming, which can hinder the real-time inference capabilities required for effective monitoring and decision-making. This limitation reflects the challenges of traditional high-fidelity numerical simulations, where each new input parameter value necessitates an independent, often computationally demanding re-calculation. In essence, the need for extensive retraining to adapt to changing conditions can create a bottleneck that prevents these models from delivering timely insights and responses in dynamic real-world scenarios.\nDeep neural operator networks (DeepONet) Lu et al. [2021], Kobayashi and Alam [2024] can be a potential solution to these limitations for virtual sensing. This architecture offers distinct advantages for engineering applications involving complex physics. DeepONets excel at learning mappings between function spaces, enabling them to handle intricate, spatially distributed, and time-dependent inputs and outputs (e.g., fluid dynamics Cai et al. [2021], heat transfer &\nstructural analysis He et al. [2024, 2023], particle transport Kobayashi and Alam [2024]). It surpasses many conventional ML methods, which need help fully capturing these relationships and may require retraining when conditions change. Moreover, DeepONet can potentially discover and implicitly represent the underlying governing equations (PDEs) of\nthe systems they are trained on, enhancing their ability to generalize and adapt to new scenarios. This makes them exceptionally valuable for reliable modeling across various engineering domains. However, DeepONet, while effective for handling single-input functions, is limited in its ability to process multiple simultaneous inputs, which are often required in complex systems like those involving distributed sensor data. This limitation can be addressed by learning mappings from multiple input functions to an output function, capturing the interactions between different inputs more effectively and for scenarios where multiple sensors or conditions must be simultaneously considered."}, {"title": "To address this, this study investigates the application of Multi-Input Operator Network (MIONet) architecture Jin et al. [2022] to develop advanced virtual sensors for real-time monitoring of key parameters by inferring otherwise inaccessible locations and additional quantities that cannot be directly measured by the distributed sensors. This architecture is capable of processing multiple sensor inputs simultaneously Jin et al. [2022], offering an appropriate alternative to traditional ML models for virtual sensing to infer critical parameters from inaccessible areas and infer important quantities that might not be directly measured by the sensors with fine-grained spatial resolution to capture phenomena within a system. This capability enables MIONet to effectively model interactions between different system variables, providing a more comprehensive understanding of the system dynamics. For example, in an energy system combining thermal, mechanical, and electrical data, MIONet can seamlessly assimilate these inputs to predict system behavior more accurately and efficiently than DeepONet. It enhances its utility in real-time monitoring and predictive maintenance tasks where quick adaptation to new conditions is crucial. This capacity for integration and adaptability enhances the predictive accuracy and applicability of the virtual sensors.", "content": "MIONet is trained with possible operational conditions that relax the requirement of continuous retraining for new operating conditions, making it suitable for real-time monitoring. The proposed approach uses MIONet to create surrogate models that function as virtual sensors, adept at synthesizing and analyzing data from multiple sources to accurately predict essential operational parameters within engineering systems such as engines, turbines, and cooling systems. This capability is crucial in environments such as nuclear power systems, where traditional sensors are impractical due to harsh conditions or significant safety risks. Leveraging virtual sensors expands monitoring capabilities without additional physical hardware, significantly enhancing operational safety and efficiency.Implementing virtual sensors is essential for achieving real-time data integration and analysis, facilitating proactive maintenance, optimizing system performance, and enabling remote monitoring. This approach contributes to more sustainable and economically feasible energy production, as highlighted in recent studies on the economic competitiveness of advanced nuclear technologies Kornecki and Wise [2024]. This work also validates the MIONet architecture through a focused case study on real-time monitoring in nuclear reactor component. The proposed MIONet-based virtual sensor model integrates multiple data inputs, including coolant inlet conditions and fuel heat generation profiles, to predict critical parameters like temperature, velocity, and turbulence kinetic energy distributions within reactor subchannels. This capability is invaluable when physical sensors are impractical due to environmental challenges or spatial constraints. It enhances real-time monitoring capabilities, striking a crucial balance between accuracy and computational speed, thus accelerating system reliability and safety. It not only aids in early fault detection across various nuclear components but also assists in pinpointing the origins of operational irregularities. The impact of these advances is significant, ensuring proactive anomaly detection and efficient energy production."}, {"title": "2 Methods", "content": null}, {"title": "2.1 Description of problem", "content": "This study develops a real-time monitoring model for thermal-hydraulic conditions within nuclear reactor subchannels. These are crucial pathways for heat transfer from the nuclear fuel to the coolant [Ahmed et al., 2021a,b]. Geometric distortions or blockages within the fuel bundle can disrupt coolant flow, leading to potential safety hazards such as localized overheating, fuel rod damage, or flow instabilities that can induce damaging vibrations within the reactor core [Pothukuchi et al., 2016]. Given these challenges, real-time monitoring of parameters such as velocity, temperature, and turbulence kinetic energy is essential for promptly detecting flow disruptions and localized heating effects. It allows operators to implement corrective actions swiftly, optimizing heat transfer efficiency and ensuring consistent coolant distribution across subchannels to prevent \"hot spots\" and detect leaks [Pozdnoukhov and Kanevski, 2008, Wang et al., 2014, Yin et al., 2018].\nThe scenario assumed in this paper is that coolant inlet conditions (temperature and velocity) and the reactor's heat generation profile are available through distributed sensor networks and operational data. Leveraging this operational information, the goal is to develop a surrogate model capable of predicting specific thermal-hydraulic parameters at the center of the subchannel, as shown in Figure 1. This model must be computationally lightweight for real-time application and adaptable to diverse operating conditions, minimizing the need for frequent retraining. However, the direct measurement of these key parameters within subchannels faces significant challenges due to geometric constraints and the disruptive impact of installing conventional sensors like flowmeters or thermocouples on the reactor core's design. Virtual sensors offer a promising solution to overcome these obstacles and enable comprehensive real-time monitoring [Wang et al., 2014, Yin et al., 2018]."}, {"title": "2.2 Data generation", "content": "The simulation focuses on a square subchannel extracted from a fuel rod array, as shown in Figure 1 with dimensions provided. The simulation assumes a turbulent upward flow with a sinusoidal heat flux profile under steady-state conditions to accurately represent the flow's behavior. Following the approach of the co-author Ahmed et al. Ahmed et al. [2021c], the flow length is calculated to ensure the simulation captures fully developed turbulent flow. This study defines L as the entrance length required for fully developed flow, $Z_l$ as the corresponding length number, and $D_h$ as the channel's hydraulic diameter. To ensure the simulation captures forced convection in the fully developed turbulent regime, the computational domain length is set to 800 mm, deemed sufficient based on Equation 1.\n$Z_L = 4.4 \\times Re^{1/6}$\n$L = Z_L \\times D_h$\nTetrahedral meshes were employed to discretize the computational domain. To ensure mesh quality, the average skewness was maintained below 0.21, and the average orthogonal quality was above 0.87 during mesh generation. This study focuses on developing a virtual sensing framework, not on an in-depth analysis of fluid dynamics. Therefore, we opted for a Reynolds-Averaged NavierStokes (RANS) simulation instead of Direct Numerical Simulation (DNS) or Large Eddy Simulation (LES). DNS and LES, while offering higher fidelity, are computationally expensive and would significantly increase the time required to generate the large dataset necessary for training MIONet. Furthermore, previous research by Vijiapurapu et al. Vijiapurapu and Cui [2010] demonstrated that for flow through a rough pipe, both LES and a k \u2013 \u025b RANS model produced similar normalized velocity profiles, which agreed well with experimental results. This suggests that the difference between averaged and instantaneous velocities may not be substantial in this context. Considering the desired order of accuracy and the computational resources required for framework development, the RANS turbulence model was deemed suitable for this investigation. Hence, RNG k e turbulence model was chosen for the simulation. Additionally, enhanced wall treatment was enabled to accurately capture the wall behavior of the fuel rod, particularly the velocity gradient and thermal boundary layer. This combined approach ensures a well-resolved computational domain and precise representation of turbulence near the walls."}, {"title": "2.3 Mathematical Foundation of MIONet", "content": "This section introduces the mathematical principles underlying the MIONet. MIONet leverages the concept of learning operators across multiple Banach spaces Jin et al. [2022], an extension beyond traditional neural operators Lu et al. [2021], which typically handle single Banach space inputs. This capability allows MIONet to efficiently handle complex systems, such as nuclear reactors, where multiple input functions representing diverse physical parameters must be monitored during the operation.\nThe MIONet architecture comprises multiple branch networks for encoding input functions and a single trunk network for encoding the domain of the output function. This structure allows the network to manage inputs from diverse sources and predict outcomes in high-dimensional spaces. In the low-rank version of MIONet, the network employs element-wise multiplication to combine outputs from the branch networks with the trunk network, leading to a powerful but computationally efficient model."}, {"title": "2.3.1 Tensor Approximation", "content": "MIONet's adoption of low-rank tensor approximation Lu et al. [2021], Jin et al. [2022] is necessary to enhance computational efficiency, essential in real-time applications like nuclear reactor monitoring. This strategy curtails the computational intensity required by high-fidelity models, yet effectively captures the dynamics of the system. The operator that MIONet approximates is formally defined as:\n$G: X_1 \\times X_2 \\times ... \\times X_n \\rightarrow Y$\nwhere $X_1, X_2, ..., X_n$ are the input Banach spaces for the various input functions and Y is the output Banach space.\nFor practical implementation, each input function $v_j \\in X_j$ is independently processed by its corresponding branch network to produce output tensors:\n$\\phi_j(v_j) = Branch network; (v_j)$\nThese outputs are later pointwise multiplied to form a combined tensor:\n$Combined output = \\phi_1 (v_1) \\copyright \\Phi_2(V_2) ... \\copyright \\Phi_n(U_n)$\nThe trunk network then processes a separate input, typically representing the spatial or temporal positions at which the outputs are evaluated, and produces an output tensor denoted by $4$:\n$\\4 = Trunk network(y)$\nThe final output of MIONet, aggregated over all points in the output space, is obtained by element-wise multiplication of the trunk network output tensor $& with the combined outputs of the branch networks. This product is summed across all points y \u2208 Y, and a bias term b is added. The resulting expression for the operator G mapping the input functions to the output is as follows:\n$G(0_1,..., U_n) = \\sum ((\u03a6_1(0_1) \\copyright \u03a6_2(2) \\copyright ... \\copyright \u03a6_n(v_n)) \\copyright \u03c8(y)) + b$\n$y\\epsilon Y$"}, {"title": "2.4 Implementation of MIONet", "content": "A MIONet model with fully connected neural networks (FNNs) in branches and trunk sub-network architectures. In infinite-dimension functional input spaces, $P_{rod} \\in R^{n1}$, $T_{in} \\in R^2$, and $v_{in} \\in R^{n3}$ represent individual input function (e.g., power profile, inlet temperature, inlet velocity) sampled on $n_1, n_2, n_2$ fixed points with sensors, respectively. These sampled points correspond to sensor measurements and form the inputs for the respective branches. The trunk input denoted as $pos$, corresponds to the set of measurement points where the model outputs are evaluated and are represented by unique Cartesian positional vectors $(x_i, y_i)$ at the center plane of the subchannel. Each i indexes the nodes within the geometry mesh, thus $pos \\in R^2$. The model outputs the coolant temperature ($T_{center}$), velocity ($v_{center}$), and turbulence kinetic energy ($k_{center}$), each defined as functions over the two-dimensional center plane of the subchannel, represented by spaces $S_1, S_2, S_3$ mapping $R^2$ to R. The neural operator mappings learned by MIONet, denoted by $G_1, G_2$, and $G_3$, can be expressed as follows:\n$G_1: (Prod, T_{in}, v_{in}) \\rightarrow T_{center}$\n$G_2: (Prod, T_{in}, v_{in}) \\rightarrow v_{center}$\n$G_3: (Prod, T_{in}, v_{in}) \\rightarrow k_{center}.$\nwhere the operators $G$ encapsulate the relationships between the input conditions and the resulting physical quantities in the subchannel.\nThe branch input values are encoded with branch networks constructed with FNNs. Figure 3 (a) represents the shape of each input quantity: the power profile is discretized at 100 fixed points along the fuel rod (n\u2081 = 100), and inlet temperature and inlet velocity values are assumed to be averaged ones over the inlet surface (n2 = n3 = 1). In this case, the branch networks can be handled as two subnetworks for encoding the functional input shape of 100 and the static input shape of 2. The role of the trunk subnetwork is to encode the domain of outputs: the positions of nodes at the center plane in the subchannel. It means the trunk input shape should be [N, 3] where N is the total number of nodes at that plane and 3 represents the positional vector components (x, y, z) as shown in Figure 3 (b); however, since the\nz-components of positions have a fixed value of 400 mm, the z dimension was ignored, and the input shape was reduced\nto [N, 2].\nThe element-wise multiplication is the key to MIONet's computational graph, as shown in Figure 3 (c). This operation serves as a synthesis point where the distinct representations from each branch are combined with the spatial encoding from the trunk. Through this integrative process, the network can correlate the varied inputs with their corresponding spatial coordinates, producing physical quantities. The output layers (e.g., Linear layers 1, 2, and 3) correspond to the\npredictions of $T_{center}, U_{center}, and k_{center}$, respectively. Each layer applies a final transformation, utilizing a linear operation parameterized by weights and biases, to map the branches and trunk network information to the predicted\noutputs.\nThe MIONet is implemented with PyTorch version 2.1.2. As Table 2 summarizes, each branch network comprises three hidden layers [512, 512, 512], incorporating ReLU activations for non-linear processing and dropout layers with a\nrate of 0.2 for regularization and the output layers have the shape equal to the number N. The trunk network projects\na two-dimensional vector through hidden layers [300, 300, 300], similarly employing ReLU and dropout. Its final\noutput is a singular value, intricately merging the spatial encoding with the representations from the branches. The\narchitectures of linear layers have the input and output shape of N. Since the main function of linear layers is scale and shift adjustments for each output quantity, the non-linear activation functions and dropout layers are not employed.\nFor each output physical quantity, the mean squared errors were computed as follows:\n$MSE = \\frac{1}{N} \\sum_{i=1}^{N} (Y_{cfd,i} - y_{pred,i})^2$"}, {"title": "3 Results & Discussion", "content": "CFD simulations with 5,000 different combinations of branch inputs were performed on AMD Ryzen 3900X CPU for data generation. Each simulation was run with 255 iterations. Then, the simulation data was split into training and test datasets with an 80% and 20% ratio.\nTo optimize the network's trainable parameters, the MIONet model was trained to employ the Adam optimization algorithm Kingma and Ba [2014], a stochastic gradient descent method with adaptive learning rates. The composite MSE loss value was optimized, quantifying the average squared discrepancy between the model's predictions and the ground truth target values. A learning rate of 0.001 was used to control the step size during parameter updates. An\n$L_2$ regularization term (weight decay) with a coefficient of 1 \u00d7 10-8 was included to promote model generalization\nand mitigate potential overfitting. The following computations for the training and evaluation tasks were performed on\na computational node with a single NVIDIA A100 GPU within the Delta cluster hosted by the National Center for\nSupercomputing Applications (NCSA).\nA 5-fold cross-validation strategy was implemented on the original training dataset to assess the model's performance\nand prevent selection bias. The dataset was randomly partitioned into five equally sized folds, and the model was iteratively trained on four folds while validated on the remaining held-out fold. Batch sizes of 1 were utilized for\nboth training and validation throughout cross-validation. For efficient training, a maximum of 500 epochs with an\nearly stopping mechanism was employed for each fold. This approach ensured termination of training if validation\nperformance did not improve over ten consecutive epochs. After the cross-validation, the mean and standard deviation\nof the composite MSE across all five folds were computed and results are summarized in Table 3. In addition, the\nseparate test dataset was reserved for a final, unbiased evaluation of the fully trained model's generalization capabilities.\nThe test results revealed the relative $L_2$ error of 0.2%, 0.8%, and 1.4% for $T_{center}, U_{center}, k_{center}$, respectively."}, {"title": "The computational cost comparison between conventional CFD simulations and the MIONet model is a testament to the efficiency of ML-based real-time monitoring applications. While the CFD simulations are resource-intensive, requiring an average computation time of approximately 587 seconds for this study, the MIONet inference exhibits lower inference time of about 5.24 \u00d7 10-3 seconds. This difference highlights the MIONet model's potential for enabling real-time operational decision-making. The proposed approach allows for immediate response to dynamic changes in the reactor's state, which is crucial for safety and efficiency in energy system management. This acceleration of inference, with a negligible compromise on accuracy, is a necessary step toward implementing DT technologies in live operational environments.", "content": "Building on these results, the proposed MIONet-based virtual sensing approach has two key capabilities that significantly enhance its effectiveness for real-time monitoring.\nOne of the most significant advantages of the proposed MIONet-based virtual sensing approach is its ability to operate effectively without continuous retraining. The MIONet architecture, trained on various conditions, generalizes well to new scenarios without necessitating constant retraining. This inherent adaptability, as demonstrated by the 5-fold cross- validation results and the test dataset evaluation, makes it particularly suitable for real-time monitoring applications. The test results revealed robust performance across different conditions. By eliminating the need for continuous retraining,\nthe proposed method reduces the computational overhead and ensures consistent monitoring performance, thereby\nenhancing the reliability and efficiency of the monitoring system."}, {"title": "4 Conclusions", "content": "This study introduces an approach to real-time monitoring of complex energy systems using Multi-Input Operator\nNetwork (MIONet) virtual sensors. By integrating diverse data sources and accurately predicting key operational\nparameters in inaccessible locations, MIONet transcends the limitations of traditional sensors, particularly in harsh\nenvironments like nuclear reactors. The MIONet-based surrogate model, trained on high-fidelity simulations, demon-\nstrated remarkable inference speed without retraining, predicting temperature, velocity, and turbulence kinetic energy\ndistributions within a PWR subchannel and outperforming conventional CFD simulations by over 100,000 times.\nThis efficiency paves the way for real-time decision-making and proactive management strategies, enhancing safety,\nefficiency, and sustainability within the energy sector."}, {"title": "The proposed method's key capabilities include relaxing the continuous retraining requirement and virtual sensing for inaccessible and unmeasurable parameters. The MIONet architecture, trained on various conditions, generalizes well to new scenarios without constant retraining. This adaptability makes it suitable for real-time monitoring applications, re- ducing computational overhead and ensuring consistent performance across different operating conditions. Additionally, MIONet-based virtual sensors enable the inference of critical parameters at inaccessible locations to physical sensors, essential in complex and harsh environments like nuclear reactors. The model utilizes high-fidelity simulations and diverse data inputs to predict important quantities that are not directly measurable, providing a detailed understanding of the system's internal dynamics.", "content": "The implications of this work extend beyond nuclear power. The flexibility and computational efficiency of MIONet- based virtual sensors offer transformative potential for a wide range of industries reliant on complex systems. From aerospace and manufacturing to chemical processing and renewable energy, the ability to monitor and predict critical parameters in real time, even in challenging environments, can lead to significant advancements in safety, efficiency,\nand sustainability.\nFuture research will explore broader applications of this technology, focusing on further integrating physics-informed constraints into the MIONet architecture to enhance accuracy and interpretability. Additionally, extending the model to handle time-series input functions would enable capturing dynamic system behavior, providing a more comprehensive\nunderstanding of operational conditions and paving the way for intelligent monitoring and control across diverse engineering domains."}, {"title": "Appendix", "content": null}, {"title": "Verification and Validation of Data", "content": "Computational Fluid Dynamics (CFD) simulations are powerful tools for analyzing complex flow phenomena within nuclear reactor subchannels. However, ensuring the accuracy and reliability of the numerical results generated from these simulations is paramount. One crucial validation strategy involves comparing CFD predictions against established empirical correlations specifically developed for square-array PWR (Pressurized Water Reactor) subchannels. The authors assessed the quality of the simulation data and its margin of error by comparing results against the established correlation developed by Weisman [Todreas and Kazimi, 2021]. The average nusselt number calculated from the CFD simulations are compared with the Nusselt number obtained from the correlation. The data reduction process for the average Nusselt number from CFD simulations and the correlations are presented below:\n$h(z) = \\frac{q}{\u03a4\u03c9(z) \u2013 Tb (z)}$\nWhere q is the sinusoidal heat flux, Tw wall temperature, and T\u266d bulk temperature of the fluid.\n$havg = \\frac{1}{L} Jo^{L} h(z)dz$\n$Nuavg = \\frac{havg \u00d7 Dh}{ko}$\nwhere havg is the average heat transfer coefficient, Ko is the thermal conductivity of the fluid, Dh is the hydraulic diameter of the domain, and Nu is the Nusselt Number\nWeisman Correlation [Todreas and Kazimi, 2021] :\n$Nu\u221e = \u03c8 (Nu\u221e)c.t$\n$(Nu\u221e)c.t = 0.023Re0.8pr0.333$\n$\u03c8 = 1.130P/D \u2013 0.2609$\nThe authors conducted a numerical simulation at a high Reynolds number (Re = 336,243.43), corresponding to a velocity of 3.5 m/s, with boundary conditions outlined in Section 2 (Methods). The results were compared to predictions from the Weisman correlation, demonstrating good agreement with a margin of error of 4.51%. The close agreement between the numerical simulation and the Weisman correlation suggests that the CFD model is capable of accurately representing flow behavior within the specified subchannel geometry and conditions."}, {"title": "Declaration of Generative AI and AI-assisted technologies in the writing process", "content": "During the preparation of this work the author(s) used ChatGPT in order to language editing and refinement. After using this tool/service, the author(s) reviewed and edited the content as needed and take(s) full responsibility for the content of the publication."}]}