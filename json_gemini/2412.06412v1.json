{"title": "StarWhisper Telescope: Agent-Based Observation Assistant System to Approach AI Astrophysicist", "authors": ["Cunshi Wang", "Xinjie Hu", "Yu Zhang", "Xunhao Chen", "Pengliang Du", "Yiming Mao", "Rui Wang", "Yuyang Li", "Ying Wu", "Hang Yang", "Yansong Li", "Beichuan Wang", "Haiyang Mu", "Zheng Wang", "Jianfeng Tian", "Liang Ge", "Yongna Mao", "Shengming Li", "Xiaomeng Lu", "Jinhang Zou", "Yang Huang", "Ningchen Sun", "Jie Zheng", "Min He", "Yu Bai", "Junjie Jin", "Hong Wu", "Chaohui Shang", "Jifeng Liu"], "abstract": "With the rapid advancements in Large Language Models (LLMs), LLM-based agents have introduced convenient and user-friendly methods for leveraging tools across various domains. In the field of astronomical observation, the construction of new telescopes has significantly increased astronomers' workload. Deploying LLM-powered agents can effectively alleviate this burden and reduce the costs associated with training personnel. Within the Nearby Galaxy Supernovae Survey (NGSS) project, which encompasses eight telescopes across three observation sites, aiming to find the transients from the galaxies in 50 mpc, we have developed the StarWhisper Telescope System to manage the entire observation process. This system automates tasks such as generating observation lists, conducting observations, analyzing data, and providing feedback to the observer. Observation lists are customized for different sites and strategies to ensure comprehensive coverage of celestial objects. After manual verification, these lists are uploaded to the telescopes via the agents in the system, which initiates observations upon neutral language. The observed images are analyzed in real-time, and the transients are promptly communicated to the observer. The agent modifies them into a real-time follow-up observation proposal and send to the Xinglong observatory group chat, then add them to the next-day observation lists. Additionally, the integration of AI agents within the system provides online accessibility, saving astronomers' time and encouraging greater participation from amateur astronomers in the NGSS project.", "sections": [{"title": "1 Introduction", "content": "Astronomical observation can be broadly divided into three phases, as illustrated in Fig. 1: (1) observation planning, (2) observation control, and (3) data processing. The observation planning procedure aims to create an observation list for each telescope participating in the night's observations. This list includes details such as the observation time (in UTC time), the astronomical objects to be observed, their coordinates (typically in Right Ascension, R.A., and Declination, Dec.), and other relevant information. An example of an observation list is shown in Table 1. Observation control is typically managed by the Observation Control System (OCS, Wang and et al. [1]), which operates based on the provided observation list and additional parameters. The images observed"}, {"title": "2 Nearby Galaxy Supernovae Survey", "content": "As discussed in Section 1, we want to construct an AI-based agent to decrease the manpower consumption in astronomical observation to fit the future large telescope array, the SiTian project. The path is evaluated on the test project of SiTian project, the miniSiTian, by applying an agent with function call connected to the OCS of miniSiTian. After that, we construct the SWT system on NGSS since it has more sites and more telescopes to serve as a natural language control center, and this is the story of this paper. We will introduce several background knowledge of the SWT system in this section before we introduce the method to construct the AI agent.\nIn this section, we introduce the sky survey, NGSS, that we built the SWT system. Before that, let's introduce a longer-term plan: the SiTian Project. Our long-term goal is to develop a central AI-based control system for the SiTian Project. However, the current testing telescope array of SiTian, known as miniSiTian, is not yet sufficient to support this work. Therefore, we are building an AI-based operating system for the NGSS to prepare for the future SiTian project.\nSiTian Project and previous work The SiTian Project [27] aims to deploy more than one hundred one-meter telescopes for photometric time-domain observations across various observatory sites in China. These telescopes are organized into groups of three, each equipped with g, r, and i band filters for multi-color surveys. Key strengths of the SiTian Project include a 30-minute survey cycle, a 5-degree field-of-view (FoV), and an observation limiting magnitude about 19 to 21 mag. The project also features six-meter follow-up spectroscopic telescopes for rapid alerts on short-lived transient sources, such as the first light of supernovae. The project's scalability allows for improved observing modes and survey cycles with each additional telescope array. The central control system of SiTian project is called Sitian Brain, taking charge of the observation planning, integrated scheduling, data analysis and data storage for the Sitian project.\nCurrently, the SiTian Project includes three 30-cm telescopes (mST) [19] and a one-meter prototype for personnel training [20], OCS development [1], and pipeline refinement [2]. We have conducted a function call-based control tests on the mST telescopes.\nWe developed a TCP communication protocol to transmit observations to mST and load an observation list. mST has a dedicated interface for agent communication. During testing, mST's list included a few gravitational wave event candidates and one fixed sky area. We could manually specify exposure time and number of exposures to generate a single observation task. The task sequence should contain object name, R.A., Dec., exposure time, exposure count, image type, and priority, and after observation, the file path will be returned. Type specifies the task type (observation, bias, dark or flat), and Priority determines its placement in the list. All added sources had the highest priority.\nNGSS We installed several amateur telescopes at the Xinglong Observatory in Hebei Province, and also have some other amateur telescopes spread across Xinjiang, Gansu, and Yunnan Province. Details of these amateur telescopes are presented in Table 2. All of these telescopes are equipped with monochrome CMOS sensors and amateur LRGB photometric filters. Due to their relatively large FoV, these telescopes, which have an aperture smaller than 250mm, are primarily focused on the search for supernovae in nearby galaxies. On an ideal observational night, we can observe more than 500 sky fields and cover more than 3000 nearby galaxies with these telescopes. For amateur telescopes larger than 250mm with relatively small FoV and photometric filters, we mainly use them for follow-up photometry. We also use professional telescopes, such as the 216cm and 60cm telescopes at the Xinglong Observatory, for follow-up spectrometry and fine photometric observations. In this work, we focus on galaxies within 50 Mpc [28] and the related transients.\nTo effectively utilize each telescope in different observational sites, we need to use appropriate observing lists and programs. For a single survey telescope, we use L band with several short exposures for survey observations. The observing lists for survey telescopes do not overlap, ensuring that the maximum number of sources can be observed. For telescopes at different sites, the extent"}, {"title": "3 Main architecture of StartWhisper Telescope", "content": "We have introduced the hardware of NGSS (Section 2). The SWT system is built on the NGSS to approach AI astrophysicists with telescopes. In this section, we show the architecture of the SWT system, which contains four modules: observation planning (Section 3.1), agent report (Section 3.4), observation control (Section 3.2, data processing (Section 3.3), connected sequentially (Figure 2). The System applies several agent workflows in each module to ensure smoother observations.\nRegarding the LLMs used in the system, agents and agent workflows, we utilize Qwen 2.5 instruct 14B [29] as our LLM. Considering some policy reasons, GPT series models [5] are not available in"}, {"title": "3.1 Observation Planning module", "content": "The observation planning module construct the observation list for nine telescopes in three stations. See Figure 3 for the details of this module.\nThe observation planning module is developed through the integration of workflows and LLMs. The NGSS project focuses primarily on galaxies within 50 Mpc, prioritizing brighter galaxies for observation. Among the multiple observatory sites, only objects that are observable at the current latitude-those outside the observable range of more northerly sites are prioritized. Consequently, the initial screening is conducted based on latitude. This involves categorizing sources in the input catalog by latitude, performing the screening, and generating several star catalogs. These catalogs include the previous observation sequence (given the highest priority) and site-specific catalogs tailored to each observatory's location.\nThe input catalog used in the NGSS project comprises galaxies within 50 Mpc, based on Ohlson et al. 28. To optimize the search and improve efficiency, several steps were taken to refine the catalog:\n1. Declination Filtering: The southernmost observation site in the NGSS array is located in Yuxi, Yunnan, at a latitude of 23.914\u00b0. Considering a 30\u00b0 limiting observation altitude at all sites, objects with declinations below -36.086\u00b0 are unobservable across all sites and were removed. This filtering reduced the catalog to 11,443 galaxies.\n2. Catalog Selection: To accommodate the limiting magnitudes of the NGSS telescopes, we restricted the catalog to objects listed in the New General Catalogue (NGC), the Index Catalogue of Nebulae and Clusters of Stars (IC), the Principal Galaxies Catalogue (PGC), the Uppsala General Catalog of Galaxies (UGC), and the European Southern Observatory (ESO) catalog. This step excluded dim galaxies for which we cannot reliably detect supernovae, leaving 4,773 galaxies.\n3. Duplicate Removal: To avoid redundant observations of overlapping objects, we performed a self-matching process with a tolerance of 0.3 arcminutes, considering that the smallest FoV of the telescopes in NGSS is approximately 0.55\u00b0 \u00d7 0.3\u00b0. After this step, the refined input catalog contained 3,772 objects."}, {"title": "3.2 Observation control", "content": "After the manual check of the observation list, it will be sent to N.I.N.A. to start the observation (Figure 4). We chose N.I.N.A. as the OCS due to its widespread usage among astronomy amateurs, who feel proud of attending scientific research, and we wish to invite them to the NGSS project.\nDuring the observing process, we modified the N.I.N.A. Site Plugin [31]8 to send the sequence functionality via the UDP protocol to N.I.N.A., completing the loading of the list. The N.I.N.A. format observation list (a ninaTargetSet file) contains more information about the hardware, for example, the focusing, dome, and guiding. This information is injected through the transformation between the JSON observation list and the ninaTargetSet. At the predetermined time (end of astronomical twilight), we communicate with the agent, which will send messages to this plugin to start the observation. When astronomical dawn begins, the observation will be stopped automatically. In addition, the API from the small weather station is also linked to the Agent, allowing the user to halt observations by communicating with the agent based on meteorological information."}, {"title": "3.3 Data pipeline", "content": "Xinglong-Observatory Popular Science Telescope Pipeline (X-OPSTEP, Chen et al. [32], Chen [33]), the data pipeline for NGSS, is able to process the observed data automatically and in real-time, including image pre-processing, astrometry, photometry, image combination, and subtraction.\nAfter the observation process by N.I.N.A., the observed data will be sent back to the server at the Xinglong observatory, then X-OPSTEP will be triggered as long as the new data is updated. X-OPSTEP firstly does bias and flat correction, then solves the image world coordinate system information with Astrometry.net [34]. After that, the photometry process will be done by SEx-"}, {"title": "3.4 Agent suggestions", "content": "The photometry of the scientific result will be sent to the system, which functions as a specialized observation optimizer. The system will evaluate several options to assign, delete, or replace certain objects. In general, it will suggest the user to use the observation list from the previous day for the survey. The list will inherit high-priority objects from the previous day. Objects that were not observed the previous night will be highlighted and assigned to the user for the next day. Similarly, objects with transients will also be highlighted and added to the next observation list.\nOnce a transient is found, its coordinates will be sent to the user, along with detailed information about the object."}, {"title": "3.5 Auxiliary tools", "content": "Weather Before the observation, a weather report module will send the report to the observer to get information about all stations. The weather search module operates autonomously, requiring no input, and is tasked with retrieving and reporting the weather conditions at the NGSS's various observation stations. After initialization, the module connects to a text resource that specifies the longitude and latitude of the NGSS sites as the default starting values. The process then branches into four parallel workflows, each responsible for collecting and summarizing weather data. Each branch performs identical tasks, including retrieving precipitation data using a weather API (referred to as \"Hourly Forecast\"), obtaining nighttime information through a plugin, and calculating the times for astronomical twilight end and dawn start at the respective station. These outputs are converted to Beijing time for consistency. The results from these modules are fed into an LLM, which combines the precipitation and nighttime data to generate information on nighttime precipitation for each station. After processing is completed in all four branches, their outputs are consolidated into another LLM, which summarizes the weather conditions from all stations and provides the final report.\nFor these LLMs, we use GLM-4 128K [8] to connect to the weather module and obtain the nighttime plugin, used to summarize the weather conditions at the location. This model, with a 128K optional model, has the best-in-class instruction-following capability. The model used for summarizing after the four observation sites is Qwen max 8K 9 [11], which has optimal capabilities but a shorter context length, making it feasible for receiving summarized input but exceeding the context limit when receiving information from the weather forecast plugin. The outermost agent uses the DouBao function call model 10, which, compared to other models, has enhanced function call capabilities after being enhanced by the Coze team.\nThe weather report module will only reply when the user asks about the weather or sends a message at 10 a.m. every day to remind the user of the weather and present the suggestions given from these weather reports.\nTNS search The TNS search agent (Figure 6) is established by connecting an LLM to a TNS web search crawler tool, which is then linked to an observable analysis plugin, and finally to an LLM. The first LLM is responsible for refining prompts from humans, which include details such as geographical location, minimum observable altitude, retrospective search time, and time zone. These values have default settings, with the geographical location defaulting to Xinglong Station, the time zone defaulting to the Eastern Eight Time Zone the minimum observable altitude set at 30 degrees, and a search for TNS targets in the past 30 days, according to Xinglong Observatory. The final LLM summarizes the star catalog and outputs the results. The first LLM uses Qwen max 8K due to its strong capabilities and the fact that human prompts are relatively brief, not exceeding the context input limit.\nThe observation limit of NGSS is about 15 to 16 mag under 2 minutes of exposure, and the brightest TNS targets are usually beneath 18 mag. In most days, the TNS search may not provide any sources for NGSS. However, this agent is popular in Xinglong Group Chat.\nWe also create a copy on Coze, which the final LLM uses GLM-4 128K because the star catalog still has certain context input requirements. This workflow uses the DouBao function call model for the outermost bot. As we have done in the weather module, we ask the TNS search module to present a report every day 10 a.m. by the ability of AI 11."}, {"title": "4 Usage", "content": "We introduced the main architecture of the SWT system in Section 3. In this section, we provide an example of the SWT system in action, demonstrating the user prompt, the system's response, and the resulting data generated by the agent.\nFigures 8 and 9 illustrate the user prompt and the agent's response for creating an observation plan. Typically, observers are not concerned with the detailed log of the planning process. However, if a previous observation list exists, the log may include messages such as: \"The object at 2024-12-01 17:38:41.032 observation time has been inherited. The object name is UGC04103.\u201d The finalized observation list, shown in Figure 10, contains details such as the object name, coordinates, and distance. Figures 11 and 12 present a sample user prompt for checking transients and adding them to the observation list. Additionally, Figure 13 showcases the user prompt and the agent's response for starting and stopping the observation process."}, {"title": "5 Discussion", "content": "In the previous section 3 and 4, we show the construction and usage of the SWT system. We here make a discussion about the SWT, and show more future plans. We first introduce the advantages and flaws of the SWT at Section 5.1. We then discuss the meaning of embodied telescope at Section"}, {"title": "5.1 Advantages and Flaws", "content": "Astronomical observations traditionally require specialized knowledge, but our system, integrated with agents, significantly reduces the entry barrier by enabling natural language interaction and process monitoring. This approach not only facilitates a quicker onboarding process for new observers but also empowers seasoned astronomers to manage multiple telescopes concurrently, thereby enhancing observational efficiency.\nAdvancements in LLMs promise to further augment the system's reliability, efficiency, and versatility. By incorporating various agents, the system can be tailored to diverse survey projects and accommodate different observational strategies, including dynamic adjustments to observation lists and real-time control beyond weather-dependent operations.\nDespite these advantages, challenges remain. Ideally, LLM-based agents would autonomously conduct observations with minimal reliance on pre-existing code. Future iterations of LLMs, such as OpenAI's latest model [39], hold potential for improved performance at critical decision points within the system, although high inference costs currently limit their application.\nIn exploring the integration of LLMs into telescope control systems, we aim to compare LLM-generated OCSs against those developed by human engineers. The insights gained from this comparison could serve as a valuable dataset for training LLMs on common errors and sensor procedures specific to telescopes. However, concerns over the scarcity of large telescopes and the risk of damage from erroneous LLM-generated commands [40, 41] have led to the current practice of manually coding all OCSS."}, {"title": "5.2 Embodied Telescope", "content": "Embodied intelligence, as described by [42, 43], is characterized by an AI-powered computing core, the brain, interfaced with multiple sensors capable of perceiving external information to facilitate decision-making for learning or executing tasks. Within the context of the SWT system, the sensors are represented by an array of telescopes, and the task at hand is astronomical observation.\nIn our envisioned framework, an embodied telescope should adopt the architecture illustrated in Figure 14, comprising three primary modules: Real-time Analysis, Exception Monitoring, and New Object Injection. These components are critical areas that observation assistants must monitor closely to"}, {"title": "5.3 Future works", "content": "Agent works The primary goal of this work is to explore the use of agents as a main controlling brain for telescope arrays and to transform the SiTian project into an embodied intelligence system. In the later stages, we will add two parts.\nFirstly, we aim to enhance the data processing capabilities by integrating an agent running the NGSS. This will expand our data pipeline for NGSS, inviting amateur astronomers to participate actively. After the pipeline, various functional modules will be deployed to identify transient sources. Additionally, we will develop and test more data reading and telescope observation monitoring modules, which will be utilized in the observations conducted by mST and the SiTian prototype.\nSecondly, in order to prepare for subsequent telescope observations, we propose the necessary modules for an agent-based observation system, as well as the methods for implementing agent workflow connections, as shown in Figure 18.\nThe system contains several modules, including a weather module, observation plan module, Observation Control System (OCS), observation quality optimization module, and data processing module."}, {"title": "Weather Module", "content": "Predicting cloud cover remains challenging but accurate predictions could significantly increase observation time. Therefore, we propose the concept of observing through cloud holes as a future goal."}, {"title": "Observation Plan Module", "content": "We have discussed implementing intelligent control of observations by generating an observation list. This list comprises two parts: an input catalog that aligns with the primary objectives of the SiTian project and new transients identified by a search agent. Priorities are set via natural language input from the observer. The agent assists in selecting different tools based on these priorities and generates the observation list using three additional tools: exposure time calculator, observable computation, and telescope safe point range. Array and cooperative observation controls will follow similar priority settings. The generated list is printed and reviewed by the observer before being sent to the OCS via communication protocols."}, {"title": "OCS", "content": "The OCS will design several APIs for workflow and AI integration, similar to those implemented on mST. Upon identifying a transient source, a communication module will coordinate with subsequent spectroscopic telescopes, utilizing large-aperture spectroscopic telescopes for observation (e.g., the 4m aperture follow-up observation spectroscopic telescope in the SiTian project). Telescope-to-telescope communication will be more efficient than traditional telescope-to-assistant messaging."}, {"title": "Data Processing Module", "content": "During data processing, besides scientific tasks, a real-time image analysis process is required to analyze:\n1. Real/bogus detection [45].\n2. Transit detection [46].\n3. Transient alerts [47].\n4. Out-of-focus analysis.\n5. Exposure time analysis.\nSubsequently, the data is returned to an observation quality adjustment module, which communicates with the OCS to adjust various observation parameters, optimizing the observation results. These adjustments can be made during exposure, and their feasibility has been validated through the operation of mST."}, {"title": "Future Improvements", "content": "We will continue to enhance the NGSS according to these architectures. In the future, we plan to transplant this workflow to the SiTian project, aiming to control and monitor the observation of the SiTian project's 1m-diameter telescope array."}, {"title": "Edge computing and deployment", "content": "Another aim is to test and construct an edge computing method to address the challenges of setting up observatories in uninhabited plateau areas. To achieve this goal, we began by testing our agent's ability to control the popular science telescope MirroSky IAZM12750 AI12, leveraging the Bailian platform and the Coze platform. This initial test involved deploying a PC equipped with various telescope control tools to provide services for an online agent service, thereby demonstrating the feasibility of automatic unattended observation control.\nOur strategy involves first testing online agent services on telescopes before transitioning to local deployments using industrial personal computers (IPCs). Within these IPCs, we plan to integrate an NVIDIA Jetson to facilitate the deployment of LLMs.\nCommunication enterprises estimate that communication costs for observatories in uninhabited plateau areas could be significantly higher than those for edge computing. Thus, this test not only validates the feasibility of unattended observation control but also provides valuable insights into cost-effective solutions for the SiTian project."}, {"title": "Observation monitoring", "content": "An observation monitoring module is crucial for unattended observatories. This module utilizes several sensors to monitor various aspects of the telescope, including its morphology, moving sound, temperature, humidity, and electronic signals, to evaluate its operating status. When an abnormal problem occurs, the module assesses the severity of the issue and proposes different solutions. For low-severity issues, it attempts to resolve the abnormality using control codes. If the problem persists or is more severe, the module sends an error message to the observer and provides guidance on how to address the issue. Additionally, we are currently collecting operation data from the SiTian prototype to generate training samples for different errors and problems encountered. This data will be used to train a knowledge graph based on the observer's handbook, aiming to develop automated telescope operation monitoring and maintenance instructions, which are currently challenging and not fully automated."}]}