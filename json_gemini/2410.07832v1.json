{"title": "LaB-CL: Localized and Balanced Contrastive Learning for improving parking slot detection", "authors": ["U Jin Jeong", "Sumin Roh", "Il Yong Chun"], "abstract": "Parking slot detection is an essential technology in autonomous parking systems. In general, the classification problem of parking slot detection consists of two tasks, a task determining whether localized candidates are junctions of parking slots or not, and the other that identifies a shape of detected junctions. Both classification tasks can easily face biased learning toward the majority class, degrading classification performances. Yet, the data imbalance issue has been overlooked in parking slot detection. We propose the first supervised contrastive learning framework for parking slot detection, Localized and Balanced Contrastive Learning for improving parking slot detection (LaB-CL). The proposed LaB-CL framework uses two main approaches. First, we propose to include class prototypes to consider representations from all classes in every mini batch, from the local perspective. Second, we propose a new hard negative sampling scheme that selects local representations with high prediction error. Experiments with the benchmark dataset demonstrate that the proposed LaB-CL framework can outperform existing parking slot detection methods.", "sections": [{"title": "I. INTRODUCTION", "content": "Autonomous parking is a key technology in autonomous driving. The parking slot detection is essential in autonomous parking and many recent parking slot detection methods use an around-view image [1]-[3] as they are easily accessible in modern vehicles. The traditional parking slot detection approaches are sensitive to environmental changes [4]-[8], so it is challenging to apply them in the real world. With advances in deep learning technologies, several deep learning-based parking slot detection methods have been recently proposed [1]-[3], [9]. The deep learning-based methods [2], [3] show that they are more robust to environmental changes than traditional methods [4]\u2013[8]. The predominant deep learning-based approach detects the junctions of parking slots and then uses the pairs of detected junctions to determine the location of the parking slots [1]-[3].\nThe junction-based parking slot detection approach localizes and classifies junctions of parking slots. For accurate parking slot detection, it is crucial to accurately classify localized junction candidates. In general, the classification problem consist of two tasks, a task determining whether localized candidates are junctions of parking slots or not (i.e., background), and the other that identifies the shape of detected junctions, particularly into the \u201cT\u201d and \u201cL\u201d shapes. The both classification tasks can easily face the data imbalance issue, biased learning toward majority class(es) from imbalanced dataset, i.e., a dataset with unequal distribution of classes [10], which can degrade classification performances. In the first junction existence identification task, there exist a limited number of junctions in an image, while the background class appears much more frequently. In the latter shape classification task, \u201cT\u201d-shaped junctions appear much more often than \"L\"-shaped junctions because L-shaped points are at the end of parking slots. Yet, the data imbalanced issue has not been studied in parking slot detection.\nContrastive learning (CL) is a promising representation learning approach in various applications such as image classification [11]-[17], object detection [11], [13], [14], [17], and image segmentation [18], [19]. The key idea of supervised CL is attracting the features of samples from same class and repulsing the features of samples from different classes. Recently, supervised CL methods [20]-[22] have been proposed to address the data imbalance issue in image classification. To the best of our knowledge, supervised CL with an emphasis on imbalanced datasets has not been investigated for object detection, particularly parking slot detection.\nMany supervised CL methods learn the representations from images in full view [16], [20]-[22], i.e., global representations. In object detection problems, one needs to learn localized representations because an image in full view can contain multiple objects, e.g., in the parking slot detection problem, multiple junctions of parking slots. We propose the first supervised CL framework to improve the junction-based parking slot detection performances, Localized and Balanced CL (LaB-CL). Our main contributions can be summarized as follows:\n\u2022\tWe propose to contrast local representations that correspond to patterns in patches in the original image space, in supervised learning way. For learning with imbalanced datasets, we include local prototypes in every mini batch to consider local representations from all classes.\n\u2022\tWe propose a new negative sampling scheme that selects local representations with high prediction error. It is possible to use the predicted probability of classes in our framework, as we simultaneously learn local representations and a classifier.\n\u2022\tExperiments with the Tongji Parking-Slot (PS) benchmark dataset 2.0 (PS2.0) [1] show that the proposed Lab-CL framework outperforms existing state-of-the-art (SOTA) parking slot detection methods.\nSection II reviews related works to ours in parking slot detection and supervised CL. Section III proposes the LaB-CL framework that consists of several major components, new CL for junction identification and junction shape identification tasks, new hard negative sampling, and a compensation loss for CL. Section IV compares the proposed LaB-CL with existing parking slot detection methods and includes the ablation study on the primary components of LaB-CL."}, {"title": "II. RELATED WORK", "content": "A. Parking slot detection\nIn traditional vision-based parking slot detection methods, researchers used line and points in a hand-crafted way. The line-based approach first detects the edge of the line with an analytical edge detector and then identifies the parking line with a line fitting algorithm such as Radon and Hough transforms [4], [5], [23]. The point-based approach detects junction points of parking slots by decision tree/corner detector and then predict parking slots with template matching [6]-[8].\nRecently, researchers have proposed several parking slot detection methods that use deep learning with the junction detection perspective. Deep Parking-Slot detection (DeepPS) is the first junction-based parking slot detection method using deep learning, with two stages [1]. DeepPS first detects junctions in parking slots with a convolutional neural network (CNN) and then identifies parking slots with template matching. Directional Marking-Point Regression (DMPR) is a two-stage method that first detects junctions using a CNN and then identifies parking slots with some post processing, specifically, manually designed geometric rules [2]. Attentional Graph Neural Network (AGNN) is an end-to-end (E2E) parking slot detection method with graph neural networks with attention mechanism [3].\nB. Supervised CL for handling data imbalance\nRecently, several supervised CL methods have been proposed to address the data imbalance issue [20]\u2013[22]. The k-positive CL method is a two-stage method that uses positive samples with a fixed number k to balance between majority and minority classes [20]. Targeted supervised CL learning is a two-stage method that generates targets to lead all classes to have a uniform distribution in the representation space [21]. Balanced CL is an E2E method that proposes a balanced CL loss that include class prototypes from images in full view to consider all class samples in every mini batch [22]. Both [21] and [22] promote a regular simplex configuration in the representation space with imbalanced datasets.\nAll the aforementioned supervised CL methods learn the representations from images in full view, i.e., learn global representations. Different from this, the proposed LaB-CL framework that can learn local representations for junction detection of parking slots, while handling the data imbalance issue. The local representation concept is similarly used in fast two-stage object detectors [24], [25], but not in supervised CL."}, {"title": "III. METHODS", "content": "This section proposes the LaB-CL framework for accurate parking slot detection. Section III-A provides some preliminaries in parking slot detection. Section III-B overviews the proposed LaB-CL framework and describes its main components. Section III-C provides details of LaB-CL for the two classification tasks in junction detection (see Section I). Section III-D describes training loss for two regression tasks. Section III-E describes postprocessing scheme that detects parking slots from detected junctions.\nA. Preliminaries\nThe parking slot detection task aims to identify a parking slot by detecting a pair of two junctions that constitute the entrance line of a parking slot. Following the earlier works [1], [2], one can first detect junctions of parking slots and then detect parking slots from detected junctions with some postprocessing."}, {"title": "B. Overview", "content": "Our goal is to develop an advanced supervised CL approach to accurately detect junctions of parking slots. The proposed LaB-CL framework is an E2E learning method for junction detection. Specifically, we simultaneously learn a) feature extractors, b) two classifiers that identify junctions and classify their shape, and c) two regressors that predict the location and rotational position of junctions. Mathematically, LaB-CL trains a network that maps the input space X to the four target spaces"}, {"title": "Local prototypes", "content": "-1\n$$L_{CCL} = \\sum_{k \\in \\mathcal{Y}^{sh}} \\sum_{i \\in \\mathcal{I}_k} \\sum_{p \\in \\{\\mathcal{I}_k \\setminus \\{i\\}\\} \\cup \\{c\\}\\} } log \\frac{exp(z_i^{sh} \\cdot z_p^{sh} / \\tau)}{\\sum_{k' \\in \\mathcal{Y}^{sh}} \\sum_{j \\in \\mathcal{I}_{k'}/ \\cup \\{c\\}} exp(z_i^{sh} \\cdot z_j^{sh} / \\tau)}$$\n(1)"}, {"title": "Proposed CL loss for junction identification", "content": "-1\n$$L_{CCL} = \\sum_{k \\in \\mathcal{Y}^{id}} \\sum_{i \\in A_k} log \\frac{exp(z_i^{id} \\cdot z_i^{id}) / \\tau)}{\\sum_{k' \\in \\mathcal{Y}^{id}} \\sum_{j \\in A / \\cup \\{c\\} } exp(z_i^{id} \\cdot z_j^{id} / \\tau)}$$\n(2)"}, {"title": "Further promoting attractions in CL", "content": "$\\begin{aligned} L_{CId} = & \\sum_{k \\in \\mathcal{Y}^{id}} \\sum_{i \\in A_k \\cup M_j} ||z_i^{id} - z_i^{cid}||^2 \n& - \\frac{1}{|A_k \\cup M_k|} \\sum_{i \\in A_k \\cup M_j} ||z_i^{id} - z_i^{cid}||^2 \n\n\\end{aligned}$$\n(3)"}, {"title": "Logit compensation losses for learning classifiers", "content": "$\\begin{aligned} L_{line} = & \\sum_{i \\in I} \\sum_{k \\in \\mathcal{Y}^{sh}} log \\frac{exp(Cls_{sh}(z_i^h)_k + log(q_i^k))}{\\sum_{k' \\in \\mathcal{Y}^{sh}} exp(Cls_{sh}(z_i^h)_{k'} + log(q_i^{k'}))}\n\n\\end{aligned}$$\n(4)"}, {"title": "Regression losses for learning predictors of junction location and rotation", "content": "$\\begin{aligned} L_{reg} = \\frac{1}{|I|} \\sum_{i \\in I} & (x_i - x_i^{GT})^2 + (y_i - y_i^{GT})^2 + \n& (cos(\\theta_i) - cos(\\theta_i^{GT}))^2 + (sin(\\theta_i) \u2013 sin(\\theta_i^{GT}))^2,\n\n\\end{aligned}$$\n(5)"}, {"title": "Finally", "content": "$$\\begin{aligned}\nL = &\\lambda_{lc}L_{lcl} + \\lambda_{line}L_{line} + \\lambda_{lid}L_{lId}\n+ \\lambda_{lId}L_{lId} + \\lambda_{lc}L_{lc} + \\lambda_{reg}L_{reg}\n\n\\end{aligned}$$\n(6)"}, {"title": "E. Postprocessing for parking slot detection", "content": "To eliminate duplicate detections and select the most relevant detected jections, we apply the non-maximum suppression (NMS) technique to detected junctions as conventionally used in object detection. To ultimately detect parking slots, the following two postprocessing techniques are applied after NMS [2]: 1) filtering inappropriate junction pairs and 2) pairing junctions to form parking slot entrance lines. See further details in [2]."}, {"title": "IV. EXPERIMENTAL RESULTS AND DISCUSSION", "content": "A. Experimental setups\nWe compared the proposed LaB-CL framework with traditional parking slot detection methods, Wang et al. [4], Hamda et al. [23], and PSD_L [7], and SOTA deep learning-based parking slot detection methods with the junction detection perspective, DeepPS [1], DMPR [2], and AGNN [3].\n1) Dataset: We used the PS2.0 benchmark dataset [1] that consists of 9,827 training images and 2,338 test images. The PS2.0 dataset includes both indoor and outdoor images collected under various environmental conditions. Images are with the size of 600 \u00d7 600, corresponding to a 10m\u00d710m physical region. Following [2], [3], we used the selected 7,844 images for training and 2,290 images for test.\nThe proposed method resizes the original image resolution to 512x512 for the input, and we set the grid size G as 16. Consequently, from the local representations perspective, the imbalance factor p is approximately 128 and 137 for training and test dataset of junction identification, respectively, and p is approximately 7 and 10 for training and test dataset of junction shape classification, respectively. Here, p = Nmax/Nmin, and Nmax and Nmin is the number of samples in the majority and minority classes, respectively.\n2) Implementation details: Inspired by [2], [12], we used random rotation, random resize crop, Gaussian blur, and random erasing for data augmentation. We set \u03bbc, \u03bbLine, \u03bbIid, \u03bbc, \u03bbline, and \u03bbreg as 1, 1, 10, 1, 100, and 1, respectively. The temperature \u03c4 was set to 0.1 [22]. We trained the model with the batch size of 24 with 1,000 epochs. We used the Adam optimizer with the initial learning rate of 0.001, and decayed it at the 800th and 900th epoch with the decay rate of 0.1. For all the LaB-CL experiments, we used ResNet-50 [31] as the feature encoder Enc. For the two projectors, Proj, we used the three-layer MLP architecture [15]. The local prototypes were transformed versions of class-specific weights with two-layer MLPs [22]. We set the dimensions of the hidden layer and output layer three- and two-layer MLPs as 2048 and 512, respectively. We set the size of the memory bank to 256."}, {"title": "B. Comparisons b/w different parking slot detection methods", "content": "1) Parking slot detection performance comparisons: Results in Table I with the PS2.0 benchmark dataset demonstrates that the proposed LaB-CL framework can outperform existing SOTA parking slot detection methods. In particular, proposed LaB-CL significantly improves the recall compared to existing SOTA methods. Fig. 5 shows the parking slot detection results obtained by LaB-CL. It shows that the proposed method can achieve accurate parking point detection regardless of environmental conditions.\nThe averaged processing/analyzing time for a single image with the proposed method is about 9.16ms, where we measured the inference speed with a single Nvidia GeForce RTX 4090 GPU.\n2) Representation learning performance comparisons: The proposed LaB-CL framework can promote that within-class local features collapse to their prototypes, forming a regular simplex geometry. Such phenomenon is not found in an existing SOTA method, DMPR. See Fig. 6. Inducing a simple and symmetric geometry in the representation space is important for improving the generalization and robustness [32]. In particular, with such learned representations, one can learn a simple yet effective classifier (e.g., nearest centroid classifier)."}, {"title": "C. Ablation study for proposed LaB-CL", "content": "Table II reports results from the ablation study for the primary components of proposed LaB-CL framework. Compared with the baseline that does not use any of our innovations (in the first row of Table II), the proposed LaB-CL innovation \"CL+Hard negative sampling\" (in the third row of Table II) can significantly improve the parking slot detection performances. Further attracting within-class local representations can further improve the parking slot detection performances of the LaB-CL. Compare the \"CL+Hard negative sampling\" combination with the \u201cCL+Hard negative sampling+Further attraction\" combination (in the last row of Table II)."}, {"title": "V. CONCLUSION", "content": "Autonomous parking can reduce the need for large parking lots and spaces and alleviate traffic congestion. To develop safe autonomous parking systems, it is crucial develop accurate parking slot detection models. The predominant deep learning-based approach first detects the junctions of parking slots and then, detects parking slots with detected junctions with hand-crafted postprocessing.\nThe proposed LaB-CL framework is the first E2E supervised CL for junction detection. To moderate the data imbalance issue in junction detection, LaB-CL 1) includes local class prototypes in every mini batch to consider local representations from all classes, and 2) selects hard negative representations with high prediction error. Lab-CL achieves outperforming parking slot detection performances compared to several existing SOTA parking slot detection methods.\nWe expect to further improve performances of LaB-CL by replacing hand-crafted postprocessing with a learnable module, like [3]."}]}