{"title": "Discerning and Characterising Types of Competency Questions for Ontologies", "authors": ["C. Maria Keet", "Zubeida Casmod Khan"], "abstract": "Competency Questions (CQs) are widely used in ontology development by guiding, among others, the scoping and validation stages. However, very limited guidance exists for formulating CQs and assessing whether they are good CQs, leading to issues such as ambiguity and unusable formulations. To solve this, one requires insight into the nature of CQs for ontologies and their constituent parts, as well as which ones are not. We aim to contribute to such theoretical foundations in this paper, which is informed by analysing questions, their uses, and the myriad of ontology development tasks. This resulted in a first Model for Competency Questions, which comprises five main types of CQs, each with a different purpose: Scoping (SCQ), Validating (VCQ), Foundational (FCQ), Relationship (RCQ), and Metaproperty (MpCQ) questions. This model enhances the clarity of CQs and therewith aims to improve on the effectiveness of CQs in ontology development, thanks to their respective identifiable distinct constituent elements. We illustrate and evaluate them with a user story and demonstrate where which type can be used in ontology development tasks. To foster use and research, we created an annotated repository of 438 CQs, the Repository of Ontology Competency QuestionS (ROCQS), incorporating an existing CQ dataset and new CQs and CQ templates, which further demonstrate distinctions among types of CQs.", "sections": [{"title": "1 Introduction", "content": "Competency questions (CQs) are broadly used within a variety of domains such as education to design curricula using Bloom's Taxonomy, performance evaluation to assess an employee's performance, or assessing fitness of interrogation in a trial [19,27]. Within ontology development, CQs are used throughout the processes to guide the development, such as in the NeOn methodology [23] and test-driven development [15], including scoping the ontology [25], aligning ontologies [24], validating content coverage [4,5,15], and to assist in interrogating the ontological nature of an entity when aligning a domain entity to an entity in a foundational ontology [3].\nHowever, CQs are used in different ways and sometimes incorrectly and ambiguously [2,28], and ontology engineers have difficulties working with CQs in a systematic"}, {"title": "2 Related Work", "content": "The first mention of CQs for ontologies can be traced back to 1996, as ontologies and ontology engineering was emerging as a field. Uschold and Gruninger were the first to describe CQs as those that \"specify the requirements for an ontology and as such are the mechanism for characterising the ontology design search space\" [25]. They distinguished between informal and formal CQs. Informal CQs must be consistent with the axioms in the ontology and serve as constraints on what the ontology can be, they assert, rather than determining a particular design with its corresponding ontological commitments.\nWisniewski et al. [28] collected and analysed 234 informal CQs for several ontologies in different subject domains, analysed those, and translated them in SPARQL-OWL"}, {"title": "3 Model for Competency Questions", "content": "As a first step towards model development, we elicitate possible purposes of CQs in relation to ontologies and entities represented in them, and elements that are relevant to CQs."}, {"title": "3.1 Preliminary analysis: purposes and core elements", "content": "As a first step towards model development, we elicitate possible purposes of CQs in relation to ontologies and entities represented in them, and elements that are relevant to CQs."}, {"title": "Purposes of CQs", "content": "Let us proceed to be more specific about direct and underlying motivations, which can also be referred to informally as purpose, goal, function, or intent beyond a mere 'information elicitation' function of a question, and therewith working towards a why to ask and answer a CQ. Consider:\nDemarcation of the subject domain for the ontology; e.g., in \"Which plant parts does Pumba the warthog eat?\", it helps demarcating the subject domain of the ontology to plants and animals (at least)\u2014thus also excluding, among many topics, building architecture-and requires both type-level and instance-level information.\nValidation whether the right content is covered, which includes both classes/ rela-tionships/attributes of the domain and relevant axioms; e.g., querying the African Wildlife Ontology for \"Which plant parts do warthogs eat?\", it requires from the ontology that it contains the entities named Plant part (with subclasses), Warthog, and either the property eats or its reified version Eating, or their synonyms, and suitable axioms that relate these entities, such as, e.g., Warthog \\exists eats. PlantPart.\nAlignment of a domain entity to a foundational ontology entity; e.g., and instantiating one of the BFO alignment questions from [3], \u201cIs each warthog wholly present at different times?\u201d, where as 'yes' means warthogs are at least a type of endurant.\nElucidation or interrogation of ontological characteristics of the entity; e.g., \u201cIs each instance of Tree necessarily (at all times of its existence) an instance of Tree?\" where a 'yes' means being a tree is a rigid property of that entity.\nThis list of motivations\u2014scoping, validation, alignment of a FO, and property interrogation-may not be exhaustive, but already demonstrates not all CQs are alike."}, {"title": "Components of CQs", "content": "It can be observed from the aforementioned examples that the different CQs have various components, which are essential for distinguishing between them. For instance, the \u201cunfold in time\u201d is a description of a key characteristic of perdurants, which are included in a foundational ontology, and there are mentions of specific entities (warthog, Pumba, eats etc.). More precisely, elements used by one or more type of CQ can be one or more of:\nAn existing ontology or a prospective ontology yet to be developed, $o \\in O$, which may be specified as a domain ontology (also including core ontologies and top-domain ontologies), $od \\in O_n$, or a foundational or top-level ontology, $o_f \\in O_F$; e.g., the IDO and BFO, respectively;\nDomain entity, $d \\in D$, in a subject domain; e.g., SARS-CoV-2 virus, running;\nSubject domain $s \\in S$; e.g., building architecture, infectious diseases, data mining;\nEntity in the ontology, $e \\in E$; e.g., dolce: Perdurant in the DOLCE foundational ontology and awo:lion in the African Wildlife Ontology;"}, {"title": "3.2 Descriptions and definitions of the types of CQs", "content": "Based on the motivation and component analyses, we introduce an inclusive description for CQs and, being the principal focus, we identified five main types of CQs for ontologies: those for scoping (SCQ) and validating (VCQ) content of an ontology, to align to a foundational ontology (FCQ) or they concern metaproperties (MpCQ) and those revolving around representing relationships (RCQ). We do not exclude the possibility that, in time, more types of CQs for ontologies may be identified.\nDefinition 1 (Competency Question) A Competency Question (CQ) regarding an actual or prospective ontology $o \\in O$ is a specialised type of question. The purpose of a CQ in developing $o \\in O$ may include: scoping, validation or verification, foundational ontology alignment, metaproperty analysis, or relationship assessment or representation.\nThis description of any sort of competency question for ontologies is a generic definition, as it is intended only for setting the context rather than being overly prescriptive at this stage. The specific types of CQs defined below each have distinguishing properties to assist identifying and categorising them, as well as future assistance for authoring questions as to which elements should appear in a question of that type. We provide both a definition of each type and a diagrammatic model snippet in EER notation, where the latter serves the purposes of 1) serving as basis for designing a database or knowledge graph for CQs for analysis, use, and reuse, 2) highlighting the essential components irrespective of what the best language of formalisation would be, and 3) communication for understandability by non-ontologist CQ authors. The latter consists of the EER diagram snippet and a controlled natural language rendering of it, possibly augmented with an addition in writing that is strictly beyond ERD notation. Their respective formalisations follow the usual pattern of logic-based reconstructions of EER (see, e.g., [8]).\nWe shall commence with the CQs that ontology developers are familiar with, being the Scoping CQ (SCQs). They provide a rough demarcation of the possible worlds"}, {"title": "Definition 2 (Scoping CQ)", "content": "A Scoping CQ mentions at least one domain entity $d \\in D$ and contributes to describing the scope for an ontology $o \\in O$ in a subject domain $S \\in S$.\nFormally, and with the vocabulary as primitives: $\\forall x(SCQ(x) \\rightarrow \\exists y,z,w(mention(x,y) \\land DomainEntity(y)\\land usage(x, z, w)/Ontology(z)/SubjectDomain(w))$, where Ontology, DomainEntity, and SubjectDomain are to be understood as described in Section 3.1, and mention and usage as primitives with their usual natural language meaning that can be suitably formalised accordingly. For instance, for SQC for \u201cWhich animals are endangered?\", the Ontology is the African Wildlife Ontology [18], the DomainEntity involves the animals, and SubjectDomain is African Wildlife. SCQs typically would be expected to have non-empty answers with the elements asked for. For instance, for \"Which animals are endangered?\", the answer set should contain animal species and only those that are endangered. They may be answers taken from the TBox or the ABox, as applicable. For an SCQ as a scoping device for an ontology's content, the actual answer is not relevant. It may assist CQ authoring if at least one sample answer is provided, if only to test that the question can be answered.\nA Validation CQ (VCQ) may sound as if it were the same as, or else a kind of a SCQ, or the set of VCQs for an ontology to be a subset of the set of SCQs, since most SCQs are being reused for validation. There are subtle differences, however, both with respect to intent or purpose (validation versus scoping) and they must be answerable by the ontology. SCQs need not be answerable, or even formalisable, whereas VCQs should be both formalisable and answerable. VCQs put testable constraints on the possible worlds or interpretations for the ontology (as logical theory).\""}, {"title": "Definition 3 (Validation CQ)", "content": "A Validation CQ mentions at least one domain entity $d\\in D$ and is used for validating the content of an ontology $o \\in O$. The expressiveness required for formalising the VCQ does not exceed that of the language used to represent the ontology.\nThe first part of the definition can be formalised as $\\forall x(VCQ(x) \\rightarrow \\exists y,z(mention(x, y)\\land DomainEntity(y) \\land validate(x,z) \\land Ontology(z))$. For the expressiveness constraint, let"}, {"title": "Definition 4 (Foundational CQ)", "content": "A Foundational CQ for a foundational ontology $o_f \\in O_F$ refers to an entity $e \\in E$ or characteristic thereof that is in the vocabulary of $o_f$. A FCQ is intended to be used to in the alignment process of a domain ontology entity $e' \\in E$ (with $e \\neq e'$) to an entity $e\" \\in E$ that is in the vocabulary of $o_f$ (where $e$ may be the same as $e\"$, but need not). An FCQ may also be used to interrogate a domain entity $d\\in D$ independently.\nThe first sentence can be intuitively formalised as (and with abbreviations due to space and readability): $\\forall x(FCQ(x) \\rightarrow \\exists y,z(referent(x,y,z) \\land FoundOnto(y) \\land Element(z) \\land (containsVocab(y,z) \\lor \\exists w(containsVocab(y, w)\\land hasProperty(w,z)))))$. While we could have chosen to push it into second order, since it refers to properties of elements, we chose not to, because for any implementation it will have to be pushed down to the"}, {"title": "Definition 5 (Relationship CQ)", "content": "A Relationship CQ can be used to determine several key characteristics of a relationship, being:\na relationship's arity (arity CQ, aRCQ), where the relationship has an arity of at least 2, and at least two participants $d,d' \\in D$ (which may already be represented in the ontology as $e,e' \\in E$);\nwhether the relationship is elementary (efRCQ) and not further decomposable without losing information;\nits participating entities (domain-range CQ, drRCQ), which requires an ontology entity $e \\in E$ that is a unary (class/concept) for the n-ary relationship $e' \\in E$ (with $e \\neq e'$) in the ontology $o \\in O$; or\nits relational property (relational property CQ, rpRCQ). The relational property $r\\in R$ asked about in a rpRCQ for a particular ontology $o \\in O$ should be one expressible in the representation language of $o$.\nFormally, and also here pushing it into FOL for the same practical reasons as for FCQs, $\\forall x(RCQ(x) \\rightarrow \\exists =1 y\\exists z(mention(x,y)\\land Relationship(y) /hasParticipant(y,z)))$. For efRCQ, the negation is less easy to capture effectively and the three sample questions are too few and diverse to extract features from. For instance, Halpin's \"Can you rephrase the information in terms of a conjunction?\" [13] and inspired by an ORM context, \"Does the uniqueness constraint span n or n-1 roles?\u201d. Functional dependencies have a rich literature in database theory, but it plays no role when one can represent only binary relationships like in OWL, and therefore we leave it without additional properties for the time being. The drRCQ can be formalised as follows $\\forall x(drRCQ(x) \\rightarrow \\exists =1 y\\exists z(requires(x,y,z) / Relationship(y) \\land Class(z) \\land Ontology(w)\\land containsVocab(w,y) \\land containsVocab(w,z)))$. Finally, the rpRQC has only the basic,"}, {"title": "Definition 6 (Metaproperty CQ)", "content": "A Metaproperty CQ refers to exactly one metametaproperty $m\\in M$ and is used to classify a foundational or domain entity $e \\in E$ or $d \\in D$ into, or as being a metaproperty $n \\in N$."}, {"title": "4 Usage of the Model for Competency Questions", "content": "We will introduce a user story and potential broader use on how the QuO can assist first and describe how the CQs relate to methodologies, touch upon faulty CQs, and finally mention the repository of CQs, ROCQS."}, {"title": "4.1 Broad intended use: examples", "content": "We commence with a user story about ontology development, first introducing some the problems an ontologist may encounter, and then look at where and how the various types of CQs can be of use.\nSarah, who has a passion for coffee and a growing interest in its complexities, wishes to integrate a coffee ontology in an information system. Sarah wants to design CQs"}, {"title": "As the user story demonstrates", "content": "each CQ type can be relevant for ontology development. More generally, different types of CQs can be useful at different stages in ontology development. To illustrate this, we consider the NeON methodology [23], among"}, {"title": "4.2 Exemplary CQs, 'almost CQs', faulty CQs, and answerability", "content": "CQs can be problematic or 'faulty' i) due to syntax and semantics issues, ii) contextually due to expressivity mismatches of the query language or the ontology language, iii) due to the ontology's content, and iv) relative to the type of CQ. Due to space limitations, we briefly consider only the general idea how they manifest for causes ii and iv.\nTo illustrate cause iv: FCQs may be faulty in one principal way: it asks to make distinctions that are not made, or: made differently, in the foundational ontology it was designed for and so it is of no use. For instance, to ask about process histories when trying to align the domain entity to DOLCE\u2014it does not have process history-or to ask about abstract things when trying to align an entity to BFO, which does not contain abstract. Likewise, Sarah's CQ on \u201cfurther processes\" for 'pouring (a drink)' is useful for BFO, but less so for aligning to an entity in DOLCE. It may also be the case that some FCQs are better than others because the questions are better understood by the developer [3]. Regarding bad RCQs, and rpRCQ specifically, they fall at least partially in the second option above: many computational ontology languages have very few relational properties or they are highly restricted in their use. Examples for other categories exist likewise, although it was difficult to devise clearly faulty MpCQs. What may happen rather, is that a metaproperty does not apply to certain categories of entities but that such an entity is interrogated nonetheless, and then if answer options are only, say, 'telic' and 'atelic', i.e., without an 'not applicable' third answer option, a question may not be perceived to be answerable. For instance, the question \"Is a house's endpoint determined outside that process?\" is nonsensical in an endurantist commitment, since House is an endurant, not a perdurant and even less so a process. Conversely, Sarah's rigidity question for the coffee bean is relevant in the endurantist commitment."}, {"title": "Are there animals that are both a carnivore and a herbivore", "content": "where a 'no' means verifying that the ontology has or entails such an axiom or, when used in development mode, to add Carnivore  Herbivore  if not already present or entailed.\nChecking cardinality constraints; e.g., \u201cDo humans have more than four limbs?\u201d where upon a 'no' it must not be the case that the ontology contains a qualified cardinality constraint Human $\\geq n$hasPart.Limb where $n \\geq 4$ without also Human $\\leq 4$hasPart. Limb or Human  4 hasPart. Limb."}, {"title": "4.3 The Repository of Ontology Competency QuestionS (ROCQS)", "content": "To contribute to further analysis of bad, good, and exemplary questions, we created the Repository of Ontology Competency QuestionS (ROCQS), which consists of 438 CQs covering all types described in this paper. ROCQS conforms to Findable, Accessible, Interoperable, and Reusable (FAIR) principles to enhance their usability in the ontology development process as follows. It is publicly available4, the CQs are linked with the specific ontologies they assess for context and understanding, and the coffee use-case is meant to encourage correct usage of CQs. In the near future, we plan to enable edit access of ROCQS, either through a Wiki or a portal as a front with a database back-end based on the EER diagram snippets presented in Section 3."}, {"title": "5 Discussion", "content": "This first attempt at disentangling CQs for ontologies showed that on the same basis, more types of CQs could be devised, such as the MpCQs, where each of them is plausibly relevant for one or more tasks in the ontology development processes well beyond only scoping and validation. While there were ample SCQs and VCQs readily available, perhaps also thanks to introduction and initial framing of CQs for ontologies as SCQs and VCQs in [25], we needed to design templates and generate CQs for other categories. Which type will have a greater overall impact on ontology development and quality is yet to be investigated as future work.\nThe application of CQs in the ontology development process, as demonstrated with Sarah's coffee ontology use case, provides guidance applicable to various domains. The use of ROCQS may also be facilitated by extending it with more questions than the current, to be best of our knowledge, largest collection of CQs. ROCQS may also help to keep track of perceived to be easier or harder questions. Understandability of CQs was noted in [3], in that different wordings or sentence structures of interrogating about the same modelling choices may affect their practical use. Further, it may assist in examining Watson's recent exploration of \u201cworthwhileness\u201d of the information-seeking act of questions [26] and what worthwhile may mean for CQs for ontologies."}, {"title": "6 Conclusion", "content": "The paper presented a model for Competency Questions within the context of ontology engineering. QuO, identifying five main types of CQs, divided into ontological CQs and domain CQs: Scoping (SCQ), Validating (VCQ), Foundational (FCQ), Relationship (RCQ), and Metaproperty (MpCQ) questions. Each type serves distinct purposes within ontology development and they each differ in key constituents of the questions, therewith enhancing the clarity and effectiveness of CQs in ontology development. This, in turn, also assists in determining how CQs can be good or faulty. Diverse usage of the CQs at different stages of ontology development was demonstrated with a use-case and additions to the NeOn methodology. To facilitate further research and use of CQs, we created the ROCQS repository with 438 CQs, where the questions are categorised by type, including existing CQ datasets and new sample questions and question templates.\nThere are multiple avenues for future work, most notably on the effectiveness of FCQs, RCQs, and MpCQs on ontology quality and usability, and prospects for automated generation and evaluation of such CQs, and how to best integrate QuO in the various ontology development methodologies."}]}