{"title": "Explainable AI for Enhancing Efficiency of DL-based Channel Estimation", "authors": ["Abdul Karim Gizzini", "Yahia Medjahdi", "Ali J. Ghandour", "Laurent Clavier"], "abstract": "The support of artificial intelligence (AI) based\ndecision-making is a key element in future 6G networks, where\nthe concept of native AI will be introduced. Moreover, AI\nis widely employed in different critical applications such as\nautonomous driving and medical diagnosis. In such applications,\nusing AI as black-box models is risky and challenging. Hence,\nit is crucial to understand and trust the decisions taken by\nthese models. Tackling this issue can be achieved by developing\nexplainable AI (XAI) schemes that aim to explain the logic behind\nthe black-box model behavior, and thus, ensure its efficient and\nsafe deployment. Recently, we proposed a novel perturbation-\nbased XAI-CHEST framework that is oriented toward channel\nestimation in wireless communications. The core idea of the\nXAI-CHEST framework is to identify the relevant model inputs\nby inducing high noise on the irrelevant ones. This manuscript\nprovides the detailed theoretical foundations of the XAI-CHEST\nframework. In particular, we derive the analytical expressions\nof the XAI-CHEST loss functions and the noise threshold fine-\ntuning optimization problem. Hence the designed XAI-CHEST\ndelivers a smart input feature selection methodology that can\nfurther improve the overall performance while optimizing the\narchitecture of the employed model. Simulation results show\nthat the XAI-CHEST framework provides valid interpretations,\nwhere it offers an improved bit error rate performance while\nreducing the required computational complexity in comparison\nto the classical DL-based channel estimation.", "sections": [{"title": "I. INTRODUCTION", "content": "Artificial intelligence (AI) is expected to play a crucial role\nin the overall design of future networks. In particular, 6G will\ntransform the classical Internet of Things (IoT) to \"connected\nintelligence\", by leveraging the power of AI to connect billions\nof devices and systems worldwide [1]. This concept is defined\nas native (AI) which is a key element that differentiates 6G\nnetworks from the previous wireless networks. In native AI,\ndistributed AI will be embedded within the functionality of\nall layers [2] to support demands for high data rates and low\nlatency-critical applications.\nGenerally speaking, the AI-enabled intelligent architecture\nfor 6G networks defines several layers including the intelligent\nsensing layer [3]. It is worth mentioning that robust envi-\nronment monitoring and data detection are of great interest\nin 6G smart applications like autonomous driving [4]. Note\nthat ensuring the reliability of the intelligent sensing layer is\nhighly impacted by the channel estimation accuracy since a\nprecisely estimated channel response influences the follow-up\nequalization and decoding operations at the receiver, therefore,\nit affects the sensing accuracy [5]. In this context, channel\nestimation is one of the major physical (PHY) layer issues\ndue to the doubly-selective nature of the channel in mobile\napplications. Conventional channel estimation schemes such\nas least squares (LS) and linear minimum mean square error\n(LMMSE) can not be practical in real-case scenarios. This\nis because the LS channel estimation scheme ignores the\npresence of noise in the estimation process and requires the\ntransmission of a large number of pilots which decreases the\ntransmission data rate. Whereas, the LMMSE channel estima-\ntor provides good performance assuming the prior knowledge\nof the channel and noise statistics in addition to its high\ncomputational complexity."}, {"title": "A. DL-based Channel Estimation", "content": "Recently, deep learning (DL) has been employed in the\nPHY layer of wireless communications [6], including channel\nestimation [7]\u2013[10], due to its ability in providing good\nperformance-complexity trade-offs. Among different DL net-\nworks, feed-forward neural networks (FNNs) have been widely\nused as a post-processing unit following conventional channel\nestimators. In [11], the authors proposed an end-to-end FNN-\nbased scheme for channel estimation and signal detection,\nwhere it directly detects the received bits from the received\nsignal. The proposed FNN model consists of 3 hidden layers\nwith 500, 250, and 120 neurons, respectively. We note that\nin this scheme the FNN model is trained to predict 16 bits\nonly, hence, several concatenated models are needed according\nto the total number of transmitted bits. Using the same FNN\nmodel proposed in [11], the authors in [12] proposed an FNN-\nbased channel estimation scheme that is used to predict the\nchannel response using the received signal, received pilots,\nand previously estimated channel. Simulation results show\nthat using the previously estimated channel as an FNN input\nimproves the channel estimation accuracy. Another FNN-based\nchannel estimation scheme has been proposed in [13], where\nLS channel estimation is first applied and combined with the\npreviously estimated channel to be fed as an input to a3\nhidden layer FNN consisting of 512, 256, and 128 neurons,\nrespectively. As reported in [13], employing LS as an FNN\ninput improves the channel estimation accuracy and provides\na comparable performance to the LMMSE channel estimation\nscheme.\nTo further improve the performance while preserving low\ncomputational complexity, the authors in [7]\u2013[9] tried a dif-"}, {"title": "B. XAI Main Concepts, Categories, and Taxonomy", "content": "XAI defines four main concepts as shown in Figure 1: (i)\nInterpretability: is based on the model design and it refers\nto how much the black-box model can be understood by\nhumans. For example, decision tree models have good inter-\npretability since a human can easily understand their logic. ii)\nExplainability: is the ability to clarify and justify a particular\nprediction performed by the black-box model. Hence, it aims\nto clarify the internal functioning of the employed model.\n(iii) Trustworthiness: is the ability to make professionals feel\nconfident in the decisions taken by the black-box model. (iv)\nCausality: is related to the generalization ability of the black-\nbox model, where models should be able to detect cause-effect\nrelations and adapt to environmental changes."}, {"title": "C. XAI for Wireless Communications", "content": "Wireless communications are still in the early stages of\nusing XAI. The majority of related works in the literature are\nsurveys and reviews about the guidelines and importance of\nusing XAI in wireless communications. In [24] the authors\nprovided a review of the core concepts of XAI including\ndefinitions and possible performance vs. explainability trade-\noffs. They mainly focused on reviewing the recent DL-based\nschemes for the PHY and MAC layers and specified the\nexplainability level of the studied schemes which is in general\nlow. In [25] the authors proposed a novel XAI knowledge-\npowered framework for network automation that effectively\nadapts to the dynamic changes of complex communication\nsystems as well as provides a human-understandable explana-\ntion. The proposed XAI scheme aims to explain the decision-\nmaking for automated path selection within the network.\nThe deployment of XAI in the open radio access net-\nwork (O-RAN) was recently surveyed in [26], where the\nauthors performed a comprehensive survey on the use of\nXAI to design a trustworthy and explainable O-RAN archi-\ntecture. Moreover, an explainable machine learning operations\n(MLOps) for streamlined automation-native 6G networks has\nbeen proposed in [27], [28], where Shapley additive ex-\nplanations (SHAP) \u03a7\u0391I scheme is employed to assign the\nfeatures importance [29]. We note that SHAP XAI scheme\nhas been also employed for short-term resource reservation\nin 5G networks [30] and energy-efficient resource allocation,\nwhere the problem becomes more challenging [31], [32]. It\nis worth mentioning that, the majority of DL-based resource\nallocation schemes are based on deep reinforcement learning\n(DRL) where SHAP assigns importance to the features used\nby the DRL agent at each state. These features could be\nthe number of active antennas, utilized bandwidth, number of\nconnected users, and the average data rate. We note that SHAP\nis useful in such applications, however, it can not be efficiently\nused in channel estimation due to the absence of predefined\nfeatures and the high dimensionality of the DL input vector.\nIn addition to network optimization and resource allocation,\nXAI has been employed also in internet-of-things (IoT) net-\nworks. In [33] the authors presented a comprehensive survey\non XAI solutions for IoT systems including the state-of-the-\nart past and ongoing research activities. In particular, they\nfocused on the XAI for IoT adaptive solutions using several\narchitectures based on 5G services, cloud services, and big\ndata management. In [34] the authors proposed a novel model-\nagnostic XAI scheme denoted as transparency relying upon\nstatistical theory (TRUST) for numerical applications. They\nfurther tested the proposed TRUST scheme on cybersecurity of\nthe industrial IoT (IIoT). Simulation results show that TRUST\nscheme outperforms the local interpretable model-agnostic\nexplanations (LIME) scheme [35] in terms of performance,\nspeed, and explainability."}, {"title": "D. Motivation and Contributions", "content": "To the best of our knowledge, the methodology of de-\nploying XAI schemes in PHY layer applications, specifically,\nchannel estimation is still unclear. Noting that the proposed\nXAI-based schemes for network optimization [27], resource\nallocation [30], and secured IoT [33] can not be adapted to\nthe PHY layer applications because in such applications there\nare no clear discriminative features within the model inputs. In\nthis context, this paper aims to design a novel XAI framework\nfor FNN-based channel estimation denoted as XAI-CHEST.\nThis framework is based on a perturbation-based model-\nagnostic global pre-model methodology that jointly performs\nthe channel estimation task and provides the corresponding\ninterpretability. The XAI-CHEST concept has been partially\nproposed in [36], where the key idea is to provide the inter-\npretability of black box models by inducing noise on the model\ninput while preserving accuracy. The model inputs are then\nclassified into relevant and irrelevant sets based on the induced\nnoise. The contributions of this work can be summarized as\nfollows:\n\u2022 Establishing the theoretical foundations of the XAI-\nCHEST framework where the detailed loss functions are\nformulated.\n\u2022 Deriving the analytical expression and the corresponding\nsimulations of the noise threshold optimization to select\nthe best threshold used in filtering the relevant model\ninputs."}, {"title": "II. SYSTEM MODEL", "content": "This section illustrates the considered generic system model\nin addition to the considered DL-based channel estimation\nscheme to be interpreted."}, {"title": "A. OFDM transceiver", "content": "In this work, we use an orthogonal frequency division mul-\ntiplexing (OFDM)-based transmission with non-linear radio\nfrequency (RF) represented by the high power amplifier (HPA)\nat the OFDM transmitter. As shown in Figure 2, the first\noperation on the transmitter side is the binary bits generation.\nGenerated bits are scrambled in order to randomize the bits\npattern, which may contain long streams of 1s or Os. The\nscrambled bits are then passed to the encoder, which intro-\nduces some redundancy into the bits stream. This redundancy\nis used for error correction that allows the receiver to combat\nthe effects of the channel, hence reliable communications can\nbe achieved.\nBits interleaving is used to cope with the channel noise such\nas burst errors or fading. The interleaver rearranges input bits\nsuch that consecutive bits are split among different blocks.\nThis can be done using a permutation process that ensures\nthat adjacent bits are modulated onto non-adjacent subcarriers\nand thus allows better error correction at the receiver. After\nthat, the interleaved bits are mapped according to the employed\nmodulation technique, i.e., BPSK, QPSK, 16QAM, 64QAM,\netc. Bits mapping operation is followed by constructing the\nOFDM symbols to be transmitted. The data symbols and\npilots are mapped to the active subcarriers and passed to\nthe IFFT block to generate the time-domain OFDM symbols\nand followed by inserting the cyclic prefix (CP). Finally, the\nCP-OFDM symbol is subjected to the impacts of HPA non-\nlinear distortion as well as the channel and the additive white\nGaussian noise (AWGN) noise.\nAt the receiver side, the CP is removed and the FFT applied\nto the received symbol. Channel estimation and equalization\nare performed where the equalized data are de-mapped to\nobtain the encoded bits. Afterwards, deinterleaving, decoding,\nand descrambling are performed to obtain the detected bits. We\nnote that the employed system model is based on the IEEE\n802.11p standard [37]."}, {"title": "B. Signal Model", "content": "Consider a frame consisting of $I$ OFDM symbols. The $i$-th\ntransmitted frequency-domain OFDM symbol $s_i \\in \\mathbb{C}^{K \\times 1}$, can\nbe expressed as:\n$s_i[k] =\\begin{cases}\ns_{i,d}[k], & k \\in K_d \\\\\ns_{i,p}[k], & k \\in K_p \\\\\n0, & k \\in K_n\n\\end{cases}$\nwhere $0 \\leq k \\leq K - 1$ denotes the subcarrier index. We note\nthat $K_{on}$ useful subcarriers are used where $K_{on} = K_p + K_d$.\n$s_{i,p} \\in \\mathbb{C}^{K_p \\times 1}$ and $s_{i,d} \\in \\mathbb{C}^{K_d \\times 1}$ represent the allocated pilot\nsymbols and the modulated data symbols at a set of subcarriers\ndenoted $K_p$ and $K_d$, respectively. $K_n = K - K_{on}$ denotes\nthe null guard band subcarriers. $K_{cp}$ samples are added to\nthe time-domain OFDM symbol resulting in $\\tilde{x}_i \\in \\mathbb{C}^{K+K_{cp} \\times 1}$\nwhich is then passed to the HPA. According to the Bussgang\ntheorem [38], the HPA output $u_i \\in \\mathbb{C}^{K+K_{cp} \\times 1}$ can be\nexpressed as follows:\n$u_i = \\rho x_i + z_i,$\nwhere $\\rho$ and $z_i$ refer to the complex gain and the non-linear\ndistortion (NLD), respectively. After that $\\rho$ is compensated at\nthe transmitter and $\\bar{u}_i$ can be rewritten as:\n$\\bar{u}_i = \\frac{u_i}{\\rho} = x_i + \\frac{z_i}{\\rho} = x_i + \\tilde{z}_i,$\nwhere $\\tilde{z}_i = \\frac{z_i}{\\rho}$ denotes the remaining NLD of the HPA.\nThe received frequency-domain OFDM symbol $y_i \\in \\mathbb{C}^{K_{on} \\times 1}$ \nis expressed as follows:\n$y_i[k] = h_i[k] \\bar{u}_i[k] + e_i[k] + \\upsilon_i[k],$"}, {"title": "C. DL-based Channel Estimation", "content": "Conventional channel estimation depends highly on environ-\nment conditions. In frequency-selective slow fading channels,\nthe preamble-based channel estimation is sufficient, since the\ncommunication system encounters only muti-path fading and\nthe channel is not changing over time. However, in double\nselective channels, the impact of Doppler interference is added\nto the communication system. Thus, the estimated channel\nat the beginning of the frame, i.e., the preambles, becomes\noutdated and channel tracking becomes more challenging,\nespecially, in high mobility scenarios. To cope with this\nchallenge, pilot subcarriers are allocated within a transmitted\nOFDM symbol to allow better channel tracking over time,\nwhere several conventional channel estimation and tracking\nschemes are proposed in the literature. In order to further\nimprove the conventional channel estimation accuracy, DL\nmodels are applied as post-processing on top of conventional\nchannel estimators. In this work, we considered the STA-FNN\nchannel estimator [8] as a case study, where we used the op-\ntimized XAI-CHEST framework to provide the corresponding\nreasonable interpretations.\nConventional STA channel estimation scheme [14] is based\non the DPA estimation where the demapped data subcarriers\nof the previously received OFDM symbol are used to estimate\nthe channel for the current OFDM symbol such that:\n$d_i = D(\\frac{Y_i}{h_{DPA_{i-1}}}), \\  h_{DPA_i} = h_{LS},$\nwhere $D(.)$ refers to the demapping operation to the nearest\nconstellation point according to the employed modulation\norder. $h_{LS}$ stands for the LS estimated channel at the received\npreambles. Thereafter, the DPA channel estimates are updated\nin the following manner:\n$h_{DPA} = \\frac{Y_i}{d_i}$.\nAfter that, frequency-domain averaging is applied where\nthe DPA estimated channel at each subcarrier is updated as\nfollows:\n$\\bar{h}_{FD,i}[k] = \\sum_{\\lambda=-\\beta}^{\\beta} \\omega_{\\lambda} h_{DPA_i}[k+\\lambda], \\ \\omega_{\\lambda} = \\frac{1}{2\\beta+1}$.\nFinally, time-domain averaging is employed to reduce the\nAWGN noise impact such that:\n$h_{STA_i} = (1 - \\frac{1}{\\alpha})h_{STA_{i-1}} + \\frac{1}{\\alpha}\\bar{h}_{FD_i}$.\nWe note that conventional STA channel estimation performs\nwell in the low signal-to-noise ratio (SNR) region. However,\nit suffers from a considerable error floor in high SNR regions\ndue to the large DPA demapping error resulting from (7) and\nthe fixed frequency and time averaging coefficients $\\alpha = \\beta = 2\nin (9) and (10), respectively. Therefore, the conventional\nSTA channel estimation scheme is not practical in real-case\nscenarios due to the high doubly-selective channel variations.\nAs a workaround, a 3 hidden layer FNN consisting of 15\nneurons per layer is utilized as a nonlinear post-processing\nunit following STA [8]. STA-FNN can better capture the time-\nfrequency correlations of the channel samples, in addition to\ncorrecting the conventional STA estimation error."}, {"title": "III. XAI-CHEST FRAMEWORK DESIGN", "content": "Providing external interpretability of the black-box model\nused for channel estimation could be achieved through clas-\nsifying the model\u2019s input into relevant and irrelevant by\nemploying a perturbation-based methodology. The main in-\ntuition is that if a subcarrier is relevant for the decision-\nmaking of a trained black box model, then adding noise\nwith high weight to this subcarrier would negatively impact\nthe accuracy of the model. Whereas, if the subcarrier is\nnot contributing to the decision-making of the model, then\nwhatever the induced noise is, the channel estimation accuracy\nwill be preserved. Therefore, it is expected that considering\nonly the relevant subcarriers as model inputs would improve\nchannel estimation performance in comparison to the case\nwhere the full subcarriers are given to the model. Moreover, by\nreducing the model input size, the employed architecture could\nbe further optimized resulting in significantly decreasing the\noverall computational complexity. Hence, by using the XAI-\nCHEST framework, we can obtain a reasonable interpreta-\ntion of the model decision-making methodology, improve the\nchannel estimation performance as well as reduce the required\ncomputational complexity."}, {"title": "A. Methodology", "content": "Let $\\mathbb{U}$ be the black-box utility model with parameters $\\theta_{\\mathcal{U}}$.\nIn general, the $\\mathbb{U}$ model refers to the channel estimation\nmodel, where $\\mathbb{h} \\in \\mathbb{R}^{2K_{on} \\times 1}$ and $\\mathbb{h}^{out} \\in \\mathbb{R}^{2K_{on} \\times 1}$ denote\nthe conventional estimated channel that is given as an input\nto the $\\mathbb{U}$ model and the corresponding output, respectively.\nWe note that the size of $\\mathbb{h}$ is $2K_{on}$ since the conventional\nestimated channel is converted from complex to real domain\nbefore further processing by stacking the real and imaginary\nvalues vertically in one vector. $\\Phi$ refers to the employed\nconventional channel estimation scheme. The objective is to"}, {"title": "B. Noise Weight Threshold Fine Tuning", "content": "After accomplishing the $\\mathcal{N}$ model training, the fine-tuning\nof the noise weight threshold denoted by $\\gamma$ is essential for\nclassifying the model inputs into relevant and irrelevant. This\ncould be formulated as an optimization problem, where the\nobjective is to select the best input combination that minimizes\nthe mean squared error (MSE) between the corresponding\nestimated channel by the $\\mathcal{U}$ model and the true channel. We\nnote that the fine-tuning optimization problem is subjected to\nimproving or preserving the BER in comparison to the case\nwhere the full subcarriers are given to the $\\mathcal{U}$ model.\nLet $\\Omega$ be the generic input given to the $\\mathcal{U}$ model and\n$\\Psi$ be the optimized model input. The considered fine-tuning\noptimization problem can be mathematically expressed as:\n$\\min_{\\Psi, \\theta_{\\mathcal{U}}} L_{\\mathcal{U}} = \\frac{1}{N_{tr}} \\sum_{i=1}^{N_{tr}} (h_i - \\mathbb{U} (\\Omega = \\Psi, \\theta_{\\mathcal{U}}))^2$\ns.t. BER($\\Omega$ = $\\Psi$) < BER($\\Omega$ = Full)\nWe note that the defined optimization problem in (17) is not\nconvex. The non-convexity can be shown by the line restriction\nmethod illustrated in Lemma 1 [40].\nLemma 1. Restriction of a convex function to a line\nA function $f: \\mathbb{R}^n \\rightarrow \\mathbb{R}$ is convex, if and only if\n$\\forall x \\in dom f$ and $\\forall v \\in \\mathbb{R}^n$, the function $g = f(x + tv)$ is\nconvex on dom$g = {t \\in \\mathbb{R} | x + tv \\in dom f}$\nLemma 1 is based on the line restriction method to prove the\nconvexity of the considered function. In this context, the initial\nloss function $L_{\\mathcal{U}}$ is reduced to the restricted loss function\ndenoted as $g(t) = L_{\\mathcal{U}}(\\theta_{\\mathcal{U}} + tv)$, where $v$ and $t$ denote\nthe randomly selected slice and the step size, respectively.\nFigure 4 shows the $g(t)$ where we can see numerous lo-\ncal minima signifying the non-convexity of our optimization\nfunction expressed in (17). We note that in the next section,\nwe provided a heuristic solution of (17), where the BER vs\nnoise weight threshold is analyzed and the best threshold is\nselected according to the lowest recorded BER among all the\nconsidered thresholds."}, {"title": "IV. SIMULATION RESULTS", "content": "This section illustrates the performance evaluation of the\nproposed XAI-CHEST framework, where BER performance of\nSTA-FNN channel estimation scheme is analyzed taking into\nconsideration full, relevant, and irrelevant subcarriers. First of\nall, we start with the noise weight threshold fine-tuning, where\nthe simulation-based solution of (17) is provided. After that,\nthe performance evaluation is performed according to several"}, {"title": "A. Noise weight threshold fine-tuning", "content": "The first step of solving (17) is to analyze the distribution of\nthe noise weight vector $\\mathbb{b}_{STA}^{'}$, over the input subcarriers. Both\nthe $\\mathcal{U}$ and $\\mathcal{N}$ models are trained using the HFS channel model\nwith QPSK modulation and 40 dB training SNR. We note that\nwe train the models on SNR = 40 dB since the models can\nlearn the channel better when the training is performed at a\nhigh SNR value because the impact of the channel is higher\nthan the impact of the AWGN noise in this SNR range [42].\nOwing to the robust generalization properties of DL, trained\nnetworks can still estimate the channel even if the AWGN\nnoise increases, i.e., at low SNR values.\nFigure 5(a) shows the distribution of $\\mathbb{b}_{STA}^{'}$. We notice that\nthe majority of subscribers are distributed more towards zero.\nThis signifies that the model is not sure if the subcarriers\ncan be neglected or not. It is worth mentioning that the\npilot subcarriers are assigned the lowest noise weight, i.e.,\n0.1 which reveals that the $\\mathcal{U}$ model is not able to neglect\nthe estimated channels at the pilots, and considering them is\ncrucial for high estimation accuracy. This is consistent with\nthe channel estimation rules, where the channel estimates at\nthe pilots are very close to the ideal channel estimation.\nSelecting the optimized $\\mathcal{U}$ model input $\\Psi$ is determined by\nchoosing the best noise weight threshold $\\gamma$ which is mainly\nresponsible for classifying the subcarriers into relevant and\nirrelevant. To select the optimal $\\gamma$, we simulated the BER\nconsidering all possible values, i.e, $\\gamma = [0.1, 0.2, 0.3, ..., 0.8]$.\nIn each case, we trained the $\\mathcal{U}$ model considering both the\nrelevant and irrelevant subcarrier combinations.\nAs shown in Figure 5(b), we can notice that considering\n$\\gamma = 0.4$ gives the best BER performance among other thresh-\nolds. Therefore, the STA-FNN model needs only $\\Psi$ = 28\nsubcarriers out of the full set, i.e, $\\parallel \\Psi \\parallel = 52$ in order to\nprovide the best possible performance in the considered HFS\nchannel model. On the contrary, all the irrelevant subcarrier\ncombinations are worse than the full case in terms of BER\nperformance. In other words, considering $\\parallel \\Psi \\parallel = 48$ which\ncorresponds to excluding only the four pilot subcarriers is not\nenough to preserve the BER performance of the full case.\nFigure 5(c) shows the BER in terms of $\\gamma$ considering SNR\n= 40 dB. Again, increasing $\\gamma$ is beneficial until reaching\n$\\gamma = 0.4$, where the BER performance degrades. This signifies\nthat in complicated scenarios as the case in employing the"}, {"title": "B. Impact of modulation order", "content": "In this section, we further investigate the impact of the\nemployed modulation order on the noise weight distribution\nconsidering also the HFS channel model. Figure 6 shows the\nBER performance of employing the HFS channel model using\nQPSK, 16QAM, and 64QAM, respectively. In general, the\nBER performance degrades as the modulation order increases.\nThis degradation is mainly due to the impact of the dominant\nmulti-path fading in addition to the DPA remapping error.\nMoreover, in this scenario, employing only the four pilot\nsubcarriers performs almost similarly to the full case. To\nimprove further the BER performance, more relevant subcar-\nriers are needed. Therefore, when the environment becomes\nmore challenging, the channel variation increases among the\nsubcarriers, thus, the noise distribution is shifted towards zero\nsignifying the need for more relevant subcarriers.\nHowever, we can notice that for higher the modulation\norder, the number of neglected subcarriers increases. This\nis because the conventional STA channel estimates at these\nsubcarriers are so noisy, so the model neglects them. It is\nworth mentioning that, the model neglects subcarriers due\nto two main reasons: (i) LFS: The channel variation among\nthe subcarriers is slow, so few subcarriers are required to\naccurately estimate the channel, as we will discuss in the\nnext Section. (i) HFS: Here the channel variation is significant\namong the subcarriers, thus, the $\\mathcal{U}$ model should consider\nmore relevant subcarriers to guarantee good channel estimation\naccuracy. However, this is subject to the condition where the\nconventional estimated channel at the considered subcarriers\nis useful and not so noisy. Therefore, in the HFS channel\nmodel, more relevant subcarriers are needed and this is shown\nin generally shifting the noise weight distribution towards\nzero. However, for higher modulation orders, mainly 64QAM,\nthe neglected subcarriers are huge due to the bad channel\nestimation quality at these subcarriers. Hence, avoiding them\nis useful to guarantee BER performance. We note that the\nfour pilot subcarriers are assigned the lowest noise weight for"}, {"title": "C. Impact of channel frequency selectivity", "content": "In this section, we will investigate the performance eval-\nuation using the same methodology of Section IV-B but\nconsidering the LFS channel model. Figure 8 shows the\nBER results of employing QPSK, 16QAM, and 64QAM\nmodulation orders, respectively. We can notice a significant\nperformance degradation as the modulation order increases\nwhich is expected. The nice thing lies in employing the pilot\nsubcarriers only, where the corresponding BER performance\nimproves in comparison to the full case. In other words, the\nBER performance improvement of employing the pilots in\ncomparison to the full case for 64QAM modulation is higher\nthan that for 16QAM and QPSK modulations, respectively.\nThis is because applying the frequency and time domain\naveraging in the conventional STA channel estimation is no\nlonger reliable due to high demapping error resulting from\nthe DPA channel estimation (7) that is applied prior to the\nSTA estimation. Similarly to the discussion in Section IV-A,\nemploying more relevant and irrelevant subcarriers leads to\na BER performance degradation in both cases where in the\nrelevant case, the BER performance is approaching the full\ncase, while in the irrelevant case, the performance is going\noff the full case.\nFigure 9(a) illustrates the noise weight distribution of train-\ning the models using different modulation orders. We can\nnotice that distribution is shifted towards one, where the\nmajority of subcarriers are assigned noise weight equal to\none. This signifies that these subcarriers are not important\nfor the decision-making methodology of the $\\mathcal{U}$ model. This\nis because, in the LFS channel model, the channel presents\na smooth variation over the subcarriers, thus, the STA-FNN"}, {"title": "D. Impact of RF non-linear distortion", "content": "In order to further analyze the impact of HPA-induced\nnonlinearities, we employ QPSK modulation and IBO = 2 dB\nin the HFS channel models. Figure 10 shows the noise weight\ndistribution as well as the BER analysis. It can be noticed\nthat only 2 pilots are assigned the lowest noise weight in\ncomparison to 4 in the linear case. This ensures that the HPA-\ninduced nonlinearities contribute to confusing the subcarrier\nfiltering procedure. However, a slight BER rate performance\nimprovement can be achieved by employing $\\parallel \\Psi \\parallel = 27$ for $\\gamma =$\n0.5. Therefore, similar insights can be concluded as the linear\ncase where the proposed perturbation based XAI framework\nis able to filter out the relevant subcarriers while preserving\nthe BER performance when using the full subscribers as an\ninput to the $\\mathcal{U}$ model."}, {"title": "E. Impact of training SNR", "content": "The sensitivity of the $\\mathcal{U}$ model training considering different\nSNR values is analyzed in this section. Figure 11(a) shows\nthe noise distribution when considering several training SNRs\nemploying the LFS channel model and QPSK modulation\norder. Starting by training SNR = 0 - 5 dB, we can see that\nthe pilot subcarriers are assigned 0.2 noise weight and the\ndistribution is flattened along the entire range. This reveals that\neven though the pilots have accurate channel estimates, due to\nthe dominant impact of AWGN noise, the $\\mathcal{U}$ model is not\nable to assign the lowest noise weight to the pilot subcarriers.\nIt is worth mentioning that when training on SNR = 10 dB,\nthe model starts to identify the pilot subcarriers as the most\nrelevant subcarriers by assigning to two pilots the lowest noise\nweight, i.e., 0.1. Moreover, as the training SNR increases,\nthe noise distribution is shifted more towards one, signifying\nthat the model is better identifying the relevant and irrelevant\nsubcarriers. Figure 11(b) shows the BER performance when\nthe $\\mathcal{U}$ model is trained on a specific SNR and tested on the\nentire SNR range. We can notice that training on higher SNR\ngives better performance than training on the lower SNR due to\nthe fact the AWGN noise is negligible at high SNRs, thus the\n$\\mathcal{U}$ model can learn more efficiently the channel. In addition,\nthe trained model on high SNR can perform well when tested\non lower SNRs due to the generalization ability of FNN\nnetworks. In conclusion, training on low SNR values leads\nto a limited performance improvement over the conventional\nSTA channel estimation. Whereas training on high SNR allows\nthe smart feature selection resulting in optimizing the $\\mathcal{U}$\nmodel input size as well as significantly improving the BER\nperformance in comparison to the conventional STA channel\nestimation."}, {"title": "F. Impact of conventional channel estimation accuracy", "content": "To further analyze the impact of the conventional channel\nestimation which is implemented prior to the FNN processing\non the noise weight distribution, we considered in this section\nthe DPA-FNN [7", "9": "channel estimation\nschemes in addition to STA-"}]}