{"title": "Assisted morbidity coding: the SISCO.web use case for identifying the main diagnosis in Hospital Discharge Records", "authors": ["Elena Cardillo", "Lucilla Frattura"], "abstract": "Coding morbidity data using international standard diagnostic classifications is increasingly important and still challenging. Clinical coders and physicians assign codes to patient episodes based on their interpretation of case notes or electronic patient records. Therefore, accurate coding relies on the legibility of case notes and the coders' understanding of medical terminology. During the last ten years, many studies have shown poor reproducibility of clinical coding, even recently, with the application of Artificial Intelligence-based models. Given this context, the paper aims to present the SISCO.web approach designed to support physicians in filling in Hospital Discharge Records with proper diagnoses and procedures codes using the International Classification of Diseases (9th and 10th), and, above all, in identifying the main pathological condition. The web service leverages NLP algorithms, specific coding rules, as well as ad hoc decision trees to identify the main condition, showing promising results in providing accurate ICD coding suggestions.", "sections": [{"title": "1. Introduction", "content": "The proper use of standard classifications, such as the International Classification of Diseases (ICD) and coding of morbidity data has always been fundamental for all general epidemiological and many health-management purposes (WHO, 2016). One example is the use of the information flow of the Hospital Discharge Records (SDO) collected in national databases for monitoring hospitalization episodes provided in public and private hospitals and thus the provision of hospital assistance. This has become an indispensable tool for both administrative analyses (i.e., for accurate billing) and clinical elaborations (e.g., health quality assessment), which can bring to the planning of new measures to support healthcare and welfare activities or to more strictly clinical-epidemiological and outcome analyses.\nIn this frame, although approaches to coding vary across institutions, clinical coding specialists frequently perform coding retrospectively. The assignment of codes to each patient episode of care during hospitalization is determined by different factors, among others by the coder's interpretation of the available case notes or the completeness of the electronic health records. As a result, accurate coding is dependent on both the intelligibility of the case notes and the coders' knowledge of medical terminology (Sundararajan et al. 2015).\nSeveral studies have indicated poor reproducibility of clinical coding (Tatham A., 2008) and poor accuracy which seems not dependent on the version of the standard coding system used, which in the case of SDO is ICD (Quan et al. 2014).\nIn recent years, even if the application of artificial intelligence (AI) has begun to attract and, in some cases, assist clinicians in the practice of medical coding, the performances achieved by AI models do not meet expectations. Many studies have proven this, especially concerning inadequate"}, {"title": "1. 2. Materials and Methods", "content": ""}, {"title": "2.1. Hospital Discharge Records", "content": "The Hospital Discharge Record Database was established, in Italy, with the decree of the Ministry of Health on 28 December 1991. It serves as a tool for collecting information about each patient discharged from public and private hospitalization institutions across the country. The information gathered in each SDO includes, beyond the patient's characteristics (e.g., age, sex, etc.), the peculiarities of the hospitalization (e.g., institution and discharge discipline, method of discharge, etc.) and, above all, clinical features (e.g., the main diagnosis, concomitant diagnoses, diagnostic or therapeutic procedures, and interventions), excluding information relating to drugs administered during hospitalization.\nSubsequently, other decrees introduced new regulations for the information flow transmission to the Ministry of Health, expanded the information content of the SDO, and adopted the international classification ICD-9-CM version 1997 (Ministerial Decree October 27, 2000, n. 380) for the coding of diagnoses and diagnostic and therapeutic procedures, then updating this regulation with the adoption of the 2007 Italian version and introducing the adoption of the Diagnosis Related Group classification (DRG), version 24 for hospital admissions (Ministerial Decree December 12, 2008).\nIn 2011, the \"It.DRG Project\u201d, coordinated by the Ministry of Health was launched to develop a new classification and assessment method for inpatient care, specific and representative to the Italian context (Sforza et al. 2021). The objective of this project was: i) the development and testing of an updated version of the ICD-10 classification (International Classification of Diseases and Health Related Problems-10th Revision) that incorporates WHO-approved updates and makes minor changes, finalizing the so-called Italian modification of ICD-10 (ICD-10-IM); the development and testing of the Italian classification of Interventions and Procedures (CIPI), a version of the section on procedures and interventions of ICD-9-CM modified and supplemented, to adapt it to specific Italian needs and to provide for integration with codes that allow for the detection of information on (i) Procedures/treatments provided (also) in ambulatory care; (ii) Medical-surgical devices; (iii) High-cost drugs; and iii) finally, a new version of the DRG system (Nonis et al. 2018)."}, {"title": "2.1.1. The International Classification of Disease", "content": "The International Classification of Disease is the most known and widely used standardized WHO classification system, which was originally intended to facilitate the statistical analysis of health data (Moriyama et al. 2011). Each successive revision to the ICD, typically spanning 10-20 years, has sought to address new use cases while adapting to advances in medicine and healthcare and has continued to grow in number of total codes (Williamson et al. 2024). The tenth version, ICD-10 has approximately 14.000 codes for health conditions, signs, symptoms, and reasons to encounter health services. This revision has then been renewed with the implementation of the eleventh revision of the classification, ICD-11, developed thanks to an unprecedented collaboration between WHO working groups, knowledge engineers and informaticians from Stanford University (USA), and professionals all over the world to become a global standard for health data clinical documentation and statistical aggregation. It presents a new coding structure compared to previous revisions and is fully digital for the first time. The basic component is an underlying ontology database containing all ICD entities (over 55,000 unique entities). The new structure, its digital nature, and the tools provided to support the use of the classification enhanced its application flexibility. Moreover, it is interoperable with health information systems and other coding systems.\nAs mentioned above, in Italy, ICD-9-CM is used for morbidity coding, containing over 15,000 diagnosis codes. Its use is also recommended in primary care prescription documents and for diagnoses and problems encoding in the Italian Patient Summary each entity within the ICD-9-CM is encoded by a unique identification string consisting of three to five digits and an optional single letter prefix corresponding to a supplementary category. Practical applications of the ICD in healthcare have expanded and now have come to include the indexing of health record data in hospitals, the coding of medical billing claims (Moriyama et al. 2011), and the assessment of quality of patient care (O'Malley et al. 2005)."}, {"title": "2.1.2. The coding of the main condition", "content": "A coded health data record can have a varying number of diagnostic codes. Some authors, considering that there is no uniform definition of \u201cmain condition\u201d, noted that one of these diagnoses must be coded as the main condition, known also as \u201cmain diagnosis\u201d, \u201cprimary diagnosis\u201d, \u201cprincipal diagnosis or \"discharge diagnosis\u201d (Sukanya, 2017).\nTwo definitions have been used for the main condition in ICD-coded health data: a \"resource use\" definition and a \u201creason for admission\u201d definition. In Italy, the first definition is implemented, as said"}, {"title": "2.2. The SISCO.web approach", "content": "The main scope of the SISCO.web service, as mentioned above, is to support the coding of SDOs, guiding the physicians to identify and code the main condition, allowing the most appropriate ICD-9-CM codes, and in the future ICD-10 codes. This means that its function is to guide the user before the compilation of the SDOs, to choose and assign appropriate ICD codes to the diagnostic formulations available in medical record documentation collected during patient hospitalization, and, further, to identify among different diagnoses, the main one (Cardillo et al. 2019). Peculiarities of this support system are:\n\u2022\tA knowledge base containing clinical concepts, related terms, and mappings to ICD-9-CM for managing the transition from the usual scientific language to the coding language. This means, the integration of such resources with the ICD-9-CM systematic index, the ICD-9-CM alphabetical index, and other additional terms (synonyms, acronyms, linguistic variants, common medical terms, etc.).\n\u2022\tStandardized coding rules (e.g., \u201cdiagnostic and procedure codes are to be used at their highest level of specificity\u201d; \u201cthree-digit codes are to be assigned only if there are no four-digit codes within that code category\"; etc.).\n\u2022\tA rule engine for managing these rules, represented by the Business Rules Management System (BRMS) \u201cDrools\u201d.\nAs shown in Fig. 1, the SISCO.web architecture includes three main layers:\n1.\tPresentation layer: handling the interactions that users have with the software. Here the web component, has a multi-tier architecture, deployed on a Tomcat web server, offering two web interfaces (WUIs) to support the compilation of SDOs. The WUIs make JSON calls to the Web Services of the underlying levels, which access the data resources built by the batch\""}, {"title": "2.2.1. The SISCO.web Knowledge Base", "content": "The knowledge base (KB) built for the project and used in the TEM integrates a series of terminological resources related to diagnoses and interventions/procedures in EHRs. The main data sources, as shown in Fig. 3, are represented by the Italian versions of:\n\u2022\tICD-9-CM (v. 2007), Systematic index of diagnoses and procedures, considering the codes at the maximum level of specification.\n\u2022\tICD-9-CM (v. 2007), Alphabetic index of diagnoses, and Alphabetic index of procedures.\nFor this project, an ontological version of ICD-9-CM has been created starting from the available ministerial tables of the classification, bringing to the development of the ICD-9-CM Ontology in Owl.\nThe lists of terms present in ICD-9-CM, in some cases inappropriate or outdated jargon, were supplemented with terms taken from other sources such as:"}, {"title": "2.2.1. The Text encoding module", "content": "The first module is designed for searching the appropriate code for one or more diagnoses and procedures/interventions mentioned in the patient's discharge letter. The user enters a diagnosis in the search box using free text, which can be a single word or a multi-word term (T1). As the user starts typing, the system provides suggestions for autocompletion based on the knowledge base (KB), drawing from systematic or alphabetical indexes, MeSH synonyms, glossaries of general practitioners or emergency physicians, rare diseases, etc. These suggestions are the ones that have the entered text as their prefixes. Subsequently, the system conducts a syntactic search on the description of each attribute associated with ICD-9-CM classes in all types of resources in the KB. Different weights are assigned to each attribute based on its source and position. The search yields a list of ICD classes (diagnoses/procedures) that meet the search criteria, i.e., one or more attributes containing T1. The results are displayed in descending order based on their score.\nTo enhance the search function for the coder, the system permits filtering of the results in the list. This is achieved by incorporating the terms used in the query with related terms suggested by the system. These suggestions are based on their co-occurrence with the searched term within the ICD descriptors. To be more specific, the descriptions of the resulting ICD classes are tokenized to extract the most significant words (stop words are not considered). Moreover, to facilitate the tokenization and subsequent counting of term occurrences, the following ICD attributes are to be considered:\n\u2022\tThe main description of the ICD class, along with any supplementary descriptions and inclusion terms in the systematic index.\n\u2022\tThe description of the entry terms in the alphabetical index.\nThe system counts the number of times each token/term appears in the list of ICD classes resulting from the search. It then arranges the terms in descending order based on the number of occurrences and presents them to the user as related terms in a separate box. The user can choose one of the related terms or continue entering other free text in the search box. The system provides suggestions for autocompletion as the user enters more terms (T1, T2, etc.). The result list of ICD codes (diagnoses or procedures, depending on the user's initial selection) is updated to consider the search criteria, ensuring that one or more attributes contain all the input terms (T1, T2, etc.), and co-occurrences, making the search more precise. A similar approach is used in the ICD-11 Coding Tool, which, unlike SISCO.web, allows also to use ICD chapters and ranges as research filters. From here on the algorithm performs the same steps, until the user selects a specific diagnosis/procedure among the ICD classes displayed in the search results which is always a leaf code. Once the diagnosis/procedure is selected, the system adds it to the list of candidate diagnoses/procedures used by the decision tree algorithm for identifying the main condition.\nIs worth mentioning that the search and coding algorithm for procedures follows the same steps as that for diagnoses, but the Knowledge base which supports the process is smaller. In fact, in the case of procedures, the NLP algorithm examines only terminological resources related to interventions and procedures, therefore fewer terms are indexed. Specifically, the search is conducted almost entirely on the classes contained in the systematic index of ICD-9-CM section procedures, as well as on the procedure terms present in the ICD-9-CM alphabetical index, and the external resource MeSH"}, {"title": "2.2.2. The Identification of the main diagnosis module", "content": "To support physicians in the identification of the main condition, a decision tree was created to adhere to the WHO guidelines for morbidity coding in ICD-10 (Zavaroni et al. 2018). This includes following, on one hand, the WHO ICD-10 rules and guidelines for morbidity coding (WHO, 2016), which are up-to-date compared to ICD-9-CM 2007 rules, and on the other hand the WHO definition of the main condition, i.e., \u00abthe condition, diagnosed at the end of the episode of health care, primarily responsible for the patient's need for treatment or investigation\u00bb. (WHO, 2016, p.147) Furthermore, interventions and procedures were also considered in the decision-making process. To manage the extensive array of ICD codes (about 5,000), they were grouped into three sets:\n1)\t\"relevant surgery\u201d: encompassing interventions or procedures typically requiring an operating room, or those with resource consumption comparable to operating room costs;\n2)\t\u201cselected non-relevant surgical interventions\u201d: encompassing interventions or procedures, other than relevant surgery, that require significant resources, mostly higher than a non-surgical treatment of a condition;\n3)\t\"residual non-relevant surgical interventions\u201d: encompassing interventions or procedures that necessitate fewer resources than non-surgical treatments.\nConditions were categorized into \u201cconditions\u201d (including diseases and clinical manifestations or normal physiological changes) and \u201cpathological conditions\u201d (abnormal anatomy or functioning constituting diseases).\nThe decision tree hierarchy includes: i) specific hospital settings which are highly specialized by age and changes of particular conditions, such as \u201cneonatology\u201d and \u201cpregnancy, delivery, and puerperium\", foreseen specific or partially specific paths; ii) paths for the other hospital settings, according to the general rules and, iii) the interventions/procedures set. Notably, the third group of interventions/procedures mentioned above is excluded as a viable option for identifying the main condition.\nIn Summary, the coding of certain health conditions is driven by the condition itself (pregnancy and related conditions, neonatal health), whereas for others, resource consumption due to procedures is the primary determinant. Thus, when a relevant intervention/surgery is identified, it influences the choice of the targeted condition. The decision tree rules are integrated into the rule engine module of the SISCO.web service.\nThe algorithm which determines the main condition, uses a Drools-based rule engine. Drools is an open-source Business rule management system (BRMS), released under the Apache License 2.0., that can easily be embedded in any Java application, which include an inference engine based on forward and backward chaining (Proctor 2012). The primary function of the Drools rule engine is to match incoming data, (i.e., facts), to the conditions outlined in the rules. It then determines whether and how to execute these rules. Key components in Drools are the following: rules; facts that are matched against the conditions of the rules to execute the applicable ones; a production memory (i.e., where the rules are kept); a working memory (i.e., location for the facts) .\nIn our implementation, the system consists of four components, developed in Java, and utilizes the RabbitMQ message broker (see Fig. 4). The primary component is the SISCO Drools Engine, serving\""}, {"title": "3. Evaluation", "content": "After an internal test conducted by the project's informaticians and terminologists, a more detailed usability test was performed by three physicians: This evaluation employed a subset of pathological conditions extracted from the SEI database mentioned in Section 2, along with diseases and interventions drawn from several anonymized patient discharge letters. These LDO contained multiple diagnosis and interventions/procedures, particularly focusing on complex cases characterized by comorbidities and intricate diagnostic definitions. The aim was to assess the tool's effectiveness in suggesting appropriate codes, required for completing the SDO. At this stage, the evaluation was more qualitative than quantitative, as the physicians were unable to access an LDO/SDO database for the project. Nonetheless, initial results indicate that the system performed well, successfully suggesting the most appropriate ICD-9-CM diagnosis even in instances where the input text in the search box of the TEM module was complex or included comorbidities. On average, SISCO.web provided precise ICD-9-CM code suggestions for 80% of 30 use cases tested by physicians, with improved accuracy when using the related terms feature. An example of diagnosis coding (in this case \u201cdiabetes\u201d) is given in Fig. 6. Here, when a user types \"diabete\u201d (diabetes) into the search box, the system auto-completes with suggestions like \u201cdiabete-nanismo-obesit\u00e0\u201d (diabetes-nanism-obesity) and \u201cpre-diabete\u201d (prediabetes). After selecting \u201cdiabete\u201d, the system displays matching classes in the search results section (considering all the attributes associated to the class, such as title, other description, inclusions, exclusions, alphabetic index terms, etc.), ordered by score. It also suggests related terms (on the left of the page) that co-occur with \u201cdiabete\u201d in the ICD-9-CM descriptors. The user can then select a related term like \u201cmellito\u201d (mellitus), prompting the system to refine results based on both selected terms.\nAt each iteration, the system displays matching classes and related co-occurring terms based on user input. The search progressively narrows down until the user identifies and selects the correct ICD-9-CM class, which is then added to the \u201cSelected Diagnoses\u201d section at the bottom left of the page. Before selecting the proper code, for each code in the results list, the user can view code details (displayed if present on the right of the page and represented by symbols), including:\n\u2022\tLeaf nodes: Indicates to select a leaf code from the list presented, being the selected code not a leaf code.\n\u2022\tExclusion criteria: Lists conditions excluded by that ICD-9-CM class.\n\u2022\tBasic diseases attribute: Advises coding a basic disease before using the selected code.\n\u2022\tUse additional codes: Recommends additional codes relevant to the selected class.\nThese features resulted helpful for avoiding inconsistencies, providing alerts to key ICD-9-CM coding rules, such as the necessity of coding a basic disease first or using leaf codes instead of general three-digit diagnosis codes (rules which in many cases are unknown by professionals or in some cases taken for granted)."}, {"title": "4. Related works", "content": "Different coding support systems have been developed in the last two decades. Some of them aimed to support the coding of causes of death, generally coded using ICD-10. Examples of these tools are MICAR-ACME, of the US National Center for Health Statistics (Israel 1990), and the IRIS system developed by a European consortium (Pavillon et al. 2005). The main issue encountered in these systems is the processing of natural language, which, in the last twenty years has been faced with developing automated coding tools based on Natural Language Processing (NLP) algorithms (see Friedman et al. 2004). Only a few systems were based on properly defined coding rules, as done by (Farkas and Szarvas 2008) and (Cardillo et al. 2018), both focused on the ICD-9-CM coding. In recent years, challenges have been encountered, from the perspective of Artificial Intelligence (AI) and NLP, based on the literature. Many researchers and companies started applying more sophisticated methods such as Neural Networks or Large Language Models (LLM) to enable Electronic Medical Record (EMR) data coding (Rios and Kavuluru 2018). This trend is confirmed also by the results of the CLEF ICD10 task, held in 2020, focused on ICD-10 coding for clinical textual data in Spanish and including, in particular, two subtasks for evaluating systems that predict ICD-10-CM (diagnostic) and ICD-10-PCS (procedural) codes using the CodiEsp corpus (a collection of 1,000 clinical case reports written in Spanish). Here most of the participants used Machine learning approaches and deep learning language models (preferring fine-tuned Multilingual BERT), but also not Machine Learning approaches such as Named Entity Recognition (NER), but the highest mean average precision (MAP) for the prediction of ICD-10 diagnostic codes (0.593) resulted by the combination of a XGBoost classifier and a Jaro Winkler string matching system (see Miranda-Escalada et al. 2020). Other studies focused on the application of general-purpose LLMs (such as ChatGPT 3.5 or 4, LLAMA, etc.) to test their performances in the task of automated coding of diagnoses extracted from Discharge summaries by using the ICD-10 classification. Nevertheless, gaps between the current deep learning-based approach applied to clinical coding and the need for explainability and consistency in real-world practice were reported (Dong et al. 2022). Some studies indicate alternative methods or frameworks specifically designed for automatic ICD coding. For example (Chao-Wei Huang 2022) used a pre-trained language model (PLM) for ICD coding, sharing a similar idea with BERT-XML, an extension of BERT designed for ICD coding. This model was pre-trained on a large collection of EHR clinical notes using an EHR-specific vocabulary (Zhang et al. 2020). Additionally, (Kim and Ganapathi 2021) introduced the Read, Attend, and Code (RAC)"}, {"title": "5. Conclusions and future directions", "content": "This paper shows the approach used for the development of a web service that provides support to physicians, particularly hospital doctors, during the compilation of the SDO while coding in ICD-9-CM, and where necessary in ICD-10, for the main pathology, secondary pathologies, and procedures and interventions. The system also proposes a module based on a series of formal rules that represent a decision tree specifically designed for identifying the main pathological condition, which needs to be indicated and coded in a separate field in SDO. The evaluation of the text encoding module, allowing for the search and suggestion of ICD-9-CM coding for diseases and procedures, has reached fairly good performances in terms of the accuracy of the coding suggestions, the efficiency of the system, and also regarding the usability of the system in the reference context. Differently, some limitations are highlighted concerning the rule engine module, which allows, through a series of steps and interactions with the user, the identification of the main diagnosis. In this case, the initial formalization of the rules provided by the decision tree did not yield the expected results. It has therefore become necessary to update the rules and, above all, to make available ad hoc terminological resources to be submitted to the rule engine to automate certain steps of the decision tree, thus ensuring the required performance compared to other support systems available in the literature.\nConsidering that ICD-9-CM is currently mandatory in Italy for coding diagnosis into hospital discharge records, the prototype and tests of SISCO.web uses this ICD version to be used in hospital coding. Nevertheless, the system has been designed to work using different ICD versions, thus also ICD-10, including the design of a decision tree for identifying the main diagnosis set specifically for ICD-10. This possibility, recently, resulted advantageously since, as mentioned in Section 1, the Italian Ministry of Health, to be aligned to European guidelines on cross-boarding care, is working on a roadmap to shift from ICD-9-CM to ICD-10-IM for the coding of morbidities in SDO, leveraging the results of the It.DRG project. For this reason, future work will be the extension of the system, in terms of integration of the KB with the Italian version of ICD-10 (the mentioned ICD-10-IM) and the necessary crosswalking tables as well as the implementation of the already defined ICD-10-based decision tree in the rule engine. At the same time, it will be possible to set up versions of this support system able to manage classifications of interventions other than those used in Italy. Another possible future work is the development of a JavaScript library to distribute the service to interested parties and test it on a large scale (i.e., some hospital wards). As observed in Section 4, automated clinical coding holds promise for AI despite the technical and organizational challenges, but coders need to be involved in the development process, as done in the present work. Given this understanding, it can be argued that SISCO.web could serve as a good compromise, particularly if focusing on a new research direction that could be pursued over the next five years. This would involve improving the approach using LLMs + Retrieval-Augmented Generation (RAG) to enhance both the text encoding module and the implementation of the decision tree in the rule engine. Another possible future work could be to use a complementary approach for the analysis, through NLP/DL, of the diagnostic sections of hospital discharge letters (LDOs in Italy), which are very detailed reports. In our use case, a sample of these documents was used to test the performances of SISCO.web in terms of capacity to support coding for complex search records (e.g., comorbidities, very detailed diagnoses, etc.). In the future, it would be valuable to explore the possibility of providing coding support while registering LDOs' data, particularly in the diagnostic section. This information is crucial for the transition of care from the hospital to the community setting. Additionally, it will be important to optimize the communication between the coding support system and the company's EHR information systems used by physicians."}]}