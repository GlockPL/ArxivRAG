{"title": "Research on Adverse Drug Reaction Prediction Model Combining\nKnowledge Graph Embedding and Deep Learning", "authors": ["Yufeng Li", "Wenchao Zhao", "Bo Dang", "Xu Yan", "Weimin Wang", "Min Gao", "Mingxuan Xiao"], "abstract": "In clinical treatment, identifying potential adverse reactions of drugs can help assist doctors in making medication\ndecisions. In response to the problems in previous studies that features are high-dimensional and sparse, independent\nprediction models need to be constructed for each adverse reaction of drugs, and the prediction accuracy is low, this\npaper develops an adverse drug reaction prediction model based on knowledge graph embedding and deep learning,\nwhich can predict experimental results. Unified prediction of adverse drug reactions covered. Knowledge graph\nembedding technology can fuse the associated information between drugs and alleviate the shortcomings of high-\ndimensional sparsity in feature matrices, and the efficient training capabilities of deep learning can improve the\nprediction accuracy of the model. This article builds an adverse drug reaction knowledge graph based on drug feature\ndata; by analyzing the embedding effect of the knowledge graph under different embedding strategies, the best\nembedding strategy is selected to obtain sample vectors; and then a convolutional neural network model is constructed to\npredict adverse reactions. The results show that under the DistMult embedding model and 400-dimensional embedding\nstrategy, the convolutional neural network model has the best prediction effect; the average accuracy, F\u2081 score, recall rate\nand area under the curve of repeated experiments are better than the methods reported in the literature. The obtained\nprediction model has good prediction accuracy and stability, and can provide an effective reference for later safe\nmedication guidance.", "sections": [{"title": "1. INTRODUCTION", "content": "Adverse Drug Reaction (ADR) is an important global public health problem and one of the major causes of death [1]. The\nWorld Health Organization vigibase database records approximately 23 million ADRs, of which 43,685 are fatal ADRs."}, {"title": "2. RELATED RESEARCH WORK", "content": "According to the definition of the World Health Organization, adverse drug reactions refer to harmful and unexpected\nreactions that occur during the use of normal doses of drugs for the prevention, diagnosis, treatment of diseases or the\nregulation of physiological functions and are unrelated to the purpose of medication[5]; and ADRs may It is the result of\nthe reaction between pharmaceutical chemicals and proteins [6]. Early research on ADRs was mainly based on clinical\ncase data from Spontaneous Reporting Systems (SRSs), using methods such as proportional imbalance analysis to\nevaluate the correlation and causality between drugs and ADRs to mine relevant adverse drug reaction signals. However,\nthe data of SRSs are often incomplete or inaccurate, which may lead to biased research results. In addition, the limited\namount of data and the lack of in-depth data mining make early research conclusions based on simple statistical methods\nunconvincing[7]. As artificial intelligence technology continues to develop and the amount of medical data continues to\ngrow, on the one hand, researchers are mining potential adverse reactions of drugs based on text data such as literature\nand ADR reports, combined with natural language processing technology[8]; on the other hand, based on the chemistry\nand biology of drugs, and phenotypic characteristics, and use machine learning or deep learning methods to conduct\nADR prediction research[9]. Research based on text mining is often used to identify and monitor relevant ADRs, which\nassumes that relevant ADRs have appeared, but cannot predict potential ADRs of drugs; while ADR prediction research\nbased on drug features and machine learning helps to explore unknown ADRs of drugs, which it is also the research topic\nof this project. Machine learning related methods can improve the ADR prediction effect, but there are still key points\nthat can be improved in these studies: (1) the correlation between drugs is not considered, which may lead to the loss of\nuseful information; (2) the use of a large amount of one-hot encoded feature data, However, it is difficult to reduce the\ndimensionality of high-dimensional sparse feature matrices, and the model calculation efficiency is low; (3) Most of\nthem need to build separate classifiers for each ADR. Knowledge Graph (KG), a special network structure composed of\nnodes and relationships and its embedding technology, captures the unstructured semantic relationships between feature\nentities by embedding entities into a continuous low-dimensional feature space. Fusion and calculation between\ninformation can effectively alleviate the computational inefficiency problem caused by high-dimensional sparse feature"}, {"title": "3. DATA AND METHODOLOGY", "content": "In the method proposed in this paper, referring to existing literature[11][12], the side effects of drugs are regarded as\nADRs. In view of the fact that combining the biological characteristics and phenotypic characteristics of drugs can\nimprove the performance of the ADR prediction model, biological characteristics and indications such as target,\ntransporter, and enzyme were selected from the DrugBank (v5.18)[16] and SIDER (v4.1)[17] databases respectively, and\nadverse reactions (ADR) and other phenotypic characteristics, and drugs (drug) as knowledge graph entity nodes. Then,\nin order to avoid the heavy workload of building a separate classifier for each ADR, ADR prediction is treated as a\nunified two-classification problem, and the \"Drug-ADR\" combination and the \"Drug-Indication\" combination are used as\nthe positive components of the classification model respectively. For samples and negative samples, the sample labels are\nrecorded as \"1\" and \"0\" respectively. From this, an ADR prediction model based on knowledge graph embedding and\ndeep learning was developed, and the stability of the Convolutional Neural Networks (CNN) model was tested through\nfive repeated experiments. Finally, drug-induced renal function injury was used as an example to predict, and the validity\nof the model prediction was verified through real-world data. The specific research ideas are shown in Figure 1."}, {"title": "3.1 Data Sources and Knowledge Graph Construction", "content": "The DrugBank database covers a wealth of biological and chemical informatics resources, and the SIDER database\nincludes 1,500 drugs and more than 6,100 side effects. By downloading the xml data file in DrugBank and the tsv file in\nSIDER, use the Python program to parse and obtain the relevant characteristic data of the drug. Integrate relevant data\nfrom two databases according to the Anatomical Therapeutic Chemical (ATC) code and filter drug records with at least\none drug feature. Finally, five types of triples are constructed: <drug, hasTransporter, Transporter>, <drug, hasADR,\nADR>, <drug, hasEmzyme, Emzyme>, <drug, hasTarget, Target>, <drug, hasIndication, Indication>; The tuples are\nstored in the Neo4j graph database to obtain a visual knowledge graph, as shown in Figure 2. The map contains a total of\n8001 drugs, 5453 ADRs and 158133 triples, as shown in Table 2."}, {"title": "3.2 Knowledge graph embedding model", "content": "Knowledge graph embedding technology is gradually used in prediction research[18], among which the DistMult[19]\nmodel and HolE[20] model based on tensor decomposition are the most widely used. The DistMult model describes the\nsemantic correlation between entities through bilinear transformation between entities, where the head entity and tail\nentity are represented by vectors h and t respectively, and the relationship is represented by vector r; the relationship\nmatrix $M_r = diag(r)$ pair Pairwise interactions between latent factors are modeled using $f_r(h,t) = h^T M_r t$ as the\nscoring function. The HolE model is based on the DistMult model and introduces circular correlation operations between\nentities to capture the compositional representation of pairs of entities. It uses $f_r(h, t) = r^T (h * t)$ as the scoring\nfunction, where * is the circular correlation. Operation. Both of above two embedding models take minimizing the\nscoring function as the goal to obtain effective embedding vectors of entities and relationships."}, {"title": "3.3 CNN classification model", "content": "A CNN model with 2 convolutional layers and 4 fully connected layers is researched and designed, as shown in Figure 3.\nSince the calculation efficiency and convergence speed of the ReLU activation function are much higher than those of\nsigmoid, Tanh and other functions; therefore, both the convolutional layer and the fully connected layer use the ReLU\nactivation function. At the same time, in order to maintain the same distribution of inputs of each layer of neural network\nand improve network optimization efficiency, the convolutional layers all use batch normalization. The specific\nparameters of the model are shown in Table 3. This paper uses the binary cross entropy shown in Equation (1) as the loss\nfunction for model training, where n is the total number of training samples, $y_i$ is the true label of sample i, and $\\hat{y_i}$is the\nprobability that sample i is predicted to be category \"1\" value; through model training, obtain the optimal values of\nparameters W and b.\n$J(W,b) = -\\frac{1}{n} \\sum_{i=1}^{n} [y_i \\log(\\hat{y_i}) + (1 - y_i)\\log (1 - \\hat{y_i})]$   (1)"}, {"title": "4. EXPERIMENT AND RESULT ANALYSIS", "content": "Using Logistic Regression (LR), K-Nearest Neighbor (KNN), Decision Tree (DT), Random Forest (RF), Naive Bayes\n(NB), Comparative analysis of six benchmark models including Gradient Boosting Decision Tree (GBDT), which are\nwidely used in ADR prediction[21]."}, {"title": "4.1 Model evaluation indicators", "content": "This project uses the confusion matrix to calculate the recall rate (Recall), accuracy rate (ACC), precision rate (Precision,\nP), F\u2081 value (F\u2081- Score, F1) and area under the curve (AUC) as a model evaluation indicators."}, {"title": "4.2 Knowledge graph embedding and sample vector representation", "content": "The embedding operation is based on the Python language and is implemented by calling the AmpliGraph tool library.\nBefore the embedding operation, it is necessary to determine the training set and test set of the ADR prediction model;\nthe training set is used for the knowledge graph embedding operation and ADR prediction model training, and the test set\nis used to evaluate the prediction performance of the ADR prediction model. There are 119,131 positive samples and\n12,435 negative samples in the knowledge graph (see Table 4). Since the number of positive and negative samples differs"}, {"title": "4.3 Comparative analysis of embedded dimensions", "content": "This paper explores the impact of different embedding strategies on the prediction performance of the benchmark ADR\nclassification model on the test set by combining different embedding models and different embedding dimensions (10 to\n800). As shown in Figure 4, under different embedding models, as the embedding dimension increases, the AUC values\nof each benchmark model on the test set gradually increase; and the ACC and F1 index values also fluctuate to varying\ndegrees; Recall The value does not increase significantly and is relatively stable. However, when the embedding\ndimension is greater than 400, the AUC, ACC, and F1 index values of each benchmark model tend to be stable. Through\ncomprehensive analysis, appropriately increasing the embedding dimension can improve the prediction performance of"}, {"title": "4.4 Comparative analysis of classification models", "content": "Based on the Python language, scikit-learn and the deep learning framework Tensorflow2.0 are used to develop the ADR\nclassification model. The six benchmark models will use default parameters. The fixed embedding dimension is 400\ndimensions. The representation vector of the sample is obtained through the embedding model and input into the ADR\nclassification model for training and prediction. The prediction results of each classification model on the test set are\nshown in Table 6. Comprehensive analysis found that under the DistMult embedding model, the AUC value of the CNN\nclassification model on the test set was 0.942, which was better than all benchmark models."}, {"title": "4.5 Model stability assessment", "content": "The study used 5 repeated experiments to evaluate the stability of the CNN model. Specific steps: (1) Set random seeds\nand construct training sets and test sets; (2) Use the \"DistMult model + 400 dimensions\" combination strategy for\nembedding operations; (3) Use the obtained sample representation vectors for CNN classification model training and\npredict. The results are shown in Table 7. The average AUC of the CNN model in this article is 0.957; the average F\u2081\nvalue is 0.891, and the average Recall value is 0.914, each indicator value fluctuates less. At the same time, the ROC\ncurve (shown in Figure 5) is also stable, indicating that the CNN model developed in this article has high stability."}, {"title": "4.6 Prediction model verification", "content": "This project uses real-world data to test the effectiveness of the CNN model. Using \"kidney injury\" or \"kidney injury\" as\nkeywords, we randomly searched for relevant ADR studies in literature databases such as PubMed, and obtained 3\n\"Drug-ADR\" combinations that were not included in the SIDER database; these were used as Input, use CNN model to\nmake predictions. The results show (shown in Table 8) that the average probability of a real sample being predicted as\n\"positive\" is 0.967, indicating that the CNN model in this article can effectively predict samples outside the experimental\nsample set."}, {"title": "4.7 Comparative analysis with advanced research", "content": "Due to the current lack of standard data sets for testing the performance of ADR prediction models, this article will\ncompare it with related typical studies in terms of the drugs covered, the number of ADR types, and the AUC value of\nthe prediction model (see Table 9). Through comparative analysis, the AUC of the CNN model developed in this article\nis higher than the results provided by related research, and the prediction performance is better. At the same time, the\nexperimental data set of this article contains 7920 drugs and 5454 ADRs, covering more drug information than most\nsimilar studies. In addition, most previous studies need to build a separate prediction model for each ADR, which\nincreases the workload of the ADR prediction task. In contrast, this paper builds a drug knowledge graph and uses\nknowledge graph embedding technology to encode entities such as drugs and ADRs into Feature vector; Finally, a\nunified CNN model is used to predict each \"\" combination to evaluate the probability that the combination has the\n\"hasADR\" relationship, which greatly reduces the number of models. The study by Zhang et al. [12] used a similar\nmethod for ADR prediction, but it covered only 3,632 drugs and showed a relatively low AUC value; the study by Joshi\net al. [11]was reported in the literature[12] added drug pathway (Pathways) and gene (Gene) features, but the average\nAUC of its ADR prediction model is only 0.912, and there is still room for improvement. This paper develops a higher-\nperformance ADR prediction model by selecting more representative drug features."}, {"title": "5. CONCLUSION", "content": "In view of the problems of previous ADR prediction model research, such as low prediction accuracy and heavy\nworkload due to the need to build separate classifiers for each ADR, this project simplifies the prediction of different\ntypes of ADR into a binary classification problem and develops a model based on knowledge graph embedding and\ndepth. Learned CNN prediction model. By comparison, the prediction model in this article is more accurate than the"}]}