{"title": "Cyri: A Conversational AI-based Assistant for Supporting the Human User in Detecting and Responding to Phishing Attacks", "authors": ["Antonio La Torre", "Marco Angelini"], "abstract": "Phishing attacks have become increasingly sophisticated, exploiting human vulnerabilities through social engineering tactics to deceive individuals into revealing sensitive information. Traditional detection methods, such as blacklist-based and heuristic approaches, often fail to identify new or cleverly disguised phishing attempts due to their reliance on known patterns and technical indicators and not on the semantic characteristics of the attack attempt. This work introduces Cyri, an AI-powered conversational assistant designed to support a human user in detecting and analyzing phishing emails by leveraging Large Language Models (LLMs).\nCyri has been designed to scrutinize emails for semantic features used in phishing attacks, such as urgency, authority, impersonation, exclusivity, and undesirable consequences, using an approach that unifies features already established in the literature with others by Cyri features extraction methodology. Cyri can be directly plugged into a client mail or webmail, ensuring seamless integration with the user's email workflow while maintaining data privacy through local processing. By performing all analyses on the user's machine, Cyri eliminates the need to transmit sensitive email data over the internet, reducing security risks associated with external data breaches. The Cyri user interface has been designed to reduce habituation effects and enhance user engagement. It employs dynamic visual cues and context-specific explanations to keep users alert and informed while maintaining their experience in using emails. Additionally, it allows users to explore identified malicious semantic features both through conversation with the agent and visual exploration, obtaining the advantages of both modalities for expert or non-expert users. It also allows users to keep track of the conversation, supports the user in solving additional questions on both computed features or new parts of the mail, and applies its detection on demand.\nTo evaluate Cyri's ability to distinguish between phishing and safe communications, we crafted a comprehensive dataset of 420 phishing emails and 420 legitimate emails. Through iterative evaluation, Cyri was optimized to reach an accuracy of 95.24%, a precision of 96.8%, a recall of 93.56%, and an F1-score of 95.15%, demonstrating high effectiveness in identifying critical phishing semantic features fundamental to phishing detection. A user study involving 10 participants, both experts and non-experts, evaluated Cyri's effectiveness and usability in real use, where the participants tested the system on their mail accounts. Results indicated that Cyri significantly aided users in identifying phishing emails and enhanced their understanding of phishing tactics.", "sections": [{"title": "1. Introduction", "content": "Among the various forms of cybercrime, phishing stands out as one of the most prevalent and harmful in modern time [5]. According to the Anti-Phishing Working Group, over 1.2 million phishing attacks were recorded in the second quarter of 2023 alone [6]. Every day, an estimated 3.4 billion phishing emails are sent by cybercriminals, amounting to over one trillion emails per year [7]. Phishing serves as the entry point for 91% of all cyber attacks and is involved in 36% of all data breaches, making it the most common cause of such incidents.\nSocial engineering is at the core of phishing attacks, which exploits inherent human tendencies to trust and respond to certain stimuli [1], [3], [19]. Attackers use psychological manipulation to deceive individuals into actions compromising security, such as clicking on malicious links or providing confidential information such as login credentials, financial details, or personal data [2], [21]. This manipulation can have serious consequences, leading to identity theft, financial loss, and compromised personal or organizational security.\nHuman error is a significant factor in the success of phishing attacks, contributing to 95% of successful cybersecurity breaches [8]. Factors such as lack of awareness, inadequate training, stress, fatigue, and cognitive overload can impair an individual's ability to recognize and respond appropriately to phishing attempts [9], [10], [17]. Attackers exploit these vulnerabilities by crafting messages that capitalize on distraction, curiosity, or the tendency to comply with authority figures [4], [11], [20], [37]. This underlines the importance of implementing automated detection systems, which act as a first line of defense against human weaknesses. On the other hand, many of these solutions focus more on the technical identification of phishing without focusing on providing the human user explanations (apart from shallow ones or very technical ones, excluding non-technology expert people who represent the majority of targets) they can relate with, understand, and eventually use this information for improving awareness.\nTo better support non-expert human users in protecting against these threats, in this work, we propose Cyri, an AI-based solution designed to empower users in detecting, understanding, and responding to phishing emails. Cyri leverages Large Language Models (LLMs) to extract semantic features from email text, identifying subtle cues and psychological manipulation tactics that traditional detection systems might overlook or not target at all. By focusing on the meaning and context of the messages, Cyri provides users with an accurate assessment of potential threats at sentence-level granularity. Furthermore, users can clarify any doubts about the analysis by engaging in a conversation with Cyri, allowing them to gain deeper insights into why an email was flagged as phishing or safe. Cyri addresses the primary limitations of previous phishing detection solutions by integrating a user-centered interface that effectively communicates risks mitigating user desensitization from purely technical-based detectors [22], [23], while safeguarding user privacy through local data processing. These enhancements are crucial for improving phishing detection systems' overall effectiveness and acceptance in real-world applications.\nSummarizing, the main contributions of this work are:\n\u2022\tInstrumentation of local LLM to classify semantic features of email text linked to phishing attacks;\n\u2022\tA system, in the form of a plugin and web-based interface, which allows to directly connect Cyri to an existing email account without disturbing classic user experience while exploiting conversational capabilities through speech and interactive analysis through usable visual representations;\n\u2022\tDeep evaluation activities showing very good accuracy from the semantic features classifier and a user study with 10 participants, equally split into expert and non-expert, which tested Cyri directly on their email accounts and reported on the efficacy and usability of the proposed solution."}, {"title": "2. Related Work", "content": "Phishing detection is a critical area of cybersecurity research due to the increasing sophistication of phishing attacks and their significant impact on individuals and organizations.\nOne of the earliest and most straightforward methods for phishing detection involves the use of blacklists-based and rule-based approaches [2]. The limitations of these traditional phishing detection methods are that they depend on known patterns, signatures, or previously identified malicious entities, making them inadequate for detecting new or evolving threats that do not match existing criteria [13]. To overcome these limitations, researchers have increasingly turned to Machine Learning (ML) [12], [15], [16], [18] and, more recently, Deep Learning (DL) [14], [40] techniques.\nMachine learning methods involve algorithms that classify emails, URLs, or websites as phishing or legitimate based on extracted features. Deep Learning Approaches involves training neural networks capable of automatic feature extraction from raw and unstructured data. These approaches aim to learn patterns from data, enabling the detection of previously unseen phishing attempts by generalizing from known examples.\nAlthough many ML and DL approaches achieve strong performance, they primarily provide mostly statistical detection outcomes without explaining the reasoning behind them in a human-comprehensible form and focus on technical characteristics of the phishing attempts, struggling to identify the semantic and contextual subtleties of more complex phishing attempts [24]. Understanding the reasoning behind their predictions is difficult, which can hinder trust and adoption, especially in critical security applications. The lack of transparency poses challenges in validating model decisions, diagnosing errors, and complying with regulatory requirements that may mandate explainability in automated decision-making systems. Finally, in all these cases, the provided explanation is targeted at only expert users, neglecting most of the technology-unsavvy population, as Cyri does.\nVery recently, Large Language Models (LLMs) have emerged as powerful tools in the field of Natural Language Processing (NLP) due to their remarkable ability to comprehend and generate human-like text [38]. LLMs can comprehend context, summarize complex texts, answer questions, and engage in conversations that are contextually appropriate. Researchers have begun to explore how LLMs can enhance the identification of phishing emails by leveraging their advanced natural language processing abilities. While these models offer numerous benefits in various fields, several studies highlight that as LLMs become more accessible, cybercriminals can produce high-quality phishing content at scale [24]\u2013[26], [35]. This implies that incorporating LLMs into detection strategies is crucial to keep pace with the evolving threats. In particular, their advanced language understanding could enable the detection of sophisticated phishing attempts that traditional methods might miss.\nGreco et al. [24] address the growing concern that cybercriminals can efficiently leverage LLMs to craft more convincing phishing emails. The primary objective of Greco et al.'s study was to evaluate the effectiveness of traditional ML models in detecting phishing emails crafted by LLMs. By examining whether ML classifiers can distinguish between human-written and LLM-generated phishing emails, the researchers aimed to understand the limitations of current detection approaches and highlight the need for advanced solutions to address this emerging threat, justifying the study of solutions like Cyri. Greco et al. found that while the ML models could achieve moderate accuracy, they struggled to distinguish between human-generated and LLM-generated phishing emails reliably. The research underscores the urgent need to explore new approaches, possibly involving LLMs themselves, to detect sophisticated phishing emails generated by AI. Moreover, it highlights the need to incorporate human-centric solutions, which means enhancing user interfaces and warnings to better engage users and support them in recognizing phishing attempts, as Cyri does.\nLi et al. approach [28] involves constructing a multimodal knowledge graph that includes textual and visual information about legitimate entities. The LLM is used to extract and interpret references within the email content, while the knowledge graph provides a factual basis for verifying the authenticity of these references. However, maintaining an up-to-date knowledge graph of legitimate entities, especially across diverse industries, would be"}, {"title": "3. Cyri Architectural Design", "content": "Cyri represents an innovative AI-powered conversational assistant designed to help users detect and analyze phishing attacks within email communications. By leveraging a refined Large Language Model (LLM) through prompt engineering and Chain of Thought techniques, Cyri provides users with detailed explanations of the suspicious features that could make an email potentially malicious, as well as the necessary countermeasures. Cyri's architecture is composed of three main components:\n1)\tLLM-based Interactive Semantic Analyzer component (LISA): it performs in-depth email analysis using a local Large Language Model (LLM) through APIs.\n2)\tE-mail client plugin: it captures incoming emails and communicates with the Electron application. A demonstrator is implemented for Thunderbird since It is an open-source email client that offers extensive customization capabilities through its support for add-ons [32].\n3)\tVisual and Audio Conversational interface (VAC): it serves as the user interface, manages data storage, and allows a non-expert user to analyze the classification of e-mails, the main semantic reasons, and inquire more on it in both interactive visual and audio means. It is implemented as an Electron web application for generality and usability.\nCyri continuously monitors incoming emails through the email client plugin. When a new, unseen email arrives, the plugin extracts essential data such as the sender's information, subject, body content, a flag indicating whether the sender is in the user's contacts, the message ID, and the timestamp. This data is then transmitted to both the VAC interface application and to the LISA component to perform an in-depth analysis of the email (locally hosted), specifically using the Meta-Llama-3.1-8B-Instruct model [29]. LISA evaluates the email for semantic features such as urgency, authority, instant gratification, and others, all collected from the literature or extracted by LISA itself. LISA is helped by a sub-component for links checking that, using external APIs, specifically Google Safe Browsing [30] and AbuseIPDB [31], enhance detection capabilities by checking only links and domains against known malicious entities and provides additional context to the semantic analysis.\nUpon completion of the analysis, the results are stored in the VAC application and sent to the e-mail client plugin for e-mail text tagging and classification as \"Phishing\" or \"Safe\" (see Figure 1). Finally, the user is presented with this information in the VAC interface and can explore it as explanations and converse with Cyri with a mix of visual cues and audio."}, {"title": "4. Semantic Analysis of Phishing emails", "content": "Phishing attacks leverage sophisticated social engineering techniques to deceive recipients into disseminating sensitive information or performing actions compromising security. A critical aspect of enhancing phishing detection mechanisms involves understanding and identifying the semantic features commonly employed in phishing emails. This section details the comprehensive collection of semantic features used and the instrumentation activities that guide the LISA component of Cyri in recognizing them into email text."}, {"title": "4.1. Collection of Phishing Semantic Features", "content": "This activity aims to create a robust dataset of phishing semantic features and emails containing them that can inform the development of more effective detection algorithms and improve the capabilities of LLMs in identifying phishing emails and recognizing the presence of these features in the text. The semantic phishing features collected in our dataset derive from two primary activities:\n\u2022\tLiterature-Identified Features review: it aims at collecting semantic features previously recognized and documented in academic and professional cybersecurity literature.\n\u2022\tMethodology-Extracted Features: it aims at extracting novel semantic features through a systematic extraction using an automatic text analyzer (i.e., ChatGPT-4) to each element of a comprehensive email phishing dataset created specifically for this purpose."}, {"title": "4.2. LISA: LLM-based Interactive Semantic Feature Analyzer", "content": "Traditional detection methods often rely on cloud-based services, which may not be suitable due to privacy concerns and dependence on external infrastructure. Deploying large LLMs raises privacy and data security concerns, as it requires sending sensitive emails to third-party servers. Users and organizations may be reluctant to adopt a system that necessitates sharing sensitive email content with external entities.\nTo address these challenges, we developed a Python background process that performs in-depth phishing analysis and user query processing using a locally hosted LLM, specifically the Llama 3.1 8B model.\nWe chose the Llama 3.1 8B model for its efficient reasoning capabilities and ability to handle contexts of up to 128,000 tokens, which is crucial when analyzing lengthy or complex emails. Additionally, this version is optimized for local deployment, balancing performance with resource demands, making it ideal for running on local machines without relying on cloud services.\nHowever, smaller models may not match the language comprehension of larger ones, making them more reliant on well-designed comprehensive prompts. For this reason, we defined an extensive prompt containing a large set of semantic social engineering techniques to improve the model's ability to detect diverse phishing tactics."}, {"title": "4.2.1. Email Analysis Prompt", "content": "The Email Analysis Prompt is a carefully constructed set of instructions designed to guide the LLM in performing a thorough analysis of an email to determine whether it is phishing or safe. The prompt employs several prompt engineering techniques to ensure that the LLM produces accurate, consistent, and user-friendly outputs. Due to the complexity and length of the prompt, we followed a Chain-of-Thought approach to make it more effective. Moreover, dissecting the prompt into its individual components ensures a thorough understanding of each aspect:\n1.\tRole Assignment: \"You are an email phishing detector and analyzer. Your task is to identify whether an email is phishing or safe, explain why, and provide a detailed explanation.\"\nThe prompt begins by explicitly defining the LLM's role as an \"email phishing detector and analyzer\". This sets the context for the model, focusing its capabilities on a specific task. By assigning a clear role, the LLM becomes ready to approach the subsequent instructions with the appropriate mindset.\n2.\tPresentation of the Email Content: \"I want you to analyze the following email which could be phishing or safe: {email} I want you to tell me if this email is safe or phishing.\"\nThe prompt introduces the subject and the body of the email to be analyzed. Directly instructing the model to determine if the email is safe or phishing sets a clear objective.\n3.\tBase Reasoning Before Feature Consideration: \"Use your base reasoning first to identify if the email is safe or phishing before considering the specified features.\"\nThe prompt instructs the LLM to use its inherent reasoning capabilities before relying on predefined features. This ensures that the model's general understanding and language comprehension are utilized initially, potentially capturing nuances that this particular feature-based analysis might miss.\n4.\tAdditional Information for Analysis and Guiding Questions:: \"Here is additional information regarding the email for your analysis:\n1:\tSender Information: {sender_email}\n2:\tGoogle Safe Browsing API Result: {google_safe_browsing_output}.\n3:\tAbuseIPDB Result: {abuse_ipdb_output}.\nIs the sender domain or any URL found in the email reported as unsafe?\nIdentify if there is any impersonation of a well-known brand by comparing the sender's email address with the claimed organization in the email content. If spoofing is detected, explain the inconsistencies. For example, if the email claims to be from 'Amazon' but the domain is not related to Amazon, highlight the inconsistency."}, {"title": "4.2.2. Conversation Prompt", "content": "The Conversation Prompt is designed to enable LISA to engage interactively with the user, providing detailed and context-aware responses to user queries based on prior email analysis. The prompt leverages previous interactions and analysis results to maintain continuity and relevance: \u201cYou are an AI trained to analyze emails and interact with users to clarify and explain issues related to email security in simple terms. Use the analysis provided and the conversation history to inform your responses.\nGiven the user's query: ({last_user_query}), please provide a detailed and specific response that can help the user understand the steps to improve email security. For context I will give you also the initial instructions given to the model about how to analyze the email:\n{initial_prompt}\nHere you can find the detailed analysis of the email generated by the model:\n{analysis}\nAll past interactions (questions and Al responses) related to this email analysis: {conversation_history}\nOutput only the response to this query: {last_user_query}"}, {"title": "5. Cyri Usable Interface", "content": "The VAC application serves as the central hub of Cyri, providing a user-friendly interface for email analysis and interaction. It is implemented using web technology and Electron. By leveraging Electron's capabilities, the application offers a cross-platform, user-friendly interface that integrates seamlessly with LISA and the email client plugin. Several studies [22], [23], [36] have consistently demonstrated that traditional warning dialogs are often ineffective in alerting users to phishing threats due to a lack of user understanding and the habituation effect. The habituation effect occurs when users become desensitized to repetitive visual stimuli, such as generic phishing warnings, leading them to ignore these alerts over time and diminishing their vigilance. This desensitization results in users dismissing important security warnings without adequate consideration, thereby increasing their susceptibility to phishing attacks. To address this critical challenge, research on usable security has emphasized the importance of creating polymorphic warning interfaces in phishing detection. These interfaces dynamically alter their appearance and content each time they are presented to the user, aiming to reduce habituation and encourage users to pay closer attention to each alert. By introducing variability in warnings, the polymorphic approach enhances user engagement and prompts cautious behavior, making security warnings more effective.\nCyri thoughtfully incorporates these research findings to enhance its phishing detection efficacy. It employs a user-centered interface that moves beyond generic warning dialogs by providing clear, contextualized explanations of potential phishing threats within the user's email text and exchanges. By offering detailed analyses and actionable advice articulated in clear and understandable language without excessive technical terminology, Cyri enhances user understanding of the potential risk causes in the email text and encourages proactive behavior in managing suspicious emails. Moreover, Cyri offers actionable advice based on the identified risks and features, providing practical recommendations on how the recipient should handle the suspicious email, such as verifying the sender's identity through alternative channels, avoiding clicking on embedded links, or reporting the email to the appropriate authorities, following best practices in phishing management [22].\nCyri utilizes dynamic visual feedback by changing the interface's background color and icons based on the analysis results. For instance, when an email is identified as phishing, the background color shifts toward red color to indicate danger, with the intensity increasing based on the phishing likelihood percentage and the \"Feature Score\", which depends on the weights of the features found.\nConversely, if an email is deemed safe, the background shifts to a calming blue, with the intensity depending on the safe likelihood percentage.\nThe Cyri VAC interface is designed to offer an intuitive and user-friendly experience. The interface presents a clean and organized layout divided into two primary sections. On the left side, users encounter email details and analysis results, with a date picker feature allowing effortless navigation through emails by selecting specific dates. The e-mail text keeps the same indentation and style as the email client used. Phishing features detected in the email are highlighted by utilizing unique color combinations and text styles to draw attention to these elements. At the bottom, there is a list of all Cyri semantic features: users can select or remove a particular feature from the analysis by clicking on it, giving them control over the information presented if they consider a specific part of the analysis wrong or not accurate enough.\nOn the right side column, the application focuses on facilitating user interaction and query handling. The conversation history displays all past interactions and responses related to the selected email analysis, maintaining continuity and context. Users can submit new questions for additional clarification, and when a query is entered, the application processes it and monitors for a corresponding response generated by LISA.\nBy utilizing dynamic and context-specific visual cues and explanations, Cyri effectively reduces habituation. Each interaction feels unique and tailored to the specific situation, maintaining the user's engagement and attentiveness to security warnings. This approach aligns with best practices in user interface design for security applications [22], [23], where the goal is to balance alerting users to potential threats without causing alarm fatigue. A video demonstration of Cyri is available in the GitHub repository reported in Appendix A."}, {"title": "6. Validation", "content": "The evaluation involved a series of tests designed to assess the model's performance in classifying emails and identifying phishing features. The tests were structured to incrementally refine the model's prompt and configuration presented in Section 4.2 and iteratively analyze how changes affected outcomes. Key metrics such as the number of false positives, number of false negatives, Precision, Recall, and F1-score were computed to measure performance quantitatively.\n\u2022\tFalse Positives (FP): The number of safe emails incorrectly classified as phishing. This metric reflects instances where the model raises unnecessary alarms, causing inconvenience or mistrust.\n\u2022\tFalse Negatives (FN): The number of phishing emails incorrectly classified as safe. This is critical as it represents missed detections, allowing potential threats to go unnoticed.\n\u2022\tPrecision: The proportion of correctly identified phishing emails out of all emails the model classified as phishing. It measures the model's accuracy in predicting phishing emails and is calculated as:\n$Precision = \\frac{TP}{TP + FP}$\n\u2022\tRecall: The proportion of correctly identified phishing emails out of all actual phishing emails. It assesses the model's ability to detect all phishing attempts and is calculated as:\n$Recall = \\frac{TP}{TP + FN}$\n\u2022\tF1-Score: The harmonic mean of precision and recall, providing a single metric that balances false positives and false negatives. It is calculated as:\n$F1-Score = 2 \\times \\frac{Precision \\times Recall}{Precision + Recall}$"}, {"title": "6.1. Validation Datasets", "content": "To evaluate the model's effectiveness in detecting phishing emails, we required a comprehensive and diverse dataset of phishing emails that accurately reflect real-world phishing strategies. This dataset was meticulously crafted to encompass various topics and persuasion techniques, ensuring heterogeneity and coverage of most phishing scenarios.\nTo create high-quality phishing emails, we utilized WormGPT V3.0 [34] since it is an advanced language model fine-tuned for crafting phishing emails (among other supported tasks). To guide the generation of phishing emails that embody the collected semantic features (both in isolation or in combination with others), we have utilized the following prompt:\n\"Pretend to be a hacker planning a phishing campaign. Your goal is to generate one very detailed phishing email about this topic: <TOPIC>. You have to use fake American real names for the sender and recipient (example: John Smith, Sarah Thompson, Michael Garcia, Daniel Davis, James Wilson, etc) and you have to invent a phishing link URL to include in this email.\"\nThe email must be characterized by the following persuasion technique:\n<FEATURE >\nWith this methodology, a total of 420 phishing emails have been generated, with 20 emails dedicated to each of the 21 identified Cyri semantic features. The emails were crafted to cover a wide array of topics relevant to each feature, enhancing the dataset's heterogeneity. Each generated phishing email underwent a meticulous manual review by two experts to ensure that each email effectively embodied the specified semantic feature convincingly and eventually manually modified to make them more fitting to the targeted feature(s). Moreover, several additional characteristics for effective phishing attack generation, present in research papers that studied phishing characteristics, were taken into consideration such as Credibility [25], Compatibility [25], Personalization [35], Contextual Relevance [35] and Knowledge [10], Reputation Exploitation [10], Commitment and Consistency [20] and Liking [20].\nA meticulous process was undertaken to obtain accurate ground truth for identifying phishing features within these emails. The process involved leveraging ChatGPT-40, supplemented by manual review and additions, to identify the specific features present in each phishing email.\nTo balance the dataset with an equal proportion of legitimate e-mails, and in the absence of an appropriate public dataset for them, a safe emails dataset composed of 420 legitimate emails was generated using ChatGPT-4. Prompts were crafted to create authentic, legitimate emails covering various topics, including:\n\u2022\tBusiness Emails: Meeting requests, project updates, performance reviews, team announcements;\n\u2022\tMarketing Emails: Product launches, seasonal sales, newsletters;\n\u2022\tPersonal Emails: Friendly catch-ups, event invitations, thank-you notes, congratulations messages, holiday greetings.\nThe two datasets were then merged into the final one, composed of 840 e-mails, heterogeneous in semantics and tactics, that will be made freely available as a public resource (the generation and curation process allow this step without incurring loss of privacy issues)."}, {"title": "6.2. Validation Results", "content": "6.2.1. Validating LLM choice. In our comprehensive evaluation, we systematically tested the performance of the LLaMA 3.1 8B model to confirm its usage inside the LISA component. We used progressively refined prompts to assess their ability to detect phishing emails accurately.\nIn the initial phase of our evaluation, we utilized a straightforward prompt that asked whether an email was phishing or safe without providing any semantic features or detailed descriptions to guide the model's reasoning. This test aimed to establish a baseline for the model's inherent ability to classify emails based solely on its pre-trained knowledge and without additional context. The model's performance in this baseline test revealed moderate limitations (see Table 3). There were 80 false positives, where legitimate safe emails were incorrectly classified as phishing, and 70 false negatives, where phishing emails were mistakenly identified as safe. This indicates that the model struggled to accurately differentiate between phishing and safe emails without explicit guidance. No evaluation of semantic features was possible in this case, as the problem was formulated as one of binary classification. No matter what, it confirmed our choice, dictated by security and privacy reasons, that even a small model like LLaMA 3.1 8B was a good base to build on our approach.\n6.2.2. Validating LISA phishing detection. In the second test, we tried to enhance the model's performance by incorporating semantic features of phishing emails into the prompt (see Section 4.2 for details). Results are visible in Table 4. The number of false positives increased"}, {"title": "6.2.3. Validating LISA phishing semantic features detection", "content": "An in-depth validation was also conducted to evaluate the LISA's ability to identify specific phishing features by comparing the list of features found by LISA with the ground-truth list of features previously curated using ChatGPT-40 and manual annotations. The features were categorized based on the percentage of correct identifications into three classes of accuracy and sorted by decreasing accuracy."}, {"title": "6.2.4. Overall results discussion", "content": "The final model demonstrated a significant improvement in both precision and recall, achieving a high level of accuracy. The balanced weighting of features, comprehensive definitions, and multiple examples contributed to reducing both false positives and false negatives. The feature identification analysis revealed that the model was highly effective in detecting critical phishing features. High accuracy rates for key features affirm the model's effectiveness in accurately identifying phishing emails. Features with lower accuracy rates were less crucial for phishing detection, and their misidentification did not substantially impact the overall performance. However, these features might benefit from well-structured fine-tuning to enhance the model's comprehensiveness and explanatory capabilities."}, {"title": "7. User Evaluation", "content": "To assess the effectiveness and usability of Cyri as a tool for phishing detection and management from a human user, a user study was conducted involving ten participants with varying levels of expertise in computer security. This section details the methodology of the user study, the setup, and discusses the findings."}, {"title": "7.1. Experiment Setup", "content": "The study involved 10 participants, split equally between computer security experts (meaning having at least two years of expertise and being knowledgeable of phishing tactics and techniques) and non-experts (meaning not being knowledgeable of phishing tactics and techniques but capable of using an email account).\nThe study duration for each participant was 60 minutes, split into 15 minutes of initial explanation on what are the most important features of Cyri and how to install it. This first step was then followed by two main tasks:\n\u2022\tControlled Email Identification Task: Participants were put in front of a preconfigured installation of Cyri and received five emails, four safe emails, and one phishing email sent by us. They were instructed to review these emails with Cyri and identify the phishing emails among them and the motivating factors for their final decision. This test was used both to let the participants gain confidence with Cyri usage and interface and as a controlled experiment where to evaluate how users interpreted and used the different results and functionalities Cyri exposes in a controlled situation equals for all of them. This step lasted, on average, from 10 to 15 minutes.\n\u2022\tExploration with Personal Emails: Participants were then tasked to use Cyri to analyze their inbox emails from one personal account, such as those in their spam folder, unopened ones, or newly received messages. This allowed them to interact with the application in a context familiar to them and to assess its usefulness beyond the controlled task of provided emails, resulting in a more personal experience capable of letting them assess the degree of support they received from Cyri. This task lasted, on average, 25 minutes.\nAfter completing the second task, participants were asked to compile a survey comprising several questions aimed at evaluating Cyri's effectiveness in assisting users in identifying phishing emails, usability and intuitiveness of the application interface, impact on users' understanding of phishing tactics, the likelihood of continued use, and preference for platform availability. In particular, the questions proposed to the participants were the following:\n1)\tAre you a computer security expert? (Yes or No)\n2)\tHow confident are you in identifying phishing emails without assistance? (Scale 1 to 5)\n3)\tHow useful was Cyri in helping you identify the phishing email? (Scale 1 to 5)\n4)\tDid Cyri provide information that you wouldn't have noticed on your own? (Yes or No)\n5)\tHow would you rate the overall usability of Cyri? (Scale 1 to 5)\n6)\tHow intuitive did you find the Cyri interface? (Scale 1 to 5)\n7)\tHow much do you think using Cyri would improve your understanding of phishing tactics? (Scale 1 to 5)\n8)\tWould you use Cyri regularly as part of your email routine? (Yes or No)\n9)\tWould you prefer if Cyri was available on your mobile phone instead of your computer? (Yes or No)\nA final free text form allows the insertion of open comments and suggestions. Overall 5 minutes were dedicated on average to this activity."}, {"title": "7.2. Results", "content": "We analyzed the survey results by splitting participants into their expertise level into two groups: Figure 8 reports results for computer security experts while Figure 9 reports them for non-expert users. This distinction allowed us to understand how Cyri is perceived by users with different levels of expertise."}, {"title": "8. Discussion", "content": "While Cyri enhances phishing detection, management, and understanding from human users, its current implementation also presents a set of limitations that offer avenues for further improvement. Improvements in detecting low-accuracy semantic features could be achieved by fine-tuning activities leveraging the produced phishing email dataset. These features, while less critical than others, still contribute to the overall understanding of phishing tactics. This solution would not be in substitution but would complement the current Chain-of-thought approach. Retrieval Augmented Generation can even be exploited, using currently detected emails as additional context for more accurate detection. Another limitation we foresee is the need for a longitudinal study with users that lasts longer and collects usage data on a higher quantity of tested emails and in real-pressure conditions. We are planning this activity in the near future.\nAs interesting future possibilities enabled by this research, we foresee integrating Cyri into existing mobile email clients, which would enhance accessibility and provide real-time phishing detection and education on the devices most commonly used for email communication. Limits and possibilities in this scenario could be provided by quantized versions of small LLMs capable of being run on smartphones with similar accuracy to 8 billion models. The use of information distillation techniques with a teacher-student approach using LISA as the teacher model may be beneficial for this effort."}, {"title": "9. Conclusions", "content": "This paper contributes Cyri, a significant advancement in applying AI-driven solutions for phishing detection and management for human users. Through a systematic collection of semantic features and the tuning of a local LLM to detect them directly in email text, we created a system capable of detecting subtle cues indicative of malicious intent that traditional methods might overlook. Extensive iterative testing and prompt refinement were conducted to optimize Cyri's performance. By providing detailed explanations and engaging in conversational interactions through its visual and conversational interface, Cyri helps users understand why an email is potentially malicious and what steps they should take. This addresses the human factors contributing to phishing success, such as lack of awareness and susceptibility to psychological manipulation. Cyri achieved good results in detecting and explaining phishing emails and very positive results for efficacy and usability by ten experts and non-expert human users in a task-based evaluation. In future work, we plan to mitigate the reported limitations of Cyri and explore its use of Cyri not only as a detection tool but also as an educational tool for training and awareness activities."}]}