{"title": "A Trustworthy AIoT-enabled Localization System via Federated Learning and Blockchain", "authors": ["Junfei Wang", "He Huang", "Jingze Feng", "Steven Wong", "Lihua Xie", "Jianfei Yang"], "abstract": "There is a significant demand for indoor localization technology in smart buildings, and the most promising solution in this field is using RF sensors and fingerprinting-based methods that employ machine learning models trained on crowd-sourced user data gathered from IoT devices. However, this raises security and privacy issues in practice. Some researchers propose to use federated learning to partially overcome privacy problems, but there still remain security concerns, e.g., single-point failure and malicious attacks. In this paper, we propose a framework named DFLoc to achieve precise 3D localization tasks while considering the following two security concerns. Particularly, we design a specialized blockchain to decentralize the framework by distributing the tasks such as model distribution and aggregation which are handled by a central server to all clients in most previous works, to address the issue of the single-point failure for a reliable and accurate indoor localization system. Moreover, we introduce an updated model verification mechanism within the blockchain to alleviate the concern of malicious node attacks. Experimental results substantiate the framework's capacity to deliver accurate 3D location predictions and its superior resistance to the impacts of single-point failure and malicious attacks when compared to conventional centralized federated learning systems.", "sections": [{"title": "I. INTRODUCTION", "content": "Nowadays, Location-Based Services (LBS) leverage the geographical data from IoT devices or users to provide tailored interaction services, significantly enhancing the IoT user experience, and are widely used in smart cities [1], [2]. According to the application scenarios and requirements, it can be divided into outdoor and indoor localization [3]. Outdoor localization technologies, e.g., GPS, are adopted for driving and navigation [4]. However, owing to complex indoor environmental factors and the absence of GPS signals, these outdoor positioning technologies cannot produce satisfactory results in the indoor environment, especially in complex multi-floor smart buildings, which motivates the research on indoor positioning technology. Indoor localization technology utilizes radio frequency (RF) signals such as WiFi, Bluetooth, and Ultra-Wideband (UWB) and locates the target using the re- ceived signal strength (RSS) that reflects the distance between the sensor and the user device [5], [6], leading to better performances in GPS-denied environments.\nIn the field of RSS-based indoor localization, one of the most prominent solutions is based on fingerprints and machine learning models due to their higher accuracy and adaptability. The indoor positioning algorithm of the fingerprint-based methods typically involves two primary phases: offline training and online localization [4]. During the offline training phase, a collection of reference points is conducted by gathering RSS measurements from known locations within the indoor environment. These reference points are utilized to construct a fingerprinting database. Subsequently, the localization models employ machine learning or even deep learning algorithms to establish a mapping between the signal fingerprints and their corresponding locations. In the online localization phase, the established localization models can determine the device's position based on real-time RSS measurements.\nIn fingerprinting-based indoor localization systems, the training of the machine learning algorithm is conducted on a central server. The users of the localization service trans- mit their fingerprint data from the respective IoT devices to the central server. The central server engages in crowd- sourcing training data from users, trains a deep learning model, and provides indoor localization services, such as building floor classification (BFC) and latitude longitude regression (LLR) [7]. However, such a framework raises several concerns in practice. Firstly, sharing location-linked fingerprint data collected locally with a central entity can raise privacy issues. More and more users prefer not to share the data directly in a central server. Secondly, the training and inference of machine learning algorithms rely solely on a central server, posing a single-point failure, a common security issue in centralized learning systems; when the central server fails, the entire system becomes non-functional until it's restored [8]. Thirdly, the system may be vulnerable to malicious attacks by dishonest clients through the injection of noisy data.\nTo address the privacy concern, Federated Learning (FL) [9] emerges as a promising solution, a machine learning technique that eliminates the need to transfer raw data from clients to the central server, mitigating privacy invasion. However, existing FL methods still suffer from security issues, e.g., single-point failure or malicious attacks. In fingerprinting- based indoor localization systems, single-point failure refers to the situation where the failure of the central server in the model training phase or implementation phase will cause the failure of the entire system. Malicious attacks entail the dispatch of nefarious clients by competitors or adversaries, disrupting the model training process by transmitting falsified or tainted data. On the one hand, as for single-point failure, opting for introducing decentralized technology to ease the over-reliance on the central server is a favorable solution. To this end, we introduce blockchain techniques due to their attributes of decentralization, traceability, and immutability. On the other hand, to counter malicious attacks, we design an update verification mechanism to differentiate between legitimate and malicious model updates, safeguarding our trained model from malicious alterations.\nSpecifically, we propose a Decentralized Federated Learning framework for the AIoT location system (DFLoc), as shown in Fig.1. The DFLoc is a kind of the fingerprint-based localiza- tion system, which consists of several clients. These clients are randomly assigned one of three roles (worker, valida- tor, miner) and engage in model aggregation over multiple iterations to train a location prediction model. This model comprises a classification network, denoted as DFLoc-BFC, and a regression network, referred to as DFLoc-LLR. The roles randomly assigned to the clients include local workers responsible for actual training, update validators tasked with verifying update quality and providing votes, and blockchain miners who aggregate vote results and client stakes and upload them onto the blockchain. At the end of each round, all de- vices, regardless of their previous roles, collectively aggregate model parameters whose received positive votes exceed the negative votes. This ensures that models suspected of poor quality or tampering are excluded from the model aggregation process. In the experimental part, we use WiFi data to validate the effectiveness of our proposed DFLoc system, since WiFi is one of the most prevalent methods in fingerprint-based indoor localization systems [10].\nDrawing upon the concepts above, this paper formulates and presents a novel decentralized federated location framework called DFLoc. The primary objective of DFLoc is to address the previously mentioned challenges and make the following contributions:\n\u2022 We aim to deal with the privacy and security issues in indoor localization by a decentralized federated learning framework. As far as we know, this is the first work that deals with both two issues simultaneously in RSS-based indoor localization systems.\n\u2022 We revamp federated learning with blockchain algorithms to decentralize the system framework. This addresses the single-point failure problem caused by over-reliance on the central server.\n\u2022 We design an update validation mechanism and integrate it into the blockchain to mitigate the impact of malicious nodes on the global indoor localization model.\n\u2022 To explore the effectiveness of our proposed framework against single-point failure and malicious attacks, we take the traditional centralized federated learning (CFL) as the baseline to conduct some experiments on a real-world dataset of WiFi fingerprints.\nThe structure of this article is as follows: Section II re- views related work. Section III provides an overview of the fingerprinting-based indoor localization problem first, then de- tails our proposed framework, DFLoc, including its operation and the DFLoc validator mechanism. Section IV presents the performance evaluation. Finally, Section V offers the conclusion for the entire work."}, {"title": "II. RELATED WORKS", "content": "Two principal concerns arise in the current research on 3D Indoor Location Systems based on the federated learning. The first concern pertains to the challenge of accurate Indoor 3D localization, while the second revolves around the reliability of federated learning."}, {"title": "A. Fingerprint-based Indoor Localization", "content": "Within indoor environments, fingerprinting-based localiza- tion stands out as a favored choice, due to its ease of realization and remarkable accuracy. Implementing a fingerprint-based approach involves deploying several wireless sensors c\u0430\u0440\u0430- ble of acquiring RSS and creating a fingerprinting database, which consists of a set of reference points paired with the corresponding RSS values of the selected signal type for each reference point. Mainstream electronic devices used in daily life, such as laptops and IoT devices, all come with built-in WiFi capability [1]. Concurrently, existing WiFi access points can be used as reference points for signal collection [11]. These factors lead to WiFi as the most prevalent sensing technique for RSS fingerprint-based indoor localization. Some scholars apply centralized learning techniques as a means to address the challenge of WiFi fingerprinting-based indoor localization [12]\u2013[15]. However, all these centralized learn- ing approaches have no longer been the preferred choices when considering personal information privacy and dynamic environment. On the contrary, FL is a more suitable solution"}, {"title": "III. METHODOLOGY", "content": "This section will describe the problem definition of the fingerprinting-based indoor localization in Section III-A, the proposed framework DFLoc in Section III-B, and the DFLoc validator mechanism in Section III-C."}, {"title": "A. Problem Definition", "content": "In the fingerprinting-based indoor localization field, users seek to determine their precise locations by requesting the LBS from the server where a deep learning model is trained in advance to provide location estimate based on the finger- prints of the RF signal [20]. Suppose that we have a dataset comprising RF fingerprints labeled with locations, denoted as $FLD = {xi, Yi}|i \\in N$, where $N = {1,2,..., n}$ denotes the data sample indices, $x_i$ and $Y_i$ represent the measured RSS vector and the location including discrete building-floor indexes ($BL_i$ and $FL_i$) and continuous latitude and longitude values ($LA_i$ and $LO_i$) at some reference point, respectively.\nIt is worth noting that, although our method is implemented using WiFi RSS data in this work, the methodology could seamlessly accommodate various RF signal types, such as UWB and Bluetooth. The primary goal of fingerprinting-based localization resides in the acquisition of a location prediction model denoted as $f(\\cdot;w)$, characterized by parameters $w$, to minimize the following average loss:\n$\\min_{w} e(w)$ (1)\nGiven the dataset D that contains n data samples, the local- ization loss is further defined as:\n$e(w) = \\frac{1}{n} \\sum_{i\\in D} l(x_i; Y_i; w)$ (2)\nwhere $l(x_i; Y_i; w)$ denotes a loss function that characterizes the error between i-th location prediction $\\hat{y} = f(x_i; w)$ and its ground truth value $Y_i$.\nIn traditional indoor localization systems that apply the centralized machine learning technologies [16]-[19], all user data needs to be stored on the central server for training. When data is transmitted or stored on the server, risks of exposing the privacy of the data producers arise. Furthermore, this architecture's heavy reliance on the central server may bring a single-point failure problem, which means if the central server fails, the entire system would lose its functionality. Moreover, it's not reasonable to assume that all the clients are honest. The performance of traditional systems is very vulnerable to malicious attacks like uploading tampered data or local models. Thus, we propose DFLoc to solve the problems mentioned above."}, {"title": "B. Decentralized Localization System", "content": "As shown in Fig. 2, the operation of the DFLoc frame- work is maintained by a group of devices, denoted as $D = {d_1, d_2, ..., d_l}$, across R communication rounds. At the onset of the i-th round, all devices are required to retrieve the current global model $G_{i-1}$ from the blockchain. Furthermore, in each epoch, every device is assigned randomly to one of three tem- porary roles: worker, validator, or miner. Consequently, these devices are transiently grouped into three distinct categories, denoted as $W$, $V$, $M$, and $|D| = |W| + |V| + |M|$.\nEach worker $w \\in W$ proceeds to train its local updated model $L^w$ using its respective training dataset $D^w_r$. The reward for worker w is calculated as $r_w = e \\times \\frac{|D^w_r|}{|D_r|} \\times r$, where r is a unit reward. e and $|D^w_r|$ denote the number of local training epochs and the size of the data samples within $D_r$ at the i- th communication round, respectively. It is noticeable that not all workers provide efficient information for the blockchain. Thus, a validation mechanism, which will be detailed in subsection III-C, is designed to distinguish valid workers, whose positive votes exceed negative votes evaluated by the following validators. Once a worker is seen as invalid, the relative reward will be zero. As a result, the transaction data from worker w can be expressed as $T^w = {L^w,r_w}$, which is further signed by the private signature and sent to the subsequent validators.\nSubsequently, each validator $v \\in V$ examines worker transactions $T^w$, one at a time, in a sequential manner until all transactions are verified. Different validators should share the worker transactions they received with peers, ensuring that each validator receives all worker transactions for the current communication round. Subsequently, v discards the transaction data without a digital signature, proceeds to extract $L^w$ from $T^w$ with a digital signature and evaluate its validity using the DFLoc validator mechanism. Afterward, v issues either a positive or negative vote, denoted as $V^v(L^w)$, based on the outcome of the validation process. Following this, v computes the reward, denoted as $r^v_w(L^w)$. Analogous to workers, the reward allocated to v is proportionate to the size of its training dataset $D^v_r$. As a result, the total reward accruing to v during i-th communication round is the sum of all $r^v_w(L^w)$, and this can be expressed as follows\n$r^v = \\sum_{w} r^v_w(L^w) = |W| \\times \\frac{|D^v_r|}{|D_r|} \\times r$. (3)\nThen, v should encapsulate $T^w$, $V^v(L^w)$ and $r^v_w(L^w)$ together to obtain a validator transaction $T^{vv}_w(L^w) = {T^w,V^v(L^w), r^v_w(L^w)}$, which is then dispatched to the miner which is randomly associated with v after signed by v's private key. Each miner broadcasts to its peers, ensuring the dissemination of all validator transactions among all miners. By doing so, each local updated model corresponds to |V| validator transactions, and each miner will totally receive |W|\u00d7 |V| validator transactions.\nEach miner m\u2208 M verifies the signature of each validator transaction $T^{vv}_w(L^w)$. Upon successful signature verification, m proceeds to extract $T^w$, $V^v(L^w)$, and $r^v_w(L^w)$ from the transaction to summarize the vote results of each local updated model $L^w$ (denoted as $SV^m(L^w)$) and the total reward of each validator (denoted as $r^v_w$) in the i-th communication round. Meanwhile, m gets rewards for summarizing the results, denoted as $r_m$, which can be expressed as\n$r_m = |W| \\times |V| \\times r$. (3)\nAfterward, each miner m undertakes the consolidation of summarized results, including all local updated models $L^w$ and corresponding summarized votes $SV^m(L^w)$, all worker rewards $r_w$, all validator rewards $r^v$, and its own reward $r_m$, to assemble a candidate block denoted as $B_m$. Subsequently, miner m engages in the mining process specific to the Proof of Stake (PoS) consensus which involves hashing the complete content of the block and signing the hash by using its private key. Upon $B_m$ being mined, miner m propagates the mined block to all the other miners in the network.\nFollowing this dissemination, each miner m leverages the stake information recorded on its blockchain to identify and select the block generated by the miner with the highest stake among the set $M$ as the legitimate block $B_i$. Only this legitimate block is deemed suitable for extracting the records of rewards $r_w$, $r^v$, and $r_m$ and summarized votes $SV^m(L^w)$, along with their corresponding model updates $L^w$. Furthermore, each m broadcast this legitimate block to its peers and associated workers w and validators v to ensure that all devices receive this legitimate block $B_i$.\nFinally, each device, denoted as d, regardless of its previous role, is tasked with two pivotal responsibilities to finish the i- th communication round. Firstly, it engages in the aggregation of locally updated models in legitimate block $B_i$ whose count"}, {"title": "C. DFLoc Validator Mechanism", "content": "To enable the DFLoc system to withstand the impact of malicious attacks, a mechanism is devised to identify whether the updated local model contains malicious alterations. This gives rise to the DFLoc Validator mechanism.\nIn the i-th communication round, a validator v typically evaluates the quality of the update model $L^w$ by comparing its testing localization accuracy $A^w_v(L^w)$ against that of a single-epoch trained local model, denoted as $A^w_v(L^{(1)w})$, on the worker's test dataset $D^w_{te}$, as suggested by [26]. If noise distorts $L^w$, $A^w_v(L^w)$ will differ, leading to a decline in accuracy compared to $A^w_v(L^{(1)w})$. Conversely, unaltered $L^w$ yields minimal differences between $A^w_v(L^w)$ and $A^w_v(L^{(1)w})$. Notably, v lacks access to $D^w_{te}$, so it cannot directly obtain the value pair {$A^w_v(L^{(1)w}), A^w_v(L^w)$}.\nA viable solution to address this issue involves validator v initially conducting a single-epoch of local learning by using global model $G_{i-1}$ and its train dataset $D^v_{tr}$ to obtain a local update model $L^{(1)v}$, and computing the performance of $L^{(1)v}$ and $L^w$ under v's test dataset $D^v_{te}$, denoted as $A^v(L^{(1)v})$ and $A^v(L^w)$, respectively. Subsequently, they serve as the proxy evaluation for $A^w_v(L^{(1)w})$ and $A^w_v(L^w)$ [26].\nIn BFC, validator v evaluates the potential distortion of $L^w$ by calculating the validation accuracy difference, denoted as $dBFC = A^v(L^{(1)v}) - A^v(L^w)$, and comparing it to a validator-threshold value, $T_{BFC}$. The hypothesis behind this is that when a validator v produces $A^v(L^{(1)v})$, the value of $dBFC$ is expected to differ between the $L^w$ sent by a legitimate w and that by a malicious w [26]. If $dBFC > T_{BFC}$, indi- cating that the accuracy drop exceeds v's tolerance threshold, validator v assigns a negative vote to $L^w$. Otherwise, v issues a positive vote. Finally, we determine $V^v(L^w)$ through this method, which is expressed as below\n$V^v(L^w) = \\begin{cases} 1 & \\text{if } dBFC\\leq T_{BFC} \\\\ -1 & \\text{if } dBFC > T_{BFC} \\end{cases}$ (4)\nIn the LLR part, validator v calculates the validation loss ratio, denoted as $r_{LLR} = A^v(L^{(1)v})/A^v(L^w)$, following the computation of $A^v(L^{(1)v})$ and $A^v(L^w)$. This ratio is then compared to a validator-threshold value, $T_{LLR}$, to assess the potential distortion of $L^w$. The premise here is that the value of $T_{LLR}$ will exhibit disparities between legitimate $L^w$ and malicious $L^w$ [26]. Similarly, we determine $V^v(L^w)$ using this methodology, which is expressed as below\n$V^v(L^w) = \\begin{cases} 1 & \\text{if } r_{LLR} \\geq T_{LLR} \\\\ -1 & \\text{if } T_{LLR} < T_{LLR} \\end{cases}$ (5)"}, {"title": "IV. EXPERIMENTS AND SIMULATION", "content": "In this section, we first describe the experimental setting and then evaluate the efficiency of the proposed system when confronted with malicious attacks and single-point failure, as well as its performance within a 3D environment."}, {"title": "A. Experimental Setting", "content": "1) Dataset: Without loss of generality, our experiments are conducted on the most commonly used dataset in indoor localization, which is called UJIIndoorLoc [27]. This dataset encompasses 21,049 labeled WiFi fingerprint data points collected from three campus buildings, each having four or five floors. Each data point is characterized by 520 RSS values and the associated location information. These RSS values are derived from 520 wireless access points distributed throughout these buildings. The data elements comprise building and floor information, as well as latitude and longitude coordinates (in meters using UTM from WGS84). Since we aim to deal with privacy and security issues, we avoid the potential variations caused by environmental dynamics by selecting 20% of the original training data to create a new testing set, as described in [20]. The remaining training data is partitioned into l (l = |D) data segments, assigned to individual clients for simulating the FL system. To tackle the classification and regression challenges in complex 3D scenes, such as smart buildings, we employ a dual-network approach. This approach involves the training of two distinct networks: DFLoc-BFC and DFLoc-LLR, each meticulously designed to tackle their respective specialized challenges. In this section, we provide a comprehensive overview of the structures of both networks.\n2) Network Architecture: To solve the BFC problem, we design a classification model called DFLoc-BFC, which takes an RSS measurements vector $x_i$ as input. Every element in this vector corresponds to the measured RSS value of a distinct access point. In the extensive 3D space, the input vector can become lengthy. For instance, in the UJIIndoorLoc dataset, every WiFi fingerprint record contains a 520-element RSS vec- tor from 520 access points within the 3D space. Additionally, input vectors can be sparse due to limited wireless sensing coverage, resulting in many invalid values where certain access points are undetectable at specific locations. Therefore, we integrate a fully connected feature extractor into the input layer to reduce data dimensions and extract features. Furthermore, to capture label similarities among input vectors from the same building and floor, we employ 1D convolutional layers to extract key features, as proposed in [20]. Meanwhile, a fully connected layer following the 1D convolution is designed to convert the vector to 8 bits one-hot encoding which encom- passes a 3-bit segment designated for the explicit denotation of the building index, with the remaining 5 bits allocated for the denotation of the floor index. We set two argmax(\u00b7) functions after these two groups of bits to output the final classification results of the DFLoc-BFC network $\\hat{y}_{BFC} = (BL_i, FL_i)$.\nAs mentioned above, input vectors collected from a consid- erable 3D space covered by many access points may be very lengthy and sparse, so DFLoc-LLR also requires a lightweight feature extractor to implement data dimensionality reduction"}, {"title": "B. Evaluation on the effect against malicious attacks", "content": "This section evaluates the proposed framework's effec- tiveness against malicious attacks in both LLR and BFC components. In the CFL system, malicious devices inject Gaussian noise (zero mean vector and identical covariance matrix) into model parameters which are uploaded during training iterations, to emulate the malicious attacks. In DFLoc, malicious workers also distort local model updates with similar noise.\n1) Evaluation on the effect against malicious attacks on DFLoc-LLR: We conduct an experiment about four schemes: CFL without malicious devices (CFLM0), CFL with 3 ma- licious devices (CFLM3), and two analogous schemes for DFLoc (DFLM0 and DFLM3). In Fig. 3, the orange curve illustrates CFLM3's error distance, highlighting its sensitivity to noisy model updates from malicious devices, resulting in unstable convergence. The comparison between the unaffected blue curve (CFLM0) and the yellow curve (DFLM0) demon- strates similar performance, indicating the functionality of the FL components. Moreover, the purple curve (DFLM3) steadily converges to a relatively low error distance, albeit slightly higher than the blue and yellow curves. This is reasonable, considering that the training sets of malicious devices, which comprise 15% of the total, are never effectively incorporated into the learning process.\nIn Fig. 4, we present four pairs of schemes, each comprising blue (CFL) and orange (DFLoc) bars, reflecting different numbers of malicious devices. Irrespective of the varying count of malicious nodes, DFLoc maintains a consistently low error distance (below 8.5 m), while CFL's performance is notably affected. This underscores the significant impact of malicious attacks on CFL, particularly with a larger number of malicious nodes. In contrast, DFLoc always demonstrates robust resistance to malicious attacks in this work. When malicious nodes constitute 15% of the total, CFL's error distance is four times greater than that of DFLoc.\n2) Evaluation on the effect against malicious attacks on DFLoc-BFC: We assess the classification accuracy of DFLoc- BFC, which measures the ratio of correct building-floor pre- dictions to all predictions. Similar to the evaluation presented in Subsection IV-B1, a comparison of four schemes under a similar configuration is conducted, specifically CFLM0, CFLM3, DFLM0, and DFLM3 as shown in Fig. 5, and the re- sults show similar trends. The orange curve denoting CFLM3 experiences difficulty in convergence, maintaining an accuracy"}, {"title": "C. The Robustness Against Single-Point Failure", "content": "To investigate the effectiveness of the proposed framework against single-point failure problems, we analyze the impact of the single-point failure on both the training and inference phases separately, considering a constant proportion of faulty devices in each working round.\nIn the training phase of CFL, both servers and clients actively participate in the training process, server faults halt the entire system until the next round, while client faults result in parameter uploads with random values within the epoch. On the contrary, in the training phase of DFLoc, a faulty device during training, regardless of its role, is rendered inactive for the current round, due to its inability to pass signature checks during communication rounds.\nWithin the inference phase of the CFL system, only the server remains active, and the outcome only depends on the server. Thus server faults during this phase result in a random output within the data range for the whole system. In contrast, in the inference phase of DFLoc, every client produces its respective outcome. Only malfunctioning devices generate random outputs, while the system takes into account each client's output to derive the final output. As a result, some post-processing procedures, such as aggregating client results (sorting and computing the median) can be employed in DFLoc to mitigate the impact of faulty devices and derive an expected final result.\n1) The Robustness Against Single-Point Failure on DFLoc- LLR: This section investigates the impact of the single-point failure on the DFLoc-LLR during both the training and in-ference phases. Initially, experiments involving six schemes during the training phase are conducted: three for CFL and three for DFLoc, each with varying numbers of faulty devices in every training round. In Fig. 7, we observe that all the curves denoting CFL schemes (blue, orange, and yellow curves) show fluctuations. Furthermore, the curves denoting the DFLoc (purple, green, and black curves) exhibit rapid convergence and obvious overlap, indicating the framework's ability to mitigate the impact of single-point failure in the training phase. Next, we analyze the inference phase of DFLoc-LLR through experiments conducted across four distinct groups, each corresponding to varying numbers of faulty devices in every round. Within each group, four schemes are assessed by the metric of error distance: CFL conducts the training phase only (blue bar), CFL conducts both training and inference phases (orange bar), and the same two schemes for DFLoc (yellow and purple bars). As shown in Fig. 8, when no faulty device is present, all four bars are identical. However, with an increasing number of faulty devices, rapid growth occurs in the first two values, while the latter two remain relatively stable. In a word, the DFLoc framework demonstrates robust resilience to the single-point failure in both phases, while traditional CFL systems are notably affected by such failures in these phases.\n2) The Robustness Against Single-Point Failure on DFLoc- BFC: In this section, the impact of the single-point failure on the DFLoc-BFC during both the training and inference phases is investigated. At first, a similar experiment is conducted with the same setup as the one shown in Fig. 7. In Fig. 9, we observe that the curves representing DFLoc (purple, green, and black curves) remain stable, while all curves belonging to CFL (blue, orange, and yellow curves) fail to converge. Then, an analogous experiment utilizing the identical configuration is conducted as depicted in Fig. 8. In Fig. 10, it is observed that as the number of faulty devices increases, the last two values within each group remain constant (yellow and purple bars), while the first two gradually decrease (blue and orange bars). This underscores the robust mitigation effect of our DFLoc framework against single-point failure. In contrast, traditional CFL systems show high susceptibility to single-point failure, with the main impact stemming from the inference phase within the DFLoc-BFC."}, {"title": "D. Evaluation of DFLoc in 3D scenes", "content": "Our framework is tailored for vast 3D scenes, including floor classification and latitude-longitude estimation. To accurately validate the overall performance of our DFLoc framework, we unify discrete building-floor indexes and continuous latitude- longitude values into a unified set of altitude, latitude, and longitude coordinates with consistent units. Since the UJIIn- doorLoc dataset lacks explicit height data, we estimate height values based on floor information, assuming an average height of 6 meters per floor. Consequently, the BFC model enables us to obtain the height value for any location point, while the LLR model provides latitude and longitude values. Through the standardization of output labels, we can effectively evaluate the performance of our proposed DFLoc framework in 3D scenes under malicious attacks and single-point failure.\nFirst, an experiment for our DFLoc and traditional CFL in the 3D scene under malicious device attack is conducted as shown in Fig. 11, which demonstrates the 3D error distance of CFL and DFLoc under conditions of different numbers of malicious devices. When there are no malicious devices, the 3D error distances of CFL and DFLoc are very similar (11.95 m and 12.12 m). With the increase in the number of malicious devices, the 3D error distance of CFL increases rapidly, while the DFLoc will remain stable. When the number of malicious devices increases to 3, the error distance of both of them reaches 34.48 m and 12.03 m, respectively. This demonstrates that our DFLoc has a strong resistance capability against malicious attacks in the 3D environment, while the traditional CFL system is significantly influenced.\nThen, the impact of DFLoc against the single-point failure is explored through an experiment with the same setup as the one shown in Fig. 10. In Fig. 12, it is evident that when there is no faulty device, the four values are nearly identical. However, as the number of faulty devices increases, rapid growth occurs in the blue and orange bars, while the yellow and purple bars remain constant. When the number of faulty devices reaches 3, a significant gap becomes evident between the two bars denoting CFL and the other two bars denoting DFLoc. Both the yellow and purple bars stay at a small level of 3D error distance (12.11 m and 12.41 m) while the blue and orange bars reach 85.87 m and 98.64 m. This observation demonstrates the superior performance of DFLoc in mitigating the impact of single-point failure compared to CFL in both phases."}, {"title": "V. CONCLUSION", "content": "In this work, a novel framework named DFLoc is proposed to address the 3D indoor localization problem in large-scale and complex 3D indoor spaces, particularly under the chal- lenges of malicious attacks and single-point failure. Within this framework, a decentralized federated learning approach is applied to train two networks: DFLoc-BFC and DFLoc- LLR, which provide accurate 3D position estimates based on RSS data. To bolster security and reliability, a model update validation mechanism and a decentralized architecture are incorporated into the federated learning process, effectively preventing the effects of malicious attacks and single-point failure. To better evaluate our DFLoc framework, we conduct extensive experiments using a real-world dataset of WiFi fingerprints. Our results demonstrate that DFLoc can effec- tively mitigate the challenges brought by malicious attacks and single-point failure in 3D environments when compared with the traditional central federated learning system.\nIn future work, we will implement and evaluate DFLoc via real-world AIoT systems and blockchain data networks. Crowdsourced data will be collected from WiFi systems in smart buildings and subsequently annotated by users via a decentralized platform such as PublicAI. These labeled IoT data will be processed and stored on-chain within the Chain- base omni-chain data network. The localization functionality will be powered by the proposed DFLoc system, with location results translated into human-readable language by a crypto- native language model developed by Chainbase Inc. Through this approach, DFLoc aims to provide reliable data collection, annotation, and location-based services."}]}