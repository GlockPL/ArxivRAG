{"title": "A Tie-breaking based Local Search Algorithm for\nStable Matching Problems", "authors": ["Junyuan Qiu"], "abstract": "The stable marriage problem with incomplete lists and ties (SMTI) and the hos-\npitals/residents problem with ties (HRT) are important in matching theory with\nbroad practical applications. In this paper, we introduce a tie-breaking based\nlocal search algorithm (TBLS) designed to achieve a weakly stable matching of\nmaximum size for both the SMTI and HRT problems. TBLS begins by arbitrar-\nily resolving all ties and iteratively refines the tie-breaking strategy by adjusting\nthe relative order within ties based on preference ranks and the current sta-\nble matching. Additionally, we introduce TBLS-E, an equity-focused variant of\nTBLS, specifically designed for the SMTI problem. This variant maintains the\nobjective of maximizing matching size, while enhancing equity through two sim-\nple modifications. In comparison with ten other approximation and local search\nalgorithms, TBLS achieves the highest matching size, while TBLS-E exhibits the\nlowest sex equality cost. Significantly, TBLS-E preserves a matching size compa-\nrable to that of TBLS. Both our algorithms demonstrate faster computational\nspeed than other local search algorithms in solving large-sized instances.", "sections": [{"title": "1 Introduction", "content": "In 1962, Gale and Shapley introduced the concept of stable matchings through two\nproblems: the stable marriage (SM) problem and the hospitals/residents (HR) prob-\nlem, with the latter initially referred to as the \"college admissions problem\" (Gale and\nShapley 1962). In an SM instance of size n, n men with n women each rank all mem-\nbers of the opposite gender in a strict order of preference, with the goal to pair them\nin such a way that no man and woman would prefer each other over their current\npartner. Similarly, in an HR instance of size n, n residents and m hospitals with quo-\ntas strictly rank each other, aiming to make assignments that ensure no resident and\nhospital would prefer each other over their current assignments. In 2003, the concept\nwas generalized further by the introduction of the stable b-matching problem, which\nextends the basic framework to accommodate multiple capacities (Fleiner 2003).\nA natural variant of SM and HR incorporates ties and incomplete preference\nlists, allowing the agents to express indifference and exclude unacceptable members.\nThese variants are known as the stable marriage problem with incomplete lists and\nties (SMTI) (Iwama et al 1999) and the hospitals/residents problem with ties (HRT)\n(Irving et al 2000). Recently, the SMTI and HRT problems have received significant\nattention from researchers due to their relevance in diverse applications such as the\nchild-adoption matching problem (Delorme et al 2019; Pettersson et al 2021) and the\nstudent-project allocation problem (Abraham et al 2003, 2007; Manlove and O'Malley\n2008). When ties are present in the preference lists, three criteria are used to define the\nstability of a match: weak stability, strong stability, and super-stability (Irving 1994;\nOlaosebikan and Manlove 2022). Among these definitions, weak stability has been the\nfocus of extensive research (Cao et al 2024; Delorme et al 2019; Gent and Prosser\n2002; Gelain et al 2010).\nBeyond achieving stability, objectives also include maximizing matching size and\nensuring fairness. For a given SM or HR problem, all stable matchings have the same\nsize (Gale and Sotomayor 1985). A stable matching can be easily found using the Gale-\nShapley algorithm (GS) proposed by Gale and Shapley (1962). For the SMTI or HRT\nproblem, a weakly stable matching can be obtained by applying GS after breaking\nall ties. However, different methods of breaking ties generally result in stable match-\nings of varying sizes (Irving et al 2000, 2009). Consequently, a natural objective is to\nfind a maximum cardinality weakly stable matching for the SMTI and HRT problems,\nreferred to as MAX-SMTI and MAX-HRT, respectively. These problems have been\nproven to be NP-hard (Irving et al 2000; Manlove et al 2002). Equity is another cri-\nterion for matchings, especially in societal applications requiring a compromise stable\nmatching (Romero-Medina 2005; Roth and Sotomayor 1990). A popular way to assess\nfairness between the two parties is the sex equality cost (Gusfield and Irving 1989).\nMinimizing this cost for the SM problem, specifically referred to as the sex-equal stable\nmarriage problem (SESM), is proven to be NP-hard (Kato 1993). Numerous studies\nhave investigated this problem and proposed corresponding algorithms to address it\n(Irving 2014; Iwama et al 2007; Viet et al 2016). However, efficiently solving large\ninstances of MAX-SMTI and MAX-HRT remains an ongoing research topic, with\nlimited studies striving for equity while solving the MAX-SMTI problem."}, {"title": "1.1 Our Contribution", "content": "In this paper, we introduce a tie-breaking based local search algorithm (TBLS) to\naddress the MAX-SMTI and MAX-HRT problems. Initially, TBLS arbitrarily breaks\nall ties and applies a base algorithm designed for the SM or HR problem, such as the\nGS algorithm, to achieve a stable matching. The algorithm then iteratively refines the\ntie-breaking strategy. Rather than adjusting ties randomly, TBLS implements a well-\ndefined adjustment to purposefully introduce a blocking pair (BP) by increasing an\nagent's rank within a tie, aimed at filling the unassigned position for this agent. To\nescape local optima, a disruption that randomly adjusts some ties is applied either\nwhen no adjustments are available or at a low probability. Following the tie-breaking\nstrategy refinement process, TBLS uses a BP removal process to effectively secure a\nstable matching from the existing matching. Instead of re-evaluating the entire agent\nset, this removal process requires examining only a specific subset of agents to iden-\ntify and eliminate potential BPs. If this removal process exceeds a predefined time\nthreshold, the base algorithm is reapplied to guarantee a stable matching. This iter-\native refinement continues until either a perfect matching is found or the maximum\nnumber of iterations is reached.\nAdditionally, we propose an equity-focused variant of TBLS, called TBLS-E, aimed\nat finding relatively fair matchings for the MAX-SMTI problem. In this variant, an\nalgorithm designed for the SEME problem serves as the base algorithm, and the choice\nof tie adjustments is strategically restricted to improve fairness while maximizing\nmatching size.\nIn our experimental study, we refine the random problem generator originally pro-\nposed by Gent and Prosser (2002) to generate small-sized and large-sized instances\nof the MAX-SMTI and MAX-HRT problems. This refined generator produces more\nchallenging instances, as detailed in Section 5.1. We implement ten additional approx-\nimation and local search algorithms for comparison. Our experimental results reveal\nthat TBLS consistently outperforms other algorithms in achieving larger matching\nsizes for both the MAX-SMTI and MAX-HRT problems. Significantly, the equity-\nfocused version, TBLS-E, achieves the lowest sex equality cost for the MAX-SMTI\nproblem while maintaining matching sizes comparable to TBLS. Moreover, both TBLS\nand TBLS-E exhibit faster computational speed than other local search methods when\napplied to large-sized problems. Our algorithms introduce a new approach to solving\nthe MAX-SMTI and MAX-HRT problems by iteratively refining tie-breaking strate-\ngies. Furthermore, TBLS-E offers a way to obtain a relatively fair matching when\nsolving the MAX-SMTI problem.\nThe remainder of this paper is organized as follows: Section 2 describes the related\nwork, Section 3 provides the definitions relevant to the problem, Section 4 details the\nproposed algorithms, Section 5 presents the experimental results, Section 6 concludes\nthe paper."}, {"title": "2 Related work", "content": "In recent years, the MAX-SMTI and MAX-HRT problems have gained significant\nattention as popular research topics in the fields of operations research. Manlove et al\n(2002) demonstrated that MAX-SMTI is NP-complete even under strict restrictions\non the position and length of ties. Moreover, Irving et al (2009) showed that the MAX-\nSMTI problem remains NP-hard even when the preference list of each individual is\nlimited to a maximum length of three. Similarly, Irving et al (2000) confirmed that\nMAX-HRT is also NP-hard. Various methods have been proposed to address these\ntwo problems."}, {"title": "3 Preliminaries", "content": "This section provides formal definitions related to the bipartite stable b-matching\nproblem, a general framework for the SMTI and HRT problems, as well as the sex\nequality cost."}, {"title": "3.1 Bipartite Stable b-matching", "content": "An undirected bipartite graph G = (V, E), preference lists L, and a quota function\nb: V\u2192 Nare the inputs of a bipartite stable b-matching problem. In the graph G,\nV = UUW, where U and W are disjoint sets. Each vertex in U is connected to a subset\nof vertices in W, and similarly, vertices in W are connected to subsets in U. Each agent\nv \u2208 V has a preference list L\u2082 consisting of agents who are adjacent to v. We refer to\nall the agents in Lu as v's candidates. Additionally, the preference list of each agent\nmay include ties. We denote ru(x) as the rank of x in v's preference list. If v prefers\nx and y equally, this is denoted as rv(x) = rv(y). If v strictly prefer x to y, this is\ndenoted as rv (x) < rv (y). Furthermore, define \u03c6\u03c5(x) = {y \u2208 Lx | y \u2260 v, rx(v) = rx(y)}\nas a set of agents who have the same rank as v in agent x's preference list.\nA b-matching M is a subset of E such that each agent v is connected to at most\nb(v) edges in M, that is, deg\u043c(v) \u2264 b(v), where degm denotes the degree of vertex v\nin the graph G\u043c = (V, M). We denote M(v) as the set of agents who are connected\nto agent v in M, referred to as v's partners. An agent v is full if degm(v) = b(v) and\nis free if degm (v) < b(v). The set of all free agents in M is denoted by FM. For each\nfree agent f\u2208 FM, let \u00a7f = {x \u2208 Lf | x \u00a2 M(f)} denote the set of agents who are\ncandidates for f but are not currently matched with it. The agent x is termed as v's\nworst partner if x \u2208 M(v) and ru(x) = max{rz(y) | y \u2208 M(v)}. In a b-matching M,\n(u, w) is a blocking pair (BP) if and only if:\n(i). u \u2208 Lw, w \u2208 Lu, and (u, w) \u2209 \u039c;\n(ii). u either is free, or strictly prefers w over its worst partner in M;\n(iii). w either is free, or strictly prefers u over its worst partner in M.\nBP (u, wi) dominates BP (u, wj) from u's point of view if u strictly prefers wi to wj.\nSimilarly, BP (ui, w) dominates BP (uj, w) from w's point of view if w strictly prefers\nui to uj. A BP is an undominated blocking pair (UBP) of v if there are no other BPs\ndominating it from v's perspective. Removing UBPs may decrease the number of BPs\nmore effectively than merely eliminating BPs (Cao et al 2023; Gelain et al 2013). A\nmatching M is a weakly stable b-matching if and only if it has no BPs. In this paper,\nsince we are focusing exclusively on weakly stable matchings, we will refer to them\nsimply as stable matchings."}, {"title": "3.2 Sex Equality Cost", "content": "Sex equality cost is a popular measure for achieving equity in the SM problem. This\nmetric quantifies the gap between the preferences obtained by the two sides, defined\nas:\n$$dSM(M) = \\sum_{(u,w) \\in \u039c}ru(w) - \\sum_{(u,w) \\in \u039c} rw(4)$$\nwhere u and w represent a man and a woman, respectively.\nIn the SMTI problem, there may be several single men and women. We denote the\nset Mpaired = {(u, w) \u2208 M | u \u2260 \u00d8, w \u2260 \u00d8} as the set of matching pairs consisting\nof matched men and women. When calculating the sex equality cost for the SMTI\nproblem, we focus on the matched pairs, disregarding the single individuals:\n$$dSMTI(M) = \\sum_{(u,w)\\in Mpaired}ru(w) - \\sum_{(u,w) \\in Mpaired} rw(u)$$\nA stable matching M is considered to favor the U side if $$\\sum_{(u,w)\\in Mpaired} ru(W) < \\sum_{(u,w)\\in Mpaired} w(u)$$. Conversely, Mis considered to favor the W side if $$\\sum_{(u,w)\\in Mpaired} ru (w) > \\sum_{(u,w)\\in Mpaired} rw (u)$$"}, {"title": "4 A local search algorithm for SMTI and HRT", "content": "In this section, we introduce a tie-breaking based local search algorithm, named TBLS,\ndesigned to address the MAX-SMTI and MAX-HRT problems, and its equity-focused\nvariant, TBLS-E. The TBLS algorithm is illustrated in Algorithm 1. TBLS starts to\nfind an efficient strategy Sbest and a maximum stable matching Mbest by arbitrarily\nbreaking all the ties and implementing a base algorithm, as outlined in lines 2-5\nof Algorithm 1. In each iteration, TBLS performs three steps. First, it refines the\ncurrent tie-breaking strategy S using the subroutine Refine_Tie_Breaking Strategy.\nFollowing this refinement, it obtains a corresponding stable matching M using the\nsubroutine Obtain_Stable_Matching. Lastly, if Mbest is found to be worse than M\naccording to the evaluation function E, then M and S are assigned to Mbest and Sbest,\nrespectively, as specified in lines 9-12 of Algorithm 1.\nNext, we describe the main concepts of these two subroutines:\nRefine_Tie Breaking_Strategy refines the current tie-breaking strategy by\nadjusting the relative order within ties. These adjustments, based on preference ranks\nand the current stable matching, aim to improve the rank of selected free agents in\nthe preference lists of their respective candidates, thereby increasing their chances of\nbeing matched. Each adjustment targets a free agent and one of its candidates, pur-\nposefully introducing a BP to alter the current stable matching. When this subroutine\nis invoked, an adjustment is selected randomly to refine the strategy. Moreover, when\nno adjustments are available, or with a small probability, the current tie-breaking\nstrategy is disrupted to prevent local optima by randomly adjusting some ties.\nObtain Stable Matching obtains a stable matching by either removing BPs or\ndirectly using the base algorithm. Given the minor updates to the preference lists\nduring each refinement, attaining a stable matching from the existing matching by\nremoving BPs is typically more efficient than applying the base algorithm. Moreover,\nthis characteristic enables the examination of only a specific subset of agents to iden-\ntify and eliminate potential BPs, rather than re-evaluating the entire set of agents.\nTherefore, to effectively obtain a stable matching after the refinement process, a BP\nremoval process is developed to identify and eliminate UBPs. To prevent this process\nfrom becoming trapped in an endless cycle, a time threshold T is established. Once this\nthreshold is exceeded, the subroutine shifts to applying the base algorithm to secure\na stable matching.\nThe rest of this section is structured as follows: Section 4.1 discusses the evalua-\ntion function, Section 4.2 examines the subroutine Refine_Tie_Breaking Strategy,\nSection 4.3 explores the subroutine Obtain_Stable_Matching, Section 4.4 outlines two\nmodifications for developing TBLS-E, an equity-focused variant of TBLS."}, {"title": "4.1 Evaluation function", "content": "The evaluation function is defined by two criteria. The primary criterion is to maxi-\nmize the matching size. Subsequently, among matchings of identical size, the secondary\ncriterion gives priority to freeing up agents with longer preference lists, as these\nagents have a higher likelihood of being matched later to increase the matching size.\nTherefore, we define the evaluation function as follows:\n$$max E(M, L) = size(M) \u00d7 bigM + \\sum_{VEFM} |L_v| \u00d7 (b(v) \u2013 |M(v)|)$$"}, {"title": "4.2 Refining the tie-breaking strategy", "content": "A tie-breaking strategy, denoted as S, converts the original preference lists L,\nwhich contain ties, into tie-free (i.e., strictly ordered) preference lists L*. Let\nr*(x) represent the rank of x in v's tie-free preference list. In the subroutine\nRefine_Tie_Breaking_Strategy, outlined in Algorithm 2, the tie-breaking strategy\nis updated as follows:\n1. Obtain\na\nset of candidate adjustments RM via the subroutine\nObtain_Adjustments (line 3).\nM\n2. If no adjustments are available, i.e. Ry is an empty set, or with a small probability\npa, then a disruption is implemented to escape local optima. The disruption\ninvolves randomly selecting ku agents from set U and ku agents from set W, and\nthen arbitrarily breaking all ties in their respective preference lists (lines 4-11).\n3. Otherwise, if at least one adjustment is available, i.e. RM is non-empty, and with\na probability 1-pa, then an adjustment is randomly selected to refine the tie-\nbreaking strategy. This adjustment improves a specific free agent f's rank in its\ncandidate x's tie-free preference list by positioning f at the highest rank among\nthe agents who share the same rank as f in x's preference list, i.e., the agents in\n$f(x) (lines 12-16).\nAdditionally, a set Qa is maintained to record the agents whose preference lists have\nbeen altered during the refinement process. This set will subsequently be used in\nthe BP removal process within the subroutine Obtain_Stable_Matching, which is\ndiscussed in Section 4.3.\nNext, we detail the process of identifying adjustments that can increase the\nlikelihood of matching free agents and the construction of RM. In the subroutine\nObtain_Adjustments, as illustrated in Algorithm 3, RM is generated through the\nfollowing two steps:\n1. Identify a set RM of all potential adjustments (lines 4-11). Given a stable match-\ning M, consider each free agent f \u2208 FM. For every agent x \u2208 \u00a7f, if the set\nintersection of(x) \u2229 M(x) is non-empty, an adjustment is initiated. This adjust-\nment aims to improve f's rank in x's tie-free preference list by positioning f at\nthe highest rank among those agents in $f(x), thereby ensuring f ranks above\nat least one agent currently matched with x. This adjustment introduces (f,x)\nas a BP and enhances f's likelihood of being matched with x. All adjustments in\nM are stored in RM, which can be represented as RM = {(f,x) | f \u2208 Fm,x \u2208\n\u00a7f, $f(x) \u2229 M(x) \u2260 \u2205}. The set of adjustments related to one free agent f is\ndenoted by R\u043c(f) = {\u0430 \u2208 RM | a[1] = f}, where a[i] is the i-th element in\nadjustment a.\n2. Construct RM by sampling from RM (lines 12-16). One free agent may have\nmultiple adjustments, and the number of adjustments can vary among differ-\nent free agents. In some cases, agents with many unassigned positions might\nhave relatively few adjustments, while those with fewer unassigned positions\nmight have many adjustments. This imbalance can impact the performance of\nthe algorithm, particularly when it is difficult to increase the overall match-\ning size by filling the positions of those agents with fewer unassigned positions.\nConsequently, a balanced set of adjustments, RM, is constructed through sam-\npling from RM. Specifically, for each free agent f \u2208 FM, we randomly select\nk = min{b(f) \u2013 |M(f)|,|R\u043c(f)|} adjustments from RM(f) for inclusion in\nRM(f)."}, {"title": "4.3 Obtaining a stable matching", "content": "Following the refinement of the tie-breaking strategy, it is necessary to obtain a\ncorresponding stable matching to assess the efficacy of the current strategy. As the\npreference lists of only a subset of agents are modified during the refinement process,\nmost matching pairs from the previous stable matching can be retained. Rather than\nreconstructing a stable matching from scratch using the base algorithm, eliminating\nBPs from the existing matching is generally more efficient. Moreover, rather than\nre-evaluating the entire set of agents, only a specific subset of agents needs to be\nexamined to identify and eliminate potential BPs. Therefore, we design a BP removal\nprocess to effectively identify and eliminate UBPs. However, this process may become\ntrapped in an endless cycle while attempting to obtain a stable matching by removing\nBPs (Tamura 1993). A time threshold T is established for the BP removal process.\nIf the duration of this process exceeds this threshold, the base algorithm is applied\nto ensure a stable matching is achieved. The function to obtain a stable matching\nis described in Algorithm 4. The rest of this section will focus on the BP removal\nprocess, where only a specific set of agents is required for examination."}, {"title": "4.4 Equity-focused variant of TBLS", "content": "To achieve a relatively equitable outcome with a low sex equality cost when solving\nthe MAX-SMTI problem, two modifications are introduced to TBLS:\n(i). Use an algorithm designed for the SESM problem, such as PDB, as the base\nalgorithm.\n(ii). Restrict the choice of tie adjustments based on the current bias of the matching. If\nthe matching favors the U side, adjustments related to agents of U are permitted.\nSpecifically, only adjustments within the set {a \u2208 R | a[1] \u2208 U} are allowed.\nConversely, if the current matching favors the W side, only adjustments related\nto agents of W are permitted. In cases where no adjustments are available within\nthe constraint, the restriction is temporarily lifted.\nBy balancing the satisfaction across both sides, these two modifications aim to reduce\nthe sex equality cost while maximizing the matching size. The first modification finds\na stable matching with a low sex equality cost after applying the tie-breaking strategy\nto break all ties. The second modification limits the choice of adjustments to reduce\nbias toward any one side during the refinement process. We refer to this variant as\nTBLS-E.\nTo demonstrate the effectiveness of the second modification, consider the following\nscenario: suppose the current matching favors the U side, and there is an adjustment\na = (f,x), where f \u2208 U and x \u2208 W. If f is successfully matched with x following\nadjustment a, then an agent q \u2208 U would be disconnected from x. This disconnection\nmay lead q to form a new pairing with another agent p, where rq(p) \u2265 rq(y). Therefore,\nadjustment a contributes to mitigating the bias toward U."}, {"title": "5 Experiments", "content": "In this section, we compare the performance of our TBLS algorithm and its derived\nversion, TBLS-E, with other methods in solving the MAX-SMTI and MAX-HRT prob-\nlems. The experiments are performed using an Intel Core i9-13900HX CPU (5.40 GHz)\nwith 32GB of RAM. The rest of this section is structured as follows: Section 5.1 intro-\nduces the problem set, Section 5.2 details the parameter settings of our algorithms,\nSection 5.3 presents the performance comparison."}, {"title": "5.1 Problem set", "content": "We modified the random problem generator initially proposed by Gent and Prosser\n(2002) to create more challenging instances. The updated SMTI generator accepts four\nparameters: size (n), probability of incompleteness (p1), probability of initiating a tie\n(p2), and a tie length generator (g). Except for tie-related processes, all generation\nsteps remain the same as those of the original generator. The updated tie generation\nsteps are as follows:\n1. For an agent v, we begin by generating a random number 0 < p < 1 starting\nfrom their first choice.\n2. If pp2, then we use g to generate a random number i. The next i agents are\nassigned the same rank as the first choice. The agent following these i + 1 agents\nis assigned a rank one higher than the first choice, and a new random number p\nis generated to continue the process from this agent.\n3. Otherwise, the next agent is assigned a rank one higher than the first choice, and\nthe process continues in the same manner.\nWhen we set g = Geom(1-p2), where Geom(1 \u2013 p2) denotes a geometric distribution\nwith the parameter 1-p2, the instances generated by the updated generator are nearly\nidentical to those generated by the original one. In this setting, lower values of p2\nresult in fewer, shorter ties, while higher values lead to a greater number of longer ties.\nThis characteristic simplifies the problem even if p2 is high, as nearly all preferences\nare tied, indicating general indifference. Therefore, we introduce g = Geom(p2) to\ngenerate an inverse relationship between the number of ties and the length of each\ntie. This modification increases the problem's complexity when p2 is high, as a greater\nnumber of shorter ties complicates the solving process.\nSimilarly, the modified HRT generator accepts five parameters: the number of\nresidents (n), the number of hospitals (m), the probability of incompleteness (p1),\nthe probability of starting a tie (p2), and the random generator of the tie length\n(g). Experimental results indicate that HRT problems with capacities uniformly dis-\ntributed among hospitals present a greater challenge compared to those with randomly\nallocated capacities (Cao et al 2023). Therefore, the capacity is uniformly distributed\namong hospitals in the HRT instances.\nTo evaluate the efficacy of various algorithms in addressing the MAX-SMTI and\nMAX-HRT problems, we categorize the problems into two sizes: small and large. For\nthe large-sized problems, we set a high value for pl to generate more challenging\ninstances. We systematically vary parameters across both problem sizes, with the con-\nfigurations detailed in Table 2. In this table, parameters are presented with specific\nranges and intervals. For instance, the notation \"0-0.9 (0.1)\" indicates values rang-\ning from 0 to 0.9 in increments of 0.1. Additionally, the use of commas, such as in\n\"Geom(p2), Geom(1 - p2)\", denotes an alternative parameter set being considered for\nthe parameter. We define each unique combination of n, m, p1, p2, g as a configura-\ntion. To ensure a robust evaluation, we generate 100 instances for each configuration.\nThe randomly generated instances used in this study are available in the Science Data\nBank repository, https://www.scidb.cn/en/s/ZfauMn."}, {"title": "5.2 Parameter settings", "content": "In both TBLS and TBLS-E, the parameters c = 0.9 and pa = 0.05 are consistently\nmaintained across all configurations. The parameter c is utilized to compute \u0435\u043c, which\nestimates the minimum size of the matching during the search process. Meanwhile,\npa denotes the probability of executing a disruption. Furthermore, the time threshold\nT for obtaining stable matchings is set equal to the time required to obtain a stable\nmatching with the use of the base algorithm at the beginning. The parameters ku and\nkw, which adapt according to the scale and complexity of the problem, are detailed\nin Table 3. Specifically, ku and ku represent the number of agents selected from sets\nU and W for disruption, respectively. In the context of the MAX-SMTI problem, U\nand W represent men and women, respectively, while in the MAX-HRT problem, U\nand W correspond to residents and hospitals, respectively. For TBLS, GS serves as\nthe base algorithm, whereas for TBLS-E, PDB is used as the base algorithm."}, {"title": "5.3 Performance comparison", "content": "In each configuration, we calculate the average result across 100 instances for each\nalgorithm. An algorithm is deemed the \"winner\" in a configuration if its result is\nnot worse than that of any other algorithm. To compare the performance of different\nalgorithms, we count the number of wins and compute the overall average result across\nall configurations. Calculating the overall average result of an algorithm involves two\nsteps. First, the result for each configuration is calculated by averaging the outcomes\nof 100 instances. Then, the results for each configuration are averaged to obtain the\nfinal overall result. These two metrics provide a comprehensive comparison of the\noverall performance of the algorithms across various configurations. The results for\neach configuration are available in Online Resource 1.\nFor the MAX-SMTI problem, we evaluate the solution quality of TBLS and TBLS-\nE by examining the matching size and the sex equality cost (SECost). These results\nare compared against those of AS, GSA2, GSM, LTIU, and MCS. Additionally, we\ncompare the execution time of TBLS and TBLS-E with that of AS, LTIU, and MCS,\nas they are all local search algorithms. For the MAX-HRT problem, we assess the\nsolution quality of TBLS, focusing on the matching size, in comparison with ASBM,\nHA, HPA, HR, and MCA. Furthermore, we compare the execution time of TBLS with\nthat of HR and MCA, since they all employ local search techniques."}, {"title": "5.3.1 \u039c\u0391X-SMTI Problems", "content": "First, we compare the solution quality of different algorithms in solving small-sized\nMAX-SMTI problems, including 220 configurations. The maximum number of itera-\ntions is set to 3000 for TBLS and TBLS-E, and 50000 for LTIU, AS, and MCS, to\nfully leverage the capabilities of the latter three local search algorithms."}, {"title": "5.3.2 MAX-HRT Problems", "content": "We begin by evaluating the solution quality of different algorithms for solving MAX-\nHRT problems of small and large sizes. The maximum number of iterations is still set\nto 3000 for TBLS. To maximize the performance of other local search algorithms, the\nmaximum number of iterations is set to 5000 for both HR and MCA."}, {"title": "6 Conclusion", "content": "This paper proposed a tie-breaking based local search algorithm, named TBLS, to\nsolve the MAX-SMTI and MAX-HRT problems. We also introduced an equity-focused\nvariant, TBLS-E, designed to find relatively fair matchings for the MAX-SMTI prob-\nlem. Experimental results demonstrate that TBLS consistently outperforms other\nalgorithms in achieving larger matching sizes for both the MAX-SMTI and MAX-\nHRT problems. Additionally, for the MAX-SMTI problem, TBLS-E yields matchings\nwith lower sex equality costs while preserving matching sizes comparable to those pro-\nduced by TBLS. Both TBLS and TBLS-E exhibit faster execution time than other\nlocal search algorithms when solving large-scale problems. In the future, we plan to\nincorporate neural networks and reinforcement learning techniques, such as G3DQN\n(Liu et al 2022) and NeuRewriter (Chen and Tian 2019), to improve the evaluation\nfunction and the refinement process."}, {"title": "7 Declarations", "content": ""}, {"title": "7.1 Funding", "content": "No funding was received for conducting this study."}, {"title": "7.2 Competing interests", "content": "The author has no competing interests to declare that are relevant to the content of\nthis article."}]}