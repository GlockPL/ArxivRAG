{"title": "Graph Signal Adaptive Message Passing", "authors": ["Yi Yan", "Changran Peng", "Ercan E. Kuruoglu"], "abstract": "This paper proposes Graph Signal Adaptive Message Passing (GSAMP), a novel message passing method that simultaneously conducts online prediction, missing data imputation, and noise removal on time-varying graph signals. Unlike conventional Graph Signal Processing methods that apply the same filter to the entire graph, the spatiotemporal updates of GSAMP employ a distinct approach that utilizes localized computations at each node. This update is based on an adaptive solution obtained from an optimization problem designed to minimize the discrepancy between observed and estimated values. GSAMP effectively processes real-world, time-varying graph signals under Gaussian and impulsive noise conditions.", "sections": [{"title": "I. INTRODUCTION", "content": "Recently, the representation of irregularly structured multivariate signals as graphs has gained widespread popularity across diverse research fields due to the unparalleled ability of graphs to capture multivariate irregularities [1]\u2013[3]. Time-varying graph signals are encountered in a broad spectrum in real life, with notable examples including monitoring the sea-surface temperature of the Pacific Ocean [4], observing fluctuations in stock market prices [5], recording wind speed at various locations [6], analyzing traffic patterns within road networks [7], examining states of brain activity across different regions [8], and tracking the number of confirmed COVID-19 cases in different regions [9]. Integrating classical adaptive filters with graph shift operations, along with smoothness and bandlimited filters, has been effective for online graph signal reconstruction by solving a convex optimization problem to minimize the error between observed and estimated signals. Setting up the optimization problem using the l2-norm leads to the Graph Least Mean Squares (GLMS) algorithm, which assumes Gaussian noise [10]. However, the underlying noise in a variety of applications, including meteorological recordings [11] and powerline communication [12], is verified to possess impulsive behaviors, causing 12-norm algorithms to be unstable [13]. As a result, the Graph-Sign (G-Sign) algorithm is proposed to use l\u2081-norm optimization instead of 12-norm, providing robust estimations under impulsive noise [14]. The spatial diffusion versions of GLMS and G-Sign can be obtained by approximating the spectral filters using Chebyshev polynomials, resulting in the Graph Diffusion LMS (GDLMS) [15] and Graph-Sign-Diffusion (GSD) [16].\n\nThe Graph Convolutional Neural Networks (GCN) is an extension of GSP on time-invariant tasks where nonlinearity is introduced to GSP by activation functions [2], [17]\u2013[19]. GCN can be further generalized by the Message Passing Neural Networks (MPNN), where operations are defined locally on the node neighborhood relationships instead of globally on the entire graph [20], [21]. MPNN was proposed mostly as a performance-enhanced GCN or Graph Neural Network (GNN) in general for time-invariant tasks. The Spatio-Temporal GCN (STGCN) [22] and several extensions such as the spectral-temporal GCN [23] introduced GCN the ability to process time-varying data. However, GNNs, including STGCN and MPNNs, face several limitations compared to GSP methods, including lengthy training times, lower generalization capabilities, extensive data requirements for training, high resource intensity, implementation complexity, and reduced stability and robustness under noise. These drawbacks limit the practical deployment of GNNs in scenarios that demand straightforward, effective, and robust online estimation. An adaptive GSP algorithm is needed for the online reconstruction of time-varying graph signals, benefiting from the low-cost, robust, and straightforward deployment of GSP alongside the representational flexibility of MPNNs.\nWith insights from the implementation simplicity of adaptive GSP algorithms and the expressiveness power of MPNNs, we take a step forward by breaking the convention of using only global information of the entire graph to define adaptive GSP methods. We propose the Graph Signal Adaptive Message Passing (GSAMP) algorithm, which is a novel adaptive graph algorithm defined using the localized node message passing scheme. Different from MPNNs which target time-invariant tasks and only updates based on the input data, GSAMP is obtained from a convex optimization problem based on the error between observation and estimation, leading to an adaptive update targeted towards time-varying tasks. The resulting GSAMP provides a comprehensive solution designed to address needs for online prediction, missing data imputation, and noise removal on time-varying graph signals. Additionally, under certain parameter settings, the GSAMP demonstrates high robustness under impulsive noise."}, {"title": "II. PRELIMINARIES AND NOTATION", "content": "A graph with N nodes V = {U\u2081...UN} is denoted as G. In this paper, for simplicity, we will consider the case of unweighted and undirected graphs. The time-varying function value defined on the nodes of G is a time-varying graph signal and is denoted as \u00e6[t] \u2208 RN with t being the time index. The subscript of x[t] is used to denote the signal on node"}, {"title": "III. METHODOLOGY", "content": "The message passing consists of the aggregated message m[t] and the update function Y(.) [20]. Here is a general formulation of the GSAMPS update function. Each localized update at node v in terms of \u00c2\u03c5[t+1] and m\u03c5[t] is given by\n\u00c2\u03c5 [t+1] = \u03a8(x\u03c5 [t], m\u03c5 [t]) = x\u03c5[t] + m\u03c5 [t], (1)\nwhere m\u03c5[t] is the localized aggregated message at node v (vth element of m[t] \u2208 RN). Assuming we input a graph signal z[t] \u2208 RN, all message passed to node v in V is denoted as\nm\u03c5[t] = \u03a9 ({(z\u03c5[t], zj[t], w\u03c5,j) | j\u2208N\u03c5}), (2)\nwhere the set of all the 1-hop neighboring nodes to v is N\u03c5, the weight of the message between node v and j is w\u03c5,j, and \u03a9(.) is the aggregation function. Notice that there are several choices for the aggregation \u03a9(z\u03c5[t], zj [t], w\u03c5,j).\nThe function \u03a9(.) is usually a permutation invariant operation suitable for aggregation on graphs with common choices\n\u03a9sum(v) = \u2211 w\u03c5,jzj[t], (3)\nj\u2208N\u03c5\nwhere d\u03c5j is the node degree of v. Similarly, we can define the median aggregation as\n\u03a9median (v) = median ({zj[t] | j \u2208N\u03c5}). (4)\nA localized smoothness aggregation applies the smoothness-based low pass filter to the subgraph G\u03c5 formed by node v and its 1-hop neighborhood N\u03c5. We compose a vector (zN\u03c5 [t]) as a vector that includes the signal on node v and all signals from 1-hop neighboring nodes in N\u03c5. We proceed by defining the graph Laplacian matrix of G\u03c5 as L\u03c5, then conduct the GFT L = U\u039bUT to G\u03c5 to apply the low pass filter h(\u039b\u03c5) by Uh(\u039b\u03c5)U. A low pass filter with passband [0, \u03bb\u03b9] defines the filter h(\u039b) =diag(hi) on the local neighborhood of node v, where the constant l is the lth eigenvalue index in \u039b and hi is a N by 1 vector with the first l elements being 1 and last N - l elements being 0. The resulting localized smoothness aggregation is denoted as\n\u03a9smooth (v) = \u03b8\u03c5 (\u03c9\u03bd \u2299 UZh(\u039b\u03c5)U ZN\u03c5 [t]), (5)\nwhere \u2299 is the element-wise multiplication and corresponds to the row that node v is in UZh(\u039b\u03c5)U. The vector w is the weight vector of all the weights, including self-aggregation weights \u03c5 and its || neighbors forming a vector [w\u03c5,\u03c5, w\u03c5,1,..., w\u03c5,|N\u03c5|]. In GSAMP, min or max aggregation is not considered as these definitions are primarily suited to categorical data and do not perform optimally with numerical graph signals. It is worth mentioning that the mean aggregation can be achieved by setting the weights w\u03c5,j in the sum aggregation in (3) to 1. Additionally, aggregated signals can then be combined linearly to form a more powerful representation, enhancing the ability of message passing to capture complex patterns in the graph signals [20].\nWe would like the GSAMP update function in (1) to follow an adaptive filter update logic. To achieve online estimation,\nthe message update should minimize the error between noisy"}, {"title": "IV. EXPERIMENTAL RESULTS AND DISCUSSION", "content": "The capability of GSAMP to conduct online estimation is tested by giving only the noisy observation containing missing values at time t and letting GSAMP form the graph signal at time t + 1. The dataset in the experiment is a time-varying graph signal consisting of hourly wind speed records from 197 weather stations across the United States [27]. The graph topology is constructed using the method seen in [28] where the topology is formed by nearest neighbors based on locations of the station. We configured the observation mask Ms as a time-invariant mask, maintaining 130 out of the 197 nodes as observed using the greedy method that maximizes the spectral graph signal content shown in [28]. In this configuration, the"}, {"title": "V. CONCLUSION AND FUTURE WORK", "content": "The GSAMP is proposed for time-varying graph signal es-timation by adopting various types of localized node message passing schemes. The two realizations of GSAMP, namely GSAMP-LMS and GSAMP-Sign, have been confirmed to effectively leverage message passing and adaptive filters to create localized, flexible, and expressive algorithms for pro-cessing time-varying graph signals. In addition, l\u2081-norm opti-mization enhances the robustness of GSAMP-Sign at handling impulsive noise scenarios. Future directions include exploring the combination of GSAMP with learning algorithms to learn the weights and to combine federated learning for a distributed implementation of GSAMP."}]}