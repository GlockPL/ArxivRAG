{"title": "Explaining Non-monotonic Normative Reasoning using Argumentation Theory with Deontic Logic", "authors": ["Zhe Yu", "Yiwei Lu"], "abstract": "In our previous research, we provided a reasoning system (called LeSAC) based on argumentation theory to provide legal support to designers during the design process. Building on this, this paper explores how to provide designers with effective explanations for their legally relevant design decisions. We extend the previous system for providing explanations by specifying norms and the key legal or ethical principles for justifying actions in normative contexts. Considering that first-order logic has strong expressive power, in the current paper we adopt a first-order deontic logic system with deontic operators and preferences. We illustrate the advantages and necessity of introducing deontic logic and designing explanations under LeSAC by modelling two cases in the context of autonomous driving.\nIn particular, this paper also discusses the requirements of the updated LeSAC to guarantee rationality, and proves that a well-defined LeSAC can satisfy the rationality postulate for rule-based argumentation frameworks. This ensures the system's ability to provide coherent, legally valid explanations for complex design decisions.", "sections": [{"title": "1 Introduction", "content": "Modelling and applying legal reasoning has been central to AI and Law technology. The goal is to ensure intelligent systems comply with the law, but translating laws, designed for judges with extensive context, into rules guiding machines with limited context is challenging. In previous research [5, 7, 6], we took a designer's perspective to support law-compliant design decisions. One key issue is \"deontological collapse\", where the distinction between \u201cought\u201d and \u201ccan refrain from\u201d in human interpretation may be lost when translated into computational instructions. In the current paper, we introduce elements of deontic logic to address this issue and help explain design decisions in the midst of conflicting values.\nThis paper takes the legal context as a typical application context for normative reasoning. The following hypothetical example may not fully comply with the legal provisions and detailed requirements, but it may help to illustrate what we mean.\nExample 1. A car has been involved in an accident with a driver and a pet dog in it, then who should we protect first? While individual emotional preferences may vary, the guidance of the law is clear: the driver should be protected first. More importantly, the law is able to give an adequate and acceptable legal explanation. For example, although both are lives, the safety of humans as citizens is prioritised over pets, which are legally defined as property.\nHowever, What if the human driver is replaced with an autonomous driving system? Obviously, prioritising the protection of the driver, i.e. the vehicle's driving system, in this scenario would bring a lot of debates. Moreover, the law cannot gain public acceptance by simple compulsion, such as following past norms to require vehicles to protect the driving system. This is essentially because the original explanation of the law no longer applies. Autonomous driving systems are not citizens, nor are they lives. Regardless of which of the two the law ultimately deems should be prioritised for protection, a new and reasonable explanation needs to be given.\nAnd also, what if there's only one passenger on the car with a pet dog? Should we distribute the responsibilities of a driver to him in accidents? In such case should we require the passenger to keep sober like a human driver? These uncertainty and inconsistency above wont release the duty of designers to perform specialized designs, but add more stress to clarify why certain designs are made.\nLegal explanation is essential for ensuring consistency, fairness, and public trust in legal practice. In legal disputes, both parties must present sound legal explanations for their claims and counter the opposing side's reasoning. Judges must also provide clear, understandable reasons for their rulings, such as the relevance of evidence, applicable legal provisions, and case facts. These explanations not only support communication and the expression of claims but also ensure that the justice system is transparent and trusted by the public. Unlike technical processes, such as facial recognition systems, people demand transparency in legal decisions. Without clear explanations, legal outcomes are less likely to be accepted by the public.\nLegal explanations typically expected to include the following elements ([8]): (1) Comparisons with alternative possibilities, particularly conflicting ones; (2) Selectivity, highlighting essential points and avoiding unnecessary detail; (3) Probabilities, though less convincing, should be supplemented with typical scenarios; (4) Sociability, reflecting the beliefs of the involved parties. These features help ensure that legal explanations are persuasive and understandable.\nFor autonomous vehicle (AV) designers and manufacturers, legal explanations play a crucial role in gaining trust and regulatory approval. However, they face unique challenges. Unlike traditional legal cases where explanations are needed after disputes arise, AV manufacturers need legal clarity during the design phase to avoid penalties and demonstrate compliance. The goal of legal explanations in this context is to show adherence to legal norms and public values, rather than to prevail in legal disputes. Furthermore, AV designers must navigate uncertainties in laws not yet fully adapted to automation. Explanations must address these inconsistencies between human-specific regulations and AVs.\nTo meet these challenges, we propose that legal explanations for AV design should include: (1) The core reasoning behind the accepted action; (2) Reasons for rejecting alternative actions, particularly conflicting ones; (3) The (legal or ethical) principles and values justifying the accepted action, such as prioritizing life over property; and (4) Clear statements of rights and obligations, indicating what is required, optional, or prohibited. Additionally, legal explanations should avoid relying solely on statistical probabilities, as these are insufficient for gaining trust in new, untested technologies.\nGiven the unique requirements for AV legal explanations, we see potential in applying the LeSAC framework, which we have developed in previous research [5, 7, 6]. To further enhance clarity, we introduce deontic logic operators to better express the underlying legal reasoning. The rest of this paper will be developed in the following format: in \u00a72 we show how LeSAC preforms reasoning after the introduction of the formal language based on first-order deontic logic; then we present the proofs of the rationality postulates. In \u00a73 we show how LeSAC constructs explanations, with case studies to demonstrate our explanation. Finally, in \u00a74 we conclude the paper and discuss future work."}, {"title": "2 Non-monotonic Reasoning in Normative Contexts", "content": "As a basis for achieving non-monotonic reasoning, we first introduce the definition of LeSAC."}, {"title": "2.1 Logic and argumentation theory", "content": "LeSAC, which employs the basic mechanism of the structured argumentation framework ASPIC+ [11, 9] as its reasoning method, can adopt any specified logical language as the basis for knowledge representation. In previous work [4, 5], we translate the assertions (ABox) and the terminologies (TBox) of a Description Logic-based legal ontology as sets of knowledge and rules of the system\u00b9. Such a combination takes advantage of the argumentation system's ability to handle non-monotonic reasoning, allowing users to realize reasoning in uncertain and inconsistent legal contexts. LeSAC can clearly reflect legal information of construction arguments, achieving conclusions, and which arguments defended/justified them. It also supports reasoning under preference based on priority orders of legal/ethical principles. It therefore has the potential to provide effective legal explanations under the criteria described in the previous section.\nHowever, in the legal explanation of practical reasoning, legal norms generally have the feature of being defeasible, that is, the application of legal rules is uncertain. Only rules that can be logically deduced are guaranteed to be strict. Furthermore, manufacturers and designers will pay special attention to the lever of permissive or obligatory of certain actions. Description logics do not provide expressions for these aspects,"}, {"title": "Formal language", "content": "the formal language is defined inductively as follows (t denotes a term and a denotes a formula):\n\\(t ::= x | c | f (t_1,...,t_n)\\)\nwhere x and c represent variables and constants respectively, f represents a function. Let A represent a predicate and p an atomic formula (A(t1, ...,tn)).\n\\(\\alpha a ::= p | \\bot | \\top | \\neg\\alpha | A_1 \\wedge A_2 | A_1 \\vee A_2 | A_1 \\rightarrow A_2 | \\forall x\\alpha | \\exists x\\alpha | O\\alpha | P\\alpha | Pref(\\alpha_1,\\alpha_2)\\)\nwhere \\(\\bot\\) is falsehood, \\(\\wedge\\), \\(\\vee\\), \\(\\rightarrow\\), \\(\\neg\\) are logical connectives, \\(O\\alpha\\) represents that \\(\\alpha\\) is obligatory, \\(P\\alpha\\) represents that \\(\\alpha\\) is permitted, and Pref (\\(\\alpha_1\\), \\(\\alpha_2\\)) expresses that \\(\\alpha_1\\) is preferred over \\(\\alpha_2\\). (\\(\\alpha_1 \\rightarrow \\alpha_2\\)) \\(\\wedge\\) (\\(\\alpha_2 \\rightarrow \\alpha_1\\)) is denoted as \\(\\alpha_1 \\leftrightarrow \\alpha_2\\).\nIn order to express normative reasoning with preferences and to capture conflict relations reasonably, the following axioms and rules are necessary (including the basic rules of classical first-order logic)."}, {"title": "(1) Axiom Schemes:", "content": "All axiom schemes of classical first-order logic.\n(\u03911) \\(O(\\alpha) \\rightarrow P(\\alpha)\\)\n(A2) \\(O(\\alpha) \\leftrightarrow \\neg P(\\neg\\alpha)\\)\n(A3) \\(O(\\alpha) \\wedge O(\\neg\\alpha) \\rightarrow \\bot\\)\n(A4) \\(O(\\alpha) \\wedge O(\\beta)\\wedge Pref(\\alpha,\\beta) \\rightarrow O(\\alpha) \\wedge\\neg O(\\beta)\\)\n(A5) \\(Pref(\\alpha, \\beta) \\wedge Pref (\\beta, \\gamma) \\rightarrow Pref(\\alpha, \\gamma)\\)\n(A6) \\(Pref (\\varphi, \\psi) \\rightarrow (O(\\varphi) \\rightarrow O(\\psi))\\)"}, {"title": "(2) Rules of Inference:", "content": "All rules of classical first-order logic.\n(R1) \\(\\frac{O(\\alpha) \\quad (\\alpha \\rightarrow \\beta)}{O(\\beta)}\\)\n(R2) \\(\\frac{O(\\alpha) \\quad Pref(\\alpha,\\beta)}{\\neg O(\\beta)}\\)\nAccording to the axiom schemes, in addition to (A3), the following formulas also imply \\(\\bot\\): \\(O(\\alpha) \\wedge\\neg P(\\alpha)\\), \\(\\neg P(\\neg\\alpha) \\wedge O(\\neg\\alpha)\\), \\(\\neg P(\\neg\\alpha) \\wedge \\neg P(\\alpha)\\). Axiom (A4) expresses an Obligation Cancellation, which means that (when there is a conflict between actions) the obligation for the less-preferred action should be cancelled, and Axiom (A6) means that if \\(\\alpha\\) is preferred over \\(\\beta\\), the obligation to do \\(\\alpha\\) should always take precedence if \\(\\beta\\) is obligatory.\nLet \\(\\Delta_L\\) be a rule based legal knowledge base. Formally, a LeSAC can be defined as follows."}, {"title": "Definition 1 (LeSAC)", "content": "A LeSAC based on legal knowledge base \\(\\Delta_L\\) is a five-tuple (\\(\\mathcal{L},\\mathcal{R},\\mathcal{K},\\mathcal{P}, prin\\)), where:\n\\(\\mathcal{L}\\) is a formal language with deontic operators.\n\\(\\mathcal{R} = \\mathcal{R}_s \\cup \\mathcal{N}\\) is a set of rules such that \\(\\mathcal{R}_s \\cap \\mathcal{N} = \\emptyset\\), where \\(\\mathcal{R}_s\\) is a set of strict inference rules of the form \\(\\Phi_1,..., \\Phi_n \\rightarrow \\varphi\\), and \\(\\mathcal{N}\\) is a set of legal norms of the form \\(\\Phi_1,..., \\Phi_n \\Rightarrow \\varphi\\) (\\(\\varphi_i, \\varphi \\in \\mathcal{L}\\)).\n\\(\\mathcal{K}\\) is a set of accepted (justified) knowledge based on \\(\\Delta_L\\).\n\\(\\mathcal{P}\\) is a set of principles.\nprin is a function from elements of \\(\\mathcal{N}\\) to elements of \\(\\mathcal{P}\\).\nThe set of strict rules \\(\\mathcal{R}_s\\) is derived from the logical formulas and rules we give, while norms are defeasible and only the set \\(\\mathcal{N}\\) can be prioritized, because strict rules express certain reasoning.\nBased on \\(\\mathcal{M}\\) arguments can be constructed (through rules). Let Prem(A) return the set of all the formulas of \\(\\mathcal{M}\\) used to build an argument A, Conc(A) return the conclusion of A, Sub(A) return the set of all the subarguments of A, Norms(A) return the set of all the norms applied in A, StRules(A) return the set of all the strict rules (rules in \\(\\mathcal{R}_s\\)) applied in A.\nArguments constructed based on LeSAC are defined as follows."}, {"title": "Definition 2 (Arguments)", "content": "Let \\(\\mathcal{A}\\) be the set of all constructible arguments based on a LeSAC. Each argument \\(A \\in \\mathcal{A}\\) takes one of the following forms:\n1.  A = \\(\\varphi\\), where \\(\\varphi \\in \\mathcal{K}\\). In this case Prem(A) = {\\(\\varphi\\)}, Conc(A) = \\(\\varphi\\), Norms(A) = \\(\\emptyset\\), StRules(A) = \\(\\emptyset\\), and Sub(A) = {\\(\\emptyset\\)};\n2.  A = \\(A_1, ..., A_n \\rightarrow \\psi\\), where \\(A_1, ..., A_n \\in \\mathcal{A}\\) and there exists a strict rule \\(\\rightarrow\\) in \\(\\mathcal{R}_s\\) such that Conc(\\(A_1\\)), ..., Conc(\\(A_n\\)) \\(\\rightarrow \\psi\\). In this case Prem(A) = Prem(\\(A_1\\)) \\(\\cup\\)... \\(\\cup\\)Prem (\\(A_n\\)), Conc(A) = \\(\\psi\\), Norms(A) = Norms(\\(A_1\\)) \\(\\cup\\)... \\(\\cup\\) Norms(\\(A_n\\)), StRules(A) = StRules (\\(A_1\\)) \\(\\cup\\)... \\(\\cup\\) StRules(\\(A_n\\)) \\(\\cup\\) {Conc(\\(A_1\\)), ..., Conc(\\(A_n\\)) \\(\\rightarrow \\psi\\)}, and Sub(A) = Sub(\\(A_1\\)) \\(\\cup\\)... \\(\\cup\\) Sub(\\(A_n\\)) \\(\\cup\\) {A};\n3.  A = \\(A_1, ..., A_n \\Rightarrow \\psi\\), where \\(A_1, ..., A_n \\in \\mathcal{A}\\) and there exists a defeasible rule (norm) \\(\\Rightarrow\\) in \\(\\mathcal{N}\\) such that Conc(\\(A_1\\)), ..., Conc(\\(A_n\\)) \\(\\Rightarrow \\psi\\). In this case Prem(A) = Prem(\\(A_1\\))\\(\\cup\\)...\\(\\cup\\)Prem(\\(A_n\\)), Conc(A) = \\(\\psi\\), Norms(A) = Norms(\\(A_1\\))\\(\\cup\\)...\\(\\cup\\)Norms(\\(A_n\\)) \\(\\cup\\) {Conc(\\(A_1\\)), ..., Conc(\\(A_n\\)) \\(\\Rightarrow \\psi\\)}, StRules(A) = StRules(\\(A_1\\))\\(\\cup\\)...\\(\\cup\\) StRules(\\(A_n\\)), and Sub(A) = Sub(\\(A_1\\)) \\(\\cup\\)... \\(\\cup\\) Sub(\\(A_n\\))\\(\\cup\\){A}.\nNext we need to identify conflicts between arguments. Based on the given logical language and rules, as well as the application context of practical reasoning, conflicts could come from two aspects: 1. Logically identifiable conflicts; 2. Conflicts between decisions."}, {"title": "Definition 3 (Conflicts)", "content": "Let A, B, B' \\(\\in \\mathcal{A}\\) be arguments, A attacks B on B' \\(\\in\\) Sub(B) of the form \\(B'_1, ..., B'_n \\Rightarrow \\varphi\\) iff the following conditions hold:\n1.  Conc(A) = \\(\\neg \\varphi\\) or Conc(A) \\(\\wedge\\) Conc(B') \\(\\rightarrow \\bot\\);\n2.  Conc(A) = O(\\(a\\)) and Conc(B') = O(\\( \\beta\\)), such that \\(O(a) \\wedge O(\\beta) \\rightarrow \\neg O(a) \\vee \\neg O(\\beta) \\in \\mathcal{R}_s\\).\nIf A attacks B on B, then we say that A directly attacks B.\nConflict identification is also necessary for consistency checking during product design, which is one of the main functions of LeSAC in our previous paper.\nIn Definition 3, condition 1 indicates that a conflict between two arguments arises from a contradiction between their conclusions. In addition, if the conclusions of two arguments lead to \\(\\bot\\), then there is also a conflict between them. Condition 2 states that if, in a particular legal context, it is not possible to ensure that both \\(a\\) and \\(\\beta\\) are taken, then there is a conflict between them.\nCompared to ASPIC+'s definition of three types of attacks, we actually only identify the rebuttal attacks. The reasons for this are as follows: First, since the elements in the knowledge base are all accepted, they are not attacked in the current context, so there is no undermining attack on the premises. Second, in the legal context that emphasises argumentation, if the opponent wants to claim that a norm is not applicable, he must give reasons to support the claim. However, undercutting attacks are specified as \u201cpreference-free\u201d [9], which seems to be groundless in legal contexts. This paper argues that such situation is equivalent to constructing a norm that declares that the premise of another norm does not support its conclusion, and provides the former with a higher priority legal principle. That is, for a norm \\(a \\Rightarrow \\beta\\) (the principle on which it is based is p1), another norm \\(a \\Rightarrow \\neg \\beta\\) (the principle on which it is based is p2) is given such that p2 is strictly prior to p1 (p1 < p2). Therefore, we do not include undercutting attacks either.\nTo identify justifiable arguments, conflicts might be resolved by preferences. The last-link principle [9] is usually regarded to be more reasonable for preference acquisition in the context of normative reasoning.\nLet A \\(\\in \\mathcal{A}\\) be an argument. LastNorms(A) = \\(\\emptyset\\) if Norms(A) = \\(\\emptyset\\), or LastNorms(A) = {Conc(\\(A_1\\)), ..., Conc(\\(A_n\\)) \\(\\Rightarrow \\psi\\)} if A = \\(A_1, ..., A_n \\Rightarrow \\psi\\), otherwise LastNorms(A) = LastNorms(\\(A_1\\))\\(\\cup\\)...\\(\\cup\\)LastNorms(\\(A_n\\)). We denote the corresponding set of principles as LastPrin(A), i.e., {prin(n)|n \\(\\in\\) LastNorms(A)}.\nLet < be a preordering4 on \\(\\mathcal{P}\\) and < a set comparison, we present the following definitions that derive preferences from the priority orderings on principles."}, {"title": "Definition 4 (Preferences on arguments)", "content": "For any A, B \\(\\in \\mathcal{A}\\), A < B iff LastPrin(B)<LastPrin(A). A \\(\\leftrightarrow\\) B iff A < B or LastPrin(A) = LastPrin(B)."}, {"title": "Definition 5 (Preferences on actions)", "content": "Let A, B be arguments such that Conc(A) = O(\\(a\\)), Conc(B) = O(\\( \\beta\\)), and \\(O(\\alpha) \\wedge O(\\beta) \\rightarrow \\neg O(a) \\vee \\neg O(\\beta)\\). \\(Pref(\\beta,\\alpha) \\in \\mathcal{X}\\), iff B < A, \\(\\neg Pref(\\alpha,\\beta) \\in \\mathcal{X}\\), and for some specific designers, \\(\\beta\\) takes precedence over \\(a\\).\nFor the first type of conflicts in Definition 3, we obtain preference between arguments according to priorities on principles corresponding to the norms. While for conflicts on action obligations, we obtain new rules (which are strict) through the Pref relation between actions. Note that \\(\\neg O(a)\\vee \\neg O(\\beta) \\leftrightarrow P(\\neg\\alpha) \\vee P(\\neg\\beta)\\), indicating that in this case it is permissible to not take either action. This definition can be used to deal with the personal preferences of the designers and manufacturers. Nevertheless, to avoid legal or ethical violations, these personal preferences should only be used when they do not conflict with these principles or when the latter cannot resolve the conflict (in the case of A < B and B < A). Through the Pref relation, axiom scheme (A4) and rule (R2) infer that if one action is preferred in a conflict, the obligation to take the less preferred action, which cannot be performed simultaneously, should be cancelled. Additionally, (A6) is indispensable, as it ensures that if the conflict cannot be resolved through preference between arguments, the obligation for the less preferred action will lead to a conflict and thus cannot be chosen. Therefore, even if a set of acceptable arguments concludes with the less preferred action, the corresponding actions will ultimately not be accepted.\nGiven the set of all the arguments and the attack relations determined after preference comparison, a computable arguments evaluation process can be performed based on abstract argumentation frameworks (AFs) and argumentation semantics [3] to output the set of justified arguments, according to which the set of accepted conclusions can be obtained. Since the complete semantics is the most basic of the classical semantics (other semantics can be defined based on it), we introduce the following definition for justification of arguments based on the complete semantics [3]."}, {"title": "Definition 6 (Argument evaluation)", "content": "Let (\\(\\mathcal{A}, \\mathcal{D}\\)) be an AF, where \\(\\mathcal{A}\\) is the set of all the arguments constructed based on a LeSAC, and \\(\\mathcal{D}\\) is the set of defeats between arguments. For all arguments A, B \\(\\in \\mathcal{A}\\), (A,B) \\(\\in \\mathcal{D}\\) iff A attacks B and A \\(\\neq\\) B. A set of arguments E \\(\\subseteq \\mathcal{A}\\) is conflict-free iff \\(\\nexists A,B \\in E\\) such that (A,B) \\(\\in \\mathcal{D}\\). An argument A is said to be defended by E, iff\\(\\forall B \\in \\mathcal{A}\\), if (B,A) \\(\\in \\mathcal{D}\\), then \\(\\exists C \\in E\\) such that (C,B) \\(\\in \\mathcal{D}\\). E is said to be complete, iff: 1) E is conflict-free, 2) \\(\\forall A \\in E\\), A is defended by E and 3) \\(\\forall A \\in \\mathcal{A}\\) defended by E, A \\(\\in\\) E.\nWe say A is justified/accepted with respect to E, if and only if A \\(\\in\\) E."}, {"title": "2.2 Rationality requirements and postulates", "content": "In this subsection, we provide a detailed discussion on how to ensure that the settings of LeSAC are reasonable and that the reasoning outcomes are rational, drawing on relevant literature from structured argumentation systems [9, 10, 1].\nBy Definition 4, an ordering < on the set \\(\\mathcal{A}\\) based on a LeSAC is reasonable if it satisfies the properties one expects [9], depending on whether there are uncertain elements (i.e., norms in \\(\\mathcal{N}\\)) contained in the constructed arguments. Following [9, 10], we introduce the concepts of reasonable inducing and strict continuation as follows.\nReasonable inducing Let NP \\(\\in\\) {Norms, LastNorms, Prin, LastPrin}. A set ordering < is said to be a reasonable inducing if it is irreflexive, transitive, and for all arguments A, \\(B_1\\), . . ., \\(B_n\\) such that \\(\\bigcup_{i=1}^n\\) NP(\\(B_i\\)) < NP(A), it holds that for some i = 1 ...n, NP(\\(B_i\\)) <NP(A).\nStrict continuation For any set of arguments {\\(A_1\\), ..., \\(A_n\\)}, A' is a strict continuation of {\\(A_1\\), ...,\\(A_n\\)} if and only if Norms(A') = \\(\\bigcup_{i=1}^n\\) Norms(\\(A_i\\)), StRules(A') \\(\\bigcup_{i=1}^n\\) StRules(\\(A_i\\)) and Prem(A') \\(\\bigcup_{i=1}^n\\) Prem(\\(A_i\\)).\nThe following definition of reasonable argument ordering for LeSAC is taken from [9, 10]."}, {"title": "Definition 7 (Reasonable preferences for arguments)", "content": "Let < be a preference ordering on \\(\\mathcal{A}\\) constructed based on a LeSAC. < is reasonable iff the following two conditions are satisfied:\n1.  \\(\\forall A, B \\in \\mathcal{A}\\),\n (a) if Norms(A) = \\(\\emptyset\\) and B Norms(B) \\(\\neq\\) \\(\\emptyset\\), then B < A;"}, {"title": "Definition 8 (Set Comparison)", "content": "Let \\(\\Gamma\\) and \\(\\Gamma'\\) be two finite sets and s \\(\\in\\) {Eli, Dem}, \\(<_s\\) denotes a set comparison:\n1.  if \\(\\Gamma\\) = \\(\\emptyset\\) then \\(\\Gamma \\nless_s \\Gamma'\\);\n2.  if \\(\\Gamma'\\) = \\(\\emptyset\\) and \\(\\Gamma \\neq\\) \\(\\emptyset\\), then \\(\\Gamma <_s \\Gamma'\\); otherwise,\n3.  assuming a preordering < over the elements in \\(\\Gamma \\cup \\Gamma'\\):\n if s = Eli, then \\(\\Gamma <_{Eli} \\Gamma'\\) if \\(\\exists X \\in \\Gamma\\) such that \\(\\forall Y \\in \\Gamma'\\), X < Y; else\n if s = Dem, then \\(\\Gamma <_{Dem} \\Gamma'\\) if\\(\\forall X \\in \\Gamma\\), \\(\\exists Y \\in \\Gamma'\\), X < Y.\nThen, \\(\\Gamma \\\\prec_s \\Gamma'\\) iff \\(\\Gamma <_s \\Gamma'\\) or \\(\\Gamma\\) = \\(\\Gamma'\\).\nLet the defined in Definition 4 be based on the \\(<_s\\) defined above, we present the following two propositions."}, {"title": "Proposition 1", "content": "The preference ordering < on arguments (according to the last-link principle) is reasonable."}, {"title": "Proposition 2", "content": "The preference ordering < on arguments (according to the weakest-link principle) is reasonable.\nSince [9, 10] have already proven that<_s is reasonable inducing, and by Definition 4, our definition of preference on arguments (1) is equivalent to <s, it is evident that < will also be reasonable. Therefore, we will not repeat the proofs here.\nThe following denotations are adapted from [9]."}, {"title": "Definition 9 (Consistency)", "content": "\\(\\mathcal{Q} \\subseteq \\mathcal{L}\\) is directly consistent iff \\(\\nexists\\varphi, \\psi \\in \\mathcal{Q}\\) such that one of the following cases holds: 1) \\(\\varphi = \\neg\\psi\\); 2) \\(\\varphi \\leftrightarrow \\psi \\rightarrow \\bot\\); or 3) \\(\\varphi\\) = O(\\(a\\)), \\(\\psi\\) = O(\\( \\beta\\)) such that \\(O(\\alpha) \\wedge O(\\beta) \\rightarrow \\neg O(a) \\vee \\neg O(\\beta) \\in \\mathcal{R}_s\\). \\(\\mathcal{Q}\\) is indirectly consistent if and only if Clr(\\(\\mathcal{Q}\\)) is directly consistent.\nIn addition, a LeSAC is said to be well-defined if it satisfy the following conditions."}, {"title": "Definition 10 (Well-defined LeSAC)", "content": "A LeSAC is well-defined, if it is\n closed under contraposition or transposition, i.e.,"}, {"title": "obligation cancellable", "content": "\\(\\forall A, B \\in \\mathcal{A}\\) such that Conc(A) = \\(\\varphi\\) and Conc(B) = \\(\\psi\\), if either \\(\\varphi \\leftrightarrow \\psi \\rightarrow \\bot\\) holds, or \\(\\varphi\\) = O(\\(a\\)), \\(\\psi\\) = O(\\( \\beta\\)), and \\(O(\\alpha) \\wedge O(\\beta) \\rightarrow \\neg O(a) \\vee \\neg O(\\beta) \\in \\mathcal{R}_s\\), then at least one of A, B has a defeasible last rule. (i.e., at least one of \\(\\varphi\\) or \\(\\psi\\) can only be the consequence of some norm in \\(\\mathcal{N}\\))."}, {"title": "Lemma 1", "content": "For any A, B \\(\\in \\mathcal{A}\\),\n1.  if A' \\(\\in\\) Sub(A) such that (B,A') \\(\\in \\mathcal{D}\\), then (B,A) \\(\\in \\mathcal{D}\\);\n2.  if Norms(A) = \\(\\emptyset\\) and A attacks B, then (A,B) \\(\\in \\mathcal{D}\\);\n3.  if A, B directly attack each other, then at least one of the following cases holds:\n i) (A,B) \\(\\in \\mathcal{D}\\); ii) (B,A) \\(\\in \\mathcal{D}\\)."}, {"title": "Proof", "content": "1.  Straightforward according to Definition 3.\n2.  By Definition 4, 8 and Proposition 1, since \\(<_s\\) is reasonable inducing, < on arguments based on which is also reasonable. Therefore, in this case it is impossible A < B. Then, by Definition 6, (A, B) \\(\\in \\mathcal{D}\\).\n3.  Since A and B directly attack each other, according to Definition 3, both A and B are of the form \\(C_1,..., C_n \\Rightarrow \\varphi\\), where \\(C_1,..., C_n\\) are arguments in \\(\\mathcal{A}\\), and the last inference rules are norms. According to Definition 4, the preference between them is determined by the preordering < between the principles associated with the last norms of A and B. It is impossible for both A < B and B < A to hold. Therefore, by Definition 6, at least one of (A,B) \\(\\in \\mathcal{D}\\) or (B,A) \\(\\in \\mathcal{I}\\) must hold."}, {"title": "Lemma 2", "content": "For any complete extension E = {\\(A_1\\), ..., \\(A_n\\)}, if there exists an argument A such that A is a strict continuation of E, then A \\(\\in\\) E."}, {"title": "Proof", "content": "Suppose for contradiction. Since E is a complete extension, either A is not defended by E or EU {A} is not conflict-free.\n1.  If A is not defended by E, then \\(\\exists B \\in \\mathcal{A}\\) such that B defeats A, and \\(\\nexists A_i \\in E\\) such that \\(A_i\\) defeats B. Since A is a strict continuation of E, it is impossible for A to be of the form \\(A'_1\\),...,\\(A'_n\\) \\(\\Rightarrow \\varphi\\). Therefore, by Definition 3, B cannot directly attack A. Consequently, B attacks and defeats A on \\(A_1\\)/ ... /\\(A_n\\) \\(\\in\\) E, which contradicts that E is complete, as every argument in E must be defended by E.\n2.  If EU {A} is not conflict-free, then \\(\\exists A_i \\in E\\) such that (A,\\(A_i\\)) \\(\\in \\mathcal{D}\\) or (\\(A_i\\),A) \\(\\in \\mathcal{D}\\), both cases lead to a contradiction to E is conflict-free: 1) if (A,\\(A_i\\)) \\(\\in \\mathcal{D}\\), then since \\(A_i\\) is defended by E, \\(\\exists A_j \\in E\\) such that \\(A_j\\) defeats \\(A_i\\); this situation is similar to 1 and \\(A_j\\) must defeat at least one of \\(A_1\\), ...,\\(A_n\\); 2) if (\\(A_i\\),A) \\(\\in \\mathcal{D}\\), then \\(A_i\\) must also defeat at least one of \\(A_1\\),..., \\(A_n\\) for defeating A. In either case, E is not conflict-free.\nSince A is defended by E and EU {A} is conflict-free, A \\(\\in\\) E."}, {"title": "Theorem 1", "content": "Let E be a complete extension based on LeSAC. The following four properties hold.\n\\(\\forall A \\in E\\), if A' \\(\\in\\) Sub(A), then A' \\(\\in\\) E. (Sub-argument Closure)\n{\\(Conc(A)|A \\in E\\)} = Clas({\\(Conc(A)|A \\in E\\)}). (Closure under Strict Rules)\n{\\(Conc(A)|A \\in E\\)} is consistent. (Direct Consistency)"}, {"title": "3 Explanation in Normative Contexts", "content": "Based on the above definitions of LeSAC, we present the following definition of why a certain decision is accepted in a normative context.\nLet Eco denote a complete extension of arguments obtained by Definition 6."}, {"title": "Definition 11 (Explanation)", "content": "Let A, B \\(\\in \\mathcal{A}\\) be arguments, < the priority orderings on \\(\\mathcal{P}\\), and a a formula of the logic language. A normative explanation for accepting a (under complete semantics) is Exp(\\(\\alpha\\)) = \\(\\mathcal{C}(A) \\cup \\mathcal{C}(B) \\cup {<_1}\\), where A, B \\(\\"}]}