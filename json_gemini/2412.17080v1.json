{"title": "Aligning Graphical and Functional Causal Abstractions", "authors": ["Willem Schooltink", "Fabio Massimo Zennaro"], "abstract": "Causal abstractions allow us to relate causal models on different levels of granularity. To ensure that the models agree on cause and effect, frameworks for causal abstractions define notions of consistency. Two distinct methods for causal abstraction are common in the literature: (i) graphical abstractions, such as Cluster DAGs, which relate models on a structural level, and (ii) functional ab-stractions, like a-abstractions, which relate models by maps between variables and their ranges. In this paper we will align the notions of graphical and functional consistency and show an equivalence between the class of Cluster DAGs, consistent a-abstractions, and constructive \\(\\tau\\)-abstractions. Furthermore, we extend this alignment and the expressivity of graphical abstractions by introducing Partial Cluster DAGs. Our results provide a rigorous bridge between the functional and graphical frameworks and allow for adoption and transfer of results between them.\nKeywords: Causality, Causal Abstractions, Structural Causal Models, Cluster DAG, Consistency", "sections": [{"title": "1. Introduction", "content": "Causality is a fundamental concept for understanding and predicting the behavior of complex sys-tems. Uncovering the underlying causal mechanisms of a system is essential to make informed decisions and design more effective policies in critical fields such as medicine, economics, and politics. The formalism of Structural Causal Models (SCMs) (Pearl, 2009) provides us with a rigorous language to represent a causal system and reason about its behaviour not only in an observational regime (L1), but also under interventions (L2).\nWhatever causal system we consider, we always need to choose at which level of resolution we want to reason. For example, we may want to reason about voting behaviours either by defining a causal model on a person-by-person basis or by considering the causal dynamics at the level of districts. The two causal models represent the same system and can be connected by a relation of abstraction: individual voting behaviours can be aggregated into district voting patterns. While most causal algorithms select a single among many possible levels of representation, switching between the levels can provide a richer understanding of a system; for instance, aggregating data at the individual and the district level may be valuable for designing successful advertisement strategies.\nWe can express the relation between a low-level (or base) model and a high-level (or abstracted) model through a causal abstraction map. In order to dynamically switch between models, this abstraction map must guarantee the preservation of relations of cause and effect. We propose to distinguish two main ways to express abstractions and assess their consistency in the literature. The first line of work on graphical abstractions is based on the grouping or clustering of low-level variables, as proposed with the Cluster DAG (CDAG) approach (Anand et al., 2023). In these frameworks, we assess graphical consistency in terms of the identifiability of causal queries across the base and the abstracted model; when all relevant interventional queries are correctly identifiable"}, {"title": "2. Preliminaries", "content": "In this section we first provide the notions of SCM and causal hierarchy; we then review graphical abstractions through the definitions of CDAGs and graphical consistency; and we conclude with functional abstractions through the presentation of the a-framework and functional consistency.\nNotation. We will denote a set of variables using bold uppercase V, a specific variable using normal uppercase \\(V_i \\in V\\), when necessary with an index subscript, and the value of that variable using lowercase \\(v_i\\). We use \\(P(X)\\) to denote a probability distribution; if necessary, we add a subscript \\(P_M(X)\\) to specify that the distribution is computed on model M."}, {"title": "2.1. Causality", "content": "Structural Causal Models. An SCM is a graphical and functional modelling tool that allows us to encode a causal system by (i) defining relations of cause and effects among variables, and (ii) specifying the behaviour of the variables via functions and probability distributions (Pearl, 2009).\nDefinition 1 (Structural Causal Model) An SCM is a 4-tuple \\(M : (U, V, F, P(U))\\) where:\n\u2022 U is a set of exogenous variables each one with range \\(R(U)\\).\n\u2022 V is a set of endogenous variables each one with range \\(R(V)\\).\n\u2022 F is a collection of functions determining the value of the endogenous variables such that, for each \\(V \\in V\\), there is a function \\(f_v(P_v, U_v)\\) with \\(P_v \\subseteq V \\setminus V\\), \\(U_v \\subseteq U\\). We say that \\(V_i \\in V\\) is a direct cause of \\(V_j \\in V\\) if and only if the function \\(f_{v_j} \\in F\\) depends on \\(v_i\\).\n\u2022 \\(P(U)\\) is the probability distribution over the exogenous variables U.\nIn the following, we will make standard assumptions about our SCMs. We will restrict our attention to semi-Markovian SCMs, that is, models without cyclic causal relations. It is immediate to show that such an SCM entails a Directed Acyclic Graph (DAG) \\(G = \\langle V, E\\rangle\\) with the set of vertices V given by the endogenous variables and the set of edges E given by the collection of edges \\(V_i \\rightarrow V_j\\) if \\(V_i\\) is a direct cause of \\(V_j\\). The set \\(P_{v_j}\\) for a function \\(f_{v_j}\\) represents then the graph-theoretical parents of \\(V_j\\), and we will denote it as \\(Pa(V_j)\\) from here on. Furthermore, if two variables \\(V_i, V_j \\in V\\) share an exogenous parent \\(U \\in U\\), we say that \\(V_i\\) and \\(V_j\\) are confounded, implying they are not independent even without a causal edge between them; we denote confounding with a dashed bidirectional edge \\(V_i \\leftrightarrow V_j\\) as a shorthand for \\(V_i \\leftarrow U \\rightarrow V_j\\). Notice that, despite the bidirectional edge, the actual graph remains acyclic. Finally, we will also make the assumption of faithfulness, that is two variables are graphically independent if and only if they are distributionally independent.\nIt is worth pointing out that, whereas an SCM M entails a unique DAG G, there normally are multiple SCMs M with the same DAG structure G.\nImportantly, causality defines a way of interacting with SCMs via interventions. We consider hard interventions defined as follows:"}, {"title": "Definition 2 (Interventions)", "content": "Let \\(M = (V, U, F, P(U))\\) be an SCM and \\(X \\in V\\) an endogenous variable, then an intervention \\(do(X = x)\\) is an operation that replaces the function determining \\(X = f_x(Pa(X),U_x)\\) with the assignment \\(X = x\\).\nIn analogy to conditioning, we will abbreviate the generic \\(do(X = x)\\) as \\(do(X)\\). Notice how an intervention \\(do(X)\\) removes the direct causes of X; therefore it implies a new SCM with an under-lying DAG with all the incoming edges into X removed. It is immediate to extend the definition of an intervention on a single variable \\(do(X)\\) to multiple variables \\(do(X)\\)."}, {"title": "Causal Hierarchy", "content": "A causal query on an SCM is a causal statement that can be located onto one of the three distinct layers of the Pearl's Causal Hierarchy (PCH) (Pearl, 2009; Bareinboim et al., 2022): (L1) observational queries with the form \\(P(Y|X)\\) are statistical formulas that describe the system in its natural behaviour; (L2) interventional queries with the form \\(P(Y|do(X))\\) characterize the system under external manipulations; and, (L3), counterfactual queries study the system under hypothetical interventions that never took place. These layers are rigid, as queries on a higher layer require more information to be answered and cannot automatically be reduced to a lower layer. In order to assess the consistency of abstractions, we will focus on the first two levels of this hierarchy. We will say that a causal query on the interventional layer L2 is identifiable if it can be reduced to statistical quantities belonging to the observational layer L\u2081. Do-calculus is a complete theory relying only on the graphical structure G of M to decide whether a causal query is identifiable."}, {"title": "2.2. Graphical Abstraction", "content": "Cluster DAGs. The simplest way to relate two SCMs is through their underlying DAGs. CDAGS were originally introduced as graphical modelling tools allowing us to represent a system where information about the exact causal relationships among certain sets of variables were unknown (Anand et al., 2023). Nonetheless, CDAGs may also be easily used to express the process of reduc-tion of information associated with abstraction."}, {"title": "Definition 3 (Cluster DAG)", "content": "Let \\(G = (V, E)\\) be a DAG and \\(\\varphi : V \\rightarrow C\\) be a surjective function where \\(C = {C_1,...,C_k}\\). The function \\(\\varphi\\) induces a partition of V. \\(G_c = (C,E_c)\\) is a cluster DAG (CDAG) of G if and only if the set of edges \\(E_c\\) abides by the following rules:\n1. An edge \\(C_i \\rightarrow C_j\\) is in \\(E_c\\) if there exists a \\(V_i \\rightarrow V_j\\) in E such that \\(V_i \\in C_i\\), \\(V_j \\in C_j\\), \\(C_i \\neq C_j\\).\n2. A bidirected (confounding) edge \\(C_i \\leftrightarrow C_j\\) is in \\(E_c\\) if there exists a \\(V_i \\leftrightarrow V_j\\) in E such that \\(V_i \\in C_i\\), \\(V_j \\in C_j\\), \\(C_i \\neq C_j\\).\nFurther, it is required that the graph \\(G_c\\) induced by \\(\\varphi\\) is acyclic.\nGiven an SCM M with underlying DAG \\(G = (V, E)\\), we can see the CDAG \\(G_c = (C, E_c)\\) as the structure of a graphically abstracted model M'. Importantly, a CDAG GC does not identify a single model M', but the collection of SCMs sharing the same structure."}, {"title": "Graphical Consistency", "content": "Although the building procedure of a CDAG guarantees the preserva-tion of basic relations of cause and effect, we still want to establish whether a causal query can be consistently identified both in the original SCM M and in a model M' with the structure given"}, {"title": "Definition 4 (Graphical Consistency)", "content": "Let G be a DAG underlying M and \\(G_c\\) the CDAG under-lying M'. Let us define \\(G(\\varphi^{-1})\\) be the set of all the constraints obtained by taking each constraint in \\(G(G_c)\\) and substituting each cluster \\(C_i\\) with its pre-image \\(\\varphi^{-1}(C_i)\\). The two models M and M' are graphically consistent if \\(G(\\varphi^{-1}) \\subseteq G(G)\\).\nGraphical consistency means that all the equalities and inequalities expressed in the CDAG hold in the original SCM among the clustered variables; thus, identifiable causal queries on the CDAG are identifiable also on the original SCM. However, the converse does not necessarily hold: in the original SCM there may be additional equalities and inequalities among the variables within a cluster that are not expressible in the CDAG.\nGraphical consistency may be restricted only to constraints pertaining to a chosen layer of the causal hierarchy. Considering again the structure \\(X \\rightarrow Y\\), the constraint \\(P(X | Y) \\neq P(X)\\) belongs to L1, while \\(P(Y | X) = P(Y | do(X))\\) belongs to L2. We denote \\(G^{L_i}(G)\\) the set of all the constraints at layer \\(L_i\\) implied by the DAG G. We can express restricted forms of consistency as:"}, {"title": "Definition 5 ((Graphical) \\(L_i\\)-Consistency)", "content": "Let G be a DAG underlying M and \\(G_c\\) the CDAG underlying M'. Let us define \\(G^{L_i}(\\varphi^{-1})\\) be the set of all the constraints obtained by taking each constraint in \\(G^{L_i}(G_C)\\) and substituting each cluster \\(C_i\\) with its pre-image \\(\\varphi^{-1}(C_i)\\). The two mod-els M and M' are graphically consistent if \\(G^{L_i}(\\varphi^{-1}) \\subseteq G^{L_i}(G)\\).\nBy construction, a low-level model M and a high-level model M' with an underlying CDAG are always \\(L_2\\)-consistent; therefore, for a constraint \\(P_{M'}(Y|X) = P_{M'}(Y|do(X))\\) in the high-level model, the constraint \\(P_M(\\varphi^{-1}(Y)|\\varphi^{-1}(X)) = P_M(\\varphi^{-1}(Y)|do(\\varphi^{-1}(X)))\\) holds in the low-level model. In general, however, equalities across models, such as \\(P_{M'}(Y|X) = P_M(\\varphi^{-1}(Y)|do(\\varphi^{-1}(X)))\\), do not hold; however, given a CDAG, Anand et al. (2023) prove the existence of a high-level SCM M' with CDAG structure equal such that equalities across models hold (Theorem 7) and evaluations of do-calculus formulas on M' are equivalent to the evaluations on pre-images of the clusters in M (Theorem 3)."}, {"title": "2.3. Functional Abstraction", "content": "\\(\\alpha\\)-Abstraction. Whereas a CDAG captures the graphical aspect of an abstraction, a functional abstraction is meant to express an abstraction in terms of a mapping between variables and values (see App. A.1 for the original definition with finite graphical models)."}, {"title": "Definition 6 (\\(\\alpha\\)-abstraction)", "content": "Given two SCMs \\(M : \\langle V_M,U_M, F_M, P_M(U_M)\\rangle\\) and \\(M' : \\langle V_{M'}, U_{M'}, F_{M'}, P_{M'}(U_{M'})\\rangle\\), an abstraction \\(\\alpha : M \\rightarrow M'\\) is a 3-tuple \\((R,\\varphi, \\alpha_{v})\\) where:\n1. \\(R \\subseteq V_M\\) is a subset of relevant variables in M."}, {"title": "2.", "content": "\\(\\varphi : R \\rightarrow V_{M'}\\) is a surjective map from the relevant variables to the variables in M'.\n3. \\(\\alpha_{v} : R(\\varphi^{-1}(V')) \\rightarrow R(V')\\), for each \\(V' \\in V_{M'}\\), is a surjective function from the range of the pre-image \\(\\varphi^{-1}(V') \\subseteq V_M\\) in M to the range of V' in M'."}, {"title": "Functional consistency", "content": "Differently from the constructive definition of a CDAG, the declarative definition of an a-abstraction does not implicitly preserve relations of cause and effect. A require-ment of consistency over distributions is instead expressed in terms of commutativity of abstractions and \\(L_i\\) operations, such as conditioning (L1) or intervening (L2); we use the shorthand \\(P(Y|L_i(X))\\) for \\(P(Y|X)\\) if \\(i = 1\\) or \\(P(Y|do(X))\\) if \\(i = 2\\)."}, {"title": "Definition 7 ((Functional) \\(L_i\\)-Consistency)", "content": "Let \\(\\alpha : M \\rightarrow M'\\) be an abstraction. The abstraction \\(\\alpha\\) is \\(L_i\\)-consistent if, for all \\(X, Y \\subseteq V_{M'}\\), the following diagram commutes:\n\nthat is:\n\\[P_{M'}(Y|\\alpha_X[L_i(\\varphi^{-1}(X))]) = \\alpha_Y[P_M(\\varphi^{-1}(Y) | L_i(\\varphi^{-1}(X)))].\\]\nThus, L2-consistency means that the result of intervening and then abstracting must be identical to that of abstracting and then intervening (Rischel, 2020). In practical applications, however, we have to deal with noisy data and the need to drop information. As a result, it may be necessary to relax the strict requirement of commutativity and introduce an error measure that quantifies how different are the distributions on the two sides of Eq.1:"}, {"title": "Definition 8 (\\(L_i\\)-Abstraction error)", "content": "Given an abstraction \\(\\alpha : M \\rightarrow M'\\) and a distance or diver-gence \\(D(p, q)\\) between distributions p and q, the \\(L_i\\)-abstraction error is computed as:\n\\[\\epsilon_{L_i}(\\alpha) = \\max_{X,Y\\subseteq V_{M'}} D(P_{M'}(Y|\\alpha_X[L_i(\\varphi^{-1}(X))]), \\alpha_Y[P_M(\\varphi^{-1}(Y) | L_i(\\varphi^{-1}(X)))]).\\]\nNotice how the abstraction error is a worst-case measure of inconsistency: considering all pos-sible operations in the abstracted model, it returns the error corresponding to the pair \\(X, Y\\subseteq V_{M'}\\) that maximizes the discrepancy D. It is immediate to redefine functional \\(L_i\\)-consistency as zero abstraction error \\(\\epsilon_{L_i}(\\alpha) = 0\\)."}, {"title": "3. Aligning Graphical and Functional Consistency", "content": "In order to relate graphical and functional abstractions, we need first of all to align the notions of graphical and functional consistency. Both \\(L_i\\)-consistencies share the following implication:\nLemma 9 \\(L_2\\)-consistency implies \\(L_1\\)-consistency. [Proof in App. B.1.]"}, {"title": "Proposition 10", "content": "A functional \\(L_2\\)-consistent abstraction \\(\\alpha: M \\rightar"}]}