{"title": "Analysis of Higher-Order Ising Hamiltonians", "authors": ["Yunuo Cen", "Zhiwei Zhang", "Zixuan Wang", "Yimin Wang", "Xuanyao Fong"], "abstract": "It is challenging to scale Ising machines for\nindustrial-level problems due to algorithm or hardware limita-\ntions. Although higher-order Ising models provide a more com-\npact encoding, they are, however, hard to physically implement.\nThis work proposes a theoretical framework of a higher-order\nIsing simulator, IsingSim. The Ising spins and gradients in\nIsingSim are decoupled and self-customizable. We significantly\naccelerate the simulation speed via a bidirectional approach for\ndifferentiating the hyperedge functions. Our proof-of-concept\nimplementation verifies the theoretical framework by simulating\nthe Ising spins with exact and approximate gradients. Experiment\nresults show that our novel framework can be a useful tool for\nproviding design guidelines for higher-order Ising machines.", "sections": [{"title": "I. INTRODUCTION", "content": "Constraint satisfaction problems (CSP) are fundamental in\nmathematics, physics, and computer science. The Boolean\nsatisfiability (SAT) problem is a paradigmatic class of CSP,\nwhere each variable takes values from the binary set {True,\nFalse}. Solving SAT efficiently is of utmost significance\nin computer science, both from a theoretical and a practical\nperspective [1]. Numerous problems in various domains are\nencoded and tackled by SAT solving, e.g., information the-\nory [2], VLSI design [3], and quantum computing [4].\nA variety of SAT problems can be formulated as Ising\nmodels [5]. As the classical counterpart of quantum computers,\nIsing machines aim to find the minima of Hamiltonian effi-\nciently [6]. Most Ising machines can be categorized into two\ntypes: discrete or continuous. A discrete Ising spin can only be\nspin-up or -down. Discrete Ising machines are mostly based\non simulated annealing, which selects and toggles an spin by\nheuristics [7]\u2013[9]. A continuous Ising spin is represented by a\ncontinuous variable, e.g., the phases of oscillators. Continuous\nIsing machines are mostly based on simulated bifurcation,\nwhich relaxes the Hamiltonian function to be continuous, with\nthe global minima encodes the original solutions [10]\u2013[12].\nEncoding combinatorial problems into Ising models often\nnecessitates the use of auxiliary variables to capture the\noriginal problem's logic [5]. The encoding often increases the\nhardness, as it leads to a higher dimensionality.\nTo alleviate the dimensionality problem, the higher-order\nIsing model is proposed for compact encoding [13], [14].\nDiscrete Ising machines mostly toggle a spin when the Hamil-\ntonian function decreases, which works well for conventional\nIsing models where the edges are only coupling two spins.\nFor higher-order Ising models, however, toggling a spin might\nnot change the value of the Hamiltonian function. Consider\nthe cardinality constraint in Example 1 and the Ising spins are\nall spin-down, where toggling any spin does not satisfy the\nconstraint. On the contrary, continuous Ising machines can\nmake progress as long as the continuous function decreases.\nNevertheless, implementing continuous higher-order Ising\nmachines is challenging, this is because 1) every hyperedge\nrepresents a many-body interaction of multiple spins, where\nthe mainstream Ising machines lack of efficient implementa-\ntion. 2) higher-order Ising model has not been well studied.\nPrevious higher-order Ising machines focus on conjunctive\nnormal form (CNF) SAT solving [13], [14] while failing to\ngeneralize to other Boolean constraints. Hence, we propose a\nhigher-order Ising simulator, referred to as IsingSim, as in\nFig. 1, to study the behavior of higher-order Ising models."}, {"title": "II. THEORETICAL FRAMEWORK", "content": "Given an Ising model, every Ising spin represents a binary\nvariable, and every edge maps two Ising spins {-1,1}2 to a\nbinary value {\u22121,1}. The Hamiltonian function is the sum\nof the edge function. The Ising model natively encodes Max-\n2-XOR problems, i.e., -1 and 1 denote Boolean true and\nfalse. We define a higher-order Ising model G(V, E) to\ngeneralize the Ising model for more general combinatorial\noptimization, e.g., hybrid SAT problem."}, {"title": "A. Higher-Order Ising model", "content": "Definition 1 (Higher-Order Ising Model and Hybrid SAT).\nLet x = (x1,...,xn) be a sequence of n Boolean variables. A\nhybrid SAT formula is a conjunction of hybrid constraints, i.e.,\nF = \u2227c\u2208c. Every hyperedge e \u2208 E has a Boolean function\nfe encoding a hybrid Boolean constraint c, and is mapping\nfrom {\u22121,1}|el to {\u22121,1}. Then the Hamiltonian function is\n$H(x) = \\sum_{e\\in E} W_e f_e({x_l : \\forall l \\in e}),$ \nwhere we is the weight of the hyperedge e and we > 0.\nLemma 1 (Reduction). The Boolean formula F = \u2227c\u2208c cis\nsatisfiable if and only if\n$min_{\\alpha\\in{-1,1}^n} H(\\alpha) = \\sum_{e\\in E} W_e$"}, {"title": "B. Walsh-Fourier Expansion", "content": "Fourier expansion (FE) is a multilinear polynomial repre-\nsentation of a Boolean hyperedge function fe, such that the\npolynomial agrees with the Boolean function on all Boolean\nassignments [15].\nTheorem 1 (Walsh-Fourier Expansion [15]). Given a function\nfe : {\u00b11}lel \u2192 {\u22121,1}, there is a unique way of expressing\nfe as a multilinear polynomial, called the FE, with at most\n2|e| terms in S according to:\n$f_e(x) = \\sum_{S\\subset[n]} (\\hat{f_e}(S)\\cdot \\prod_{i\\in S} x_i)$ \nwhere fe(S) \u2208 R2lel is called Walsh-Fourier coefficient, given\nS, and computed as:\n$\\hat{f_e}(S) = \\frac{1}{2^{|e|}}\\sum_{x\\in{\\pm 1}^{|e|}} (f(x) \\cdot \\prod_{i\\in S} x_i)$ \nThe following example shows that the cardinality constraint\nin Example 1 can be transformed by FE."}, {"title": "C. Ground States of Hamiltonian Functions", "content": "Via FE, the Ising Hamiltonian function can be transformed\ninto a multilinear polynomial. Different Ising machine hard-\nware relaxes the discrete domain {\u22121,1}", "1,1]": "nLemma 1 leads to the following theorem.\nTheorem 2 (Type I Relaxation [1], [16]). The Boolean for-\nmula F = Ac\u2208C c is satisfiable if and only if\n$min_{\\alpha\\in[-1,1]^n} H(\\alpha) = - \\sum_{e\\in E} W_e$\nProof. Since the Laplacian \u2206H(a) is 0, the optima of H(a)\nare on the boundary by the maximum principle [17].\nThe above theorem can be generalized as follows.\nCorollary 1 (Type II Relaxation). The Boolean formula F =\nAcecc is satisfiable if and only if\n$min_{\\alpha\\in[-\\sqrt{p},\\sqrt{p}]^n} H(\\alpha) + \\sum_{i=1}^n (\\alpha_i^2 - 2p \\alpha)^2 = - \\sum_{e\\in E} W_e,$ \nwhere the second term is called intrinsic locking in degenerate\noptical parametric oscillator (DOPO), and p > 0 [10].\nProof. The minima of (a \u2013 2a) is on {\u00b1\u221ap}. A function\nretains the minima when it is a linear combination of the\nfunctions with the same minima.\nCorollary 2 (Type III Relaxation). The Boolean formula F =\nAcecc is satisfiable if and only if\n$min_{\\alpha\\in R^n} H(sin(\\alpha)) + \\sum_{i=1}^n (cos(2\\alpha_i)) = - \\sum_{e\\in E} W_e$\nwhere second term is called injection locking in oscillator-\nbased Ising machine (OIM) [11]."}, {"title": "D. Scalable Evaluation", "content": "Definition 2 (Convolution). The linear convolution of g \u2208 Rn\nand h\u2208 Rm is a sequence (g * h) \u2208 Rn+m\u22121. Each entry in\n(g* h) is defined as:\n$(g * h)_i = \\sum_{j=0}^i g_{i-j}h_j$\nFrom Example 2 we can observe that, the coefficients of the\nFE depend only on the order of the terms. Hence Theorem 1\ncan be simplified to the following corollary using convolution.\nCorollary 3 (Symmetric). Given a symmetric Boolean con-\nstraint, by leveraging the symmetric property, the FE can be\nreduced to |e| +1 terms according to:\n$f_e(a) = \\sum_{i\\in N_{<|e|}} (\\hat{f_e}(i) \\otimes (\\otimes_{j\\in e} [a_j, 1])$ \nwhere denotes the convolution of |e| sequences. fe(i) \u2208\nR|e|+1_is computed by Eq. (2) using any S such that |S| = i.\nThe above corollary implies that the complexity of evaluat-\ning a symmetric FE can be reduced from O(2||) to O(|e|2)\nusing convolution. Without loss of generality, it can be applied\nto different types of higher-order Ising machines as mentioned\nin Theorem 2, Corollary 1 and 2."}, {"title": "E. Gradient Computation", "content": "Continuous optimizers often rely on gradient descent to\nfind the minima of a non-convex but smooth function. With\nthe theoretic framework established, IsingSim uses both\nexplicit gradient and estimated gradient to solve different\nHamiltonian functions.\n1) Exact Gradient: Computing the gradient requires com-\nputing the partial derivatives on all dimensions. The following\ncorollary implies that computing partial derivatives on one\ndimension is almost as expensive as the evaluation in Corol-\nlary 3.\nCorollary 4. The partial derivative of fe w.r.t xj is:\n$\\frac{d f_e(a)}{\\partial x_j} = \\sum_{i\\in N_{<|e|-1}} (\\hat{f_e}(i) \\otimes (\\otimes_{k \\in e \\setminus e_j} [a_k, 1])$ \nInstead, IsingSim uses a more efficient way for com-\nputing the gradient, i.e., cumulative convolution. When run-\nning convolution on multiple R2 sequences sequentially,\nIsingSim keeps track of the intermediate convolution result,\nwhich is called CCseq. IsingSim also runs another cumula-\ntive convolution with reverse order, which the result is called\nCCrev. Specifically CCseq[0] and CCrev[0] is \u00d8. CCseq [|e|] and\nCCrev [|e|] is the final convolution result. With the CC's, the\ngradient can be obtained from the following equation.\n$\\frac{d f_e(a)}{\\partial a_{e_j}} = \\sum_{i\\in N_{<|e|-1}} (\\hat{f_e}(i) \\cdot (CC_{seq}[j - 1] * CC_{rev}[|e| - 1])_i)$ \nHence, except for CCseq and CCrev, the partial derivative\non each dimension only requires one additional convolution,\nensuring the performance of our simulator.\n2) Estimated Gradient: IsingSim integrates gradient es-\ntimators. A common approach is the two-point estimation.\n$\\frac{\\partial H}{\\partial a_i} (a) = \\frac{H(a + \\delta i) - H(a)}{2 \\delta},$\nwhere i is a basis vector.\n3) Approximate Gradient of the Moreau Envelope: As\nH(a) is often non-convex, IsingSim integrates an estimator\nfor the approximate gradient of the Moreau envelope.\nProposition 1 (Gradient Estimation [18]). The Moreau en-\nvelop of the Hamiltonian function is\n$u_t(a) = min_{b \\in R^n} H(b) + \\frac{1}{2t} ||b - a||^2$\nGiven \u03b1, \u03b4 > 0, the gradient of ut is estimated by\n$\\nabla u_{t, \\alpha, \\delta} (a) = \\frac{1}{t} (\\frac{E_{b\\sim N(a,t)} [b \\cdot exp(-H(b)/\\delta)]}{E_{b\\sim N(a,t)} [exp(-H(b)/\\delta)]} - a)$\nRemark 2. The practical implementation is to sample multiple\npoints from N(a,) and apply the softmax on the function\nvalue to obtain the weight of each sample point. The weighted\ncombination of sample points forms the estimated proximal."}, {"title": "III. IMPLEMENTATIONS AND EVALUATIONS", "content": "In this section, we design experiments to answer the fol-\nlowing research questions.\nRQ1. By following the \u2207H, \u2207H, and \u2207u, do Ising spins\nconverge to saddle point, local minima, or global minima?\nRQ2. How compact are higher-order Ising models as com-\npared to traditional Ising models?\nRQ3. In higher-order Ising models encoded by practical\nproblems, which Ising spin can achieve the best performance?\nWe implemented IsingSim using ADAM as the opti-\nmizer [19] with default parameter (lr = 0.05, \u03b2\u2081 = 0.9,\nB2 = 0.999) to implement \u2207\u0100, \u2207\u0100, and \u2207u unless specifi-\ncally stated. Experiments are conducted on a cluster node with\ndual AMD EPYC 9654 CPUs and an NVIDIA H100 GPU."}, {"title": "A. Ising Spin Trajectories", "content": "For RQ1, we test different Ising spins and gradients on the\nHamiltonian functions with a 2-XOR constraint. The initial\npoint is chosen so that, by following the gradient, the Ising\nspins will converge to a saddle point or a local minimum\nRQ1. The Fourier expansion of a 2-XOR constraint is\nf = x1x2. The result is shown in Fig. 2. Given a simple\nHamiltonian function, \u2207\u0100 and \u2207\u0100 do not differ too much.\nAs mentioned in Remark 1, all critical points in the type\nI Hamiltonian are saddle points. It can be easily verified\nthat (0,0) is a saddle point in Fig. 2 a. If the initial point\n(11,0, 12,0) such that 11,0 = 12,0, then following \u2207\u0100 or \u2207\u0100\nwill always converge to the saddle point. From Fig. 2 b we can\nobserve that, type II Ising spins at the same initial point will"}, {"title": "B. Solving Parity Learning with Error Problems", "content": "The parity learning problem is to learn an unknown parity\nfunction given input-output samples. When the output is noisy,\ni.e., at most half of the output is inverted, whether the problem\nis in P remains an open question [20], and is widely used in\ncryptography [21]. The noisy version is called parity learning\nwith error (PLE) problem. Technically, PLE aims to find an\nassignment that can violate at most em out of m XOR\nconstraints. For each n \u2208 {8, 16, 32, 64}, i.e., the number of\nparity bits, we choose e = 1/2 and m = 2n to generate 100\ninstances according to [22] for RQ2 and RQ3.\nRQ2. The PLE problem can be encoded into XOR constraints\nand 1 cardinality constraint [22], e.g., the hybrid SAT formula\nin Fig. 1 encodes 4 parity codes and allowing 1 fault. Each\nhyperedge in higher-order Ising models directly encodes a\nBoolean constraint. From Table I we can observe that, the size\nof higher-order Ising models in Definition 1 scales linearly.\nHowever, previous higher-order Ising machines only accept\nBoolean constraints that the FE is in the form of multiplication,\ne.g., CNF [13], XOR [14]. We use Modulo Totalizer to\nencode the cardinality constraint into CNF [23]. If higher-\norder Ising models encodes CNF-XOR instead, the size scales\npolynomially. We encode second-order Ising models as in\nExample 1 [5]. When n = 64, V2 is 12.33\u00d7 larger than\nVh, and E2 is 874.97\u00d7 larger than |Eh."}, {"title": "IV. CONCLUSION", "content": "This work proposes IsingSim, a customizable framework\nfor analyzing the convergence of higher-order Ising Hamilto-\nnian. Corollary 3 and 4 ensure the scalability for higher-order\nIsing machines. Three types of Ising spins are studied in the\nexperiments. Results on PLE problems show that the perfor-\nmance of using Type I Ising spins is higher than II or III. The\ninsights of the above observation are provided from the angle\nof weak convexity. Additionally, we show that the approximate\ngradient of the Moreau envelope \u2207u can direct the Ising spins\nto global minima, and however, is less practical on higher\ndimension problems. The encouraging results imply that \u2207H\nand \u2207H can be candidate methods for implementing higher-\norder Ising machines. They also highlight that IsingSim can\nbe a useful tool for exploring new designs."}]}