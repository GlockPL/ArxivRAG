{"title": "Urban Region Embeddings from Service-Specific Mobile Traffic Data", "authors": ["Giulio Loddi", "Chiara Pugliese", "Francesco Lettich", "Fabio Pinelli", "Chiara Renso"], "abstract": "With the advent of advanced 4G/5G mobile networks, mobile phone data collected by operators now includes detailed, service-specific traffic information with high spatio-temporal resolution. In this paper, we leverage this type of data to explore its potential for generating high-quality representations of urban regions. To achieve this, we present a methodology for creating urban region embeddings from service-specific mobile traffic data, employing a temporal convolutional network-based autoencoder, transformers, and learnable weighted sum models to capture key urban features. In the extensive experimental evaluation conducted using a real-world dataset, we demonstrate that the embeddings generated by our methodology effectively capture urban characteristics. Specifically, our embeddings are compared against those of a state-of-the-art competitor across two downstream tasks. Additionally, through clustering techniques, we investigate how well the embeddings produced by our methodology capture the temporal dynamics and characteristics of the underlying urban regions. Overall, this work highlights the potential of service-specific mobile traffic data for urban research and emphasizes the importance of making such data accessible to support public innovation.", "sections": [{"title": "I. INTRODUCTION", "content": "Mobile phone activity data is a well-established and widely explored type of mobility data used in various applications, including mobility, health, socio-economic, and demographic studies. In the past years, mobile phone data was typically studied in the form of Call Detail Records (CDRs), which capture users' connections to cell towers during calls or messaging activities. However, this type of data is often sparse and irregular, limiting its potential for broader and more scalable applications.\nWith the rise of 4G/5G cellular networks, mobile phone usage has shifted towards extensive use of data services, such as mobile applications, which generate massive volumes of data traffic. The information related to the data traffic volume generated by these services can offer rich spatio-temporal details and insights into the characteristics of the underlying urban regions. To this end, in this work, we consider the NetMob 2023 dataset [1], which provides detailed data on mobile traffic volume across multiple data services. Orange, the mobile operator providing the dataset, recorded upload and download traffic for 68 different mobile applications across 20 major French cities. More specifically, we focus on studying this type of service-specific mobile traffic data in the context of urban region representation.\nUrban region representation is a broad research field encompassing geography, urban planning, architecture, social sciences, and cultural studies. It plays a key role in smart city development and aims to represent the mobility and dynamics of populations. With the increasing availability of different types of data collection devices monitoring urban spaces, there is growing interest in using new and dynamic data sources to improve urban region representation. Urban region representation is generally studied within the broader field of urban computing, a discipline that integrates computing, data analysis, and urban planning to address complex problems in urban environments [2]. Different task-specific methods have been developed in the urban representation field, such as for predicting economic growth [3] or forecasting air quality [4]. Urban environments are inherently complex, characterized by multiple, interacting dynamics. To address this complexity, specially tailored methods and datasets are often required. Mobile phone data offers extensive and uniform coverage across urban areas, thus potentially addressing some chal-lenges associated with multi-modal data.\nGoing beyond such ad-hoc methods for specific application tasks, several recent research efforts have focused on urban region representation learning. This approach involves using deep learning techniques to create task-independent embeddings of urban regions [5], [6]. Embeddings are low-dimensional vectors that capture the salient features of urban regions. One advantage of embeddings is their versatility: they can be used as input for models employed in downstream tasks to predict some characteristics of urban regions, e.g., population density, land use, and demographic indicators. Traditionally, studies in this domain have generated urban region embeddings using data sources commonly considered in the literature, such as Points of Interest (POIs), land use, and satellite imagery.\nDifferent from the existing literature, in this work, we aim to exploit service-specific mobile traffic volume data to capture and study the characteristics of urban regions. Furthermore, we intend to take advantage of the characteristics of the NetMob 2023 dataset to conduct temporal analyses that are not possible with static datasets based on, e.g., POIs or land use data. Indeed, we argue that service-specific traffic volume data is very valuable for generating urban areas representations because it reflects the widespread use of mobile devices, generating continuous, fine-grained spatio-temporal data. Different services represent various human activities, e.g., commuting, socializing, and entertainment, allowing for dynamic insights into urban behavior. Such data can also reveal socio-economic patterns, as usage intensity and service types vary across different regions. Moreover, unlike static datasets, mobile traffic volume data continuously changes, capturing the evolving dynamics of urban regions.\nWe pause one moment to make an important observation: despite the availability of aggregated service traffic data, as well as the spatio-temporal capillarity with which it is gathered across urban regions, such data is often held by private companies, hence limiting its availability for public research and innovation (such as in urban planning). Demonstrating the effectiveness of this data in producing high-quality urban representations could encourage these companies to share their data with researchers for the development of novel methods and with stakeholders for business or public benefit.\nIn summary, the fundamental research question we aim to answer is: \u201ccan service-specific mobile traffic volume data be used to extract representations of urban region that are effective in capturing the regions' salient features?\"\nTo answer this question, we first formally introduce some fundamental notions and then the problem we want to address (Section III). Subsequently, we introduce the methodology we propose to tackle the problem, i.e., generate embeddings of urban regions from service-specific mobile traffic volume data (Section IV). Finally, in the experimental evaluation (Section V), we first apply our methodology to the NetMob 2023 dataset, thus generating urban region embeddings for selected cities, and then analyze these embeddings from multiple points of view.\nSpecifically, we first show that service-specific mobile traffic data can be effectively used to generate urban region embeddings, outperforming those derived from more traditional data sources. We evaluate our findings through two supervised tasks and one unsupervised task, comparing them with RegionDCL [5], a state-of-the-art method. Notably, the evaluation of the unsupervised task underscores the ability of our methodology to generate embeddings that capture rich urban information. Finally, the qualitative analysis shows that the embeddings generated by our methodology capture the temporal dynamics of urban regions, thus providing a basis for analyzing changes over time for instance, differences in transportation needs across various intervals, or insights into traffic patterns during weekdays, weekends, and holidays."}, {"title": "II. RELATED WORK", "content": "The use of mobile phone data for urban analysis has been extensively studied over the past two decades [7]-[9]. However, the use of service-specific mobile traffic data is relatively new, primarily due to recent advancements in 4G/5G technology and the limited availability of open datasets. The release of the NetMob 2023 dataset, though restricted to challenge participants [1], has encouraged researchers to explore the analysis of such data and its potential applications [10]. To the best of our knowledge, neither the NetMob 2023 dataset nor similar datasets on service-specific mobile traffic have been applied to urban region representation or related downstream tasks.\nFrom the point of view of urban representation, several studies have explored the generation of unsupervised repre-sentations of urban regions using contrastive learning-based approaches. For instance, [6] uses street view images and POI data to learn neighborhood embeddings. In [5], features extracted from building footprints are combined with POI data, producing representations at both the building group-level and coarser region-level aggregations to account for different urban partitions. Satellite imagery has also been used to extract urban features, either in combination with POI data [11] or with LLM-generated textual descriptions [12]. Similar approaches employ mobility flows for urban region representation [13], [14]. Other recent methods use multi-view contrastive prediction to compute region embeddings [15].\nSimilarly to our work, these approaches employ contrastive learning for region representation. However, to the best of our knowledge, no approach in the literature considers service-specific mobile traffic data for urban region embeddings and analysis. In this regard, the methodology we propose in this work provides a complementary perspective to existing state-of-the-art methods.\nFinally, a common theme in the literature is the integration and use of multi-modal data to produce high-quality urban representations. We believe that exploiting service-specific mobile traffic data offers a unique way to capture the variety of people behaviors and activities within each urban region."}, {"title": "III. PRELIMINARIES AND PROBLEM DEFINITION", "content": "In this work, we consider the service-specific mobile traffic data measured by a mobile operator across an urban area of interest at some spatio-temporal granularity. From this, our goal is to extract, discover, and analyze patterns to gain insights into the spatio-temporal dynamics and characteristics of urban regions. We begin tackling the problem by introducing the geographical unit from which the mobile operator measures the traffic volume data. This effectively materializes a tessellation over the urban area and can be seen as the source of information we employ to study it. We refer to this tessellation as the mobile traffic cell (MTC) tessellation."}, {"title": "Definition 1 (MOBILE TRAFFIC CELL TESSELLATION)", "content": "Consider a mobile operator that collects mobile traffic volume data for an urban area of interest A at a certain spatio-temporal granularity. To achieve this, the operator tessellates A into a set of cells C whose shape and size are determined by the operator. Within each cell, the operator tracks the mobile traffic volume generated by a set of services S over a specified time period. We name the cells in C as mobile traffic cells (MTCs).\nAs a concrete example, the NetMob 2023 dataset uses a grid tessellation of (100m)^2 square cells which corresponds to the MTC tessellation, with data collected at this specific spatial resolution. Therefore, the tessellation used in the dataset corresponds to the MTC tessellation defined in Definition 1. Next, we define how the mobile traffic volume for a specific service $s \\in S$ in a particular MTC $c \\in C$ is represented as a time series."}, {"title": "Definition 2 (CELLULAR TIME SERIES (CTS))", "content": "Let $T_{c,s} \\in \\mathbb{R}^k$ be the time series representing the mobile traffic volume recorded in the MTC $c \\in C$ generated by a service $s \\in S$ over $k$ timesteps. We name such time series as Cellular Time Series (CTS).\nGoing back to the previous example, in the NetMob 2023 dataset, for each MTC cell mobile traffic volume is measured for various services, including streaming services like YouTube, gaming services like Fortnite, and email services like Gmail. Accordingly, for each service $s \\in S$ and MTC $c \\in C$ pair, the dataset provides a CTS spanning 2.5 months, from March 16th, 2019 to May 31st, 2019, with a sampling frequency of 15 minutes, resulting in $k = 7392$ samples.\nIn general, MTC tessellations used by mobile phone opera-tors differ from urban area subdivisions used by most common stakeholders, e.g., urban planners, local and public transport authorities, etc. For example, an urban area can be divided into functional regions (e.g., residential, commercial, industrial), regions of historical significance (e.g., neighborhoods), or regions defined by statistical properties (e.g., IRIS cells in France, Census Block Groups in the US). Therefore, to provide meaningful information to final users from data provided by mobile phone operators, we need to introduce the notion of target tessellation."}, {"title": "Definition 3 (TARGET TESSELLATION)", "content": "Given an urban area of interest A, a target tessellation divides A into a set of non-overlapping regions $R = \\{R_1, R_2, ..., R_N\\}$."}, {"title": "Definition 4 (PROBLEM DEFINITION)", "content": "Given an urban area of interest A, discretized with a MTC tessellation C, and a set of cellular time series T, relative to the usage of a set of services S over C, and a target tessellation R, we aim to generate from T high-quality embeddings for the regions in R.\nIn the next section, we propose a methodology to tackle the problem of exploiting service-specific mobile traffic data to compute region embeddings and analyze the region characteristics and dynamics."}, {"title": "IV. METHODOLOGY", "content": "In this section, we present the methodology designed to address the problem introduced in Definition 4, Section III. Broadly speaking, the approach is structured into two main steps. In the first step, we use the multivariate aggregated MTC time series to train an autoencoder, which generates the MTC embeddings. In the second step, these MTC embeddings are used to generate urban region embeddings corresponding to the target tessellation through a cell aggregator. This is done in a fully unsupervised setting using a contrastive learning task.\nAs mentioned earlier, mobile operators typically measure the traffic volume of many services, resulting in multiple CTSs for each MTC. However, some services might not be relevant, while others can be grouped into broader categories that serve as proxies for capturing urban region features. Since our focus is on understanding urban activities rather than individual services, we apply some preprocessing operations. Specifically, we aggregate CTSs related to similar services to form multivariate time series for each MTC. For instance, for each MTC, we combine the traffic volume of YouTube, Netflix, and Prime Video into a single multivariate time series representing the \u201cstreaming\" category. Additionally, we perform temporal downsampling of the CTSs to match a desired sampling interval. If the data is already at the required interval, this step can be skipped. Downsampling is achieved by summing the values within each new time bin.\nEach step of the methodology is detailed below."}, {"title": "Step 1- Generating MTC embeddings from multivariate aggregated time series", "content": "The first step involves generating MTC embeddings from the multivariate aggregated time series computed in the first step. These embeddings are low-dimensional vector representations of the MTCs, designed to capture their most essential features from the time series data. To generate the embeddings, we first train an autoencoder, a specific type of deep learning model, on the multivariate aggregated time series. Once trained, the autoencoder is used to generate the embeddings.\nAn autoencoder is a neural network designed to learn efficient data representations by progressively compressing the input into a lower-dimensional space (also known as the bottleneck layer) and then reconstructing the original input from this compressed version. The bottleneck layer represents the embedding space, where the model attempts to capture the most important features of the data. Training an autoencoder is a form of unsupervised learning, typically framed as a reconstruction task in which the model aims to minimize the error between the original data and its reconstructed version generated from the embeddings.\nThere are various types of autoencoders for time series available in the literature. In our work, we employ the one based on temporal convolutional networks [16] (TCN-Autoencoder in Figure 1). Although we also evaluated LSTM-based and GRU-based autoencoders, the TCN-Autoencoder achieved the lowest reconstruction loss in preliminary experiments, hence making it our preferred choice. Finally, we opted for a TCN-based autoencoder over more recent state-of-the-art ones because it presents a reasonable balance between performance, utility, and complexity, in the context of the problem we are addressing."}, {"title": "Step 2 Generating region embeddings from MTC em-beddings", "content": "The second step involves generating embeddings for urban regions, defined by the target tessellation R (see also Definition 3 in Section III), from the MTC embeddings. This is achieved by using some aggregator g. The aggregator is trained on a triplet loss function. In order to compute the loss, we first need to define the notions of anchor region, positive region, and negative region. An anchor region $R_A \\in R$ is the region for which we want to compute an embedding. A positive region $R_P \\in R$ is sampled from the neighboring regions of $R_A$, while a negative region $R_N \\in R$ is sampled from non-neighboring regions. The idea is that the embedding of $R_A$ should be more similar to the embeddings of its neighboring regions (positive regions) than to those of more distant regions (negative regions). This strategy is in line with recent literature [5], [6] that follows Tobler's first law of geography [17], which states that \"everything is related to everything else, but near things are more related than distant things\u201d.\nAccordingly, for each region R, we define $W_R$ as the set of MTC embeddings associated with the MTCs intersect-ing that region. Thus, for any triplet of region embeddings $g(W_{R_A}), g(W_{R_P}), g(W_{R_N})$, the objective function to minimize is the triplet loss:\n$L(g(W_{R_A}), g(W_{R_P}), g(W_{R_N})) = \\max(\\Vert g(W_{R_A}) - g(W_{R_P}) \\Vert_2 - \\Vert g(W_{R_A}) - g(W_{R_N}) \\Vert_2 + m, 0),$ (1)\nwhere m is a margin parameter. The margin parameter is meant to ensure sufficient separation between (anchor, posi-tive) and (anchor, negative) pairs. In practice, the optimization does not stop until such pairs are at least a margin apart. In essence, the triplet loss function pushes the embeddings of geographically closer regions to be closer together in the em-bedding space while simultaneously pushing the embeddings of farther or dissimilar regions further apart.\nIn the experimental evaluation, we evaluate two different aggregators: one based on a transformer encoder, and the other based on a learnable weighted sum. More details on them are provided in Section V-B."}, {"title": "V. EXPERIMENTAL EVALUATION", "content": "To answer the research question introduced in Section I, which we also formally expressed in Definition 4, Section III, we assess the effectiveness of our methodology for generating embeddings that capture salient features of urban regions. To this end, we conduct an experimental evaluation guided by the following questions:\n\u2022 EQ1: do the urban region embeddings generated by our methodology outperform those produced by a state-of-the-art method when evaluated on selected downstream tasks?\n\u2022 EQ2: do the embeddings capture the temporal character-istics and dynamics of urban regions?\nIn the following, we provide details on the datasets used in the evaluation (Section V-A), and how the proposed methodology was practically implemented (Section V-B). Finally, Section V-C presents the experiments conducted to address EQ1, while Section V-D covers the experiments aimed at addressing EQ2."}, {"title": "A. Datasets", "content": "In our experimental evaluation, we use four datasets: service-specific mobile traffic volume data provided by the NetMob 2023 challenge [1], land use data from The Urban Atlas [18], French census data provided by the IRIS French census cells, and POI data from Openstreetmap (via Geofab-rik). Below, we describe each dataset in detail."}, {"title": "B. Application of our methodology to the NetMob 2023 dataset", "content": "In the experimental evaluation, we aim to generate urban region embeddings for selected urban areas from the NetMob 2023 dataset. To achieve this, we instantiate the methodology proposed in Section IV.\nRecall that we consider each (100m)^2 NetMob cell as a mobile traffic cell (MTC, Definition 1), while the time series associated with these cells correspond to the cellular time series (CTS) introduced in Definition 2. We thus begin by preprocessing the original NetMob 2023 dataset, where we reduce the size of the dataset to decrease the computational and memory requirements of the autoencoder step (i.e., step 1). More precisely, for each considered CTS in the original dataset, we first downsample, reducing the sampling rate to 1 hour. This is followed by a category-wise aggregation, where the selected services are grouped into four macro categories: Social, Work, Gaming, and Streaming. This results in a set of multivariate aggregated time series, one per MTC (NetMob cell).\nNext, in step 1, we train an autoencoder to generate MTC embeddings. The autoencoder takes a multivariate aggregated time series for each MTC as input and produces the MTC's embedding as output. Our autoencoder is based on temporal convolutional networks (TCNs) following the architecture in [16], with minor modifications to produce a 44-dimensional embedding for each MTC. The autoencoder is trained using mean squared error loss, with a learning rate of $10^{-3}$ over 100 epochs.\nFinally, in step 2, we aggregate the MTC embeddings into urban region embeddings: this requires to choose a target tessellation, as per Definition 3 and the problem definition introduced in Definition 4. The target tessellation we consider is based on the French IRIS system, as described in Section V-A, meaning that each region corresponds to an IRIS cell. If a region contains more than 300 MTCs, we randomly sample 300 of them to reduce the aggregator's computational cost. We report that in Paris, only 29 out of 2841 IRIS intersect more than 300 NetMob MTCs, hence making the loss of information negligible. For each region, we build a feature matrix X of size 300 \u00d7 44, where each row contains an MTC embedding from step 1. If a region contains fewer than 300 MTCs, the remaining rows are padded with zeros. We also associate a mask matrix to indicate which values are padded. We report that in step 2, we use and compare two different aggregators:\n\u2022 Learnable weighted sum: defined as $X' = linear2(X \\cdot \\sigma(linear1(X)))$, where linear1, linear2 are two linear layers and \u03c3 is the sigmoid. Produces embeddings of size 64.\n\u2022 Transformer encoder with average pooling: we concatenate two encoder layers from the vanilla transformer [19], each with a single attention head, followed by an average pooling layer. Produces embeddings of size 64.\nBoth aggregation methods are trained using the triplet loss defined in Section IV, with the Adam optimizer, a learning rate of $10^{-4}$, and 60 training epochs. The contrastive learning relies on the concepts of anchor, positive, and negative examples. The degree of locality is controlled by the hops parameter, which defines how far a region can be considered a positive example. For instance, hops = 1 means only regions directly adjacent to the anchor are positive, while hops = 2 includes regions adjacent to both the anchor and its neighbors, and so on. The code implementing our methodology and experimental evaluation is written in Python and has been made available in a GitHub repository."}, {"title": "C. Addressing EQ1: evaluating the quality of embeddings", "content": "To address EQ1, we evaluate the region embeddings gen-erated by our methodology using two supervised downstream tasks considered in many prior works in the literature: land use inference and population density estimation. We compare our methodology, instantiated as detailed in Section V-B, with RegionDCL [5], a recent state-of-the-art approach that generates urban region embeddings from points of interest and building data. Additionally, we present the results for the two cell aggregators used in step 2 of our methodology, considering both individual service categories and all categories combined. Furthermore, we evaluate how well our embeddings perform in an unsupervised clustering task, again compared to the state-of-the-art.\nLand use inference. The land use inference task is a label distribution learning problem. To this end, we use the region representations generated by both our methodology and Re-gionDCL to infer the proportion of land use categories within each region. For the land use inference task, we employ a 2-layer Multi-Layer Perceptron (MLP) with 512 hidden units and four output units. The evaluation metrics used are L1 distance, KL-divergence, and Cosine similarity. We split the regions randomly into 70% training, 10% validation, and 20% test sets. The MLP is optimized using KL-divergence loss for 100 epochs, with early stopping applied using a patience of 10 epochs. Each experiment is repeated 30 times, and the average values and standard deviations are reported in Table I.\nAs shown in Table I, our methodology, with both cell ag-gregators, outperforms RegionDCL. Although the transformer aggregator performs slightly better than the learnable weighted sum, the performance of both approaches is comparable. The best configuration for the transformer aggregator is with 3 hops, while for the learnable weighted sum, the best results occur with 2 hops. Increasing the number of hops (up to 5) decreases performance, which aligns with Tobler's first law of geography [17]. Additionally, the results show that performance improves when considering all service categories together rather than individual categories. The Gaming service produces the lowest performance, likely due to its lower traffic volume compared to categories like Social, which may provide more distinctive information for this downstream task.\nPopulation density estimation. The population density es-timation task is formulated as a regression problem. Similar to the land use inference task, we compare the performance of our embeddings with those generated by RegionDCL. The evaluation metrics used are mean absolute error (MAE), root mean squared error (RMSE), and the coefficient of determination (R2). For this task, we randomly partition the datasets into 80% training and 20% test sets. We train a random forest regressor [20] on 30 different data splits, reporting the average and standard deviation of the results in Table II.\nAs shown in Table II, our methodology, with both cell aggregators, again outperforms RegionDCL. While the learn-able weighted sum-based aggregator slightly outperforms the transformer for this task, the performance of both remains comparable. The optimal configuration for both aggregators occurs with 2 hops. Similarly to the previous downstream task, we observe that aggregating all service categories leads to better performance. Notably, in this task, the Gaming category performs slightly better, and the Work category appears more informative for this task than for the land use inference task. The Social and Streaming services provide the best results, likely due to their higher traffic volumes and stronger relevance to the population density estimation task.\nClustering evaluation. Using embeddings to represent urban regions enables to measure similarities between them, thereby revealing common patterns. By applying a clustering algo-rithm, we can identify regions with comparable characteristics and, in turn, infer their functions, such as residential, business, or commercial areas, in a more data-driven manner. In this evaluation, we aim to assess how clustering urban regions based on embeddings generated from mobile traffic data compares to clustering them using traditional urban features such as POIs or land use. To this end, we employ hierarchical clustering using Ward's method with squared Euclidean dis-tance on the embeddings generated by the transformer-based MTC aggregator. We experiment with various cluster sizes k. Then, we also apply the same clustering method to the above-mentioned land use and POI data.\nTo assess the similarity between clusterings, we use the Ad-justed Mutual Information (AMI) index, which measures the similarity between two clusterings based on different features [21]. In this context, the AMI score reflects the level of agree-ment between clusterings derived from service-specific mobile traffic data and traditional urban features. This approach can be considered a downstream task applied in an unsupervised setting. Before presenting the results, we briefly go over the definition of AMI score. Let U = {U1, U2,..., Um} be a clustering of a set A. The entropy of U is defined as:\n$H(U) = - \\sum_{i=1}^{m} p(u_i) \\log(p(u_i)),$\nwhere p(ur) is the probability that a point in A belongs to cluster ui. Intuitively, the entropy represents the uncertainty in clustering U and is non-negative, reaching 0 only when U contains a single cluster. Let then V = {V1, V2,..., Vn} be a different clustering of the same set A. The mutual information between U and V is defined as:\n$I(U, V) = \\sum_{i=1}^{m} \\sum_{j=1}^{n} p(U_i, v_j) \\log \\frac{p(u_i, v_j)}{p(u_i)p(v_j)},$\nwhere p(ui, vj) is the probability of a point belonging to both ui and vj. Mutual information quantifies how much information is shared between the two clusterings. It is zero when the two clusterings are independent and maximized when U = V.\nThe adjusted mutual information index is a variation of mutual information that addresses the problem of clustering dependencies that arise by chance. It is defined as:\n$AMI(U, V) = \\frac{I(U, V) - E(I(U, V))}{\\max\\{H(U), H(V)\\} - E(I(U, V)) },$\nwhere E(I(U, V)) is the expected mutual information between two random clusterings. In traditional clustering, prob-abilities p(u) are computed as the number of elements in u divided by the size of set A. However, in the case we are considering in this work, to account for the size of each urban region we calculate p(u) as the ratio of the total area of u over the total area of A."}, {"title": "D. Addressing EQ2: evaluation of temporal dynamics", "content": "To address EQ2, we aim to demonstrate that the use of service-specific mobile traffic data allows us to capture the temporal evolution of city regions throughout the day. Indeed, we argue that this is made possible by the highly dynamic nature of the data we are considering, which can better capture the temporal dynamics of urban areas than static data sources such as POIS.\nSpecifically, we partition the time series in the NetMob 2023 dataset into three time slots based on the timestamp: night (00:00 to 07:59), morning (08:00 to 15:59), and afternoon (16:00 to 23:59), and compute embeddings for each time slot. By incorporating the four macro categories of mobile services described in Section V-A, we aim to effectively describe how regions change during the day.\nWe cluster urban regions considering the embeddings of the three time slots and full-day time series adopting the same clustering method described in Section V-C. To select the best number of clusters, we apply the Elbow method to the inertia curve, together with the study of the silhouette curve: we found out that k = 9 is the best across all the embeddings.\nAnalyzing the resulting clusters, we first observe that, for the full-day time series (see Figure 2), parks and major land-marks such as the cemeteries, Champs-\u00c9lys\u00e9es, and the Eiffel Tower consistently cluster together, indicating shared traffic dynamics likely driven by recreational and tourist activities. This grouping remains stable during the morning (dark blue cluster in Figure 3a), but during the afternoon and night (dark blue and violet cluster in Figures 3b and 3c respectively) some central locations, like the Louvre, shift to another cluster, possibly reflecting different traffic patterns during these times. Particularly, during the night, we observe that this cluster also includes regions close to the Seine river. It is worth noticing that, even if our methodology generates embeddings from service-specific mobile traffic data, it is able to cluster green areas together, similarly to what happens with embeddings produced by methods in other works that use POI data as input.\nRegarding the airports, a pattern emerges where Paris Orly often clusters together with the smaller Paris Le Bourget airport, particularly during the morning and night, while Paris Charles de Gaulle airport remains in a separate cluster (see Figures 3a and 3c). This suggests distinct activity levels, with Paris Charles de Gaulle maintaining different traffic, especially during the night when Paris Orly and Paris Le Bourget group together. In the full-day analysis, however, all airports appear in the same cluster, reflecting overall connectivity and similar usage patterns when averaged throughout the day (see Figure 2).\nFor what concerns green areas, such as forests and parks, this is particularly interesting because, even without using POIs or similar data as input to our methodology, we are still able to group regions with similar characteristics. Moreover, by observing the temporal evolution of the region embeddings, we can see how these areas change throughout the day. This might be used, for instance, to optimize public transportation by increasing service to one airport rather than another during specific time slots.\nThe Mus\u00e9e d'Orsay exhibits a unique behavior by consis-tently clustering with more suburban residential areas, rather than the neighboring zones, during the morning and afternoon. This indicates a different traffic profile from other central museums or attractions (see Figures 3a and 3b). However, in the full-day analysis shown in Figure 2, the museum shifts towards more central clusters, though still separate from major attractions like the Louvre. Also, in this case, we can take advantage of the time ranges and use this information to better understand how people behave in that area and investigate why the behavior is different in that region during the morning and afternoon.\nAnother example concerns the train stations, which show varying behavior depending on the time range. Some are grouped together, particularly at night when all stations form a central cluster, reflecting a more unified traffic pattern during lower-traffic hours (Figure 3c). In contrast, during the morning and full-day analysis, the stations are more scattered across clusters, suggesting different traffic patterns in various parts of the city (Figures 2 and 3a).\nFinally, we highlight some differences when we consider the full-day clustering and the clusterings obtained with the three time slots. The full-day clustering presents a large cluster in the northern part of the city center, suggesting a major convergence of activity in that area when considering the entire day and, consequently, less granularity in recognizing differences between regions in the city center (see light green cluster in Figure 2).\nIn conclusion, the qualitative analysis we conducted demon-strates that the use of service-specific traffic data as input data to generate urban region embeddings allows to answer question EQ2, as the embeddings seem to effectively cap-ture region temporal dynamics. This is just one example of how this data can be used to understand a city's temporal dynamics. Going back to the previous example of improving and intensifying transportation in specific regions and time slots, one could increase the granularity of these intervals for greater precision. At the same time, exploring the differences between weekdays, weekends, and holidays could provide deeper insights into traffic patterns."}, {"title": "VI. CONCLUSIONS AND FUTURE WORKS", "content": "The recent availability of service-specific mobile traffic data has opened up new opportunities for exploiting such data beyond the management of services and networking towards new applications, like urban analysis. In this paper, we introduce a novel methodology that leverages time series data from mobile service traffic to capture both static and dynamic characteristics of urban regions. Our primary research question investigates the effectiveness of service-specific mobile traffic data in representing key features of urban areas. The proposed methodology involves two main steps: first, generating cellu-lar embeddings from service-specific multivariate time series and then aggregating cells into regions using a contrastive learning approach. We tested our approach on a real-world dataset, evaluating two aspects: the quality of the resulting embeddings and their ability to capture regional dynamics. Extensive experiments demonstrate that service-specific mobile data effectively captures both the characteristics and dynamics of urban regions, highlighting its potential for a range of novel applications, emphasizing the importance of making such data accessible to support public innovation. Our future works follow different directions. First, we aim to enhance the evaluation process of embedding quality by designing specific use cases. We will explore various strategies for generating embeddings, focusing on Graph Neural Network approaches that account for the urban graph structure. Additionally, we plan to investigate transfer learning techniques to estimate traffic volumes in previously unobserved areas, leveraging the established relationship between geographical context and mobile phone usage."}]}