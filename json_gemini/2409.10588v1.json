{"title": "OPPONENT SHAPING FOR ANTIBODY DEVELOPMENT", "authors": ["Sebastian Towers", "Aleksandra Kalisz", "Philippe A. Robert", "Alicia Higueruelo", "Francesca Vianello", "Ming-Han Chloe Tsai", "Harrison Steel", "Jakob Foerster"], "abstract": "Anti-viral therapies are typically designed or evolved towards the current strains of a virus. In learning terms, this corresponds to a myopic best response, i.e., not considering the possible adaptive moves of the opponent. However, therapy-induced selective pressures act on viral antigens to drive the emergence of mutated strains, against which initial therapies have reduced efficacy. To motivate our work, we consider antibody designs that target not only the current viral strains but also the wide range of possible future variants that the virus might evolve into under the evolutionary pressure exerted by said antibodies. Building on a computational model of binding between antibodies and viral antigens (the Absolut! framework), we design and implement a genetic simulation of the viral evolutionary escape. Crucially, this allows our antibody optimisation algorithm to consider and influence the entire escape curve of the virus, i.e. to guide (or \"shape\") the viral evolution. This is inspired by opponent shaping which, in general-sum learning, accounts for the adaptation of the co-player rather than playing a myopic best response. Hence we call the optimised antibodies shapers. Within our simulations, we demonstrate that our shapers target both current and simulated future viral variants, outperforming the antibodies chosen in a myopic way. Furthermore, we show that shapers exert specific evolutionary pressure on the virus compared to myopic antibodies. Altogether, shapers modify the evolutionary trajectories of viral strains and minimise the viral escape compared to their myopic counterparts. While this is a simple model, we hope that our proposed paradigm will enable the discovery of better long-lived vaccines and antibody therapies in the future, enabled by rapid advancements in the capabilities of simulation tools.", "sections": [{"title": "1 Introduction", "content": "Designing effective therapies to fight off viral pathogens is crucial. However, traditional approaches have been largely myopic, focusing on the current variant of a virus without considering the future evolutionary pressures induced by the therapies themselves. Although this shortsighted approach may yield therapies with high initial efficacy, it fails to account for the virus's adaptive response, leaving treatments vulnerable to viral escape and the emergence of new therapy-resistant strains [1, 2, 3, 4, 5].\n\nThe COVID-19 pandemic starkly illustrated this challenge. While the rapid development of vaccines was a remarkable achievement, concerns quickly arose about their long-term efficacy against new emerging COVID variants [6, 7]. For example, the B.1.351 variant demonstrated that the vaccine loses its effectiveness against new strains [8]. This underscores the need for approaches that consider both the current and future efficacy of a designed therapy.\n\nToward this goal, we propose to design therapies that target not only current viral variants but also anticipate and target future ones using a model of evolutionary adaptation. Specifically, viruses evolve in response to the selective"}, {"title": "2 Results", "content": ""}, {"title": "2.1 Computational Implementation of Opponent Shaping for Antibody Design", "content": "To implement opponent shaping for antibody design, we develop a computational framework that models the virus- antibody interaction and optimises antibodies for long-term efficacy. Our approach comprises three main components: defining the virus-antibody game with the player's payoffs, simulating viral escape, and optimising antibody shapers."}, {"title": "2.1.1 Virus-Antibody Game", "content": "We formalise the interaction between antibodies and viruses as a two-player zero-sum game. In this game, two players \u2013 the virus and the antibody \u2013 play a game where one player's gain is the other's loss. The game is defined by the set of actions available to each player and their respective payoffs.\n\nThe players' actions are represented by their amino acid sequences. The sequences are of an antigen protein for the virus and a fragment of a hypervariable region of the heavy chain for the antibody, specifically the third complementarity- determining region (CDRH3), which is the most important part of the antibody for defining its specificity and affinity [15]."}, {"title": "2.1.2 Simulated Viral Escape via Evolution", "content": "To simulate the space of possible viral escape trajectories against a chosen antibody, we model the virus learning to play the game through an evolutionary algorithm. This approach approximates the process of viral evolution, where mutations that increase fitness (in our case, the virus's payoff $R_v$) are more likely to persist, propagate, and become an ancestor of future generations.\n\nWe simulate the process of viral escape for a specified horizon of $H$ steps, representing multiple generations of viral evolution. This is the target duration of therapy efficacy. For each independent viral trajectory, we use the initial virus strain $v$ to generate a population of $P$ virus variants through random mutations. These are point mutations in the amino acid sequence of the viral antigen and they are introduced according to a predefined mutation rate. Each variant's fitness is evaluated based on its payoff $R_v$ against the fixed antibody $a$. Importantly, this process captures the myopic nature of viral evolution: the virus optimises its fitness only with respect to the current antibody, unable to anticipate future human interventions or antibody changes. The next generation of the viruses is then created by probabilistically selecting the variants based on their fitness, with fitter variants more likely to be chosen for replication and subsequent mutation. This process repeats for $H$ generations, creating one trajectory of viral escape, see the Simulated Viral Escape via Evolution in Figure 1a and Methods section 4.2 for more details.\n\nWe use the antigen protein from the Dengue Virus as the virus for all our experiments, specifically, the structure with PDB code 2R29 [21]. We discretise this structure using the Absolut! framework to generate the docking poses, which we then use to calculate the binding strength $B$ of any antibody-virus pair using our JAX implementation. In the viral escape step, we mutate only the amino acid sequence of the dengue envelope antigen, which is composed of 97 amino acids, and do not consider other components of Dengue Virus. Importantly, while we alter the amino acid sequence, we assume the structure of the antigen does not significantly change for the calculation of binding strength."}, {"title": "2.1.3 Optimisation of Antibody Shapers", "content": "Our antibody optimisation process aims to generate antibodies that can prevent viral escape. We start with a random antibody sequence and generate a population of antibodies of size $P_a$ through mutations in the amino acid sequence. Each new antibody in this population is created by introducing a single mutation to the original sequence.\n\nWe define the antibody fitness function $F_H(a)$ as the antibody's performance over multiple potential viral escape trajectories of virus $v$:\n\n$F_H(a) = \\underset{ \\eta \\text{ escape trajectories of } v}{\\mathbb{E}} \\Bigg[ \\underset{i \\text{ H steps of escape}}{\\mathbb{E}} \\big[R_a(v', a)\\big] \\Bigg]$"}, {"title": "2.2 Antibody Shapers Minimise Viral Escape", "content": ""}, {"title": "2.2.1 Shapers vs. Myopic Antibodies", "content": "We validate the effectiveness of the antibody shapers in optimising the escape-averaged antibody fitness function $F_H(a)$ compared to myopic antibodies that only respond to the current virus $v$. The myopic antibodies optimise the fitness function $F_0(a) = R_a(v, a)$, which considers only the immediate payoff against the non-mutated virus. For our shaper antibodies, we select a long horizon of $H = 100$ to capture extended viral escape trajectories. Both shapers and myopic antibodies are optimised for $N = 30$ steps. Figure 2a presents the performance distributions of shapers and myopic antibodies under both objective functions.\n\nOur results demonstrate a clear advantage for antibody shapers in the escape-averaged objective $F_{100}(a)$. The mean of the shapers distribution significantly exceeds that of the myopic distribution, as evident from the marginal density plot in Figure 2a. Notably, none of the myopic antibodies outperforms the top 10% of shapers in this long-term objective. However, there is a trade-off between short-term and long-term optimisation. While shapers do better on the escape-averaged objective, they underperform compared to myopic antibodies in optimising the immediate payoff $R_a(v, a)$ against the initial, non-mutated virus $v$.\n\nWe next examine the influence of antibody shapers on viral escape trajectories, comparing $H = 100$ shapers with myopic antibodies, both optimised for $N = 30$ steps. Figure 2b illustrates the viral escape curves induced by both antibody types at different stages of their optimisation process. We first complete the antibody optimisation process, saving antibodies generated at steps 0, 10, 20, and 30. For each of these optimisation steps, we then simulate viral escape over $H = 100$ evolutionary steps using the corresponding saved antibodies. The presented viral escape curves are averages derived from multiple simulations.\n\nAt the outset of the antibody optimisation process (step 0) both the shapers and the myopic antibodies induce similar escape curves, an expected outcome given their initialisation from random antibody sequences. However, as we examine antibodies from later optimisation steps, we observe diverging trends. Myopic antibodies cause the viral fitness to be lower in the initial escape steps, outperforming the shapers. After about 10 escape steps, corresponding to $\\approx 10$ viral mutations, the two antibody types perform similarly. Beyond that, shapers demonstrate superior results in later escape stages, more effectively preventing viral escape.\n\nThese results show that as the antibody optimisation process progresses, shapers learn to influence viral trajectories in a way that minimises long-term viral escape, albeit at the cost of initial performance. While myopic antibodies may offer better immediate control, shapers provide more sustained effectiveness against evolving viral populations."}, {"title": "2.2.2 Antibody Shapers with Varying Horizons", "content": "Finally, we investigate the impact of varying horizons $H$ on the optimisation process of antibody shapers. We optimise myopic antibodies and shapers using horizons $H = \\{5, 10, 20, 100\\}$ for $N = 30$ steps. To evaluate these antibodies"}, {"title": "2.3 How the Antibody Shapers Prevent Viral Escape", "content": ""}, {"title": "2.3.1 Attack is the Best Defence", "content": "Our previous results demonstrate that antibody shapers, particularly those optimised with longer horizons, manage to effectively minimise viral escape. However, we hypothesise they can achieve this through two distinct strategies: robustness or shaping. A robustness strategy involves developing antibodies that are inherently resistant to a wide range of potential viral variants a \"good defence\" approach. In contrast, a shaping strategy aims to actively influence the evolutionary trajectory of the virus itself, creating evolutionary pressures that guide viral mutations in a direction more favourable to antibody binding an \"attack\" approach.\n\nTo discern which strategy our antibody shapers adopt, we investigate whether shapers optimised with different horizons exert different types of evolutionary pressure on the virus. We generate antibodies for each horizon (Myopic, $H = 5$, $H = 10$, $H = 20$, $H = 100$) and simulate viral escape against each antibody for 100 steps, resulting in viruses $V_H$. We then evaluate the antibody payoff $R_a(v_H, a_{H'})$ for each horizon antibody against the final viral variants $v_H$ induced by other antibodies $a_{H'}$. Figure 3 presents the result of this analysis.\n\nInterestingly, viruses $v_{100}$ induced by $H = 100$ shapers are consistently more exploitable by antibodies across all optimisation horizons. This suggests that $H = 100$ shapers actively shape the escape trajectories of the virus in a way that makes the resulting variants more susceptible to antibody binding in general.\n\nHowever, this shaping effect comes at a cost. The $a_{100}$ shapers show slightly lower payoffs compared to the peak performance of shorter-horizon antibodies ($a_5$ and $a_{10}$) against the viruses $v_{100}$ induced by the $H = 100$ shapers (see right most column of Figure 3). This trade-off indicates that to exert a stronger shaping influence on viral evolution, $H = 100$ shapers sacrifice some degree of immediate performance or robustness, that is their ability to perform well against a wide range of viruses. Therefore, a potential strategy could involve using a \u201cmixture\u201d of antibodies as therapy: some optimised for shaping the virus's evolutionary trajectory, and others designed for strong immediate binding."}, {"title": "2.3.2 Amino Acid Distribution in Shapers and Myopic Antibodies", "content": "To further understand the performance differences between myopic antibodies and shapers, we analyse the amino acid distributions of the antibodies. We compared myopic antibodies with shapers optimised using horizons $H = 5, 10, 20, 100$ over $N = 30$ antibody optimisation steps. Figure 4 showcases the results of our experiment.\n\nAntibodies optimised with longer horizons, especially the $H = 100$ shapers exhibit a more uniform distribution of amino acids, while those with shorter horizons show a tendency to cluster around amino acids associated with either high or low binding energies. The flatter distribution of long-horizon shapers suggests a more diverse and balanced approach to viral antigen binding. We hypothesise that this strategy helps to preserve robustness against viral mutations. By maintaining a more even distribution across energy levels, these antibodies may be less susceptible to viral escape.\n\nIn contrast, the clustering behaviour we observe in shorter-horizon antibodies indicates a more specialised strategy. By concentrating on amino acids at the extremes of the binding energy spectrum, these antibodies may achieve strong immediate binding but potentially at the cost of long-term robustness."}, {"title": "2.3.3 Influence of Antibody Shapers on Binding Poses", "content": "In the Absolut! framework [12], binding poses are defined as sets of interacting residue pairs between the antibody and the antigen. The binding energy of a pose is calculated by populating these residue locations with the amino acid sequences of both the antibody and the virus and then summing the pairwise interaction energies defined by [14]. Absolut! considers a vast number of possible poses (on the order of $10^6$) and determines the overall interaction energy as the energy of the minimum pose, refer to Methods Section 4.4 for more details. Importantly, only a small part of the antigen sequence contributes to this minimum energy pose.\n\nAs both the virus and the antibody mutate during our optimisation process, the lowest energy pose can change. To capture these dynamics, we introduced the concept of a pose matrix: a $20 \\times 20$ matrix where one dimension corresponds to the antibody amino acids and the other to the viral amino acids, both contributing to the lowest energy pose. The entries in this matrix represent the number of interactions between specific amino acid pairs.\n\nFigure 5a presents average pose matrices from multiple optimisation runs of both myopic antibodies and long-horizon shapers. We observe two key trends:\n\nAs viral escape steps increase (top row vs bottom row), the pose matrices become more \u201cdiffused\". This is expected, as the virus explores more \u201cpose possibilities\u201d through mutations during escape.\nAs the horizon of antibody optimisation increases, the poses also become more \u201cdiffused\u201d. This is particularly interesting, as all antibodies have the same number of mutations regardless of the horizon, suggesting that this diffusion might relate to the increased robustness of shapers."}, {"title": "3 Discussion", "content": "This study introduces a novel framework for designing antibodies using the principle of opponent shaping [9] that can effectively combat evolving pathogens. The core of our framework is a two-player game that models the interaction between antibodies and viruses. Applying opponent shaping to the game allows us to optimise for antibody shapers that anticipate and influence viral evolution.\n\nThe proposed framework is adaptable. While we demonstrated its efficacy using the Absolut! [12] binding simulator accelerated with JAX [13] for payoff estimation, and our model of the simulated viral escape with an evolutionary process, these components are interchangeable. As more accurate and efficient binding simulators or viral evolution models become available, they can be integrated into our framework, potentially enhancing its biological applicability.\n\nOur results demonstrate a clear advantage of antibody shapers over myopic antibodies when considering long horizons of viral escape. We observed that myopic antibodies, while initially effective, struggle to maintain their efficacy as the virus evolves. In contrast, shaper antibodies, particularly those optimized for longer horizons, show sustained performance over extended periods of viral evolution, see Figure 2.\n\nA notable computational trade-off emerges in the performance of antibody shapers. While longer optimisation horizons generally lead to better long-term performance, they come at an increased computational cost. Figure 2d offers guidance for selecting optimal optimisation horizons based on available computational resources and runtime of a binding simulation which is particularly valuable for future applications of our framework.\n\nFurthermore, our analysis reveals that long-horizon shapers shape the virus into more exploitable variants as opposed to just becoming robust to any virus, see Figure 3. In fact, the short-horizon shapers bind stronger to the viruses included by the long-horizon shapers than the long-horizon shapers themselves. This suggests exploring a mixture of antibodies, some optimised for virus shaping and others for binding. This could leverage the benefits of both shaping the viral evolutionary landscape and maintaining strong binding efficacy. Interestingly, a longitudinal study on rare patients who naturally developed broadly neutralizing antibodies (bnAbs) to HIV showed that early neutralizing antibodies induce HIV escape to those antibodies [22]. The bnAbs were later developed with the cooperation between the B cell lineages. This indicates the constant evolving dynamics between the virus and our immune system in nature. In the future, our approach could enable us to better understand and develop therapies for similar settings by simulating a game with more than one antibody playing against the virus.\n\nTo provide insights into the mechanisms underlying the effectiveness of antibody shapers, we conduct an explainability analysis focused on the amino acid distribution in shapers (Figure 4) and on binding poses (Figure 5). While these results offer insights into the strategies employed by our antibody shapers, it's important to note that they are specific to"}, {"title": "4 Methods", "content": "Our method applies the principles of opponent shaping [9] to a two-player game between the antibody shaper player or agent and a naive virus agent (Figure 1a). In this section, we describe our method in detail.\n\nFirstly, we introduce the virus-antibody game in Section 4.1 where we define the action spaces and the payoffs of both players. Secondly, we define the simulated viral evolution process in Section 4.2 where the virus evolves to escape in response to the current antibody. Finally, in Section 4.3 we define the antibody optimisation process where we optimise the antibody shapers in a way that accounts for future viral mutations and learns to influence viral evolution away from escape.\n\nImportantly, implementing the virus-antibody game requires a way to determine the strength of binding of any antibody- antigen pair, or as we refer to it later in this section a binding function. In section 4.4 we describe our binding function choice, based on the Absolut! framework [12]."}, {"title": "4.1 Virus-Antibody Game", "content": "We frame our setting as a two-player zero-sum game between the virus (v) and the antibody (a), meaning that the gain of one player is equal to the loss of the other player, and vice-versa. The action space of both agents is their respective amino acid sequence, and the payoffs are defined by Figure 1b and are the negative of each other - i.e. an improvement in antibody payoff results in a corresponding reduction of virus payoff of equal magnitude.\n\nWe define the set of 20 amino acids as $A$. Let $N_v$ be the sequence length of the viral antigen, and $N_a$ be the sequence length of the antibody. So an action of the virus will be $v \\in A^{N_v}$, and an action of the antibody will be $a \\in A^{N_a}$. In our experiments, we use the dengue envelope antigen [21] as the virus, it is composed of 97 amino acids, thus $N_v = 97$. $N_a$ is the sequence length of the antibody's CDRH3 region which Absolut! [12] assumes to be 11 amino acids long, so $N_a = 11$.\n\nLet $B : A^{N_v} \\times A^{N_a} \\rightarrow \\mathbb{R}$ be our binding function, which measures the strength of the binding between the antibody and the viral antigen with increasing values corresponding to stronger binding. Intuitively, the main payoff/reward for the antibody $R_a$ should be $R_a = B(v, a)$ since it describes the capacity of the antibody to bind the virus, and the corresponding reward for the virus should be $R_v = -B(v, a)$.\n\nHowever, such a choice would lead to a globally optimal strategy for the viral antigen to be completely inert, while the antibody would evolve to be maximally \"sticky\". Such results fail to capture the biological realities: viruses must retain their ability to bind to host cell receptors to function, and antibodies need to maintain a certain level of specificity to avoid off-target binding [26]. Altogether, to create a biologically relevant and realistic game setting, we must incorporate additional incentives into our objectives for both the antibody and the virus.\n\nTo achieve this, we introduce a binding target $t^+$ for the virus. In the real world, this corresponds to the cell surface receptor protein, that is used by the virus to enter the host cell. To mimic the requirement that antibodies should not become self-reactive to the host proteins and trigger auto-immunity we also introduce a dummy anti-target $t^-$ representing a protein for the self, that is a target to which the antibody should not bind.\n\nThis establishes the complete antibody payoff that can be used in the framework of our two-player virus-antibody game:\n\n$R_a(v, a) = B(v, a) \u2013 B(t^-, a) \u2013 B(v, t^+)$\n\nWith $R_v(v, a) = -R_a(v, a)$. In this framework, the antibody gets a higher payoff not only if it binds the virus with higher affinity, but also if the virus fails to bind its receptor or if the antibody has a lower risk of autoimmunity.\n\nWe can now define the simulated viral escape via evolution. In the following section, we leverage the viral payoff $R_v(v, a)$ as a fitness function to model how viruses might evolve to evade antibody binding. This simulates viral trajectories that viruses could take in response to therapeutic pressure."}, {"title": "4.2 Simulated Viral Escape via Evolution", "content": "We model the escape of the virus $\\hat{v}$ by simulating the viral evolution from a fixed antibody $a$ over a horizon $H$ number of steps. The simulated viral escape via evolution (see Figure 1a) is defined as follows. Given a starting virus $\\hat{v}$, the fixed antibody $a$ induces a distribution $E_v(\\hat{v}, a)$ over sequences of viruses $\\tilde{v}^1, \\tilde{v}^2, \\tilde{v}^3, \\dots$. We write that $ \\tilde{v} \\sim E_v(\\hat{v}, a)$. Define the viral escape trajectory as a sequence $\\tilde{V} = \\tilde{v}^0, \\tilde{v}^1, \\tilde{v}^2, ..., \\tilde{v}^H$, where $\\tilde{v}^0 = \\hat{v}$ and $H$ is the horizon length. Then a viral escape trajectory is given by $\\tilde{V} \\sim E_v(\\hat{v}, a)$. Below we define the process of generating the escape trajectories inductively.\n\nAt generation $i$ we have a population of $P$ viruses $v^i_1, v^i_2 \\dots v^i_P$. In our experiments $P = 15$. When $i = 0$, the population is the starting virus $\\hat{v}$ duplicated $P$ times. For every virus in the population, we evaluate its fitness given by $R_v(v, a)$. We then sample a new virus $\\tilde{v}$ based on the fitness values, in particular:\n\n$P(v^i_k = \\tilde{v}^i) \\propto exp(\\beta R_v(v, a))$\n\nWith duplicates in the population being considered distinct, the likelihood of a particular variant increases with the number of duplicates. Furthermore, $\\beta$ is a constant which reflects how random the selection process is, with $\\beta \\rightarrow \\infty$ reflecting deterministic max-fitness selection.\n\nTo generate the next population, $\\tilde{v}$ is then duplicated and randomly mutated $P$ times such that on average there is one amino acid mutation in the viral sequence, so:\n\n$\\tilde{v}^{i+1}_k \\stackrel{Mutation}{\\sim} \\tilde{v}^{i+1}_k$\n\nAfter horizon $H$ generations, a full escape trajectory $\\tilde{V} = \\tilde{v}^0, \\tilde{v}^1, \\tilde{v}^2, ..., \\tilde{v}^H$ is generated and the simulated viral escape process ends."}, {"title": "4.3 Antibody Optimisation", "content": "We define the antibody fitness $F^H(a)$ such that it represents the true objective of the antibody which accounts for the viral escape. Given a horizon $H$ and starting virus $\\hat{v}$, antibody fitness is:\n\n$F^H(a) = \\mathbb{E}_{ \\tilde{V} \\sim E_v(\\hat{v}, a)} [\\frac{1}{H} \\sum_{i=0}^H R_a(\\tilde{v}, a)]$\n\nThis is a precise definition of the antibody fitness, Equation 1 in Section 2.1.3 uses a simplified notation. Note that if $H = 0$ this fitness defaults to a naive antibody payoff that ignores viral escape, i.e. $F^0(a) = R_a(\\hat{v}, a)$. We refer to this as the myopic objective.\n\nTo optimise antibody shapers, we employ Monte Carlo simulations to estimate the antibody fitness combined with an evolutionary algorithm. We refer to this process as the antibody optimisation loop, see Figure 1a. In meta-learning terms, this is the outer loop or the meta-loop, contrasting to the inner loop which is the simulated viral escape via evolution.\n\nGiven a starting antibody $\\hat{a}$, a starting virus $\\hat{v}$ and a viral escape horizon $H$, the antibody optimisation process generates a trajectory of antibodies $\\hat{a} = \\hat{a}^0, \\hat{a}^1, \\hat{a}^2, ..., \\hat{a}^N$, where $N$ is the number of antibody optimisation steps (or meta-steps). In the trajectory, $\\hat{a}^0 = \\hat{a}$ is the starting antibody and $\\hat{a}^N$ is the final optimised antibody. This optimisation could, in principle, start from any antibody, but for simplicity we opt to start from purely random antibodies, meaning $a$ is random. In most of our experiments $N = 30$.\n\nAt antibody optimisation step $i > 0$, we have a population of $P_a$ antibodies $a^i_1, a^i_2 \\dots a^i_{P_a}$. In our experiments $P_a = 40$. We then sample their fitness values $F^H(a)$ with a fixed number $\\eta$ of Monte Carlo roll-outs, i.e. we sample $\\eta$ independent viral escape trajectories each with horizon $H$ viral escape steps. We found $\\eta = 5$ to be sufficient. We then select the best-performing antibody, $\\hat{a}^i$:\n\n$\\hat{a}^i = arg\\ max_k \\mathbb{E}[F^H(a)]$\n\nWhen $i = 0$, $\\hat{a}^0 = \\hat{a}$ is the starting random antibody. We generate the next population of antibodies $a^{i+1}_1, a^{i+1}_2 ... a^{i+1}_{P_a}$ by taking both the antibody $\\hat{a}^i$ and $P_a - 1$ copies of it, each copy with a single random mutation to the amino acid sequence of $a^i$.\n\nOnce the final optimised antibody $\\hat{a}^N$ is generated, a full optimisation trajectory is complete $\\hat{a} = \\hat{a}^0, \\hat{a}^1, a^2,...,\\hat{a}^N$ and the antibody optimisation process finishes."}, {"title": "4.4 Binding Function", "content": "The methodology described so far is independent of the choice of the binding function $B : A^{N_v} \\times A^{N_a} \\rightarrow \\mathbb{R}$. In our work, we rely on the Absolut! framework [12] to implement the binding function and in this section, we mathematically formalise the binding energy calculation that Absolut! uses. For further explanation, readers are recommended to refer to the original Absolut! paper [12].\n\nFor two given protein structures, there are many possible joint configurations. Each of these joint configurations yields an energy. The configurations which are associated with lower energy will require more external energy to cause the system to leave that state, meaning in turn that they are more stable. If the configuration is sufficiently stable, this may be referred to as a binding pose.\n\nIn Absolut, poses are represented as pairs of residues which are adjacent to each other in that pose. In particular, the pairs may be from the antigen to the antibody, or from the antibody to itself. We define the space of possible poses $\\Phi$:\n\n$\\Phi = 2 \\times \\mathbb{N}_v \\times \\mathbb{N}_a \\times \\mathbb{N}_a \\mathbb{N}_a$\n\nWhere $\\mathbb{N}_v$ and $\\mathbb{N}_a$ are taken to be the set of integers up to $N_v$ and $N_a$ respectively.\n\nThe energy of a complex of a virus $v \\in A^{N_v}$ and an antibody $a \\in A^{N_a}$, in a given pose $(\\varphi_{v \\times a}, \\varphi_{a \\times a}) \\in \\Phi$ is defined by sum of the energies of each adjacent residues. The energy between a residue pair is determined by which two amino acids it contains, given by a symmetric interaction matrix $M : A \\times A \\rightarrow \\mathbb{R}$ which is determined experimentally by [14].\n\nWe then define the energy of a single pose to be:\n\n$\\hat{E}(a, b; (\\varphi_{v \\times a}, \\varphi_{a \\times a}), M) = \\sum_{(i, j) \\in \\varphi_{v \\times a}} M(v_i, a_j) + \\sum_{(i, j) \\in \\varphi_{a \\times a}} M(a_i, a_j)$"}]}