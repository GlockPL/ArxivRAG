{"title": "An Inverse Modeling Constrained Multi-Objective Evolutionary Algorithm Based on Decomposition", "authors": ["Lucas R. C. Farias", "Aluizio F. R. Ara\u00fajo"], "abstract": "This paper introduces the inverse modeling constrained multi-objective evolutionary algorithm based on decomposition (IM-C-MOEA/D) for addressing constrained real-world optimization problems. Our research builds upon the advancements made in evolutionary computing-based inverse modeling, and it strategically bridges the gaps in applying inverse models based on decomposition to problem domains with constraints. The proposed approach is experimentally evaluated on diverse real-world problems (RWMOP1-35), showing superior performance to state-of-the-art constrained multi-objective evolutionary algorithms (CMOEAs). The experimental results highlight the robustness of the algorithm and its applicability in real-world constrained optimization scenarios.", "sections": [{"title": "I. INTRODUCTION", "content": "A multi-objective optimization problem (MOP) is characterized by a set of Pareto optimal solutions, representing a compromise between the different objectives. Such solutions form the Pareto set (PS) in the decision space with the correspondent Pareto front (PF) in the objective space. Various optimization problems in real-world applications hold a number of conflicting objectives and multiple complex constraints, such as the robot gripper optimization problem, water resources management, gearbox design, and process synthesis problem [1]. This kind of problem is denoted as constrained MOP (CMOP).\nCMOPs bring more challenges than their unconstrained counterparts due to the coexistence of multiple objectives and constraints. The CMOP is defined as [2]:\n\nmin  f(x) = (f1(x) f2(x) ... fm(x))\ns.t.  gj(x) \u2264 0, j = 1, ..., l\nhj(x) = 0, j = l + 1, ..., k\nx = (x1 x2 ...xd) \u2208 \u03a9\n\nwhere x is a d-dimensional real-valued decision vector in the decision space Rd, and f(x) is an m-dimensional objective vector in the objective space Rm; \u03a9 \u2282Rd defines the feasible region of the decision space; gj(x) \u2264 0 is the j-th inequality constraint; h(x) = 0 is the (j \u2013 l)-th equality constraint; and l and (k-l) denote the number of inequality and equality constraints.\nIn recent decades, multi-objective evolutionary algorithms (MOEAs) have emerged as a popular approach for generating a set of non-dominated solutions in a single run to solve MOPs [2]. Existing MOEAs can be classified according to their selection methods: Pareto-based, decomposition-based, and indicator-based approaches [2]\u2013[4]. These MOEAs are effective solvers for unconstrained multi-objective optimization problems. However, when applied to CMOPs, they need a constraint handling technique (CHT), a selection mechanism that can handle constraints. CMOPs are more prevalent in practical application scenarios than unconstrained MOPs. Thus, considerable effort has been devoted to designing CHTs and specific mechanisms to promote the emergence and development of various CMOEAS [5].\nWhile MOEAs often require population diversity to store non-dominated solutions within the population or in an external archive, studies with model-based MOEAs aim to loosen such a diversity requirement. Model-based approaches focus on constructing a probabilistic model in the decision space throughout the evolutionary process [3]. Despite their effectiveness, the model-based MOEAs still rely on maintaining a candidate solution set, such as an external archive, to preserve non-dominated solutions obtained during the search. Another strategy to relax the diversity necessity involves constructing a regression model to identify solutions enhancing the diversity in the final generation [3], [6].\nThe just mentioned alternatives inspired Cheng et al. [3] to introduce an MOEA using Gaussian process-based inverse modeling (IM-MOEA). It stands out as a Pareto-based evolutionary algorithm based on an inverse model that maps the objective space into the decision space. This approach is promising when the decision-making process is essential for solving MOPs. The inverse mapping is an optimization process that becomes an optimal allocation of solutions within the Pareto front, simplifying the identification of suitable solutions. The optimal allocation refers to an approximation set of the PF that provides maximum information about the underlying PF, and it releases adherence to a uniform distribution of Pareto-optimal solutions [6].\nSubsequent research has expanded upon the foundation laid by IM-MOEA [4], [6]\u2013[11]. These works propose improvements such as adaptive weight vectors in population clustering [7], [9], E-IM-MOEA utilizes an external population and a biased reproduction operator [7], IM-MOEA-RF replaces the Gaussian process with Random Forest [8], and recently some works have extended inverse models based on Pareto dominance to deal with CMOP [4], [10], [11]. IM-MOEA/D proposes a decomposition-based approach tested as competitive on large-scale many-objective problems [6]. Decomposition-based inverse modeling to deal with CMOPs has yet to be proposed to the best of our knowledge.\nBearing in mind the potential of inverse modeling for"}, {"title": "II. IM-C-MOEA/D", "content": "This section discusses the details of the inverse modeling constrained multi-objective evolutionary algorithm based on decomposition (IM-C-MOEA/D). A high-level scheme is initially shown in Figure 1. The main items that compose it are the following:\n\u2022 Initialization: As most decomposition-based MOEAs do, we initialize the individuals of the population, P, weight vectors, \u039b, and the reference point, z. In particular, the weight vectors are initially generated using the Das and Dennis sampling (Subsection II.A).\n\u2022 Population partition: The subpopulations are created by the k-means algorithm, followed by a tournament selection of solutions in the subpopulation (Subsection II.B).\n\u2022 Inverse model: Each subpopulation has an inverse model, a mapping from the objective space into the decision space (Subsection II.C).\n\u2022 Constraint handling: The constraint handling procedure to compare viable and unviable solutions for replacement purposes is described in Subsection II.D.\n\u2022 Decomposition-based global replacement: The survivor selection is based on decomposition using a global replacement, which associates each new solution with the most suitable weight vector (Subsection II.E).\n\u2022 Stopping Criteria: The maximum number of generations or fitness evaluations.\nThe details of the IM-C-MOEA/D components and their computational complexity (Subsection II.F) are below."}, {"title": "A. Generating Weights", "content": "The weight vectors are generated uniformly distributed over a unit simplex using the method proposed by Das and Dennis. This approach is present in most variants of decomposition-based MOEAs [17]. The number of weight vectors to be generated, N, is calculated as N = (H+m-1 choose m-1), where H is the number of divisions of each axis and m is the number of objectives. The value of H cannot be lower than m to avoid creating intermediate points. Moreover, generating weight vectors may become computationally costly for more than three objectives [18]."}, {"title": "B. Population Partition", "content": "IM-MOEA/D builds the inverse models (IMs) in the reproduction stage; firstly, the k-means algorithm creates clusters according to the position in the objective space [6]. Then, IM-C-MOEA/D applies a binary tournament to select solutions, with priority to feasible ones, in all clusters [12]. There is an IM for each group."}, {"title": "C. Inverse Modeling", "content": "Conventional model-based algorithms aim to estimate the distribution of the candidate solutions in the decision space. In contrast, inverse model-based algorithms are built to represent the inverse mapping from the objective space to the decision space. After constructing the IMs, evenly distributed candidate solutions can be directly sampled from the objective space and mapped into the decision space [3]. However, estimating the inverse mapping from the m-dimensional objective space to the d-dimensional decision space can be challenging. Therefore, a multivariate IM is decomposed into several univariate regression models:\n\nP(X|Y) \u2248 \\prod_{i=1}^{d} (P(x_i|f_j) + \\epsilon_{ji}),\n\nwhere j = 1,2,..., m, i = 1, 2, ...,d, P(xi|fj) is an univariate model that represents the inverse mapping from objective function fj to decision variable xi, and \u03b5ji is an error term. We consider that \u03b5ji ~ N(0, (\u03c3\u03b7)\u00b2) is an additive Gaussian noise. Consequently, each univariate model, together with the error term achieved using the Gaussian process, is a way for modeling both the global regularity and the local randomness in the distribution of the candidate solutions during the search [3]."}, {"title": "D. Constraint Handling Approach", "content": "IM-C-MOEA/D extends IM-MOEA/D [6] incorporating a constrained handling approach suggested by Jain and Deb [4], [12]. This modification enables the proposed IM-C-MOEA/D to handle CMOPs effectively. Therefore, in IM-C-MOEA/D, when a new candidate solution y (an offspring) is compared with a randomly selected neighbor x, the constraint violations (CV) of both solutions are verified before applying solution substitution based on the Tchebycheff metric. Depending on the feasibility of solutions, the following four scenarios can occur:\n1) If y is infeasible and x is feasible, then x remains unchanged;\n2) If y is feasible and x is infeasible, then x is replaced by y;\n3) If both y and x are infeasible, then x is replaced by y if the constraint violation of the latter is lower than that of the former;\n4) If both solutions are feasible, x is replaced by y when y has a better Tchebycheff metric value than x.\nSuch modifications prioritize feasible and small-CV solutions in the population without inserting any new parameter to the algorithm [12]."}, {"title": "E. Decomposition-Based Replacement", "content": "The Tchebycheff (TCH) decomposition is defined as:\n\nminimize g^{TCH}(x|\u03bb, z) = max_{1<j<m}(\u03bb_j|f(x) \u2013 z_j|),\nsubject to x \u2208\u03a9\n\nwhere m is the number of objectives and z is the utopian reference point, i.e. zj = min {f(x)|x \u2208 \u03a9}, for every j = 1,...,m. The m-dimensional weight vector is defined as \u03bb = (\u03bb1 ... \u03bbm), \u03a3\u03bbj = 1 and \u03bbj \u2265 0, for all j \u2208 1,..., m. Different Pareto-optimal solutions can be obtained by altering weight vectors using the TCH approach [17].\nAfter generating a new solution o, the global replacement scheme determines the most suitable weight vector \u03bbi using the TCH decomposition:\n\ni = arg min_{1<k\u2264N} g^{TCH} (o | \u03bb_k, z).\n\nThe algorithm then verifies the neighborhood of the \u03bb\u03af, searching for solutions that can be improved by the offspring o. If gTCH(o | \u03bbj, z) is better than gTCH (xj | \u03bbj, z), the current solution xj in the T-neighborhood of the weight vector \u03bbj is replaced by o [17]."}, {"title": "F. Algorithm Framework", "content": "The pseudo-code for IM-C-MOEA/D is illustrated in Algorithm 1. IM-C-MOEA/D initializes the population and weight vectors, determines the neighborhood structure for each weight vector, and calculates the ideal reference point (lines 1-4). The population is partitioned into K groups using k-means (line 6), and new individuals are generated for each partition (lines 7-13). The global replacement is applied to identify the most suitable weight vector, and the individuals in the neighborhood of the most suitable weight vector are examined using the constraint handling approach and decomposition function (lines 14-20). The algorithm stops when the maximum number of generations is reached. The maximum computational complexity of IM-C-MOEA/D is determined by the time cost of population partitioning using k-means (O(N2)), reproduction by inverse modeling (O(N\u00b3)), and global replacement (O(mN\u00b2)). The overall computational complexity is O(N\u00b3)."}, {"title": "III. VALIDATION OF THE ALGORITHM", "content": "We introduce the benchmark problems used for the validation experiments and the parameter settings used in all CMOEAS. Then, we present the performance metric for assessing the quality of the approximate Pareto-optimal solutions generated by each competing algorithm. At last, the experimental results are described and analyzed."}, {"title": "A. Experimental Setup", "content": "The validation process was designed to evaluate the performance of the IM-C-MOEA/D on a range of real-world problems, RWMOP1 to RWMOP35 [1]. The features are detailed in columns 2 to 7 of Table I. In particular, the definition of the population size and number of function evaluations in each problem was extracted from the original RWMOP paper [1]. The problems are categorized into Mechanical Design, Chemical Engineering, Process, Design and Synthesis, and Power Electronics.\nIM-C-MOEA/D and IM-C-MOEA were implemented in the PlatEMO, a MATLAB-based platform in which the other CMOEAS codes are available. The experiments run in a computer with 32 gigabytes of RAM and a 3.60GHz 8-core Intel Core i9-9900KF processor.\nWe used the parameters informed by the literature for the CMOEAs. The variation operators for MOEA/DD [16] and RVEA [15] are SBX and polynomial mutation [12], with both distribution indices set to 20 and the probabilities of crossover and mutation set to 1.0 and 1/d (d is the number of decision variables). The penalty parameter a of APD in LMOCSO [14] is set to 2. In POCEA [13], the parameter K is set to 5. For the inverse models, IM-MOEA [3], IM-MOEA/D [6], IM-C-MOEA, and IM-C-MOEA/D, the two main parameters are the number of groups K set to 10, and the model group size L, set to 3 or 2 when the problem has only two decision variables.\nThe performance of each algorithm is evaluated through the widely-used metric, namely the hypervolume (HV) [19].\nHV: Given a reference point z = (z1 ... zn) dominated by all Pareto-optimal solutions, the HV of a set of solutions P is defined as the volume of the objective space dominated by all solutions in P, bounded by z:\n\nHV(P, z) = Vol(\\bigcup_{\u03a7\u2208P} [f(x), z]).\n\nwhere Vol() denotes the Lebesgue measure, and [f(x), z] represents the hyperrectangle formed by the fitness of the solution x and the reference point z. The larger the HV, the better the approximation quality of P. We use a reference point 10% higher than the upper bound of the PF for our experiments. To reduce the computational complexity of determining HV if m > 4, we use the Monte Carlo method with 1,000,000 sampling points to approximate its value.\nThe tests were run 30 times independently, and each performance mean and standard deviation were recorded. The Wilcoxon rank-sum test was conducted to analyze the results with a significance level 0.05. The findings were interpreted with symbols +, -, and \u2248, meaning that the result by another MOEA is significantly better, worse, or statistically equivalent to the results obtained by IM-C-MOEA/D."}, {"title": "B. Experiments", "content": "Tables I and II present the experimental results of IM-C-MOEA/D compared with the chosen CMOEAs for solving the RWMOP1-35 [1]. For each test problem, the number of objectives (m) and decision variables (d) vary from 2 to 5 and 2 to 30. The maximum number of constraints is 29.\nTable I presents the HV values achieved by the original models (IM-MOEA and IM-MOEA/D) and their versions for handling constraints: IM-C-MOEA/D and IM-C-MOEA share features regarding the constraint violation criterion as Jain and Deb [4], [12] have proposed. The experimental results show that MOEAs with constraint treatments performed better in 26 out of 35 problems. The performance was statistically equivalent for the remaining nine instances.\nTable II presents experimental results achieved by the IM-C-MOEA/D and five state-of-the-art CMOEAs used for solving real-world multi-objective problems, RWMOP1-35. Out of the six algorithms, IM-C-MOEA/D achieved the best performance in 11 problems, followed by IM-C-MOEA in 6 problems, RVEA and POCEA in 4 problems each, MOEA/DD in 3 problems, and LMOCSO in 2 problems.\nIM-C-MOEA/D was found to be better in the unconstrained problem (RWMOP 9), with many objectives (RWMOP 11), and in the context of low inequality constraints in general (RWMOP 1-21, 25-29). IM-C-MOEA performed closest to its version with decomposition in terms of performance, excelling in finding feasible solutions to problems with equality constraints (RWMOP 23) and many constraints (RWMOP 35). POCEA performed better on problems with equality restrictions (RWMOP 1, 22-24). RVEA and MOEA/DD performed better on problems with more inequality restrictions and decision variables (RWMOP 30-35).\nThe performance of RWMOPs 28, 33, and 34 can be attributed to the inherent features of these problem sets. RWMOP 28 involves the simultaneous management of inequality and equality constraints. Furthermore, RWMOP 33 and 34 involve 30 decision variables and 29 inequality constraints. Such scenarios present challenges in identifying feasible"}, {"title": "IV. CONCLUSION", "content": "This paper proposed an inverse modeling CMOEA based on decomposition (IM-C-MOEA/D) for dealing with CMOPS with multiple or many objectives. This model uses a k-means scheme for clustering within the objective space, the selection criterion based on a global replacement to choose the most appropriate weight vector from the population, and a constraint handling approach to deal with CMOPs. IM-C-MOEA/D reached competitive performance compared to 6 state-of-the-art CMOEAs in most of the 35 real-world CMOPs [1] with different inequality and equality constraints.\nIM-C-MOEA/D is an improved version of IM-MOEA/D, inheriting favorable features such as mapping the objective space to the decision space. Despite the achievements, we can observe limitations in the IM-C-MOEA/D, which raise possibilities for future lines of research:\n1) Adapting the weight vectors might improve the diversity of the solutions over the evolutionary process since the shape of the Pareto front directly affects the performance of MOEAs based on decomposition;\n2) IM-C-MOEA/D has various parameters. Thus, it may be worth investigating the influence of parameter setting on the model performance;\n3) Exploring constraint-handling techniques to reach feasible solutions in problems that involve combinations of inequality and equality constraints and numerous decision variables."}]}