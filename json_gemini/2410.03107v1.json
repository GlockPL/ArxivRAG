{"title": "MBDS: A Multi-Body Dynamics Simulation Dataset for Graph Networks Simulators", "authors": ["Sheng Yang", "Fengge Wu", "Junsuo Zhao"], "abstract": "Modeling the structure and events of the physical world constitutes a fundamental objective of neural networks. Among the diverse approaches, Graph Network Simulators (GNS) have emerged as the leading method for modeling physical phenomena, owing to their low computational cost and high accuracy. The datasets employed for training and evaluating physical simulation techniques are typically generated by researchers themselves, often resulting in limited data volume and quality. Consequently, this poses challenges in accurately assessing the performance of these methods. In response to this, we have constructed a high-quality physical simulation dataset encompassing 1D, 2D, and 3D scenes, along with more trajectories and time-steps compared to existing datasets. Furthermore, our work distinguishes itself by developing eight complete scenes, significantly enhancing the dataset's comprehensiveness. A key feature of our dataset is the inclusion of precise multi-body dynamics, facilitating a more realistic simulation of the physical world. Utilizing our high-quality dataset, we conducted a systematic evaluation of various existing GNS methods. Our dataset is accessible for download at https://github.com/Sherlocktein/MBDS, offering a valuable resource for researchers to enhance the training and evaluation of their methodologies.", "sections": [{"title": "1 Introduction", "content": "Modeling and simulating physical systems play an important role in advancing scientific comprehension, technological innovation, and cross-disciplinary problem-solving [1]. Numerous differentiable simulators, leveraging neural network frameworks, have been proposed in the literature [2-5], showcasing considerable efficacy in the precise emulation of a wide spectrum of interacting entities. The inception of these methodologies has not only streamlined the execution of physics simulations but has also harnessed the capabilities of end-to-end trained neural networks for heightened accuracy. In contrast to neural network models applied in alternative domains such as video [6], image [7], and text [8], the incorporation of these methodologies represents a pioneering initiative toward modeling and analyzing the physical world utilizing neural networks. This paradigm shift not only augments the depth of simulation fidelity but also unfolds novel prospects for the application and extension of deep learning methods in the realm of physical system modeling and simulation.\nMost of the aforementioned methods for simulating physical systems are based on GNNs [5], which restructure the studied objects into graph representations. One category of methods utilizes point cloud techniques to transform objects into point clouds [21], which are then converted into graphs. Another subset relies on finite element methods [10] to grid objects before transforming them into graph-structured data. These approaches have demonstrated favorable outcomes in analytical tasks such as object deformation [21], fluid states [15], and rigid body collisions [22].\nHowever, there is still a significant gap between the theoretical advancements and practical applications of current neural network-based methods for simulating physical systems in real-world scenarios. This gap can be attributed to the inability of existing simulation methods to fully capture the complexity of real-world conditions. Many existing methods primarily focus on analyzing the interactions between individual objects or pairs, which does not align with the practical industrial applications of object dynamics simulation.\nIn actual industrial scenarios, simulation algorithms often need to analyze the interactions among various complex mechanical structures. This is a challenge that current datasets struggle to simulate. This limitation results in the current neural network-based methods for simulating physical systems remaining largely"}, {"title": "2 Related Works", "content": "In recent years, there has been a shift towards more machine learning-centric methodologies in physical simulators to better support general physical dynamics [23-26]. Among these, methods based on GNNs stand out as particularly effective [27]. GNNs adeptly map an input graph to an equivalent structure output graph, yet with potentially different attributes for nodes, edges, and graphs-level, and can be trained to learn a form of message-passing, where latent information is propagated between nodes via the edges [28,29]. Owing to the capability of GNNS to effectively handle message passing between nodes and representing entities and their relations with graphs, and compute their interactions, numerous works have employed Graph Neural Networks as physical simulators for dynamical systems. More and more GNNs and their variants [12, 20], such as Interaction Networks [30], have been adeptly learned to simulate rigid bodies, mass-spring systems, n-body problems, and robotic control systems [5,31], as well as non-physical systems like multi-agent dynamics, algorithm executions, and other dynamic graph settings."}, {"title": "2.1 Graph Neural Networks Simulators", "content": "Simplified Scenarios: Initially, GNS-related datasets primarily focused on simple and controlled scenarios. These datasets typically featured basic physical systems, such as single-body dynamics [5,13] or simplified multi-particle problems like pendulums [3, 19] and springs [2]. While useful for initial explorations in the field, these datasets lacked the complexity needed to fully test and develop advanced GNS models.\nAdvanced Physical Interactions: As GNS technology progressed, there was a shift towards incorporating more complex physical interactions. Datasets began to include dynamic interactions between multiple entities, encompassing scenarios like fluid dynamicsp [15, 16] and deformable materials. These datasets provided a richer environment for testing GNS capabilities, though they often required significant computational resources due to increased complexity.\nIntegration of Real-World Scenarios: Acknowledging the demand for simulations that better mirror actual conditions, recent datasets have begun incorporating scenarios that closely resemble real-world environments [32], but this approach, often relying on sensors or computer vision [21], can be marred by issues such as device jitter, electromagnetic interference, and deviations during signal transmission."}, {"title": "3 Dataset Construction", "content": "The design of the MBDS dataset necessitates meticulous consideration of three critical factors: the data collection strategy, adherence to physical laws, and ensuring both ease and consistency in its utilization. The entire design process is chiefly focused on rectifying two notable deficiencies in previous datasets: the information provided is overly simplistic in terms of speed and position, and it notably lacks consideration of external force sources beyond gravity. Addressing the multifaceted nature of multi-body dynamical systems and the requirement for dataset universality, the construction phase is inherently time-intensive and complex. In the following sections, we meticulously outline the data collection methodology and explore the significant advantages it offers."}, {"title": "3.1 Data Collection", "content": "Given the current limitations of computer vision technology, which often leads to information noise and resultant errors, and considering the inconvenience and high costs associated with sensor-based data collection, we opt to perform scenario modeling and data collection through the application of physical laws of multibody dynamics and high-precision calculations. The MBDS include 3D scenarios such as a four-wheel ParticleCar, a SimpleCubli, a 3-Ladder, a 2-Ladder, a 6-Pendulum, and a 5-Pendulum; 2D scenarios such as the simple projectile motion of a BallDrop and 1D models such as a BallScrol. These eight are simple yet very representative scenarios. Each scenario consists of 15000 trajectories with 200 time steps. The dataset is divided into two parts: one for training, containing 13500 trajectories, and another for evaluation, containing 1500 trajectories. We instantiate every particle, using the parameters listed in Table 2 and we will introduce the processing details in the following:"}, {"title": "3.2 Statistics and Analysis", "content": "This section conducts some necessary statistics and analysis to gain a better understanding of the proposed dataset MBDS. From the statistics, we observe the following advantages:\nPurity: Compared to other particle datasets derived through image processing, which invariably introduces noise during the conversion of images to particles [6], or datasets obtained from real-world sensors that may exhibit biases in signal transmission and conversion [21], our dataset stands out in its purity. By meticulously following the physical laws governing multi-body dynamics and accounting for a myriad of disturbance factors encountered in real-world situations, we successfully create the most direct and pure physical dataset available. This approach ensures a higher level of accuracy and reliability in our data, pivotal for advancing research in this field.\nVersatile and Malleable Forms: In our dataset, careful consideration has been given to practical physical implications, as well as the generalizability strengths and weaknesses of GNS models, even within identical scenarios. This led us to create datasets encompassing a range of different speeds and forces. Our experiments show that GNS models predictions tend to decrease in accuracy at higher velocities. For instance, in our ParticleCar scenario, we divide the speed ranges for testing into three intervals: 10-30, 30-70, and 70-100. In this setup, the speeds of the four wheels are not uniform, varying within these intervals, to simulate the effects of steering. Similarly, forces are calibrated based on the scenario, with three specific intervals set to more rigorously evaluate the models' performance under varied conditions. This structured approach enables a more effective assessment of the models' capabilities.\nScalability: In our comprehensive analysis of existing datasets, we observe a predominant reliance on fixed data formats such as .h5 or .npz. While these formats are not inherently problematic, the primary issue arises from their often inconsistent and non-scalable nature in typical dataset structures, which hinders effective scenario extension and adaptation. To mitigate these limitations, our dataset is made available in two widely-used formats, alongside providing the rawest form of data in .csv files, thereby facilitating seamless integration and comparison with diverse datasets. Further, in our commitment to collaborative advancement, we will release the dataset generation code to the public domain. This move is intended to empower fellow researchers in the field, enabling them to tailor and expand the dataset in alignment with their unique research objectives, thus fostering innovation and progress in the realm of GNS.\nBenchmark: In conclusion, our dataset is meticulously designed to closely mirror real-world scenarios, offering a broad and relevant platform for evaluating various GNS models. It is comprehensive, incorporating a diverse range of scenarios from complex 3D environments to fundamental 2D and 1D setups. This diversity ensures a robust and flexible evaluation framework, establishing our dataset as an ideal benchmark for thoroughly examining current models. Furthermore, this comprehensive nature not only allows for rigorous testing but also facilitates a detailed analysis of each network architecture, identifying its strengths and weaknesses. Consequently, our dataset serves as an invaluable benchmark in guiding the enhancement and innovation of network designs."}, {"title": "4 Evaluation and Benchmarks", "content": "In this section, we present a standardized evaluation pipeline utilizing our datasets for object pose detection and trajectory prediction. Employing the latest Graph Network Simulator (GNS) models, we benchmark the performance across various scenarios and provide a detailed discussion of the results."}, {"title": "4.1 Experimental Setting and Metrics", "content": "Settings: In our methodology, we split the entire dataset into a training set and a validation set using a 9:1 ratio. Each model underwent training 10 times, with each training session spanning 200 epochs. We record the average performance on the validation set to ensure a robust evaluation. To maintain fairness in our comparisons, we keep all hyperparameters consistent across models without any additional tuning. Specifically, all MLPs are initialized with three projection layers and a hidden dimension of 200. For optimization, we employ an Adam optimizer with an initial learning rate of 0.0001 and betas set at (0.9, 0.999). Additionally, we utilized a Plateau scheduler, applying a patience of three epochs and a decay factor of 0.8.\nMetrics: We adhere to the experimental setup outlined above and adopt positional error as our evaluation standard. To introduce the calculation of Mean Squared Error(MSE) briefly, it is computed by taking the mean of the squared differences between the predicted values and the actual values. This method is highly effective in evaluating the accuracy of the discrepancy between rollout and ground truth, serving as a commonly used metric in trajectory prediction research."}, {"title": "4.2 Baseline models", "content": "To demonstrate the superiority of our dataset, we conducted experiments based on our datasets using various GNS models, which include:\nHGNN:Learning the Dynamics of Physical Systems with Hamiltonian Graph Neural Networks. (Suresh Bishnoi et al. 2023)\nLGNN:Learning the Dynamics of Particle-based Systems with Lagrangian Graph Neural Networks. (Suresh Bishnoi et al. 2023)\nSGNN:Learning Physical Dynamics with Subequivariant Graph Neural Networks. (Jiaqi Han et al. 2022)\nGNS:Learning to Simulate Complex Physics with Graph Networks. (Alvaro Sanchez-Gonzalez et al. 2021)"}, {"title": "4.3 Results and discussion", "content": "We present the rollout MSE for t = 1 and t = 50 on the MBDS dataset in Table 3 and Table 4. In these analyses, we use the basic GNS model as a baseline and compare it with the latest variants of GNS network architectures. This comparison allows us to glean more detailed insights into the four models from the tabulated data. Figure 2 illustrates the curve plot of our experimental results on precision evaluation. It is evident that our dataset serves effectively as a benchmark and can be utilized as a tool for analyzing the shortcomings present in current models. This underscores the effectiveness of our proposed MBDS dataset. Based on these results as observed in the Rollout-MSE curves for some scenarios, we will subsequently conduct an in-depth analysis to discern the strengths and weaknesses of each model, particularly in the context of their performance against the established baseline. (In some result tables, green indicates improvement, and red signifies inferiority.)\n1.  In our comparative analysis focused on the ParticleCar scenario across four models, the results, as detailed in Table 5, reveal that SGNN and HGNN underperform in comparison to the basic GNS model. Notably, LGNN exhibits the poorest performance. This disparity in model efficacy is particularly pronounced in scenarios where each particle exhibits distinct intrinsic dynamics. These findings suggest that the SGNN, HGNN, and LGNN while predicting trajectories, do not adequately account for situations where particles are subjected to forces beyond mere gravity. This lack of comprehensive force consideration appears to be a significant factor in the reduced accuracy of these models compared to the basic GNS.\n2.  Based on the 4 models tested in the 6-Pendulum scenario, a common setup involves applying an initial velocity or disturbance, followed by pendulum motion under the influence of gravity. The results in Table 5 indicate that due to SGNN's consideration of the consistent vertical direction of gravity, HGNN's account for the constancy of external forces over time in line with the conservation of Hamiltonian, and Lagrangian Law of Conservation of Kinetic and Potential Energy for LGNN, their performance is markedly superior to that of GNS.\n3.  In the scenario of the SimpleCubli, where a model is thrown from a certain height and influenced by gravity, additionally equipped with three flywheels attempting to achieve Cubli's body balance through torque changes, the experimental results, as shown in Table 5 demonstrate that in such a scenario with mixed dynamics, the basic GNS performs the best. Given that this scenario does not conform to Hamiltonian mechanics and Lagrangian Law, it is speculated that HGNN and LGNN perform worse than the basic GNS. SGNN, taking into account the symmetry of the system, but due to the random dropping scenario, does not satisfy the symmetry, resulting in the worst performance.\n4.  In the rope ladder scenario, modeled to simulate a helicopter rope ladder with one end fixed and the other swaying in the wind, we observed a dominant influence of gravity, with wind force serving as a minor perturbative factor. As shown in Table 5, SGNN demonstrates superior predictive performance,"}, {"title": "5 Conclusion", "content": "In this paper, we introduce a pioneering Multi-Body Simulation dataset, MBDS, which represents the first of its kind in capturing dynamics involving interactions among multiple bodies or systems, as far as we are aware. This dataset represents a significant improvement over previous datasets, as it is directly generated through adherence to rigorous physical laws by Mujoco [33] and the inclusion of real-world disturbances, rather than relying on computer vision techniques and sensors. MBDS includes a range of common scenarios, and its utility has been thoroughly validated through the implementation of various GNS models. We have also established comprehensive baselines, laying the groundwork for future research in this area. Our future objectives include expanding MBDS both in scale and in the diversity of categories to further propel GNS research. We are confident that MBDS will serve as a valuable and challenging asset for the GNS domain."}, {"title": "Table 2. Particle Parameters", "content": "Constant\tSymbol\tValue\tUnits\nmass\tm\t1\tkg\ninertia\tI\t6.17 \u00d7 10-4\tkg.m2\nforce\tF\t(various)\tN\ngravity\tg\t9.81\tm/s2\nfriction coefficient\t\u03bc\t4.3 x 10-1\t(none)\ndamping ratio\t\u03b6\t2.2 x 10-2\t(none)\ntime-step\t\u0394t\t2 x 10-2\tS"}]}