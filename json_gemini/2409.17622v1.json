{"title": "Neural P\u00b3M: A Long-Range Interaction Modeling\nEnhancer for Geometric GNNS", "authors": ["Yusong Wang", "Chaoran Cheng", "Shaoning Li", "Yuxuan Ren", "Bin Shao", "Ge Liu", "Pheng-Ann Heng", "Nanning Zheng"], "abstract": "Geometric graph neural networks (GNNs) have emerged as powerful tools for\nmodeling molecular geometry. However, they encounter limitations in effectively\ncapturing long-range interactions in large molecular systems due to the localization\nassumption of GNN. To address this challenge, we introduce Neural P\u00b3M, a\nversatile enhancer of geometric GNNs to expand the scope of their capabilities by\nincorporating mesh points alongside atoms and reimaging traditional mathematical\noperations in a trainable manner. Neural P\u00b3M exhibits flexibility across a wide\nrange of molecular systems and demonstrates remarkable accuracy in predicting\nenergies and forces, outperforming on benchmarks such as the MD22 dataset. It\nalso achieves an average improvement of 22% on the OE62 dataset while integrating\nwith various architectures.", "sections": [{"title": "1 Introduction", "content": "Prevailing geometric graph neural networks (GNNs) have demonstrated remarkable capabilities in\ncapturing the geometric information inherent within molecular graphs. Not only do they accelerate\nthe computational efficiency compared to traditional Density Functional Theory (DFT) methods for\nmolecules, but also hold the promise of achieving high-level accuracy in predicting crucial molecular\nproperties such as energy and forces [2, 17, 22]. Despite their success in modeling small molecules,\nlimitations still persist in extending these methods to larger molecular structures and systems governed\nby periodic boundary conditions (PBC). Current methods [15, 1] excel in approximating the short-\nrange interactions, which encapsulate interactions among local atom groups within a defined distance\ncutoff, characterized by a rapid decay in real space. The primary obstacle lies in effectively capturing\nlong-range interactions within these complex systems.\nSeveral attempts have been undertaken to incorporate long-range physical interactions into geometric\nGNNs. Early studies [18, 20] combined physical equations, such as Coulomb's law, with models\ntailored for short-range interactions. Conversely, recent advancements are steering towards the"}, {"title": "2 Preliminary", "content": "Ewald Summation Ewald summation is a widely used technique in calculations of long-range\ninteractions in periodic systems [7]. Specifically, consider the pair-wise electrostatic potential as\n$V(r_{ij}) = 1/||r_{ij}||_2$. The total electrostatic potential energy $E$ can be evaluated as the infinite\nsummation over pairs under the periodic boundary condition (PBC) as\n$E = \\frac{1}{2} \\sum_{n} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\int \\int \\frac{\\rho_i(r) \\rho_j(r')}{\\left|r - r' + nc_2\\right|}drdr' = \\frac{1}{2} \\sum_{i=1}^{N} \\int \\rho_i(r) \\Phi_{[i]}(r) dr$                                               (1)\nwhere $\\rho_i(r)$ is charge density, c is the cell vector, and N is the number of atoms in a cell. The '$\nsummation is introduced to exclude the term j = i, if and only if n = 0. $\\Phi_{[i]}(r)$ represents the\npotential generated by all particles excluding the particle i. A continuous partition function that\ndelays rapidly with respect to the distance is used to separate the short-range and long-range terms.\nOne standard approach is to partition the contributions based on the error function erf:\n$\\psi_{st}(r) = \\frac{1 - erf(\\beta ||r||^2)}{||r||^2}, \\psi_{lr}(r) = \\frac{erf(\\beta ||r||^2)}{||r||^2}$                                                       (2)\nwhere $\\beta$ is a fixed constant. We assume the charge density is described by the delta function as point\ncharges, i.e. $\\rho_i (r) = q_i\\delta(r - r_i)$. With the rapid delay of the partition function, it is safe to assume\nconvergence by only considering the interaction pairs within a specific cutoff distance as\n$E^{sr} = \\frac{1}{2} \\sum_{i=1}^{N} \\int \\rho_i(r) \\sum_{j=1}^{N} \\psi_{st}(r)dr = \\frac{1}{2} \\sum_{(i,j) \\in \\varepsilon} q_i q_j \\psi_{st}(r_{ij})$                                              (3)\nwhere $\\varepsilon$ is the set of atom pairs within the cutoff distance. By the Parseval's theorem, the correspond-\ning long-range term can be expressed as the summation in the Fourier domain as\n$E^{lr} = \\frac{1}{2} \\sum_{i=1}^{N} \\int \\rho_i(r) \\psi_{lr}(r)dr = \\frac{1}{2V} \\sum_{m \\neq 0} |\\tilde{\\rho}(m)|^2 |\\tilde{\\psi}(m)|$                         (4)\nwhere V is the volume of the unit cell and $\\tilde{g}(m) = \\frac{4\\pi}{||m||^3}$ are the Fourier transformed Green\nfunction of the Coulomb potential $1/||r||_2$, and $\\tilde{\\psi}(m) = exp(-\\frac{||m||^3}{4\\beta^2})$. The Fourier-transformed\ncharge density $\\tilde{\\rho}(m)$ is defined as\n$\\tilde{\\rho}(m) = \\int \\rho(r) e^{-imr} d^3r = \\sum_{j=1}^{N} q_j e^{-im \\cdot r_j}$ (5)\nThe frequency vector m can be truncated as the long-range term quickly converges in the Fourier\ndomain. As the long-range term introduces the self-interaction energy, a correction term is also\napplied to the final potential energy as\n$E^{self} = -\\frac{1}{2} \\sum_{i=1}^{N} \\int \\rho_i(r) \\psi_{lr}(r)d^3r = -\\frac{\\beta}{2\\sqrt{\\pi}} \\sum_{i=1}^{N} q_i^2$                                          (6)\nMeshing up the Ewald Summation The traditional Ewald summation method has a computational\ncomplexity of $O(N^2)$, which becomes impractical for large-scale systems. A common approach\nto accelerate the process is to employ FFT. Currently, a variety of mesh-based implementations are\navailable. While they differ in their implementations, they share a similar conceptual foundation [6].\nInitially, point charges (particles) with their continuous coordinates, must be scattered onto grid-based\ncharge densities (meshes). The charge densities on meshes are interpolated using charge assignment\nfunction W to ensure a finite support for summation:\n$\\rho_{PM}(r_p) = \\frac{1}{V_{grid}} \\int_V W(r_p - r) \\rho(r)dr = \\frac{1}{V_{grid}} \\sum_{i=1}^{N} q_i W(r_p - r_i)$ (7)"}, {"title": "3 Method", "content": "We are interested in learning the energies and forces of 3D molecules, potentially under the assumption\nof the periodic boundary condition. Specifically, consider a 3D molecule represented as a point cloud\n$G = {x_i, Z_i}_{i \\in U}$ with atom coordinates $x_i$ and atom types $z_i$, we want to learn the molecule-level\nenergy $\\hat{E}(G)$ and atom-level forces $\\hat{F}(G)$. Different from previous work [12] which utilizes the\nvanilla Ewald summation in the Fourier domain, our framework is mesh-based which provides\ndiscrete structural information and allows for information flow between long-range and short-range\nrepresentations. Our fundamental concept is akin to these mesh-based methods mentioned in Section 2.\nWe use short-range blocks on atoms to capture bonded terms and non-bonded short-range terms\nwhile applying long-range blocks on meshes to handle long-range terms. We enable the transfer of\ninformation between atoms and meshes via the representation assignment. We further elaborate on\nthe Neural P\u00b3M architecture as follows."}, {"title": "3.1 Mesh Construction", "content": "Firstly, we construct meshes on which long-range interactions can be captured. In periodic systems\nsuch as crystals, the cell is naturally delineated. For non-periodic systems, we adopt the approach\nused by prevalent quantum chemistry software, which involves padding the bounding box with a\nspecified margin to define the cell. Detailed information about the construction of the cell can be\nfound in Appendix C. The coordinates of mesh points $x^{mjk}$ can be described as:\n$X^{mjk} = c_x + \\frac{n_i + 1/2}{N_x}, c_y + \\frac{n_j + 1/2}{N_y}, c_z + \\frac{n_k + 1/2}{N_z}$                                                             (10)\nwhere c = $[c_x, c_y, c_z]^\\intercal$ is the cell vector and $N_x, N_y, N_z$ is the number of discretizations along each\ndimension. For convenience, we can regard meshes as a point cloud with a single subscript for the\nindex as ${x_i}_{i \\in V}$."}, {"title": "3.2 Embedding Block", "content": "Once coordinates of mesh points are established, we can proceed to construct a short-range atomic\nradius graph and a bipartite radius graph between atoms and meshes as follows:\n$\\varepsilon^{short} = {e_{ij} : ||x_i - x_j||^2 \\leq r^{short}, \\forall i, j \\in U}$                                                             (11)"}, {"title": "3.3 Neural P\u00b3M Block", "content": "Short-Range Block The short-range block (Fig.2(c)) updates the atomic representations using a\ngraph neural network that is either SE(3)-equivariant or invariant. This process can be generally\nexpressed as follows:\n$h^{l+1} = GNN(h^l, \\varepsilon^{short}, f^{short})$                                                              (16)\nWe noted that the usage of radius graphs inherits the localization assumptions in geometric GNNs\nand any node is only able to aggregation information from its direct geometric neighbors in one\nshort-range block. Therefore, we naturally interpret it as capturing the short-range contribution to\nthe energy and forces. As this part involves only atoms, we call such a module Atom2Atom which\ncorresponds to the particle-particle part (short-range term) in the P3M.\nLong-Range Block The long-range block (Fig.2(d)) updates mesh representations globally. Re-\ncalling Eq.9, the key aspect is to devise the influence function $G$ and utilize FFT along with the\nconvolution theorem for efficient computation of the convolution. Within our framework, we pa-\nrameterize $G$ directly in the Fourier domain, and the updated mesh representations can be described\nas:\n$m^l \\leftarrow \\sigma (W_{long}m^l + (F^{-1}(G \\cdot F))(m^l))$ (17)"}, {"title": "4. Experimental Setup", "content": "In this section, we conduct comprehensive validations of our Neural P\u00b3M framework using diverse\ndatasets and configurations. First, we intuitively demonstrate the necessity of incorporating long-\nrange interactions through a toy dataset Ag used in Allegro [15]. Subsequently, we integrate various"}, {"title": "4.1 Experimental Setup", "content": ""}, {"title": "5 Related Work", "content": "Geometric Graph Neural Networks Geometric graph neural networks preserve equivariance\ntoward the rigid transformation in space, which can be categorized according to their emphasis on"}]}