{"title": "Adversarial Contrastive Learning Based Physics-Informed Temporal Networks for Cuffless Blood Pressure Estimation", "authors": ["Rui Wang", "Mengshi Qi", "Yingxia Shao", "Anfu Zhou", "Huadong Ma"], "abstract": "Time series data mining is immensely important in extensive applications, such as traffic, medical, and e-commerce. In this paper, we focus on medical temporal variation modeling, i.e., cuffless blood pressure (BP) monitoring which has great value in cardiovascular healthcare. Although providing a comfortable user experience, such methods are suffering from the demand for a significant amount of realistic data to train an individual model for each subject, especially considering the invasive or obtrusive BP ground-truth measurements. To tackle this challenge, we introduce a novel physics-informed temporal network (PITN) with adversarial contrastive learning to enable precise BP es-timation with very limited data. Specifically, we first enhance the physics-informed neural network (PINN) with the temporal block for investigating BP dynamics' multi-periodicity for per-sonal cardiovascular cycle modeling and temporal variation. We then employ adversarial training to generate extra physiological time series data, improving PITN's robustness in the face of sparse subject-specific training data. Furthermore, we utilize contrastive learning to capture the discriminative variations of cardiovascular physiologic phenomena. This approach aggregates physiological signals with similar blood pressure values in latent space while separating clusters of samples with dissimilar blood pressure values. Experiments on three widely-adopted datasets with different modailties (i.e., bioimpedance, PPG, millimeter-wave) demonstrate the superiority and effectiveness of the pro-posed methods over previous state-of-the-art approaches. The code is available at https://github.com/Zest86/ACL-PITN.", "sections": [{"title": "I. INTRODUCTION", "content": "Time series analysis is an important yet challenging task in the field of data mining [1], in which, medical temporal data analysis has great value in continuous health monitoring. To be specific, blood pressure (BP) is one of the most crucial indicators of cardiovascular health [2]. Two common irregularities in BP are hypertension (high blood pressure) and hypotension (low blood pressure) which can easily be overlooked despite indicating certain cardiovascular diseases such as stroke or chronic kidney issues. Therefore, accurate blood pressure estimation holds significant importance in monitoring everyday human health. To enable continuous monitoring of BP values, various wearable devices have been integrated [3] to mine valuable information for health analysis, such as graphene electronic tattoos and multiple sensors. These devices enable precise BP estimation using diverse multimodal signals, including bioimpedance, millimeter-wave, and photoplethysmography (PPG). This casts a problem of how these time series data should be analyzed to predict the subject's health information. They significantly enhance user experience and contribute to the advancement of digital health.\nTraditionally, blood pressure is measured using a cuff to compress the arm, which causes an unpleasant user expe-rience [5]. As a result, cuffless BP estimation has gained significant development in recent years to improve user com-fort. A lot of ambulatory BP monitoring platforms provide multiple solutions for continuous cuffless BP estimation in non-clinical (ambulatory) settings using wearable devices like bioimpedance [6]\u2013[8] or millimeter wave sensor [4]. Considering that these electrical signals are frequently a multi-variable measurement utilized to predict physiological states, recent developments in AI algorithms, especially deep learning mod-els, can provide great opportunities for cuffless BP estimation. This involves inferring BP using data from cuffless wearable devices (e.g., Blumio sensor, graphene electronic tattoos), by modeling the complex inherent input-output temporal rela-tionships in physiological systems. However, these methods usually require collecting significant amounts of training data as well as ground truth labels for each subject to train a powerful model. In fact, invasive or obtrusive medical-grade measurement systems (e.g., arterial lines or cuff-based (aus-cultatory or oscillometric) sphygmomanometers for peripheral blood pressure monitoring), are cumbersome and impractical in certain contexts. To address these challenges, there is a pressing need to develop advanced models for time series data that can achieve accurate BP estimation with reduced reliance on ground truth data."}, {"title": "II. RELATED WORKS", "content": "This section discusses the related work, including blood pressure monitoring, adversarial training, and contrastive learning methods."}, {"title": "A. Blood Pressure Monitoring", "content": "Blood Pressure (BP) is a significant cardiovascular pa-rameter frequently used by clinicians to assess cardiac and circulatory health [25]. Traditionally, BP is measured by cuff-based (auscultatory or oscillometric) digital BP devices, which compresses the user's arm and thus causes an unpleasant user experience [26]. Afterwards, recent work tends to ex-plore different modal cuffless BP measurement methods (e.g., bioimpedance, millimeter wave, PPG), which use wearable devices to capture pulse activities and infer BP using learning-based methods, like BiLSTM-based HNN [9], and Trans-former [5], [10]. However, they require amounts of invasive or cuff-based BP measurement results as ground truth labels to help map pulse activities to BP values. Particularly, beat-to-beat BP estimation and learning algorithms for continuous BP wave function extraction can be viewed as a time series modeling task, which is of significant importance in data mining and has attracted increasing attention in multiple areas [27]-[36]. Numerous models have been developed to analyze these beat-to-beat time series signals [37], [38], which includes time domain LSTM-based methods [39], a mixture of time and frequency domain human designed features-based approaches [37]. These methods work well in data-sufficient situations, however, in precision physiological personal mod-eling, these models often fail due to limited training data and lack of personalized modeling.\nUnlike previous work, we propose to use a more generalized method for personal modeling which extracts intraperiodic fea-tures from the original waveform, and our proposed framework is based on physics constrain and personal modeling which only uses minimal training data while retaining high accuracy."}, {"title": "B. Adversarial Training", "content": "Numerous studies have provided supporting evidence for the proposition that training with adversarial examples can effectively improve the capabilities of models [40]\u2013[42]. For instance, compared to clean examples, adversarial ones con-tribute to a more effective alignment of network represen-tations with salient data characteristics and human percep-tion [43]. Furthermore, models trained with adversarial ex-amples demonstrate heightened robustness to high-frequency noise [44]. Besides, previous works [45], [46] also demonstrate that by automatically generating adversarial examples, adver-sarial training will not decrease model performance but benefit both generalization and robustness of models. And He et al. [47] use adversarial training to generate multivariate time-series samples for forecasting tasks. Especially for Physics-Informed Neural Networks (PINNs), of which the robustness can be enhanced by fine-tuning the model with adversarial samples [48]. To the best of our knowledge, we are the first to adopt such an adversarial training method as data augmentation in BP estimation."}, {"title": "C. Contrastive Learning", "content": "Contrastive learning has shown remarkable success in deep learning tasks [49]\u2013[52]. Existing techniques like SimCLR and SimCSE [53], [54] have demonstrated superior performance in generating semantically rich image embeddings without the need for labeled data. These methods help pull instances together with the same labels in the latent space, while simul-taneously pushing clusters of samples from different classes apart. However, contrastive learning is rarely applied to time series analysis [55]. Several common image augmentations including color changes or rotation may not be as relevant to time series data. Especially in medical time series data mining. To address this insufficiency, we introduce contrastive learning here to enhance the deep models' performance by capturing discriminative variations in cardiovascular dynamics."}, {"title": "III. PRELIMINARIES", "content": "In this section, we start with the problem definition and then introduce the physics-informed neural networks to beat-to-beat BP estimation."}, {"title": "A. Problem Definition", "content": "Given the input time series signal $X \\in \\mathbb{R}^{N \\times T \\times C'}$, the goal of cuffless blood pressure is to estimate blood pressure value $y$ (e.g., systolic BP (SBP) or diastolic BP (DBP)). Let $X = [X_1,X_2,..., X_N]$ be the continuous bioimpedance (BioZ) signal with $N$ segments, length-$T$ and $C$ channels, for each segment $x_i \\in \\mathbb{R}^{T \\times C}$, we extract physiological feature $u_i \\in \\mathbb{R}^{M}$ denoted as the $M$ dimensional vector. The neural network can be formulated as $\\hat{y} = f(x, u, \\theta)$ with input $x, u$, parameter $\\theta$, and the predicted blood pressure $\\hat{y}$."}, {"title": "B. Physics-Informed Neural Networks", "content": "In this part, we review the formal definition of Physics-Informed Neural Networks (PINNs) [13]. PINNs are trained to solve regular supervised tasks while adopting several given laws of physics described by partial differential equations (PDEs) as the network residual. However, the relationships that connect wearable measurements to cardiovascular parameters are not well-defined in the form of generalized PDEs. Following [7], we adopt the idea of building physics constraints with Taylor's approximation for certain gradually changing cardiovascular phenomena (e.g., establishing the relationship between physiological features extracted from bioimpedance sensor measurements and BP). Here we can define a polynomial with Taylor's approximation around $i$-th segment as the following:\n$f_i(x, u, \\theta) = f(x_i, u_i, \\theta) + \\nabla_{u_i} f (x_i, u_i, \\theta)^T(u - u_i), $ (1)\nwhere $f_i(x, u, \\theta)$ represents the above Talyor polynomial approximated based on $i$-th segment. The first-order Jacobin matrix can be calculated discretely as $\\frac{\\partial f}{\\partial u} \\approx \\frac{1}{M} \\sum_{k=1}^{M} \\frac{\\partial f}{\\partial u_k}(u_k)$. A residual result from the difference between the neural network prediction and the Taylor polynomial evaluated at the $(i+1)$-th segment as shown in Eq. (2):\n$h_i (x_{i+1}, u_{i+1}, \\theta) = f(x_{i+1}u_{i+1}, \\theta) - \\hat{f} (x_{i+1}, u_{i+1},\\theta), $ (2)\nwhere $h_i (x_{i+1}, u_{i+1},\\theta)$ denotes the residual value evaluated at $(i+1)$-th segment using Taylor's approximation around $i$-th segment. The value of h represents a physics-based loss for the neural network. Given that h is calculated in an unsupervised way (i.e., labels of output are not used), we can calculate h for any given input sequence. We evaluate the value of h for all consecutive input segments and use the mean squared sum of this evaluation for the physics-based loss function, as shown in Eq. (3):\n$\\mathcal{L}_{physics} = \\frac{1}{(N-1)} \\sum_{i=1}^{N-1} (h_i (x_{i+1}, u_{i+1}, \\theta))^2, $ (3)\nwhere $N$ is the total number of segments.\nFollowing [7], as for physiological feature $u$, we denote the amplitude change as $u^1$, which serves as a proxy for the extent of arterial expansion. The second feature is represented by $u^2$, which captures the inverse of the relative time difference between the forward-traveling (i.e., systolic) wave and the re-flection wave, providing an estimate of the pulse wave velocity (PWV). The third feature denoted as $u^3$, which corresponds to beat-to-beat heart rate. These three physiological features can be formulated as follows:\n$u^1 = \\Delta Z_{max} - \\Delta Z_{min}, u^2 = \\frac{1}{(t_F - t_B)}, u^3 = \\frac{60}{t_j-t_A}$ (4)\nwhere $\\Delta Z_{max}, \\Delta Z_{min}$ denotes the maximum and minimum variation in the (inverted) bioimpedance signal, $(t_{F,B})$ refer to the trough point in the derivative signal and the zero-crossing point in the derivative signal transitioning to the ascent, and $(t_j,t_A)$ denote the peak point in the derivative signal, the zero-crossing point in the derivative signal transitioning to the descent, respectively."}, {"title": "IV. PROPOSED APPROACH", "content": "We give an overview of our proposed framework in Sec-tion IV-A. We explain each component of our framework including the PITN model with temporal blocks in Sec-tion IV-B, the adversarial examples generation in Section IV-C, the contrastive learning in Section IV-D. lastly, we discuss the training and inference process in Section IV-E."}, {"title": "A. Overview", "content": "As illustrated in Fig. 2, our framework comprises three key components: 1) Physics-Informed Temporal Network (PITN), 2) adversarial training, and 3) contrastive learning. In the PITN, newly designed temporal blocks are employed to ex-tract personal physiological features, and Projected Gradient Descent (PGD) is tailed to generate adversarial samples for model training augmentation. These adversarial samples, along with clean samples, are disentangled using distinct layer nor-malization (LN) layers. Additionally, we adopt the contrastive learning loss by comparing clean and adversarial samples, based on their true blood pressure (BP) values.\nThe whole process is as follows. We first pre-process differ-ent modal signals (e.g. bioimpedance signal) to obtain clean input x. Then adversarial sample $x'$ is generated using Project Gradient Descent (PGD). Both clean and adversarial inputs are fed through the temporal block for feature extraction and the output estimated BPs are denoted as $\\hat{y}$ and $\\tilde{y}$, respectively."}, {"title": "B. Physics-Informed Temporal Networks", "content": "Physics-Informed Neural Networks (PINNs) traditionally use coordinates as input while overlooking potential temporal relationships among these inputs. This omission disregards the crucial inherent temporal dependencies present in practical physical systems, leading to a failure in globally propagating initial condition constraints and capturing accurate solutions across diverse scenarios [14]. In this paper, we introduce a novel temporal modeling block to enhance the capability of PINNs in modeling time-series medical data, by extracting complex temporal variations from transformed 2D tensors using a multi-scale Inception block.\nAs illustrated in Fig. 3, we organize the temporal block in a residual way [56]. Specifically, for the length-$T$ 1D input signal $x \\in \\mathbb{R}^{T \\times C}$, we project the raw inputs into the deep features $x \\in \\mathbb{R}^{d_{model}}$ through the initial embedding layer, represented as $x^0 = Embed(x)$. For the $k$-th layer of temporal block, the input $x^{k-1} \\in \\mathbb{R}^{d_{model}}$ is processed as:\n$x^k = TemporalBlock(x^{k-1}) + x^{k-1}. $(5)\nEach temporal block is designed to capture both in-traperiod personal characteristics of physiological signals, as shown in Fig. 3. This process includes operations such as $Period()$, two $Reshape()$ functions, a 2D inception convolu-tion $Inception()$ and residual addition. Initially, the 1D signal is extended to a 2D shape by calculating:\n$A = Avg(Amp(FFT(x))), f = argmax(A), p = \\frac{T}{f}. $(6)\nwhere $FFT()$ and $Amp()$ denote the Fast Fourier Trans-form and the calculation of amplitude values, respectively. $A$ represents the calculated amplitude for each frequency, averaged by $Avg(.)$. The personal cardiovascular cycle is identified by detecting the periodic basis function as described in Eq. (6). For computational efficiency and avoidance of noises [57], only one most significant frequency is selected for personalized modeling. The entire process described in Eq. (6) can be summarized as $(A, f,p) = Period(x)$.\nFor processing extended 2D signal, the temporal block is formulated as follows:\n$X_D = Reshape_{p, f} (Padding(x^k)), $(7)\nwhere $Padding(.)$ extends the time series by zeros along the temporal dimension to ensure compatibility with $Reshape(.)$. For 2D signal encoding, $Inception(.)$ is employed, based on the InceptionNet [58], which utilizes multi-scale 2D kernels, formulated as:\n$X_D' = Inception(X_D), $(8)\nwhere $X_D' \\in \\mathbb{R}^{P \\times f \\times d_{model}}$ is the transformed 2D tensor. The learned 2D representation $X'_D$ is then transformed back to 1D space $x^k \\in \\mathbb{R}^{d_{model}}$ for subsequent stacked temporal blocks. After obtaining the temporal embeddings $x^*$, the physiological features $u$ are concatenated for regression. The estimated blood pressure value is then computed as follows:\n$\\hat{y} = RegHead([x^* || u]), $(9)\nwhere $RegHead(.)$ represents a fully connected layer, and $||$ denotes concatenation. The embedding $x^k$ encapsulates rich temporal features from the sensor signal, which complements the PINN model. By integrating these two sets of features, precise blood pressure measurements can be achieved."}, {"title": "C. Adversarial Training", "content": "Due to the limited availability of labeled physiological time series data, the results of current methods are still unsatisfac-tory. To address this issue, we enable blood pressure estimation using adversarial training by generating additional samples, while preserving the performance on clean data [40]."}, {"title": "D. Contrastive Learning", "content": "Although generating additional samples is beneficial for augmenting cuffless blood pressure data, increasing data points can lead to fluctuations in per-subject correlation [7]. Recently, contrastive learning has achieved success in self-supervised learning [60], by introducing additional constraints in the latent space to regularize embedding with the same label. Specifically, in classification tasks, similar data pairs (referred to as positive pairs) are selected for the same class, while all other pairs are treated as negative ones. However, applying contrastive learning to regression tasks remains non-trivial. In this part, we first introduce contrastive learning into the BP regression issue. Here, we define the $i$-th and $j$-th samples as a positive pair based on the following criterion:\n$[y_{shift} < |y_i - y_j|], $ (12)\nwhere $y_{shift}$ is a threshold parameter. By imposing this soft constraint, which labels inputs with similar blood pressure (BP) values, we aim to enhance the model's ability to learn cardiovascular dynamics from a single pulse wave. The con-trastive learning loss is computed between clean and adver-sarial samples. Inspired by [61], we formalize the contrastive learning loss as follows:\n$\\mathcal{L}_{con} = - \\sum_{i \\in S} P(i) \\log \\frac{exp(x'_i \\cdot x'_p/\\tau)}{\\sum_{a \\in A(i)} exp(x'_i \\cdot x'_a/\\tau)}, $ (13)\nwhere $i \\in S$ is the index of an arbitrary training sam-ple, and index $p$ denotes an adversarial sample which has $|y_p - y_i| < y_{shifit}$. Index $p$ is called positive and index $a$ is called negative. $P(i)$ and $A(i)$ are sets of positive samples and negative samples, respectively. The embeddings $x'_i$ and $x'_a$ correspond to positive/negative pairs, respectively, after $k$ layers of Temporal blocks for the input $x_i$. The symbol $\\cdot$ represents the inner (dot) product, and $\\tau$ is a scalar temperature parameter."}, {"title": "E. Training and Inference", "content": "1) Training: We formally integrate the Projected Gradient Descent (PGD) method into the regression framework, as outlined in Algorithm 1. For each clean input, we initiate the process by using PGD to generate its corresponding adversarial counterpart. Subsequently, both the clean data and its adversarial counterpart are fed into the same network but with different normalization layers (LNs) inspired by [40]. Specifically, the primary LNs are applied to the clean in-put, while the auxiliary LNs are used for the adversarial counterpart. The overall loss is then minimized with respect to the network parameters through gradient updates. It is important to note that, aside from the LN layers, all other layers are optimized concurrently for both clean inputs and their adversarial counterparts.\nDuring the training phase, both clean and adversarial sam-ples are input into the network to obtain blood pressure pre-dictions. The regression loss $\\mathcal{L}_{clean}$ and $\\mathcal{L}_{adv}$, are calculated as follows:\n$\\mathcal{L}_{clean} = \\frac{1}{S} \\sum_{i=1}^{S} (y_i - \\hat{y_i})^2, $\n$\\mathcal{L}_{adv} = \\frac{1}{S} \\sum_{i=1}^{S} (y_i - \\tilde{y_i})^2, $ (14)\nwhere $S$ denotes the total number of training samples, and $\\hat{y_i}$ and $\\tilde{y_i}$ correspond to the network outputs for the $i$-th clean example $x_i$ and adversarial example $x'_i$, respectively. The overall loss is computed by summing the regression loss from Eq. (14), the physical loss from Eq. (3), and the contrastive loss from Eq. (13). The total loss can be formulated as the following:\n$\\mathcal{L}_{total} = \\mathcal{L}_{clean} + \\mathcal{L}_{adv} + \\mathcal{L}_{con} + \\gamma \\mathcal{L}_{physics}, $ (15)\nwhere $\\gamma$ is a hyper-parameter which is set to 1 for balancing the magnitude of multiple losses.\n2) Inference: Given a test bioimpedance segment $x \\in \\mathbb{R}^{T \\times C}$ representing an entire cardiac cycle, along with physio-logical features $u \\in \\mathbb{R}^{M}$, the network output $\\hat{y} = f(x, u, \\theta)$ is obtained using primary layer normalizations (LNs). The output corresponds to the blood pressure (BP) value (e.g., systolic BP or diastolic BP)."}, {"title": "V. EXPERIMENTS", "content": "In this section, we comprehensively evaluate the perfor-mance of our proposed framework on three public benchmark datasets, containing various wearable signals for cuffless blood pressure estimation: i.e., the Graphene-HGCPT Dataset [2], the Ring-CPT Dataset [6], and the Blumio Dataset [4]. The evaluation aims at estimating systolic BP (SBP) and diastolic BP (DBP). The datasets are introduced first, followed by a description of the baselines used for comparison, and a brief outline of the evaluation protocols and implementation details. Then, the experimental results are presented along with the corresponding analysis. Finally, we conduct an ablation study on each module proposed in this paper, followed by a brief discussion."}, {"title": "A. Datasets", "content": "We conduct our experiments on Graphene-HGCPT [2], Ring-CPT [6] and Blumio [4] datasets. The first two datasets contain raw time series data obtained from a wearable bioimpedance sensor, with corresponding reference BP values acquired using a medical-grade finger cuff (Finapres NOVA). The Blumio dataset includes data from 115 subjects (aged range 20-67 years), collected using several types of wear-able sensors: PPG, applanation tonometry, and the Blumio millimeter-wave radar. Detailed information on each dataset is provided below."}, {"title": "C. Evaluation Protocols", "content": "Following the standard practice in blood pressure estima-tion [7], [10], we adopt common evaluation metrics, including root-mean-square error (RMSE), and Pearson's correlation coefficient values. RMSE is defined as follows:\n$RMSE = \\sqrt{\\frac{1}{N-S} \\sum_{i=1}^{N-S} (y_i - \\hat{y_i})^2}, $ (16)\nwhere $\\hat{y}_r$ and $y_i$ correspond to $i$-th estimated and true BP value (SBP or DBP), and $N - S$ is the total number of test samples."}, {"title": "D. Implementation Details", "content": "All implementations are based on the open-source PyTorch framework and trained on a single NVIDIA 3090 GPU. The networks are trained using the Adam optimizer with a learning rate set to 0.001. For generating controllable adversarial sam-ples, we choose a relatively small perturbation parameter $\\epsilon$ of 0.2 and set the training steps to 2. During training, we balance the magnitude of different losses by setting hyperparameters based on a parameter sensitivity analysis (see Section V-E). Specifically, we set the weight of physics loss to $\\gamma = 1$ and the minimal sensitivity of blood pressure to $y_{shift} = 2."}, {"title": "E. Results and Analysis", "content": "1) Results on Graphene-HGCPT Dataset: Table II presents a comprehensive overview of the quantitative outcomes ob-tained through our proposed framework and alternative base-line approaches. From the table", "as": "nr=\\frac{\\sum_{i=1}^{N-S} (y_i \u2013 \\bar{Y}) (\\hat{y}_i \u2013 \\bar{Y}_{true})}{\\sqrt{\\sum_{i=1}^{N-S} (y_i-\\bar{Y})^2 \\sum_{i=1}^{N-S} (\\hat{y}_i \u2013 \\bar{Y}_{true})^2"}]}