{"title": "Enhancing Online Learning Efficiency Through Heterogeneous Resource Integration with a Multi-Agent RAG System", "authors": ["Devansh Srivastav", "Hasan Md Tusfiqur Alam", "Tanisha Sharma", "Afsaneh Asaei", "Daniel Sonntag"], "abstract": "Efficient online learning requires seamless access to diverse resources such as videos, code repositories, documentation, and general web content. This poster paper introduces early-stage work on a Multi-Agent Retrieval-Augmented Generation (RAG) System designed to enhance learning efficiency by integrating these heterogeneous resources. Using specialized agents tailored for specific resource types (e.g., YouTube tutorials, GitHub repositories, documentation websites, and search engines), the system automates the retrieval and synthesis of relevant information. By streamlining the process of finding and combining knowledge, this approach reduces manual effort and enhances the learning experience. A preliminary user study confirmed the system's strong usability and moderate-high utility, demonstrating its potential to improve the efficiency of knowledge acquisition.", "sections": [{"title": "1 Introduction", "content": "In an increasingly interconnected world, the ability to access, integrate, and utilize diverse online resources is essential for effective learning and knowledge acquisition [6, 9]. With the rapid growth of digital platforms, learners often rely on a combination of heterogeneous resources, such as video tutorials, code repositories, documentation websites, and search engines, to acquire new skills and understanding concepts [1, 4]. However, navigating and synthesizing information across these disparate sources can be a time-intensive and inefficient process, creating barriers to efficient online learning [8]. The challenges associated with multi-source learning are especially evident in technical domains, where the need to quickly find accurate and relevant information is critical. For instance, a developer exploring a new framework might consult a YouTube tutorial for an overview, reference a GitHub repository for implementation details, examine the official documentation for deeper insights, and conduct general web searches for troubleshooting. Manually searching, cross-referencing, and consolidating information from these varied sources often leads to cognitive overload and suboptimal learning experiences.\nTo address these challenges, this poster paper proposes a Multi-Agent RAG system that automates the retrieval and synthesis of information from diverse online resources. By leveraging specialized agents tailored for specific resource types-such as YouTube tutorials, GitHub repositories, documentation websites, and general web searches-the system streamlines the process of finding, integrating, and utilizing knowledge. This approach reduces the manual effort required for cross-referencing and consolidating information, enabling users to focus on learning and problem-solving rather than on navigating disparate sources. The system aims to enhance the learning experience by providing a unified, user-friendly interface for targeted, real-time inquiries, making it a valuable tool for learners and developers in technical domains."}, {"title": "2 System Architecture and Implementation", "content": "The proposed system uses a Multi-Agent RAG system with GPT-40 [3] as the underlying LLM. The flow, as shown in Fig. 1, begins with a central Manager Agent that coordinates task delegation across four specialized agents, each tailored to handle a specific type of resource: YouTube Video, GitHub Repository, Documentation Website, and a Generic Search Engine. These agents operate independently, leveraging resource-specific tools and APIs to retrieve relevant information. The Manager Agent synthesizes outputs from these agents, combining them into a cohesive response to address the user's query. This modular design ensures scalability and adaptability, allowing for seamless integration of additional agents or tools as needed to meet evolving requirements.\nData from sources like YouTube transcripts, GitHub repositories, and documentation websites is preprocessed to extract relevant text. Embeddings are generated using GPT-40, to capture the semantic structure of the text. These embedding vectors, along with metadata such as source URLs and timestamps, are stored in ChromaDB, enabling precise semantic searches and contextually relevant results. For general web content, the system retrieves information dynamically based on the user's query. The user interface (UI) for the system is implemented using Streamlit [5], and it allows users to specify the URLs of the YouTube tutorial, GitHub repository, and documentation webpage as inputs. Additionally, the types of GitHub content to include such as code, issues, or pull requests, can be specified, allowing the system's focus to be tailored to specific needs. Users can then conversationally interact with the system, asking targeted questions about the provided resources as shown in Fig. 3. This functionality empowers users to focus their queries on preselected sources, reducing irrelevant results and improving the relevance and accuracy of responses. The real-time interaction capabilities of the UI ensure that users receive immediate feedback on their questions, enhancing the overall user experience. The simplicity and intuitiveness of the system make it accessible to users with varying levels of technical expertise, lowering the barrier to entry for non-technical audiences."}, {"title": "3 Preliminary Evaluation", "content": "To evaluate the system's usability and utility, a user study was conducted involving 15 participants aged 21 to 29 (mean age = 24 years; SD = 2.26), all of whom were master's-level students pursuing computer science-related courses. These participants were selected due to their familiarity with the process of learning new programming languages or frameworks using various online resources such as YouTube tutorials, GitHub repositories, and documentation websites. This familiarity enabled them to assess whether the proposed system adds value to their learning process by streamlining the integration and retrieval of information from these resources. The study used the Technology Acceptance Model (TAM) [2] questionnaire to assess technology acceptance through two key constructs: Perceived Usefulness (PU) and Perceived Ease of Use (PEU). The box plot of PU, PEU, and TAM Scores in Fig. 2a reveals considerable variability in PU ratings compared to PEU. The average PU score, scaled to a 0-100 range [7], was 75, indicating moderate-high utility. The wider spread of PU scores indicates that while some participants perceive the system as highly useful, others find its utility less apparent highlighting that the system may not fully align with the user's needs or expectations. This variability suggests the potential for targeted improvements to better meet the requirements of all users. In contrast, the average PEU score was 91.11, with the box plot showing a tighter distribution of scores. This consistency suggests that participants broadly agree on the system's strong usability. The TAM score histogram in Fig. 2b revealed most users scored above 80 with the overall TAM scores, averaging 83.06. This reflects the combined influence of the PU and PEU constructs. While the high PEU scores contribute significantly to the favourable TAM scores, the variability in PU remains a critical factor for consideration."}, {"title": "4 Conclusion and Future Work", "content": "The proposed Multi-Agent RAG system automates the retrieval and synthesis of relevant information, effectively integrating resources such as YouTube tutorials, GitHub repositories, documentation websites, and general web content. By streamlining the process of finding and combining knowledge, the system reduces manual effort and enhances the learning experience. Evaluation results highlight strong usability, with high perceived ease of use reflecting the system's accessible and user-friendly interface. While the system demonstrates considerable utility, variability in perceived usefulness indicates a need for better alignment with user expectations and task-specific needs.\nFuture work will focus on making the retrieval system dynamic, enabling it to determine when specialized agents are necessary to improve response times and reduce computational overhead. It will also involve testing with participants less familiar with technical environments to evaluate the system's acceptance across varying expertise levels, expanding resource integration to include domain-specific platforms like Stack Overflow, broadening its applicability to both technical and non-technical domains, and personalization to tailor responses to individual preferences, enhancing usability and user satisfaction."}]}