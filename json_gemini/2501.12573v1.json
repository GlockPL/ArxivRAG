{"title": "Leveraging LLMs to Create a Haptic Devices' Recommendation System", "authors": ["Yang Liu", "Haiwei Dong", "Abdulmotaleb El Saddik"], "abstract": "Haptic technology has seen significant growth, yet a lack of awareness of existing haptic device design knowledge hinders development. This paper addresses these limitations by leveraging advancements in Large Language Models (LLMs) to develop a haptic agent, focusing specifically on Grounded Force Feedback (GFF) devices recommendation. Our approach involves automating the creation of a structured haptic device database using information from research papers and product specifications. This database enables the recommendation of relevant GFF devices based on user queries. To ensure precise and contextually relevant recommendations, the system employs a dynamic retrieval method that combines both conditional and semantic searches. Benchmarking against the established UEQ and existing haptic device searching tools, the proposed haptic recommendation agent ranks in the top 10% across all UEQ categories with mean differences favoring the agent in nearly all subscales, and maintains no significant performance bias across different user groups, showcasing superior usability and user satisfaction.", "sections": [{"title": "I. INTRODUCTION", "content": "The field of haptics has experienced significant growth, expanding applications across various domains [2], [3], [5], [6], [12]. However, the dissemination and accessibility of haptic device design knowledge remain limited due to fragmentation across disciplines and complex technical descriptions. This fragmentation poses challenges to the development of effective kinesthetic experiences. Establishing a system to share and reuse existing haptic content could address this issue, thereby benefiting the field as a whole.\nSeveral initiatives, such as Haptipedia [10] and Haptiverse [8], have emerged to bridge this gap. These platforms allow hapticians from diverse backgrounds to contribute and access valuable information and resources. Despite their utility, these repositories still face limitations, such as the time-consuming and inefficient process of identifying suitable devices and extracting source haptic device data from original research papers or device specifications.\nOne promising solution to this problem is the development of a Large Language Model (LLM)-based haptic hardware recommendation system. LLMs are advanced AI systems trained on vast amounts of text data, enabling them to understand and generate human-like text in response to a wide array of prompts and questions [1], [13]. While LLMs have revolution-ized fields such as natural language processing and code gen-eration [7], [13], their application in haptics remains largely unexplored. By integrating a central repository of haptic device information with the capabilities of an LLM to understand user needs and search through the data, we can streamline the haptic hardware recommendation process for designers. This integration would bridge the existing knowledge gap and empower creators to develop richer and more effective tactile experiences.\nIn this paper, we propose a new system to address the limitations of current haptic device repositories and enhance the efficiency of haptic hardware recommendation systems. Leveraging the latest advancements in LLMs, we have de-veloped an LLM-based haptic agent with a specific focus on Grounded Force Feedback (GFF) devices recommendation. GFF represents the most mature and extensively researched"}, {"title": "II. CONSTRUCTION OF A HAPTIC AGENT", "content": "This section outlines the iterative process for constructing an LLM-based haptic device recommendation agent. The process consists of two primary subsystems: the Creator-Centric System, which automates the conversion of haptic device information from raw source materials into a structured haptic database, thereby eliminating the need for laborious manual data entry, and the End-User System, which leverages a LLM to interpret user queries and recommend relevant haptic devices based on the constructed knowledge base.\nA. Creator-Centric System\nThe creator-centric system is responsible for building the haptic device taxonomy database from raw source materials. The complete pipeline, as depicted in Fig. 2, comprises three main steps: 1) sourcing reliable haptic device material and converting it into processable information blocks; 2) con-structing the haptic device taxonomy database using an LLM based on multi-source materials; 3) human validation of the haptic device taxonomy database to finalize it for the end-user system. These steps are further described below. By automating the data processing pipeline and leveraging the LLM for taxonomy construction, the creator-centric system significantly accelerates the development of the haptic device taxonomy database utilized in the end-user system.\n1) Haptic Device Sourcing: The creator-centric system gen-erates a comprehensive haptic device taxonomy database from various sources, including academic literature and industry devices manuals and technical reports. Academic literature is obtained through a systematic search of relevant publications in major haptic journals and conferences, with primary input sources including original research papers (PDF) and existing online hyper text link (HTML). Industry resources are col-lected from prominent industry mechanisms through their of-ficial websites (HTML) and potential technical documentation (PDF). The system first parses these source files into distinct elements such as text blocks, tables, and images. Text and table blocks contain crucial device specification information necessary for extracting the taxonomy, which defines the categorization scheme for haptic device features. While image"}, {"title": "B. End-User System", "content": "The end-user system of haptic agent aims to establish a reliable haptic device recommendation agent by interpreting user queries. The entire process, illustrated in Fig.3, comprises four primary steps: Initially (Step 1), the system aggregates the end-user prompt and historical conversations into a sum-marized prompt and validates its relevance to haptic device recommendations. If the prompt is pertinent, the agent selects relevant haptic devices using both conditional and semantic searches within the haptic device database (Step 2); if not, the system skips Step 2 and only references historically recommended devices. Subsequently (Step 3), the candidates are reranked, and final device recommendations are made, incorporating necessary information into the prompts. Finally (Step 4), the agent consolidates the selected haptic device information and the summarized user prompt to make the recommendation or response. These steps are further described below.\n1) Summarizing Prompts and Routing: The end-user sys-tem operates fundamentally on the basis of input prompts. To better understand user intent with contextual information, the system integrates the user prompt with historical conversations and interprets them to formulate a new, comprehensive query. This newly generated query undergoes an assessment to de-termine its relevance to the recommendation of a GFF haptic device, similar to the tagging system in creator-centric system shown in Fig.2b).\nDepending on the assessment outcome, the haptic agent adopts different approaches to candidate selection. If the query is unrelated to haptic device recommendations, the system aggregates historically recommended devices as candidates. Conversely, if the query is determined to be related, it is"}, {"title": "2) Candidate Selection", "content": "To ensure precise haptic device recommendations, the system employs both conditional and semantic searches to identify potential new matches that align with the user's requirements and avoiding irrelevant or hallucinatory recommendations.\nIn conditional searches, the agent generates multiple tar-geted queries to extract relevant haptic devices from the SQL database. These queries are based on the summarized user question and the underlying schema of the database. This SQL-based filtering provides detailed information necessary for further aggregation, focusing on devices with the core functionalities specified in the user's query. However, not all haptic device functionalities are captured within the SQL database. For these cases, the agent employs semantic simi-larity searches. This method involves projecting summarized user prompts into a high-dimensional embedding space and performing similarity searches within this space. By doing so, the system can identify devices stored in the vector database that closely align with the user's intent, ensuring that the recommended devices match the functional requirements specified by the user.\nThis dual search approach allows the system to compile a comprehensive list of candidate devices. Conditional searches provide a structured and precise initial filter, ensuring that only devices meeting the basic technical specifications are considered. Semantic searches captures the nuanced functional attributes of haptic devices, ensuring alignment with the user's specific needs and preferences."}, {"title": "3) Reranking the Qualified Haptic Devices", "content": "Once the initial set of candidate devices is retrieved from the databases, can-didate devices are reranked based on a combination of factors from both the SQL and vector databases. The ranking score for each haptic device, given the user prompt, is calculated using the following formula:\nRank Score Device = $\\frac{N_{pos}}{N_{all}}$ + cos(VDevice, VUser)  (1)\nwhere $N_{all}$ represents the number of technical specifica-tions required by the user, and $N_{pos}$ indicates how many of these specifications the device meets. $\\frac{N_{pos}}{N_{all}}$ shows the proportion of user-required attributes met by the device, while cos(VDevice, VUser) is the cosine similarity between the de-vice's functionality embedding VDevice and the summarized user prompt Vuser.\nTypically, the system shortlists the top N devices (N = 5) for final recommendation. This selection process guarantees that even if some requirements are only partially met, po-tential candidate devices are always available. This approach enhances the user experience by offering a diverse range of options that closely match the user's preferences and needs."}, {"title": "4) Haptic Agent Response Generation", "content": "The final step involves the LLM aggregating all relevant information to generate a comprehensive response to the user's prompt. To achieve this, the system injects contextual information from the database into the LLM prompt, effectively combining the original query with detailed information about the shortlisted devices. This approach ensures that the responses are specifi-cally tailored to the user's needs and preferences.\nSpecifically, the LLM's final prompt comprises four key elements: the task description, haptic device references, a summarized user prompt, and output cues. The task description defines the model's objectives, while output cues guide its response generation and format based on the provided inputs and context. To better align outputs with user needs, the system employs a few-shot learning approach to adapt task descriptions and output cues from multiple predefined options based on the summarized user prompt. The haptic device references organizes all pertinent data about the shortlisted devices after candidate selection and reranking, including their technical specifications and functional attributes. The summarized user prompt consolidates historical context and the current user inquiry from the Step 1.\nFollowing the generation of responses based on input prompts, post-processing techniques are employed to enhance output quality and record recommended devices. Since the output of the LLM responses only consists of summaries of recommended devices, the post process are adopted to allow users to explore detailed information about the recommended devices. For device recommendation-related questions, the final recommendations include haptic device IDs and links to source documentation or papers to ensure transparency and user-friendliness. Providing direct access to source information also enhances the credibility and reliability of the recommen-dations, as users can verify the details and assess the suitability of the devices for their specific needs. Concurrently, recom-mended devices are logged to refine suggestions progressively through ongoing user interactions, ensuring increasingly per-sonalized and contextually relevant advice as conversations evolve."}, {"title": "III. EXPERIMENTS AND ANALYSIS", "content": "A. Experiment Setup\nTo evaluate the effectiveness of the proposed haptic agent and identify potential areas for improvement, we conducted a user study involving both novice and experienced hapticians. The study aimed to determine if the haptic agent serves as a valuable resource for users with varying levels of expertise, assessing its usability and benefits in helping them find suitable haptic devices. Additionally, we sought to gather user feedback to gain insights into how different user groups interact with and perceive the system. This feedback is essential for identifying areas for improvement the system to better meet the diverse needs of its users.\nThe study recruited a balanced cohort of 13 participants, each with varying levels of experience with haptic devices, as illustrated in Fig.4a). Among them, two participants were the creators of the system under study. Fig.4b) presents the"}, {"title": "B. Experimental Procedure", "content": "The user study was conducted in a structured format to evaluate interactions with the haptic agent and to collect participant feedback. Participants first received an overview of the study objectives and a brief introduction to the haptic agent, including five pre-defined questions to illustrate its capabilities. They then completed two search tasks using the haptic agent: Task 1 involved locating a suitable commercial haptic device for a potential project, while Task 2 required finding a haptic device from research papers that sparked their interest or appeared relevant for further investigation. These tasks aimed to assess the system's ability to recommend suitable devices based on user needs. To facilitate direct com-parison, participants were also asked to perform these tasks using existing resources such as Google search, Hapticpedia [10] or GPT4-Turbo. Throughout the experiments, the haptic agent adopted GPT-3.5 Turbo as the LLM backend to enhance efficiency and simplify deployment."}, {"title": "C. Experimental Results and Analysis", "content": "The UEQ used a multi-scale Likert format, ranging from -3 (strongly disagree) to +3 (strongly agree), to assess partici-pants' subjective experiences with the system [11]. The UEQ's subscales included Attractiveness, Perspicuity, Efficiency, De-pendability, Stimulation, and Novelty, providing insights into various aspects of user perception such as aesthetics, ease of use, effectiveness, reliability, engagement, and innovativeness. For each aspect in UEQ, two questions were formulated: one to capture users' feelings about the haptic agent system itself and another to facilitate comparisons with existing systems for a comprehensive analysis.\n1) Benchmark with Established UEQ: The results of the UEQ for the haptic agent are presented in Fig.4c) with corresponding mean and 95% confidence interval marked as M and CI95, respectively. These intervals were calculated using bootstrap sampling of the UEQ rating data with 10K iterations for each aspect, rather than fitting them into a specific distribution due to diverse distributions across aspects. The lower bound of CI95 is higher than 2 for most fields, except for efficiency and stimulation. Efficiency had the largest variance (0.83) among the six sub-scales, primarily related to"}, {"title": "2) Benchmark with Existing Haptic Device Searching Tool", "content": "The performance of the haptic agent surpasses existing sys-tems. Specifically, when comparing self-evaluation questions with those comparing the haptic agent to existing systems, the mean scores of the comparing group are higher across nearly all subscales, except for Stimulation. The differences in means are as follows: Attractiveness (Mdiff = 0.67), Perspicuity (Mdiff = 0.11), Efficiency (Mdiff = 0.34), Dependability (Mdiff = 0.22), Stimulation (Mdiff = -0.34), and Novelty (Mdiff = 0.11). These results indicate that participants rated the haptic agent higher when making comparisons. This"}, {"title": "3) User Insights", "content": "Based on responses from open-ended questions in the questionnaire and interviews, users over-whelmingly found the haptic agent to be innovative and reli-able, capable of delivering accurate information without errors.\nThis was particularly evident in Task 2, focused on locating haptic research papers, where the agent outperformed existing generative AI by providing more efficient and reliable results. Users also noted enhanced efficiency in finding haptic devices in both tasks, especially those less familiar with haptics or unsure of specific device criteria. Feedback highlighted the agent's ability to start with partially matched devices based on vague prompts and refine recommendations dynamically during interactions. However, concerns were raised about the purely text-based interface's reduced efficiency and en-gagement compared to image-supported platforms like Hap-ticpedia [10]. Additionally, the haptic agent's performance lagged behind Hapticpedia in interaction speed due to multiple LLM calls, where this issue is expected to improve with advancements in LLM algorithms, deployment optimizations, and hardware enhancements [4]. Users with limited LLM experience reported that they needed more time and effort to find effective prompting patterns, which potentially reduced efficiency, especially for initial queries."}, {"title": "IV. CONCLUSION", "content": "In conclusion, this paper presents a new system to address-ing the limitations of current haptic device repositories by leveraging advancements in LLMs to develop an intelligent haptic device recommendation agent focused on GFF devices. Our system automates the creation of a structured database from diverse sources and provides precise, contextually rele-vant recommendations through a dynamic RAG method. User evaluations indicate superior performance in usability and satisfaction compared to existing systems."}]}