{"title": "Quantum Artificial Intelligence: A Brief Survey", "authors": ["Matthias Klusch", "J\u00f6rg L\u00e4ssig", "Daniel M\u00fcssig", "Antonio Macaluso", "Frank K. Wilhelm"], "abstract": "Quantum Artificial Intelligence (QAI) is the intersection of quantum computing and AI, a technological synergy with expected significant benefits for both. In this paper, we provide a brief overview of what has been achieved in QAI so far and point to some open questions for future research. In particular, we summarize some major key findings on the feasability and the potential of using quantum computing for solving computationally hard problems in various subfields of AI, and vice versa, the leveraging of AI methods for building and operating quantum computing devices.", "sections": [{"title": "1 Introduction", "content": "It is known that quantum computing can simulate and even go beyond classical computing in terms of computational speedup in theory [3,141,164] for quite some time. But initial versions of real quantum computing hardware and frameworks for quantum programming became available only in about the past decade. Even the Quantum Internet of networked quantum computers and with secure quantum communication channels, long time considered as mere science fiction, is on its way with early stage prototypes available [28,64,38]. On the other hand, artificial intelligence (AI) [167] is commonly considered as one of the most disruptive key technologies of our time for industry and business, our private and social life, notwithstanding the challenges of its future, trustworthy and controlled use for the benefit of the people affected by it.\nQuantum Artificial Intelligence (QAI, Quantum AI) is the intersection of both technologies (cf. Fig. 1) and concerned with the investigation of the feasability and the potential of leveraging quantum computing for AI, and vice versa, AI for quantum computing [162]. While quantum machine learning [18,19] is currently the most popular application [172,51,57,130], quantum AI goes much beyond covering more subfields of AI [167,73], such as quantum reasoning [40,39,22], quantum automated planning and scheduling (QPS), quantum natural language processing (QNLP), quantum computer vision (QCV), and quantum agents and multi-agent systems (QMAS). Notably, each of these QAI subfields covers research and development in both directions; for example, QML refers to both the use of quantum computing for machine learning and vice versa. In this respect, it would be premature to follow the current hype cycle around QML.\nThough QAI still is a nascent and inherently interdisciplinary research field, remarkable progress has been already made in the recent past. It has been shown, in part also experimentally on real quantum computers of the current NISQ (Noisy Intermediate-Scale Quantum) era, that tailored QAI algorithms could indeed make a positive difference in solving certain computationally hard problems such as for combinatorial optimization in AI applications compared to classical solutions. So far, the potential quantum utility of direct quantum or hybrid quantum-classical methods of QAI is under investigation for applications in diverse domains such as manufacturing, automated driving, transport and logistics, energy management, healthcare, finance, aerospace, climate and earth sciences, and pharmaceutical and chemical industries. In this regard, quantum AI use cases are concerned with, for example, portfolio optimization in finance [160], traffic management [204], capacitive vehicle routing [67,86], safe navigation of self-driving vehicles [174], satellite network constellation [189] and mission planning [156], energy network management [23,135], job-shop scheduling in manufacturing [169], weather simulation and forecasting [90, 74,143,181] and simulation of materials and chemicals for drug discovery [153,98,123] and material design [34,10]. On the other hand, there is active research on the use of QAI algorithms that leverage AI methods, in particular from machine learning, to address challenges of the building and operation of quantum computing devices. These research activities in both directions of QAI are in part also fueled and influenced by the made progress and still ongoing race in building ever more powerful quantum computing devices and network, and vice versa. Currently, the global market value of QAI applications on future quantum computing devices in general is estimated to be about eighteen billion USD by 2030 [11], and three to five billion USD for the automotive industry by 2035 in particular [163,26]. This emphasizes that quantum AI has graduated from being a mere academic niche to a topic with a potential future beyond the current hype. However, it remains unclear when QAI methods and their applications, including those mentioned above, can be used and commercialized at large in practice, as this would require way more quantum computational resources and fault tolerance than current quantum computers have but future computing devices could provide [101].\nRemarkably, as in AI, there are also discussions related to QAI on ethical issues of quantum computing such as those concerned with non-transparency of information processing in a \"quantum-box\", or clashes of quantum privacy with security demands [150], as well as on the role of quantum computing in neuroscience (quantum neuroscience). The latter includes speculative multiscale simulations of the human brain [179] and explanation of some consciousness-related brain functions [97], though not of how the human brain produces thoughts [115], as well as a better representation of and inference means for certain psychological models in cognitive science (quantum cognition) [151]. One should keep in mind, that these concerns apply in similar form to classical stochastic algorithms as well.\nIn this paper, we provide a first overview of selected methods, use cases and insights from research in the interdisciplinary field of QAI for both its directions, without any claim to completeness. In Section 2, we informally recall the basics of quantum computing from the computer science perspective only in very brief; readers who are roughly familiar with them can easily skip this section. Section 3 then summarizes selected key findings of research on quantum computing for AI in several subfields of QAI. The same is done for research on AI for quantum computing in Section 4 before we conclude in Section 5."}, {"title": "2 Quantum Computing in a Nutshell", "content": "Quantum computing [141,164] harnesses the principles of quantum mechanics [159] to process information and perform computations, potentially surpassing the capabilities of classical computers. There are two primary models of quantum computing. The first is gate-based quantum computing, which functions analogously to classical computing by using quantum gates to manipulate quantum information. This model facilitates the design of complex quantum circuits, which are the quantum counterparts to Boolean circuits in classical computation.\nIn contrast, adiabatic quantum computing [9] is based on the adiabatic theorem and, in principle, equivalent to quantum gate-based computing [4]. In this model, the quantum system, which represents the search space of the given computational problem, gradually evolves from an initial, simple quantum state to a final state that encodes the problem's solution. The choice between these models depends on the nature of the problem being addressed and the availability in terms of hardware."}, {"title": "2.1 Gate-Based Quantum Computing", "content": "The basic unit of information in classical information processing is a single bit that can exist in one of two states, represented as the integer numbers 0 or 1. Consequently, a sequence of n bits can represent 2n unique values, with the bit register being in only one of these 2n possible states. A quantum bit (qubit) is the quantum analog of a bit and can assume the two basic states |0) = (\\begin{matrix} 1 \\\\ 0 \\end{matrix} ) and |1) = (\\begin{matrix} 0 \\\\ 1 \\end{matrix} ). Qubits adhere to the principles of quantum mechanics and can be implemented using various physical systems, such as the spin states of subatomic particles, ion traps, neutral atoms, or superconducting circuits.\nOne of the intriguing properties of qubits is their ability to exist not just in the state |0) or |1) but in a superposition of both. An arbitrary single-qubit state can be expressed as:\n$\\left| \\psi \\right\\rangle = \\alpha\\left| 0 \\right\\rangle + \\beta\\left| 1 \\right\\rangle =\\left(\\begin{array}{l} \\alpha \\\\ \\beta \\end{array}\\right), \\qquad (1)$\nwhere the coefficients a and \u03b2 are complex numbers that satisfy the normalization condition |a|2+|3|2 = 1. When building multi-qubit systems, an n-qubit system provides access to a 2n-dimensional Hilbert space, where an arbitrary pure quantum state is defined as\n$\\left| \\psi \\right\\rangle=c_{0}\\left| 0 \\ldots 0 \\right\\rangle+c_{1}\\left| 0 \\ldots 1 \\right\\rangle+\\ldots+c_{2^{n}-1}\\left| 1 \\ldots 1 \\right\\rangle, \\qquad(2)$\n$\\sum_{i=0}^{2^{n}-1}\\left|c_{i}\\right|^{2}=1$ with ci \u2208 C and . The multi-qubit basis states, e.g., |0\u2026\u20261) = |0) \u2297 |0) \u2297 |0) \u2297 |1), are tensor products of the individual qubits. The state \u03c8) \u2192 [Co, C1,\u2026\u2026,CN-1]t possesses N = 2n complex amplitudes, whose absolute squared values must sum to one. Thus, due to the principle of superposition, an n-qubit system is capable of encoding information that scales as 2n, while classical systems are limited to n. A multi-qubit state is entangled if the states of its component qubits cannot be described independently of each other as a tensor product. Quantum entanglement allows for non-local correlations such that operating on one component qubit changes the states of others instantaneously and independent of their separate locations; a prominent example are the entangled 2-qubit Bell states.\nIn order for computation to be possible, there must be a way to manipulate quantum states. This is achieved by operators that describe the evolution of a closed quantum system with unitary. In order to preserve the normalitation, these have to be unitary, and therefore reversible, that is, for a quantum operator U must hold that U+U = I. In fact, any operation on qubits can be described as a matrix operator. Notice that this is fundamentally different from classical computing, where operations are not required to be unitary and not even reversible.\nAnother crucial difference between classical and quantum computation is how information can be accessed after processing. In classical computing, the state of each bit is well-defined and can be directly observed at any time, revealing whether it is in a state of 0 or 1. This observation does not alter the state of the bits, allowing us to access the exact information stored in the system without any disturbance. However, as mentioned above, in quantum systems the state of a qubit is generally a superposition of multiple states, meaning it can exist in a combination of both 0 and 1 simultaneously. To extract information from a quantum system, one must measure an observable physical quantity which from now on we assume to be the binary number associated with the computational basis states. This measurement process forces the quantum system to collapse from its superposition into one of the possible definite states. Crucially, this collapse is probabilistic, meaning that the outcome of the measurement cannot be precisely predicted but rather is governed by the amplitudes of the quantum state. Furthermore, the measurement fundamentally alters the state of the system, making it impossible to retrieve the original superposition state after the measurement is performed. This is a key distinction from classical systems, where observation is non-intrusive and reversible.\nFor the quantum state given by Eq. (1), the measurement will yield one of the basis states |0) or |1) with classical output 0 or 1, respectively The probability of observing |0) is |\u03b1|2, and the probability of observing |1) is |\u03b2|2, with the total probability summing to 1 (|\u03b1|\u00b2 + |3|2 = 1). After measurement, the qubit will be found in the state corresponding to the measurement outcome. For the state described in Eq. (2), the measurement outcome will be one of the 2n possible basis states. The probability of observing a particular multi-qubit state |i) = |b1b2...bn) is given by |Cindex|2, where index represents the binary number corresponding to the combination b\u2081b2...bn, and the total probability is 1 ($\\sum_{i=0}^{2^{n}-1}\\left|c_{i}\\right|^{2}=1$ ). After the measurement, the system collapses to the state observed, with the measurement outcome determining the final state of the system. Quantum state measurement is the only non-unitary (irreversible) operation in an ideal quantum computer, and according to the no-cloning theorem of quantum computing, in contrast to classical computing, it is not possible to generate an identical copy of an arbitrary quantum state. Note that the squaring of the amplitude over probabilities allows for negative and arbitrarily complex-valued amplitudes. These account for destructive interference which can be used in quantum alogortihms to supress undesired solution. This interference is a crucial distinction of quantum algorithms relative to classical stocahstic algorithms. Note also, that the need for the state vector to retain its norm (from which we infered that operations have to be unitary) can be understood as conservation of total probability.\nThe aforementioned basic concepts of quantum computation are direct consequences of the postulates of quantum mechanics and provide a foundation for exploring how these principles can be applied in practice through quantum circuits, which function as the quantum counterpart of classical algorithms.\nA quantum circuit typically begins with qubits in a defined initial state, followed by the application of quantum gates that transform these states according to the intended computation. The circuit concludes with a measurement, which extracts classical information by collapsing the qubits into definite classical states. Quantum circuit diagrams serve as a useful tool for visualizing quantum algorithms. Individual qubits are represented as horizontal lines, and the sequence of operations, also known as gates, is indicated by their position along these lines."}, {"title": "2.2 Adiabatic Quantum Computing", "content": "As an alternative, adiabatic quantum computing (AQC) [9] performs problem-solving by gradually evolving a quantum system toward its lowest energy state as a solution. According to the adiabatic theorem, this gradual evolution allows the system to remain in its ground state throughout the process, theoretically enabling it to perform any quantum computation. This process is designed to encode the solution to a given computational problem into this ground state, and AQC theoretically possesses the capability to perform any quantum computation, rendering it a universal approach to quantum computing. However, this theoretical potential relies on ideal conditions, including a perfectly isolated system, the ability to exert extremely precise control, and sufficiently long computation times to mitigate errors. Note that the total time for this evolution is controlled by the inverse of the energy gap, i.e., the difference between the two lowest energy eigenvalues during the sytem evolution, and an efficient adiabatic quantum algorithm is characterized by this gap shrinking only polynomially with problem size.\nA more practical application of AQC principles is Quantum Annealing (QA) [93], which involves guiding a quantum system towards a low-energy state but is specifically focused on finding approximate solutions to combinatorial optimization problems. Consequently, QA does not fully meet the criteria for universal quantum computing, making it more suitable for specific problem-solving scenarios rather than serving as a versatile computational tool akin to AQC.\nIn quantum annealing, computational problems are formulated as Quadratic Unconstrained Binary Optimization (QUBO) problems, mathematically described as follows:\n$\\min imize Q(x) = \\sum_{i,j}Q_{ij} x_{i} x_{j}\\qquad (3)$\nwhere x is a vector of binary variables xi (with xi \u2208 {0,1}), and Qij are the coefficients of the quadratic terms. The goal is to find the binary vector x that minimizes the value of Q(x).\nIn practice, while QA does not guarantee the correct solution, it remains a powerful tool for addressing classically intractable problems. Notably, the QUBO formulation in Eq. (3) is NP-complete, implying that any NP-hard problem can be mapped into a QUBO formulation with only a polynomial overhead. This suggests that rather than viewing direct QA-based quantum algorithms as merely an alternative to classical or direct gate-based quantum computing for solving QUBO problems, it should be considered a tool that leverages quantum mechanics to provide potential advantages in specific cases, which warrant further exploration in practice."}, {"title": "2.3 Hybrid Quantum-Classical Computation", "content": "While several theoretical results demonstrate that direct (gate-based or AQC-based) quantum algorithms can solve complex problems more efficiently than classical alternatives in terms of worst-case time complexity [55,171,15], these results invariably assume the existence of quantum computers with a very low logical error rates. This assumption necessitates the use of quantum error correction to safeguard quantum information against errors and noise that may arise during computation. Quantum computers are inherently sensitive to external disturbances, hardware imperfections, and spurious decoherence, all of which can introduce errors. In contrast, NISQ devices, which represent the current state of quantum hardware, operate without full fault tolerance and have limited computational capabilities. Such machines are not yet powerful enough to outperform classical computers and it is an open challenge to find clear quandaum advantage in NISQ.\nConsequently, the concept of hybrid quantum-classical computation has been proposed to exploit near-term quantum devices and benefit from the anticipated performance boost offered by quantum technologies. Specifically, in the domain of gate-based quantum computing, variational quantum algorithms (VQAs) have been developed to address optimization problems by utilizing both classical and quantum resources. The quantum component, often referred to as a variational quantum circuit (VQC) or parameterized quantum circuit (PQC), plays a critical role in this hybrid approach.\nWithin this framework, the classical input data x is initially pre-processed on a classical device to determine a normalized input quantum state for the PQC. Following this pre-processing, a VQA is executed, which comprises two sets of quantum gates: Us and U(0).\nQuantum operations Us represent the data encoding (or embedding) step and consist of a sequence of quantum gates designed to generate a quantum state that represents the classical input x as accurately as possible. The structure of Us is task-dependent, varying according to the specific computational problem being addressed. For instance, in combinatorial optimization problems, the encoding step involves generating a quantum state that represents the classical search space of the original problem. A prominent example is the Quantum Approximate Optimization Algorithm (QAOA) [66], a well-known variational quantum algorithm for solving QUBO problems. In QAOA, the initial step of data encoding consists of generating a quantum state where the basis states encode all possible binary strings that might be solutions to the problem. Conversely, in the context of machine learning, the encoding step involves mapping the set of features into a quantum state. This mapping can be achieved through various methods, such as using the basis states, amplitude encoding, or other encoding strategies. Each of these approaches has its own advantages and disadvantages. For a more detailed discussion of these methods and their implications, see [192].\nSubsequently, a sequence of parameterized quantum gates U(0), referred to as the Ansatz, is applied with randomly initialized parameters 0. After the execution of the PQC, which includes the quantum gates Us and U(0), the result of the measurement is classically post-processed to obtain a classical output f(x). This output is then utilized to evaluate a task-dependent cost function. Based on this evaluation, the parameters of the PQC are updated using gradient descent or another optimization algorithm. This process is repeated iteratively in a closed loop between the classical and quantum hardware until the optimization converges or the desired performance is achieved.\nThe strength of this approach lies in the adaptability of the architecture, which allows for customization through learning of the gate parameters in the PQC of the VQA to address various use cases. The entire procedure is depicted in Fig. 4.\nQuantum annealing can also be utilized within a hybrid framework. In this case, the approach involves designing hybrid quantum-classical algorithms that iteratively generate large QUBO problems, which can then be solved using quantum annealing. Here, only a specific computational component is delegated to quantum annealing, while the rest of the computation remains classical."}, {"title": "3 Quantum Computing for AI", "content": "One direction of quantum AI refers to the use of quantum computing for solving computational problems in AI. As mentioned above, this concerns all subfields of AI such as automated planning, machine learning, computer vision, natural language processing, and multiagent systems, for each of which we provide selected results and insights in this section. The other direction of QAI, namely, AI for quantum computing is covered in Section 4."}, {"title": "3.1 Quantum Machine Learning", "content": "Quantum machine learning (QML) seeks to harness the principles of quantum computing to perform traditional machine learning (ML) tasks [21,19,18]. Although theoretical research indicates that fault-tolerant quantum computing could accelerate the training of various ML algorithms providing a computational advantage in terms of worst-case time complexity [161,125, 126], current quantum hardware is not yet powerful enough to implement these algorithms effectively. Consequently, in QML the focus has shifted towards leveraging hybrid quantum-classical computation with VQAs (cf. Section 2.3), which aims to exploit gate-based near-term quantum devices to develop innovative models and potentially achieve performance gains from quantum technologies.\nThe hybrid QML approach with the use of VQAs (cf. Section 2.3) shares significant similarities with the training of classical neural networks (NNs), notably in their reliance on parameterized models, gradient-based optimization techniques, and structured layers for approximating complex functions. As such, this common ground has paved the way for the development of quantum neural networks (QNNs), which essentially are the use of PQCs for machine learning applications. QNNs are widely used in both supervised and reinforcement learning. In quantum supervised learning [124], these algorithms typically involve fitting a parameterized function to a training dataset, that can represent complex hypothesis functions that classical models might struggle with. Therefore, the use of QNNs in supervised learning seeks to identify problem classes that are intractable for classical approaches from a learning perspective, rather than expedite the training process in terms of worst-time complexity.\nSimilarly, QNNs can be effectively utilized in quantum reinforcement learning (QRL) [134,58]. In reinforcement learning (RL), an agent interacts with an environment to maximize cumulative rewards by learning optimal policies. Hybrid quantum-classical approaches of RL can employ QNNs to encode and process states and actions within the environment, leveraging a potential quantum advantage in representing and exploring complex state-action spaces. QNNs can be used to approximate value functions or policy distributions, while classical components handle the optimization of these quantum parameters through iterative updates. This hybrid strategy can enhance the learning efficiency and representational power of RL algorithms, potentially solving problems that are challenging for classical methods alone.\nRecently, a quantum deep reinforcement learning method has been developed and experimentally evaluated on noisy gate-based quantum simulation for the use case of safe navigation by self-driving cars that do not need a quantum device on-board during testing but training only [174]. The QRL method leverages the model capacity of quantum neural networks, only requires a few dozen noisy qubits and relies on hybrid quantum-classical computations to be effective. The experimental evaluation provided evidence in favor of quantum utility in terms of faster and more stable training with fewer parameters compared to the classical counterpart. These results suggest that existing noisy quantum computing devices with a few tens of qubits might soon become viable alternatives to overcome the challenges faced by classical methods in, for example, enhancing autonomous systems and optimizing large distribution networks through quantum-supported reinforcement learning.\nThe focus on using quantum algorithms for unsupervised learning primarily involves fault-tolerant quantum approaches that can theoretically provide a computational speedup in terms of worst-time complexity. Key advancements include the introduction of quantum algorithms that utilize amplification techniques in clustering problems [5,59], the proposal of a quantum k-means and k-nearest centroid algorithms [119,95], and recent efforts focused on graph sparsification achieving by leveraging superposition access to classically stored graph weights [13]."}, {"title": "3.2 Quantum Planning and Scheduling", "content": "Quantum automated planning and scheduling (QPS) research focuses on quantum-supported means of automated planning (QP) and scheduling (QS) in AI, and vice versa. Automated planning methods in AI can be divided into online and offline planning each with certainty or under uncertainty. Offline planning is decoupled from the subsequent execution of produced plans and gets no feedback about it during planning, while online planning is interleaved with a controlled action execution in a closed-loop manner. In many real-world applications, action planning under uncertainty is required that allows for actions with non-deterministic effects and incomplete initial states caused by only partial observability of the environment such as in partially observable Markov decision processes (POMDP). Depending on the chosen technique of planning with certainty or under uncertainty, a plan can take the form of, for example, a finite sequence of primitive actions, a conditional action plan, or an action policy on belief states with maximal expected utility. For a more comprehensive introduction to automated planning, we refer the interested reader to, for example, [70].\nIn any case, automated planning methods in AI are known to be computationally expensive, such as classical (state-space or planning graph-based) action planning already being PSPACE-complete, while belief states in POMDPs and non-determinism as well as interactive POMDPs make it even worse exponentially. Nevertheless, automated planning of symbolic AI is considered more explainable in general than deep learning-based POMDP solutions, and approximated online POMDP planning methods are successfully used in many practical applications such as robot navigation. The fundamental question therefore arises as to whether, to what extent and under which conditions quantum-supported AI planning, particularly for (interactive) POMDPs, is feasible and may lead to a significant reduction of planning time and space compared to the classical counterparts. As of today, not much is known in this regard yet.\nFor example, a classical POMDP models an agent acting in a partially observable stochastic environment. A first quantum-based POMDP model was proposed in [17], which is intended to generalize POMDPs and has the same complexity for the strategy (plan) existence problem, i.e. is PSPACE-hard for a polynomial (undecidable for infinite) time horizon. In this model, actions and observation process are represented by a superoperator on quantum-encoded environment states assumed by the agent. However, it is unclear to what extent this model is useful for quantum-supported planning and learning agents in POMDPs in concrete terms.\nIn [47], a quantum MDP model (QMDP) is defined through a potential energy function of the quantum system under consideration. It is shown how model-based learning by approximate value iteration for POMDPS can be applied to such a model. However, how QMDPs are modeled when the energy function is unknown, and whether this model may serve as a basis for quantum-supported approximated interactive POMDP planning is not known either. Another open question is to what extent an adaptation of hybrid neuro-symbolic methods for learning-assisted planning in POMDPs [152,50] for quantum computing would be feasible and beneficial.\nIn [32], a quantum-supported method for optimal path planning in robot navigation is presented that leverages Grover's quantum search in a classical tree-search procedure. It is simulated for gate-based quantum computation and shown theoretically to always provide a quantum speedup up to that of the Grover algorithm [76]. Earlier work [138] proposes a QP method that adapts and benefits from standard quantum search for planning in MDPs using Dynamic Programming (DP) and a heuristic for controlling a discrete time quantum walk on the MDP state graph, which reduces the number of states visited during a DP iteration compared to classical.\nQuantum scheduling (QS) research actually focuses on the use of quantum computation for solving the NP-complete problem of job shop scheduling (JSS) and its modern variants that allow for more flexibility (FJSS) in the context of Industry 4.0. Roughly, the FJSS problem is to find a feasible schedule that assigns constrained job operations to multi-purpose machines with, for example, a minimal production makespan in total. There exist many different kinds of variants of this problem and classical approximate solution methods based on genetic algorithms, artificial neural networks, particle swarm optimization and reinforcement learning [202,109]. In agent-based solutions for FJSS, individual machines, carriers, jobs or individual operations are often represented by agents in a respective multi-agent system.\nHowever, there are only very few quantum-supported solution methods for some variants of the FJSS problem yet. These QS methods are limited to quantum genetic algorithms and quantum PSO, in which iterative evolutionary sets of suitably quantum-encoded individuals can lead to approximate optimal solutions, for example by means of quantum rotations [203,37,178].\nIn [7,6], an iterative quantum-supported hybrid MILP (Mixed Integer Linear Programming)-based optimal solution of the JSS problem is decomposed in a way that is suitable for hybrid quantum-classical computing. The hybrid method solves a relaxed MILP problem of the original JSS problem with a classical MILP solver to find possible optimal assignments of jobs to machines. This is followed by solving related sequencing QUBO problems that correspond to individual machines with a D-Wave quantum annealer to search for feasible schedules based on those assignments. The reported experimental results show a significant computational time speedup of this method over the classical solver Gurobi for JSS problem instances comprising of up to 280 machines and jobs in a specific scheduling dataset.\nMulti-agent reinforcement learning (MARL) is one classical solution approach for FJSS with dynamic changes of optimization conditions and configurations [117,85, 145]. Currently, there are only very few initial, feasible approaches of quantum-supported MARL (QMARL) for this specific problem class [146,200] but without any experimental analysis and concrete insights on their benefits compared to classical counterparts yet.\nAnother NP-hard problem in the AI domain of automated planning and scheduling is the bin-packing problem, which is to find the minimum number of bins of fixed capacity required to pack a set of items of varying size without exceeding the bin capacities. Recently, a first QS method has been presented that solves this problem reformulated as a QUBO problem on a quantum annealer [30]. The method utilizes the Augmented Lagrangian method to account for the bin packing constraints and heuristic penalty multipliers, scales with increasing problem size but does not outperform the selected classical counterpart in runtime yet due to current limitations of quantum annealing hardware.\nIt is apparent that more in-depth theoretical and experimental investigations are needed on which types of computationally hard AI planning may benefit from the adoption of direct or hybrid quantum computation under which conditions and assumptions of integration compared to classical solutions in general, and for which practical use cases in particular. Research in the other direction of QPS, that is, the use of AI planning and scheduling for advanced manufacturing and operating quantum devices, is as relevant as the use of AI for the same purpose regarding classical computing devices but actually occurs less prominent in the literature (cf. Sect. 4)."}, {"title": "3.3 Quantum Computer Vision", "content": "Quantum computer vision (QCV) research is mainly concerned with the investigation of the feasability and benefits of quantum-supported computer vision methods for the perception of intelligent agents in AI. Research in the other direction of QCV, that is, the usage of computer vision methods for advances in the building and operating quantum computing devices actually appears rather neglected.\nThe QCV subfield of QAI formed in the early 2000s [183] and attracted renewed attention with recent advances in quantum image processing. The latter requires the representation and processing of a given digital image on a quantum computer, and the final conversion of the processed quantum image into a classical image. Quantum image representations such as qubit lattices and normal arbitrary quantum superposition states store color image information using amplitudes, phases, or basis quantum states [114,110]. For the processing of quantum represented images, there are already quite a few, mostly quantum annealing-based methods available for tasks such as image recognition and classification [29,182,96], image synthesis [53], object tracking and detection [111], graph matching [170], as well as for motion and image segmentation [14,187,188].\nFor example, the problem of unsupervised graph-based image segmentation is (a) to construct a weighted undirected graph from a given image with set of vertices (pixels), set of edges (synergies between pixels), and set of weights (similarity between pixels), and then (2) to find the best partition into disjoint subsets such that the sum of weights between different subsets is minimized. This NP-hard problem has been recently solved in [187] with a quantum-supported method that first reformulates segmentation as a graph-cut optimization problem, maps it into the topology of and runs it on the considered quantum annealer, in this case, a D-Wave Advantage, then retrieves the results of quantum measurement and eventually generates the segmentation mask from them. Despite the shared and remote access of the D-Wave device, comparative experimental evaluation results revealed that this QCV method outperformed the classical solver Gurobi on the same task in terms of runtime with only slightly sub-optimal solution quality. In this regard, it is particularly valuable when collecting labeled data is costly and speed is of essence. In [188], quantum algorithms for the same purpose are analyzed that allow to scale the number of qubits exponentially with respect to the input size to use current gate-based quantum computing devices.\nMotion segmentation, on the other hand, aims to detect independent motions in two or several input images. The QCV method presented in [14] solves this problem reformulated as a QUBO problem directly on a D-Wave quantum annealer with reported on-par performance compared to classical solutions.\nRecently, in [182], several variations of a quantum hybrid vision transformer were analyzed for solving an image classification problem in high-energy physics with the result of, again, an on-par performance compared to classical counterparts with a similar number of model parameters. For small-scale medical image datasets, it has been shown in [96] that quantum transformer models with quantum attention layers may perform better than classical vision transformers for this purpose in terms of asymptotic run time and fewer model parameters.\nIn [53], two quantum hybrid diffusion models for image synthesis are presented. The first model replaces convolutional ResNet layers with hybrid quantum-classical variational quantum circuits only at the vertex, while the second additionally does so in the second block of the encoder part. The experimental evaluation via simulation in PennyLane indicate that such models are of benefit in the sense that they synthesize better-quality images and converge faster with a lower number of parameters to train."}, {"title": "3.4 Quantum Natural Language Processing", "content": "Quantum natural language processing (QNLP) is concerned with the representation and processing of natural language through quantum computational means. The other direction of QNLP, that is the utilization of NLP means for quantum computing tasks remains fully unexplored yet. As summarized in [77], most QNLP works leverage quantum superposition to model uncertainties and ambiguity in language or entanglement to describe both composition and distribution of syntax and semantics effectively. The current QNLP methods are mainly developed for the NLP tasks of question answering, text classification and translation. In [42], Coecke and colleagues show that QNLP is not just the quantum counterpart to NLP but allows to combine linguistic structure and semantics or meanings in one quantum computational system, in fact, represent this kind of knowledge in respectively composed variational quantum circuits more efficiently and inherently than in the classical case. The common basis of most QNLP approaches is the Categorical Distributional Compositional (DisCoCat) diagram model for natural language [45] with which one can encode the meaning of words and phrases as quantum states and processes, hence as quantum circuits. In this regard, the implicit flows of meanings in respective diagrammatic reasoning due to the underlying structure are exposed rather than encoded in black boxes of neural transformer-based large language models (LLM) in classical NLP.\nThe potential speedup of running the DisCoCat model on quantum hardware was discussed first in [201], while in [196,112] the potential of quantum computing techniques such as quantum search and quantum neural networks for faster training and testing of LLMs, and vice versa, is conceptually discussed but not yet demonstrated in practice. In this context, complementary work includes quantum-inspired approaches such as the recently reported compression of LLMs with quantum-inspired tensor networks by supposedly more than 80% without compromising accuracy [120].\nHowever, more advanced experimental insights on and development of hybrid quantum-classical QNLP methods, in particular quantum neural networks, for NLP tasks are needed but limited by current NISQ quantum computing hardware. For example, as in QCV, the potential of quantum-supported transformers compared to classical transformer neural network architectures might be worth to investigate. For more information on QNLP in Quantum AI, we refer the interested reader to, for example, [196,77,42]"}, {"title": "3.5 Quantum Agents and Multi-Agent Systems", "content": "Quantum multi-agent systems (QMAS) research mainly focuses on two strains: (1) development of autonomous agents and multi-agent systems for hybrid quantum-classical computational environments, and (2) quantum-supported methods for coordination and cooperation in multi-agent systems. In modern AI, the concept of an intelligent agent and multi-"}]}