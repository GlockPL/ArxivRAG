{"title": "Narrative-Driven Travel Planning: Geoculturally-Grounded Script Generation with Evolutionary Itinerary Optimization", "authors": ["Ran Ding", "Ziyu Zhang", "Ying Zhu", "Ziqian Kong", "Peilan Xu"], "abstract": "To enhance tourists' experiences and immersion, this paper proposes a narrative-driven travel planning framework called NarrativeGuide, which generates a geoculturally-grounded narrative script for travelers, offering a novel, role-playing experience for their journey. In the initial stage, NarrativeGuide constructs a knowledge graph for attractions within a city, then configures the worldview, character setting, and exposition based on the knowledge graph. Using this foundation, the knowledge graph is combined to generate an independent scene unit for each attraction. During the itinerary planning stage, NarrativeGuide models narrative-driven travel planning as an optimization problem, utilizing a genetic algorithm (GA) to refine the itinerary. Before evaluating the candidate itinerary, transition scripts are generated for each pair of adjacent attractions, which, along with the scene units, form a complete script. The weighted sum of script coherence, travel time, and attraction scores is then used as the fitness value to update the candidate solution set. Experimental results across four cities, i.e., Nanjing and Yangzhou in China, Paris in France, and Berlin in Germany, demonstrate significant improvements in narrative coherence and cultural fit, alongside a notable reduction in travel time and an increase in the quality of visited attractions. Our study highlights that incorporating external evolutionary optimization effectively addresses the limitations of large language models in travel planning.", "sections": [{"title": "1 Introduction", "content": "Large language models (LLMs) have demonstrated significant success in various generation tasks, such as role-playing (Wang et al., 2023b). These applications not only offer a convenient alternative to human labor but also enhance the user's narrative immersion (Ahn et al., 2024; Lu et al., 2024), such as the educational chatbot (Wang et al., 2024) and the sales agent (Chang and Chen, 2024). Moreover, in the tourism domain, some studies (Wei et al., 2024; Vasic et al., 2024; Helmy et al., 2024) have explored employing LLMs as virtual tour guides. Although these systems offer increased convenience, they do not necessarily improve the overall user experience. This is because tourists' modes of travel remain unchanged, limiting the potential for deeper immersion, and LLMs often lack robust itinerary planning capabilities.\nIndeed, the powerful story creation capabilities of LLMs have the potential to transform the tourism industry (Wang et al., 2023a; Mirowski et al., 2023). By combining LLM-driven story generation with agent-based role-playing, narratives can be effortlessly brought to life (Han et al., 2024; Wu et al., 2024). Accordingly, we propose the concept of narrative-driven travel planning, as illustrated in Figure 1. By generating a geocultural-grounded script, tourists can assume the roles of characters within the narrative, thereby enhancing their immersive experience.\nUnlike existing tasks in script generation and virtual tour guiding, narrative-driven travel planning faces two primary challenges. First, for the task of generating a travel guide script, LLMs should incorporate geocultural references from authentic tourist attractions to ensure an immersive experience. Second, itineraries must satisfy tourists' constraints, such as travel duration, while optimizing narrative coherence. However, recent research highlights the planning limitations of LLMs. For instance, the TravelPlanner benchmark (Xie et al.) reveals that LLMs struggle to meet user requirements, achieving a success rate of only 0.6%.\nContributions. We model narrative-driven travel planning as an optimization problem. The objective is to select a subset of attractions within a city and determine an itinerary that traverses them, thereby optimizing the narrative coherence, travel time, and attraction score. To address this, we propose NarrativeGuide, a framework that integrates geocultural knowledge graphs with genetic algorithms (GA). First, we construct a knowledge graph incorporating historical, cultural, and geographical information for each attraction and generate an independent narrative script for each attraction. Then, we apply a GA-based optimization approach. In each iteration, a new sequence of attraction visits is generated, transition scripts are added to ensure narrative coherence, and their narrative coherence is evaluated. Finally, the itinerary with the optimal weighted sum of script quality, travel time, and attraction satisfaction is selected along with its corresponding travel script. We evaluate our approach using different LLMs across four cities, Nanjing, Yangzhou, Paris, and Berlin. Experimental results demonstrate that NarrativeGuide significantly improves script quality compared to baseline methods and enhances itinerary planning by reducing travel time and selecting more popular attractions."}, {"title": "2 Related Work", "content": "2.1 Long-Form Script Generation\nLong-form narrative generation is a key research area in natural language processing, aiming to produce coherent and creative stories. Guo et al. (2018) introduced LeakGAN, which combines generative adversarial networks (GANs) with policy gradients to guide long-text generation. Yao et al. (2019) introduced the 'Plan-and-Write' framework, which divides the story generation into two stages: planning and writing. You et al. (2023) proposed the 'EIPE-text' method, which refines plans iteratively using an evaluation mechanism to produce more coherent narratives. In the domain of scriptwriting, Mirowski et al. (2023) developed the Dramatron system, which leverages large language models (LLMs) to co-write movie and theatre scripts. Dramatron generates coherent scripts by hierarchically creating titles, characters, story beats, location descriptions, and dialogues.\n2.2 Automatic Itinerary Planning\nNumerous studies have addressed automated travel itinerary planning, employing various methods to tackle the problem. Some studies use exact algorithms, such as Verbeeck et al. (2014), which applies a branch-and-cut approach to solve self-guided tour planning. Since travel itinerary planning is NP-hard (Liao and Zheng, 2018; Castro et al., 2015; Gavalas et al., 2013), approximation methods are often employed to enhance solution efficiency. Consequently, metaheuristic algorithms are commonly used. For instance, Abbaspour and Samadzadegan (2009) employed a genetic algorithm to address itinerary planning, focusing on time and multimodal transport constraints. Zhang et al. (2024) use a cooperative co-evolutionary algorithm for cross-city itinerary planning, while Chen et al. (2023) apply an improved ant colony algorithm, considering restaurant and hotel selections. More recently, some researchers have explored the use of LLMs for itinerary planning. For example, Singh et al. (2024) leverage LLMs for personalized travel itinerary planning, and Li (2023) utilize the ChatGPT model to enable users to generate travel plans and suggestions based on keywords."}, {"title": "3 Method", "content": "Given a travel itinerary for a tourist, LLMs can directly generate a narrative script for the journey. However, this approach encounters challenges such as attention sink and difficulties in maintaining global consistency. To address these issues, this paper adopts a segmented planning approach, dividing the complete narrative script into scene units based on individual attractions. By pre-configuring the worldview and character settings, the logical consistency of each attraction's independent narrative script is ensured. After the tourist selects a segment of the itinerary, transition scripts are generated for pairs of adjacent attractions, ultimately forming a complete travel narrative script. Moreover, the challenge of narrative-driven travel planning lies not only in the quality of the script but also in the ability to plan the itinerary. To this end, we model the problem as an optimization task and use the GA to determine the final itinerary, optimizing the script score, travel time, and attraction satisfaction. Figure 2 illustrates the pipeline of the proposed NarrativeGuide framework.\n3.1 The Optimization Model\nWe model narrative-driven travel planning as an optimization problem. To formalize this, we define an undirected, connected, and weighted graph G = (V, E), where the vertex set V = {v1, v2, ..., vn} represents the attraction, and the edge set E = {e1, e2,..., em} represents the relationships between the attractions. Each edge ek \u2208 E connects two distinct vertices vi and vj (i \u2260 j) and is associated with an attribute vector w(vi, vj), which encodes the historical or cultural connections between these two attractions, along with geographical attributes such as travel time. Each vertex vi \u2208 V is also associated with an attribute vector w(vi), which encapsulates information about the attraction, including its historical background, cultural significance, main attractions, geographical location, ticket price, and other relevant details.\nThe objective is to select a subset S \u2282 V and determine an optimal visiting sequence x = (x1,x2,...,xk) for the selected subset. This arrangement is designed to maximize the tourist's experience, such as the coherence of the corresponding narrative script, the quality of the attractions, and the travel time. The objective function can be expressed as follows:\n$\\max _x F(x) =w_1f_1(x) + w_2 \\sum_{i=1}^{k-1} f_2(x_i, x_{i+1})^{-1} + w_3 \\sum_{i=1}^{k} f_3(x_i)$   (1)\nwhere f1(x) represents the smoothness score, f2(xi, xi+1) represents the travel time between attractions xi and xi+1, and f3(xi) represents the popularity of attraction xi, w1, w2, and w3 are weighting factors that control the relative importance of each component in the optimization. To transform the problem into a maximization problem, we take the reciprocal of the travel time f2 as the second term in the objective function F(x).\n3.2 Geoculturally-Grounded Narrative Script Generation\nTo create an immersive experience for tourists, the narrative script must be grounded in the geocultural context of the attractions. Therefore, we initially construct a knowledge graph by extracting information about attractions from Wikipedia and inputting it into the LLM. The LLM is responsible for summarizing this information into five key attributes, i.e., historical background, cultural significance, historical stories, main attractions, and geographical location. In the knowledge graph, each attraction is represented as a node, and each node is associated with an attribute vector that includes the aforementioned five attributes of the attraction, collectively referred to as the attraction information. Subsequently, we input these attributes into the LLM to extract historical or cultural connections between the attractions. These connections are used as edges to connect the nodes, and each edge is associated with an attribute vector that includes historical or cultural relevance. In this manner, we construct a weighted and connected knowledge graph that enables the generation of geoculturally-grounded narrative scripts, as depicted in Fig. 3.\nConsider an itinerary x = (x1,x2,...,xk), we generate a narrative script for the tourist in a multi-level manner, as outlined in Algorithm 1. First, we create a personalized worldview and character settings for the tourist. Then, we generate the exposition, which immerses the tourist in their role. Next, based on the geocultural information of each attraction, we generate an independent sub-script for each attraction, treating them as scene units. Finally, for the itinerary x, we create a transition script for each pair Xi, Xi+1, considering their cultural, historical, and geographical relationships, ensuring smooth scene transitions and maintaining the tourist's immersion.\nWorldview and Character Setting. We instruct the LLM to generate a worldview, denoted as W, by integrating the storylines and cultural backgrounds of attractions. This process follows a predefined format and an example worldview provided as reference. The LLM is tasked with producing a foundational description of the fictional world, encompassing its history, culture, and geographical features, while ensuring consistency with the background of the attractions. Additionally, it defines world rules that align with these elements.\nThe generated worldview W serves as the basis for creating two characters, i.e., the user character and the guide character. Using W, a predefined character setting format, and example character profiles, the LLM determines the names, identities, personality traits, background stories, and relationships with the user or travel purposes for both characters. The complete character settings are represented as C = {Cu,Cg}, where Cu and Cg correspond to the user character and guide character, respectively.\nExposition. The LLM synthesizes the worldview W and character settings C to generate an engaging exposition, denoted as So. This introduction establishes the narrative framework by presenting the initial encounter between the user and the guide, defining the journey's starting point and purpose, and offering a glimpse into the forthcoming adventure. The LLM is tasked with crafting So to ensure coherence with the predefined elements, effectively setting the stage for the unfolding storyline.\nGeoculturally-Grounded Attraction Script.\n3.3 Genetic Algorithm for Narrative-Driven Travel Planning\nNarrativeGuide utilizes the GA to determine the final itinerary. The following sections introduce the algorithm from two aspects: the encoding scheme and the update of candidate solutions.\nEncoding Scheme and Population Initialization.\nIn the GA, each candidate solution represents a candidate itinerary, and the dimension of the solution indicates the upper bound of the number of attractions that can be visited. Since a single attraction may correspond to multiple different scripts, once the sequence of attractions is determined, it is necessary to further specify the script number for each attraction. To achieve this, the encoding consists of two main pieces of information: the attraction number and the script choice for each attraction. Therefore, a two-dimensional encoding scheme is used, where the first row contains the attraction numbers or 0 (indicating a placeholder that does not correspond to any attraction). The second row contains the script choices for the corresponding attractions. Fig. 4 provides an encoding example, representing an itinerary from attraction 1 \u2192 attraction 2 \u2192 attraction 3, with corresponding scripts 3, 2, and 1, respectively.\nUpdate of Candidate Solutions The population update process consists of two core steps, i.e., crossover and mutation. To prevent duplicate attractions during these operations, adjustments are made to the crossover and mutation strategies. Although the encoding is two-dimensional, with attraction numbers and their corresponding scripts located in the same column, only the attraction numbers need to be checked for duplication. Therefore, the encoding is treated as one-dimensional for both crossover and mutation operations.\nIn the crossover strategy, two crossover points, n1 and n2 (n1 < n\u2082), are selected. The encoding between columns n\u2081 and n\u2082 is exchanged between two individuals. During this exchange, we check for duplicate attraction numbers within the segment, ensuring no duplication occurs with other parts of the encoding. If any duplication is found, the exchange is aborted.\nIn the mutation strategy, a mutation point m is selected, and a random attraction number, not already present in the encoding, is chosen. The script choice for this attraction is then selected randomly."}, {"title": "4 Experiment", "content": "In this section, we conduct tests in four cities, i.e., Nanjing and Yangzhou in China, Paris in France, and Berlin in Germany. We evaluate both the quality of the scripts generated by the proposed algorithm and its ability to plan travel itineraries. The section begins with a description of the experimental setup, followed by an analysis of the results.\n4.1 Experimental Design\nThe experiment consists of two parts. The first part aims to evaluate the quality of the generated travel scripts based on predefined criteria. For this, we use OpenAI's GPT-4 model as the evaluation model. The model receives as input the algorithm-generated narrative scripts, which represent travel itineraries for various destinations, including descriptions of attractions, historical and cultural context, character interactions, and attraction information. First, the model is paired with relevant attraction information, followed by the use of custom evaluation prompts. The evaluation focuses on four aspects: narrative coherence, character interaction, spatiotemporal consistency, cultural fit. Weight adjustment rules are applied based on script length: a factor of 0.7 for scripts under 1500 characters, no adjustment for scripts between 1500 and 7000 characters, and a factor of 1.2 for scripts exceeding 7000 characters.\n4.2 Experimental Results\n4.2.1 Script Quality\nTable 1 presents the experimental results of the proposed algorithm across different LLMs, including Deepseek-v3, GPT-40, GPT-4o-mini, GPT-4, and Qwen2.5-max. We use pure GPT-4 as the baseline algorithm for comparison. The evaluation dimensions include narrative coherence (NC), character interaction (CI), spatiotemporal consistency (SC), cultural fit (CF), and the overall score. Here, we generate Chinese scripts for Nanjing and Yangzhou in China, while English scripts are generated for Paris and Berlin in France and Germany, respectively.\nFrom the results in Table 1, it can be observed that the proposed algorithm outperforms the baseline method across all four cities and various LLMs. Among the LLMs tested, Qwen2.5-max performed the best in Nanjing (China) and Paris (France), while GPT-40-mini showed the best results in Yangzhou (China) and Berlin (Germany). Compared to the baseline algorithm, the scores improved by 28%\u201359%, demonstrating that the proposed algorithm significantly enhances LLM-driven narrative-based travel planning tasks. Furthermore, the experimental results indicate that better LLM performance did not lead to a significant improvement in script generation tasks. In fact, our approach decomposes a large itinerary script into several scene units (representing individual attractions) and constructs the complete narrative script through transition scripts. This reduces the demand for LLMs' long-text generation capabilities.\nBy comparing the scores across the four detailed metrics, we can observe significant improvements in narrative coherence (NC), cultural fit (CF), and spatiotemporal consistency (SC), while the improvement in character interaction (CI) was relatively modest. The improvements in narrative coherence and spatiotemporal consistency can be attributed to the evolutionary algorithm's optimization of the itinerary, which considers both the geographical proximity of attractions and their cultural and historical relevance. The enhancement in cultural fit arises from the algorithm's approach of assigning an independent narrative to each attraction, ensuring that the attraction's script aligns with its cultural background. However, when generating the overall script, the occurrence of hallucinations may reduce the cultural fit score.\nMoreover, the experiments also indicate that the language of the script (Chinese versus English) has a significant impact on the quality of the generated scripts. As shown in Table 1, the overall scores for Chinese scripts (Nanjing and Yangzhou) were consistently lower than those for English scripts (Berlin and Paris). This suggests inherent differences in how models process historical content across various linguistic and cultural contexts.\n4.2.2 Travel Itinerary Planning\nThis section compares the proposed NarrativeGuide with several representative LLMs, including GPT-40, GPT-40-mini, and Qwen2.5-max, focusing on their travel itinerary planning capabilities. The comparison primarily examines travel time and the quality of the planned attractions, as shown in Tables 2 and 3. Note that the base LLM used in NarrativeGuide is GPT-40."}, {"title": "5 Conclusion", "content": "This study introduces NarrativeGuide, a novel framework that combines geocultural knowledge graphs with evolutionary algorithms to improve narrative-driven travel planning. By grounding script generation in real-world attractions and optimizing itineraries using GA, our approach addresses the dual challenges of narrative coherence and practical travel constraints. Experimental evaluations across four cities, i.e., Nanjing, Yangzhou, Paris, and Berlin, show significant improvements: script quality metrics, including narrative coherence, cultural fit, and spatiotemporal consistency, increased by 28%-59% compared to baseline methods, while travel time was reduced by up to 27-fold in cities such as Berlin. The framework's integration of LLM-generated scene units with GA-driven itinerary optimization ensures both immersive storytelling and efficient route planning, overcoming the limitations of traditional LLMs in handling real-world constraints.\nLimitations\nData Dependency The quality of generated scripts heavily relies on the completeness and accuracy of the knowledge graph, which may limit scalability to regions with sparse cultural or historical data.\nCharacter Interaction While narrative coherence and cultural fit were strengths, character interaction scores remained suboptimal (e.g., 1.68-2.88), indicating a need for deeper modeling of dynamic character behaviors.\nLanguage and Cultural Gaps A performance disparity (23%) was observed between English and Chinese scripts, suggesting potential biases in LLMs' handling of non-Western cultural contexts.\nAlgorithm Scalability The genetic algorithm's efficiency may degrade for large-scale cities or highly complex constraints (e.g., multi-day itineraries).\nUser Personalization The current framework prioritizes narrative fluency over individualized preferences, such as varying travel interests or activity types. Future work could incorporate adaptive user profiling to address this gap."}]}