{"title": "Online Electric Vehicle Charging Detection Based on Memorybased Transformer using Smart Meter Data", "authors": ["Ammar Kamoona", "Hui Song", "Mahdi Jalili", "Hao Wang", "Reza Razzaghi", "Xinghuo Yu"], "abstract": "The growing popularity of Electric Vehicles (EVs) poses unique challenges for grid operators and infrastructure, which requires effectively managing these vehicles' integration into the grid. Identification of EVs charging is essential to electricity Distribution Network Operators (DNOs) for better planning and managing the distribution grid. One critical aspect is the ability to accurately identify the presence of EV charging in the grid. EV charging identification using smart meter readings obtained from behind-the-meter devices is a challenging task that enables effective managing the integration of EVs into the existing power grid. Different from the existing supervised models that require addressing the imbalance problem caused by EVs and non-EVs data, we propose a novel unsupervised memory-based transformer (M-TR) that can run in real-time (online) to detect EVs charging from a streaming smart meter. It dynamically leverages coarse-scale historical information using an M-TR encoder from an extended global temporal window, in conjunction with an M-TR decoder that concentrates on a limited time frame, local window, aiming to capture the fine-scale characteristics of the smart meter data. The M-TR is based on an anomaly detection technique that does not require any prior knowledge about EVs charging profiles, nor it does only require real power consumption data of non-EV users. In addition, the proposed model leverages the power of transfer learning. The M-TR is compared with different state-of-the-art methods and performs better than other unsupervised learning models. The model can run with an excellent execution time of 1.2 sec. for 1-minute smart recordings.", "sections": [{"title": "I. INTRODUCTION", "content": "Transport electrification is critical to the transition to a more sustainable energy system. The electrification of transportation provides a powerful solution for reducing greenhouse gas emissions and mitigating the negative impacts of fossil fuel consumption as the world continues to struggle with climate change. About one-quarter of the energy-related emissions are estimated to be attributed to the transportation sector alone [1]. In recent years, the market has seen an increase in the adoption of electric vehicles (EVs) to decarbonize the transport sector. The emissions of CO2 produced by EVs are significantly lower than those produced by gasoline or diesel engines. Globally, approximately 100 million EVs will be on the road by 2035, according to the Energy Outlook [2]. Different approaches are being used worldwide to encourage the uptake of EVs, including financial incentives, regulations, investment in charging infrastructure, and government fleet procurement, to reduce greenhouse emissions and support a sustainable and resilient transportation system.\nSeveral works [1], [3], [4] have outlined that new technical challenges will arise with an increase in EV uptake in the power distribution grids in terms of power demand increase, system losses, voltage drops, phase unbalance, and stability issues. Addressing these challenges has led to a new research area to emerge with different approaches, mainly focusing on demand-response and public charging stations. A variety of approaches are being used, including coordinated EV charging using optimal charging price [3], and EV charging location planning based on competition in resource allocation data [5]. Most of these studies assume that EV charging occurs mostly at public stations. Most EV owners, however, charge their EVs at home since they enjoy the convenience and flexibility of choosing when to charge and the lower electricity costs during off-peak periods. Furthermore, according to the current Australian study [6], even 47% of the business fleets are usually home-garaged.\nTo manage the impact of EV charging at homes, distribution network operators (DNOs) and retailers are interested in mitigating the impact using smart charging and scheduling algorithms [7]. However, online EV identification, i.e., de- tecting EV charging in a household using its streamed smart meter data, is the main prerequisite. Online EV charging identification can help DNOs understand the impact of EVs on the local grid and identify opportunities for grid optimization. Streamed behind-the-meter data can help DNOs understand EV owners' charging behavior through EV identification and develop targeted interventions to encourage off-peak charging or manage peak demand.\nEV identification can be categorized based on the avail- ability of the training data into supervised, semi-supervised, and unsupervised approaches. The supervised learning uses EV and non-EV smart meter readings for training the ma- chine learning model. However, due to the sparsity of EV charging sessions/events over time, this may suffer from data imbalance problems [8]. Different approaches can be used to overcome data imbalance, such as over-sampling [9] or under-sampling [8]. But these methods could bring in new limi-tations. For example, under-sampling excludes the majority"}, {"title": null, "content": "of samples, which can potentially reduce model performance. While, over-sampling requires a high computation cost, and the redundancy in the minor class may reduce model classifi-cation accuracy [8]. It is worth mentioning that in the semi-supervised learning, Jahangir et al. [10] proposed to address the problem of different EV demand characteristics using 3-D convolution via a semi-supervised approach using Generative Adversarial Networks (GANs).\nThe unsupervised learning techniques can provide a more suitable and efficient approach that does not require minor class data during the training. Different unsupervised have been proposed in the literature [11]\u2013[13] for EV charging profile identification. Wang et al. [11] proposed a deep gen-erative model for EV charging profile extraction using Hid-den Markov processes. The aforementioned studies required complete knowledge of EVs' arrival and departure times, but DNOs lack access to these data in most cases. Mun-shi et al. [12] used Independent Component Analysis (ICA) to decompose the smart meter data and extract EV charging load pattern. However, their approach requires different extraction processes to identify different charging patterns, which is very time-consuming. Xiang et al. [13] proposed training free charging load profile extraction by applying two-stage signal decomposition. However, the earlier approach is based on the assumption that the EV load profile is very distinctive from others. They considered charging characteristics, such as the EV power consumption and the rectangle profile of charg-ing/discharging, are known. In practice, information received by the energy distributors regarding a new EV charging oc-currence can be incomplete, and lagging and charging profiles can not be generalized to all cases with different EV models and in different EV charging stations. More importantly, DNOS cannot access information about charging profiles, arrival time, and departure time of EVs. Another approach that does not require prior knowledge about the charging profile is anomaly detection, a branch of unsupervised learning.\nAnomaly detection, which is the main focus of this paper, can be defined as detecting instances in the data that deviate from the predefined normal model [14], [15]. The application of anomaly detection ranges from security, risk management, health, and medical risks [14]. Most of EV identification studies aim at finding an EV charging session that is highly based on the assumption that an EV presence in the household. However, in our problem setting, we do not rely on such assumption. The aim of our paper is to introduce an online machine-learning model capable of detecting EV charging from behind the meter in an unsupervised fashion.\nInspired by the success of Transformers [16] in different domains, particularly in natural language processing, this pa-per utilizes Transformer for unsupervised online EV charging identification. Transformer has shown superior performance in modeling long-term dependencies of sequential data compared to Recurrent Neural Networks (RNNs). Different from other research, in this paper, we propose an online memory-based transformer (M-TR) for unsupervised EVs charging identifi-cation using streamed smart meter data. The contributions of the paper are summarized as follows:\n\u2022 We propose an online unsupervised learning framework for online EV charging identification using smart meter data that does not rely on the assumption of EV existence in the household.\n\u2022 The proposed approach does not require manual feature engineering or prior knowledge about charging profiles.\n\u2022 We propose a memory-based transformer that leverage both long and short temporal information to capture different charging pattern, from long charging to slow charging.\n\u2022 The proposed approach uses dual memory compression to ensure that the model achieves linear time complexity and can run in a real-time manner.\n\u2022 We propose to use streaming peak-over-threshold (SPOT) to define threshold value dynamically.\nThe rest of this paper is organized as follows: Section II presents the proposed model for online EV charging identifica-tion. Section III presents experimental results, and Section IV concludes the paper."}, {"title": "II. ONLINE ANOMALY TRANSFORMER FOR EV CHARGING IDENTIFICATIONS", "content": "Given the live-streaming smart meter data, the goal is to identify EV charging events in each smart meter sampling time using smart meter readings up to the current time. There is no access to future smart meter readings at the inference phase. Formally, the representation of streaming smart meter readings at time T involves a batch of B past readings denoted as $P_T = {P_{T-B+1},..., P_T}$. The online anomaly identification of EV charging receives $P_T$ as input and detects the existence of EV charging $\u0177_\u0442$, $\u0177_\u0442 \u2208 {0,1}$. Note that \u0177 = 0 reflects no EV charging exists, while y = 1 reflects the existence of EV charging. The overall framework of our model is shown in Fig. 1.\nAccording to our method, recent smart meter readings pro- vide accurate information about ongoing EV charging events, while long-term smart meter readings provide contextual refer- ence f EV charging that is highly occurring at a particular time. We propose a memory-based Transformer (M-TR), as shown in Fig. 2. In our model, we denote the extended smart meter reading as aglobal memory gm and denote the short-period smart meter readings as a local memory lm. The smart meter reading in the extended past (gm) stored in the global memory embedding, and the local smart meter readings (lm) stores the recent smart meter reading. The M-TR encoder compresses these readings into abstract features as latent features of e1 vectors. The M-TR decoder interacts with both the encoded global memory and local memory in order to decode and reconstruct the local memory readings as lm. This process involves querying the global memory using the local memory as reference. This design is inspired by using short and long-term memory for action detection in videos [17] combined with the advantages of Transformers [16]. The streamed input smart meter reading is stored in two consecutive memories. In the local memory, only a few recently observed LM readings are stored. In our implementation, we use a first-in-first-out"}, {"title": null, "content": "(FIFO) queue with slots of $LM = {P_T,...,P_{T-lm+1}}$. The smart meter reading that is older than lm time steps, it enters into the global memory; the global memory GM also works by FIFO principle. The GM can be formatted as $GM = {P_{T-lm},..., P_{t-lm-gm+1}}$. Here, the GM works as input memory to M-TR encoder and LM works as queries for M-TR decoder. From a practical point of view, the gm period should be chosen longer than the local memory period (lm << gm). The choice of lm and gm is based on the validation set. In our networks, we use a sinusoidal position encoding [16] to encode temporal important for each smart meter reading features in local and global memories relative to the current time T."}, {"title": "B. M-TR Encoder", "content": "The purpose of M-TR encoder is to encode the global memory gm of meter readings into a compressed feature representations. This representation serves as a valuable re-source for that M-TR decoder, enabling it to decode and interpret meaningful temporal context. Capturing the relation and temporal context over a significant number of readings presents a computationally demanding endeavor. To make the training feasible, capturing long temporal context has been previously addressed by either temporal sub-sampling [17] or using RNNs. However, the previous approaches suffer from losing temporal information at each time step. Recently, Transformers [16], employing an attention-based mechanism, have shown promising results in capturing long temporal modeling. For our M-TR encoder, one example is to choose a self-attention Transformer encoder. However, the self-attention Transformer's time complexity grows quadratically with se- quence length gm, $O(gm^2C)$, where C is the dimension of smart meter readings features after the FCN. However, a recent work [18] demonstrated the utilization of self-attention with liner complexity. This approach involves the repetitive referencing of information from global memory using a multi-layer Transformer architecture. In this paper, we propose to employ a dual memory comparison for anomaly detection using Transformer decoder units [16] for better memory mod-eling and encoding.\nThe Transformer decoder unit (TRD): The decoder unit employs a Multi-Head Self Attention operation [16] with h heads. where A\u00bf is the output of applying self-attention with Q query, k key, and V value matrices, as follows:\n$\\hat{A} = Attenion(Q,K,V) = \u03c3(\\frac{QKT}{\\sqrt{C}})V,$   (1)\nwhere, in our self-attention implementation, A = Q, K, V is the first input tokens A \u2208 RexC, o is a softmax operation. The second operation involves applying cross-attention by querying the output of the self-attention, as follows:\n$CrossAttenion((\u03b4(\\hat{A}), \u03b2) = \u03c3(\\frac{\u03b4(A)\u00b7 \u03b2\u03c4}{\\sqrt{C}})\u03b2,$   (2)\nwhere is madditional input tokens denoted as \u03b2\u2208 Rmx C which works as both the key and the value matrices in the cross attention operation, m is another large number to be learned, and here d : Re\u00d7C \u2192 Re\u00d7C acts as an intermediary between the self-attention and the cross attention operations. the ad-vantage of this design lies in its capability to transform input tokens of dimension m\u00d7C into output tokens of the dimension of ex C with time complexity $O(e^2C + nmC)$. However, the time complexity becomes linear when e is smaller than m, making it particularly suitable for compressing global memory. This technique has proven successful in processing"}, {"title": "C. M-TR Decoder", "content": "The local memory carries useful information for identifying whether the EV charging (regarded as anomaly event) is happening at the current time step. The M-TR employs queries to recover valuable information from the compressed global memory by referencing the local memory. The M-TR encoder"}, {"title": "D. Anomaly score", "content": "This section explains the general framework for identifying EV charging. Given short-memory smart meter readings LM, with length lm, We define the Mean Squared Error (MSE) as the anomaly score As between the short-memory smart readings and the reconstructed ones as follows:\n$As = \\sum(LM - LM_i)/N,$   (3)\nlm\nwhere LM\u00bf is the reconstructed smart meter readings obtained from our model, and N is the total number of observations that can be defined based on the batch size during the training phase. After obtaining the anomaly score As, if this anomaly score is above the specified threshold thre Asi > thre, then Asi = 1 indicates an anomaly. In this work, we choose thre dynamically by using Streaming Peak-Over-Threshold (SPOT). The general algorithm of our proposed model is shown in Algorithm 1. The input to our algorithm consists of several components. Firstly, we have the smart meter reading, which provides information about the energy consumption up to a specific time, denoted as T. second, the MTR model with pretrained weights, represented by 0. Furthermore, the algorithm takes into account the length of both local memory and global memory. The output of the algorithm is a set of charging indicators, which also serve as anomaly indicators. These indicators provide insights into the charging behavior at the specific time T."}, {"title": "E. Streaming peak-over-threshold for dynamic anomaly threshold selection", "content": "In the Extreme Value Theory (EVT), the peak-over-threshold method (PoT) is a popular statistical method for quantifying the likelihood of rare (extreme) observations of a variable. Let X to be a streaming time series of independent and identical distributed samples. Pickands-Balkema-de Haan theorem [20] (also referred to as the second theorem in EVT in comparison to Fisher, Tippett and Gnedenko's initial result) is the basis of PoT as shown below:\n$F_h(x) = P(X \u2212 h > x\\|X > h) ~ (1 + \\frac{\u03b3x}{\u03c3(h)})^-1/\u03b3 ,$   (4)\nh\u2192T\nwhere F is the accumulative distribution function F \u2208 Dy if and only if a function o exists for all x \u2208 R s.t1 + yx > 0. PoT uses the Generalized Pareto Distribution (GPD) with parameters \u03b3, \u03c3 to find the excess over a threshold h, written X - h. In this case, we try to estimate the parameter \u0177 and \u00f4. Different classical methods can be used to calculate these parameters, such as the Method of Moments or the Probability Weighted Moments, but in this paper, we used Maximum"}, {"title": "F. Online Inference with M-TR", "content": "During the online inference, as time progresses, the streamed smart meter readings are continuously fed to the M-TR model. However, executing the M-TR global memory en- coder from scratch for each new smart meter sampling record-ings leads to time complexity of $O(e^3C + e_0gmC)$, while for the second memory stage it turns into $O((e_0 + e_1e_0)lencC)$. Nonetheless, it is important to mention that at each time step, only one smart meter reading needs to be updated. To improve the efficiency of online inference, storing intermediate results of the M-TR decoder can be implemented. We can fix the queries of the M-TR decoder, thus the pre-computed self-attention outputs can bed used throughout the inference. Thus, the cross attention of M-TR encoder for relative position T = T-t of reading P at time t can be expressed as follows:\nCrossAttention(q\\tau, PT\u2212\u03c4 + sT)\n$\\sum_{\\tau=lm}^{lm+gm-1} Z(q_\u03c4, (PT\u2212\u03c4 + s_T))$,   (8)\n$\\sum_{\\tau=lm}^{lm+gm-1} Z$\nwhere Z is defined as follows:\n$Z = exp((PT\u2212\u03c4 + S\u03c4) \u00b7 q_i\\sqrt{C}).$   (9)\nThe computation we discussed relies on the attention weight matrix A, which has dimensions Rgmxeo. Each element \u03b1\u03c4\u03af of this matrix is determined by the product of PT-T+s, and qi. To further analyze A, we can decompose it into two distinct matrices, namely Ap and As. These matrices consist of elements \u0430\u0442\u0456\u00ba = PT-\u2533\u00b7qi and ari\u00b3 = S\u2081\u00b7 qi, respectively. It is important to note that during the inference phase, both the queries following the initial self-attention step and the position embedding s remain unchanged. This results in pre-use of"}, {"title": "III. EXPERIMENTS", "content": "The goal of this paper is to run online unsupervised anomaly detection for EV charging identification. We used Pecan Street Dataport [23], which provides a set of labeled EV charging events for 8 households. However, we do not use these labels during the training phase. The Pecan Street dataset provides minute-level of household energy consumption with labeled EV charging levels. Geographically, we used data obtained from the Pecan Street dataset with minute-level residential load data with EV charging load in Austin, Texas, over one year (January 1, 2018, to December 31, 2018). Fig. 4 shows examples of the entire time series data of five users, namely users 1, 3, 4, 5, 6,7, and 8. This dataset has different EV charging distribution over the entire readings, some users charge their EV for a specific period and then stop charging, such as user 3. Capturing such behavior is also of interest. Fig. 5 shows a snapshot of these users and the temporal annotation of their charging for a period of six days. We can observe that these users have different EV charging intervals.\nIn our experiments, we need to train the model on non-EV charging data, thus, we chose the non-EV charging intervals of users 2, 6, and user 8 for training and transfer the learning into the other users for testing. The main reason for choosing these users is because these users have few charging intervals, and a lot of non-Ev charging intervals as shown in Fig. 4. Since our M-TR model is an online model, during the test phase, we initialize our model using the starting non-EV charging interval to adjust the threshold value of SPOT discussed in Section II-E as shown in 6. We chose a maximum of 4 weeks of non-EV charging interval to train our model. if no such data is available, we use the available non-EV intervals to train the model. The statistics of these users and the percentage of training size and test size are shown in Table I. Due to the dataset nature, there are different training sizes (when no EV charging is happening) that can be used to train the model for each user."}, {"title": "B. Evaluation protocol", "content": "We consider an average precision, recall, and F\u2081 score as metrics for the performance evaluation. We also include the Area Under the Receiver Operator Characteristic (ROC), which measures the area under the true positive rate as a function of the false positive rate. Precision and recall are defined as,\n$Precision = \\frac{TP}{TP + FP}, Recall = \\frac{TP}{TP+FN},$   (10)"}, {"title": "C. Baseline methods", "content": "This section explores different state-of-art anomaly detec- tion models used to benchmark against our method. LTSM- NDT [24] (with autoencoder implementation from open- Gauss [25]: This model uses an LTSM-based deep neural model that divides the time series data into input sequences and uses a forecasting approach to predict the next timestamp. LTSM relies on the autoregressive approach that learns tem- poral dependency. LTSM-NDT uses non-parametric dynamic error thresholding (NDT) to set a threshold for labeling anomalies.\nDeep autoencoder with Gaussian Mixtures Models (DAGMM) [26]: The distribution assumption of this model has been imposed on the latent space. DAGMM imposes Gaussian mixture distribution on the latent distribution. DAGMM uses a combination of the reconstruction loss, sample energy, and GMM covariance to train the model. In DAGMM, the sample energy is used as an anomaly score. We use the Pytorch implementation of the model on GitHub\u00b9.\nThe Multi-Scale Convectional Recursive Encoder-Decoder (MSCRED) [27]: MSCRED uses a sliding window approach to convert the time series data into a normalized two-dimensional image and then is fed into the ConvLTSM layer. This network is capable of capturing complex inter-modal cor-relations and also temporal dependencies. While this method captures more complex correlations between modalities and temporal information, it cannot be generalized in settings without adequate training data.\nMTAD GAT [28]: This model uses a graph-attention-based network to learn features and temporal correlations and is then fed into Gated Recurrent Unit (GRU) to detect anomalies. The attention mechanism performs compression using a convex\nhttps://github.com/mperezcarrasco/PyTorch-DAGMM"}, {"title": "D. Experimental results", "content": "This section explores the proposed approach's performance against the baseline methods. Table II provides the precision, recall, F1, and ROC scores for different models, including our model (M-TR). The proposed online M-TR outperforms all models for four users except for user 3, where CAE-M performs better. On average, the mean of the F1 score is 84%, and the mean of ROC is 91% as shown in Table III. Our model outperforms the transformer-based model (TranAD) for all users, which demonstrates the effectiveness of our memory-based transformer model. The LTSM-NDT performs worse on all users with a mean F1 score of 42.9% due to its sensitivity and poor efficiency of the NDT thresholding method [28]. DAGGM performs much worse for most users and shows better performance for only user 4 when the training samples are very short which is due to incapability in mapping the long temporal sequence because it does not use window sequence. The MSCRED and CAE-M use sequential data as input that preserves the temporal dependencies, and they also use reconstruction error which prevents them from detecting anomalies closer to normal trend [30]. The CAE-M shows only better performance in F1 score for user 3. In contrast, MSCRED performs better than other baseline models. USAD, MTAD-GAT, and GDN use attention-based technique that focuses on specific data modes. Despite these models trying to capture long-term trends using local windows, they still perform worse for all users.\nThe M-TR online inference execution time is 1.2 sec. for each 1-minute reading, which is adequate. The experiments were conducted using the following PC specifications: an AMD Ryzen 5 4600H processor and 16 GB of RAM.\nAnomaly Diagnosis. This section discusses the anomaly detection performance of our M-TR model for some users of the testset. Fig. 7 shows the anomaly scores generated by our M-TR model for user 1 and user 3, the ground truth labels, and the predicted labels. The shaded area shows where our model consistency generates the wrong label for some interval. We argue that the wrong label is due to the model being unable to generate proper anomaly scores and also the threshold value that has been set by SPoT. This can be seen by ROC score, which is not sensitive to the threshold value. Despite that, our model performs very well in an online manner."}, {"title": "IV. CONCLUSION", "content": "This paper proposed an unsupervised online anomaly detec- tion technique for EV charging identification from smart meter data. This paper considers the streaming of smart meter data and aims to detect the presence of EV charging from this smart meter data in an online fashion. We proposed a memory-based transformer network (M-TR) that leverages coarse-scale his-torical information using local and global transformer encoders and decoder networks. The M-TR generates anomaly scores based on the reconstructed local memory, and we proposed the use of SPOT to define the anomaly threshold dynamically. The proposed M-TR was benchmarked against several state-of-the-art unsupervised learning models and anomaly detection models and showed superior performance in terms of F\u2081 and ROC scores. Also, we showed that the proposed model can run in real-time with an execusion time of 1.2 sec. for 1-minute readings, and can be applied for real-time application."}]}