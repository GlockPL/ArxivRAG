{"title": "A GENERALISATION OF VOTER MODEL: INFLUENTIAL NODES AND CONVERGENCE PROPERTIES", "authors": ["Abhiram Manohara", "Ahad N. Zehmakan"], "abstract": "Consider an undirected graph G, representing a social network, where each node is blue or red, corresponding to positive or negative opinion on a topic. In the voter model, in discrete time rounds, each node picks a neighbour uniformly at random and adopts its colour. Despite its significant popularity, this model does not capture some fundamental real-world characteristics such as the difference in the strengths of individuals connections, individuals with neutral opinion on a topic, and individuals who are reluctant to update their opinion. To address these issues, we introduce and study a generalisation of the voter model.\nMotivating by campaigning strategies, we study the problem of selecting a set of seeds blue nodes to maximise the expected number of blue nodes after some rounds. We prove that the problem is NP-hard and provide a polynomial time approximation algorithm with the best possible approximation guarantee. Our experiments on real-world and synthetic graph data demonstrate that the proposed algorithm outperforms other algorithms.\nWe also investigate the convergence properties of the model. We prove that the process could take an exponential number of rounds to converge. However, if we limit ourselves to strongly connected graphs, the convergence time is polynomial and the period (the number of states in convergence) divides the length of all cycles in the graph.", "sections": [{"title": "Introduction", "content": "Humans constantly form and update their opinions on different topics, from minor subjects such as which movie to watch and which new caf\u00e9 to try to major matters such as which political party to vote for and which company to invest in. In the process of making such decisions, we tend to rely not only on our own personal judgment and knowledge, but also that of others, especially those whose opinion we value and trust. As a result, opinion diffusion, influence propagation, and (mis)-information spreading can affect different aspects of our lives from economy and defense to fashion and personal affairs.\nRecent years have witnessed a booming development of online social networking platforms like Facebook, WeChat, and Instagram. The enormous popularity of these platforms has led to fundamental changes in how humans share and form opinions. Social phenomena such as disagreement and polarisation that have existed in human societies for millennia, are now taking place in an online virtual world and are tightly woven into everyday life, with a substantial impact on society.\nThere has been a growing demand for a quantitative understanding of how opinions form and diffuse because of the existence of social ties among a community's members and how the underlying structure of a social network can influence this process, cf. Faliszewski et al. [2022], Elkind et al. [2009], Brill et al. [2016], Bredereck and Elkind"}, {"title": "Preliminaries", "content": "Graph Definitions. A weighted directed graph with positive real weights is an ordered triple (V, E, w) where elements of V are nodes and $E \\subset V \\times V$ is a set of ordered pairs of nodes called edges and $w : E \\rightarrow \\mathbb{R}^+$ is a function that assigns a constant strictly positive weight to each edge of the graph. We define n := |V| and m := |E|. For two nodes $v_1, v_2 \\in V$, we say $v_1$ is an in-neighbour of $v_2$ (resp. $v_2$ is an out-neighbour of $v_1$) when $(v_1, v_2) \\in E$. Furthermore, we say there is an edge from $v_1$ to $v_2$. Let $N^+(v_1) := \\{v \\in V : (v_1,v) \\in E\\}$ and $N^-(v_1) := \\{v \\in V : (v, v_1) \\in E\\}$ be the set of out-neighbours and in-neighbours of $v_1$ respectively and $d^+(v_1) := |N^+(v_1)|$ and $d^-(v_1) := |N_-(v_1)|$ be the out-degree and in-degree. Graph G is said to be normalised if\n$\\sum_{u\\in N^+(v)}w((v, u)) = 1 \\quad \\forall v \\in V$.\nA path is a list of distinct nodes $P = p_0, p_1, p_2, ..., p_l, 0 \\leq l < n$ such that $(p_i, p_{i+1}) \\in E \\quad \\forall 0 < i < l$. The length of a path l is the number of edges in the path. For any two subsets $S, T \\subset V$, an S-T path (or a path from S to T) is a path P such that $S \\cap P = \\{p_0\\}$ and $T \\cap P = \\{p_l\\}$. A graph is said to be strongly connected if for any two nodes $v_1, v_2 \\in V$, there exists a path from $v_1$ to $v_2$. The distance from $v_1$ to $v_2$ is the length of the shortest path from $v_1$ to $v_2$. The diameter of a graph is the largest distance between any two nodes in the graph.\nMarkov Chains. A Markov chain is a normalised weighted directed graph with positive real weights. The nodes are called states and the set of out-neighbours depict the states reachable with the weights being the probability of going to those states.\nModel Definitions. A colouring is a function $S : V \\rightarrow \\{r, b, u\\}$ where r stands for red, b for blue and u for uncoloured. We say a node is coloured if it is not uncoloured (i.e., is eithr blue or red). We define $B_S(v)$ to be the nodes in $N^+(v)$ which are blue in S. We simply write $B^+(v)$, when S is clear from the context.\nWe also introduce a notion of stubbornness that some nodes are fixed on their opinion and not willing to change it. The following definition makes it clear that we capture this notion through nodes with out-degree 0.\nDefinition 1 (Generalised Voter Model) In the GENERALISED VOTER MODEL on a graph $G = (V, E,w)$ and an initial colouring $S_0$, nodes update their colour simultaneously. In each discrete-time round t, let the colouring be $S_t$. $S_{t+1}$ is decided node-wise as follows: each node v picks an out-neighbour proportional to the weight of the edge to that node and adopts that colour if it is red or blue. If it is uncoloured or if v has no out-neighbours v retains its colour. Say v picks some $w \\in N^+(v)$; then, $S_{t+1}(v) = S_t(w)$ if $S_t(w) \\neq u$, and $S_{t+1}(v) = S_t(v)$, otherwise.\nThe nodes with no out-neighbours will retain their initial colour after each round, emulating stubbornness (or loyalty). Note that under our model, uncoloured represents nodes who are yet to be introduced to either idea. A stubborn uncoloured node represents someone who has no opinion and refuses to get one. In the setting of elections, it may be someone who dislikes politics and will abstain from the vote. In the setting of a product brand, it may be someone who is not in the target demographic like an adult without children in the market for kids' toys.\nThe probability of turning blue in round t + 1 if the node was not already blue in round t is the probability of picking a blue neighbour. Since the choice of neighbour is determined by the weights, this comes to be\n$P_b(v) := \\frac{\\sum_{u\\in B^+(v)} w((v, u))}{\\sum_{u\\in N^+(v)} w((v, u))}$\n(If $S_t(v) = b$, we have to add the probability of picking an uncoloured neighbour.)\nSimilarly, we define $P_r(v)$ and $P_u(v)$. We notice that if we normalise the graph by dividing each weight by $\\sum_{u\\in N^+(v)} w((v, u))$, the probabilities of picking each neighbour is not effected and hence our model is not effected.\nFurther, if $w'$ given by $w' ((v, w)) := \\frac{w((v,w))}{\\sum_{u\\in N^+(v)} w((v, u))}$ $\\forall (v, w) \\in E$ are the normalised weights, the probability of picking a neighbour is the weight of the edge to that neighbour and\n$P_b(v) = \\sum_{u\\in B^+(v)} w'((v, u))$\nGoing forward we will assume that all graphs are normalised.\nThus, the probability distribution of $S_{t+1}(v)$ can be shown as in Table 1 where each row is the distribution for that value of $S_t(v)$. Since the distribution of $S_{t+1}(v)$ only depends on $S_t$ (and G which is constant), we can calculate"}, {"title": "Previous Work", "content": "Models. Numerous opinion diffusion and influence propagation models have been developed to understand how members of a community form and update their opinions about various subjects through social interactions with their peers, cf. Salehi-Abari et al. [2019], Das et al. [2013], Amelkin and Singh [2019], Abebe et al. [2018], Liu et al. [2023], Shirzadi and Zehmakan [2024]. As mentioned, our main focus is on the generalisation of voter model, which was introduced originally in Hassin and Peleg [1999], and has been studied extensively, cf. Petsinis et al. [2023].\nLet us give a short overview of some of the most popular models.\nIC Model. The Independent Cascade (IC) model, popularised by the seminal work of Kempe et al. Kempe et al. [2003], has obtained substantial popularity to simulate viral marketing, cf. Li et al. [2018]. In this model, initially each node is uncoloured (inactive), except a set of seed nodes which are coloured (active). Once a node is coloured, it gets one chance to colour each of its out-neighbours. Different extensions of the IC model have been introduced, cf. Lin and Lui [2015], Myers and Leskovec [2012], Bharathi et al. [2007], Lu et al. [2015], Carnes et al. [2007], Zhu et al. [2016], Datta et al. [2010], N Zehmakan and Galam [2020]. The IC model aims to simulate the spread of (mis)-information or the adoption of novel technology (with no competitor).\nThreshold Model. In the Threshold model, each node v has a threshold $\\tau(v)$. From a starting state, where each node is either coloured or uncoloured, an uncoloured node becomes coloured once $\\tau(v)$ fraction of its out-neighbours are coloured.\nMajority-based Model. Let each node be either red or blue. Then, in the Majority model Chistikov et al. [2020], Zhuang et al. [2020], Zehmakan [2020, 2021], in every round each node updates its colour to the most frequent colour in its out-neighbourhood. Unlike the IC or Threshold model, here a node can switch back and forth between red and blue (similar to ours). Different variants of the majority model for example random tie-breaking rule Zehmakan [2023], asynchronous updating order Bahrani et al. [2020], room-based variant Li and Zehmakan [2023], and with bias towards a superior opinion Lesfari et al. [2022] have been considered.\nAdoption Maximisation. For various models, the problem of finding a seed set of size k which maximises the expected number of nodes colored with a certain color after some rounds have been studied extensively and a large collection of approximation and heuristic algorithms have been developed, cf. Kempe et al. [2003], Li et al. [2018], Chen et al. [2010]. Similar to our algorithmic and complexity results, their main goal is to design efficient algorithms for the selection of a set of blue seed nodes. The problem is proven to be NP-hard in most scenarios and thus the previ-ous works have resorted to approximation algorithms for general case Lu et al. [2015], Carnes et al. [2007], Datta et al. [2010] or exact algorithm for special cases Bharathi et al. [2007]. For example for the Threshold model, the problem cannot be approximated within the ratio of $O(2^{\\log^{1-\\epsilon}n})$, for any constant $\\epsilon > 0$, unless $NP \\subseteq DTIME(n^{polylog(n)})$ Chen [2009]. However, the problem is traceable for trees Centeno et al. [2011] and there is a (1 \u2013 1/e)-approximation algorithm for the Linear Threshold (LT) model, where the threshold $\\tau(v)$ is chosen uniformly and independently at random in [0, 1], cf. Kempe et al. [2003]. Similar results are proven for the IC model and majority model (and its variants) Kempe et al. [2003], Mishra et al. [2002].\nFor the voter model, it was proven that the final fraction of blue nodes is equal to the summation of degree of all initially blue nodes divided by the summation of all degrees Hassin and Peleg [1999]. Thus, a simple algorithm which picks the nodes with highest degree solves the problem in polynomial time. However, as we will prove, the problem is computationally much harder in our more general setup, that is, there is no polynomial time algorithm unless P=NP.\nThe problem also has been proven to be NP-hard, Even-Dar and Shapira2 Even-Dar and Shapira [2007], when each node has a cost and the goal is to maximize the expected number of blue nodes in round $\\tau$ of the voter model by. They also provided a FPTAS for this problem.\nConvergence Properties. The convergence time is arguably one of the most well-studied characteristic of dynamic processes, cf. Auletta et al. [2019, 2018]. For the Majority model on undirected graphs, it is proven Poljak and Turz\u00edk [1986] that the process converges in $O(n^2)$ rounds (which is tight up to some poly-logarithmic factor Frischknecht et al. [2013]). Better bounds are known for special graphs Zehmakan [2020]. The convergence properties have also been studied for directed acyclic graphs Chistikov et al. [2020], weighted graphs Keller et al. [2014], a room-based variant G\u00e4rtner and Zehmakan [2020] and when the updating rule is biased Lesfari et al. [2022].\nFor the Threshold model on undirected graphs, it is proven Zehmakan [2019] that when $\\tau(v) = r/d^+(v)$ for a fixed r, then the convergence time can be bounded by $O(rn/\\delta)$, where $\\delta$ is the minimum degree.\nFor the Voter model, an upper bound of $O(n^3 \\log n)$ has been proven in Hassin and Peleg [1999] using reversible Markov chain argument.\nAbdullah and Draief Abdullah and Draief [2015] considered a model similar to the voter model with two alternatives, where in each round every node picks k of its neighbours at random and adopts the majority color among them, where k is a sufficiently large odd integer. They proved that starting from a random initial coloring, the process converges in $O(\\log_k \\log_k n)$ rounds in expectation.\nFor the Majority model, it is known Goles and Olivos [1980] that the asynchronous version always reaches a fixed profile while the synchronous variant might deterministically switch between two profiles. For the voter model, if the graph is non-bipartite, the process reaches an all blue or all red state. If it is bipartite, it could switch between two colourings."}, {"title": "Our Contribution", "content": "We introduce a generalisation of the voter model which takes into account several important real-world characteristics: (1) the underlying network can be directed and weighted (which allows a richer modeling of individuals interactions) (2) some nodes can be uncoloured to account for individuals who have adopted neither a positive nor negative opinion on the topic (3) some nodes will never change their colour since they are stubborn or loyal."}, {"title": "Maximum Adoption Problem", "content": "The main results of this section are a proof that there is no efficient algorithm that can guarantee an approximation ratio of $(1 - \\frac{1}{e} + \\epsilon)$ for any positive $\\epsilon$ for the Idea Adoption Maximisation problem, and to provide a greedy algorithm that guarantees a $(1-\\frac{1}{e})$ approximation ratio."}, {"title": "Innaproximability", "content": "Theorem 5.1 There is no polynomial time $(1 - \\frac{1}{e} + \\epsilon)$-approximation algorithm (for any constant $\\epsilon > 0$) for the Idea Adoption Maximisation Problem, unless $NP \\subseteq DTIME(n^{O(\\log\\log n)})$.\nProof. We will prove this by reducing any instance of the Maximum Subset Cover Problem Khuller et al. [1999] to an instance of the Idea Adoption Maximisation Problem. Notice that $(1 - \\frac{1}{e} + \\epsilon)$ must be at most 1. Thus, $\\epsilon < \\frac{1}{e}$ and $[\\frac{1}{\\epsilon}] \\ge 2$. Consider an instance of the Maximum Subset Cover Problem. Let $O = \\{o_1, o_2,\\dots o_m\\}$ be the set and $S = \\{S_1, S_2, \\dots S_l\\}$ be the collection of subsets of O. We need to find $A \\subset S$ of size k that maximises $\\bigcup_{s \\in A} s$. If k = 0, the answer is 0. If k > l we just pick all the subsets and if $\\exists O \\notin \\bigcup_{s \\in S} s$, it is not pickable, so we can safely ignore it. Thus, assume $0 < k < l$ (This implies that $l > 2$ since k is an integer) and $\\bigcup_{s \\in S} s = O$. If $k \\ge m$, we can pick one set containing the object for each object and the solution is m. So assume $k < m$. The same strategy then gives us that the solution is $\\ge k$. Now consider nodesets $V_O := \\{o_1, \\dots o_m\\}$ and $V_S := \\{s_1, \\dots s_l\\}$. Add edges $(o_i, s_j)$ if and only if $o_i \\in S_j$. Additionally, for each $1 \\le j \\le m$, we introduce $d = max([\\frac{1}{\\epsilon}], m)$ more nodes $o^j_1 \\dots o^j_d$, and edges $(o^j_1, o_j), (o^j_2, o_j) \\dots (o^j_d, o_j)$. All edges have weight $\\frac{1}{1}$ (before normalisation) and all nodes are initially uncoloured. we set $\\tau = ld + 1$ and thus define the instance of our Idea Adoption Maximisation Problem. d and $\\tau$ have been chosen such that the following useful inequalities hold:"}, {"title": "Greedy Algorithm", "content": "Since the Idea Adoption Maximisation problem is NP Hard, we will explore polynomial time approximation algo-rithms. We know that if a function is monotone and submodular, the greedy algorithm of increasing our set one node at a time, picking the highest increasing node at each step gives us a $(1 - \\frac{1}{e})$-approximation Nemhauser et al. [1978]. Thus, we will now show that $F_\\tau(A)$ is monotone and submodular for all $\\tau$, and that the greedy algorithm using it runs in polynomial time.\nTheorem 5.7 $F_\\tau(A)$ is monotone and submodular.\nProof. To prove this, we will introduce some notation."}, {"title": "Idea Adoption with Loyal Agents", "content": "Now consider if we are very persuasive with our marketing and the nodes we pick as our seed nodes will not only be blue at time 0, but will stay blue throughout, becoming loyal.\nRecycling notation, consider $G_\\tau(A)$ to be the expected number of blue nodes at time $\\tau$ if the nodes in A are made loyal and blue at time 0 and $G_\\tau^{P_\\tau} (A)$ to be the number of blue nodes at time $\\tau$ if the network follows pick sequence $P_\\tau$.\nHardness: In the proof of hardness for the Idea adoption problem, the nodes we pick are stubborn. Hence, the calculations hold on making the selected nodes loyal. We do need to show that those are still the best nodes to pick if other nodes can be made loyal.\nTheorem 5.9 The conclusions of Theorem 5.1 are true even when the selected nodes are made loyal\nProof. As discussed above, in the proof of Theorem 5.1, it suffices to show that the best nodes to pick are in $V_S$. Since all nodes are initially uncoloured or blue, once a node turns blue it is not changing its colour. Thus, in the network constructed, the expected gain is the same whether nodes are made loyal or not. Since in that proof, we have shown that we get the highest expected gain picking only nodes in $V_S$, it is true here as well. Further, since the expected output is same in both cases, the reduction holds and we get the same approximation of the Maximum Subset Cover problem. Thus, the results of Theorem 5.1 hold even when selected nodes are made loyal.\nMonotonicity and Submodularity:\nThe expected output was only the same in the special graph we constructed for the reduction. Thus, we need to show that the expected output is still monotone and submodular in general. In line with our proof for Theorem 5.7 it suffices to show that for each $P_\\tau$, $G_\\tau^{P_\\tau}$ is monotone and submodular. We need to modify the structure of our node sequence to incorporate loyalty of picked nodes since their colour is not affected by their pick sequence. Independent of the seed set A, we have an initial colouring S with coloured and uncoloured nodes. We can use this to shorten the node sequence of a node v, removing nodes which cannot affect the colour of v at time t such that v turns blue if A has an intersection with this reduced node set."}, {"title": "Experimental Comparison.", "content": "Data. We have used real world social network data available on SNAP database Leskovec and Krevl [2014]. We have used networks from Facebook McAuley and Leskovec [2012], Bitcoin Kumar et al. [2016, 2018], Twitter Fink et al. [2023], Gnutella Ripeanu and Foster [2002], and Wikipedia West et al. [2009]. We have also generated and used Hyperbolic Geometric Graphs Aldecoa et al. [2015] for the tests on convergence time."}, {"title": "Convergence Properties", "content": "Periodicity\nWe now find the absorbing connected components of M. First we consider the case where our network is strongly connected and then extend to the general case.\nTheorem 6.1 A strongly connected aperiodic network will reach a consensus.\nProof. We will prove this by showing that there is a path from any non-monotonous colouring to a monotonous one. Then, any strongly connected component that does not contain a monotonous colouring can not be absorbing, but the monotonous colourings have out degree 0, thus are singleton strongly connected components that are also absorbing, thus, these are the only absorbing strongly connected components of M. Consider an arbitrary non-monotonous colouring S of G. If there are no blue nodes in S, then there have to be red and uncoloured nodes. Consider the update sequence where every node which has a red out-neighbour picks it. Any node that doesn't have a red out-neighbour will pick an uncoloured neighbour and retain its colour. Then, since there is at least one red node, after t rounds, every node at a distance at most t from it will be red and in a number of rounds equal to the diameter of G, all nodes will be red. If there are blue nodes in S, consider a blue node v and an update sequence where every node"}, {"title": "Convergence Time on Real-world Networks", "content": "To verify the results about convergence time, we generate HRG of increasing size and simulate our model on them from different initial colourings. HRG are generated using the algorithm provided in Aldecoa et al. [2015]. In the algorithm, the value of R was taken to be 5 and a to be 1.0 since these values gave good edge to node ratio matching the real world networks. Additionally, since we are testing the bounds for strongly connected graphs, we check if the graph is strongly connected. If it is not, we discard the graph and generate one more. To colour the graph, we adopt three methods.\n1. We colour two diametrically opposite points with red and blue respectively\n2. Each node is assigned a random colour, with probability of either red or blue being 1% each and uncoloured being 98%.\n3. Each node is assigned a random colour, red or blue with 50% probability. There are no uncoloured nodes.\n4. All the blue nodes are concentrated as the\\frac{\u03c4}{2} nodes closest to a node. The remaining nodes are red, there are no uncoloured nodes.\nThe idea for approach 1 and 4 is to minimise the initial interaction between red and blue nodes so that they take maximum time to overcome each other. Also, the first two experiments have most of the nodes initially uncoloured and the last two experiments have all nodes initially coloured. The algorithms for finding diameter, shortest distances, and testing strongly connectedness come from the Networkx library. Hagberg et al. [2008].\nSince we do not have an algorithm to directly calculate expected convergence time, we use a Monte Carlo approach, generating a HRG, running the simulation, and noting the convergence time. We then average the convergence time over 128 random graphs for each size.\nThe average number of steps against graph size is plotted in Figure 5 for a number of initial colourings. We see that colouring all the nodes takes longer on average to converge than leaving them uncoloured. This might mean that the process converges through a path where all coloured nodes spread to uncoloured nodes in a way other than by random neighbours or nearest out neighbours so initialising it this way takes longer to converge. Also in both cases, the random colouring takes longer on average. So having random neighbours of a different colour can take longer to converge than having some structure to the initial state."}, {"title": "Final Product Adoption Maximisation", "content": "Sometimes, it makes sense to maximise the number of blue nodes at each time, instead of at some time $\\tau$. Consider for example, a new brand of toothpaste entering the market. Say people buy toothpaste once a month, and they choose their toothpaste brand according to their colour. the sales team would want to increase the average number of tubes sold per round over every round. We know that the network eventually reaches an absorbing strongly connected component of its Markov chain and that if this component is ergodic, we have a stationary distribution of states. Then, another notion of a long term average is the average of the number of blue nodes in each colouring in the absorbing strongly connected component weighted by their value in the stationary distribution. We will now see that these two notions of a long term average agree with each other.\nDefinition 8 Define the Product Adoption of a Network as\n$\\lim_{x \\to \\infty} \\frac{\\sum_{t=1}^{x} \\sum_{v \\in V} S_t(v, b)}{x}$"}]}