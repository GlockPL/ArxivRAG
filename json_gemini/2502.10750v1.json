{"title": "Human-Centric Community Detection in Hybrid Metaverse Networks with Integrated AI Entities", "authors": ["Shih-Hsuan Chiu", "Ya-Wen Teng", "De-Nian Yang", "Ming-Syan Chen"], "abstract": "Community detection is a cornerstone problem in social network analysis (SNA), aimed at identifying cohesive communities with minimal external links. However, the rise of generative AI and Metaverse introduce complexities by creating hybrid human-AI social networks (denoted by HASNs), where traditional methods fall short, especially in human-centric settings. This paper introduces a novel community detection problem in HASNs (denoted by MetaCD), which seeks to enhance human connectivity within communities while reducing the presence of AI nodes. Effective processing of MetaCD poses challenges due to the delicate trade-off between excluding certain Al nodes and maintaining community structure. To address this, we propose CUSA, an innovative framework incorporating AI-aware clustering techniques that navigate this trade-off by selectively retaining AI nodes that contribute to community integrity. Furthermore, given the scarcity of real-world HASNs, we devise four strategies for synthesizing these networks under various hypothetical scenarios. Empirical evaluations on real social networks, reconfigured as HASNs, demonstrate the effectiveness and practicality of our approach compared to traditional non-deep learning and graph neural network (GNN)-based methods.", "sections": [{"title": "1 Introduction", "content": "Community detection is a fundamental problem in social network analysis (SNA), focusing on identifying tightly-knit communities with minimal external connections [1][2][3]. This task is critical for analyzing social relationships and holds practical applications in marketing and personalized services, where insights into community structures enable targeted strategies and enhance user engagement [4][5].\nThe integration of generative Al and Metaverse is transforming traditional social networks, creating human-Al social networks (HASNs) (Figure 1) that blend human and Al entities within shared digital spaces. In Metaverse environments, which combine virtual reality (VR) and mixed reality (MR) components, users engage with both humans and AI-driven entities, such as avatars and virtual assistants, forming communities that span the physical and digital worlds. For example, social Metaverse platforms like Microsoft AltspaceVR [6] and Meta Horizon Workrooms [7] enable immersive, large-scale virtual gatherings, allowing users to interact with AI alongside human participants through customizable 3D environments, spatial audio, and interactive tools.\nIn these evolving HASNs, a fundamental shift occurs: traditional social clusters now include Al nodes, making human-centric community detection crucial. Unlike conventional networks, HASNs often aim to prioritize human interactions while accommodating AI entities that provide social support or assistance. For instance, platforms such as Nomi AI [8] create AI companions for users, enhancing social engagement and addressing issues like loneliness. Similarly, platforms like Engage [9] and Mozilla Hubs [10] host virtual events and social gatherings, integrating AI to foster rich, interactive experiences. These hybrid networks demand new community detection methods that discover human-centric communities by selectively retaining AI nodes that strengthen community cohesion and removing those that do not. This approach supports applications focused on authentic human engagement, including marketing, user recommendations, and digital companionship.\nHowever, applying traditional community detection methods to these hybrid networks presents several challenges. For instance, (1) methods that ignore AI entities may result in communities with an excess of Als, which are less effective for human-centric applications such as advertising and recommendation, as these efforts are not relevant for Al entities. Moreover, this approach can also lead to incorrect community assignments for human members. (2) Alternatively, one might consider removing all AI nodes before conducting community detection. However, this could disrupt connections between AI and human nodes, as well as among AI nodes themselves. Since community detection relies heavily on graph topology, these disruptions may lead to inaccurate community assignments for human users. (3) A third approach could involve using anomaly detection techniques to classify certain AI nodes as anomalies and remove them before clustering. However, AI node behavior often diverges from conventional \"anomalies\" in traditional social networks [11][12]. Unlike typical outliers, AI nodes may mimic human behavior, support human interactions, and integrate into communities, making this strategy likely to yield unsatisfactory results.\nIn this work, we introduce a novel community detection problem tailored to scenarios where humans and numerous Al entities are intertwined within social networks\u00b9, emphasizing human closeness derived from the graph structure. We envision an Metaverse envi-ronment where a social network comprises both human users and Al entities, forming what we term the Human-AI Social Network (HASN), as illustrated in Figure 1. Accordingly, we envisage four scenarios of HASNs existing in Metaverse [13]: (1) Random Interaction, (2) Introverted Humans Prioritized for Interaction, (3) Distinct AI Types, and (4) Dual-personality Als. These proposed scenarios are grounded in the versatility of AI, allowing it to interact widely and adaptively with diverse users [14]. (Details are provided in the experimental setup, Section 5.1.)\nThis work focuses on community detection in HASNs, especially when the primary focus is on human users (human-centric communities). Ideally, clustering should produce clusters with high human closeness and minimal Al presence, balancing the removal of Al nodes while maintaining community integrity. Let us explore some illustrative examples as follows. Figure 2 shows several approaches to cluster an HASN depending on how they consider the AI nodes: (1) Al-complete clustering: Figure 2 (a) shows a clustering result from a method that ignores AI nodes and performs clustering directly. However, as observed, each community contains an excessive number of AI entities, making it impractical for human-centric applications such as advertising and recommendation. In addition, this approach may result in inaccurate community assignments for human members (e.g., A and D, C and E). (2) AI-blind clustering: Figure 2 (b) shows a clustering result from a method that treats all Al nodes as outliers and removes them before clustering. Human nodes A and D are initially connected to node F through AI node AI-3, suggesting that A, D, and F may belong to the same community. However, this approach can disrupt connections between AI and human nodes, as well as among AI nodes, resulting in the loss of important links and leading to unsatisfactory community results. (3) Al-anomaly clustering: Figure 2 (c) shows a clustering result where certain AI nodes are identified as anomalies through anomaly detection techniques and removed before clustering. However, unlike typical anomalies in traditional social networks, which often link different communities or form dense connections [11] [12], \u0391\u0399 nodes may mimic human behavior, support human interactions, and integrate into communities. Consequently, as shown, traditional anomaly detection would remove AI-2 and AI-3, resulting in inaccurate community outcomes for human users (e.g., A and F). (4) Al-aware clustering: Figure 2 (d) illustrates clustering results achieved by identifying AI nodes that serve as bridges between humans or connect key human nodes. For instance, AI-3 is an AI\n\u00b9To the best of our knowledge, this is the first study to explore community detection in the hybrid human-AI scenario. While focusing on structural information, our approach is designed to be compatible with future integration of semantic features, enabling more refined human-centric clustering based on shared interests or interaction patterns."}, {"title": "2 Related work", "content": "Community Detection. Community detection is the process of grouping nodes into densely connected communities with sparse interconnections, depending on the structure of the graph. Early traditional non-deep learning methods, such as the spectral clustering algorithm [15], optimize ratio and normalized-cut criteria. Louvain [16] is a well-known optimization algorithm that uses a node-moving strategy to optimize modularity. Extensions of greedy optimizations include simulated annealing [17], extremal optimization [18], and spectral optimization [19].Recently, deep learning-based community detection techniques [2][20] have gained traction, with graph neural networks (GNNs) emerging as a key trend. These methods learn lower-dimensional representations from high-dimensional structural data [21] [22], capturing diverse information from nodes [23], edges [24], neighborhoods [25], or multigraphs [26]. Moreover, deep learning effectively uncovers community structures in large-scale [27], sparse [28], complex [29], and dynamic networks [30]. Despite the extensive exploration of various community detection methods and their application in different real-world scenarios, most existing approaches generally operate under the common assumption that social networks are solely composed of human users. In this work, we investigate a novel community detection problem tailored for social networks where humans and"}, {"title": "3 Problem Formulation", "content": "An HASN graph is denoted as G(V, E), where Vu \u2208 V is a set of vertices comprising the sets H (human users) and AI (AI entities), such that |V| = |H| + |AI|, and Ve \u2208 E represents the set of edges between humans, Als, and human-AI connections.\nThe MetaCD clustering problem aims to partition an HASN graph into K disjoint subgraphs $C_i(V_i, E_i)$, where $U_{k=1}^K V_i \u2286 V$ (since Al nodes and their connected edges may be removed during the clustering process) and $V_i \u2229 V_j = 0$, with prior knowledge of which nodes in the network are AI nodes. The goal of MetaCD is to discover a set of clusters (subgraphs) $P = {C_i}_{i=1}^K = {C_1, C_2, . . . , C_K}$ that can maximize human closeness with minimal Al presence. Concretely, a desirable clustering result of an HASN should achieve two key objectives simultaneously: (1) maximizing human closeness and (2) minimizing the presence of AI nodes for each cluster."}, {"title": "3.1 Objective Function of MetaCD", "content": "To achieve the goal of MetaCD, we employ a modularity function introduced in a seminal work by Newman as our objective function [39]:\n$Q(P = {C_i}) = \\frac{1}{2|E|} \\sum_{i=1}^K (\\sum_{p,q \\in C_i} (A_{pq} - \\frac{d_p d_q}{2|E|}))$                                                          (1)\nModularity Q measures clustering quality in networks by comparing the density within clusters to the density between clusters. It ranges from -0.5 to 1, with higher scores indicating better clustering. Here, A is the adjacency matrix, $A_{pq}$ indicates the presence of a connection between nodes p and q, and $d_p$ is the degree of node p.\nTo encourage the clustering algorithm to generate cohesive communities with minimal AI presence, we modify the vanilla modularity by infusing a reward-penalty function. This function reweights the clustering quality based on the ratio of humans (and AIs) presence in each cluster $C_i$, defined by:\n$W(C_i) = \u03b2 \u00b7 \\frac{\\sum_{v \\in C_i} L_v}{|C_i|} - \u03b3 \u00b7 \\frac{\\sum_{v \\in C_i} (1 \u2212 L_v)}{|C_i|}$                                                                                                                                                                             (2)\nwhere\n$L_v = \\{\n1,& \\text{if node } v \\in H \\\\\n0,& \\text{if node } v \\in AI\n$                                                                                                                                                                                              (3)\nThis leads to a human-centric modularity HQ:\n$H_Q(P) = \\frac{1}{2|E|} \\sum_{i=1}^K a \u00b7 W (C_i) \u00b7 (\\sum_{p, q \\in C_i} (A_{pq} - \\frac{d_p d_q}{2|E|}))$(4)\nNote that \u03b2 is the weight for rewarding human nodes, y is the weight for penalizing AI nodes, and a is the weight for adjusting the emphasis on human nodes in the objective function 3. Accordingly, the purpose of MetaCD is to discover a set of clusters (subgraphs) P = {$C_i$}$_{i=1}^K$ that maximizes HQ:\n$P^* = arg\\_max\\_{{C_i}_{i=1}^K} H_Q({C_i}_{i=1}^K)$                                                                                                                            (5)\nThis objective function promotes the generation of tight-knit communities with minimal Al presence. Since certain Al entities can aid in the formation of these human-centric communities, it is crucial to identify and preserve AI nodes that can promote human closeness while removing those that can not."}, {"title": "4 Algorithm Design for MetaCD", "content": "To effectively address MetaCD, we develop a novel algorithm, named Customized Al-aware Simulated Annealing (denoted by CUSA), which integrates three key components (cf. Figure 3).\n(i) To tackle the challenge in the evaluation of AI nodes, CUSA incorporates an AI Scoring mechanism to assess the humanoid score of each Al node in a human-Al social network (HASN). CUSA achieves this by assigning distinct weights to edges based on neighboring relationships. Specifically, weights are assigned as follows: human-human edges are denoted by hh, human-Al edges by ha, and"}, {"title": "5 Empirical Experiments", "content": "5.1 Experimental Setup\nBenchmark Datasets. In the absence of real-world HASNs, we propose four strategies for generating such graphs based on the three widely-used datasets (i.e., Cora, CiteSeer, and PubMed). Table 4 in Appendix E.1 shows some basic statistics of the three datasets for our experiments.\nInitially, we generate a specific number of new Al nodes, such as n% (default set to 10%) 7 of the total number of nodes in a real-world network dataset. Subsequently, we employ proposed generation strategies for inserting AI nodes into these networks, thereby constructing HASNs. Notably, after creating the HASNs using the proposed generation strategies, we anticipate the evolution of the social network over time, potentially resulting in the formation of new connections between individuals. Due to space limitations, we outline the four proposed generation strategies along with their specific assumptions [8][43][44][45] and provide detailed descriptions of the evolution method for HASNs in Appendix D.1 and D.2, respectively. Additionally, the validation of generation strategies using real-world HASNs is presented in Appendix E.7.\nComparative Methods. We compare CUSA with four baselines: two traditional non-deep-learning community detection methods (Spectral and Louvain) and two GNN-based community detection methods (GCC and LSEnet).\n(1) Spectral [15] is a clustering algorithm based on the normalized Laplacian matrix and the regularized adjacency matrix to minimize ratio cut."}, {"title": "5.2 Experimental Results", "content": "5.2.1 Comparison of Different Al Node Scoring Methods Used in CUSA. In the first set of experiments, we assess the performance of"}, {"title": "6 Conclusion", "content": "To the best of our knowledge, this paper is the first to investigate human-centric community detection in hybrid networks (HASNS) that contain human and AI nodes. Based on four proposed HASN scenarios, we introduce a new problem, MetaCD, which aims to identify clusters that maximize human closeness while minimizing Al presence. To address MetaCD, we develop a novel algorithm, CUSA, which leverages Al-aware clustering techniques to balance the trade-off between Al removal and community integrity. Empirical evaluations on real social networks, reconfigured as HASNs, demonstrate the effectiveness of CUSA compared with state-of-the-art methods. Furthermore, we observe that tailored generation strategies can further enhance clustering outcomes, providing valuable insights for enterprises developing Als to foster human connections and uncover latent communities."}, {"title": "Appendix", "content": "A Potential Application Scenarios\nWe discuss several potential real-world applications for MetaCD, showcasing how it enhances user experiences across entertainment, psychology, and e-learning. By complementing human interactions with Al nodes, MetaCD fosters collaboration, builds connections, and supports diverse needs while addressing challenges to ensure effective integration.\n(1) Entertainment: Enhancing Social Metaverse Platforms\nSocial metaverse platforms (e.g., Roblox and IMVU) can leverage MetaCD to help users discover suitable communities. Al nodes, tailored to individual preferences, seamlessly participate in social activities and fill gaps left by unavailable human participants, thereby enhancing the overall user experience.\nFor instance, Roblox has introduced AI companions that facilitate large-scale social interactions and actively engage in group activities. These companions assist humans in completing collaborative quests within the metaverse. When two previously unacquainted individuals repeatedly collaborate with the same Al companion during group tasks, they are more likely to interact and form connections to complete the task more effectively. Furthermore, AI companions can help maintain group functionality even when there are insufficient human members. However, including too many AI companions in a group can negatively impact the user experience. Group quests in the metaverse are designed to help humans develop skills and foster collaboration, not to rely solely on AI companions. An excessive number of AI participants may overshadow human contributions, resulting in fewer rewards for humans and discouraging their participation in future quests. Balancing the number of Al companions to facilitate interaction without overshadowing human contributions is therefore crucial for maintaining a positive user experience and encouraging continued engagement in the social metaverse.\n(2) Psychology: Building Supportive Online Therapy Groups\nOnline therapy services (e.g., 7 Cups and ReachOut) can utilize MetaCD to form effective support groups. Al nodes serve as empathetic companions, fostering open, warm, and judgment-free discussions to promote emotional well-being.\nFor example, 7 Cups integrates AI companions trained with diverse personalities-some calm and rational, others passionate and emotional-making them suitable for engaging with different types of participants. These AI companions observe participants' reactions, exchange insights with other AI companions, and determine the best ways to guide individuals. They encourage participants to share their thoughts and care for one another, helping to build meaningful social connections. However, if a support group includes too many AI participants, the opportunities for human-to-human experience-sharing diminish. This can lead to a sense of artificiality and erode confidence in the coping strategies learned during group interactions, as participants may doubt their real-world applicability. To ensure the effectiveness of the support group, it is essential to maintain an appropriate balance of AI companions. This balance enables participants to receive emotional support and practical coping strategies while fostering genuine social relationships.\n(3) E-Learning: Facilitating Collaborative Study Groups\nE-learning platforms (e.g., Khan Academy and Duolingo) can employ MetaCD to help students form effective study groups. Al nodes act as tireless teaching assistants, providing continuous guidance and engaging as peers at similar skill levels, fostering mutual motivation and sustained learning.\nFor instance, Khan Academy integrates AI companions that eagerly answer questions, guide problem-solving, and create tailored study plans. These AI companions collaborate within the study group to track learners' progress and ensure that the group advances steadily. They encourage learners to engage in discussions, assist each other in solving problems, and identify potential long-term learning partners. Despite their benefits, an overabundance of Al companions in a study group can reduce opportunities for learners to gain insights from peers with relevant experiences, such as balancing different subjects or managing study time effectively. This lack of shared experiences can make the group dynamic feel monotonous, leading to reduced engagement. Therefore, maintaining an optimal number of AI companions is key to fostering mutual learning and motivation while ensuring that human learners actively contribute to and benefit from the study group."}, {"title": "B The Derivation of \u0394Q", "content": "We provide a combinatorial interpretation for the derivation of modularity gain \u0394Q as follows. First, we reformulate the modularity Q function:\n$Q(P = C) = \\frac{1}{2|E|} \\sum_{i=1}^K (\\sum_{p,q \\in C_i} A_{pq} - \\frac{d_p d_q}{2|E|}) = \\frac{1}{2|E|} (\\sum_{i=1}^K \\frac{\\sum_{p,q \\in C_i} A_{pq}}{|E|} - \\frac{(\\sum_{v \\in C_i} d_v)^2}{2|E|^2}) = \\frac{1}{2|E|} (\\sum_{i=1}^K \\frac{E_{in}}{|E|} - \\frac{\\sum_{tot}^2}{2|E|^2})$           (8)\nwhere $E_{in}$ is the sum of the weights of the links inside the community Ci, and $\\sum_{tot}$ is the sum of the weights of the links incident to nodes in $C_i$.\nNote that the modularity gain \u0394Q is obtained by moving the node i (which is treated as an individual community $C_i$) into the community $C_j$. By the reformulated modularity function Q, to obtain the modularity gains \u0394Q, we only need to consider the communities $C_i$ and $C_j$. Since the node i is moved to the community $C_j$, the sum of the weights of the links inside the community $C_j$, i.e., $E_{in}$, is updated to $\\sum_{in} + k_{in}$, where $k_{in}$ is the sum of the weights of the links from node i to nodes in the community $C_j$. Likewise, the sum of the weights of the links incident to nodes in the community $C_j$, i.e., $\\sum_{tot}$ is updated to $\\sum_{tot} + k_i$, where $k_i$ is the sum of the weights of the links incident to node i.\nOn the other hand, since the node i is treated as an individual community $C_i$ and is moved to the community $C_j$, the modularity gain is $(\\frac{k_i}{2|E|})^2$. Therefore, the modularity gain \u0394Q is:\n$\\Delta Q = \\frac{1}{2|E|} (\\frac{\\sum_{in} + k_{in}}{|E|} - \\frac{(\\sum_{tot} + k_i)^2}{2|E|^2}) - (\\frac{\\sum_{in}}{|E|} - \\frac{(\\sum_{tot})^2}{2|E|^2}) + (\\frac{k_i}{2|E|})^2$ (9)"}]}