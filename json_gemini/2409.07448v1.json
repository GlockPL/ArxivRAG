{"title": "Introducing Perturb-ability Score (PS) to\nEnhance Robustness Against Evasion Adversarial\nAttacks on ML-NIDS", "authors": ["Mohamed elShehaby", "Ashraf Matrawy"], "abstract": "This paper proposes a novel Perturb-ability Score (PS) that can be\nused to identify Network Intrusion Detection Systems (NIDS) features\nthat can be easily manipulated by attackers in the problem-space. We\ndemonstrate that using PS to select only non-perturb-able features for\nML-based NIDS maintains detection performance while enhancing robust-\nness against adversarial attacks.", "sections": [{"title": "Introduction", "content": "Machine Learning (ML) is widely employed in Network Intrusion Detection\nSystems (NIDS) due to its high accuracy in classifying large volumes of data\n[1]. NIDS play a critical role in protecting computer networks by identifying\nmalicious traffic. However, ML-based NIDS models can be the target of evasion\nadversarial attacks [2]. These attacks aim to deceive the ML model during\ndecision-making by modifying or adding carefully crafted perturbations to the\ninput data, often based on the gradient of the target ML model.\nEvasion Adversarial Attacks in Feature-Space vs Problem-Space:\nIbitoye et al. [2] introduced the concept of \"space\" in the taxonomy of adversar-\nial attacks for network security, distinguishing between feature-space (manipu-\nlating feature vectors) and problem-space attacks (modifying actual data), see\nFigure 1.\nFeature-space attacks may not be practical against NIDS due to challenges\nan attacker would face in feature vector access and challenges with feature cor-\nrelations and network constraints [6]. On the other hand, problem-space at-\ntacks are more practical than feature-space as the modifications happen to the\nnetwork packets (feasible for an external attacker). They typically start with\nfeature-space perturbations, then translate to real-world packet modifications\n(Inverse Feature-Mapping [5]). Despite being considered more practical than\nfeature-space attacks, these attacks also face several practicality issues [6], such\nas: challenges in maintaining malicious intent and network functionality while\naltering packets; keeping up-to-date knowledge of the model, its features, and\nextraction techniques; or predicting correct common features. Problem-space\nattacks must also address NIDS features constraints.\nPerturb-ability of Features in Problem-Space Against NIDS: Problem-\nspace evasion attacks on NIDS involve modifying network packets with the aim\nof resulting in manipulations to some features within the feature vector. Per-\nturbing certain NIDS features within the problem-space, without affecting net-\nwork functionality, might be achievable, for instance, adding padding to pay-\nloads or introducing delays between packets perturbs length and interarrival\ntime features (Figure 2a). However, problem-space constraints significantly limit\nthe perturb-ability of many other NIDS features. For example, modifying the\ndestination IP or port number disrupts network functionality (Figure 2b), and\nsome features, like backward and inter-flow/-connection features, are inacces-\nsible for modification. N.B., by non-perturb-able features, we mean features\nthat cannot be perturbed in the problem-space while complying with\nnetwork constraints. Perturb-able features are the opposite."}, {"title": "Perturb-ability Score (PS)", "content": "We introduce the Perturb-ability Score (PS) to quantify each feature's perturb-\nability. We also discuss how PS classifies NIDS features and enables a defense\nagainst practical problem-space evasion attacks."}, {"title": "Evaluating PS", "content": "The goal of PS is to obtain a Perturb-ability score for each feature (fi) in a\ndataset D, where i is the ID of the feature from 1 ton, and n is the number of\nfeatures in D. PS should range from 0 (features extremely hard to perturb in\nproblem-space while maintaining the networks constraints) to 1 (features can be\nperturbed in problem-space while maintaining the networks constraints). The\nPSTotal [fi] is the geometric average of the following five fields:"}, {"title": "PS1 [fi]: Strict Header Features/ Affects Network or Malicious\nFunctionality:", "content": "This PS field focuses on strict Header features and network/malicious function-\nality of network flows after adding perturbations in the problem-space. PS1 [fi]\nwill be 0 if any of the following conditions are true (which will make PSTotal [fi]\nequals 0);\nC1: the feature fi is a strict header feature (IP addresses in TCP flows,\ndestination port number or protocol)\nC2: adding perturbation to feature fi will affect the network or malicious\nfunctionality of the flow.\nPS1 [fi] can be described with the following equation:\n$$PS1[fi] =\\begin{cases}\n10, & \\text{if (C1 or C2)} \\\\\n1, & \\text{otherwise}\n\\end{cases}$$"}, {"title": "PS2 [fi]: The range of Possible Values of a Feature:", "content": "This PS field considers the cardinality (number of possible values) of a NIDS\nfeature. In unconstrained domains like computer vision, attackers can freely\nperturb pixels, which typically have a range of 0 to 255 per channel (e.g., red,\ngreen, blue). Conversely, certain NIDS features have limited cardinality. For\nexample, a NIDS dataset may have binary or categorical features with a lim-\nited number of categories. Such features offer less flexibility to attackers. The\ngradients of the targeted model might suggest perturbations in a specific direc-\ntion, but the attacker might be unable to comply due to the limited number of\npossible feature values of these features.\nPS2 [fi] will be 1 if fi's number of Possible Values (PV) is greater than 255\n(this feature will be similar to computer vision's pixel, and it will be flexible to\nperturb). On the other hand, if fi's PV (PV[fi]) is less than or equal to 255,\nPS2 [fi] will be equal to a linear function where its output is 1 if fi's PV is 255,\nand 0.5 if fi's PV is 2 (binary).\nPS2 [fi] can be described with the following equation:\n$$PS2 [fi] =\\begin{cases}\n1 & \\text{if PV[fi] > 255} \\\\\n0.5 + (0.5 \\times \\frac{(PV[fi]-2)}{(255-2)}) & \\text{otherwise}\n\\end{cases}$$"}, {"title": "PS3 [fi]: Correlated Features:", "content": "This PS field considers the correlation between a NIDS feature and other fea-\ntures. Due to network constraints within NIDS, many features exhibit corre-\nlations. For instance, the flow duration feature is typically correlated with the\ntotal forward and backward inter-arrival times. Such correlated features limit\nthe attacker's flexibility. The gradients of the targeted model might recommend\na specific perturbation to one feature and a different perturbation to another.\nHowever, achieving these opposing perturbations simultaneously is very difficult\nif the features are highly correlated within the problem-space. As an example,\nan attacker cannot simultaneously increase the flow duration while decreasing\nboth the forward and backward inter-arrival times.\nPS3 [fi] will be equal to a linear function where its output is 0.5 if fi's number\nof Correlated Features (CF) is 10 (the maximum number we observed in our\nexperiments using our chosen threshold), and 1 if fi's CF (CF[fi]) is 0.\nPS3[fi] can be described with the following equation:\n$$PS3[fi] = 1 - 0.05 \\times min (CF[fi], 10)$$"}, {"title": "PS4 [fi]: Features that attackers cannot access:", "content": "This PS field focuses on features that attackers cannot access. Examples of such\nfeatures include backward features (e.g., Minimum Backward Packet Length)\nand interflow features (e.g., number of flows that have a command in an FTP\nsession (ct_ftp_cmd)).\nPS4 [fi]'s value will depend on the following conditions;\nC3: the feature fi is not a backward or interflow feature. In other words,\nattackers can access fi.\nC4: the feature fi is a backward or interflow feature; however, it is highly\ncorrelated with a forward feature. In other words, attackers can modify fi in\nan indirect way.\nC5: the feature fi is a backward or interflow feature; however, it is corre-\nlated with multiple forward features. In other words, attackers can modify fi\nindirectly, but it will be challenging for them as it is correlated with multiple\nfeatures.\nOtherwise (if none of C3, C4, or C5 apply): the feature fi is a back-\nward or interflow feature and it is not correlated with any forward feature. In\nother words, attackers cannot access fi.\n$$PS4 [fi] =\\begin{cases}\n1, & \\text{if (C3 or C4)} \\\\\n0.5, & \\text{if (C5)}\n0, & \\text{otherwise}\n\\end{cases}$$"}, {"title": "PS5 [fi]: Features Correlated with numerous flow Packets:", "content": "This PS field considers features that are correlated with numerous flow packets.\nPS5 [fi]'s value will depend on the following condition;\nC6: fi is a feature that requires modifying the entire flow of packets (for-\nward, backward, or both), such as mean or standard deviation features.\n$$PS5[fi] =\\begin{cases}\n0.5, & \\text{if (C6)} \\\\\n1, & \\text{otherwise}\n\\end{cases}$$"}, {"title": "PSTotal [fi]:", "content": "The overall Perturb-ability Score (PSTotal [fi]) for each feature fi is calculated\nas the geometric mean of the five individual PS fields we defined. These PS\nfields are assigned a value of 0 if a specific condition renders feature fi non-\nperturb-able within the problem-space. A value of 0.5 is assigned if a condition\nonly reduces the feasibility of perturbing fi. The geometric mean was chosen\nto ensure that PSTotal [fi] becomes 0 if any of the individual PS fields have a\nvalue of 0. However, it's important to note that any PS field value below 1 will\ncontribute to a decrease in the overall PSTotal [fi].\nPSTotal [fi] can be described with the following equation:\n$$PSTotal [fi] = \\sqrt[5]{\\prod_{j=1}^{5}PS_j [fi]}$$\nThe PSTotal will be calculated for all features fi in the dataset, from i = 1\nto n, where n is the number of features in the dataset."}, {"title": "Enabling a Potential Defense Through PS", "content": "Leveraging NIDS feature constraints can counter problem-space adversarial at-\ntacks. Figure 3 introduces our defense approach that uses PS. Our method\nexcludes features with a high perturb-ability score during the feature selection\nprocess. By doing so, attackers encounter no or very few perturb-able features,\nsignificantly reducing the attack surface. This selection process ensures the\nfeatures utilized by the NIDS are inherently resistant to manipulation. While\nthis may require rethinking traditional feature selection methods, the potential\nbenefits in preventing evasion attempts are substantial. This simple, efficient\nsolution utilizes network constraints as a defense with minimal overhead."}, {"title": "Preliminary Results", "content": "Table 1 shows the distribution of the features after applying PS. Low perturb-\nability/non-perturb-able features (green) have a PS of 0. High perturb-ability/\nperturb-able features (red) have a PS greater than or equal to 0.85. The rest are\nconsidered medium perturb-ability features (yellow). To check the validity of\nour PS, we examined a recent problem-space evasion adversarial attack against\nNIDS created by Yan et al. [7]. In this attack, the authors use three differ-\nent methods to morph traffic, which acts like adding perturbations to certain\nfeatures after feature extraction: modifying length-related features, increasing\nthe number of packets, and modifying time-related features (the duration of\nthe entire session or the interval between packets). We checked all the fea-\ntures correlated to these methods (e.g., Flow Duration, number of Total Fwd\nPackets, Total Length of Fwd Packets, Fwd IAT (Inter Arrival Time) Total,\netc.), and all of these features have a high PS (above 0.85) in the datasets that\nwe used. This means that using our defense will drop these features, making\nthese kinds of attacks inapplicable because the attacker is morphing\nfeatures that are not selected, which will have no effect on the feature\nvector. Moreover, Table 2 shows that using only low perturb-ability (green)\nfeatures does not create low-performance models; on the contrary, all of these\nmodels have an accuracy and F1 score above 0.9.\nGetting the most out of zero-PS features: To maintain high model\nperformance with fewer features, we utilized low Pert. (Green) features to\nextract useful information, e.g., region from destination IP (extracted using\nthe ipapi Python library) and application from destination port number. This\ninformation was then one-hot encoded before being fed to the models. Further"}, {"title": "Conclusion", "content": "In this paper, we investigate NIDS features' perturb-ability by proposing the\nPerturb-ability Score (PS). A high PS of a feature means that it can be easily\nmanipulated in the problem-space. A low PS means that morphing that feature\nin the problem-space might be impossible or will make the network flow in-\nvalid. Moreover, we used PS in a potential defense mechanism against practical\nproblem-space evasion adversarial attacks by only selecting features with low\nPS. The preliminary results show that discarding high PS score features won't\naffect models' performance."}]}