{"title": "Bed-Attached Vibration Sensor System: A Machine Learning Approach for Fall Detection in Nursing Homes", "authors": ["Thomas Bartz-Beielstein", "Axel Wellendorf", "Noah P\u00fctz", "Jens Brandt", "Alexander Hinterleitner", "Richard Schulz", "Richard Scholz", "Olaf Mersmann", "Robin Knabe"], "abstract": "The increasing shortage of nursing staff and the acute risk of falls in nursing homes pose significant challenges for the healthcare system. This study presents the development of an automated fall detection system integrated into care beds, aimed at enhancing patient safety without compromising privacy through wearables or video monitoring. Mechanical vibrations transmitted through the bed frame are processed using a short-time Fourier transform, enabling robust classification of distinct human fall patterns with a convolutional neural network. Challenges pertaining to the quantity and diversity of the data are addressed, proposing the generation of additional data with a specific emphasis on enhancing variation. While the model shows promising results in distinguishing fall events from noise using lab data, further testing in real-world environments is recommended for validation and improvement. Despite limited available data, the proposed system shows the potential for an accurate and rapid response to falls, mitigating health implications, and addressing the needs of an aging population. This case study was performed as part of the ZIM Project. Further research on sensors enhanced by artificial intelligence will be continued in the ShapeFuture Project.", "sections": [{"title": "1. Introduction", "content": "Falls in nursing homes pose substantial risks to the elderly, underscoring the critical importance of promptly identifying such incidents to mitigate immediate distress and long-term health consequences. The core objective of this research is the development of an efficient, non-intrusive fall detection system that seamlessly integrates with care beds. Extensive research from the Robert Koch Institute reveals that falls represent a significant cause of accidents, especially among the elderly, with approximately one-third of fatal accidents among those aged over 65 in the European Union attributed to falls (RKI, 2024). Nursing home residents, due to their vulnerability, are at an increased risk, often experiencing falls in close proximity to their beds.\nIt is noteworthy that nearly half of all falls result in injuries, with one in five necessitating medical treatment, as indicated by studies (Rubenstein, 2006; Tinetti et al., 1988; Sonnenmoser, 2015). Of these falls, five percent result in bone fractures, while approximately two percent lead to hip fractures. Furthermore, the prevalence of bone fractures rises significantly with age, affecting over one-third of all accidents in individuals over 70 within the EU (RKI, 2024). The consequences of falls, especially in advanced age, are indeed severe, often leading to substantial limitations in mobility. One of the most severe injuries associated with falls is the femoral neck fracture, accounting for roughly 90% of cases among the elderly (Becker and Blessing-Kapelke, 2011). Approximately half of those affected are unable to navigate stairs or engage in short walks a year after sustaining such an injury. Hip fractures, however, are even more critical, resulting in the passing of one-third of the very elderly individuals and leaving 20% permanently dependent on care (Sonnenmoser, 2015). Rapid detection of such injuries can help mitigate their consequences, whereas delayed detection can result in life-threatening situations.\nAlso the psychological consequences of falls should be taken seriously, as they can result in decreased mobility, heightened isolation, and a notable decline in the quality of life among older individuals. In addition to the immediate physical effects of falls, they may develop a fear of falling, which, regardless of their physical condition, can compromise gait stability and lead to falls (Sonnenmoser, 2015). These individuals tend to restrict their mobility, decreasing their quality of life, independence, and often experiencing depression (Tinetti et al., 1988; Sonnenmoser, 2015; Jefferis et al., 2014). Considering these multifaceted challenges, early fall detection is of vital"}, {"title": "2. Related Work", "content": "importance, as every minute counts in reducing suffering and long-term consequences. There is a pressing need for an alarm system capable of swiftly requesting assistance after a fall, which can alleviate the fear of falling and its associated psychological consequences. Comprehensive monitoring systems that safeguard individuals' privacy while offering timely assistance are in high demand. In the following sections, an innovative artificial intelligence (AI) based approach for the accurate detection and classification of falls occurring in proximity to beds will be implemented. This study presents a cost-effective deep learning-based fall detection system seamlessly integrated into care beds, with a focus on enhancing patient safety and ensuring privacy by avoiding the use of wearables or invasive video monitoring. It is crucial to highlight that no existing system fully satisfies these intricate requirements.\nThis paper is structured as follows: Section 2 provides an overview of the existing technology and approaches for fall prevention, with a particular focus on fall detection. Section 3 details the developed detection system and its constituent components. Section 4 elaborates on the model training process, including data collection, augmentation, and evaluation. Section 5 presents the model architecture and the training process. Section 6 describes lab and real-world experiments conducted to evaluate the system's performance. Section 7 presents the results of the study and discusses the implications of the findings and potential future research directions."}, {"title": "2.1. Fall Prevention Methods", "content": "This section provides first an overview on fall occurrence and the aftermath and then gives a brief summary of the existing technology and approaches for fall prevention."}, {"title": "2.2. Fall Detection Methods", "content": "Although various measures can be employed to prevent falls from beds, including the use of bed rails or restraints, many of these interventions are considered restrictive and can only be used under specific legal conditions, posing both ethical and safety concerns. Bed rails, in particular, can introduce additional fall hazards and significantly impact the quality of life for those under care.\nFall-prevention measures can be categorized into three groups: Firstly, person-centered measures which involve promoting balance, exercise for those with mobility issues, strength training, and consideration of underlying health"}, {"title": "2.3. AI in Fall Detection", "content": "conditions that may affect mobility. Secondly, medication-related measures including adjusting or discontinuing medications that may increase the risk of falls. And lastly environment-centered measures involving proper footwear, training with assistive devices, and, critically, the elimination of tripping hazards.\nWhile these measures can reduce the risk of falls, they cannot entirely eliminate it. Therefore, additional measures are required to detect and report falls in a timely manner."}, {"title": "2.4. Privacy in Fall Detection", "content": "The methods for fall-detection can mostly be divided based on the position and type of the used sensor. Body-worn sensors are embedded in clothing, accessories, and assistive devices, collectively known as \u201cWearables\u201d. User-activated or community alarm systems are based on alarm buttons that are either implemented in a wrist band or installed stationary. Automatic wearable fall detectors remove the need to press a button independently. The latter one often employs accelerometers and tilt sensors to measure the orientation of the body or shocks that occur during falls (Zigel et al., 2010; Litvak et al., 2008).\nRoom sensors are fixed within the living space and utilize various technologies, such as cameras, radio waves, infrared, and temperature sensors. They can monitor movement patterns and interpret falls (Boehnke et al., 2012; Koblischke, 2007). Especially camera-based fall detectors are highly effective (Loharkar and Choubey, 2016).\nFurniture-mounted sensors combine the advantages of body-worn and room-based systems. These sensors, often referred to as \u201csmart furniture\u201d, can operate without the need for users to wear them, while, depending on the method, measuring necessary data to detect falls without compromising privacy.\nCurrent products available on the market mainly focus on detecting whether an individual is in bed or seated. Some innovative developments aim to capture more extensive data for fall detection, such as weight shifts through the use of pressure sensors in bedposts. Vibration based systems are installed stationary and detect falls by measuring vibrations in the floor, trying to detect the distinct pattern of a human fall (Alwan et al., 2006). An extension of this approach additionally facilitates sound to further enriches the data available for the detection algorithm (Loharkar and Choubey, 2016).\nOur study implements a vibration-based system."}, {"title": "3. Methods and Materials", "content": "The AI methods employed for fall detection are as diverse as the sensors used. Camera-based fall detection systems, for instance, utilize image recognition techniques, which represent a popular application domain for artificial neural networks (Foroughi et al., 2009; Alhimale et al., 2014; Lu et al., 2018). In this context, a combination of conventional methods (e.g., decision trees, k-nearest neighbor), more intricate machine learning approaches (e.g., support vector machine, self-organizing maps), and deep learning methods based on neural networks are utilized (Vallabh and Malekian, 2018).\nNotably, supervised machine learning methods are frequently deployed, indicating the presence of labels for the training data, allowing for the clear differentiation between fall and non-fall data instances. Conversely, unsupervised techniques are less commonly employed, aiming to learn the normal state and classify deviations (anomalies) as potential fall events. A demonstration of this is detailed by Vincenzo et al. (2017). However, for fall detection, unsupervised methods pose challenges as other events can also lead to anomalies, thereby resulting in higher false detection rates. In contrast, supervised methods are disadvantaged as they rely on labeled data, which can be difficult to obtain due to the relative rarity of fall events (Vallabh and Malekian, 2018).\nPrevious investigations into fall detection using vibrations, as relevant in this project, have employed techniques such as the Bayes classifier. This approach demonstrated relatively promising results in experiments with dummies (Zigel et al., 2010), albeit relying not only on vibrations but also on the additional recording of sound signals."}, {"title": "3.1. Developed Detection System and Component Overview", "content": "Many existing fall detection systems use sensors like cameras or microphones that could potentially infringe on users' privacy. These systems record data that can be used to monitor users in their private environments, raising significant privacy and security concerns. Data is typically exchanged over networks, possibly evaluated by third parties like cloud service providers. This situation poses notable risks from both unauthorized access and the use of data by authorized entities (Grunert and Heuer, 2016). The Internet of Things (IoT) and Smart Home technology landscape intensifies these challenges, as many devices have weak security, handle sensitive data, and interact with technically inexperienced users (Kumar and Patel, 2014; Zeng"}, {"title": "3.2. MEMS Vibration Sensor", "content": "Figurel illustrates the results of the study; the muted shade of gray indicates components still to be developed for a final application.\nThe subsequent section describes the developed detection system and its constituent components. The Teensy 4.1 with an ARM Cortex-M7 processor\u00b9 is used as the development board. It has a processor speed of 600 MHz and 7936 KB flash storage and 1024 KB RAM (Mart\u00ednez et al., 2022). The Teensy 4.1 development board is selected due to its higher clock rate and larger memory compared to alternatives such as the Arduino Uno with ATMega 328 processor (Sihombing et al., 2018; Hidayanti et al., 2020).\nThe developer board is connected to the adapter board of a MEMS ac-celerometer via an I2C bus connection. The board stores the data measured by the MEMS acceleration sensor together with a timestamp. Since the board lacks a separate real time clock, it must be continuously powered keep time. Therefore, in addition to the wired power supply, the sensor module is also powered by a button cell to bridge short-term power failures. The collected data is stored in binary format on an integrated SD card.\nDuring operation, the vibration measurements are intended for transmis-sion to a central inference platform within the nursing home, aimed at facili-tating fall detection through enhanced computational capabilities. While the development of this platform and its integration with Teensy 4.1 is pending, the study encompasses the detection process.\nThe collected measurements are filtered using a logistic regression model, which detects possible fall events. For this purpose, five specific features, de-noted as $f\u2081$ to $f5$, are extracted and used for training the logistic regression model. Upon the classification of the signal as a potential fall event, it un-dergoes a short-time Fourier transformation (STFT), yielding a spectrogram. This spectrogram is then passed to a convolutional neural network (CNN) trained to discern human falls from other events, such as objects like water bottles. Leveraging the logistic regression aids in significantly reducing the computational burden required for the continuous operation of the system, as it minimizes the frequency of STFTs and CNN inference runs. An additional feature that remains pending implementation is the post-detection processing"}, {"title": "3.3. Logistic Regression", "content": "MEMS accelerometers can be categorized according to the different types of force measurement. The type of force measurement can be resistive or capacitive (Jin, 2021). Both variants have in common that the spring ele-ment of the sensor is made of silicon. The spring element functions like a bending beam that is fixed on one side and has a floating mass at the end of the free-swinging side (Kazusuke Maenaka, 2008). With resistive force measurement, the displacement of the mass is determined via strain gauges. In capacitive force measurement, the mass lies between two plate capacitors and generates a change in the capacitance ratio of the two capacitors when displaced. Capacitive MEMS sensors are small, cheap, and suitable for de-tecting low-frequency ground vibrations (Niu et al., 2018; Babatain et al., 2021). Therefore, MEMS sensors based on the capacitive principle are used in the developed system.\nPreliminary investigations have shown that a sampling rate of 1600 Hz is necessary for precise fall classification. The capacitive MEMS sensor se-lected for the planned measurement system is of the type AIS2IH2 (Zauli et al., 2023). It has a sufficiently high sampling rate of 1600 Hz in all"}, {"title": "3.4. Short-Time Fourier Transform", "content": "In the studied use case of human fall detection, Logistic regression serves as a primary mechanism to estimate the probability that a particular input data point belongs to one of two distinct categories: an event or no event. In this state of the detection, an event is anything that falls to the ground.\nThe data batches, each of 10 seconds in length, are manipulated by ini-tially undergoing a zero-mean transformation and squaring, followed by the calculation of five pivotal features: maximum, median, mean, and 25th and 75th quantiles. The logistic regression model, mathematically represented as\n$P(y = 1|x) = \\frac{1}{1+ e^{-\\beta x}}$\ninvolves optimizing the components $\u03b2_{0}, \u03b2_{1},...,\u03b2_{p}$ of the vector $\u03b2$ to best predict the probability of an event occurrence, $P(Y = 1|X)$, given p + 1 in-put features $X_{0}, X_{1}, . . ., X_{p}$. The optimization is typically achieved through a gradient descent on a suitable loss function, often the cross-entropy loss. The decision about the predicted label for an observation is then made by setting a threshold, commonly 0.5; if $P(Y = 1|X)$ is above this threshold, the observation is classified as an event, otherwise, it is not. In the appli-cation described, ensuring that the logistic regression model is accurately trained and validated is of vital importance, as misclassification, especially false negatives, could result in serious events such as a person falling not be-ing detected. Therefore, robust implementation and evaluation of the logistic regression model are critical to reliably filter and subsequently analyze true events (McCullagh, 2019)."}, {"title": "3.5. Convolutional Neural Network", "content": "The STFT is a key method in signal processing that offers a way to ana-lyze sound or vibration data in the time-frequency domain (Shuvaev et al., 2017). It achieves this by dividing a waveform into smaller time segments"}, {"title": "3.6. Metrics", "content": "or windows and then applying Fourier transforms to each of these windows. This approach enables us to examine how the signal's frequency character-istics change as time progresses. The given signal, denoted as x, can be transformed into a discrete STFT representation, labeled as F. This trans-formation involves summing over all possible values of i, with i extending from negative infinity to positive infinity. In this summation, x(i) is multi-plied by a window function w centered at the time index n, and also by a complex exponential term $e^{-jwn}$.\n$F(n,w) = \\sum_{i=-\\infty}^{\\infty} x(i)w(n \u2013 i)e^{-jwn}.$\nThe resulting STFT representation, F(n,w), is informative about various aspects of the waveform, such as the frequencies present in the signal and their respective amplitudes. Taking the squared magnitude of this windowed STFT representation, denoted as $|F(n, w)|^{2}$, and concatenating it over time, a spectrogram is obtained (Shuvaev et al., 2017)."}, {"title": "3.7. Data Augmentation", "content": "CNNs represent a category of deep neural networks that are commonly employed in image classification and analysis. CNNs facilitate end-to-end learning for categorization and feature extraction. The fusion of CNNs with STFT-generated spectrograms represents a promising approach to audio or vibration classification (Shuvaev et al., 2017; Sejdi\u0107 et al., 2009; Grunert and Heuer, 2016). CNNs serve as feature extractors, discerning spectro-temporal patterns directly from STFT data and eliminating the need for traditional feature representations like Mel-Frequency Cepstral Coefficients (MFCCs). Advantages of this approach include simplicity and the potential for the net-work to learn complex and abstract concepts and features that might not be obvious to a human analyst. Nonetheless, this methodology comes with com-putational and memory demands, especially when processing high-resolution spectrograms (Demir et al., 2019). Careful resource allocation is vital for real-time applications. Additionally, the risk of CNNs learning unwanted patterns, such as channel distortions, necessitates diligent preprocessing and regularization.\nThe primary function of the convolutional layer is to establish local con-nections between features from the preceding layer and map their character-istics to a feature map. This mapping is achieved through the convolution"}, {"title": "4. Model Training", "content": "operation, where the input I is convolved with the filter F:\n$(I * F)_{n,m} = \\sum_{k=-a_{1}}^{a_{1}} \\sum_{l=-a_{2}}^{a_{2}} F_{k,l}I_{n-k,m-1}.$\nThe filter F can be represented as a matrix, i.e.,\n$\\begin{pmatrix}F_{-a_{1},-a_{2}} & ... & F_{-a_{1},a_{2}} \\\\ : & ... & :\\\\ F_{a_{1},-a_{2}} & ... & F_{a_{1},a_{2}}\\end{pmatrix}$\nTo introduce non-linearity to the feature map generated by the convolution operation, a non-linear activation function is applied (Bengio and Lecun, 1997). To achieve a compression of features in connection with CNNs, max-pooling layers are often used. The max-pooling layer's purpose is to identify semantically relevant features from the previous layer. It achieves this by down-sampling the previous layer, dividing it into rectangular pooling re-gions, and computing the maximum value within each region (Demir et al., 2019). In summary, CNNs ability to automatically extract complex features, while simplifying the feature engineering process, makes them a compelling choice for waveform analysis. The convolutional layer, non-linear activation, and max-pooling enhance the efficacy of this approach in extracting and classifying meaningful spectro-temporal information."}, {"title": "4.1. Data Collection", "content": "To evaluate the performance of the trained models, mainly the Recall and Precision were facilitated. They are calculated as follows:\nRecall = $\\frac{TruePositive}{TruePositive + FalseNegative}$\nPrecision = $\\frac{TruePositive}{TruePositive + FalsePositive}$\nRecall measures the model's ability to correctly identify all positive instances within the test set, making it particularly important in scenarios where miss-ing positive cases can have serious consequences. For fall detection in nursing homes, a high Recall ensures that the system does not overlook critical fall events and was therefore of highest priority for the evaluation of the models. Precision quantifies the model's ability to correctly classify positive instances"}, {"title": "4.1.1. Sensor Placement", "content": "To train the classification models, vibration measurements of human falls are necessary. To avoid injuring people, crash test dummies were used for the artificial generation of these incidents. However, this kind of data generation is substantial effort and can hardly be automated. Data augmentation is a feasible method to generate additional data based on the dummy trials. Augmenting data can involve traditional approaches like altering or per-muting the data. In addition, the introduction of noise plays an important role. Modern techniques generate new, synthetic data based on information from existing data. These methods include variational autoencoders (VAE) and generative adversarial networks (GANs), which are algorithms based on neural networks. This study examines two classical augmentation methods, namely oversampling and amplification. Further research might delve deeper into more sophisticated augmentation methods.\nOversampling is the most trivial augmentation method and simply du-plicates the dummy fall samples as often as necessary. This augmentation method serves as a baseline and allows to assess the benefits of more sophis-ticated augmentation methods (Shorten and Khoshgoftaar, 2019). Amplifi-cation is an augmentation method that might be of high relevance for the studied problem, since during data acquisition, a single dummy was utilized, and fall data exclusively reflects this dummy's weight. Amplification and damping of the signal are assumed to simulate falls of individuals with vary-ing weights, thereby broadening the operating range of the algorithm. The amplification process initiates with the extraction of the mean and standard deviation of the signal's noise, utilizing a statistical tool called three-sigma rule. This rule states that samples of normally distributed data that are sit-uated outside the mean plus or minus three times the standard deviation are"}, {"title": "4.1.2. Event Generation", "content": "Data collection is important in the development of a sensor-based fall de-tection system that is able to accurately detect fall events and distinguish them from other events (Loharkar and Choubey, 2016). Its primary purpose is to gather the necessary data for training and evaluating the fall detection system."}, {"title": "4.1.3. Field Tests in Nursing Homes", "content": "The placement of the sensors is an essential aspect of the data collection pro-cess (Litvak et al., 2008; Loharkar and Choubey, 2016; Alwan et al., 2006). The measuring system will be integrated into the care bed in the final ap-plication. To analyze the data quality depending on the measuring point, the sensor data is recorded at three different positions, see Figure 4 a) and Figure 4 b). For this purpose, a 4.7 kg test specimen is dropped from a height of 1 m at different distances from the care bed. The comparison of the maximum measured amplitudes as a function of the distance between the sensor and the impact enables the optimum placement to be determined. Measuring point I, on the upper bed frame, has the smallest maximum accel-eration of 0.25 g. The acceleration of point II and point III follow following a similar curve, although the maximum acceleration at positions II is 1.01 g and III is 0.78 g. Due to the low acceleration and the associated low signal strength at measuring point I, for further tests the sensors are mounted at positions II and III."}, {"title": "5. Model Definition and Tuning Results", "content": "To create a comprehensive data set a variety of different floor vibrations has to be measured. Beside a dummy fall test, different events have to be"}, {"title": "6. Experiments", "content": "simulated, for example, falls with everyday objects such as bottles, dumbbells and personal care items, as well as dynamic actions such as jumping, tipping of chairs and furniture movements. The events are carefully selected to cover different scenarios and potential fall situations."}, {"title": "6.1. Laboratory Experiments", "content": "To ensure that the AI models can also be trained with real falls, field tests are carried out over a period of 6 months in a retirement and nursing home. The sensor unit described in Sec. 3 is manufactured 20 times for the field tests. The field test study is carried out in 10 rooms of the retirement and nursing home. Two sensor units are installed in each room at positions II and III. The rooms differ in size (small and large), number of residents (1 and 2) and floor (ground floor, first floor and second floor). The floor type (PVC) and the type of bed used remain the same. The measurement data is read out at intervals of 4 weeks and stored anonymously. Over the duration of the field tests, a total of 29 falls occurred in the rooms equipped with sensor units. During readout, the sensors were found to be disconnected from their power supply a total of 33 times. As a result, some sensor units were unable to record any or only partial data within a readout interval. This means that not all falls can be evaluated."}, {"title": "6.2. Deployment in Nursing Home", "content": "The vibration signal employed for fall detection was sampled at a fre-quency of 1600 Hz. Utilizing a shifting window approach, the detection algo-rithm received 10-second segments of this signal for classification. To serve as a pre-filter, the logistic regression was implemented using the scikit-learn library. As explained in Sec. 3.3, the extraction of several features from the vibration signal batches was conducted. Given these features, the logistic regression was trained to differentiate between fall events, not only limited to human falls, and the absence of any event.\nThe CNN implementation was carried out using Keras. The original sig-nal batches underwent a STFT, generating spectrograms utilized for train-ing the CNN. The architecture includes a convolutional layer with ReLU (R(z)=max(0,z)) activation function, no padding, and strides set to one. Subsequently, a max-pooling layer and a flatten layer were incorporated, fol-lowed by a fully connected output layer with a sigmoid activation, as depicted in Fig. 5.\nThe CNN's hyperparameters were optimized using the Hyperband tuner integrated in Keras. The method is based on the successive halving algorithm and allows hyperparameter tuning by testing several settings in parallel and sorting out bad runs at an early stage (Li et al., 2018)\nThe optimized features included the number of filters, kernel size width, loss function, and learning rate of the optimizer. Table 5 provides an overview of the hyperparameter search space. The goal of the tuning process was to optimize precision on the validation dataset while maintaining a recall value of 1. This involves setting a classification threshold that ensures all rele-vant instances are captured (recall of 1) while maximizing the precision of the predictions. Consequently, the hyperparameter tuner aimed to iden-tify a configuration that accurately classifies each fall while minimizing false alarms. The tuning process was conducted for a maximum of 20 epochs per run and the validation loss as the stopping criterion. The outcomes of the tuning process are presented in Table 5.\nFinal training was performed using the tuned settings with a stratified k-fold cross validation with k set to 5. Additionally, as explained in Sec. 3.7, oversampling and amplification augmentation were facilitated to enrich the dataset with additional fall events, thereby addressing the imbalance in the initial dataset. The final training was carried out for 75 epochs, employing the Adam optimizer."}, {"title": "7. Results and Discussion", "content": "In the pursuit of determining the optimal model architecture for the use case, a structured experiment pipeline was established. This pipeline was essential in evaluating various experiments while ensuring comparability for retrospective analysis. Central to our methodology was the implementation of stratified k-fold cross-validation due to the imbalanced dataset to validate experiment results. The experiments focus on the second phase of the two-step procedure, which is responsible for classifying different event types; the first phase uses logistic regression to differentiate event data from noise."}, {"title": "7.1. Augmentation Results", "content": "In the simulation of the application scenario in a nursing home, the focus was on simulating the actual operating conditions and the feasibility of the fall detection system. The data was collected with the sensor setup described in Sec. 3. The difference to the later planned implementation is that the data has so far been stored and then analyzed and not in real time, as is later planned for the real application. With the help of these authentic vibration measurements, the accuracy of the simulation and the correspondence with real signal characteristics and subtleties could be tested.\nThe deployment experiment replicates the intended real-time fall detec-tion process as illustrated in Fig. 6: The signal (blue) undergoes a two-stage classification. First logistic regression for initial event detection (orange) and second STFT and CNN classification (red). A spike in the orange graph"}, {"title": "7.2. Deployment Results", "content": "The initial experiment focused on data augmentation through duplication, which served as a baseline for the augmentation methods. It was observed that the precision of the model, which was trained on data without aug-mentation, fluctuated around 30%, regardless of the duplication level. The duplication augmentation involved replicating each entry in the training set by a specific value, with tested values ranging from 1 to 30. As duplication in-creased, models trained on augmented data showed improved precision. How-ever, the precision plateaued beyond a duplication value of about 10, likely because of a nearly balanced dataset at this point. Despite this, a higher du-plication level reduced the performance gap between the all-inclusive model and the baseline model. Further experiments for statistical smoothing were deemed necessary, but an overall improvement with data augmentation was clear, with the highest precision recorded at 65.24% for the model trained solely on augmented data at a duplication value of 20.\nFollowing duplication, amplification was employed as another method of data augmentation. As described in Sec. 3.7, this involved isolating events and adjusting their signal amplitude, with the augmented dataset being ad-justed to balance dummy and non-dummy data, as informed by the findings from the duplication experiment. A reduction in precision was observed in the all-inclusive and only augmented models when signal amplitude was de-creased, indicating effective isolation of the signal during the augmentation process. Optimal performance for the augmented models was found within"}, {"title": "8. Summary and Outlook", "content": "marks every time the logistic regression detected an event itself and there-fore a STFT was calculated. A spike in the red line marks every time the CNN classified one of those STFTs as a human fall. The signal shown in Fig. 6 indicates a period of 3 hours in a room. Only a rough indication of around mid-afternoon was provided as a label by employees of the nursing home. Similar to the laboratory data analysis, we processed 10-second se-quences individually by moving a window through the data chronologically. For each window, we calculated an input vector for the logistic regression. The frequency of this calculation depended on the step size of the shifting window. In our experiment, the window size matched the step size, resulting in non-overlapping signals. With a signal length of 3 hours, this led to a total of 1080 windows."}, {"title": "The logistic regression identified 39 events within these windows, and the CNN pinpointed one of these events as a human fall.", "content": "the model effectively distinguishes falls from noise in artificial scenarios, its"}, {"title": "The approach of utilizing vibration-based fall detection systems presents several benefits. Firstly, it offers a high level of reliability in detecting falls ac-curately, as it doesn't rely on manual activation like user-activated alarms or community alarm systems.", "content": "performance in real environments remains unproven. However, the model demonstrates sensitivity in discerning fall events without triggering frequent false alarms. Even if not all falls are detected during test deployments, indi-vidual event identifications can serve as valuable data for refining the model further."}]}