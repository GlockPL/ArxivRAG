{"title": "Intensional FOL: Many-Sorted Extension", "authors": ["Zoran Majki\u0107"], "abstract": "The concepts used in IFOL have associated to them a list of sorted attributes, and the sorts are the intensional concepts as well. The requirement to extend the unsorted IFOL (Intensional FOL) to many-sorted IFOL is mainly based on the fact that a natural language is implicitly many-sorted and that we intend to use IFOL to support applications that use natural languages. Thus, the proposed version of many-sorted IFOL is just the completion of this conceptual feature of the IFOL.", "sections": [{"title": "1 Introduction to Unsorted Intensional FOL", "content": "Contemporary use of the term \"intension\" derives from the traditional logical doctrine that an idea has both an extension and an intension. Although there is divergence in formulation, it is accepted that the extension of an idea consists of the subjects to which the idea applies, and the intension consists of the attributes implied by the idea. In contemporary philosophy, it is linguistic expressions (here it is a logic formula), rather than concepts, that are said to have intensions and extensions. The intension is the concept expressed by an expression of intensional algebra $A_{int}$, and the extension is the set of items to which the expression applies. This usage resembles use of Frege's use of \"Bedeutung\" and \"Sinn\" [5].\nIntensional entities (or concepts) are such things as Propositions, Relations and Properties (PRP). What make them \"intensional\" is that they violate the principle of extensionality; the principle that extensional equivalence implies identity. All (or most) of these intensional entities have been classified at one time or another as kinds of Universals [6]. We begin with the informal theory that universals (properties (unary relations), relations, and propositions in PRP theory [7]) are genuine entities that bear fundamental logical relations to one another.\nDefinition 1. INTENSIONAL LOGIC PRP DOMAIN D:\nIn intensional logic the concepts (properties, relations and propositions) are denotations for open and closed logic sentences, thus elements of the structured domain\n$D = D_{-1} + D_1$, (here + is a disjoint union) where\n- A subdomain $D_{-1}$ is made of particulars (individuals).\n- The rest $D_1 = D_0 + D_1 ...+ D_n ...$ is made of universals (concepts)$^1$: $D_0$ for propositions with a distinct concept Truth \u2208 $D_0$, $D_1$ for properties (unary concepts) and $D_n, n \u2265 2$, for n-ary concept."}, {"title": null, "content": "The concepts in $D_1$ are denoted by u, v, ..., while the values (individuals) in $D_{-1}$ by a, b,... The empty tuple <> of the nullary relation $r_\u00d8$ (i.e. the unique tuple of 0-ary relation) is an individual in $D_{-1}$, with $D^\u00d8 =def {<>}$. Thus, we have that {f,t} = $P(D^\u00d8) \u2286 P(D_{-1})$, where by f and t we denote the empty set \u00d8 and set {<>} respectively.\nLet_R = $U_{k\u2208N}P(D^k) = \u2211_{k\u2208N}P(D^k)$ be the set of all k-ary relations, where $k \u2208 N = {0, 1, 2, ...}$. Notice that {f, t} = $P(D^\u00d8) \u2286 R$, that is, f, t \u2208 R and hence the truth values are extensions in R.\nThe intensional interpretation is a mapping between the set \u0141 of formulae of the logic language and intensional entities in D, $I : \u0141 \u2192 D$, is a kind of \"conceptualization\", such that an open-sentence (virtual predicate) \u00a2(x1,..., xk) with a tuple of all free variables (x1, ..., xk) is mapped into a k-ary concept, that is, an intensional entity $u = I(\u00a2(x_1, ..., x_k)) \u2208 D_k$, and (closed) sentence \u03c8 into a proposition (i.e., logic concept) $v = I(\u03c8) \u2208 D_0$ with $I(T) = Truth \u2208 D_0$ for the FOL tautology \u03a4\u2208 \u0141 (the falsity in the FOL is a logic formula \u00ac\u0422 \u2208 \u0141).\nA FOL language constant (nullary function) c is mapped into a particular $I(c) =def I_T(c) \u2208 D_{-1}$ if it is a proper name, otherwise in a correspondent concept in D. Thus, in any application of intensional FOL, this intensional interpretation that determines the meaning (sense) of the knowledge expressed by logic formulae is uniquely determined (prefixed). However, the extensions of the concepts (with this prefixed meaning) vary from a context (possible world, expressed by an extensionalizzation function) to another context in a similar way as for different Tarski's interpretations of the FOL:"}, {"title": "Definition 2. EXTENSIONS AND EXTENSIONALIZATION FUNCTIONS:", "content": "The extensions of the intensional entities (concepts) are given by the set E of extension-alization functions $h : D \u2192 D_{-1} + R$, such that\n$h = h_{-1} + h_0 + \u2211_{i>1}hi : \u2211_{i>-1} D_i \u2192 D_{-1} + {f,t} + \u2211_{i\u22651}P(D^i)$\nwhere $h_{-1} : D_{-1} \u2192 D_{-1}$ for the particulars, while $h_0 : D_0 \u2192 {f,t} = P(D^\u00d8)$ assigns the truth values in {f, t} to all propositions with the constant assignment $h_0(Truth) = t = {<>}$, and for each $i \u2265 1, hi : Di \u2192 P(D^i)$ assigns a relation to each concept.\nConsequently, intensions can be seen as names used in natural languages of atomic or composite concepts, while the extensions correspond to various rules that these concepts play in different 'explicit' worlds h. We denote by \u0127 the actual explicit world and by E a given set of 'explicit' worlds.\nFrom a logic point of view, two possible worlds w and w' are indistinguishable if all sentences have the same extensions in them, so that we can consider an extensionalization function h as a \"possible world\", similarly to the semantics of a probabilistic logic, where possible worlds are Herbrand interpretations for given set of predicate letters P in a given logic. We use the mapping\n$I_h: \u0141_{op} \u2192 R^W$\nwhere $\u0141_{op}$ is a subset of formulae with free variables (virtual predicates), such that for any virtual predicate \u00a2(x1,..., xk) \u2208 $\u0141_{op}$ the mapping $I_h(\u00a2(x_1, ..., x_k)) : W \u2192 R$ is"}, {"title": null, "content": "the Montague's meaning (i.e., intension) of this virtual predicate [8,9,10,11,12], that is, the mapping which returns with the extension of this (virtual) predicate in every possible world in W. The mapping Ih can be extended also to all sentences (the formulae without free variables), such that for any sentence $, $I_h(\u00a2) : W \u2192 {f,t} = P(D^\u00d8) \u2286 R$ is a mapping that defines the truth value (i.e., an extension in R) of this sentence in each possible world W.\nDefinition 3. [3] TWO-STEP INTENSIONAL SEMANTICS: The intensional semantics of the logic language with the set of formulae \u0141 can be represented by the mapping\n$\u0141 \u2192_{1} D \u21d2_{h\u2208e} R$,\nwhere $\u2192_1$ is a fixed intensional interpretation $I : \u0141 \u2192 D$ with image im(I) c D, and $\u21d2_{h\u2208e}$ is the set of all extensionalization functions h = F(w) : im(I) \u2192 R in E, where the mapping\n$F:W\\~ E$\nis the bijection from the set of possible worlds (used by Montague)to the set of extensionalization functions.\nBased on this definition, we can establish the direct relationship between Bealer's and Montagues intensionality:\nProposition 1 BEALER-MONTAGUE RELATIONSHIP [1]:\nFor any logic formula (a virtual predicate) \u00a2(x), with a tuple of free variables x, its extension in a possible world $w \u2208 W$ satisfies the following equation\n$F(w)(I(\u00a2(x))) = I_h(\u00a2(x))(w)$\nIn a predicate logics, (virtual) predicates expresses classes (properties and relations), and sentences express propositions. Note that classes (intensional entities) are reified, i.e., they belong to the same domain as individual objects (particulars). This endows the intensional logics with a great deal of uniformity, making it possible to manipulate classes and individual objects in the same language. In particular, when viewed as an individual object, a class can be a member of another class. In FOL we have the variables as arguments inside the predicates, and terms which can be assigned to variables are first-class objects while the predicates are the second-class objects. When we transform a virtual predicate into a term, by using intensional abstraction operator, we transform a logic formula into the first class object to be used inside another predicates as first-class objects. Thus, abstracted terms in the intensional FOL are just such abstracted terms as reification of logic formulae. For example, the sentence \"Marco thinks that Zoran runs\u201d, expressed by $thinks(Marco, <runs(Zoran)>)$ by using binary predicate thinks and unary predicate runs where the ground atom runs(Zoran) is reified into the predicate thinks.\nIf (x) is a formula (virtual predicate) with a list (a tuple) of free variables in $X = (x_1,...,x_n)$ (with ordering from-left-to-right of their appearance in $), and a is its subset of distinct variables, then <<$(x)>_a^\\beta$ is a term, where \u1e9e is the remaining set of free variables in x. The externally quantifiable variables are the free variables not in a."}, {"title": null, "content": "When n = 0, <<> is a term which denotes a proposition, for n \u2265 1 it denotes a n-ary concept.\nWe recall that we denote by t/g (or $/g) the ground term (or formula) without free variables, obtained by assignment g from a term t (or a formula $), and by $[x/t]$ the formula obtained by uniformly replacing x by a term t in $.\nDefinition 4. INTENSIONAL ABSTRACTION CONVENTION:\nFrom the fact that we can use any permutation of the variables in a given virtual predicate, we introduce the convention that\n<<>(x) is a term obtained from virtual predicate (x)\nif a is not empty such that $a\u222a\u03b2$ is the set of all variables in the list (tuple of variables) $x = (x_1, ..., x_n)$ of the virtual predicate (an open logic formula) \u03c6, and $a\u2229\u03b2 = \u00d8$, so that $|a| + |\u03b2| = |x| = n. Only the variables in \u1e9e (which are the only free variables of this term), can be quantified. If \u1e9e is empty then <>(x)> is a ground term. If $ is a sentence and hence both a and \u1e9e are empty, we write simply <<>> for this ground term.\nAn assignment $g : V \u2192 D$ forb variables in V is applied only to free variables in terms and formulae. Such an assignment $g \u2208 D^V$ can be recursively uniquely extended into the assignment $g^* : T \u2192 D$, where T denotes the set of all terms (here I is an intensional interpretation of this FOL, as explained in what follows), by :\n1. $g^*(t) = g(x) \u2208 D$ if the term t is a variable x \u2208 V.\n2. $g^*(t) = I(c) \u2208 D$ if the term t is a constant (nullary functional symbol) c \u2208 P.\n3. If t is an abstracted term obtained for an open formula \u00a2i, <>(xi), then we must restrict the assignment to $g \u2208 D^{\u03b2i}$ and to obtain recursive definition (when also \u00a2i(xi) contains abstracted terms:\n$g^*(<\u03c6_i(x_i)) =def \\{\n\\ \u0399(\u03c6_i(x_i)) \\~ if \u03b2i is empty \\\\ (\u03c6(x)/g)^* \\~ \u2208 D^{\u03b1i} \\~ otherwise \n$\\$\nwhere $g(\u03b2) = g({y_1,\u2026,y_m}) = {g(y_1),..., g(y_m)}$ and $[\u03b2/g(\u03b2)]$ is a uniform replacement of each i-th variable in the set \u1e9e with the i-th constant in the set g(\u03b2). Notice that a is the set of all free variables in the formula $[\u03b2/g(\u03b2)]$.\n4. If t = <<> is an abstracted term obtained from a sentence \u00a2i then\n$g^*(<i>) = I(\u03c6\u03af) \u2208 D_0$.\nThe abstracted terms <<>>\u00a3 can be used as terms in any predicate p\u2208 P, for example for an atom $p^3(<$>&, y, z) with free variables y, z and that in B. Let $p (t_1,..., t_k)$ be an atom with at least one of abstract term $t_i = <(x_i)$, with $\u03b2_i$ non empty and let \u1e9e denotes the union of all $\u03b2_i$ of the abstracted terms in this atom. We can consider this atom as a virtual predicate (x) with ordered tuple of free variables x, and we denote by y its ordered subtuple without variables in \u1e9e with $1 \u2264 n = |y|$."}, {"title": null, "content": "Then we have that for each assignment $g \u2208 D^\u03b2$, $p(t_1/g, ..., t_k/g)$ is a standard atom (all abstracted terms $t_i/g = g^* (t_i)$ by using (5) are transformed to values in D and $I(p(t_1/g,...,t_k/g)) \u2208 Dn CD$), while for Tarskian interpretation we obtain the following set of tuples:\n$I(p(t_1/g,...,t_k/g)) =def {g_1(\\bar{y}) | g_1 \u2208 D^\\bar{y} and I (p(t_1/g,...,t_k/g)[\\bar{y}/g_1(\\bar{y})]) = t}$\nwhere $I(p(t_1/g,...,t_k/g)[\\bar{y}/g_1(\\bar{y})]) = t \\ iff (t_1/g,...,t_k/g)[\\bar{y}/g_1(\\bar{y})] \u2208 I_T(p)$,\nand we recall that $I_+(p(z_1, ..., z_k)) =def I_T(p')$ if all zi, $1 \u2264 i \u2264 k$, are free variables.\nSo, general Tarski's and intensional interpretations, when we have at least one hidden variable in the terms, are defined by\n$I(p(t_1,..., t_k)) =def \\cup_{g\u2208D^\u03b2}I_+(p(t_1/g,...,t_k/g)) \u2260 I_T(p) \u2286 D^k$\n$I(p(t_1,...,t_n)) =def union({I(p(t_1/g,...,t_k/g)) | g \u2208 D^\u03b2})$\nwhere derived operator \"union\u201d of intensional algebra is provided in [1].\nRemark: We recall that the assignment for abstracted terms is defined in this way in order to eliminate all abstract operators with such assignments, as required by Proposition 7 in [1]. With such definition we forget the natural-language structure generated by reification (by using abstracted operators). We can change this definition of assignment for abstracted terms if we do not want to forget the natural-language expression structure during the assignments. The choice used in Definition 4 of the Intensional abstraction convention, adopted in [1] has been motivated by the interest to obtain a conservative evolution from the standard RDM database systems in more expressive Intensional RDB (IRDB) with open schemas, many-valued attributes of relational tables and the possibility to manage both the data and the metadata in the same SQL-like database languages. So, it is avoided to have the abstract terms in the PRP domain D of the particulars and the concepts, and in the standard D-domain based collection of relations $R = U_{k\u2208n} P(D^k) = \u2211_{ken} P(D^k)$.\nSuch limitation can be avoided, in particular for the AGI (General Artificial Intelligence) applications, strongly oriented to the natural language manipulations.\nMoreover, we need to render explicit definition of the intensional interpretation of the ground atoms (with all terms without variables and also the abstracted terms, which, differently from the definition in (7), have no any hidden variable, by\n$I(p(t_1,..., t_k)) =def I(p(t_1, ..., t_k))/g = I(p(g^* (t_1), ..., g^* (t_k))) \u2208 D_0$\nfor any given assignment $g \u2208 D^V$.\nTo show how the abstracted terms are very powerful natural language properties, which can be used in AGI (for the strong-AI robots [4]), let us consider the following example:"}, {"title": null, "content": "Example 1. Let us consider the 'Know' predicate $p(x_1, x_2, t_1)$ used for epistemic reasoning for the robots in [13]), where the variable $x_1$ is used for the grammatical-form of the verb \"to know\" (time, gerund, etc..)x1 (with values, for example, \"past\", \"present\", \"future\" for time-specification, which are the IFOL constants $c_i$ and particulars in D-1, so that for any assignment g, $g(c_i) = c_i \u2208 D$), the variable $x_2$ is used for the subject of this knowledge and t\u2081 is used for an abstracted term expression for this particular knowledge), and the built-in predicate $p sphere-formula\u201d (corresponding to the standard preorder binary relationships \u2264 for reals) with the atom containing the free variables $p_1^3(x, x_0, y, y_0, z, z_0, v)$ representing the algebraic equation $(x \u2212 x_0)^2 + (y \u2212 y_0)^2 + (z \u2212 z_0)^2 < v^2$ where $x_0, y_0, z_0$ are coordinates of the center of a sphere with radius v (used in Examples 7 and 8 in [1], Chapter 2 for Constrained databases), and the following natural language expression:\n\"Somebody knows that his friend told that $(x \u2212 x_0)^2 + (y - y_0)^2 + (z \u2212 z_0)^2 < v^2$ is a sphere-formula with the center in $(x_0, y_0, z_0)$ and radius v\u201d\nwhich is parsed into the following IFOL open formula (in the example in next section we will preset this process of parsing) because the word \"somebody\" referred to some person is an variable in a predicate-based logic:\n$p^2(present, x_2, <<p^3(past, x_4, <<^2 ((x-x_0)^2+(y-y_0)^2+(z-z_0)^2, v^2)>>_{\u03b1})>_{BU{x_4}})$\nwhere $\u2264^2$ is the binary built-in predicate such that for any assignment g, the ground atom $\u2264^2 ((x-x_0)^2 + (y - y_0)^2 + (z \u2212 z_0)^2, v^2)/g$ is true iff $(g(x) \u2013 g(x_0))^2 + (g(y) \u2013 g(y_0))^2 + ((g(z) \u2013 g(x_0))^2 \u2264 g(v)^2$. The $p^3(x_3, x_4, t_2)$ is the atom of the predicate \"to tell\" with the variable $x_4$ for who is subject that tells, $x_3$ (as $x_1$) is used for the grammatical-form of the verb \"to tell\" (time, gerund, etc..) with values, for example, \"past\", \"present\", \"future\" for time-specification, and abstracted term $t_2$ for what is told, and where $\u03b2 = {x_0, y_0, z_0, v}$ are the visible (free) variables and $\u03b1 = {x, y, z}$ are hidden variables of the constrained (compressed) database representation of a sphere. The variable $x_2$ represents \"somebody\" while $x_4$ represents \"a friend of somebody\". Thus, in the logic formula (9) we have the abstracted terms and the set of free variables $V = {x_2, x_4} \u222a\u03b2$, so we can consider the following assignment $g \u2208 D^V$, with\n$g(x_2) = \"Zoran Majkic\u201d$ \n$g(x_4) = \"Alberto Rossi\u201d, a friend of Zoran Majkic$\n- for variables of real in \u00df, $g(x_0) = g(y_0) = g(z_0) = 0.0$ and $g(v) = 2.0$, for a sphere with center at the coordinate origin and with radius 2.0. Note that the tuple of variables in \u03b1, (x, y, z), represents a point inside this sphere.\nConsequently, this assignment $g \u2208 D^V$ extends to all terms in the IFOL open formula (9) as follows (by $(x) we denote the atom $\u2264^2 ((x \u2212 x_0)^2 + (y \u2212 y_0)^2 + (z \u2212 z_0)^2, v^2)$):\n$p_1^3(present, x_2, <<p_1^3(past, x_4, <(x)>_2)>_B\u222a{x_4})$\n$=$ \n$p_1^3(present, g^*(x_2), g^*(<p_1^3(past, x_4, <(x)>_2)>_{\u03b1_{BU\\{x_4}}}))$\n$=$ \n$p_1^3(present, g(x_2), I(p_1^3(past, x_4, <(x)>_2)/g))$\n$=$ \n$p_1^3(present, g(x_2), I(p_1^3(past, g(x_4), g^*(<\u00a2(x)>_2))))$\n$\\$"}, {"title": null, "content": "$=$ $p_1^3(present, g(x_2), I(p_1^3(past, g(x_4),$\n$I(\u2264^2 ((x - g(x_0))^2 + (y - g(y_0))^2 + (z - g(z_0))^2, g(v)^2))))$\n$=$ $p_1^3(present, g(x_2), I (p_1^3(past, g(x_4), I(<<\u2264^2 (x^2 + y^2 + z^2, 4.0))))$\nwhich is a ground atom (a sentence) with last argument the intensional 0-ary concept (a proposition), $u = I(p_1^3(past, Alberto Rossi, I(<\u2264^2 (x^2 + y^2 + z^2,4.0)})) \u2208 D_0$ such that $4_2 = I(I(\u2264^2 (x^2 + y^2 + z^2, 4.0))) \u2208 D_3$ is a 3-ary intensional concept whose extension is\n$h(u_2) = {(g'(x), g'(y).g'(z)) | for any g' \u2208 D^\u03b1$\\ such that $\u2264^2 (x^2 + y^2 + z^2, 4.0)/g' is true }$\n$={(g'(x), g'(y).g'(z)) | for any g' \u2208 D^\u03b1 with g'(x)^2 + g'(y)^2 + g'(z)^2 \u2264 4,0}$}\nwhich is just the collection of all points of this sphere, where the values g'(x), g'(y), g'(z), 4.0 are the particulars in D_1, which are elements of the unary built-in concept Reals \u2208 D1, that is, for example, has to be satisfied that g'(x) \u2208 h(Reals) for each extensionalization function h. So, in many-sorted version of IFOL the concept Reals \u2208 $D_1$ will be a sort of this variable x, and this constraint would be automatically applied.\nNotice that the intensional concept u above is the propositional concept corresponding to\n\"Alberto Rossi told that $x^2 + y^2 * z^2 < 4.0$ is a sphere-formula with the center (0.0, 0.0, 0.0) and radius 2.0\"\nwhile the intensional concept\n$u_3 = I(p_1^3(present, g(x_2), I(p_1^3(past, g(x_4), I(<<\u2264^2 (x^2 + y^2 + z^2, 4.0)))))) \u2208 D_0$ is the propositional concept corresponding to\n\"Zoran Majkic knows that his friend Alberto Rossi told that $x^2 + y^2 * z^2 < 4.0$ is a sphere-formula with the center (0.0, 0.0, 0.0) and radius 2.0\"\nwhich is just a particular subcase of the initial more general natural language expression. So, with this example we have shown how the Intensional FOL is much more powerful, w.r.t the standard FOL, to express the natural language meaning by using the intensional concepts and preserving the Tarski's truth-semantics for the logic sentences.\nLet us consider another example of a natural language sentence with abstracted terms obtained also from non Bealer's \"that-syntax\u201d :\nExample 2. Le us consider the following natural language expression where \"EN\" means \"Euclid Number\":\n\"Mario Rossi works to resolve the EN-problem for which the people do not believe there exists somebody who resolved it.\u201d\nwhich, after the parsing into IFOL predicate-based syntax, uses the following three predicates presented by their logic atom syntax with variables and abstracted terms:"}, {"title": null, "content": "$p_1^1(x_1,x_2,t_1)$ for the verb \"to work\u201d, where the time-variable $x_1$ is used for the grammatical-form of the verb \"to work\u201d (time, gerund, etc..) with values, for example, \"past\", \"present\", \"future\u201d for time-specification, the variable $x_2$ is used for the subject who is working and t\u2081 is used for an abstracted term expression for this particular job.\n$p_2^2(x_1, x_2, t_2)$ for the verb \"to resolve\u201d, where the time-variable $x_1$ is used for the grammatical-form of the verb \"to resolve\" (time, gerund, etc..) with values, for example, \"past\", \"present\", \"future\u201d for time-specification,, the variable $x_2$ is used for the subject who is resolving and t2 is used for an abstracted term expression for this particular problem to be resolved.\n$p_3^3(x_3, x_4, t_3)$ for the verb \"to believe\u201d, where the time-variable $x_3$ is used for the grammatical-form of the verb \"to believe\" (time, gerund, etc..) with values, for example, \"past\", \"present\", \"future\u201d for time-specification,, the variable $x_2$ is used for the subject who believes and t3 is used for an abstracted term expression for this particular believing.\nThus, the logic sentence of IFOL obtained by such parsing has to be representing by the following logic formula, where \"Mario Rossi\", \"EN-problem\u201d and \"people\" are logic constants $c_i$ (nullary functions in IFOL) which are in D as well, so that for any assignment g, $g(c_i) = c_i$:\n$p_1^1(present, Mario Rossi, <<p_3^3(present, Mario Rossi, EN \u2013 problem)>>)$ $\\neg p_3^3(present, people, <<(\u2203x_2)p_2^2(past, x_2, EN \u2013 problem)>>)$\nThe logic conjunction \u2227 of two ground atoms of the predicate $p_1^1$ in the first line, and $p_3^3$ in the line bellow, corresponding to natural language sentences\n(a) \"Mario Rossi works to resolve the EN-problem\u201d, and\n(b) \"The people do not believe that there exists somebody who resolved it (refered to the EN-problem)\",\nwhere the expression \"there exists somebody\" in the second line sentence is logically represented by the existentially quantified variable \u2203x2.\nThis paper is also a continuation of my approach to AGI (Strong-AI) for a new gen-eration of intelligent robots using natural languages with epistemic logic reasoning, recently published in the papers [4] and [13]. Neuro-symbolic AI attempts to integrate neural and symbolic architectures in a manner that addresses strengths and weaknesses of each, in a complementary fashion, in order to support robust strong AI capable of reasoning, learning, and cognitive modeling. In this approach to AGI I considered the Intensional First Order Logic (IFOL) [1] as a symbolic architecture of modern robots, able to use natural languages to communicate with humans and to reason about their own knowledge with self-reference and abstraction language property.\nThis paper is dedicated to the extension of this previous work and to the more nat-ural relationship between the PRP concepts, as the fundamental parts of the natural language vocabulary, and the First-order Logic based on abstract mathematical concept of the n-ary predicates introduced as mean how to compute the truth of logic formulae. Differently from natural ideas of the concepts as a human mental objects used in"}, {"title": null, "content": "natural languages, the mathematical structure of predicates, useful for the computation of the truth of logic formulae and logic reasoning (deduction), are abstract mathematical structures that human does not use in every-day communication and reasoning. The most general and natural enrichment of such abstract mathematical logic structures of formal extensional logics is to use these intensional concepts, which are dominant part of Intensional FOL as types (sorts) to assign to the variables used to define the terms and the logic atoms of the predicates. Thus, differently from the previous development of unsorted Intensional FOL summarized in my recent book [1], in this paper we will develop the theory of Many-Sorted Intensional FOL, more sophisticated and human-mentally oriented language approach. The formal mathematical complication of this many-sorted version of the IFOL will be balanced by a more effective and controlled semantics, by limiting the assignment of the values to each variable of the formal logic only to the strict subset of the values of the domain that is just the extension of the intensional concepts used as the sorts of this variable."}, {"title": "2 Many-Sorted Intensional First-Order Logic", "content": "Research on ontology has been increasingly widespread in the computer science com-munity from 1990 and its importance is being recognized in diverse research fields, in my case in knowledge representation [14,15], database design and database integration, information modeling, information retrieval and object-oriented analysis (European SE-WASIE Project, University La Sapienza, Rome), in the period 1998-2008.\nIn particular, the IFOL (Intensional First-order logic [1] supports by its PRP inten-sional concepts the intended meaning (sense) and grounding of them to the reality by experience and learning, so it is adequate to support the development of AGI robots. Tom Gruber defined an ontology as \"a specification of a conceptualization\" [14] as a structure (D, R): then Guarino discussed such a definition in [16], arguing that, in order for it to have some sense, a different, intensional account of the notion of conceptual-ization has to be introduced, by considering Montague's definition of intension with the set of possible worlds W and hence the triple (D, W, R) of conceptualization where R is the set of conceptualized relations (the functions from W to their admittable exten-sions). In this way, the structure of Gruber above is in reference to a particular possible world w \u2208 W.\nSo, w.r.t. Guarino's conceptualization (his \"ontological commitment\u201d corresponds to our intensional interpretation I which assigns the particulars of D\u22121 to the constant symbols (nullary functional symbols in P of FOL) and intensional concepts (univer-sals) of D1 + ... + Dn C D to the atoms of predicates with free variables for all its arguments), in our case D is the PRP domain (of particulars D\u22121 and and universals D1) and R is a set of n-ary (n \u2265 1) intensional concepts in D1 + ... + Dn CD. Thus, we can use Guarino's definition of the relationships between vocabulary, conceptual-ization, ontological commitment and ontology, expressed here by the Bealer-Montague intensionality relationship (3)\n$F(w)(I(\u00a2(x))) = I_h(\u00a2(x))(w)$\nfor each virtual predicate \u00a2(x) \u2208 $\u0141_{op}$ (an open formula in $\u0141_{op} C \u0141$ of FOL syntax), Montague's possible world w \u2208 W and mapping Ih in (2) such that Ih(\u00a2(x)) : W \u2192"}, {"title": null, "content": "R is Montague's meaning (intension) of this virtual predicate", "ontological commitment\" (intensional interpretation I).\nWe are interested especially for two kinds of relationships between intensional con-cepts in D\u2081": "the intensional equality of concepts ' =' (in the intensional algebra of concepts $A_{int}$, provided by (1.20) of Example 4 in [1", "\u2286": "hich generalized IFOL semantics (non restricted to unary concepts only as in DL, but between any two intensional concepts in $D_1 + D_2 + ... + D_n$ for enough big finite natural number n \u2265 1, independently of their arity) will be defined in what follows.\nIn IFOL the concepts can have, attached to them, a number of sorts, so that each concept u \u2208 Dk (a k-ary Relation concept in PRP), with k \u2265 1, has a name (expressed by natural language lexicon in bpld letters) and exactly k sorts $s_i$ attached to it (which are also the concepts of the PRP domain D). The C-structures, that we introduce by IFOL, are the part of ontology of the concepts in $D_n CD,n \u2265 1$ (Properties an Relations in PRP domain D), where one of the basic relationship is the IS-A relationship between the concepts so that"}]}