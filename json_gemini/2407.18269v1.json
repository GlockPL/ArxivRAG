{"title": "LaMAGIC: Language-Model-based Topology Generation\nfor Analog Integrated Circuits", "authors": ["Chen-Chia Chang", "Yikang Shen", "Shaoze Fan", "Jing Li", "Shun Zhang", "Ningyuan Cao", "Yiran Chen", "Xin Zhang"], "abstract": "In the realm of electronic and electrical engineer-\ning, automation of analog circuit is increasingly\nvital given the complexity and customized require-\nments of modern applications. However, existing\nmethods only develop search-based algorithms\nthat require many simulation iterations to design\na custom circuit topology, which is usually a time-\nconsuming process. To this end, we introduce\nLaMAGIC, a pioneering language model-based\ntopology generation model that leverages super-\nvised finetuning for automated analog circuit de-\nsign. LaMAGIC can efficiently generate an opti-\nmized circuit design from the custom specifica-\ntion in a single pass. Our approach involves a\nmeticulous development and analysis of various\ninput and output formulations for circuit. These\nformulations can ensure canonical representations\nof circuits and align with the autoregressive nature\nof LMs to effectively addressing the challenges\nof representing analog circuits as graphs. The ex-\nperimental results show that LaMAGIC achieves\na success rate of up to 96% under a strict tol-\nerance of 0.01. We also examine the scalability\nand adaptability of LaMAGIC, specifically testing\nits performance on more complex circuits. Our\nfindings reveal the enhanced effectiveness of our\nadjacency matrix-based circuit formulation with\nfloating-point input, suggesting its suitability for\nhandling intricate circuit designs. This research\nnot only demonstrates the potential of language\nmodels in graph generation, but also builds a foun-\ndational framework for future explorations in au-\ntomated analog circuit design.", "sections": [{"title": "1. Introduction", "content": "Analog circuit design, encompassing a broad range of appli-\ncations, poses significant challenges due to its inherent com-\nplexity of the schematic and the precision of performance\nrequired in its execution. This complexity is particularly\npronounced in the realm of power converters, which have\nbecome ubiquitous in an array of electronic and electrical\ndevices. With the advent of diverse and customized electri-\ncal systems, such as electric vehicles, self-powered Internet\nof Things devices, and wearable or implantable biosensors,\nthe demand for custom-designed power converters to meet\nspecific supply power standards has surged. These convert-\ners, each with unique design specifications including voltage\nconversion ratio and power efficiency, exemplify the intri-\ncate and varied nature of analog circuit design. Traditional\ndesign methodologies, largely depending on pre-existing\ncircuit topologies and extensive manual optimization, are in-\ncreasingly inadequate in addressing the increasing needs of\nthese applications. This reliance on conventional approaches\nnot only prolongs the design process but also limits the po-\ntential for novel solutions in rapidly evolving domains. This\ngap highlights a critical need for an automated circuit design\nframework, capable of efficiently generating and optimizing\nhigh-quality power converter topologies based on specific\ndesign specifications.\nWhile there have been notable efforts to address the chal-\nlenges of automated analog circuit design, as highlighted in\nrecent studies (Fan et al., 2021; Zhao & Zhang, 2022; Lu\net al., 2023), these initiatives are yet to fully overcome the\ninherent complexities of the field. The approach (Fan et al.,\n2021) leverages a reinforcement learning (RL)-based tree\nsampling process for automating power converter design.\nHowever, this method exhibits limitations in terms of scala-\nbility and practical applicability, especially when generating\ncircuits with varying performance specifications. It requires\napproximately 500 simulation queries for convergence each\ntime a new circuit design is initiated, underscoring a sig-\nnificant challenge in efficiently adapting to different spec-\nifications. The other methods (Zhao & Zhang, 2022; Lu\net al., 2023) also develop search-based algorithm to sample\npromising circuit, which requires lots of simulations when\nquerying a new specification. This bottleneck highlights the\nnecessity for a more direct and efficient generation method\nthat can achieve desired performance criteria in a single\niteration. Such a method can not only accelerate the auto-\nmated design process but also enhance the practicality and\napplicability of automated analog circuit design, especially\nin rapidly evolving and diverse application areas.\nThe advent of large language models (LLMs) (Radford et al.,\n2019; Raffel et al., 2020; Chung et al., 2022; Nijkamp et al.,\n2023) has opened new frontiers in numerous fields, demon-\nstrating remarkable capabilities in understanding and gen-\nerating complex patterns and structures. This makes LLMs\nparticularly promising for tackling the intricate challenges\nof automated analog circuit design. The core strength of\nLLMs lies in their ability to process and synthesize vast\namounts of data, learning underlying patterns and relation-\nships. In the context of analog circuit design, this translates\nto the potential for LLMs to understand and generate the nu-\nanced and often non-linear relationships between different\ncircuit components and their performance characteristics.\nHowever, to fully harness this potential in the field of analog\ncircuit design, a significant extension of LLM capabilities\nis required, specifically in the domain of graph generation.\nAnalog circuits can be effectively represented as graphs,\nwhere components are nodes and connections are edges,\nencapsulating both the structural and functional aspects of\nthe design. Extending LLMs to support graph generation\nwould enable them to directly generate circuit topologies\nfrom specifications with high efficiency and accuracy.\nThis paper proposes LaMAGIC, an LM-based topology\ngeneration model for automated analog circuit design, es-\npecially for power converter applications. To the best of our\nknowledge, we are the first to solve this problem through generative\nmodeling and LM methodology. We develop a novel ap-"}, {"title": "2. Preliminaries", "content": ""}, {"title": "2.1. Analog Circuit Design", "content": "In the rapidly evolving domain of electrical and electronic\nengineering, automated analog circuit design, particularly\nfor custom power converter applications, is very importance.\nThis automation process aims to produce customized power\nconverters without human interference, adhering to specific\ndesign specifications. Key among these specifications are\nthe voltage conversion ratio and the power conversion effi-\ncency. The voltage conversion ratio is defined as the ratio\nbetween input and output voltages, while the power conver-\nsion efficiency is the ratio of input power to output power.\nAnother crucial aspect of power converter design is the duty\ncycle, which controls the duration of switches within the cir-\ncuit, thereby influencing the output voltage and the overall\nperformance of the circuit.\nThe circuit topology G is conceptualized as a hypergraph\nconsisting of vertices V and hyperedges E. The vertices V\ninclude various analog devices and three external terminal\nports. The device (or called component in later context),\nincluding capacitors C, inductors L, phase-I switches Sa,\nand phase-II switches Sb, is connected to other devices or\nports via two outgoing edges. The terminal ports are the\nvoltage input port $V_{IN}$, the voltage output port $V_{OUT}$,\nand the ground GND, each with a single outgoing edge.\nThe hyperedges E symbolize the connections between these\ndevices and ports."}, {"title": "2.2. Language Model", "content": "LMS (Radford et al., 2019; Raffel et al., 2020; Chung et al.,\n2022; Nijkamp et al., 2023), especially those using autore-\ngressive training, are pivotal in natural language processing.\nAutoregressive LMs learn to predict the next token in a se-\nquence based on previous tokens, utilizing an autoregressive\nloss function. This function calculates the loss as the nega-\ntive sum of log probabilities for each predicted token, given\nthe preceding ones. Formally, for a sequence $x_1, x_2, ..., x_n$,\nthe loss l is: $l = \\sum_{i=1}^n - log P(x_i | x_1, x_2, ..., x_{i-1})$. This\nmethod trains LMs to capture complex sequential patterns,\nessential for generating contextually and syntactically co-"}, {"title": "2.3. Problem Formulation", "content": "The objective of our model is to design circuit topolo-\ngies and select appropriate duty cycles to achieve specified\nvoltage conversion ratio and power conversion efficiency.\nWithin our design framework, we consider a range of duty\ncycle options: {0.1, 0.3, 0.5, 0.7, 0.9}. These options pro-\nvide a framework for varying the ON times of switches to\nmeet specific performance criteria. Based on these consider-\nations, we define two distinct problem scenarios:\nProblem 1 (Edge Generation). Given vertices V, a target\nvoltage conversion ratio r, and an efficiency \u03b7, the task\nis to generate the connections E and determine the duty\ncycle s \u2208 {0.1, 0.3, 0.5, 0.7, 0.9} to construct a circuit that\nsatisfies both r and \u03b7.\nProblem 2 (Topology Generation). In the scenario where\ndevice requirements are not predefined, the challenge ex-\npands to generating both vertices V and their corresponding\nconnections E, along with deciding the duty cycle s. The\ngoal remains to construct a circuit meeting r and \u03b7."}, {"title": "3. Power Converter Dataset Construction", "content": "The foundation of an effective automated analog circuit de-\nsign system lies in the diversity of the dataset upon which\nthe model is trained. In our main experiment (Section 5.2),\nwe construct a dataset by randomly sampling topologies of\n3, 4, and 5-component circuits. This range was chosen to en-\ncapsulate the varying degrees of complexity typical in power\nconverter circuits, thereby ensuring that our model will be\nlearned to handle a variety of design scenarios. Additionally,\nwe ensure that each topology is not isomorphic, which not\nonly prevents redundancy in our dataset but also reinforces\nthe diversity of circuit designs. For each random-sampled\ntopology, we generate five circuits using different duty cy-\ncles {0.1, 0.3, 0.5, 0.7, 0.9} according to our design space.\nThen, we simulate each circuit with NGSPICE (Nenzi P,\n2011) to compute the corresponding voltage conversion ratio\nand efficiency. Next, we pruned out the invalid topologies\nreported by the simulator. The final dataset comprises input\nfeatures including the simulated voltage conversion ratio\nand efficiency, and the output consisting of the circuit topol-\nogy and the duty cycle. For 3, 4, and 5-component circuits,\nwe have 1k, 14k, and 117k different data points respectively,\nsince the design space will exponentially grow up along\nwith the component numbers. In total, we randomly split\naround 120k data points for training and 12k for evaluation.\nIn the subsequent experiment (Section 5.3), we extend our\ndataset to include 6-component circuits, aiming to assess"}, {"title": "4. Language Model-based Topology\nGeneration", "content": ""}, {"title": "4.1. Na\u00efve Methods for Circuit Generation", "content": "Using LLMs to revolutionize the labor-intense tasks is a\npromising trend given the generation ability and the natural\nlanguage formats for input and output of LLMs. Prompt en-\ngineering (Liu et al., 2023) and SFT (Nijkamp et al., 2022)\nare the most famous approach to adapt LLMs to specialized\ndomains. However, the unique challenges of analog circuit\ndesign, which demand specialized expertise and interaction\nwith simulators, present limitations for fundamental LLMs\nlike GPT-4 (Lee et al., 2023) when used prompt engineering.\nOur experiment with GPT-4, involving few-shot prompt\nengineering with 100 samples in the analog circuit design\ndomain, revealed that the model failed to produce circuits\nmeeting our specific performance requirements. This out-\ncome illustrates the limitations of using general-purpose\nLLMs and prompt engineering for highly specialized tasks.\nAs a result, in this work, we aim to explore SFT to build\nan LM for analog circuit generation. A na\u00efve method is\nto formulate the problem into instruction-based context in-\nspired by the recent success of instruction-based finetuning\nmethods (Chung et al., 2022; Taori et al., 2023), as shown\nin the first formulation in Figure 3 for edge generation.\nThis format offers an user-friendly approach, designing the\ninput as a natural language instruction with detailed specifi-\ncations. However, this seemingly straightforward formula-\ntion might present some challenges for LMs:\n1. Non-unique representations: The order of hyperedges\ncan be permuted while still representing the same cir-\ncuit structure, leading to multiple potential outputs rep-\nresenting for a single input. This non-uniqueness can\ncomplicate the learning process by causing ambiguity\nin the loss function calculation, potentially misguiding\nthe model training.\n2. Structured connection representation: A more struc-\ntured format might be necessary for effectively repre-\nsenting connections, aligning better with the sequential\nnature of LM training and loss functions, to facilitate\nlearning of connections and component selections.\n3. Precision of technical specifications: Presenting tech-\nnical specifications such as voltage conversion ratio"}, {"title": "4.2. Our Novel Circuit Formulations", "content": "In addressing the potential shortcomings of the initial circuit\nformat, our study introduces several alternative represen-\ntations to more effectively convey complex circuit design\nspecifications to an LM. In the meantime, we can explore\nthe potential of LM for graph generation.\nThe first of these formulations, which we refer to as the\nCanonical Formulation, is illustrated in Figure 3. By sorting\nthe edges in connections based on a predefined vertex order,\nit organizes the circuit information to ensure a canonical,\nunambiguous representation for each design. Furthermore,\nit simplifies the language used in the instructions, removing\nredundant or non-essential elements. Thus, this method\naddresses the non-unique representation challenge.\nBuilding on the Canonical Form, we introduced a second\nformulation, named Canonical Formulation + New Duty\nCycle Representation, as shown in Figure 3. This variant\nemploys one-hot encoding for duty cycle selection, using\n5 tokens of <select> or <unselect>. Only one token is\nmarked as <select>, indicating the chosen duty cycle. This\napproach transforms a categorical choice into sequential\nselections.\nBuilding upon our second formulation, we present a\nthird formulation, the Adjacency-Matrix-based Formula-\ntion, which offers a structured and systematic approach to\nrepresent circuit topologies. This method, depicted in Fig-\nure 3, is designed to capture the graph structure effectively\nduring training with an LM's loss function.\nThe formulation consists of two main parts: the prefix and\nthe circuit description. The prefix includes duty cycle op-\ntions, voltage conversion ratio, and efficiency. The circuit\ndescription entails the duty cycle selection, vertex order, and\nconnections. Also, this formulation separates each require-\nment with a <sep> token to aid the model in differentiating\nbetween them.\nFor the circuit description, duty cycle selection is succinctly\nrepresented using one-hot encoding from the second formu-\nlation. Vertex order specifies the ports and devices in the\ncircuit, while the connections are defined in an adjacency\nmatrix format according to the vertex order. Distinct tokens\n<no_edge>, <edge_1>, <edge_2>, and <both_edges>\nrepresent the presence or absence of connections between\nvertices. Note that <edge-1> always precedes <edge_2>\nin each vertex's connection representation. Thus, this for-\nmulation ensures a canonical form for each circuit.\nBy translating the graph structure into a sequential format,"}, {"title": "5. Experimental Results", "content": ""}, {"title": "5.1. Experiment Setup", "content": "Baselines. Since all related works (Fan et al., 2021; Zhao\n& Zhang, 2022; Lu et al., 2023) focus on search-based al-\ngorithms, we are the first to construct a generative model\nto bridge specifications and circuits in a one-time genera-\ntion approach. Given the novelty of this application and the\nabsence of prior work in building circuit generation mod-\nels, our study aims to establish a baseline in the domain\nof automated analog circuit design, specifically focusing\non the effectiveness of different input formulations. In ad-\ndition, we comprehensively evaluate the model with 13K\ndifferent input requirements from our testing set, while the\nother RL work (Fan et al., 2021) only perform five different\nspecifications to evaluate its search engine.\nWe perform SFT on one baseline and four variants of circuit\nformulations for edge generation and topology generation\nin Figure 3: (1) na\u00efve formulation (NF), (2) our first formu-\nlation with canonical form (CF), (3) our second formula-\ntion with canonical form and one-hot-encoding-based duty\ncycle selection (CFDC), (4) our adjacency-matrix-based\nformulation with pure text input to LM (PM), and (5) our\nadjacency-matrix-based formulation with float input (FM).\nFor NF, CF, CFDC, and PM, we set voltage conversion ratio\nand efficiency with a six-decimal precision in the input. All\nmodels in the experiment were trained under identical hyper-\nparameters, ensuring consistency across all other training\nvariables.\nExperimental platform and hyperparameters. Our ex-\nperiment runs on a machine with one NVIDIA V100 GPU."}, {"title": "5.2. Generation Results on 3, 4, 5-Component Circuit", "content": "The results of applying different circuit formulations for\nedge and topology generation are shown in Figure 4 and\nTable 1. The proposed formulations, including CF, CFDC,\nPM, and FM, demonstrate a clear advantage over the base-\nline NF in both edge and topology generation tasks. This\nindicates the effectiveness of our formulations in guiding\nthe model towards successful circuit generation.\nFor the edge generation task, while FM offered detailed\nnumerical representation, it showed lower success rates at"}, {"title": "5.3. Transferability Evaluation on 6-Component Circuit", "content": "The scalability and adaptability of models in analog circuit\ndesign are crucial, particularly as the complexity of circuits\nincreases. Our study initially focuses on models trained on\ncircuits with 3, 4, and 5 components. We extend this to\nevaluate model performance on more complex 6-component\ncircuits, providing essential insights into the circuit under-\nstanding capabilities of models in intricate scenarios."}, {"title": "6. Discussion", "content": ""}, {"title": "6.1. Training with Vertex Order Permutation", "content": "In this section, we evaluate the impact of data augmentation\nusing random vertex order permutation in training that aims\nat enhancing the models' generation ability. We train models\nusing FM and PM with and without data augmentation for\nedge generation task. The\nresults indicate that models training with data augmentation\noutperform those training without data augmentation. These\nfindings indicate the crucial role of data augmentation in\nincreasing the diversity and complexity of training data.\nAdditionally, this technique is particularly beneficial for\nFM, which initially struggle with lower success rates, to\nenhance the model to handle numerical inputs."}, {"title": "6.2. Exploration of Unseen Circuit Topology", "content": "In the field of automated analog circuit design, the ability to\ndiscover and validate previously unseen circuit topologies is\nimportant for newly developed tools. The majority of exist-\ning designs is created by human experts, and conventional\nautomation tools typically lack the capability to generate\nunseen or novel designs. According to experienced analog\ndesigners, a power converter with (1) a voltage conversion\nratio ranging from 0.4 to 0.6 or greater than 1.2 and (2) an\nefficiency larger than 0.9 requires the most efforts to de-\nsign manually. Thus, we further validate that our LM can"}, {"title": "6.3. Analysis of Potential Overfitting", "content": "This section analyzes the potential for overfitting, a common\nchallenge when employing sequential model architectures\nin graph generation tasks. The training and testing loss for\nour four different circuit formulations, CF, CFDC, PM, and\nFM, are presented in Table 4.\nWe observe more severe overfitting in CF and CFDC than\nFM and PM. The robustness of FM and PM is further val-\nidated by their performance in transferability experiments\ndetailed in Section 5.3, where these formulations achieve\nhigher success rates in complex 6-component circuits. This\nevidence supports that FM and PM are more effective in\navoiding overfitting and can be more suitable for scalable\nand generalizable circuit design tasks."}, {"title": "7. Conclusion", "content": "In this paper, we propose LaMAGIC, an LM-based topology\ngeneration model for analog circuit design that can directly\ngenerate an optimized circuit design given the custom spec-\nification in a single pass. Our approach focuses on SFT\nand demonstrates the effectiveness of LMs in generating\ncomplex circuit topologies and deciding circuit parameters.\nWe systematically develop and analyze various input and\noutput formulations to ensure canonical representations and\nthe compatibility with the autoregressive nature of LMs,\naddressing the specific challenges of representing analog\ncircuits as graphs. Experimental results show that our novel\ncircuit formulations can clearly outperform a naive formu-\nlation and achieve a success rate of up to 0.96 under a tol-\nerance of 0.01. In addition, we examine the scalability and\nadaptability of our LMs on more complex six-component\ncircuits. The results show that our proposed adjacency-\nmatrix-based circuit formulation with float input to LM can\nhave better effectiveness on complex circuit understanding,\nwhich can help the future research to focus on such for-\nmulations when dealing with complicated circuits. In the\nfuture, we will extend the capabilities of LaMAGIC to a\nwider range of analog components. Through this article, we\nhope to open new research pathways on automated analog\ncircuit design or any other fields of automated design that\ncould benefit from the potential of LMs in graph generation."}, {"title": "Acknowledgements", "content": "This work is partially supported by SRC 3104.001 and NSF\n2106828. Special thanks to Wan-Hsuan Lin for contributing\nvaluable ideas to this project."}, {"title": "Impact Statement", "content": "This paper presents work whose goal is to advance the field\nof Machine Learning. There are many potential societal\nconsequences of our work, none which we feel must be\nspecifically highlighted here."}]}