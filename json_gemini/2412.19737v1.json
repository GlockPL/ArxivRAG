{"title": "Adaptive Context-Aware Multi-Path Transmission Control for VR/AR Content: A Deep Reinforcement Learning Approach", "authors": ["Shakil Ahmed", "Saifur Rahman Sabuj", "Ashfaq Khokhar"], "abstract": "This paper introduces the Adaptive Context-Aware Multi-Path Transmission Control (ACMPTC) system, an efficient approach designed to optimize the performance of Multi-Path Transmission Control Protocol (MPTCP) for data-intensive applications such as augmented and virtual reality (AR/VR) streaming. ACMPTC addresses the limitations of conventional MPTCP by leveraging deep reinforcement learning (DRL) for agile end-to-end path management and optimal bandwidth allocation, facilitating path realignment across diverse network environments. The primary contributions of this system include comprehensive bandwidth requirement analysis, feedback mechanisms, congestion forecasting, and adaptive data routing, all of which contribute to low latency and high network utilization. A mathematical model has been developed to validate the DRL-based ACMPTC framework's effectiveness, which optimizes path selection, bandwidth allocation, and congestion control under varying and unpredictable network conditions. Extensive simulations demonstrate that ACMPTC outperforms competing MPTCP schemes in terms of throughput, latency, and quality of service, making it a promising candidate for new network connection management in AR/VR applications and adaptive network traffic management techniques.", "sections": [{"title": "I. INTRODUCTION", "content": "The rapid evolution of data-intensive applications, particularly in augmented and virtual reality (AR/VR), has introduced unprecedented demands on network infrastructures [1]. These applications require high bandwidth, ultra-low latency, and consistent quality of service (QoS) to deliver seamless, immersive experiences [2]. Traditional network protocols like the Transmission Control Protocol (TCP) often struggle to meet these stringent demands, especially in highly dynamic and diverse network environments due to single path transmission, inadequate for high-bandwidth, low-latency requirement, high latency sensitivity, etc. [3]. These limitations make TCP less effective for dynamic, heterogeneous network environments and the demanding performance needs of modern applications like AR/VR, which require more adaptive and efficient data transmission mechanisms.\nA potential solution that has gained in popularity to cope with the demands of high-bandwidth, low-latency applications is Multi-Path TCP (MPTCP), which allows multiple network paths between two hosts being used simultaneously [4]. Although MPTCP has improved performance to some extent in terms of bandwidth, it is slow at responding to dynamic network conditions (e.g., may perform inefficiently and unbalance the links) with a lack of context awareness as well are less capable of congestion control, which makes them an unsuitable solution for increased-bandwidth applications i.e., AR/VR etc. These shortcomings restrict the ability of MPTCP to satisfy stringent performance needs for AR/VR rapidly adapting to network changes and efficiently managing bandwidth are essential for a seamless, high-quality user experience. To address the limitations of TCP and MPTCP, this paper proposes the Adaptive Context-Aware Multi-Path Transmission Control (ACMPTC) system for AR/VR content. ACMPTC advances current MPTCP solutions by integrating deep reinforcement learning (DRL) techniques for intelligent and dynamic path management and bandwidth allocation [5]. This novel approach enables ACMPTC to respond rapidly to varying network condtions, critical to maintaining high-quality AR/VR streaming experiences.\nThe difference is that ACMPTC can adjust data transmission paths based on network conditions. ACMPTC employs a feedback mechanism, path-selection latency minimization, and network-utilizing maximizable optimization [6]. Per the DRL-based solution, a multi-agent with higher autonomy levels continuously monitors and controls network paths on its behalf based on real-time decisions, like path selection, congestion control roles, as well bandwidth limiting. In this article, the authors present a few critical features for ACMPTC to enhance its performance\u2014mainly choosing paths with low latency and packet loss. It brings a DRL-based agent that can adapt its decision to real-time network states and compute dynamic, optimal choices. This feedback loop, on the other hand,\nallows for real-time path selection and resource allocation that enables continuous optimization to provide a smooth AR/VR experience even with varying network conditions. It confirms that the system operates correctly and provides a way to update such a network when there is variation in traffic levels by adjusting it effectively."}, {"title": "A. Background and Significance", "content": "The rise of multi-path networking technologies and high-bandwidth hungry AR/VR brings complexity to managing network traffic. However, it also offers opportunities to improve network performance and ensure uninterrupted immersive experiences. To address these challenges, we propose ACMPTC, which dynamically adapts based on network conditions and optimizes path selection for AR/VR applications. In AR/VR multimedia applications, QoS is sensitive to latency,\nbandwidth availability, and packet loss. ACMPTC plays a crucial role by minimizing latency and ensuring efficient path selection, improving network performance and the overall QoS [7].\nThe most significant benefit of ACMPTC is its capability to learn on the fly and optimize bandwidth across what they say are more appropriate paths. However, network congestion management and maintaining consistent communication has become more complex, especially in urban areas, as the traffic volume has increased [8]. ACMPTC tackles those challenges using a real-time path management mechanism that adjusts to these dynamic network conditions without causing service disruption. This system is essential for maintaining service during peak times. Factors like ACMPTC's dynamic adaptability and context awareness make it efficient to present a stable content delivery in an AR/VR environment [9]. It also looks for possible QoS degradations and redistributes the available re-sources to ensure QoS for the resource-hungry R/VR content. Additionally, ACMPTC boasts its DRL framework that acts in a full-automatic manner to handle congestion and optimize bandwidth allocation. DRL-based prediction of congestion and periodic proactive resource (bandwidth) allocation using up-to-date network data by the DRL algorithm guarantees that bandwidth is not taken away from AR / VR applications without delay [8683970]. This innovative, principled structure of ACMPTC makes it a potential technology for 6G demand-driven network traffic management, guaranteeing user experience with passivity."}, {"title": "B. Related Work and Contribution", "content": "Understanding the evolution of network protocols and optimization strategies is essential for advancing multi-path data transmission technologies. Our literature review spans the development of MPTCP and the integration of DRL for network optimization, identifying areas where further research can contribute to the field.\n1) Evolution of MPTCP: The inception of MPTCP marked a paradigm shift in network protocol design aimed at leveraging the increasing availability of diverse network paths to enhance data transmission reliability and throughput. Initial theoretical explorations in [10] provided a compelling case for MPTCP, indicating potential benefits such as improved bandwidth utilization and failover capabilities. Practical im-plementations and subsequent challenges, particularly in path management and congestion control, were later discussed [11], highlighting the intricacies of applying MPTCP in real-world networking scenarios. Over time, research has demonstrated MPTCP's adaptability to different network architectures, from wired broadband connections to mobile networks [12]. Moreover, the adoption of MPTCP in mainstream operating systems and its implications for application performance have been rigorously analyzed [13], revealing its potential and limitations in handling today's network traffic demands.\n2) Advances in DRL for Network Optimization: The inception of MPTCP marked a paradigm shift in network protocol design aimed at leveraging the increasing availability of di-verse network paths to enhance data transmission reliability\nand throughput. Primarily, network decisions depended on static routing and management policies [6]. However, due to the nature of network states, which change rapidly, it is needed to have more flexible and adaptive solutions. This is where DRL started revolutionizing network management by allowing networks to learn and improve with more experience. The authors in [6] are among the first to adopt DRL for network decisions. They used it to change the routing paths on the fly, enabling them to make a significant breakthrough in dealing with changing network topologies and congestion patterns. They unlocked the door from static setups, allowing DRL to take proactive, context-aware decisions leading to optimal data flow [14].\nDRL efficiently handles high-dimensional state spaces and complex decision-making environments. DRL is ideal for handling vast amounts of network data and generating poli-cies best suited to real-time network conditions hence, it grounds its TCP as a type of DRL. However, the full potential of DRL in the context of network operation goes beyond the routing itself [15]. Optimizing multi-path routing with DRL is possible across various network operation aspects, such as load balancing, resource allocation, or quality of service optimization. The aspects of DRL implementation in network systems are pretty challenging. Namely, network conditions are dynamic and are not always statistically the same. Due to high variability, DRL systems must converge quickly and provide a stable solution. Furthermore, network conditions may not always be stationary; therefore, a separate solution is needed to allow DRL systems to adapt to novel situations without human intervention [16].\n3) Gaps in Current Research: Prior works provided foun-dational studies using MPTCP and DRL in network systems. However, optimization of the two for AR and MPTCP tech-nologies, which are bandwidth and ultra-low latency demand-ing, remains an area of MPTCP's applicability but needs significant exploration. The existing network optimization, mostly reactive, based on DRL general algorithms, cannot anticipate the best network conditions prior, consequently heavily impacting AR/VR streaming quality [17]. The capacity to predict future user states in DRL encourages their use in the current research as a promising approach to advance MPTCP usage [15]. With this unified framework lacking in the above studies, the gap between theoretical advance-ments and their implementation in viable solutions overshadow works on this phenomenon in the current study [15]\u2013[17]. Our study attempts to bridge this theoretical-practical gap by presenting a complete system that optimizes ACMTCP behavior while enhancing the efficiency of DRL in achieving AR/VR demands with high bandwidth and low latency. This work further bridges the gap in network optimization theory. It also validates the resulting solutions' practicality in real-world networks to advance further network protocol design capabilities aligned with evolving digital application trends."}, {"title": "C. Contributions", "content": "Our work is guided by the following critical achievements aimed at enhancing MPTCP for current data-intensive applications such as AR/VR streaming:\n\u2022 The primary contribution is developing the ACMPTC system, which dynamically optimizes multi-path networking by adjusting path selection and bandwidth allocation across available channels. Unlike traditional approaches, ACMPTC leverages real-time network metrics to forecast bandwidth demands and allocates/reallocates the most efficient paths to ensure seamless AR/VR streaming.\n\u2022 We introduce a state-of-the-art DRL-based framework within ACMPTC, where a multi-agent monitors and con-trols the network paths. The agent autonomously makes optimal decisions on path selection, congestion control, and bandwidth distribution, enabling quick adaptation to network fluctuations. This is especially critical for maintaining quality in high-speed, low-latency AR/VR applications.\n\u2022 In the ACMPTC system, we design comprehensive state, action, and reward functions that empower the DRL agents to learn and execute effective strategies for net-work management. The ACMPTC model ensures robust and efficient AR/VR streaming by systematically opti-mizing these network control parameters. A mathematical model has also been developed to validate the system's operations, supporting adaptive responses to varying net-work conditions crucial for high-bandwidth and low-latency multimedia applications.\n\u2022 A significant enhancement in ACMPTC is incorporating a feedback mechanism, enabling continuous optimization based on real-time network performance metrics. This feedback loop, driven by the insights and adjustments from the DRL agents, dynamically reallocates paths and resources for AR/VR content, effectively responding to changes in network conditions. This adaptive architecture ensures a consistent and high-quality QoS by minimizing disruptions.\n\u2022 The proposed ACMPTC system provides a comprehen-sive evaluation framework through simulation, outper-forming traditional TCP and MPTCP management tech-niques. By maintaining steady data transmission quality, ACMPTC significantly improves QoS in AR/VR stream-ing environments, ensuring reliable and smooth content delivery.\nPaper Scope and Structure: Section II defined the fundamentals of the MPTCP model. Section III details the mathematical constructs of ACMPTC model. This paper is further structured as follows: Section IV illustrates the proposed DRL-based solution. Section V presents the simulation procedures and the evaluations, demonstrating how ACMPTC performs in controlled and realistic situations. Section VI presents the research findings and discusses the implications and potential for future network communications of the ACMPTC system."}, {"title": "II. THEORETICAL FRAMEWORK: MPTCP", "content": "We provide the theoretical framework for MPTCP that extends the traditional TCP protocol to utilize multiple network paths simultaneously, increasing overall throughput and improving resilience against network failures [18]. Using multiple sub-flows across different paths allows MPTCP to distribute data more efficiently across network resources."}, {"title": "A. MPTCP sub-flows and Throughput", "content": "An MPTCP connection is comprised of multiple sub-flows, denoted as K1, K2, . . ., Kn, where n represents the total number of sub-flows, each corresponding to a different network path. Each sub-flow K\u2081 operates as a single TCP connection over one of the available paths (e.g., Wi-Fi, 4G, 5G, Ethernet, etc.), as shown in Fig. 1. The total throughput of the MPTCP connection, Ttotal, is the sum of the throughputs of individual sub-flows:\n$T_{total} = \\sum_{i=1}^{n} T_{K_i}$   (1)"}, {"title": "B. Traffic Allocation and Optimization", "content": "Following the model proposed in [19], the throughput of each sub-flow K\u2081 can be modeled as:\n$T_{K_i} = \\frac{w_i}{RTT_i} (1-p_i)$   (2)\nwhere wi is the window size of sub-flow Ki, RTT is the round-trip time of sub-flow Ki, and pi is the packet loss probability on sub-flow K\u2081. Note (2) captures how sub-flow the window size, latency, and packet loss on each path influence performance.\nThe optimization of MPTCP focuses on finding the optimal allocation of traffic across the sub-flows to maximize over-all throughput, subject to network constraints. The objective function is to maximize the total throughput Ttotal:\n$\\text{max}_{\\{D_{K_1},...,D_{K_n}\\}} T_{total} = \\sum_{i=1}^{n} \\frac{w_i}{RTT_i} (1-p_i)$   (3a)\ns.t. $\\sum_{i=1}^{n} D_{K_i} \\leq D, \\; D_{K_i} \\geq 0 \\; \\forall i$   (3b)\nwhere D is the total data load to be distributed across sub-flows, and DK\u2081 is the portion of data allocated to sub-flow Ki. The window size wi can be modeled in equilibrium as:\n$w_i = \\sqrt{\\frac{2(1-p_i)}{3p_i}} = \\sqrt{\\frac{2}{3} \\frac{(2-p_i)}{p_i}}$   (4)"}, {"title": "C. Limitations of MPTCP", "content": "Eq. (4) shows how the window size adapts based on the packet loss probability across the sub-flows. While MPTCP offers significant performance improvements, one of its key chal-lenges is handling path failures or congestion on specific sub-flows, which can lead to performance degradation. MPTCP employs congestion control mechanisms to adjust window sizes and data distribution in response to changes in network conditions. For instance, feedback-based path failure detection mechanisms have been proposed to rapidly detect path issues and adjust traffic routing accordingly [20]. These mechanisms help mitigate packet loss and reallocate traffic to more stable sub-flows, improving the system's overall resilience.\nAlthough MPTCP enhances throughput and fault tolerance by utilizing multiple paths, it faces limitations in handling highly dynamic network environments where real-time adap-tation to network conditions is required. MPTCP's standard congestion control algorithms may not be sufficient for com-plex applications like AR/VR streaming, where low latency and high bandwidth are critical. This sets the stage for further enhancement, which we will address in the following section by developing the ACMPTC model."}, {"title": "III. ACMPTC MODEL", "content": "To support a multi-path networking environment for 6G's advanced transmission needs, we introduce the ACMPTC system to optimize the performance of AR/VR_multimedia applications, as depicted in Fig. 2. ACMPTC system dynami-cally optimizes path selection, congestion control, bandwidth allocation, feedback mechanism, and context awareness related to AR/VR multimedia applications. Our model operates under the following assumptions:\n1) Network State Dynamics: We assume that the network state is inherently dynamic, influenced by external conditions and fluctuations in user interaction. These fluctuations affect\nthe state of each path, with a particular focus on AR/VR content delivery parameters.\n2) Real-time Information and Feedback Loop: AR/VR content is assumed to evolve dynamically. Consequently, ACMPTC leverages real-time insights and feedback to refine path selection and bandwidth allocation strategies continu-ously, optimizing network performance.\n3) Continuous Adaptation and Learning: The ACMPTC system incorporates a robust framework enabling continuous adaptation and learning. This ensures it evolves alongside emerging AR/VR technologies, optimizing network perfor-mance and maintaining the QoS."}, {"title": "A. Network Model", "content": "ACMPTC framework is designed to support multi-path data transmission for delivering seamless, high-quality AR/VR streaming in dynamic and resource-constrained environments across various network paths, each with varying bandwidth, latency, congestion, and packet loss characteristics. In the ACMPTC system, the available paths are denoted as P = {P1, P2, ..., Pn}, where each path P\u2081 is characterized by dynamic metrics such as: available bandwidth, Bi[t] on path Pi at time instant t, latency, Li[t] on path P\u2081, and congestion level, Ci[t] on path Pi at time t. Round-Trip Time RTTi [t] measures the time it takes for a data packet to travel from the source to the destination and return with an acknowledgment (ACK). For each AR/VR stream, Sj, where {S1, S2, ..., Sj,..., Sn}, transmitted over Pi, it maintains a congestion window, noted as cwndi,j[t]. The congestion window is that who dictates the number of active packets without being dropped at any given time. A larger congestion window enables faster data transfer. Even though the RTT defines an upper bound on how fast data can be acknowledged and therefore fixed kind of limits to the minimum send rate for the subsequent transmission. In the following sub-sections, we model path selection, congestion control of AR/VR data stream, bandwidth allocation, feedback mechanism, utility function, and optimization problem for the ACMPTC model."}, {"title": "B. Dynamic Path Selection, Assignment, and Adjustments", "content": "In a multi-path network, the ACMPTC model also needs an efficient dynamic path selection opportunistic data transfer for AR/VR streaming. This subsection covers the path as-signment. First, path selection approaches afterward, and then dealing with real-time network troubles such as congestion, RTT, bandwidth availability, and finally about, multi-path data transmission.\n1) Initial Path Assignment: The system assigns each of the AR/VR stream S; to one or more network paths Ps; \u2286 P},. The initial path assignment is based on an estimation of the current network conditions, such as Bi[t], Li[t], RTT;[t], and Ci[t]. The system maps the AR/VR stream Sj to routes offer-ing enough bandwidth and low latency, as real-time AR/VR content requires high performance. This process ensures the selected paths provide a reliable QoS for an immersive AR/VR experience.\n2) Dynamic Path Selection: The ACMPTC system employs a dynamic path selection process to assign paths to the data streams based on real-time network conditions for optimal performance. AR/VR stream Sj is assigned a subset of paths Ps; \u2286 P, based on its bandwidth, RTT, and latency require-ments as follows:\n$P_{s_j}^* [t] = \\underset{P_{s_j} \\subset P}{arg \\; max} \\; \\{\\alpha B_i[t] - \\beta L_i[t] - \\gamma p_i[t] \\} \\; \\forall P_i \\in P_{s_j}$   (5)\nwhere P5, [t] defines the optimal set of paths selected for Sj at t. \u03b1, \u03b2, \u03b3 are weighting factors that prioritize bandwidth, RTT, latency, and packet loss, respectively. Note (5) captures the paths selected for AR/VR stream, S; meet the AR/VR's quality requirements, with higher-weighted factors reflecting the priority of various parameters, such as minimizing latency and RTT for interactive AR/VR applications [21].\n3) Dynamic Path Reallocation: After an AR/VR Sj stream is initiated, the ACMPTC model checks in on each available path to track real-time conditions and guarantee that it stays performant. As the network changes, such as high to low traffic, congestions, or increased RTT, paths may be loaded over their means to carry out and cause service degradation. To manage these challenges, the ACMPTC uses a dynamic path reallocation system. If the system detects a path is no longer suitable (e.g., due to congestion or increased latency), it dynamically reassigns the stream to alternative paths based on the following key factors:\nCongestion Level: The system continuously monitors the congestion level Ci[t] on path Pi, which is the current path assigned to stream Sj. If the congestion level exceeds a pre-defined threshold Cth, i.e., Ci[t] > Cth, the ACMPTC system reallocates traffic to another path with lower congestion. The optimal path selection for stream S; is determined by the following:\n$P_{s_j}^* [t] = \\begin{cases} \\underset{P_k \\in P \\setminus \\{P_i\\}}{arg \\; min} \\{C_k[t]\\}, & \\text{if } C_i[t] > C_{th} \\\\ P_i, & \\text{if } C_i[t] \\leq C_{th} \\end{cases}$   (6)\nwhere P[t] is the set of optimal paths selected for stream S; at time t. P\u2081 is the current path assigned to stream Sj. Ci[t] is the congestion level on the current path P\u2081 at time t. Cth is the predefined congestion threshold. P is the set of all available paths. Ck[t] is the congestion level on an alternative path Pk at time t. The path reassignment process operates as follows: If the congestion level on the current path Pi exceeds the threshold Ci[t] > Cth, the system will reassign stream S; to the path Pk with the lowest congestion level from the available paths. If the congestion level on the current path Pi is below or equal to the threshold Ci[t] < Cth, S; continues to use the current path Pi without reassignment.\nRTT and Latency: When RTT;[t] or Li[t] on P\u2081 exceeds the thresholds RTTth or Lth, the ACMPTC reallocates AR/VR stream S; to other paths with lower RTT or latency:\n$P_{s_j}^* [t] = \\begin{cases} \\underset{P_k \\in P \\setminus \\{P_i\\}}{arg \\; min} \\{RTT_k[t], L_k[t]\\}, & \\text{if } RTT_i[t] > RTT_{th} \\text{ or } L_i[t] > L_{th} \\\\ P_i, & \\text{if } RTT_i[t] < RTT_{th} \\text{ and } L_i[t] \\leq L_{th}. \\end{cases}$   (7)"}, {"title": "C. AR/VR Data Stream-Aware Congestion Control", "content": "where RTTi [t] is the round-trip time on the current path Pi at time t. Li[t] is the latency on the current path P\u2081 at time t. RTTth and Lth are the predefined RTT and latency thresholds, respectively. P is the set of all available paths. RTTk[t] and Lk[t] are the RTT and latency on an alternative path Pk at time t. If the RTT or latency on the current path Pi exceeds the threshold (RTTth or Lth), the system reallocates S; to the path with the minimum RTT or latency among the other available paths. If the RTT and latency on Pi are below or equal to the thresholds, Sj will continue using the current path P\u00bf.\nPacket Loss: The ACMPTC system continuously monitors the packet loss rate on the current path Pi assigned to stream Sj. If the packet loss rate pi[t] on P\u2081 exceeds the predefined threshold Pth, the system reallocates the traffic from S; to a different path with a lower packet loss rate. The path assignment is determined as:\n$P_{s_j}^* [t] = \\begin{cases} \\underset{P_k \\in P \\setminus \\{P_i\\}}{arg \\; min} \\{p_k[t]\\}, & \\text{if } p_i[t] > p_{th} \\\\ P_i, & \\text{if } p_i[t] \\leq p_{th} \\end{cases}$   (7)\nwhere pi[t] is the packet loss rate on the current path P\u2081 at time t. Pth is the predefined packet loss threshold. pk[t] is the packet loss rate on an alternative path Pk at time t. If the packet loss rate on the current path P\u2081 exceeds the threshold (pth), the system reallocates S; to the path with the lowest packet loss rate among the other available paths. - If the packet loss rate on P is below or equal to the threshold, S; will continue using the current path Pi.\n4) Handling Insufficient Bandwidth and Path Sharing: For instance, an AR/VR stream S; may have bandwidth require-ments that cannot be supported entirely on its assignment paths. The ACMPTC system will automatically reshape the path assignments by adding more paths to support higher de-mand. On the other hand, if bandwidth requirements decrease (such as when AR/VR content complexity drops temporarily), the system will remove some assigned paths to normalize network resource consumption. When network resources are limited, and multiple AR/VR steams{S1, S2, ..., Sj, ..., Sn} need to share the same path, a common technique is known as Path Sharing [22]. To that end, the system monitors path congestion level Ci[t] and adaptively allocates bandwidth among streams to ensure each stream performs satisfactorily.\n5) Multi-Path Data Transmission: Multi-path transmission allows each AR/VR data stream S; to be transmitted across one or more available paths Pi. The system can balance the load, reduce latency, and mitigate packet loss by distributing the data across multiple paths. Paths are selected based on real-time performance metrics, including bandwidth, RTT, congestion window, and packet loss. This multi-path approach ensures robust traffic distribution, allowing the system to maintain continuous service even when some paths experience degradation or failure, a critical capability in dynamic network environments [20].\nThe ACMPTC system includes an efficient congestion mechanism for AR/VR data streams, aiming to deliver low\nlatency, high throughput, and minimal packet loss to ensure a\nsmooth QoS. This mechanism allows the ACMPTC to react in real-time by reallocating resources dynamically to network congestion or high RTT that could affect AR/VR perfor-mance. In particular, the system adapts the congestion window cwndi,j[t] continuously based on real-time path conditions and behavior of each AR/VR stream Sj, enabling efficient traffic management and smooth operation even when network conditions fluctuate\n1) Congestion Control: For each AR/VR data stream Sj transmitted over Pi, cwndi,j[t], at t governs how much data that AR/VR can transmit without receiving an ACK from the receiver. The congestion window is automatically tuned and adapted to network status (e.g., packet loss, RTT, congestion level, etc.) from the server side to prevent overcapacity of net-works while guaranteeing an audiovisual message transmission in AR/VR application. The congestion window is then updated on each time step t as follows:\n$cwnd_{i,j}[t+1] = \\begin{cases} cwnd_{i,j}[t] + \\alpha \\cdot (1 - p_i[t] - \\Sigma \\delta_{j,i}[t]), & \\text{if } p_i[t] < p_{th}, \\\\ max(cwnd_{i,j}[t] - \\beta \\cdot cwnd_{i,j}[t], 1), & \\text{otherwise.} \\end{cases}$", "latex": "true"}, {"title": "D. Dynamic Bandwidth Allocation", "content": "where ( = pi[t]+\u03a3;;;[t] and a is the scaling factor for the congestion window increase rate in the event of uncongestion (i.e., pi[t] < Pth), \u03b2 is the scaling factor that controls the rate of decrease of the congestion window when packet loss exceeds the threshold, pi[t] is the packet loss rate on path P\u2081 at time t, pth is the predefined threshold for acceptable packet loss on the path, 8;[t] is a metric representing deviation from typical traffic behavior for stream Sj, accounting for unpredictable traffic surges or reductions specific to AR/VR interactions (e.g., sudden bursts of data when rendering complex scenes), and Yj is a weighting factor that reflects the relative impact of the AR/VR stream's behavior on the congestion window.\n2) AR/VR-Specific Congestion Sensitivity: Due to the in-teractive nature of AR/VR applications, the system places greater emphasis on latency and packet loss than traditional congestion control algorithms. For AR/VR streams, even small packet loss or excessive latency can disrupt the user experience by causing lag or dropped frames. To account for this, the congestion control mechanism adjusts the congestion window more aggressively for AR/VR data streams, especially when packet loss rate pi[t] approaches the threshold pth and RTT[t] increases significantly, indicating growing congestion on path Pi. For AR/VR streams, the weighting factor ; is typically higher, making the system more sensitive to changes in net-work conditions, ensuring that the data flow can quickly adapt to maintain a high QoS for users.\n3) Congestion Window Adjustment: AR/VR streams often experience fluctuations in data rate due to varying complexity in the content being streamed (e.g., rendering simple versus complex virtual scenes). This leads to changing bandwidth demands that must be handled dynamically. To accommodate these fluctuations, the system adjusts the congestion window cwndi,j[t] based on the real-time behavior of each AR/VR stream. At each time step t, the system evaluates the current data rate and compares it to the expected data rate for the\nAR/VR stream. If the data rate exceeds the expected rate, the system increases the congestion window to accommodate the higher data demands. Conversely, if the data rate drops, the system reduces the window to avoid overloading the network. The adjustment is mathematically represented as:\n$cwnd_{i,j}[t+1] = cwnd_{i,j}[t] + \\delta \\cdot (\\frac{R_{s_j}[t]}{R_{s_j}^e[t]} - 1)$,   (8)\nwhere d is a scaling factor that adjusts the congestion window proportionally to the difference between the actual Rs, [t] and expected Rs [t] data rates. ACMPTC system's congestion control mechanism maintains a high QoS for AR/VR users. The system prioritizes paths with the lowest latency and packet loss, even if those paths offer lower bandwidth. The feedback mechanism continuously monitors user satisfaction and net-work conditions to adjust the real-time congestion window, ensuring that the QoS remains high. If a particular path's congestion level Ci[t] exceeds a threshold Cth, or if the user experience score Ux\u2081 [t] drops, the system dynamically adjusts the path assignment and reduces the congestion window on that path to avoid further degradation in performance.\nIn the ACMPTC system, dynamic bandwidth allocation ensures that each AR/VR data stream Sj is provided with sufficient bandwidth based on its real-time requirements and the current network conditions. The system continuously mon-itors the available bandwidth on each path Bi[t] and adjusts the allocation to meet the performance demands of each stream. At each time step t, the bandwidth Bi,j[t] allocated to AR/VR stream Sj on path P\u2081 is determined based on the available bandwidth B\u2081[t] and the congestion window cwndi,j[t]. The dynamic allocation process is formulated as:\n$B_{ij}[t] = min(\\frac{cwnd_{i,j}[t]}{RTT_i[t]}, B_{i,max} - \\Sigma U_{ji}[t])$,   (9)\nwhere cwndi,j[t] is the congestion window for stream Sj on path Pi, RTT[t] is the round-trip time for path Pi, Bi,max is the maximum bandwidth capacity of path Pi, Uj,i[t] is the actual bandwidth used by stream Sj on path Pi at time t. The system seeks to allocate bandwidth based on the path's available capacity while ensuring that the AR/VR stream's real-time needs are met. The allocation is designed to adapt to the congestion control mechanism and the network conditions, ensuring efficient bandwidth utilization across all streams. When the path drops below a critical threshold, the system reallocates the traffic to other paths with more available ca-pacity, ensuring that the AR/VR data streams receive sufficient bandwidth to maintain the QoS. The system continuously monitors bandwidth utilization and dynamically reallocates traffic across multiple paths as required. If the bandwidth requirements of an AR/VR stream Sj exceed the available capacity of the assigned path(s), the system reallocates traffic to other paths Pj where bandwidth is available:\n$P_{s_j}^* [t] = arg \\; max_{P_{s_j} \\subset P} \\{B_i[t]\\}$,   (10)"}, {"title": "E. Feedback Loop for Real-Time Optimization", "content": "where \u03b7 is the learning rate that controls the sensitivity of the system's adjustments", "Ur\u2081[t": "represents the user experience score for path Pi at time t. This feedback mechanism dynam-ically adjusts network parameters such as path selection", "cwndi,j[t": "and bandwidth allocated to AR/VR stream S; on path Pi Bi", "j[t": "based on real-time network performance and user feedback. As a result", "19": "."}, {"19": ".", "t": "at time t for path Pi is defined as:\n$Fb_i[t", "U_{x_i}[t": 11}, {"t": "at time t for stream Sj is defined as:\n$U_{s_j}[t", "B_{s_j}[t": "w_L L_{s_j}[t", "p_{s_j}[t": "w_Q QoS_{s_j}[t"}, {"t": "is the effective bandwidth allocated to stream Sj at time t, Ls, [t"}]}