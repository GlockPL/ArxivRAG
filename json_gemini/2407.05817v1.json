{"title": "Cyber Physical Games", "authors": ["Warisa Sritriratanarak", "Paulo Garcia"], "abstract": "We describe a formulation of multi-agents operating within a Cyber-Physical System, resulting in collaborative or adversarial\ngames. We show that the non-determinism inherent in the communication medium between agents and the underlying\nphysical environment gives rise to environment evolution that is a probabilistic function of agents' strategies. We name these\nemergent properties Cyber Physical Games and study its properties. We present an algorithmic model that determines the\nmost likely system evolution, approximating Cyber Physical Games through Probabilistic Finite State Automata, and evaluate it\non collaborative and adversarial versions of the Iterated Boolean Game, comparing theoretical results with simulated ones.\nResults support the validity of the proposed model, and suggest several required research directions to continue evolving our\nunderstanding of Cyber Physical System, as well as how to best design agents that must operate within such environments.", "sections": [{"title": "1 Introduction", "content": "Cyber Physical Systems (CPSs)\u00b9 are characterized as the integration of concurrent embedded systems (the \"cyber\" components)\neach executing a local control loop2, in a shared physical environment. Whilst the Internet of Things (IoT)\u00b3 describes\ndistributed systems that are capable of internet communication, exposing data and control access points, CPSs exist at a higher\nlevel of abstraction. A system of systems is meaningfully described as a Cyber Physical System if and only if the collective\nbehavior of its constituent systems exhibits properties of interest\u2074, and each system can thus influence the others (either directly,\nor indirectly by affecting relevant properties). A CPS may be designed holistically, in a top-down approach; or, incrementally,\nin a bottom-up approach, depending on the properties of the physical environment dictated by the domain of application. For\nexample, industrial automation environments7 may be designed completely top-down, starting from functional specifications\nwhich are iteratively refined into a concurrent system design. Networks of autonomous automobile systems, on the other hand,\nmust necessarily exhibit some degree of bottom-up instantiation, as autonomous vehicles enter and leave the macro system.\nCyber-system to cyber-system communication is often prevalent (typically, on top of some IoT architecture), but not strictly\nnecessary.\nBecause the cyber-components of a CPS may have substantial degrees of computational power, significant effect on the\nunderlying shared physical system, and well-specified local goals, it is often desirable to formalize them as agents. Thus, a\nnatural next step is to formalize the macro behavior of a CPS as a game, either adversarial or collaborative. A significant body\nor work on distributed games exists: notably, the work of Gutierrez et al10\u201312, which has developed a temporal logic to reason\nabout distributed games strategies.\nBecause CPSs are real instances of distributed systems, and operate on top of communication networks and protocols\nwithout strict hard-real time guarantees, the ordering of events obeys Lamport's rules13: they are not necessarily perceived in\nthe same partial order by any frame of reference in the system (i.e., from the underlying physical system's frame of reference,\nor by the internal frame of reference of each cyber system). Whilst causality can never be broken, a cyber system may, e.g.,\neffect two actions at distinct times that affect the physical system in the opposite order than expected. Thus, the formalization\nof CPSs as games must account for relative orderings and possible consensus (or lack thereof) within the system.\nThus, this paper explores Cyber Physical Games: scenarios where cyber agents act rationally in pursuit of their own goals,\nin adversarial and/or collaborative contexts, in the presence (and knowledge of) unpredictable and heterogeneous (across frames\nof reference) ordering of events. Specifically, this paper offers the following contributions:\n\u2022 We present a formal description of Cyber Physical Games, and how they arise from emergent properties of multi-agent\nCyber Physical Systems. We further specify the behavior of collaborative and adversarial Cyber Physical Games using\nexamples from the classical Iterated Boolean Game.\n\u2022 We show that there exist collaborative Cyber Physical Games where collaboration can diminish payoffs for both agents,\nif the non-deterministic properties of CPSs are not taken into account. Conversely, we show that employing knowledge"}, {"title": "2 Background", "content": "An agent is a goal-oriented system, operating in an environment; i.e., a set of physical and/or digital objects with various\nproperties and relationships between objects, which contains the agent itself. An agent is capable of acting upon the environment,\nmodifying some (or all) of its properties. A specific combination of properties' values (including of the agent itself) is defined\nas a state s of the environment. The set of all possible states is referred to as the environment's state space. A rational agent\nwill attempt to meet its goal by performing actions that maximize or minimize its utility function14.\nWithin the context of this work, the environment is a Cyber Physical System15: a super-system that \"combines cyber\nsystems (computational systems such as microprocessors and digital communication networks) with other physical systems\n(electromechanical, chemical, structural, and biological systems)16\". Of particular interest to us is the communication between\nthe cyber systems and the environment; particularly, the lack of determinism in such a distributed system whose emergent\nproperties give rise to Cyber Physical Games.\nAs first formally described by Lamport in his seminal 1978 paper13: \"In a distributed system, it is sometimes impossible to\nsay that one of two events occurred first. The relation \"happened before\" is therefore only a partial ordering of the events in the\nsystem.\". This property gives rise to interesting phenomena in Cyber Physical Games, that introduces additional complexity\ncompared to traditional turn-based17 or distributed12 games."}, {"title": "3 Cyber Physical Games", "content": "3.1 Modeling Cyber Physical Systems\nLet a CPS be defined as the tuple {E,C,M}. E denotes the physical shared environment, which is a set of k properties\nPk such that E = {P0, P1,\u2026Pk\u22122,Pk\u22121}. C denotes the set of n cyber agents operating on the environment, such that C =\n{C0, C1,...Cn-2,Cn-1}. The internal behavior of each cyber agent is not relevant for this work; we point interested readers to the\nbody of work on modeling embedded systems18. M denotes the message channels exchanging between the environment E\nand the cyber agents C, such that M = {{m\u00b2, m}, {m\u00b2, m}, ... {mcn-2, mcn_2}, {mcn-1, mcn-1}}, where m\u00b2 denotes an input\nmessage channel for cyber agent x, i.e., sensing the values of the environment, and mo denotes an output message channel\nfrom cyber agent x, i.e., acting on the environment. Messages conceptually represent all possible interactions between each\nagent and features of the environment, which we notate using the following notation: m\u00b2 \u2190 py denotes sensing by the cyber\nagent of environment property py; several properties may be sensed at once; e.g., m\u00b2x \u2190 Py, Pz. Py \u2190 mx = z denotes updating\nproperty py by agent cx, with a value of z.\nLet M\u00ba denote the set of all output message channels (acting on the environment) and Mi denote the set of all input message\nchannels (sensing the environment), such that M\u00b0 \u2282 M,M\u00b2 \u2282 M,M\u00ba\u2229M\u00b2 = 0,M\u00b0 UM\u00b2 = M. To keep notation simpler, instead\nof adding additional message channels for inter cyber agent communication, we consider the communication link to be a hidden\npart of the environment E, and we notate direct messages with content s from cyber agent x to y through m\u00b2, \u2190 (s) \u2190 mcx.\nWhilst environment evolution obeys continuous laws (typically, differential equations), it is convenient for our purposes to\nmodel it discretely. Let Et\u0118 denote the state (i.e., the combination of specific values of all its properties) of the environment at\ntime te, where the subscript denotes that this is time from the frame of reference of the environment. Similarly, inputs to the\nenvironment at time te are denoted by M. Then, the environment is governed by some system function f : (E,M\u00ba) \u2192 (E),"}, {"title": "3.2 Types of Cyber Physical Games", "content": "The goals of agents in CPSs are more likely to be concerned with the evolution of the state of the environment, rather than\nwith a specific state. For example, in the case of networks of autonomous automobile systems, the goal is the efficient and\nsafe conclusion of vehicles' routes (potentially, until they leave the environment), rather than any specific configuration of\nvehicles (albeit these may constitute meaningful sub-goals). Thus, iterated, infinite games such as Iterated Boolean Games 20\nare reasonable models to reason about the evolution of CPSs. Unlike traditional turn-based runs, agents in a CPS may issue\nactions at any time. A game is said to be collaborative if agents' goals are not in contradiction (in these cases, cooperation may\nbe beneficial, but this is not a necessary condition). A game is said to be adversarial if agents' goals are in contradiction.\nA (traditional, non-iterative) Boolean game21 is one where there exists a finite set of propositional variables, typically\ndenoted V = {a,b,c,...}, with Ly denoting the propositional language that is built from V, T (true), \u22a5 (false), and the typical\nlogical operators. Each agent controls a non-intersecting subset of V, and their goal is to satisfy a propositional formula of\nLy, typically denoted & or y. In Iterated Boolean Games, agents' goals are instead given by formulae of Linear Temporal\nLogic (LTL)22. LTL extends propositional language with the temporal operators X (next), F (finally), G (globally), U (until), R\n(release), W (weak until), and M (strong release). Furthermore, \u2192 denotes a sequence from one temporal state to another,\nsometime in the future, but not necessarily the next one. An agent's strategy is its decision function, which performs a given\navailable action, based on current and past input, to attempt to satisfy its goal. Notice that, unlike the scenarios explored in20, in\nCyber Physical Games an agent's strategy does not induce a unique run, because of the non-deterministic properties of CPSs.\nAdversarial games arise in CPSs when agents' goals are contradictory. This is the case of, e.g., intelligent adverting\nsystems, modifying what is displayed on screens in a commercial area to direct (indirectly, through psychological influence)\nconsumer traffic towards desired commercial venues. Whilst the morality of such scenarios is dubious at best, their study from\na theoretical perspective remains quite interesting. As before, Iterated Boolean Games are a reasonable model; the path from an\ninitial state to a terminal state can represent the evolution of the environment in such systems.\nThroughout the remainder of this paper, we will implicitly assume that games are limited to two players. Our contributions\ncan scale trivially to an arbitrary number of agents, but two agents provides the simplest case to most clearly describe the\nbehavior of Cyber Physical Games."}, {"title": "3.2.1 The Collaborative Iterated Boolean Game", "content": "Consider two cyber agents co and c\u2081, and an environment E with properties {a,b} \u2208 V, where both agents can observe and affect\nthe entire set of properties. However, only one variable update can occur at any point in time (i.e., agents cannot simultaneously\nupdate both variables under their control). This corresponds to environment update function\n$$E_{te} = f(M_{te-1}) =$$\n$$\n\\begin{cases}\n\\{a,b\\}_{te-1}, &  \\text{otherwise}\n\\end{cases}\n$$\n(1)\nIn this case, the environment update function can be obviously derived by the agents' control capabilities; notice this may\nnot be true in the general case (e.g., when the environment has internal state update rules that are not immediately derivable\nfrom its inputs)."}, {"title": "3.2.2 The Adversarial Iterated Boolean Game", "content": "Consider two cyber agents co and c\u2081, and an environment E with properties {a,b,c} \u2208 V, where both agents can observe\nall variables, but affect non-intersecting subsets of properties. Agent co has control over variables a and c, and agent c\u2081 has\ncontrol over variable b. As in the collaborative case, only one variable update can occur at any point in time (i.e., agents cannot\nsimultaneously update both variables under their control). This corresponds to environment update function\n$$E_{te} = f(M_{te-1}) =$$\n$$\\begin{cases}  & \\text{otherwise} \\\\\n & \\text{otherwise}\n\\end{cases}$$\n(2)\nAs before, agent co's goal is to satisfy an LTL formula \u00f8, and agent c\u2081's goal is to satisfy an LTL formula y. As in the\ncollaborative case, an agent is deemed social if it's aware of the other agent operating in the environment and, in the adversarial\ncase, actively tries to minimize the other agent's payoff, or unsocial otherwise. An agent is deemed optimistic if it assumes its\nmessages are perceived by the environment in the same order as the agent issues them, and that all frames of reference are\nsynchronized, and realistic otherwise. We assume each agent is aware of the other agent's LTL formula.\nIn the collaborative case, we assumed a a sequence of agents' messages could be partitioned uniformly, regardless of total\nsequence size. That assumption does not result in an unmanageable number of scenarios, since both agents were aligned in\nwanting to return to the same initial state after either a successful or unsuccessful run. In the depicted adversarial case, where\nagents have (potentially) several options to satisfy their formulae, that permutation assumption explodes the state space of the\nproblem. Thus, let us begin the analysis with a simplification of the partitioning assumption.\nAssuming both agents issue messages at all points in time within their frames of reference and that their frames of reference\nare synchronized with each other, the environment processes messages issued by both agents in the same order as issued, but\nwith random ordering within message pairs. I.e., give two messages mo and m\u2081 emitted by agents co and c\u2081 synchronously, the\nenvironment may process first mo, first m\u2081, or both at the same time (the latter is equivalent to a traditional turn-based game,\nwhere both players must commit to an action at any turn, and both actions are executed concurrently). Because the game is\ninfinite, we construct not a game tree from the current to terminal states, but rather a closed game graph, where payoffs are\nassociated with specific walks within the graph."}, {"title": "4 Stochastic Strategies for Cyber Physical Games' Payoff", "content": "Analyzing payoffs, for a system with a small number of states, can be done by listing all run permutations and determine\naverage payoff for each agent. This, of course, does not scale; the general case is more challenging, and requires realizing that\nthe problem must be formulated as determining the probabilities that certain sequences of state transition occur. Notice that,\ne.g., the transition from state {\u0101b\u0113} to state {\u0101bc} might happen because:\n\u2022 At state {\u0101b\u0113}, co issues action c \u2190 m\u00b2 = T and c\u2081 issues action b \u2190 m\u2081 = 1, both interpreted by the environment\nsimultaneously.\n\u2022 At state {\u0101b\u0113}, co issues action c \u2190 m\u00b2 = T and c\u2081 issues action b \u2190 m\u2081 = T, but the environment interprets co's\naction first.\n\u2022 At state {\u0101b\u0101}, co issues action c \u2190 m\u00b2 = T and c\u2081 issues action b\u2190 m\u2081 = 1, but the environment interprets c1's\naction first.\n\u2022 Etc.\nCO\nThus, rather than look at state transitions, we must look at the probabilities of transition sequences, in function of the\nenvironment's interpretation of each message sequence, and of agents' strategies. Notice that, because there is dependence on\nsequence, rather than just current state, it is not possible to perfectly model this behavior as a Markov Chain25, which assumes\nunique dependence on just current state; rather, the problem is intractable (specifically, it is NP-hard in the general case26).\nBecause we are dealing with instances of real systems obeying (partially) known constraints, rather than abstract mathemat-\nical models, we may approximate the behavior by taking advantage of our knowledge of CPSs. Recall that a message m to the\nenvironment E has lcx (m) = lo(m) +w,w ~ N (\u03bc, \u03c3\u00b2): thus, messages are more likely to be interpreted simultaneously rather\nthan sequentially, and each message is equally likely to be interpreted first27, with possibilities: co action effect, followed by c1\naction effect; c\u2081 action effect, followed by co action effect; or, simultaneous effect of co's and c\u2081's actions. Let us denote these\nprobabilities P(Co, C1), P(C1, co), and P(co||C1), respectively, where index k represents the environment's frame of reference,\nwhere time progresses twice as fast as in the agents' frame of reference.\nThe conditional probability P(t|ek) that a state transition t : ek \u2192 ek+1,e \u2208 E occurs, given that we are in state ek, can thus\nbe approximated by the sum of possible sequences that include t, weighted by the probabilities of simultaneous or sequential\ninterpretation, normalized so the sum of probabilities of all transitions that begin in ek add up to 1. Let It denote the set of\nall simultaneous interpretations in er that result in t (this set has either 0 or 1 element); 11 denote the set of all sequential\ninterpretations that contain ek as the first state (one interpretation) and Ick, denote the set of all sequential interpretations that"}, {"title": "5 Experiments and Results", "content": "Our goal here is to analyze whether our models for the evolution of Cyber Physical Games provide an accurate prediction of\nbehavior. Toward this purpose, we develop a computer simulation of two examples (corresponding to the collaborative and\nadversarial Iterated Boolean Game) and explore the predictive power of the models (particularly, the developed heuristics) for\ndifferent versions of CPS parameters. All code and data for those wanting to reproduce or extend our results is available here\u00b9."}, {"title": "5.1 Evaluating the Collaborative Game", "content": "For the collaborative case, we define that agent co's goal is to satisfy a formula 6, and agent c\u2081's goal is to satisfy a formula y,\ngiven by:\n$$\u03c6 : \\{ \\bar{ab} \\} \\to F\\{\\bar{ab}\\} \\to X\\{\\bar{ab}\\}$$\n$$\u03c8 : \\{\\bar{ab}\\} \\to X\\{\\bar{ab}\\} \\to F\\{\\bar{ab}\\}$$\n(5)\nFor the collaborative case, if agents do not sense the environment after the initial set up, we simply permute the set of agents'\nactions per iteration, and apply a the generated sequence to the environment. All permutations are equally likely through the\nFisher-Yates method33. For the cases where agents sense the environment (potentially aborting their action issuing in the case\nof a failed application of their action), we permute in a staggered fashion, interleaving sets bookmarked by agent sensing.\nIt is unnecessary to list all possible runs, but assuming an initial state of {ab}, it is trivial to deduce the two optimal runs\nthat satisfy both & and y fairly:\n<\\{\\bar{ab}\\}_{tE=0}, \\{\\bar{ab}\\}_{tE=1},\\{\\bar{ab}\\}_{tE=2},\\{\\bar{ab}\\}_{tE=3}, \\{\\bar{ab}\\}_{tE=4}>\n<\\{\\bar{ab}\\}_{tE=0}, \\{\\bar{ab}\\}_{tE=1},\\{\\bar{ab}\\}_{tE=2},\\{\\bar{ab}\\}_{tE=3}, \\{\\bar{ab}\\}_{tE=4}>\n(6)\nThat these exist suffices to show the game is collaborative. Notice that the former satisfies both formulae at the same time,\nwhilst the latter satisfies y before \u222e. Continuous evolution requires the run to resume to the initial state {ab} (not depicted).\nThis example is sufficiently simple that we can merely list all permutations of actions' effects and analyze the predicted\noutcome. Unsocial, optimistic agents: given P(mn), \u222e is satisfied on 33% of runs, y is satisfied on 50% of runs, and 17% of\nruns satisfy neither formula, with an average run length of 4 time steps. In this case, y is dominant since it allows for arbitrary\ntime between transition from the base state until its completion, while & requires an immediate transition from its second state\nto its third state (Equation 7). Unsocial but realistic agents: given P(mn), $ is satisfied on 40% of runs, y is satisfied on 40%\nof runs, and 10% of runs satisfy neither formula, with an average run length of 3.8 time steps. Compared to the prior case,\n||P(mn) || is smaller since c\u2081 can abort unsuccessful strategies, thus the revised success rates. Social but optimistic agents: & is\nuniquely satisfied on 25% of runs, y is uniquely satisfied on 33% of runs, both are satisfied on 17% of runs, and 25% of runs"}, {"title": "5.2 Evaluating the Adversarial Game", "content": "Agent co's goal is to satisfy a formula 6, and agent c\u2081's goal is to satisfy a formula y, given by:\n$$\u03c6 : (\\{\\bar{abc}\\} \\to X\\{\\bar{abc}\\} \\to X\\{abc\\})U(\\{\\bar{ab\\bar{c}}\\} \\to X\\{\\bar{abc}\\} \\to X\\{abc\\})U(\\{ab\\bar{c}}\\} \\to X\\{abc\\} \\to X\\{\\bar{abc}\\})$$\n$$\u03c8 : (\\{\\bar{abc}\\} \\to X\\{\\bar{abc}\\}\u222a\\{abc\\} \\to X\\{abc\\}$$\n(7)\nIn this scenario, there are more options for o satisfiability than for y; & can be satisfied by three different sub-runs, but all\nrequire two successive successful state transitions. y can only be satisfied by two different sub-runs, but each just requires one\nsuccessful state transition. For each specific pair of agent strategies, we can construct the state sequence matrix T, where row index i denotes\nthe state at time k and column index j represents the next state at time k+ 1, and entry ti,j denotes the probability of transitioning\nto state j given current state i. The value for each entry ti,j is given by Equation 3. For the Iterated Boolean Game analyzed here\nThis results in the following most likely state sequences for each configuration:\nOur simulation model yields the results displayed on Fig. 3."}, {"title": "5.3 Discussion", "content": "Simulation results for the collaborative game show are consistent with predicted values, with very small Mean Square Error\n(MSE) for all cases except Unsocial and Realistic agents, where our model is pessimistic: being aware of environment\nprogression and aborting failed runs preemptively seems to work out better than expected (it's possible that this is an artifact of\nthe small state space). In the adversarial game, Unsocial agents lead to the satisfaction of one agent's formula, closely aligned\nwith predicted most likely state sequence (in this case, we see \u00de satisfaction because there is no active adversarial action, thus\nthe higher number of options for leads to victory). When agents behave socially, \u03a8 allows for a dominant strategy, but still"}, {"title": "6 Related Work", "content": "Timing properties of Cyber Physical Systems and how they impact both design and operations of such systems have been\nextensively studied. Time-criticality in the presence of non-determinism is explored by Liu et al35, introducing \"time-soundness\";\nsimilar properties are achieved by Martin et al36 in the context of choreographing wireless devices' actions across both time\nand space using an Extended Kalman Filter to estimate all devices' positions and clock errors. Rosales and Paulitsch formalize\nthese sort of techniques using a tagged-signal-model model of computation for time semantics37, whilst Khayatian et al38\nexamine effects and prevention techniques for the graceful handling of uncontrollable timing errors (e.g., network failure), akin\nto the the study of non-determinism described in this paper.\nFormal games as a model for the behavior of CPSs has been applied to both design and security. For example, Krichene et\nal39 show how the routing game models congestion in different types of networks, specifically in cases where the joint decision\nof all players determines the costs of each path; they show that, under some constraints, the joint decision of the players remains\nwithin a small distance of the set of equilibria. Bakker et al40 use hypergames, which form an extension of game theory that\nenables modeling strategic interactions where the players may have significantly different perceptions of the game(s) they are\nplaying, to model large systems with continuous variables for the purposes of cyber-security, later extending this framework to\ndevelop hypergame-based defender strategies that are robust to deception and do not rely on attack detection41.\nThe use and emergence of artificial intelligence, at several levels, has been explored in the context of CPSs as self-aware\nsystems; Bellman et al42 show that these types of systems can perform decisions autonomously at runtime in a self-explanatory\nway, even in the presence of complex unforeseeable environmental dynamics (such as the ones described in this paper: we\nillustrated Cyber Physical Games with agents demonstrating a fairly low level of intelligence). This idea has been built upon by\nEsterle and Brown43, who extend the idea of the self-awareness of individual systems toward networked self-awareness. The\nneed to model these emergent system properties has led to the development of formal calculi for this purpose: e.g., Bakirtzis et\nal44 developed a category-theoretic framework to make different types of composition explicit in the modeling and analysis of\ncyber-physical systems, making system behavior hierarchically decomposed and related to a system architecture using the\nsystems-as-algebras paradigm.\nTo the best of our knowledge, this paper in the first that formalizes non-determinism in CPSs as a game, and shows\nits equivalence to probabilistic finite automata. As Lee16 has stated: \"...incompleteness of determinism... has profound\nconsequences.\""}, {"title": "7 Conclusions", "content": "We presented a formal description of Cyber Physical Games, and how they arise from emergent properties of multi-agent Cyber\nPhysical Systems. Critically, we showed that multiple agents operating within a Cyber Physical System give rise to behavior\nthat can be modeled as, and is in fact equivalent to, probabilistic finite state automata. This behavior can hinder the execution of\nall agents in a Cyber Physical Game, if it is not taken into account; thus, we introduced an algorithm for determining the most\nlikely sequence of events.\nIT is clear that, at least at a fundamental micro level, Cyber Physical Systems can never be free of non-determinism. It\naffects every interaction between cyber systems and the underlying environment, making the outcome of every action tuple\nprobabilistic. What is not clear, though, is how impactful this is at the macro level; what are the implications for system\nperformance, reliability, security, etc.? In other words, are Cyber Physical Games useful modeling constructs at the micro level\nthat can be abstracted away in favor of deterministic constructs at the macro scale; or, must we model non-deterministically all\nthe way up? If so, how to best engineer each individual agent, or groups of agents?\nAnswering these questions requires further research on the theoretical and empirical fronts. On the theoretical side, further\ndevelopment of the theory of Cyber Physical Games -particularly, with many agents- and study of the emergent statistical\nproperties is required. Again, we believe the Multi-armed bandit framework is a promising direction, but many other approaches\nare possible. On the empirical front, profiling of instances of Cyber Physical Systems can tell us what are the relevant probability\ndistributions, and how much, at the macro level, are systems afflicted by non-determinism."}]}