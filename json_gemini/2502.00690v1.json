{"title": "Dissecting Submission Limit in Desk-Rejections: A Mathematical Analysis of Fairness in AI Conference Policies", "authors": ["Yuefan Cao", "Xiaoyu Li", "Yingyu Liang", "Zhizhou Sha", "Zhenmei Shi", "Zhao Song", "Jiahao Zhang"], "abstract": "As AI research surges in both impact and volume, conferences have imposed submission limits to maintain paper quality and alleviate organizational pressure. In this work, we examine the fairness of desk-rejection systems under submission limits and reveal that existing practices can result in substantial inequities. Specifically, we formally define the paper submission limit problem and identify a critical dilemma: when the number of authors exceeds three, it becomes impossible to reject papers solely based on excessive submissions without negatively impacting innocent authors. Thus, this issue may unfairly affect early-career researchers, as their submissions may be penalized due to co-authors with significantly higher submission counts, while senior researchers with numerous papers face minimal consequences. To address this, we propose an optimization-based fairness-aware desk-rejection mechanism and formally define two fairness metrics: individual fairness and group fairness. We prove that optimizing individual fairness is NP-hard, whereas group fairness can be efficiently optimized via linear programming. Through case studies, we demonstrate that our proposed system ensures greater equity than existing methods, including those used in CVPR 2025, offering a more socially just approach to managing excessive submissions in AI conferences.", "sections": [{"title": "1 Introduction", "content": "We are living in an era shaped by the unprecedented advancements of Artificial Intelligence (AI), where transformative breakthroughs have emerged across various domains in just a few years. A key driving force behind AI's rapid progress is the prevalence of top conferences held frequently throughout the year, offering dynamic platforms to present many of the field's most influential papers. For example, ResNet [HZRS16], a foundational milestone in deep learning with over 250,000 citations, was first introduced at CVPR 2016. Similarly, the Transformer architecture [VSP+17], the backbone of modern large language models, emerged at NeurIPS 2017. More recently, diffusion models [HJA20], which represent the state-of-the-art in image generation, were presented at NeurIPS 2020, while CLIP [RKH+21], a leading model for image-text pretraining, was showcased at ICML 2021. These groundbreaking contributions from top-tier conferences have significantly accelerated the advancement of AI, enriching both theoretical insights and practical applications.\nAs AI continues to expand its applications and capabilities in real-world domains such as dialogue systems [SZK+22, AAA+23, Ant24], image generation [HJA20, SME20, WSD+24, WCZ+23, WXZ+24], and video generation [HSG+22, BDK+23], its immense potential for commercialization has raised growing enthusiasm in AI research. This enthusiasm has led to a rapid, rocket-like increase in the number of AI-related papers in 2024, as witnessed by recent studies [Sta24]. A direct consequence of this surge is the significant rise in submissions to AI conferences, which has placed a heavy burden on program committees tasked with selecting papers for acceptance. To address these challenges and maintain the quality of accepted papers, many leading conferences have introduced submission limits per author. In 2025, a wide range of leading AI conferences, including CVPR, ICCV, AAAI, WSDM, IJCAI, and KDD, have introduced submission limits per author in their"}, {"title": "2 Related Works", "content": "Due to the rapid increase in submissions to AI conferences in recent years [Sta24], concerns about the intense competition in these conferences are growing. As Bengio Yoshua noted [Ben20]: \u201cIt is more competitive, everything is happening fast and putting a lot of pressure on everyone. The field has grown exponentially in size. Students are more protective of their ideas and in a hurry to put them out, by fear that someone else would be working on the same thing elsewhere, and in general, a PhD ends up with at least 50% more papers than what I gather it was 20 or 30 years ago.\"\nConsequently, paper acceptance has become increasingly critical in AI job applications [Ahm22, BBM+24], as having more papers is now the norm. Therefore, it is crucial to establish fair and practical guidelines for desk rejections [TdSAKKBC18], ensuring that every group of authors is treated equitably in AI conferences."}, {"title": "2.1 Desk Reject Mechanism", "content": "A wide range of desk-rejection mechanisms have been developed to reduce the human effort involved in the peer-review process [AS21]. One of the most widely adopted desk-rejection rules is rejecting papers that violate anonymity requirements [JAWD02, Ten18]. This rule is crucial for maintaining unbiased evaluations of researchers from diverse institutions and career levels while preventing conflicts of interest. Another common mechanism addresses duplicate and dual submissions [Sto03, Leo13], alleviating the duplication of reviewer efforts across multiple venues and upholding ethical publication standards. Additionally, plagiarism [KC23, ER23] is a major concern in desk rejections at AI conferences, as it undermines the integrity of the academic community, violates intellectual property rights, and compromises the originality and credibility of research. In response to the growing number of submissions to AI conferences, new types of desk-rejection rules have recently emerged [LBNZ+24]. For example, IJCAI 2020 and NeurIPS 2020 implemented a fast desk-rejection mechanism, allowing area chairs to reject papers based on a quick review of the abstract and main content to manage the review workload. However, this approach introduced noise and sometimes resulted in the rejection of generally good papers, leading to its reduced prevalence compared to more systematic mechanisms like enforcing submission limits, which is the main focus of this paper. To the best of our knowledge, limited literature has explored these emerging desk-rejection techniques, and our work is among the first to formally study the desk-rejection mechanism based on maximum submission limits."}, {"title": "2.2 The Competitive Race in AI Publication", "content": "Due to the rapid increase in submissions to AI conferences in recent years [Sta24], concerns about the intense competition in these conferences are growing. As Bengio Yoshua noted [Ben20]: \u201cIt is more competitive, everything is happening fast and putting a lot of pressure on everyone. The field has grown exponentially in size. Students are more protective of their ideas and in a hurry to put them out, by fear that someone else would be working on the same thing elsewhere, and in general, a PhD ends up with at least 50% more papers than what I gather it was 20 or 30 years ago.\"\nConsequently, paper acceptance has become increasingly critical in AI job applications [Ahm22, BBM+24], as having more papers is now the norm. Therefore, it is crucial to establish fair and practical guidelines for desk rejections [TdSAKKBC18], ensuring that every group of authors is treated equitably in AI conferences."}, {"title": "2.3 Fairness System Design", "content": "Fairness [Fra12, MMS+21] is a key principle of social justice, reflecting the absence of bias toward individuals or groups based on inherent characteristics. Due to its profound societal impact, fairness has become an essential consideration in the design of algorithms across various computer systems that interact with human factors. In recommender systems, fairness can manifest in various forms, such as item fairness [ZFH+21, GLG+21], which ensures that items from different categories or with varying levels of prior exposure are recommended equitably, and user fairness [LCF+21, LCX+21], which guarantees that all users, regardless of their backgrounds or preferences, have equal opportunities to access relevant content. These fairness measures help balance opportunities for both users and retailers, fostering equity in the recommendation process. In candidate selection systems [Gil93, WHZ20], fairness ensures that all candidates are evaluated solely on merit, independent of factors such as race, gender, or socio-economic background, promoting equality and ensuring that the selection processes are inclusive. In information access systems [EDB+22], including job search [WMM+22] and music discovery [MRPC+21], fairness guarantees that all individuals can access the information they need without discrimination, ensuring equal opportunities for users to make informed decisions. Similarly, in dialog systems [GYA22, GRB+24], fairness ensures that language models avoid generating biased text or making inappropriate word-context associations"}, {"title": "3 Preliminary", "content": "In this section, we first introduce the notations in Section 3.1. Then, we present the general problem formulation in Section 3.2."}, {"title": "3.1 Notations", "content": "For any positive integer n, we use [n] to denote the set {1, 2, . . ., n}. We use \\(\\mathbb{N}\\) to represent the set of all positive integers. For two sets B and C, we denote the set difference as \\(B\\backslash C := \\{x \\in B : x \\notin C\\}\\). For a vector \\(x \\in \\mathbb{R}^d\\), \\(\\text{Diag}(d)\\) denotes a diagonal matrix \\(X \\in \\mathbb{R}^{d \\times d}\\), where the diagonal entries satisfy \\(X_{i,i} = x_i\\) for all \\(i \\in [d]\\), and all off-diagonal entries are zero. We use \\(1_n\\) to denote an n-dimensional column vector with all entries equal to one."}, {"title": "3.2 Problem Formulation", "content": "In this section, we further introduce the actual problem we will investigate in this paper, where we begin with introducing the definition for three kinds of authors that will appear later in our discussion.\nLet \\(A = \\{a_1, a_2,..., a_n\\}\\) denote the set of n authors, and let \\(P = \\{P_1, P_2,..., P_m\\}\\) denote the set of m papers. Each author \\(a_i \\in A\\) has a subset of papers \\(P_i \\subseteq P\\), and each paper \\(p_j \\in P\\) is authored by a subset of authors \\(A_j \\subseteq A\\). For each author, \\(a_i \\in A\\), let \\(C_i\\) denote the set of all coauthors of \\(a_i\\) and let \\(x \\in \\mathbb{N}\\) denote the maximum number of papers each author can submit.\nThe goal is to find a subset \\(S \\subseteq P\\) of papers (to keep) such that for every \\(a_i \\in A\\),\n\\[ \\frac{|\\{p_j \\in S : a_i \\in A_j\\}|}{\\text{#remained papers of author } a_i} < x. \\]\nor equivalently find a subset \\(S \\subseteq P\\) of papers (to reject) such that for every \\(a_i \\in A\\),\n\\[ \\frac{|P_i| - |\\{j \\in S : i \\in A_j\\}|}{\\text{#rejected papers of author } a_i} < x. \\]\nWe now present several fundamental facts related to Definition 3.1, which can be easily verified through basic set theory."}, {"title": "4 The Desk Rejection Dilemma", "content": "In this section, we define the concept of an ideal desk-rejection system in Section 4.1 and formally demonstrate in Section 4.2 that no algorithm can achieve this ideal system."}, {"title": "4.1 Ideal Desk-Rejection", "content": "An ideal desk-rejection system should avoid unfairly rejecting papers from authors who either comply with the submission limit or exceed it by only one or two papers. Otherwise, authors may face consequences due to co-authors with an excessively high number of submissions. This issue is particularly problematic for early-career researchers, as such collective penalties can have a significant negative impact on their careers.\nTo address this, we formally define the criteria for an ideal desk-rejection outcome for the problem in Definition 3.1, where rejections are based solely on an author's excessive submissions, without unfairly penalizing others.\nAn ideal solution for the submission limit problem in Definition 3.1 is a paper subset \\(S \\subseteq P\\) such that every author has exactly \\(\\text{min}\\{x, |P_i|\\}\\) papers remaining after desk rejection."}, {"title": "4.2 Hardness of Ideal Desk-Rejection", "content": "Unfortunately, we find that achieving an ideal desk-rejection system is fundamentally intractable.\nThe main result regarding this hardness is presented in the following theorem:\nLet \\(n = |A|\\) denote the number of authors in Definition 3.1. We can show that\n\u2022 For \\(n \\le 2\\), there always exists an algorithm that can achieve the ideal desk-rejection in Definition 4.1.\n\u2022 For \\(n \\ge 3\\), there exists at least one problem instance where no algorithm can guarantee achieving the ideal desk-rejection in Definition 4.1.\nTherefore, since an ideal desk-rejection system is not achievable, it is inevitable that some authors may face excessive desk-rejections due to collective punishments. This challenge is particularly concerning for early-career researchers with only one or two submissions, motivating the need to seek an approximate solution that optimizes fairness in desk-rejection systems."}, {"title": "5 Fairness-Aware Desk-Rejection", "content": "In this section, we first introduce two fairness metrics in Section 5.1, and then present the hardness result on minimizing one of them in Section 4.2. In Section 5.3, we show our optimization-based fairness-aware desk-rejection framework."}, {"title": "5.1 Fairness Metrics", "content": "As discussed earlier, achieving an ideal desk-rejection system is practically infeasible, as unintended rejections due to collective punishments are unavoidable. To address this, we relax the ideal system into an approximate form, where some unfair desk-rejections are permitted, while these rejections should be proportional to each author's total number of submissions.\nSpecifically, we introduce a cost function for each author, which estimates the impact of desk-rejection on each author:\nConsidering the submission limit problem in Definition 3.1, we define the cost function \\(c : [n] \\times 2^{[m]} \\to [0,1]\\) for a specific author \\(a_i\\) and a set of remaining paper S as\n\\[ c(a_i, S) := \\frac{|P_i| - |\\{p_j \\in S : a_i \\in A_j\\}|}{|P_i|} \\]\nThe cost function \\(c(a_i, S)\\) measures the proportion of papers authored by \\(a_i\\) that are rejected, prioritizing fairness for early-career authors with fewer submissions and aiming to reduce setbacks for them.\nTo further demonstrate how this author-wise cost function could benefit fairness, we present the following example:\nConsider a submission limit problem with \\(x = 10\\) and \\(n = 2\\). Suppose author \\(a_1\\) submits papers \\(P_1, P_2, \\cdots, P_{11}\\), and author \\(a_2\\) submits only paper \\(p_{11}\\). Rejecting paper \\(p_{11}\\) (i.e., \\(S = P \\backslash \\{p_{11}\\}\\)) results in a cost of \\(c(a_1, S) = 1/11\\) for \\(a_1\\) but a cost of \\(c(a_2, S) = 1\\) for \\(a_2\\), which is unfair to \\(a_2\\). On the other hand, if we reject paper \\(p_1\\) (i.e., \\(S' = P \\backslash \\{p_1\\}\\)), the cost for \\(a_1\\) remains \\(c(a_1, S') = 1/11\\), while the cost for \\(a_2\\) becomes \\(c(a_2, S') = 0\\). This minimizes both the highest cost and the total cost. This example demonstrates that our cost function encourages rejecting papers from authors with many submissions while protecting authors with few submissions.\nTo ensure fair treatment for all authors and avoid imposing excessive setbacks on early-career researchers, we introduce two fairness metrics based on our cost function. These metrics are inspired by the principles of utilitarian social welfare and egalitarian social welfare [AMS24]. We begin by defining individual fairness, which is a strict worst-case fairness metric that aligns with the egalitarian social welfare framework by estimating the individual cost among all authors.\nLet \\(c : [n] \\times 2^{[m]} \\to [0,1]\\) be the cost function defined in Definition 5.1. We define function \\(\\mathcal{S}_{ind} : 2^{[m]} \\to [0,1]\\) to measure the individual fairness:\n\\[ \\mathcal{S}_{ind}(S) := \\underset{i \\in [n]}{\\text{max }} c(a_i, S). \\]\nNext, we present the concept of group fairness, which aligns with utilitarian social welfare and measures the total cost across all authors.\nLet \\(c : [n] \\times 2^{[m]} \\to [0,1]\\) be the cost function defined in Definition 5.1. We define function \\(\\mathcal{S}_{group} : 2^{[m]} \\to [0,1]\\) to measure the group fairness:\n\\[ \\mathcal{S}_{group}(S) := \\frac{1}{n} \\sum_{i \\in [n]} c(a_i, S). \\]\nTo show the relationship between these two fairness metrics, we have the following proposition:"}, {"title": "5.2 Hardness of Individual Fairness-Aware Submission Limit Problem", "content": "After presenting fairness metrics for the desk-rejection system, we introduce an optimization-based framework to address these metrics. We first study the individual fairness-aware submission limit problem to minimize the individual fairness measure \\(\\mathcal{S}_{ind}\\) in Definition 5.4.\nWe consider the following optimization problem:\n\\[ \\begin{aligned} & \\min_{S \\subseteq P} \\quad & \\mathcal{S}_{ind}(S) \\\\ & \\text { s.t. } \\quad |\\{p_j \\in S : a_i \\in A_j\\}| \\leq x, \\quad \\forall a_i \\in A. \\end{aligned} \\]\nTo represent the fairness metric minimization problem in matrix form, we introduce the following definition:\nLet \\(W \\in \\{0,1\\}^{n \\times m}\\) denote the author-paper matrix for the author set A and paper set P. Then, we define \\(W_{i,j} = 1\\) if author \\(a_i\\) is a coauthor of paper \\(p_j\\), and \\(W_{i,j} = 0\\) otherwise.\nTherefore, we present a more tractable integer programming form of the original problem and prove its equivalence to the original formulation:\nWe consider the following integer optimization problem:\n\\[ \\begin{aligned} & \\min_{r \\in \\{0,1\\}^m} \\quad & ||1_n - D^{-1}Wr||_{\\infty} \\\\ & \\text { s.t. } \\quad (Wr)/x \\leq 1_n \\end{aligned} \\]\nwhere \\(D = \\text{Diag}(|P_1|, \\cdots, |P_n|)\\), and the rejection vector \\(r \\in \\{0,1\\}^m\\) is a 0-1 vector, with \\(r_j = 1\\) indicating that paper \\(p_j\\) is remained, and \\(r_j = 0\\) indicating that it is desk-rejected.\nThe individual fairness-aware submission limit problem in Definition 5.7 and the matrix form integer programming problem in Definition 5.9 are equivalent.\nUnfortunately, solving this integer programming problem is highly non-trivial, which means it may not yield a feasible solution within a reasonable time for large-scale conference submission systems. We establish the computational hardness of this problem in the following theorem:\nThe Individual Fairness-Aware Submission Limit Problem defined in Definition 5.7 is NP-hard.\nSince minimizing individual fairness is computationally intractable, our fairness-aware desk-rejection system instead focuses on minimizing group fairness."}, {"title": "5.3 Group Fairness Optimization", "content": "Given the inherent hardness of individual fairness optimization, we address the fairness problem using an alternative yet equally important metric: group fairness, as defined in Definition 5.5. This metric is not only a crucial fairness measure in its own right but also serves as a lower bound for individual fairness as stated in Proposition 5.6, potentially improving individual fairness implicitly. Following a similar approach in Section 5.2, we first formulate the submission limit problem with respect to group fairness and derive a more tractable integer programming formulation in matrix form:\nWe consider the following optimization problem:\n\\[ \\begin{aligned} & \\min_{S \\subseteq P} \\quad & \\mathcal{S}_{group}(S) \\\\ & \\text { s.t. } \\quad |\\{p_j \\in S : a_i \\in A_j\\}| \\leq x, \\quad \\forall a_i \\in A. \\end{aligned} \\]\nWe consider the following integer programming problem:\n\\[ \\begin{aligned} & \\max_{r \\in \\{0,1\\}^m} \\quad & 1_n^T D^{-1}Wr \\\\ & \\text { s.t. } \\quad (Wr)/x \\leq 1_n, \\end{aligned} \\]\nwhere \\(D = \\text{Diag}(|P_1|, \\cdots, |P_n|)\\), and the rejection vector \\(r \\in \\{0,1\\}^m\\) is a 0-1 vector, with \\(r_j = 1\\) indicating that paper \\(p_j\\) is remained, and \\(r_j = 0\\) indicating that it is desk-rejected.\nThe fairness-aware submission limit problem in Definition 5.12 and the matrix form integer programming problem in Definition 5.13 are equivalent.\nHowever, solving integer programming problems is practically challenging. To this end, we first relax the feasible region of \\(r\\) to \\([0,1]^m\\), and then analyze the resulting relaxed problem.\nWe consider the optimization problem\n\\[ \\begin{aligned} & \\max_{r \\in [0,1]^m} \\quad & 1_n^T D^{-1}Wr \\\\ & \\text { s.t. } \\quad (Wr)/x \\leq 1_n, \\end{aligned} \\]\nwhere \\(D = \\text{Diag}(|P_1|, \\cdots, |P_n|)\\), and the rejection vector \\(r \\in \\{0,1\\}^m\\) is a 0-1 vector, with \\(r_j = 1\\) indicating that paper \\(p_j\\) is remained, and \\(r_j = 0\\) indicating that it is desk-rejected.\nFortunately, the relaxed problem is a linear program, which can be efficiently solved using standard linear programming solvers. Moreover, its optimal solution is equivalent to that of the original integer programming problem, an this result is formalized in the following theorem:\nThe optimal solution of the relaxed linear programming problem in Definition 5.15 is equivalent to the optimal solution of the original integer programming problem in Definition 5.13.\nThis theoretical result is significant as we formally establish that the group fairness-aware submission problem in Definition 5.12 reduces to a linear programming (LP) problem with guaranteed optimality, solvable using off-the-shelf LP solvers. We formalize this procedure in Algo-rithm 1, where LPSolver denotes any standard LP solver, including but not limited to the simplex method [BG69], interior-point path-finding methods [LS14], and state-of-the-art stochastic central path methods [CLS19, JSWZ21].\nThe time complexity of our fairness-aware desk-rejection algorithm in Algorithm 1 aligns with modern linear programming solvers. For instance, using the stochastic central path method [CLS21, JSWZ21, vdBLSS20, SY21], it achieves a time complexity of \\(O^*(m^{2.37} \\text{log}(m/\\delta))\\), where \\(\\delta\\) represents the relative accuracy corresponding to a \\((1 + \\delta)\\)-approximation guarantee."}, {"title": "6 Case Study", "content": "Since desk-rejection data from top AI conferences is not publicly available, and fully open-review conferences like ICLR do not impose submission limits, evaluating real-world conference submissions is impractical. Therefore, we present a case study to demonstrate how our proposed desk-rejection algorithm more effectively addresses fairness issues. Let the paper subscript \\(j\\) in \\(p_j \\in P\\) denote the submission order. We analyze the widely used desk-rejection system (e.g., CVPR 2025) in Algorithm 2, which rejects all papers submitted after an author's x-th submission. To highlight its limitations, we present a minimal working example:\nConsider a submission limit problem as defined in Definition 3.1 with \\(n = 2\\), \\(x = 25\\), and \\(m = 26\\). Author \\(a_1\\) submits all papers \\(p_1,...,p_{26}\\), while author \\(a_2\\) submits only \\(p_{26}\\)."}, {"title": "7 Conclusion", "content": "In this work, we identify the fairness issue in the desk-rejection mechanisms of AI conferences under submission limits. Our theoretical analysis proves that an ideal system that rejects papers solely based on authors' non-compliance, without unfairly penalizing others due to collective punishment, is impossible. We further consider an optimization-based fairness-aware desk-rejection system to alleviate the unfairness problem. In this system, we considered two fairness metrics: individual fairness and group fairness. We formally established that optimizing individual fairness in desk-rejection is NP-hard, while optimizing group fairness can be reduced to a linear programming problem that can be solved highly efficiently. Through case studies, we showed that the proposed method outperforms the existing desk-rejection system with submission limits in top conferences. For future works, we plan to collaborate with conference organizers to implement and validate our system in real-world settings, contributing to a more equitable AI community."}, {"title": "A.1 Basic Definitions", "content": "To systematically analyze the desk-rejection problem, we begin by classifying authors based on their submission behavior and their relationship to co-authors. This classification will help us organize and present the proofs in a more structured and readable manner.\nDefinition A.1 (Author Categories). For any author \\(a_i \\in A\\), we define the following categories:\n\u2022 Non-compliant: An author \\(a_i\\) is non-compliant if they have submitted more than \\(x\\) papers, i.e., \\(|P_i| > x\\). Such authors exceed the submission limit and are subject to desk-rejection under the policy.\n\u2022 Vulnerable: An author \\(a_i\\) is vulnerable if they have submitted no more than \\(x\\) papers (\\(|P_i| \\leq x\\)) but have at least one non-compliant co-author, i.e., \\(\\exists k \\in C_i\\) such that \\(|P_k| > x\\). Although these authors comply with the submission limit, they are at risk of being unfairly penalized due to their co-authors' non-compliance.\n\u2022 Safe: An author \\(a_i\\) is safe if they have submitted no more than \\(x\\) papers (\\(|P_i| \\leq x\\)) and all their co-authors are also compliant, i.e., \\(\\forall k \\in C_i, |P_k| \\leq x\\). These authors are guaranteed to retain all their submissions, as neither they nor their co-authors violate the submission limit.\nNext, we formalize the notion of achievability for the ideal desk-rejection system.\nDefinition A.2 (Achievability). Given a submission limit problem instance as defined in Definition 3.1:\n\u2022 Positive result: A problem instance is a positive result if there exists an algorithm that can achieve the ideal desk-rejection as defined in Definition 4.1.\n\u2022 Negative result: A problem instance is a negative result if, under proper conditions, no algorithm can achieve the ideal desk-rejection as defined in Definition 4.1.\nIn the following sections, we will use these definitions to systematically prove the positive results for small numbers of authors (\\(n < 2\\)) and the negative results for larger numbers of authors (\\(n \\geq 3\\)), which covers two cases in Theorem 4.3."}, {"title": "A.2 Positive Results", "content": "In this subsection", "hold": "n\u2022 Let \\(n = 1\\) denote the number of authors as defined in Definition 3.1.\n\u2022 Let \\(x \\in \\mathbb{N"}, "denote the maximum number of submissions allowed for each author in the conference.\nThen, there exists an algorithm that achieves the ideal desk-rejection as defined in Definition 4.1.\nProof. We consider the three cases for the only author \\(a_1\\): non-compliant, vulnerable, and safe, as defined in Definition A.1.\nCase 1: Non-compliant author. If author \\(a_1\\) is non-compliant, we desk-reject \\((|P_1|-x)\\) papers. This ensures that exactly \\(x\\) papers remain, satisfying the ideal desk-rejection condition.\nCase 2: Vulnerable author. Since \\(n = 1\\) and there is only one author, author \\(a_1\\) has no co-authors to make itself vulnerable. Therefore, this case cannot happen.\nCase 3: Safe author. If author \\(a_1\\) is safe, no papers need to be rejected. The ideal desk-rejection condition is trivially satisfied.\nIn all possible cases, we can achieve the ideal desk-rejection. Thus, the proof is finished.\nTo present the positive result for \\(n = 2\\) and any \\(x \\in \\mathbb{N}^+\\), we first discuss a specific case where all authors are non-compliant.\nLemma A.4 (Positive result for \\(n \\ge 2\\) and any \\(x \\in \\mathbb{N}^+\\), non-compliant author only case). If the following conditions hold:\n\u2022 Let \\(n = 1\\) denote the number of authors as defined in Definition 3.1.\n\u2022 All the authors are non-compliant authors as defined in Definition A.1.\n\u2022 Let \\(x \\in \\mathbb{N}^+\\) denote the maximum number of submissions allowed for each author in the conference.\nThen, there exists an algorithm that achieves the ideal desk-rejection as defined in Definition 4.1.\nProof. Let \\(c \\in \\mathbb{N}\\) denote the number of papers co-authored by both author \\(a_1\\) and author \\(a_2\\). For \\(i \\in \\{1, 2\\}\\), let \\(b_i \\in \\mathbb{N}\\) denote the number of single-authored papers by author \\(a_i\\).\nWe then have:\n\\[b_1 + c = |P_1|\\"], "1": "c \\le x\\). In this case", "2": "C > x\\). Here", "hold": "n\u2022 Let \\(n = 1\\) denote the number of authors as defined in Definition 3.1.\n\u2022 Let \\(x \\in \\mathbb{N"}