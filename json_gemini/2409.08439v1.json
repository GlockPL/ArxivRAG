{"title": "Input-to-State Stable Coupled Oscillator Networks for Closed-form Model-based Control in Latent Space", "authors": ["Maximilian St\u00f6lzle", "Cosimo Della Santina"], "abstract": "Even though a variety of methods (e.g., RL, MPC, LQR) have been proposed in the literature, efficient and effective latent-space control of physical systems remains an open challenge. A promising avenue would be to leverage powerful and well-understood closed-form strategies from control theory literature in combination with learned dynamics, such as potential-energy shaping. We identify three fundamental shortcomings in existing latent-space models that have so far prevented this powerful combination: (i) they lack the mathematical structure of a physical system, (ii) they do not inherently conserve the stability properties of the real systems. Furthermore, (iii) these methods do not have an invertible mapping between input and latent-space forcing. This work proposes a novel Coupled Oscillator Network (CON) model that simultaneously tackles all these issues. More specifically, (i) we show analytically that CON is a Lagrangian system - i.e., it presses well-defined potential and kinetic energy terms. Then, (ii) we provide formal proof of global Input-to-State stability using Lyapunov arguments. Moving to the experimental side, (iii) we demonstrate that CON reaches SoA performance when learning complex nonlinear dynamics of mechanical systems directly from images. An additional methodological innovation contributing to achieving this third goal is an approximated closed-form solution for efficient integration of network dynamics, which eases efficient training. We tackle (iv) by approximating the forcing-to-input mapping with a decoder that is trained to reconstruct the input based on the encoded latent space force. Finally, we leverage these four properties and show that they enable latent-space control. We use an integral-saturated PID with potential force compensation and demonstrate high-quality performance on a soft robot using raw pixels as the only feedback information.", "sections": [{"title": "1 Introduction", "content": "Learning how the environment evolves around us from high-dimensional observations (i.e., world models [1]) is essential for achieving both artificial and physical intelligence [2]. For example, such world models are required for effectively planning an artificial/robotic agent's actions in complex and unstructured environments [3]. However, learning such dynamics directly in high-dimensional observation space is usually intractable. Seminal works have shown that we can leverage autoencoders to compress the state information into a low-dimensional latent space [4, 5] in which it is much more feasible to learn the dynamics [6, 7, 8, 9, 10]. However, strong limitations still persist when it comes to using these learned models to generate low-level intelligence.\nOne outstanding challenge is how to perform closed-loop control in the learned latent space i.e., how to generate control inputs based on a high dimensional sensory input such that a desired movement is generated. Prior works have explored, among other approaches, Reinforcement Learning"}, {"title": "2 Input-to-State Stable (ISS) Coupled Oscillator Networks (CONs)", "content": "Formulation. The integral component to (coupled) oscillatory RNNs [35, 36, 37, 38] are one- dimensional, potentially damped, harmonic oscillators, which are described by their state $y_i = [x_i\\ \\dot{x}_i]^T\\in \\mathbb{R}^2$, where $x_i$ and $\\dot{x}_i$ are the position and velocity of the oscillator, respectively. Then, the oscillator's dynamics are defined by the following Equation of Motion (EOM)\n$m_i\\ddot{x}_i(t) + d_i\\dot{x}_i(t) + k_i x_i(t) = F_i(t)$, with $m_i, k_i, d_i \\in \\mathbb{R}^+$.\nHere, $m_i$ is the mass, $k_i$ is the stiffness, and $d_i$ is the damping coefficient of the damped harmonic oscillator. $F_i(t) \\in \\mathbb{R}$ is a (possibly time-dependent) external forcing term acting on the mass."}, {"title": "3 An approximate closed-form solution for the rollout of CON", "content": "To predict future system states, we need to integrate the ODE in Eq. (2), with the solution given by $y(t_{k+1}) = y(t_k) + \\int_{t_k}^{t_{k+1}} f(y(t'), u(t'))\\,dt'$. Unfortunately, a closed-form solution for the nonlinear dynamics $f(y, u)$ does not (yet) exist. Therefore, we traditionally need to revert to (high-order) numerical ODE solvers that are computationally very expensive and introduce additional memory overhead [45]. This considerably increases the training time of models involving such continuous-time dynamics. While the computational time can be reduced by increasing the (minimum) time step of the integrator, this comes at the expense of an integration error, and we lose (part of) the theoretical guarantees and practical characteristics that the nominal ODE provides. In this work, we take an alternative approach by splitting the problem into (i) decoupled linear dynamics that can be cheaply and precisely integrated using a closed-form solution and (ii) the residual, coupled nonlinear dynamics, which we integrate numerically at a slower time scale:\n$\\ddot{x}(t) = \\underbrace{F - \\kappa x(t) - d \\dot{x}(t)}_{f_{u,ld} (y): \\text{decoupled, linear dynamics}} + \\underbrace{g(u(t) - (K - \\kappa) x(t) - (D - d) \\dot{x}(t) - \\tanh(W x(t) + b)}_{f_{u,nld} (y,u): \\text{coupled, nonlinear dynamics}}$"}, {"title": "4 Learning control-oriented latent dynamics from pixels", "content": "We now move towards learning latent dynamical models based on CON and CFA-CON. CONs are an ideal fit for learning latent dynamics as they guarantee that the latent states stay bounded.\nWe assume to have access to observations in the form of images $o \\in \\mathbb{R}^{h_o\\times w_o}$. Please note that this could also be other high-dimensional observations such as LiDAR scans, point clouds, etc. We now leverage an encoder- decoder architecture to map these high-dimensional observations into a compressed latent space: The encoder $\\Phi : \\mathbb{R}^{h_o\\times w_o} \\rightarrow \\mathbb{R}^{n_z}$ with $n_z << h_o w_o$ identifies a low-dimensional latent representation $z \\in \\mathbb{R}^{n_z}$ of the images. The decoder $\\Psi : \\mathbb{R}^{n_z} \\rightarrow \\mathbb{R}^{h_o\\times w_o}$ approximates the inverse operation by reconstructing an image $\\hat{o} \\in \\mathbb{R}^{h_o \\times w_o}$ based on the latent representation. To promote the learning of a smooth and monotonic mapping into latent space, we specifically choose to implement the autoencoder here as a $\\beta$-Variational Autoencoder (VAE) [5, 47]. Instead of just statically reconstructing the image $\\hat{o}(t_k)$, we are interested in predicting future observations $\\hat{o}(t_{k+1})$, where $l \\in 1... N$. For this, we train a 2nd-order dynamical model that is, when integrated, able to predict future latent representations $z(t_{k+1})$. This requires us to define a latent state $\\xi(t) = [x^T(t)\\ \\dot{x}^T(t)]^T\\in \\mathbb{R}^{2n_z}$ consisting of the latent representation and latent velocity $\\dot{z}(t) \\in \\mathbb{R}^{n_z}$.\nWe now rely on CON with $n = n_z$ oscillators to provide us with the latent state derivative $\\dot{\\xi} = f_w(y_w(t), u(t))$, where we defined $\\xi = y_w$, and $z = x_w$. To ensure stability, we make use of the Cholvesky decomposition to ensure that $M_w, K_w$ and $D_w$ always remain positive definite (see Theorem 2). It is important to note that we train the encoder, decoder, and dynamical model all jointly."}, {"title": "5 Exploiting the dynamic structure for latent-space control", "content": "We consider the problem setting of guiding the system towards a desired observation $o_d$ by providing a sequence of inputs $u(t_k)$ such that at time $t_v$, the actual observation $o(t_v)$ matches $o_d$. A relatively simple way would be to encode the desired observation into latent space $z_d = \\Phi(o_d)$ and then to design a feedback controller (e.g., PID) in latent space: $g(u) = PID(z_d - z(t), -\\dot{z})$. Unfortunately, several challenges appear: first, it is not clear how the latent-space force $\\tau = g(u)$ can be mapped back to an actual input $u(t)$ as the inverse input-to-forcing mapping $g^{-1}$ is generally not known. Furthermore, relying entirely on a PID controller has several well-known drawbacks, such as poor and slow transient behavior, steady-state errors (in case the integral gain is chosen to be zero), and instability for high proportional and integral gains. We take inspiration from potential shaping strategies [23, 24], which are widely used for effectively controlling (elastic) robots, and, therefore, combine a feedforward term compensating the latent-space potential forces with an integral-saturated, PID-like feedback term. For mapping the desired forcing back to an input $u(t)$, we train an forcing decoder $\\eta : \\mathbb{R}^{n} \\leftrightarrow \\mathbb{R}^{m}$ that approximates $g^{-1}$. Specifically, we consider here the structure $u = \\eta(\\tau) = E(\\tau) \\tau$, where $E \\in \\mathbb{R}^{m \\times n}$ is parameterized by an MLP.\nThe latent-space control law is given by\n$\\tau(t) = g(u) = \\underbrace{K_w z_d + \\tanh(z_d + b)}_{\\text{Feedforward term:}} + \\underbrace{K_p (z_d - z) - K_d \\dot{z} + K_i \\int_{t_0}^{t} \\tanh(\\nu(z_d(t') - z(t')))\\,dt'}_{\\text{Feedback term: P-satI-D}}$\nwhere $K_p, K_i, K_d \\in \\mathbb{R}^{n \\times n}$ are the proportional, integral, and derivative control gains, respectively. As integral terms can often lead to instability when applied to nonlinear systems [52], we adopt an integral term saturation [53] with the associated dimensionless gain $\\nu \\in \\mathbb{R}$, which ensures that the integral error added at each time step is bounded to the interval (-1, 1). Subsequently, $\\tau$ is decoded to the input as $u(t) = \\eta(\\tau) = E(\\tau) \\tau$. For training this decoder, we add a reconstruction loss to (12): $\\mathcal{L}_u(t_k) = \\lambda_u MSE(u(t_k), \\hat{u}(t_k)) = \\lambda_u MSE( u(t_k), \\eta(g(u(t_k))))$."}, {"title": "6 Conclusion and Limitations", "content": "Conclusion. In this work, we propose a new formulation for a coupled oscillator that is inherently input-to- state stable. Additionally, we identify a closed-form approximation, that is able to simulate the network dynamics more accurately compared to numerical ODE integrators with similar computational costs. When learning latent dynamics with CON, we observe that the performance is on par or slightly better compared to SoA methods such as RNNS, NODEs, etc., even though we constrained the solution space to a ISS-stable coupled oscillator structure. Furthermore, we point out that the performance of the CON models is more consistent across latent dimensions compared to the baselines and improved when not specifically tuned for a given dimension. Furthermore, as seen in Tab. 8, the closed-form approximation achieves, with the same number of model parameters, similar accuracies and double the training speed w.r.t. to the continuous-time model. Finally, we demonstrate that even a simple PID-like latent-space controller can effectively regulate the system to a setpoint. By exploiting the network structure and compensating for potential forces, regulation performance can be greatly improved, and response time decreased by more than 55%.\nLimitations. While we think our proposed method shows great potential and opens interesting avenues for future research, there are currently certain limitations. For example, the proposed method of learning (latent) dynamics implicitly assumes that the underlying system adheres to the Markov property (e.g., the full state"}, {"title": "F Extended discussion on future applications and limitations", "content": "F.1 Systems for which we would expect the proposed method to work\nMechanical systems with continuous dynamics, dissipation, and a single, attractive equilibrium point. The proposed method is a very good fit for mechanical systems with continuous dynamics, dissipation, and a single, attractive equilibrium point. In this case, the real system and the latent dynamics share the energetic structure and stability guarantees. Examples of such systems include many soft robots, deformable objects with dominant elastic behavior, and other mechanical structures with elasticity.\nLocal modeling of (mechanical) systems that do not meet the global assumptions. Even if the global assumptions of the proposed method are not met, the method can still be applied to model the local behavior around a local asymptotic equilibrium point of the system (i.e., in the case of multi-stability). For example, the method could be used to model the behavior of a robotic leg locally in contact with the ground, a cobot's interaction with its environment, etc.\nF.2 Systems for which we could envision the proposed method to work under (minor) modifications\nMechanical systems without dissipation. The proposed method would currently not work well for mechanical systems without any dissipation, as (a) the original system will likely not have a globally asymp- totically stable equilibrium point, and more importantly, (b) we currently force the damping learned in latent space to be positive definite. However, these systems are not common in practice as friction and other dissi- pation mechanisms are omnipresent, and the proposed method can learn very small damping values (e.g., the mass-spring+friction system). A possible remedy could be to relax the positive definiteness of the damping matrix in the latent space, allowing for zero damping. This would allow the method to work for systems without dissipation, such as conservative systems. Examples of such systems include a mass-spring system without damping, the n-body problem, etc.\nSystems with discontinuous dynamics. The proposed method might underperform for systems with highly discontinuous dynamics, such as systems with impacts, friction, or other discontinuities. In these cases, the latent dynamics might not capture the real system's behavior accurately, and the control performance of feedforward + feedback will very likely be worse than pure feedback. Again, the method should be able to capture local behavior well. A possible remedy for learning global dynamics could be to augment the latent dynamics with additional terms that capture the discontinuities, such as contact and friction models (e.g., stick-slip friction).\nSystems with multiple equilibrium points. The original system having multiple equilibria conflicts with the stability assumptions underlying the proposed CON latent dynamics. In this case, as, for example, seen on the pendulum+friction and double pendulum + friction results, the method might work locally but will not be able to capture the global behavior of the system. A possible remedy could be to relax the global stability assumptions of the CON network. For example, the latent dynamics could be learned in the original coordinates of CON while allowing W also to be negative definite. This would allow the system to have multiple equilibria & attractors. Examples of such systems include a robotic arm under gravity, pendula under gravity, etc.\nSystems with periodic behavior. The proposed method will likely not work well for systems with periodic behavior, as they do not have a single, attractive equilibrium point. Examples of such systems include a mass- spring system with a periodic external force, a pendulum with a periodic external force, some chemical reactions, etc. Again, it is likely possible to apply the presented method to learning a local behavior (i.e., not completing the full orbit). A possible remedy could be to augment the latent dynamics with additional terms that capture the periodic behavior, such as substituting the harmonic oscillators with Van der Pol oscillators to establish a limit cycle or a supercritical Hopf bifurcation.\nF.3 Systems for which we would not expect the proposed method to work\nNonholonomic systems. The proposed method likely would not work well for nonholonomic systems, as both structure (e.g., physical constraints) and stability characteristics would not be shared between the real system and the latent dynamics. Examples of such systems include vehicles, a ball rolling on a surface, and many mobile robots.\nPartially observable and non-markovian systems. As the CON dynamics are evaluated based on the latent position and velocity encoded by the observation of the current time step and the observation-space velocity, we implicitly assume that the system is (a) fully observable and (b) fulfills the Markov property. This"}]}