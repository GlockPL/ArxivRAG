{"title": "Synergizing LLM Agents and Knowledge Graph for Socioeconomic Prediction in LBSN", "authors": ["Zhilun Zhou", "Jingyang Fan", "Yu Liu", "Fengli Xu", "Depeng Jin", "Yong Li"], "abstract": "The fast development of location-based social networks (LBSNs) has led to significant changes in society, resulting in popular studies of using LBSN data for socioeconomic prediction, e.g., regional population and commercial activity estimation. Existing studies design various graphs to model heterogeneous LBSN data, and further apply graph representation learning methods for socioeconomic prediction. However, these approaches heavily rely on heuristic ideas and expertise to extract task-relevant knowledge from diverse data, which may not be optimal for specific tasks. Additionally, they tend to overlook the inherent relationships between different indicators, limiting the prediction accuracy. Motivated by the remarkable abilities of large language models (LLMs) in commonsense reasoning, embedding, and multi-agent collaboration, in this work, we synergize LLM agents and knowledge graph for socioeconomic prediction. We first construct a location-based knowledge graph (LBKG) to integrate multi-sourced LBSN data. Then we leverage the reasoning power of LLM agent to identify relevant meta-paths in the LBKG for each type of socioeconomic prediction task, and design a semantic-guided attention module for knowledge fusion with meta-paths. Moreover, we introduce a cross-task communication mechanism to further enhance performance by enabling knowledge sharing across tasks at both LLM agent and KG levels. On the one hand, the LLM agents for different tasks collaborate to generate more diverse and comprehensive meta-paths. On the other hand, the embeddings from different tasks are adaptively merged for better socioeconomic prediction. Experiments on two datasets demonstrate the effectiveness of the synergistic design between LLM and KG, providing insights for information sharing across socioeconomic prediction tasks.", "sections": [{"title": "1 Introduction", "content": "The development of location-based social networks (LBSNs) has significantly advanced socioeconomic prediction with rich web-sourced LBSN data such as user-generated content on review platforms. Socioeconomic indicators like regional population, user activity, and rating, provide a more comprehensive description of LBSN in turn, which can be leveraged by various web applications to offer enhanced services such as location recommendation, web page description, and personal assistants. As a result, socioeconomic prediction in the context of LBSN has become increasingly important, leading to a growing body of research in this field [3, 7, 9, 17, 23, 24, 30, 32-35, 37]\nTraditionally people collect socioeconomic indicators from surveys, which are costly and time-consuming. Recently, data-driven methods have become popular, which use machine learning models to predict the socioeconomic indicators based on various LBSN data. The LBSN data comes from various sources and is heterogeneous. Existing studies have widely used graph structure to model the complex relationships within LBSN data, and predict the socioeconomic indicators through graph representation learning methods. They construct either multi-view graphs [9, 30, 35] or knowledge graphs (KGs) [16, 37] to model different factors in LBSN data like mobility, spatial proximity, and functionality. However, These approaches highly rely on heuristic ideas and expertise to extract knowledge related to the tasks from LBSN data, such as the construction of sub-graphs or definition of meta-structures, which may be sub-optimal for different indicator prediction tasks. Moreover, the intrinsic correlations and potential for knowledge sharing across different socioeconomic prediction tasks are often overlooked, limiting the overall prediction accuracy.\nThe recently emerged large language models (LLMs) provide a promising solution to these limitations. LLMs have demonstrated several remarkable abilities which could help socioeconomic prediction [28]: (1) Latent semantic embedding. At the foundational level, LLMs are able to generate text embeddings with rich semantic information, which makes it possible to integrate LLM with deep learning models to improve the performance by leveraging the inherent semantic information in the LBSN data. (2) Explicit commonsense reasoning. Moreover, LLMs possess vast commonsense knowledge, based on which they can perform complex reasoning [36]. This capability facilitates the automatic extraction of task-relevant knowledge from LBSN data. (3) Multi-agent collaboration. At the highest level, LLM agents can communicate with other agents through natural language, and collaborate to solve complex tasks which is difficult for a single agent [6, 11, 31]. Such ability enables LLM to transfer knowledge across different socioeconomic prediction tasks via semantic-rich natural language, and collaboratively improve the performance.\nThe recently emerged large language models (LLMs) provide a promising solution to these limitations. LLMs have demonstrated many remarkable abilities which could help socioeconomic prediction [28]: (1) Commonsense reasoning. LLMs possess vast commonsense knowledge, based on which they can perform complex reasoning [36], thus enabling automatic task-relevant knowledge discovery from LBSN data. (2) Multi-agent collaboration. LLM agents can communicate with other agents through natural language, and collaborate to solve complex tasks which is difficult for a single agent [6, 11, 31]. Such ability enables LLM to transfer knowledge across different socioeconomic prediction tasks, and collaboratively improve the performance. (3) Semantic embedding. LLMs are able to generate text embeddings with rich semantic information, which makes it possible to integrate LLM with deep learning models and enhance the performance with semantic information in the LBSN data.\nInspired by this, we propose a learning framework that Synergize LLM Agent and Knowledge Graph learning model (SLAK) for socioeconomic prediction. We first construct a location-based knowledge graph (LBKG) to comprehensively integrate LBSN data. To extract task-relevant knowledge, we construct an LLM agent to automatically discover meta-paths in the LBKG that help the prediction for specific indicators, and extract a corresponding meta-path-based sub-KG. Moreover, we leverage KG representation learning model to distil knowledge from each meta-path-based sub-KG, and design a semantic-enhanced knowledge fusion module to adaptively fuse the knowledge based on semantic embeddings of meta-paths obtained from LLM. In addition, we propose a cross-task communication mechanism to enable knowledge sharing across different socioeconomic prediction tasks at both the LLM agent and KG level. Specifically, the LLM agents collaborate to extract better meta-paths, and we also adaptively merge the KG embeddings from different tasks with the knowledge fusion module.\nOur contribution can be summarized as follows:\n\u2022 We propose a framework to synergize LLM agents and KG for socioeconomic prediction. We leverage the reasoning capability of LLM agent to find task-relevant meta-paths from LBKG, and further use the semantic information of the meta-paths to guide the knowledge fusion.\n\u2022 We design a cross-task communication mechanism to enable knowledge sharing across different socioeconomic prediction tasks at both the LLM agent level through multi-agent collaboration and the KG level through semantic attention, which further improves the accuracy.\n\u2022 Extensive experiments on two city-scale datasets show that our model surpasses existing methods by 2.9-74.2% in terms of $R^2$ on eight indicator prediction tasks, demonstrating the effectiveness of our synergistic model between LLM and KG. Several in-depth analyses further show the advantage of our model design, providing insights for web-based socioeconomic prediction in LBSN."}, {"title": "2 Preliminaries", "content": "2.1 Problem Statement\nDefinition 2.1 (Urban Region). We define urban regions as non-overlapping irregular areas in a city, which are partitioned by main road networks, such as a block, denoted as $\\mathcal{L} = \\{L_1, L_2, ..., L_{N_\\mathcal{L}} \\}$.\nDefinition 2.2 (Socioeconomic Prediction Problem). Given a set of socioeconomic indicators $\\mathcal{I} = \\{I_1, ..., I_{N_\\mathcal{I}} \\}$ in LBSN such as population, commercial activity, user activity and rating, the socioeconomic prediction task aims to predict the value of these indicators for urban regions based on various LBSN data, i.e., learn a mapping function $f: \\mathcal{L} \\rightarrow V_{\\mathcal{I}}$, where $V_{\\mathcal{I}}$ is the range of indicator $I \\in \\mathcal{I}$."}, {"title": "2.2 Location-based Knowledge Graph", "content": "KG is a multi-relational graph structure, defined as $\\mathcal{G} = \\{\\mathcal{E}, \\mathcal{R}, \\mathcal{F}\\}$, where $\\mathcal{E}$ is the entity set, $\\mathcal{R}$ is the relation set, and $\\mathcal{F}$ is the fact set. Each fact in $\\mathcal{F}$ is denoted as a triplet $(h, r, t)$, representing a directional edge from the head entity $h \\in \\mathcal{E}$ to tail entity $t \\in \\mathcal{E}$ with relation type $r \\in \\mathcal{R}$. Due to its remarkable ability to represent heterogeneous data and integrate diverse knowledge, KG has been widely used in the study of LBSN [13, 15, 25, 37]. Inspired by this, we construct an LBKG to integrate multi-sourced LBSN data [14, 37].\nThe LBKG contains various elements in LBSN such as regions, POIs, POI categories, brands, business areas, and various relations between them. The details of LBKG are presented in Appendix A.\nPrevious studies have shown the promising ability of LBKG in socioeconomic prediction [37]. However, there are still two challenges to be addressed. First, the LBKG consists of many different entities and relations, containing knowledge in various domains, some of which may not be related to the specific socioeconomic indicator or may even harm the prediction performance, which implies the difficulty of extracting relevant knowledge manually. Second, different socioeconomic indicators are inherently correlated, with many influenced by similar knowledge in the LBKG. For example, the presence of business areas near a region may simultaneously enhance its commercial vitality and attract population growth. It remains unclear how to leverage the shared knowledge among different indicators to improve the prediction performance."}, {"title": "3 Methods", "content": "3.1 Framework Overview\nTo address the aforementioned challenges, we propose a framework synergizing the capability of LLM agent and KG, as shown in Figure 1. To overcome the first challenge, we construct an LLM agent to extract task-relevant knowledge by prompting it to find meta-paths related to the socioeconomic prediction task from the LBKG, and extract a corresponding sub-KG based on each meta-path. The meta-path-based sub-KGs are fed into a KG learning model to distil"}, {"title": "3.2 Single-task Learning", "content": "3.2.1 Meta-path Extraction. The LBKG integrates various LBSN data comprehensively and incorporates knowledge from various domains, such as the spatial knowledge of geographical relationships between regions, the functional knowledge regarding POIs and POI categories, and mobility knowledge about population flow [37]. It is crucial to identify relevant information that can aid in predicting specific socioeconomic indicators. Inspired by the ability of meta-paths in KG to capture certain semantic contexts, we aim to find the most relevant meta-paths that contribute to the prediction tasks. We first provide the definition of meta-path as follows [21].\nDefinition 3.1 (Meta-path). A meta-path in KG can be represented in the form of $E_1 \\xrightarrow{R_1} E_2 \\xrightarrow{R_2} ... \\xrightarrow{R_{l-1}} E_l \\xrightarrow{R_l} E_1$, denoting a path from entity $E_1, E_2,...$ to $E_1$ through relations $R_1,..., R_{l-1}$.\nMeta-paths provide rich semantic contexts in the LBKG. For example, the meta-path Region $\\xrightarrow{Has}POI \\xrightarrow{Competitive} POI \\xrightarrow{LocateAt} Region captures the competitive relationships between POIs in two regions, which may affect the commercial activity of these regions."}, {"title": "3.2.2 KG Learning Model", "content": "Following previous work [37], we employ a hierarchical KG learning model to learn region embeddings from LBKG based on the extracted meta-paths. First, we use a KG encoder to extract global knowledge from the LBKG. Here we adopt a graph convolution model called R-GCN [20] as the KG encoder. Different from vanilla GCN, R-GCN aggregates information from neighboring nodes through each type of relation separately, which can better capture the structural information in KG. Specifically, let $e_i^{(l)}$ denote the embedding of entity $e_i$ at the $l$-th R-GCN layer, the information aggregation function is:\n$e_i^{(l+1)} = \\sigma(\\sum_{r \\in \\mathcal{R}}\\sum_{e_j \\in \\mathcal{N}_i^r} W_r^{(l)}e_j^{(l)} + W_0^{(l)} e_i^{(l)}),$ (1)\nwhere $e_i^{(l+1)}$ is the embedding at the $(l + 1)$-th layer, $\\mathcal{N}_i^r$ is the neighboring entities of $e_i$ with respect to relation $r$, and $W_r^{(l)}, W_0^{(l)}$ are learnable weight matrices.\nThen we distil domain knowledge from the meta-paths. Given a meta-path scheme generated by LLM agent, we first extract all meta-paths with such scheme from the LBKG to construct a sub-KG, as shown in Figure 1. The sub-KG preserves all the contextual knowledge defined by the meta-path scheme in LBKG. In practice,"}, {"title": "3.2.3 Semantic-guided Knowledge Fusion", "content": "Different meta-paths have different importance in socioeconomic indicator prediction tasks. Therefore, we propose a semantic-guided knowledge fusion module to dynamically fuse the knowledge of different meta-paths. We first obtain the natural language encoding of meta-paths using methods in [2], which provides a description of the meta-path easy for LLM to understand. Specifically, we use the conjunction word THAT to construct a nested clause for each meta-path, as shown in Figure 1. The constructed sentences align with commonly-used English grammar, and thus are suitable for language models. Moreover, we use an embedding LLM to generate semantic embeddings for these sentences. We choose the GTE-based model [12], which is one of the top models on the text embedding leaderboard MTEB [18], to obtain a $d_{LLM} = 768$ dimensional semantic embedding for each meta-path.\nLet $P_1,..., P_{N_p}$ denote the meta-paths, and $E_{MP} \\in \\mathbb{R}^{N_p \\times d_{LLM}}$ are the semantic embeddings of meta-paths. We first project the embeddings to get the query vector $Q = E_{MP}W_Q \\in \\mathbb{R}^{N_p \\times d_h}$, where $d_h$ is output embedding size of the sub-KG encoder. Then we calculate the attention weights as:\n$a_i = softmax(\\frac{Q e_i^T}{\\sqrt{d_h}}), i \\in \\{1, 2, ..., N_p\\},$ (2)\nwhere $e_i \\in \\mathbb{R}^{d_h}$ is the embedding of region $L_j$ at the meta-path-based sub-KG of $P_i$. Then, the output embedding of region $L_j$ is calculated as:\n$e_j = \\sum_{i=1}^{N_p} a_i e_i.$ (3)\nFinally, the above embeddings are added to the output of the KG encoder through a residual connection, and fed into an MLP layer for indicator prediction. We train our model in a supervised manner and employ MSE loss to optimize it."}, {"title": "3.3 Cross-task Communication", "content": "Since different socioeconomic indicators are inherently correlated, we further design a cross-task communication mechanism to enable knowledge sharing across different tasks regarding both the meta-paths finding and the embedding learning, as shown in Figure 2. We first leverage the multi-agent collaboration ability of LLMs to optimize the meta-paths extracted from LBKG for each task. Then we dynamically fuse the embeddings from different tasks for indicator prediction.\nPrevious studies regarding multi-agent collaboration have shown that when assigned different roles, multiple LLM agents can think from different perspectives and communicate with each other to provide a more comprehensive and accurate answer to questions [1, 10]. Inspired by this, we provide the agents with the previously found meta-paths of all tasks, and ask them to recommend a new meta-path to each of the other agents from their own task's perspective."}, {"title": "4 Experiments", "content": "4.1 Datasets\nWe conduct experiments on two real-world datasets, Beijing and Shanghai, to evaluate our model.\nBeijing dataset. It contains 523 regions in Beijing within the Fifth Ring Road, which are partitioned by main road networks. We collect the population data from WorldPop\u00b2. The commercial activity indicators are reflected by the number of firms [4]. We also collected restaurant data from Dianping, one of the most popular review platforms in China. We use the total number of reviews of all restaurants to reflect the user activity of a region. The rating indicator is calculated as the average user rating of all restaurants in a region.\nShanghai dataset. It contains 2032 regions in Shanghai, which are also divided by main road networks. The indicators in Shanghai and their data sources are the same as Beijing dataset. The basic statistics of these datasets are shown in Table 1."}, {"title": "4.2 Experiment Settings", "content": "4.2.1 Baselines. We compare our model with state-of-the-art graph embedding methods as well as socioeconomic prediction methods. Graph embedding methods.\n\u2022 GAT [22]: It is a graph convolution network that aggregates information from neighboring nodes with learnable weights."}, {"title": "4.3 Overall Performance", "content": "We present the overall performance of our model and baselines in Table 2 and 3, from which we have the following observations.\nFirst, our model outperforms baseline methods on all eight indicator prediction tasks across two datasets, with improvements in terms of $R^2$ ranging from 2.9% to 159.8%, demonstrating the effectiveness and robustness of our model. Specifically, our SLAK-single model is better than baselines on six of the eight indicators, indicating that leveraging LLM agents to extract relevant meta-paths on a single task is promising but not robust enough. Moreover, the cross-task communication mechanism further improves our performance by 1.9% to 23.8% in terms of $R^2$, achieving the best results.\nSecond, HKGL generally achieves the best performance among baselines because it uses LBKG to effectively integrate LBSN data, and defines several sub-KGs to capture diverse knowledge in LBKG. However, it still performs worse than our model, which suggests that manually extracting relevant knowledge from LBSN data may lead to sub-optimal results. On the contrary, we leverage the reasoning and multi-agent collaboration ability of LLM agents to automatically find and optimize meta-paths, thus showing considerable performance gain.\nThird, it is natural to question whether other methods can also benefit from transferring knowledge across tasks. Therefore, we compare with a variant of the best baseline model by concatenating region embeddings learned from other indicators (HKGL vs. HKGL-trans). We notice that the performance becomes worse on all indicators with embedding transfer. This is because embeddings from different tasks are trained with supervised signals from other indicators, which may not be suitable for the current task. This suggests that it is non-trivial to transfer knowledge across different tasks through embedding. However, our model shows better performance with cross-task communication mechanism, which further demonstrates the effectiveness of semantic-guided knowledge fusion as well as knowledge sharing through multi-agent collaboration."}, {"title": "4.4 Ablation Study", "content": "To demonstrate the effectiveness of our model design, we further conduct ablation studies. We first examine the influence of multi-agent collaboration by removing the meta-path self-update or meta-path recommendation. For example, removing self-update means that we only use the meta-paths recommended by other agents for each task, while removing recommendation indicates that we only use the self-update meta-paths. As shown in Figure 4(a-b), the performance becomes worse on all indicators across two datasets, with a significant drop over 5.5% in terms of $R^2$. Such a result demonstrates the importance of multi-agent collaboration in knowledge sharing across tasks, where different agents find meta-paths from diverse perspectives, enabling better and more comprehensive knowledge extraction.\nMoreover, we evaluate our key designs in the KG learning model, i.e., the embedding transfer across tasks as well as the semantic-guided knowledge fusion. For the former, we omit the embedding fusion module in Figure 2(b) and only use embeddings from the current task for prediction. For the latter, we use a traditional self-attention module to replace our semantic-guided knowledge fusion"}, {"title": "4.5 Efficiency of Meta-path Optimization", "content": "Here we demonstrate the advantage of our meta-paths extraction method over traditional meta-path searching algorithms. We compare our model with two meta-path searching algorithms, random search and genetic algorithms.\nIn the genetic algorithm, we define a meta-path as a gene, and the chromosome of an individual as a set of 6 meta-paths, which has the same number as our model (3 self-update and 3 recommended meta-paths) for fair comparison. The fitness is calculated as the prediction $R^2$ when using these meta-paths to train our model. We generate 5 individuals in each generation, and calculate the fitness of each. Then we select the best two individuals as parents to perform crossover and mutation to produce the next generation. Specifically, in the crossover operation, one random meta-path is exchanged from the parents. Besides, each meta-path has a probability of 10% to mutate, i.e., be replaced by a new randomly generated meta-path. As for the random search algorithm, we also set the number of"}, {"title": "4.6 Case Study of Discovered Meta-paths", "content": "We present the meta-paths found by our model, random search, and genetic algorithms in Table 5. It can be observed that compared with SLAK-single, the meta-paths discovered in the second round through multi-agent collaboration are generally longer and more diverse. This is probably because these meta-paths are generated by LLM agents based on the previously found ones, which enables agents to consider more complex meta-paths. Moreover, we find that the meta-paths recommended by other agents are chosen from their own task's perspective. For example, in Beijing dataset, the meta-path recommended by population prediction task Region $\\xrightarrow{PopulationFlowTo}$ Region $\\xrightarrow{Has}$ POI $\\xrightarrow{HasCategoryOf}$ Category1 $\\xrightarrow{ExistIn}$ Region reflect the population flow influence, the one from commercial prediction task Region $\\xrightarrow{ServedBy}$ BusinessArea $\\xrightarrow{Contain}$ POI $\\xrightarrow{HasBrandOf}$ Brand $\\xrightarrow{LocateAt}$ Region consider the commercial factors between entities like BusinessArea, POI, and Brand. The meta-paths from rating prediction task Region $\\xrightarrow{Has}$ POI $\\xrightarrow{Competitive}$ POI $\\xrightarrow{LocateAt}$ Region captures the competitive relationships between POIs in regions, which may impact the rating as well as user activity. Therefore, the meta-paths found through multi-agent collaboration capture diverse knowledge more comprehensively. In comparison, the meta-paths generated by searching algorithms are less meaningful and diverse."}, {"title": "5 Related Work", "content": "5.1 Graph Learning for Socioeconomic\nPrediction\nDue to the remarkable ability to model non-Euclidean and heterogeneous data, the graph structure and graph learning model have long been utilized for socioeconomic prediction in LBSN. Some studies leverage the mobility data and construct mobility graphs to model the population flow patterns between locations [7, 30, 32]. Moreover, some studies further consider knowledge in LBSN from different perspectives through multiple graphs. For instance, HDGE [24] constructs a mobility flow graph and spatial graph, and some studies [17, 35] propose models to dynamically fuse mobility, POI, and spatial graphs for indicator prediction.\nRecently, some studies introduce heterogeneous graph or KG to integrate heterogeneous LBSN data in a single graph. HUGAT [9] designs several meta-paths to capture different relationships in LBSN from a heterogeneous graph, and aggregate information from meta-path-based neighbors of locations. Zhou et al. propose a hierarchical KG learning model to learn the global knowledge"}, {"title": "5.2 Synergy of LLM and KG", "content": "LLMs excel in understanding and generating human language but often suffer from hallucination and a lack of factual accuracy. In contrast, KGs store structured, factual knowledge, which is explicit and interpretable. Therefore, in recent years, researchers have increasingly explored the synergy between LLM and KG to leverage their complementary strengths [19]. Some studies combine LLM with KG for better knowledge representations by fusing the neural networks of language models with KG [26, 38]. Moreover, some studies construct LLM agents that interact with KG for better reasoning. For example, KSL [5] lets LLM search on KG to retrieve facts relevant to the questions, StructGPT [8] enables LLM to perform reasoning by traversing on KGs, and Wang et al. [27] traverses a knowledge graph across multiple documents to enhance multi-document question answering."}, {"title": "6 Conclusion", "content": "In this work, we propose a framework that synergizes the ability of LLM agent and KG learning model for better socioeconomic prediction in LBSN. Specifically, we leverage LLM agent to automatically find task-relevant meta-paths, and propose a semantic-guided knowledge fusion model to adaptively fuse diverse knowledge based on semantic information of the meta-paths. Moreover, we enable cross-task knowledge transfer by LLM agent-level collaboration and embedding-level knowledge fusion. Such synergistic model design shows better performance compared with socioeconomic prediction baselines as well as meta-path searching algorithms.\nIn the future, we plan to consider the dynamic update of LBKG and socioeconomic indicators as the LBSN changes over time, and leverage LLM to further capture the temporal patterns of such dynamics. Another promising direction is to explore the integration of LLM and KG throughout the lifecycle from LBKG construction and representation to downstream applications."}]}