[{"title": "INTRODUCTION", "authors": ["Ermis Soumalias", "Jakob Heiss", "Jakob Weissteiner", "Sven Seuken"], "abstract": "We study the design of iterative combinatorial auctions (ICAs). The main challenge in this domain is that the bundle space grows exponentially in the number of items. To address this, several papers have recently proposed machine learning (ML)-based preference elicitation algorithms that aim to elicit only the most important information from bidders to maximize efficiency. The SOTA ML-based algorithms elicit bidders' preferences via value queries (i.e., \u201cWhat is your value for the bundle {A, B}?", "At prices p, what is your most preferred bundle of items?\"). In this paper, we examine the advantages of value and demand queries from both an auction design and an ML perspective. We propose a novel ML algorithm that provably integrates the full information from both query types. As suggested by our theoretical analysis, our experimental results verify that combining demand and value queries results in significantly better learning performance. Building on these insights, we present MLHCA, the most efficient ICA ever designed. MLHCA substantially outperforms the previous SOTA in realistic auction settings, delivering large efficiency gains. Compared to the previous SOTA, MLHCA reduces efficiency loss by up to a factor of 10, and in the most challenging and realistic domain, MLHCA outperforms the previous SOTA using 30% fewer queries. Thus, MLHCA achieves efficiency improvements that translate to welfare gains of hundreds of millions of USD, while also reducing the cognitive load on the bidders, establishing a new benchmark both for practicability and for economic impact.": "sections", "content": "Combinatorial auctions (CAs) are used to allocate multiple items among several bidders who may view those items as complements or substitutes. In a CA, bidders are can submit bids for whole bundles/packages of items. CAs have enjoyed widespread adoption in practice, with their applications ranging from allocating spectrum licences (Cramton, 2013) to TV ad slots (Goetzendorff et al., 2015) and airport landing/take-off slots (Rassenti et al., 1982).\nThe key challenge in CAs is that the bundle space grows exponentially in the number of items, making it impossible for bidders to report their full value function in all but the smallest domains. Moreover, Nisan & Segal (2006) showed that for arbitrary value functions, CAs require an exponential number of bids in order to guarantee full efficiency. Thus, practical CA mechanisms cannot provide efficiency guarantees in real world settings with more than a modest number of items. Instead, the focus has shifted towards iterative combinatorial auctions (ICAs), where bidders interact with the auctioneer over a series of rounds, providing only a limited (i.e., practically feasible) amount of information, with the aim to maximize the efficiency of the final allocation."}, {"title": "1.1 ML-POWERED ITERATIVE COMBINATORIAL AUCTIONS", "content": "To address this challenge, researchers have proposed various ways of using machine learning (ML) to improve the efficiency of ICAs. The seminal works by Blum et al. (2004) and Lahaie & Parkes (2004) were the first to frame preference elicitation in CAs as a learning problem. In more recent years, Brero et al. (2018; 2021), Weissteiner & Seuken (2020); Weissteiner et al. (2022b;a; 2023) proposed ML-powered ICAs. At the heart of those approaches lies an ML-powered preference elicitation algorithm that uses an ML model to learn each bidder's value function to generate an informative value query (i.e., \u201cWhat is your value for the bundle {A, B}?\u201d), which in turn refines that bidder's ML model.\nWhile those value-query based ML-powered ICAs lead to significant efficiency gains redefining the state-of-the-art (SOTA) efficiency results in many realistic auction domains, those approaches suffer from one common practical limitation: they fundamentally rely throughout the whole ICA on value queries (VQs). Prior research in auction design has identified demand queries (DQs) as the best way to run an auction (Cramton, 2013). Their advantages compared to value queries include elimination of tacit collusion and bid signaling, as well as simplified bidder decision-making that keeps the bidders focused on what is most relevant: the relationship between prices and aggregate demand. Additionally, value queries are cognitively complex, and thus typically should be only used sparsely in real-world ICAs. For these reasons, DQs are the most prominent interaction paradigm for auctions in practice. Following this rationale, Soumalias et al. (2024b) addressed the common limitation of prior work by designing the first practical ML-powered ICA that elicits information from bidders via DQs instead of VQs and only makes use of VQs in supplementary rounds, when bidders have already obtained a clearer picture on which bundles they can realistically hope to clinch and how much they should approximately value such bundles.\nWhile this DQ-based ICA represented a significant leap towards making ML-powered ICAs practical and at the same time outperformed the baseline CCA that is typically used in real-world applications, it still suffered from the following two important deficiencies: First, it could not reach the SOTA efficiency of the impractical VQ-based ML-powered ICAs. Second, to improve efficiency, just like the CCA, it required the use of a supplementary round, in which the bidders must decide on which additional value bids to submit to the mechanism, a cognitive complicated task for the bidders.\nThe present paper closes these two last gaps in the realm of ICAs by designing a hybrid ML-powered ICA that combines DQ-based rounds with a sophisticated yet practical VQ-based supplementary round. Importantly, this hybrid ML-powered ICA clearly outperforms the previous SOTA ICA while still being practical in real-world applications."}, {"title": "1.2 OUR CONTRIBUTIONS", "content": "In this paper, we introduce the Machine Learning-powered Hybrid Combinatorial Auction (ML-HCA), a practical ICA that achieves unprecedented efficiency. Our contributions are as follows:"}, {"title": "1.3 FURTHER RELATED WORK", "content": "In the field of automated mechanism design, D\u00fctting et al. (2015; 2019), Golowich et al. (2018) and Narasimhan et al. (2016) used ML to learn new mechanisms from data, while Cole & Roughgarden (2014); Morgenstern & Roughgarden (2015) and Balcan et al. (2023) bounded the sample complexity of learning approximately optimal mechanisms. In contrast to this prior work, our design incorporates an ML algorithm into the mechanism itself, i.e., the ML algorithm is part of the mechanism. Lahaie & Lubin (2019) suggest an adaptive price update rule that increases price expressivity as the rounds progress in order to improve efficiency and speed of convergence. Unlike that work, we aim to improve preference elicitation in the main rounds while still using linear prices. Preference elicitation is a key market design challenge outside of CAs too. Soumalias et al. (2024a) introduce an ML-powered mechanism for course allocation that improves preference elicitation by asking students comparison queries.\nDespite the prominence of DQs in real-world applications, the only prior work apart from Soumalias et al. (2024b) on ML-based DQs that we are aware of is that of Brero & Lahaie (2018) and Brero et al. (2019), who proposed integrating ML in a price-based ICA to generate the next price vector in order to achieve faster convergence. However, this prior work does not exploit any notion of similarity between bundles that contain overlapping items, only incorporates a fraction of the information revealed by the agents' bidding (i.e., for the bundle an agent bids on, her value for that bundle must be larger than its price), and is computationally intractable already in medium-sized auction domains. See Appendix D for further related work."}, {"title": "1.4 PRACTICAL CONSIDERATIONS AND INCENTIVES", "content": "MLHCA integrates both ML-powered DQ and VQ rounds. In DQ-based auctions like the CCA or ML-CCA, ensuring truthful bidding depends heavily on well-chosen activity rules and payment rules. In Appendix A.3, we provide a detailed discussion of the most common activity rules used in the CCA to align incentives, and detail how MLHCA can also leverage these rules to achieve the same goal.\nThe VQ rounds in MLHCA extend the MLCA framework (Brero et al., 2021) by incorporating information from earlier DQ rounds into bidders' ML models. Brero et al. (2021) argued that MLCA offers strong practical incentives, and under two additional assumptions, truthful bidding is an ex-post Nash equilibrium. In Appendix A.4 we provide a detailed discussion of these arguments, and detail why they also apply to MLHCA's VQ rounds.\nBy effectively combining activity rules in the DQ rounds and leveraging the established incentive structure of MLCA in the VQ rounds, MLHCA achieves a robust incentive alignment across all its stages."}, {"title": "2 PRELIMINARIES", "content": null}, {"title": "2.1 FORMAL MODEL FOR ICAS", "content": "We consider multiset CA domains with a set \\(N = \\{1, ..., n\\}\\) of bidders and a set \\(M = \\{1, ...,m\\}\\) of distinct items with corresponding capacities, i.e., number of available copies, \\(c = (c_1, . . ., c_m) \\in"}, {"title": "3 ADVANTAGES OF DQS AND VQS AND WHY ONE SHOULD COMBINE THEM", "content": "In this section, we examine the limitations of using only VQs or only DQs in auctions and highlight the benefits of combining them. All deferred proofs can be found in Appendix E."}, {"title": "3.1 DISADVANTAGES OF ONLY USING VQS", "content": "Almost all ML-powered VQ-based auctions including the current SOTA, BOCA (Weissteiner et al., 2023) first ask each bidder multiple random VQs (i.e., VQs for randomly selected bundles). These VQs are necessary to initialize the ML estimates of the bidder's value functions. In practice, it is very hard for bidders to answer random VQs since they are not aligned with their preferences. The most popular ICAs in practice (e.g., the CCA) ask the bidders DQs, which have been argued can be answered by the bidders sufficiently well (Cramton, 2013)."}, {"title": "3.2 DISADVANTAGES OF ONLY USING DQS", "content": "In this section, we show the disadvantages of using DQs to elicit the bidders' preferences.\nThe first major disadvantage of an auction employing only DQs is that the auction's efficiency can actually drop by adding more DQs.\nLemma 2. In a DQ-based ICA, adding DQs can actually reduce efficiency. A single DQ can cause an efficiency drop arbitrarily close to 100%. By comparison, in a VQ-based ICA, adding additional queries can never reduce efficiency (assuming truthful bidding).\nProof. Let \\(m = 2\\), \\(n = 2\\), \\(c_1 = 1\\), \\(c_2 = 1\\),\n\\[v_1 = \\max \\{400 \\cdot 1\\_{\\{x_1 \\geq 1\\}}, 2 \\cdot 1\\_{\\{x_2 \\geq 1\\}}\\} \\text{ and } v_2 = 1.1 \\cdot 1\\_{\\{x_1 \\geq 1\\}}.\\]\nSuppose the auction has asked two DQs. The first DQ \\(p = (1,1)\\) is responded by both bidders with \\((1,0) \\in \\arg \\max_{x \\in X} \\{v_i(x) - (p, x)\\} \\). The second DQ \\(p = (1.2, 1)\\) is responded by bidder 1 with \\((1,0) \\in \\arg \\max_{x \\in X} \\{v_1(x) - (p, x)\\} \\) and by bidder 2 with \\((0,0) \\in \\arg \\max_{x \\in X} \\{v_2(x) - (p, x)\\} \\)."}, {"title": "3.3 THE ADVANTAGES OF COMBINING DQS AND VQS", "content": "DQs are cognitively simpler than VQs early in the auction. All ML-powered, VQ-based ICAs in the literature begin by asking bidders their values for uniformly at random selected bundles to initialize the ML models. In contrast, the SOTA ML-powered DQ-based approach (Brero & Lahaie, 2018; Brero et al., 2019; Soumalias et al., 2024b) starts by asking bidders for their preferred bundles at low initial prices that gradually increase over rounds. From a practical standpoint, it is nearly impossible for bidders to accurately assess VQs for randomly chosen bundles, whereas responding to DQs with low prices is far easier. As the auction progresses and the bidders' ML models become more accurate, a VQ-based ML-powered ICA can ask targeted VQs that align better with bidder interests, making them easier to answer.\nDQs are more effective in the early stages of the auction. Initially, the auctioneer lacks knowledge of which bundles align with bidders' interests. Beginning with DQs allows the auctioneer to gather early insights about the bidders' preferences over the whole bundle space, facilitating the use of more targeted queries later on. This practice is well-established in the combinatorial auction community. For instance, the initial DQ phase in the CCA is often referred to as a \u201cprice discovery phase\" (Ausubel et al., 2006). We argue that the same concept holds even in ML-powered auctions. Our experiments in Section 6 confirm that DQ-based approaches (e.g., ML-CCA (Soumalias et al., 2024b)) outperform VQ-based approaches (Weissteiner & Seuken, 2020; Weissteiner et al., 2022b;a; 2023) during the early rounds of the auction. However, as suggested by Theorem 1 and Lemma 5, VQ-based approaches eventually surpass DQ-based mechanisms in later iterations.\nA key contributing factor as to why VQ-based ML-powered approaches perform better than DQ-based approaches is that they can take into account the WDP, i.e., the downstream optimization problem that will determine the final allocation. In contrast, responses to a single DQ often lead to over-demand for certain items or leave some items unassigned (under-demand). In Example 1, bidder 2 lacks information to know she should bid for 9 items. Only the auctioneer, having information from all bidders, knows that assigning 9 items to bidder 2 would complement bidder 1's preferences. The auctioneer can leverage this aggregated knowledge by asking bidder 2 a VQ for 9 items, whereas DQs alone would not provide this opportunity."}, {"title": "4 MIXED QUERY LEARNING", "content": "In this section, we introduce our mixed training algorithm and provide experimental evidence supporting our theoretical analysis from Section 3. Specifically, we demonstrate the learning benefits of initializing auctions with DQs rather than VQs and highlight how combining DQs with VQs leads to superior learning performance."}, {"title": "4.1 MIXED TRAINING ALGORITHM", "content": "To leverage the advantages of both DQs and VQs, we propose a two-stage training algorithm. In each epoch, the ML model is first trained on all DQ responses using the loss function from (Soumalias et al., 2024b). The main idea behind this loss is that for each DQ, an optimization problem is solved to predict the bidder's utility-maximizing bundle at the given prices, treating her ML model as her true value function. In case the predicted reply disagrees with the bidder's true reply, the loss is the difference in predicted utilities between these 2 bundles. This loss provably incorporates the full information that the DQ responses provide. Then, the model is trained on the VQ responses using a standard regression loss. For more details, see Appendix F."}, {"title": "4.2 EXPERIMENTAL ANALYSIS", "content": "In this section, we demonstrate the learning benefits of initializing auctions with DQs rather than VQs and highlight how combining both query types leads to superior learning performance.\nWe conduct the following experiment: We perform hyperparameter optimization (HPO) to train an mMVNN for the most critical bidder type in the most realistic domain-the national bidder in the MRVM domain. In Appendix G we present the same experiment for all other domains. Our HPO procedure is the following. For a single bidder of that type, we generate three distinct training sets:\n1. The first training set contains 40 DQs simulating 40 CCA clock rounds, along with 20 VQs for bundles chosen uniformly at random."}, {"title": "5 THE MECHANISM", "content": "In this section, we describe our ML-powered Hybrid Combinatorial Auction (MLHCA), which combines the auction and ML insights of how to combine DQs and VQs from Sections 3 and 4.\nWe present a simplified version of MLHCA in Algorithm 1. In Lines 3 to 6, we generate the first \\(Q^{CCA}\\) DQs using the same price update rule as the CCA (with larger price increments). In each of the next \\(Q^{DQ} \\in \\mathbb{N}\\) ML-powered rounds, we first train, for each bidder, an mMVNN on her demand responses (Line 9). Next, in Line 10, we call \\(\\texttt{NEXTPRICE}\\) (Soumalias et al., 2024b) to generate the next DQ based on the agents' trained mMVNNs (see Appendix C). If MLHCA has found market-clearing prices, then the corresponding allocation is efficient and is returned, along with payments \\(\\pi(R)\\) according to the deployed payment rule (Line 16). MLHCA is plug-and-play compatible with many different payment rules. If, by the end of the ML-powered DQs the market has not cleared we switch to VQ rounds. In the first VQ round (Line 18) we ask each bidder for her bridge bid (see Definition 4). This single VQ bid ensures that the MLHCA's efficiency is lower bounded by the efficiency after just the DQ rounds (Lemma 4). In the final \\(Q^{VQ} - 1\\) VQ rounds, for each bidder, we query her her value for the bundle she is allocated in the predicted optimal allocation (based on all ML models), under the constraint that she has not answered a VQ for that bundle in the past. The final allocation and payments are then determined based on all reports (Lines 25 to 26). Note that ML-CCA can be combined with various possible payment rules \\(\\pi(R)\\), such as VCG or VCG-nearest. We present the detailed description of the mechanism in Appendix H."}, {"title": "6 EXPERIMENTS", "content": "In this section, we experimentally evaluate MLHCA. We compare its efficiency against BOCA (Weissteiner et al., 2023) and ML-CCA (Soumalias et al., 2024a) the SOTA VQ-based and DQ-based ICAs, respectively."}, {"title": "6.1 EXPERIMENT SETUP", "content": "To generate synthetic CA instances, we use the spectrum auction test suite (SATS) (Weiss et al., 2017). SATS gives us access to the true optimal allocation \\(a^* \\in \\mathcal{F}\\), which we use to measure the efficiency loss, i.e., \\(1 - \\frac{V(a^*)}{V(a^*(R))}\\) when eliciting reports \\(R\\). As in all mechanisms we compare against (e.g. (Soumalias et al., 2024b; Weissteiner et al., 2023)), we focus of efficiency (and not revenue). The main application of ICAs is in spectrum allocation, a government-run operation with a mandate to maximize welfare (Cramton, 2013). See Appendix J for a discussion of the corresponding results on revenue. To enable a fair comparison against prior work, we use 100 total queries for all auction mechanisms. Those are 100 VQs for BOCA, 100 DQs for ML-CCA, and 40 DQs and 60 VQs for MLHCA. For BOCA and ML-CCA, we use the best mechanism configuration and hyperparameters as reported in their corresponding papers.\nFor MLHCA's VQ rounds, we performed HPO separately for each bidder type in each domain, as detailed in Section 4.2. For the DQ rounds, we adopted the HPO parameters reported by Soumalias et al. (2024b), since our learning algorithm, when restricted to DQs, is equivalent to theirs. For further details, please refer to Appendix K.1."}, {"title": "6.2 EVALUATING THE EFFECTIVENESS OF THE BRIDGE BID", "content": "In this section, we experimentally evaluate the effectiveness of the bridge bid from Section 3.\nIn Figure 2a, we plot MLHCA's efficiency in the MRVM domain as a function of the number of elicited bids, comparing performance with and without the bridge bid. Without the bridge bid, we observe a significant efficiency drop of 7.3% points when MLHCA transitions to its VQ rounds. This"}, {"title": "6.3 EFFICIENCY RESULTS", "content": "In this section, we present the efficiency of MLHCA, comparing its performance against the current alternatives discussed in Section 2.2. These results build on the theoretical insights discussed in Sections 3 and 4, showcasing both the advantages of starting with DQs and the efficacy of our hybrid approach.\nIn Table 2, we show the average efficiency loss of each mechanism after 100 queries. For ML-CCA, we also report results if it were supplemented with the clock bids raised heuristic (see Section 2.2), which would involve up to an additional 100 VQs per bidder. Finally, we report the number of queries that MLHCA requires to outperform the final efficiency of each other mechanism, i.e., in GSVM, with 42 queries (40 DQs and 2 VQs) MLHCA statistically outperforms ML-CCA, even if ML-CCA were supplemented with 100 VQs from the clock bids raised heuristic.\nIn Table 2, we observe that across all domains, MLHCA significantly outperforms all other mechanisms. First, MLHCA is the only mechanism that can achieve a perfect 100% efficiency in SRVM. As a matter of fact, it can do this using less than 60 queries, while the other auctions cannot do that even with 100 queries. In the LSVM domain, MLHCA achieves a 10-fold reduction in efficiency loss compared to BOCA, the previous SOTA. But the most realistic domain is MRVM, designed to simulate the data from the 2014 Canadian spectrum auction (Weiss et al., 2017). In that domain, MLHCA is the first mechanism to cause a significant efficiency increase versus the CCA, increasing efficiency compared to all other mechanisms by over 2.5% points. If MLHCA were used in the latest Canadian Spectrum Auction, based on the value of goods traded (Innovation, Science and Economic"}, {"title": "7 CONCLUSION", "content": "We have introduced MLHCA, the first ICA that combines ML-powered VQ and DQ generation algorithms. MLHCA provably incorporates the full information that both query types provide, and leverages the theoretical and practical insights developed in this work to combine these queries effectively and achieve unprecedented efficiency-clearly surpassing current SOTA mechanisms.\nOur results demonstrate that MLHCA consistently outperforms previous SOTA mechanisms across all tested domains, achieving substantial efficiency gains with significantly fewer queries. Notably, MLHCA reduces efficiency loss by up to a factor of 10 compared to the previous SOTA while surpassing all previous mechanisms with at most 74% of their queries. In the most realistic domain, MLHCA's efficiency gains translate into welfare improvements exceeding 50 million USD in a single auction instance. Importantly, MLHCA achieves these gains while simplifying bidder par-"}, {"title": "A PAYMENT AND ACTIVITY RULES", "content": "In this section, we reprint the VCG and VCG-nearest payment rules, as well as give an overview of activity rules for the CCA, and argue why the most prominent choices are also applicable to our MLHCA."}, {"title": "A.1 VCG PAYMENTS", "content": "Definition 5. (VCG PAYMENTS FROM DEMAND AND VALUE QUERY DATA) Let \\(R = (R_1,..., R_n)\\) denote an elicited set of both demand and value query data from each bidder and let \\(R_{-i} := (R_1,..., R_{i-1}, R_{i+1},..., R_n)\\). We then calculate the VCG payments \\(\\pi^{VCG}(R) = (\\pi^{VCG}_1(R) ..., \\pi^{VCG}_n(R)) \\in \\mathbb{R}^n\\), as follows:\n\\[\\pi^{VCG}_i(R) := \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a^*(R_{-i})_j; R_j) - \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a^*(R)_j; R_j) .\\]\nwhere \\(a^* (R_{-i})\\) is the allocation that maximizes the inferred social welfare when excluding bidder \\(i\\), i.e.,\n\\[a^* (R_{-i}) \\in \\arg \\max_{a \\in \\mathcal{F}} \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a_j; R_j),\\]\nand \\(a^*(R)\\) is the inferred social welfare-maximizing allocation (see Equation (3)).\nThus, when using VCG payments, bidder \\(i\\)'s utility is:\n\\[\\begin{aligned} u_i &= v_i(a^*(R)_i) - \\pi^{VCG}_i(R) \\\\ &= v_i(a^*(R)_i) + \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a^*(R)_j; R_j) - \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a^*(R_{-i})_j; R_j). \\end{aligned}\\]"}, {"title": "A.2 VCG-NEAREST PAYMENTS", "content": "To define the VCG-nearest payments, we must first introduce the core:\nDefinition 6. (THE CORE) An outcome \\((\\alpha, \\pi) \\in \\mathcal{F} \\times \\mathbb{R}^n_{\\geq 0}\\) (i.e., a tuple of a feasible allocation \\(\\alpha\\) and payments \\(\\pi\\)) is in the core if it satisfies the following two properties:\n1. The outcome is individual rational, i.e, \\(u_i = v_i(a_i) - \\pi_i \\geq 0\\) for all \\(i \\in \\mathbb{N}\\)\n2. The core constraints\n\\[\\forall L \\subseteq \\mathbb{N} \\quad \\sum_{i \\in L} \\pi_i(R) \\geq \\max_{a' \\in \\mathcal{F}} \\left( \\sum_{i \\in L} v_i(a'_i) - \\sum_{i \\in \\mathbb{N}\\setminus L} v_i(a'_i) \\right),\\]\nwhere \\(v_i(a_i)\\) is bidder \\(i\\)'s value for bundle \\(a_i\\) and \\(\\mathcal{F}\\) is the set of feasible allocations.\nIn words, a payment vector \\(\\pi\\) (together with a feasible allocation \\(\\alpha\\)) is in the core if no coalition of bidders \\(L \\subseteq \\mathbb{N}\\) is willing to pay more for the items than the mechanism is charging the winners. Note that by replacing the true values \\(v_i(a_i)\\) with the bidders' (possibly untruthful) inferred values based on their reports \\(v_i(a_i; R_i)\\) in Definition 6 one can equivalently define the revealed core.\nNow, we can define\nDefinition 7. (MINIMUM REVENUE CORE) Among all payment vectors in the (revealed) core, the (revealed) minimum revenue core is the set of payment vectors with smallest \\(L_1\\)-norm, i.e., which minimize the sum of the payments of all bidders.\nWe can now define VCG-nearest payments:\nDefinition 8. (VCG-NEAREST PAYMENTS) Given an allocation \\(a_R\\) for bidder reports \\(R\\), the VCG-nearest payments \\(\\pi^{\\text{VCG-nearest}}(R)\\) are defined as the vector of payments in the (revealed) mini-mum revenue core that minimizes the \\(L_2\\)-norm to the VCG payment vector \\(\\pi^{VCG}(R)\\)."}, {"title": "A.3 ON THE IMPORTANCE OF ACTIVITY RULES TO ALIGN INCENTIVES", "content": "In the CCA, activity rules serve multiple purposes. First, they help accelerate the auction process. Second, they reduce \"bid-sniping\" opportunities\u2014bidders concealing their true intentions until the very last rounds of the auction. Third, they limit surprise bids in the supplementary round of the CCA, significantly reducing a bidder's ability to drive up opponents' payments by overbidding on bundles they cannot win (Ausubel & Baranov, 2017). There are two types of activity rules that are implemented in a CCA:\n1. Clock phase activity rules, which limit the bundles that an agent can bid on during the clock phase, based on their bids in previous clock rounds.\n2. Supplementary round activity rules, which restrict the amounts that an agent can bid on specific sets of items during the supplementary round.\nTraditionally, most clock phase activity rules in the CCA have relied on either revealed-preference principles or a points-based system, where points are assigned to each item before the auction, and bidders are only allowed to submit monotonically non-increasing bids in terms of points. In other words, as prices rise across rounds, bidders cannot submit bids for larger sets of items. Both of these approaches, as well as hybrid combinations thereof, were shown to actually further interfere with truthful bidding in some cases (Ausubel & Baranov, 2014; 2020).\nHowever, Ausubel & Baranov (2019) showed that basing clock phase activity rules entirely on the generalized axiom of revealed preference (GARP) can dynamically approximate VCG payoffs, thus improving the bidding incentives of the CCA. GARP imposes revealed-preference constraints (see Definition 9) on the bidder's demand responses. The GARP activity rule requires that the bidder demonstrates rational behavior in her demand choices, without necessitating a monotonic price trajectory. As a result, it can also be applied during the ML-powered DQ phase of MLHCA, allowing our mechanism to enjoy similar improvements in bidding incentives.\nFor the supplementary round, the CCA's most prominent activity rules are again based on a combination of points-based systems and revealed-preference ideas, which we outline below:\nDefinition 9. (REVEALED-PREFERENCE CONSTRAINT) The revealed-preference constraint for bundle \\(x \\in \\mathcal{X}\\) with respect to clock round \\(r\\) is\n\\[b_i(x) \\leq b_i(\\hat{x}^r) + (p^r, x - \\hat{x}^r),\\]\nwhere \\(b_i(x) \\in \\mathbb{R}_{\\geq 0}\\) is bidder \\(i\\)'s bid for bundle \\(x \\in \\mathcal{X}\\) in the supplementary round, \\(\\hat{x}^r \\in \\mathcal{X}\\) is the bundle demanded by the agent at clock round \\(r\\), \\(b_i(\\hat{x}^r) \\in \\mathbb{R}_{\\geq 0}\\) is the final bid for bundle \\(\\hat{x}^r \\in \\mathcal{X}\\) and \\(p^r \\in \\mathbb{R}^m\\) is the linear price vector of clock round \\(r\\).\nIntuitively, the revealed-preference constraint ensures that a bidder cannot claim a higher value for bundle \\(x\\) relative to bundle \\(\\hat{x}^r\\), given that they expressed a preference for bundle \\(\\hat{x}^r\\) at the given prices \\(p^r\\) (see Equation (1)). The difference between the three most prominent supplementary round activity rules is with respect to which clock rounds the revealed-preference constraint should be satisfied. Specifically:\n1. Final Cap: A bid for bundle \\(x \\in \\mathcal{X}\\) should satisfy the revealed-preference constraint (Definition 9) with respect to the final clock round's price \\(p^{Q_{\\text{max}}} \\in \\mathbb{R}_{\\geq 0}\\) and bundle \\(\\hat{x}^{Q_{\\text{max}}} \\in \\mathcal{X}\\).\n2. Relative Cap: A bid for bundle \\(x \\in \\mathcal{X}\\) should satisfy the revealed-preference constraint (Definition 9) with respect to the last clock round for which the bidder was eligible for that bundle \\(x \\in \\mathcal{X}\\), based on the points-based system.\n3. Intermediate Cap: A bid for bundle \\(x \\in \\mathcal{X}\\) should satisfy the revealed-preference con-straint (Definition 9) with respect to all eligibility-reducing rounds, starting from the last clock round for which the bidder was eligible for \\(x \\in \\mathcal{X}\\) based on the point system.\nAusubel & Baranov (2017) showed that combining the Final Cap and Relative Cap activity rules leads to the largest amount of reduction in bid-sniping opportunities for the UK 4G auction, as"}, {"title": "A.4 ON THE IMPORTANCE OF MARGINAL ECONOMIES TO ALIGN INCENTIVES", "content": "In this section", "as": "n\\[\\begin{aligned} u_i &= v_i(a^*(R)_i) - \\pi^{VCG}_i(R) \\\\ &= v_i(a^*(R)_i) + \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a^*(R)_j; R_j) - \\sum_{j \\in \\mathbb{N}\\{i\\}} \\tilde{v}_j(a^*(R_{-i})_j; R_j) \\end{aligned}\\]\nAny beneficial misreport by bidder \\(i"}]