{"title": "F-A Model of Events based on the Foundational Ontology DOLCE+DnS Ultralite", "authors": ["Ansgar Scherp", "Thomas Franz", "Carsten Saathoff", "Steffen Staab"], "abstract": "The lack of a formal model of events hinders interoper-ability in distributed event-based systems. In this paper, we present a formal model of events, called Event-Model-F. The model is based on the foundational ontology DOLCE+DnS Ultralite (DUL) and provides comprehensive support to represent time and space, objects and persons, as well as mereological, causal, and correlative relationships between events. In addition, the Event-Model-F provides a flexible means for event composition, modeling event causality and event correlation, and representing different interpretations of the same event. The Event-Model-F is developed following the pattern-oriented approach of DUL, is modularized in different ontologies, and can be easily extended by domain specific ontologies.", "sections": [{"title": "1. INTRODUCTION", "content": "The explicit modeling of events and event-based systems are increasingly gaining widespread attention by research and industry due to a couple of reasons. Firstly, we find an increasing number of systems that are treating events, e.g., media delivery, surveillance video, or management of emergency incidents. Secondly, a fastly growing number of intelligence-collecting devices such as sensors, CCTV, upload facilities, and others lead to an ubiquity of events being recognized and communicated. Thirdly, event detection, clustering, and annotation is and will be realized in many different software components and proprietary solutions using a large variety of internal data models. Thus, multiple systems are connected for managing events resulting in a complex, so-called distributed event-based system [17]. Such a distributed event-based system is a software system consisting of several components that are characterized by taking events as input and providing events as output. Existing solutions typically focus on processing low-level signals and actions, i.e., technical events that happen within computerized systems [17] like [19, 6, 30, 27, 15].\nOur understanding of events is different from the technical, low-level events above. We apply events to capture and represent human experience, i.e., to describe on a high-level the occurrences in which humans participate. These events are subject to discussions and interpretations by humans. They may be very complex and a variety of aspects need to be considered such as time and space, objects and persons involved, as well as mereological, causal, and correlative relationships between events. Existing models for events like [28, 23, 11, 4, 16, 7, 29] do not follow a systematic development approach. They are conceptually narrow and their semantics is typically ambiguous. This hinders interoperability of the different event-based components and event-based systems aggravating the treatment of events in already complex, distributed infrastructures.\nIn this paper, we present a formal representation of events that allows for capturing and representing human experience, called Event-Model-F. This representation allows easy interchange of event information between different event-based components and systems. Modeling such events is an interesting and challenging"}, {"title": "2. EVENTS AND OBJECTS", "content": "In philosophical literature, there are different discussions of how to discriminate events from other categories [2]. One of them are objects. Although not undisputed, there are standard differences between events and (physical) objects [2]: Events are said to occur or happen. They are considered perduring entities that unfold over time, i.e., they take up time. In contrast, material objects such as stones and chairs are said to exist. Such enduring entities unfold over space, i.e., they are in time. As said, this metaphysical distinction is not uncontroversial as some philosophers consider objects as four-dimensional entities that extend across time just as they do across space [2]. For our Event-Model-F, we follow DOLCE+DnS Ultralite's design decision and distinguish events from objects. By this, we can be precise about the relationships that can occur between events and objects [19]."}, {"title": "3. SCENARIO", "content": "An example of a distributed event-based system is the emergency response use case of the EU project We-KnowIt depicted in Figure 1. Here, different professional entities are involved such as the emergency hotline, police department, fire department, emergency control center, and forward liaison officers. Please note again, the events we are modeling aim at capturing and representing human experience and thus are different from technical events as discussed in Section 1. The different aspects of events are marked with ((number)).\nIn an incident of a heavy storm a major flooding may happen. (i) During the flooding a power outage occurs. (ii) Some citizens are lacking power supply and are calling the emergency hotline to report about the outage. The officers at the emergency hotline record these calls and type in an event description for each call to document them in their system. (iii) These events are annotated with information about the call and its recording and are automatically transferred to the system of the emergency control center. In the course of the flood, (i) further events happen such as pumping out flooded cellars or rescuing people from their flooded homes. (iv) Forward liaison officers drive to the different locations of the events to take photos and report them. Here, the event description is created using an application on their cell phone. (iii) A documentary support for the event is provided by attaching a photo to it and tagging it. The event description is also send to the system of the emergency control center. (v) Although the events of a flooded cellar and rescuing people from their homes might occur at different times and be located farer away from each other, they are probably both caused by the same flooding event. (vi) Thus, the events that happen during an incident correlate to each other. These correlations are important to recognize to gain a full understanding of the emergency situation. (vii) The emergency control center also receives event descriptions from the systems of the police department and fire department that happen during the incident. (v) Based on the evidence of the event descriptions, the officers in the emergency control center use their system to formulate hypothetical events that might have caused the power outage. (viii) The officers conclude that there are two possible interpretations that might have caused the power outage, namely a snapped power pole close to the river or a problem with the power plant."}, {"title": "4. REQUIREMENTS ON F", "content": "We have derived functional as well as non-functional requirements on our Event-Model-F. These base on an analysis of existing event models and related work in Section 7, the emergency response scenario in Section 2, and reported and own experience in designing core ontologies [21, 20, 1, 8].\n4.1 Functional Requirements\nTo derive the functional requirements we have analyzed existing models in various domains such as music [23], journalism [28], multimedia [5, 7, 29], news [11], cultural heritage [4], and knowledge representation [16]. The most comprehensive list of functional requirements are the six aspects defined for the event model E [29] and the journalism interrogatives of the Eventory system [28]. We have blend the aspects in E and interrogatives of the Eventory system and have synthesized them into our requirements. For each requirement, we also explicitly refer to the scenario in Section 3.\n(1) Participation of objects in events. Representing participation of living and non-living objects such as people, animals, and other material objects in events and the roles they play in events. In the scenario, an example of objects participating in events and different object roles are to be found with (ii).\n(2) Temporal duration of events and (3) spatial extension of objects. As events unfold over time (see Section 2), their temporal duration needs to be modeled. This can be conducted using absolute or relative representations of points in time. Objects unfold over space. Thus, modeling their spatial extension needs to be supported. This can be also modeled using absolute or relative positioning. In the emergency response scenario, events occur and objects exist at different points in time (vii) and at different locations (iv).\n(4) Structural relationships between events. We consider three kinds of structural relationships between events, namely (4a) mereological, (4b) causal, and (4c) correlation relationships. The mereological relationship should be supported as events are usually made up of other events [22]. Causal relationships require the modeling of causes and effects and should support the integration and use of different causal theories as discussed, e.g., in [12]. Correlation refers to two events that have a common cause (cf. [25]). It should be supported as it is typically easy to observe, while causality is very difficult to discover and, hence, often unknown. The scenario illustrates the requirement of mereology (i), causality (v), and correlation (vi).\n(5) Documentary support for events and objects. This requirement comprises the annotation of events and their participating objects with arbitrary information such as sensor data and media data. It provides documentary support that a particular event happened or object exists. In the scenario, the documentary support is indicated with (iii).\n(6) Event interpretations. Relations between events such as causality and correlation can be matter of subjectivity and interpretation. For example, in a law-suit the parties involved may each claim that the other one is at fault. Thus, the event model should support such different interpretations of the same event, i.e., provide different contextual points of view onto the same occurrences in the real world. In the scenario, event interpretation is indicated with (viii).\n4.2 Non-functional Requirements\nAbove, we enumerated what needs to be expressed by a common model of events. We now elaborate how such a model needs to be designed in order to be applicable in scenarios such as the one illustrated in Section 3. The non-functional requirements are derived from reported and own experience in knowledge-based systems and knowledge representation [21, 20, 1, 8].\n(a) Extensibility. Systems evolve over time, being extended, combined, and integrated. A core model for knowledge representation needs to support system evolution by being extensible towards new developments and functional requirements that arise. With respect to the Event-Model-F, extensibility means to be able to, e.g., include future aspects for describing events.\n(b) Axiomatization and formal precision. The goal of a core model is to establish a common understanding in a particular domain in order to ensure interoperability through machine accessible semantics. Here, a mechanism is required to exchange structured knowledge about events and objects between different event-based systems. These event-based systems need to be able to automatically check the validity of the exchanged knowledge, not only with respect to its syntax, but more importantly with respect to the semantics. Thus, a core model like the Event-Model-F needs sufficient formality and axiomatization so that systems can reason about the represented knowledge and carry out semantic checks on its validity.\n(c) Modularity. While a core model needs to capture different structural knowledge, systems will commonly use only portions of it. A modular design allows for"}, {"title": "5. DESIGN OF THE EVENT-MODEL-F", "content": "For designing the Event-Model-F and implementing the functional requirements, we have carefully aligned it with the DOLCE+DnS Ultralite (DUL) ontology. DUL defines the class DUL: Event next to the disjoint upper classes DUL: Object, DUL: Abstract, and DUL: Quality. The definition of Event has been specialized from the formal definition in DOLCE as an entity that exists in time (cf. discussion of events and objects in Section 2). The class Object stands for entities that exist in space such as living things as well as non-living and abstract things like social and cognitive entities. A Quality is a characteristic of an object or an event. It has a value that is represented as a point or area in some Abstract. The class Abstract represents value spaces, e.g., the space of natural numbers or the time of a day. In the Event-Model-F, we do not prescribe specific Abstracts that are to be used. We rather refer to the generic Abstracts already defined in DUL such as the regions DUL:TimeInterval, DUL:SpatioTemporalRegion, and DUL: SpaceRegion.\nThe functional requirements on our Event-Model-F are represented by specialized instantiations of the descriptions and situations (DnS) ontology pattern that is part of DOLCE+DnS Ultralite. We use DnS as it provides formally precise representations of different, contextualized views on events [9]. Thus, with DnS one can reify events and describe the n-ary relation that exists between multiple individuals of events and objects. We use the DnS pattern as the representation of occurrences in the real world (i.e., the events and objects we are modeling) are subject to discussion and interpretation and may not be objectively observable. The DnS pattern allows for representing different opinions about events and their participating objects. This feature is not provided by the DOLCE participation relation.\nIn the following, we introduce the ontology patterns of the Event-Model-F and illustrate them in diagrams. With respect to the functional requirements in Section 4.1, the participation of objects in events (1) is implemented by the participation pattern. It also provides for modeling the absolute time and location of events (2) and objects (3). The mereology pattern, causality pattern, and correlation pattern implement the structural relationships between events (4a-4c). In addition, the mereology pattern allows for modeling the relative temporal relations and relative spatial relations between events (2) and objects (3). The documentation pattern provides for annotating events (5) and the interpretation pattern supports different event interpretations (6). Classes defined by the Event-Model-F are highlighted in the diagrams to show the alignment with classes of DUL. The axiomatization of the Event-Model-F has been conducted in Description Logics and is available online at: http://isweb.uni-koblenz.de/eventmodel.\n5.1 Participation Pattern\nThe participation pattern enables to formally express the participation of objects in events. As shown in Figure 2(a), participation is expressed by an F:EventParticipationSituation that satisfies an F: EventParticipationDescription. The situation includes the Event being described and the Objects participating in this event. The EventParticipationDescription classifies the described event and its participants by using the concepts F:DescribedEvent (specialized from DUL: EventType) and the object role F:Participant (specialized from DUL: Role). The concept Described-Event classifies the Event that is described by the participation pattern, e.g., the event of a flooded cellar. Likewise, instances of Participant classify objects as participants of the event. For example, the citizen calling the emergency hotline to report about the flooded cellar. Instances of Participant can be roles defined in some domain ontology as indicated in Figure 2(a). For example, an emergency response ontology may define the role of a person being affected, i.e., the emergency subject, and the role describing the rescue staff such as firemen. Besides the role an object can play in a specific participation pattern, also the described event and its participating objects themselves can be defined in some domain ontology as indicated in Figure 2(a).\nThe parameter F: LocationParameter describes the general spatial region where the objects are located. It DUL:parametrizes a SpaceRegion and defines a property DUL:isParameterFor to the Participant role. The Object that is classified by the Participant has a Quality with the property DUL: hasRegion of a Space-Region. Thus, using the F: LocationParameter we can define the location(s) represented by SpaceRegions that are relevant for describing the event in a given context. For example, when quenching a house fire all firemen have their specific location within and around the building. The LocationParameter can then be used to describe in general that the firemen where at that specific house, e.g., in form of some longitude-latitude rectangular. Thus, we do not need to explicitly state where the individual firemen are. The F: TimeParameter describes the general temporal region when the event happened. It parametrizes a TimeInterval and defines a property isParameterFor to the DescribedEvent role. For example, one can state that the house fire happened on June 13, 2006.\n5.2 Mereology Pattern\nEvents are commonly considered at different abstraction levels depending on the view and the knowledge of a spectator. For instance, the event of a flooded cellar may be considered as such or as part of the larger event of a flooding in which many other (smaller) incidents occur. The mereology pattern shown in Figure 2(b) enables expressing such mereological relations as composition of events. The composite event is the \"whole\u201d and the component events are its \u201cparts\u201d. Formally, a F: EventCompositionSituation includes one instance of an event that is classified by the concept F:Composite and many events classified as its F:Component(s). Accordingly, an EventCompositionSituation satisfies a F:CompositionDescription that defines the concepts Composite and Component for classifying the composite event and its component events.\nEvents that play the Component role may be further qualified by temporal, spatial, and spatio-temporal constraints. As events are formally defined as entities that exist in time and not in space (cf. Section 2), constraints including spatial restrictions are expressed through the objects participating in the component event. For instance, a Component event may be required to occur within a certain time-interval, e.g., the second week of June 2009. Depending on its objects, a Component event may also happen in a certain spatial region. For example, the flooding of a town should be composed of events that have objects associated to it, which have some certain range of longitude and latitude. Finally, events and the objects bond to it may be qualified by a spatio-temporal quality like the progress of a flood that extents over time and space, starting with a high water level located in some area of a river and extending spatially over time into other areas. Any such constraints are formally expressed by one or multiple instances of the F: EventCompositionConstraint. Thus, with the composition pattern, events may be arbitrarily temporally related to each other, i.e., they might be disjoint, overlapping, or otherwise ordered. In order to express such relative temporal relations between events, one can facilitate the provided means of DOLCE such as the formalization of Allen's Time Calculus\u00b3.\n5.3 Causality Pattern\nCausality is the philosophical problem investigating the existence of any special \"tie\" binding causes and effects together [12]. It can be questioned either as \u201cWhy\u201d or \u201cHow\u201d [12]. An answer to this question is (or better said claims to be) a causal explanation. What explains, is the cause and that what is explained is the effect [12]. Events are the most natural concept to serve for defining causal relations [22]. In fact, causes and effects are two specific types of events [12, 13]. A causal relationship is always justified by some (maybe implicit) underlying causal theory.\nWe designed a causality pattern as depicted in Figure 2(c). The pattern defines two EventTypes called F: Cause and F: Effect which classify Events. It further defines a DUL:Description, which is classified by a F: Justification. By this, the pattern explicitly expresses the causal relationship between the cause and the effect under the justification of some theory. A theory might be an opinion, a scientific law, or not further specified. For example, during a heavy storm, a power outage might occur caused by a snapped power pole. The Justification of this causal relationship is the laws of physics.\n5.4 Correlation Pattern\nA set of events is called correlated if they have a common cause. However, there exists no causal relationship between the two events [25]. The common cause may originate from a single or a chain of multiple preceding cause-effect relationships. Correlation also differs from co-occurrence where two or more events just (randomly) happen at the same time and do not have a common cause. Correlation is not of metaphysical interest as it is a property that can be derived from causality, i.e., the common cause. In our ontology, we model correlation explicitly as in many cases the (correlating) effects of some common cause may be known, while the cause itself is not. The correlation pattern depicted in Figure 2(d) defines the role F:Correlate to classify the events that are correlated. The Justification role classifies some Description, which explains the correlation in terms of a (mathematical) law or some theory.\n5.5 Documentation Pattern"}, {"content": "defines a F: Interpretant that is specialized from EventType relation pattern to model correlating events. As there and classifies the interpreted Event. The Interpretant might be different opinions about the cause of the flood,\nmight be defined in some domain ontology and deter- there can also be multiple instantiations of the causal-\nmines how an event is interpreted, e.g., as emergency ity pattern referring to the same events. To manage\nincident in the case of the emergency control center or these multiple instantiations of the causality pattern (or\nas news event described in a news paper. Within each other pattern), the event interpretation pattern is used\ninterpretation, we classify the F: RelevantSituations, to form different nexuses of the pattern instances and\nnamely the situations satisfying the participation, mere- providing different points of view onto the same event.\nology, causality, correlation, and documentation. These Thus, the interpretation pattern supports reusing parts\nare defined as specializations of RelevantSituation. of event descriptions on the level of ontology pattern.\n5.7 Non-functional Design Aspects In the following, we present two examples of applying\nour ontology patterns.\nFor designing the Event-Model-F, we have aligned it During a flood, a snapped power pole may cause a power\nwith the foundational ontology DUL. This choice of outage. This causal relationship between the two events\nDUL as modeling basis specifically reflects the non- is modeled using the causality pattern shown in the\nfunctional requirements (see Section 4.2). Foundational upper part of Figure 2(g). It defines two Event indi-\nontologies provide a high-level, abstract vocabulary of viduals snapped-power-pole-1 and power-outage-1,\nconcepts and relations that are likely to be used in cur- where the first one is classified as Cause and the latter\nrent and future application domains. Thus, a precise as its Effect. Some houses and citizens are involved\nalignment of concepts defined in the Event-Model-F in the power-outage-1 event, which is modeled using\nwith the high-level concepts of a foundational ontol- the participation pattern. The lower part of Figure 2(g)\nogy provides a solid basis for future extensions (cf. re- shows an example, the individual person-1 living in the\nquirement (a) on extensibility). This alignment also affected building house-1. They are classified by the in-\nincludes the adoption and specialization of the formal dividuals citizen-1 and affected-bldg-1 in the par-\nsemantics of the foundational ontology in our Event- ticipation pattern playing the roles of a Citizen and an\nModel-F ontology. Thus, it supports for validating the AffectedBuilding. Both roles are defined in a domain-\nmore specific semantics of the concepts and relations specific emergency response ontology and reused here.\ndefined in the Event-Model-F (b). For designing The power-outage-1 event described by this participa-\nthe Event-Model-F, we built upon the foundational tion pattern is classified as such by an instance of the\nontology DOLCE that supports a pattern-oriented design concept DescribedEvent.\napproach [20]. We have designed the Event-Model-F as\na set of patterns that structure the domain into smaller In emergency response, the entities involved need to\nand better manageable ontology modules (c). The in- exchange event descriptions like the one above. How-\ndividual events and objects are reified by the different ever, they use different systems with proprietary data\npatterns of our ontology. Splitting up the description of models for describing events. Thus, a formal model like\nevents and objects into different parts allows for reusing the Event-Model-F may help to integrate them and to\nthem among different applications, where only parts of effectively communicate event descriptions.\nthe descriptions might be needed and combined with\ndomain-specific knowledge (d). Finally, the separation 7. EXISTING EVENT MODELS\nof concerns (e) is supported by defining the structural For designing the Event-Model-F, we analyzed existing\nknowledge of events and objects in the Event-Model-F event-based systems and event models with respect to\nand leaving all domain-specific aspects out of it. By the functional requirements. These models are moti-\nthis, the Event-Model-F is independent of any concrete vated from different domains such as the Eventory [28]\ndomain that makes use of events and objects. system for journalism, the Event Ontology [23] as part\nof a music ontology framework, the ISO-standard of the\n6. USE OF EVENT-MODEL-F International Committee for Documentation on a Con-\nWith the Event-Model-F, we can create and exchange ceptual Reference Model (CIDOC CRM) [4, 26] for cul-\nsophisticated, formal descriptions of events. We demon- tural heritage, the event markup language EventML [11]\nstrate the use of our ontology at the emergency response for news, the event calculus [16, 3] for knowledge repre-\nscenario described in Section 3. For describing an event, sentation, the Semantic-syntactic Video Model (SsVM) [5]\nthe different patterns defined in the Event-Model-F are and Video Event Representation Language (VERL) [7,\ncombined, each providing a specific part of the event de- 18] for video data, and the event model E [24, 29] for\nscription. To model the participation of citizens in an event-based multimedia applications. An overview of\nemergency incident like a flood one may use the partic- the analysis results and comparison to the features of\nipation pattern. A flood may typically be composed of our Event-Model-F along the functional requirements is\nmultiple events, which is modeled using the mereology shown in Figure 3.\npattern. One can model the cause for the flood applying\nthe causality pattern and possibly also using the cor-"}, {"title": "8. CONCLUSIONS", "content": "We designed a formal model of events based on the foundational ontology DOLCE+DnS Ultralite. By the use of this ontology and a pattern-oriented design approach, we are able to fulfill the non-functional requirements stated in Section 4. For the functional requirements, we introduced specific ontology patterns based on the Descriptions and Situations model. By this, we can represent arbitrary occurrences in the real world and formally model the different relations and interpretations of events. The full support for the structural aspect as well as different event interpretations distinguishes the Event-Model-F very much from existing event models. Separating the model into smaller patterns allows for better managing the complexity of events. Due to its formal nature, our Event-Model-F allows for integration of different event-based systems and components. In a future extension of our work, we plan to conduct reasoning on the instantiations of our patterns based on meta-knowledge. We also like to investigate the reusability of our Event-Model-F and its possibility to combine it with other core ontologies."}]}