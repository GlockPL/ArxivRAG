{"title": "Smart and Efficient IoT-Based Irrigation System Design: Utilizing a Hybrid Agent-Based and System Dynamics Approach", "authors": ["Taha Ahmadi Pargo", "Mohsen Akbarpour Shirazi", "Dawud Fadai"], "abstract": "Regarding problems like reduced precipitation and an increase in population, water resource scarcity has become one of the most critical problems in modern-day societies, as a consequence, there is a shortage of available water resources for irrigation in arid and semi-arid countries. On the other hand, it is possible to utilize modern technologies to control irrigation and reduce water loss. One of these technologies is the Internet of Things (IoT). Despite the possibility of using the IoT in irrigation control systems, there are complexities in designing such systems. Considering this issue, it is possible to use agent-oriented software engineering (AOSE) methodologies to design complex cyber-physical systems such as IoT-based systems. In this research, a smart irrigation system is designed based on Prometheus AOSE methodology, to reduce water loss by maintaining soil moisture in a suitable interval. The designed system comprises sensors, a central agent, and irrigation nodes. These agents follow defined rules to maintain soil moisture at a desired level cooperatively. For system simulation, a hybrid agent-based and system dynamics model was designed. In this hybrid model, soil moisture dynamics were modeled based on the system dynamics approach. The proposed model, was implemented in AnyLogic computer simulation software. Utilizing the simulation model, irrigation rules were examined. The system's functionality in automatic irrigation mode was tested based on a 256-run, fractional factorial design, and the effects of important factors such as soil properties on total irrigated water and total operation time were analyzed. Based on the tests, the system consistently irrigated nearly optimal water amounts in all tests. Moreover, the results were also used to minimize the system's energy consumption by reducing the system's operational time.", "sections": [{"title": "1. Introduction", "content": "Since the beginning of the 21st century, humans have witnessed several technological advancements. Nowadays, it is possible to see smart devices everywhere. These sophisticated devices shape a smart network, which is called an Internet of Things (IoT) based network, and can both communicate with other devices and perform tasks autonomously [1]. Smart medical devices and smart clothes are two examples of applications of this technology.\nAs one of the key objectives of the 4th Industrial Revolution is the automation of processes [2], engineers have endeavored to utilize the IoT technology within many fields. IoT-based Sophisticated systems technology can collect real-time data from their surrounding environment and perform their actions based on the available data. Additionally, in recent years, the production cost of microcontrollers and sensors has become more economically friendly. Due to these advantages, it is possible to solve many engineering problems by employing these systems in various fields, from industry to agriculture.\nOne field in which engineers have endeavored to employ new technologies is agriculture [3]. Engineers have developed IoT solutions for diverse agricultural domains, including precision farming, autonomous harvesting, and field condition monitoring. A key challenge for which engineers have sought solutions is irrigation. Arid and semi- arid regions, such as those in the Middle East and Africa, face severe agricultural challenges [4]. Due to the significant impact of the agriculture on economic, environmental, and social aspects of people's lives, many researchers have"}, {"title": "2. Literature Review", "content": "Due to the fact that there is a lot of research in both the fields of IoT-based irrigation systems and also the design of IoT networks using agent-based modeling, in this section the articles that form the basis of these two issues are reviewed."}, {"title": "2.1. IoT-based irrigation systems", "content": "In recent years, many articles have investigated smart irrigation systems based on the IoT technology, including communication technologies, processors, and sensors. Many of these articles have only designed systems that make irrigation decisions based on soil moisture. However, some articles have also used the approaches of fuzzy rules, machine learning and data analysis in this regard.\nGuti\u00e9rrez et al. designed an irrigation system using Wi-Fi technologies, a GPRS module, and soil moisture sensors. In their designed system, Irrigation decisions are made in this system by an algorithm based on temperature and soil moisture [11]. The system designed by Bennis et al. is also designed based on establishing communication on the basis of Wi-Fi networks. Their proposed system, in addition to soil moisture and temperature, considers environmental pressure to be effective in decision-making and uses the information collected by the pressure sensor to make decisions [12]. Ragheb et al. also developed an irrigation system based on IoT technology that uses information obtained from temperature, soil moisture, and rain sensors. They also created a web application with a user interface for their model [13]. Goap et al. have also used cloud computing and machine learning to design their proposed system. Their designed system in addition to information like air temperature, air humidity, soil temperature, and soil moisture, also uses an ultraviolet sensor to perform calculations [14].\nIn addition to this research, scientists and engineers have also utilized modern technologies related to machine learning to enhance irrigation systems. In their proposed system, Nawandar and Satpute trained a neural network to make irrigation decisions. Another modern soft computing technique is utilizing the fuzzy rules [15]. Krishnan et al. used fuzzy rules to control the irrigation system. In this system, first, the parameters are converted into fuzzy values, and then the decision is made based on the fuzzy rules [16].\nAs a branch of machine learning, one technology that can enhance irrigation is image processing. Kwok and Sun also designed an intelligent irrigation system that has the ability to recognize the plant type utilizing image processing techniques [17]. The irrigation system designed by Behzadipour et al. is a system based on prediction models that work with temperature, humidity, light data, and information obtained from image processing of tree leaves [18]. Rao et al. also developed a system that, in addition to irrigation, by using image processing techniques and information from sensors, it possible to detect plant diseases and minerals in water [19].\nFinally, it is important to mention that recently researchers have used simulation techniques to design irrigation systems. Gomez Alves et al. introduced an irrigation system based on IoT technology. Before implementing their system, they used discrete event simulation to check the performance of their system [20]. In another study published in 2024, Manocha et al. developed an approach for the optimal control of smart irrigation based on the IoT using a digital twin, which also has the ability to simulate the system [21]."}, {"title": "2.2. Utilizing the agent-based modeling to design the IoT-based systems", "content": "The definition of an agent in agent-based modeling is very close to the definition of smart IoT-based devices. These devices make decisions autonomously, are influenced by the environment and can influence the environment, are in communication with each other, and can influence each other. According to these concepts, the use of agent- based methodology is considered a suitable approach for modeling systems based on the Internet of Things.\nIn 2016, Savaglio et al. proposed the use of an agent-based approach to model IoT-based systems [22]. The similarity in defining devices based on the Internet of Things and the agent in agent-based modeling indicates the appropriateness of using this approach for modeling systems based on the Internet of Things.\nThe research conducted by Kaminski et al. is also among the primary researches in this field. In this paper, researchers modeled an IoT-based network with an agent-based approach [23]. Batool and Niazi also investigated the use of an agent-based approach to model complex IoT-based networks [24]. Additionally, P\u00e9rez-Hern\u00e1ndez et al."}, {"title": "2.3. Research gap and contributions", "content": "In general, various research studies have been done in both the fields of smart, IoT-based irrigation systems and the design of IoT-based systems utilizing the agent-based approach."}, {"title": "3. Methodologies", "content": ""}, {"title": "3.1. Agent-Based Modeling", "content": "Agent-based modeling (ABM) is a bottom-up approach used to model complex systems consisting of various elements. By employing this approach, these systems can be modeled with less complexity [29]. Simulation software such as NetLogo and AnyLogic are utilized to simulate these models [30].\nSystems in ABM consist of various autonomous agents capable of making decisions in different conditions and can have their own independent policies. These agents can communicate with each other and their surrounding environment. Additionally, their decisions can impact other agents and the environment, while they themselves can be influenced by others and their surroundings, and finally, these interactions shape the systems behavior in different conditions [31].\nIn general, using the bottom-up approach in ABM allows systems to be designed by modeling agents and simulating them under various scenarios to understand the implications of different decisions in planning and designing these systems."}, {"title": "3.2. Prometheus Methodology", "content": "The Prometheus methodology is an agent-oriented software Engineering methodology designed with a focus on practicality in the real world. Alongside its precision in identifying various system components, functionalities, and flexibility, it's noteworthy for its easy learning curve, especially for beginners.\nIn general, modeling in this methodology occurs in three phases [32]:"}, {"title": "3.3. System Dynamics Modeling", "content": "System Dynamics (SD) modeling helps us understand and simulate how complex systems change over time. It looks at how things like feedback, how much we have, how things move between these quantities, and how long it takes for changes to happen can explain how lots of different systems work. Casual loop diagrams and Stock and Flow models are usually used in order to model the complex systems [33].\nIt is possible to model a system by utilizing the following elements [33]:\n\u2022 Stocks: Stocks are like containers that hold something, for example water in a tank. They show how much of something there is at a specific moment, and they can change over time.\n\u2022 Flows: Flows are like the actions that fill or drain those containers (stocks). For instance, the entry and the output of the water from the tank. They show how things are changing in or out of those containers over time.\n\u2022 Feedback loops: Feedback loops are connections between what's accumulating (stocks) and what's moving (flows) in a system. They can either boost or ease changes happening in the system. When they magnify changes, they're called positive feedback loops. If they counteract changes, they're known as negative feedback loops, which help keep things steadier.\n\u2022 Delays: Time delays are like the lag or waiting time between making a change and seeing its impact elsewhere in a system. It's like when you adjust something, but it takes a bit for that change to show up in another part. This delay can make things behave in unexpected ways, causing swings or going past the intended mark before settling.\nBy utilizing these concepts, it is possible to model the complex systems by utilizing SD approach and test their behavior during periods of time. It is worth to use SD models in different fields like business dynamics modeling, economics, healthcare, and Industry."}, {"title": "3.4. Design of experiments", "content": "Design of experiments (DOE) is a statistical tool deployed in various types of systems and processes and can be used for multiple purposes, like variable screening, robust design, and optimization [34]. DOE techniques can be used to examine computer models and optimize the existing parameters [10].\nWhile it is possible to use the analysis of variance technique in order to determine significant factors on a response variable, and fit regression models to predict the response variable, it is also possible to use response surface methodologies and robust parameter design techniques to set the adjustable parameters on suitable levels to optimize the results [10].\nSeveral designs exist for conducting experiments. One series of these designs are factorial designs. The most important of these special cases is k factors, each at only two levels [10], and is called 2* factorial design. By increasing the number of existing factors, the number of experimental runs increases. For example, an experiment with 10 factors with a 2^10 design consists of 1024 experimental runs, which may not be cost-efficient. If the experimenter can reasonably assume that certain high-order interactions are negligible, information on the main effects and low-order interactions may be obtained by running only a fraction of the complete factorial experiment. These fractional factorial designs are among the most widely used types of designs for product and process design, process improvement, and industrial/business experimentation [10]. A resolution V design, which allows all main effects and two-factor interactions to be estimated by assuming that three-factor and higher interactions are negligible [10], is a good choice for many studies."}, {"title": "4. Definitions", "content": ""}, {"title": "4.1. Soil properties", "content": "\u2022 Relative volumetric soil moisture: It is called relative to the volume of water in the soil, to the total volume of the soil. Relative soil moisture may vary from zero to the saturation point of the soil [35].\n\u2022 Wilting point: The wilting point is the volume of the soil that if the relative soil moisture is reduced to such an extent, the plants will not be able to absorb water from the soil and after the passage of time and the loss of the water stored in the plant, they will wither [35].\n\u2022 Soil saturation point: the maximum volume percentage that may contain moisture in the soil. This percentage is usually equal to the percentage of soil porosity, and when a large volume of water enters the soil, the entire porosity in the soil is filled by water. In this case, water does not have the ability to enter the soil, and water does not enter the soil until a part of the water has penetrated to the lower layers. It is worth mentioning that part of the water that has not entered the soil can be lost as runoff. The amount of water lost is formulated using equation 1 [36]:\n$TRO = Rcoeff TSW$"}, {"title": "4.2. Definitions related to irrigation", "content": "Irrigation means keeping the soil moisture in conditions suitable for plant growth. If the soil moisture exceeds the field's capacity during irrigation, part of the water will percolate to deeper levels, and if the soil moisture decreases to a volume lower than the threshold point, the plants will experience stress in absorbing water; Therefore, the goal of irrigation in an ideal state is to maintain water in the interval between threshold moisture and field's capacity, in which case the water requirement of the plant is equal to the total evapotranspiration [35].\nEquation 3 is used to find evaporation and transpiration of surfaces composed of different plants [7]:\n$ET = KC ET\u3002$"}, {"title": "5. Designing the structure of a Smart Irrigation System", "content": "In this step, considering the stages described regarding the Prometheus methodology, we proceed to explain the modeling process. This section includes three main phases: system specifications, system architecture, and system details, which will be elaborated on in detail below."}, {"title": "5.1. System Specifications", "content": "This phase consists of three subsections:\n\u2022 Scenarios\n\u2022 Goals\n\u2022 Functionalities\nIn essence, this phase deals with outlining the generalities of the model, which will be further specified with the necessary details related to the irrigation issue."}, {"title": "5.1.1. Modeling the Environment", "content": "The environment in this model encompasses environmental elements impacting the system's performance. Broadly, three influential factors in designing the environment have been considered. Weather, influenced by temperature and other meteorological data, rainfall can impact soil moisture, and soil condition itself. Temperature and chance of rainfall play significant rules in irrigation and they influence the controller devices in the system. Weather, UV index and data related to precipitation can be collected from online services.\nAnother environmental element that can be influential is soil condition. Modeling soil in this environment holds significant importance. By considering the soil type and characteristics such as water infiltration rate, percolation rate, and soil capacity, soil moisture dynamics can be modeled. In our proposed approach Soil moisture is an important factor to make the decision whether to irrigate or not, so the soil moisture influences the agents. Also, After the decision is made, the result of decision impacts the soils moisture. If agents decide to irrigate, the soil moisture will increase. Otherwise, the soil moisture will decrease due to evapotranspiration and percolation.\nSoil moisture is dependent on various conditions, such as the infiltration rate, percolation rate, evaporation, and transpiration. The dynamics of soil moisture can be modeled based on a SD approach."}, {"title": "5.2. System Architecture", "content": "After specifying the system's characteristics, it's time to design the system architecture. In this phase, various agent types need to be identified and ultimately, the overall structure of the system designed.\nDescription of agents:\n\u2022 Central agent: This agent is the core of the system, controlling information flowing in the system, warnings and errors. This agent can transmit necessary information to other agents based on occurring events.\n\u2022 Irrigation control agents: These agents have the decision-making ability for irrigation based on available data, deciding whether to irrigate or not.\n\u2022 Sensors: These agents are responsible for data collection and, when necessary to share data, transmit it through the network.\nSystems overview:\nConsidering the system's goals, agents' specifications, and their interactions, it's time to design the overall system structure. This system operates in an environment including:\n\u2022 Time\n\u2022 Weather conditions\n\u2022 Soil properties\n\u2022 Crop information\nOn the other hand, the following agents exist in the system:\n\u2022 Central agent\n\u2022 Irrigation control agents\n\u2022 Sensors\nThe protocols available in the system are:\n\u2022 Irrigation: Rules related to irrigation.\n\u2022 Send notifications to the user: rules related to communication with the user.\n\u2022 Measurement of environmental parameters: rules related to the measurement of parameters\n\u2022 Error detection: Error detection rules.\nAnd finally, the perceptions of the system are:"}, {"title": "5.3. System Details", "content": "In the final phase of modeling using the Prometheus methodology, it's time to delve into the system's details. This phase includes the following steps:\n\u2022 Define existing processes in the system\n\u2022 Defining other specifications, including events and other parts of the system\n\u2022 Precisely defining the behaviors of the agents\nThis system includes the following processes:\n\u2022 Environmental parameters measurement process: In this process, environmental parameters are measured by sensors and sent to the system. During this process, the system should be able to identify measurements that seem to be wrong (due to measurement errors) and inform the user in this case.\n\u2022 Automatic irrigation process in the presence of sufficient water: in this process, environmental parameters such as the rate of evaporation and transpiration, the predicted amount of rain, etc. According to the coefficients of the plant and its transpiration, irrigation is done if needed.\n\u2022 Automatic irrigation process in the presence of sufficient water: in this case, the calculations are the same as before and the only difference is that instead of watering as much as the plant needs, a part of this need is provided.\n\u2022 Manual irrigation: In this case, the system only performs irrigation based on the schedule tables given to it by the user.\nDefining other system specifications: One of the critical steps in the third phase of modeling using the Prometheus methodology is defining other system specifications. In this section, the events are introduced.\nEvents can happen at a time that may be specified or random, and depending on this event, the system or the environment will change. The events in this system are as follows:\n\u2022 Events related to climate change: including temperature changes, the amount of received ultraviolet rays, and rainfall. These values are measured in time cycles and are reported to the system if they change. Irrigation is done based on the amount of evapotranspiration calculated based on these factors.\n\u2022 Events related to changes in soil moisture: these changes are measured in specific time cycles and their value is reported to the system. If the soil moisture is less than the calculated limit, irrigation is done.\n\u2022 Events related to a critical decrease or increase in the amount of water in the soil: these events indicate an error in calculating the amount of water in the direction of irrigation and cause a change in the normal scenario of the system.\n\u2022 Events related to water shortage: situations in which the system detects water shortage and reduces the amount of irrigation according to the expert's opinion.\n\u2022 Events related to system failure: In these cases, the system has problems in performing its function and is forced to send a message to the user due to the change in the current scenario.\nPrecisely defining the behaviors of the agents:\nProcesses in this system are based on predefined rules. The proposed system performs its actions based on the real- time data measured by sensors or received from online weather forecast services. In this IoT-based system, different agents exhibit various behaviors, depending on specific events and scenarios. Also, some rules are defined to detect miscalculation or hardware malfunctions and notify the user. Each agent performs its action based on its current situation."}, {"title": "6. Computer Simulation", "content": "One of the key benefits of creating agent-based models for IoT networks, is the ability to simulate the systems behavior. Sometimes it's necessary to create a simulation model to investigate the performance of the system. In our proposed model, it is possible to examine the system behavior with focus on irrigation control agent rules. Also, there is a possibility to model the irrigation system and its surrounding environment in simulation software. By existence of simulation software, like AnyLogic software, it is possible to create a copy of real-world systems in computers as a simulation model. It is recommended to run and examine the complex systems behavior on simulation software in order to improve the systems design. In addition to computer simulation, it is possible to use real-time data in order to monitor the implemented systems by running the agent-based model with real-time data.\nAnyLogic software (AnyLogic 8.7.11 Professional) was used in order to model the system. Ease of modeling with this software, using JAVA programming language and possibility to combine agent-based and system dynamics approaches to create hybrid and dynamic models are the reasons that this simulation software was selected."}, {"title": "6.1. Modeling the agents", "content": "Three main agent types exist in proposed model. These agent types are:\n\u2022 Central agent\n\u2022 Controller agent\n\u2022 Sensors\nThese agents are implemented with same structures, but behaving with different rules."}, {"title": "6.2. Examination of the soil moisture dynamics model", "content": "In this section we test the SD model of soil moisture dynamics. The validation and verification of the SD model is important due to the reason that it models the environment of the agent-based model. The model must be a true model conceptually and also, be implemented true on simulation software. In order to investigate that the model concept have been truly created, the water movement and soil moisture dynamics was studied and the comments from experts was considered. In the case of the scenarios with true inputs such as evapotranspiration rate and infiltration rate, the model's functionality should be correct, Also the expected values of stocks, based on input and output rates were examined. These tests showed that the model was working correctly, if the input values were correct. In addition, the model's behavior on different conditions and extreme parameters was tested in order to examine its behavior."}, {"title": "6.3. Examining the manual irrigation control rules by simulation", "content": "After implementing the proposed system with an agent-based approach on AnyLogic software, irrigation control rules were examined by several experiments on simulation. Two types of irrigation control exist in proposed system. Scheduled control, which is used when user decides to plan the irrigation or at the cool hours after the sunrise, and the automated control.\nThe stoppage of the irrigation when it starts to rain is depicted in Fig. 10. Also, the system's scheduled irrigation rule is depicted on Fig. 11. The Fig. 12, shows the systems automatic irrigation rule for every morning."}, {"title": "6.4. Examining the system's performance in automatic irrigation", "content": "In this section, the automatic irrigation rule is examined. Fig. 13 shows the system performing irrigation rules in time periods.\nIn preferred model, several parameters exist. Many of these parameters are influential on the system's performance. These parameters may relate to the environment (like reference evapotranspiration rate), crops (crop factors), or the soil (like soil's infiltration rate). The mentioned parameters and their shorten names are listed in Table 5. These parameters can vary based on environmental factors like soil type. The proposed system must operate in different combinations of these parameters. While it is possible to test the model under a as there are 13 factors, it is time consuming to test the system's performance in all combinations of the parameters. Due to this limitation, a robust method was utilized to test the system. Some of the existing factors are controllable (like irrigation rate), and some of them are uncontrollable (like soil infiltration rate). 256-run resolution V fractional factorial designs with 13 factors was applied to the system to check its sensitivity to controllable and uncontrollable factors in three main types of soil. In fact, the model is tested based on parameters related to sandy, silty, and clay soil because all soil types are a mixture of these three main soil types. Moreover, resolution V design was chosen because it estimates all main effect and two factor interactions.\nIf the system operates acceptable in all combinations of the uncontrollable parameters in three main types of soils, it is possible to set the controllable parameters on appropriate values to optimize the system's performance.\nFour responses were chosen for the test:\n\u2022 The number of times that the soil moisture decreased to levels under the threshold point: It is unacceptable if the soil moisture decreases to levels under the threshold point\n\u2022 Total percolated water: It is unacceptable if the system irrigates that much the water gets percolated to deeper levels of soil\n\u2022 Total irrigated water: In optimal conditions, this response must be equal to the total evapotranspirated water\n\u2022 Total time that the system was operating: This response is studied to minimize the system's operational time"}, {"title": "6.5. Summary", "content": "In this section, the designed system was examined in general. At first, the soil moisture dynamic sub-model was examined to validate and verify the model.\nIn the next step, the static rules of the system that regularly start or stop irrigation at the desired time were examined. It seems that these rules are correctly activated at the right time.\nFinally, the automatic irrigation law was also examined. This rule was tested in 256 different runs and in three different soil types, and it performed well in all different combinations of high and low levels of controllable and uncontrollable factors. No amount of water was wasted in any case and the system never reached the soil moisture limit. On the other hand, the simulation results were also used to minimize the operating time of the device, and to achieve this goal, the irrigation rate and Length of the system's working periods should be set to their upper levels."}, {"title": "7. Conclusions", "content": "The primary objective of this study was to design a smart IoT-based irrigation system using an agent-based approach. The agent-based approach offers numerous benefits. Given the complexity of IoT networks, it is advisable to employ an appropriate approach for designing such systems.\nGiven the possibility of utilizing agent-oriented software engineering methodologies, we opted for the Prometheus methodology. Employing this methodology enables the structured design of an agent-based system. Also, an SD model was employed to represent the environment. This work presents the first instance of using a system dynamics approach to model the environment in the design of an irrigation system. By integrating SD with agent-based modeling, it became possible to analyze the mutual influences between the system and its surrounding environment.\nTo form the system's behavior, several functional rules were designed for different agent types. Following the design of the system's model, it was implemented in AnyLogic computer software to simulate the system and examine its operation. This hybrid model was validated and verified based on behavioral checks and was tested in several experimental runs.\nThe system's performance was tested in different conditions. In manual mode, the system was tested to ensure that it stops irrigation while raining and irrigates during the irrigation time windows. Also, the morning irrigation rule was tested. Moreover, the irrigation behavior in automatic irrigation mode was also tested by examining the effect of different factors on irrigation efficiency with a resolution V, 2^13-5 experimental design in three main soil types.\nAccording to the simulation results, the system effectively maintains soil moisture within the suitable range while minimizing percolated water. Additionally, response surface and contour plots were utilized to explore the impact of influential factors on the system's operational time. Based on these results, it is recommended that operating period times and irrigation rates be set at their highest possible levels to minimize the system's energy consumption.\nThe following are suggested for the future research:\n\u2022 Considering the soil chemical balance in irrigation rules: This study managed the parameters to sustain effective moisture tension in the root zone, future activities could incorporate the control of soil chemical balance.\n\u2022 Providing a robust method for prioritizing the crops for irrigation in water scarcity scenarios: Although the present research provided an optimized amount of irrigation, future research should provide a robust method for prioritization of the crops, to be irrigated in water deficit situations.\n\u2022 Adding the capability of gathering data like plant images to check the plant's growth: This can be done by integrating Image Processing and machine learning that will help in assessing the plant health status through image processing [40].\n\u2022 Utilizing the fuzzy sets to enhance the provided rules: Fuzzy sets can be used to improve the current rules to resolve the ambiguity of data [16].\n\u2022 Utilizing Reinforcement learning to minimize systems operational time: In this article system performance was evaluated under several simulation runs; however, it is possible to use reinforcement learning to optimize the operation of the system and provide a comparison with the existing model."}, {"title": "Declaration of generative AI and AI-assisted technologies in the writing process.", "content": "During the preparation of this work the authors used Gemini and Chat GPT online services in order to check the writing and paraphrase the article's text. After using this tool/service, the authors reviewed and edited the content as needed and takes full responsibility for the content of the published article."}, {"title": "Data availability", "content": "Data will be made available on request."}, {"title": "Funding Sources", "content": "This research did not receive any specific grant from funding agencies in the public, commercial, or not-for-profit sectors."}]}