{"title": "Quantum Algorithms for Drone Mission Planning", "authors": ["Ethan Davies", "Pranav Kalidindi"], "abstract": "Mission planning often involves optimising the use of ISR (Intelligence, Surveillance and Reconnaissance) assets\nin order to achieve a set of mission objectives within allowed parameters subject to constraints. The missions of\ninterest here, involve routing multiple UAVs visiting multiple targets, utilising sensors to capture data relating\nto each target. Finding such solutions is often an NP-Hard problem and cannot be solved efficiently on classical\ncomputers. Furthermore, during the mission new constraints and objectives may arise, requiring a new solution\nto be computed within a short time period. To achieve this we investigate near term quantum algorithms that\nhave the potential to offer speed-ups against current classical methods. We demonstrate how a large family of\nthese problems can be formulated as a Mixed Integer Linear Program (MILP) and then converted to a Quadratic\nUnconstrained Binary Optimisation (QUBO). The formulation provided is versatile and can be adapted for many\ndifferent constraints with clear qubit scaling provided. We discuss the results of solving the QUBO formulation\nusing commercial quantum annealers and compare the solutions to current edge classical solvers. We also analyse\nthe results from solving the QUBO using Quantum Approximate Optimisation Algorithms (QAOA) and discuss\ntheir results. Finally, we also provide efficient methods to encode to the problem into the Variational Quantum\nEigensolver (VQE) formalism, where we have tailored the ansatz to the problem making efficient use of the\nqubits available.\nKeywords: Quantum Annealing, QAOA, VQE, QUBO, Mission Planning", "sections": [{"title": "1. INTRODUCTION", "content": "Techniques for efficiently generating routes for Unmanned Ariel Vehicles (UAV's) have many practical impli-\ncations including delivering goods and image sensing. Previous models1,2 for similar problems focus on the\nlogistics for vehicles on land, so do not directly translate into this setting as the vehicles are constrained to roads\nand other land related conditions, whereas UAV's motions have far fewer limitations. The mission planning\nproblems we wish to solve are often variants of the many-agent travelling salesman problems3,4 with additional\nconstraints5\u20139 which often then become NP-hard problems. Efficient classical solutions therefore seem unlikely,\nhowever there could be potential for speedups using quantum algorithms. UAVs will be equipped with different\nsensors such as Electro-Optic (EO), Infrared (IR) and SAR (Synthetic Aperture Radar) sensors depending on\nthe mission. Each sensor type has different characteristics in terms of range, resolution (in range and bearing)\nand all-weather capability etc. The UAVs will need to arrive within a given distance in order to capture sensor\ndata and to return to a base station in order to download the captured data.\nBy finding the optimal use of the resources, we allow the improvement in human machine teaming by alleviating\nthe analyst of more nugatory tasks and thereby moving the analyst higher up the value chain. This in turn\ncan yield reduced operator workload, improved situational awareness and ultimately greater mission efficacy. To\navoid committing to any specific drone mission problem, we formalise the problem as generally as possible, in\norder to encapsulate as many drone mission problems as possible. For the use cases we imagine, drone mission\nplanning consists of having several drones capable of performing many different operations, starting from several\nbases. Each drone has its own set of parameters such as battery life and functionality (possibly many). The goal\nwill be to find a set of routes for all drones, such that they don't crash, all sites requiring a drone of specific type\nof drone will be visited by a drone capable of the required functionality, within some time window. All drones\nmust then return to their required base before they run out of battery. We can allow for drones to return to"}, {"title": "2. BACKGROUND", "content": "In this paper we investigate the potential of quantum solvers for the travelling salesman problems and their\nvariants.19 This is an inherently classical problem and we will need to use a series of reductions from the original\nproblem formulation in order to be compatible with quantum algorithms. Here, we outline the several problems\nand explain how they can be converted into each other."}, {"title": "2.1 Mixed Integer Linear Program (MILP)", "content": "A Mixed Integer Linear Program (MILP) aims to minimize the cost function $c^Tx$, subject to linear constraints\nthat a feasible solution $x$ must satisfy.\n$\\min_{x\\in\\mathbb{Z}^n} c^T x$\nsubject that $l\\leq Ax \\leq u, x_l \\leq x \\leq x_u,$\nwhere $x \\in \\mathbb{Z}^m, A \\in \\mathbb{Z}^{n\\times m}, l, u \\in \\mathbb{Z}^m$ (1)\nSome of the best known solvers of MILP problems are Gurobi20 and CPLEX, 21 which are commercial solutions.\nThese utilise the branch and cut algorithm to efficiently find solutions to the MILP problems. Gurobi performs\nmuch better on average22 compared to open source solutions such as GLPK.23 Gurobi is used to benchmark our\nquantum algorithms. Despite the idea that linear constraints can seem restrictive to what problems can be cast\ninto this form, by increasing the dimension of $x$, non-linear constraints can become linearized.\n\u2022 Suppose we have a binary bit $b \\in \\{0,1\\}$ and we wish $c^Tx \\leq d$ to hold in the case that $b = 1$. We achieve\nthis by picking a large enough constant $M$ such that $\\forall x, c^Tx - M < d$. We can then use the inequality\n$c^Tx - (1 \u2212b)M < d$, to achieve the required result.\n\u2022 Suppose we have two inequalities $c_f^Tx < d_0$ and $c_1^T x < d_1$, and we wish for at least one of these inequalities\nto hold but have no preference. We introduce an extra binary variable $b \\in \\{0,1\\}$ and use it to turn off one\nof the equalities. We would then instead use $c_f^Tx \u2013 (1 \u2013 b)M_0 \u2264 d_0$ and $c_f^Tx - bM_1 \u2264 d_1$ instead.\n\u2022 Suppose we have a binary bit $b \\in \\{0,1\\}$ and we want the equality $c^Tx = d$ to hold in the event $b = 1$. We\ncan achieve this by asking for the weak inequality to hold in both directions when $b = 1$. Here we will use\n$c^Tx - (1 - b)M_0 \u2264 d$ and $c^Tx + (1 \u2212 b)M_1 \u2265 d$\n\u2022 Suppose we have several bounded integer variables $X_i$ and we wish to find $\\min_x \\max_i X_i$. We can achieve\nthis by introducing an additional variable $X$ and then solve the problem $\\min X \\text{ s.t. }\\forall i X_i \u2264 X$"}, {"title": "2.2 Quadratic Unconstrained Binary Optimisation (QUBO)", "content": "Quadratic Unconstrained Binary Optimisation (QUBO) problems aim to minimize the value of $x^TQx$ where\n$x \\in \\mathbb{Z}^n$ is a binary vector and $Q \\in \\mathbb{R}^{n\\times n}$ is a real valued symmetric matrix. With a polynomial overhead\nin size, a MILP instance can be converted into a QUBO.24 This is achieved by using binary expansions of all\ninteger variables. Each linear constraint, $C_i$ is then manipulated into their own QUBO, $P_i$, which is minimised\nexactly when the constraint is satisfied. The resulting QUBO from the MILP formulation is then given by\n$Q = diag(c) + \\Sigma_i\\lambda_i P_i$, where $\\lambda_i$ are hyperparameters that weight all the constraints, these must be chosen high\nenough, such that it is never beneficial to violate a constraint in order to reduce $c^Tx$. There exist many classical\nheuristic algorithms for QUBOs such as Gurobi, and simulated annealing.25"}, {"title": "2.3 Ground State Problem", "content": "The Ground State Problem (GSP)26,27 is given a Hamiltonian, $H$, find the quantum state $|\\psi\\rangle$, which minimizes\n$\\langle\\psi| H |\\psi\\rangle$. A QUBO instance can be converted into this problem by using a change of variables $x_i \\rightarrow z_i = 1-2x_i$.\nThe function we wish to minimize is then $x^TQx = \\sum_{i,j} Q_{i, j} x_i x_j = \\sum_{i,j} Q_{i,j} z_i z_j$, where $Q$ is the transformation of\n$Q$. We can write the QUBO instance as the Ground State Problem with $H = \\sum_{i,j} Q_{i,j}Z_iZ_j$. When benchmarking\nthese problems, the quantity used for comparisons is the Average Ratio (AR), $AR(|\\psi\\rangle) = \\frac{\\langle\\psi| H |\\psi\\rangle}{H_{min}}$. It is hoped\nthat if we obtain state $|\\psi\\rangle$ with AR close to 1, measuring this state will then yield close to optimal solutions to\nthe corresponding QUBO. There are many different approaches suggested for this problem including:\n\u2022 Quantum annealing. 28, 29 This exists in a weaker paradigm of quantum computing that does not yield\nuniversal computation. A quantum state in the ground state of $H_x$ is constructed and evolved under the\nHamiltonian $H(t) = (1 \u2212 f(t))H_x + f(t)H_g$, where $f(0) = 0, f(T) = 1$. As long as $f$ varies sufficiently\nslowly, the state $|\\psi(t)\\rangle$ should remain close to the ground state of $H(t)$ due to the adiabatic invariance.30\nThe goal is to encode a solution to the ground state of the $H_G = \\sum_i x_iZ_i$. This way the ground state is\nguaranteed to be in the computational basis and and can be obtained directly by measuring $|\\psi(t)\\rangle$. Current\ntechnology limits the weight of $z_i$ to be at most 2, so the problem we are interested in must be formulated\nas a Quadratic Unconstrained Binary Optimisation (QUBO).\nWe evolve the state for time, $T$, and then measure the state $|\\psi(T)\\rangle$ in the computational basis and read\noff the ground state.\n\u2022 Variational Quantum Eigensolver. This approach is to use a parameterised quantum circuit $U(\\theta)$ to con-\nstruct the quantum state $|\\psi(\\theta)\\rangle = U(\\theta) |\\psi_0\\rangle$. Expectations are then taken to approximate $\\langle\\psi(\\theta)| H |\\psi(\\theta)\\rangle$.\nClassical machine learning approaches are then chosen to update $\\theta$ in order to minimize $\\langle H \\rangle$.\n\u2022 Quantum Approximate Optimisation Algorithm (QAOA), which is a special type of VQE where the ansatz\ncircuit is chosen to mimic the Lie-Trotter factorisation of $e^{i(A(t)H_{fin}+B(t)H_{mixer})}$, so in principle can simulate\nquantum annealing. The circuit has parameters $\\gamma, \\beta$ and the circuit is alternating blocks of $e^{i\\gamma_i H_{fin}}$ and\n$e^{i\\beta_i H_{mixer}}$. Expectations of the final state are then computed and used with a classical optimiser to train\n$\\gamma, \\beta$."}, {"title": "3. ANNEALING BASED APPROACH", "content": "3.1 Problem Definition\nWe mathematically model the problem as follows. Let G be a complete, undirected, multi-dimensional weighted\ngraph, where the nodes, V, consist of bases and locations to visit, and edges E be the possible paths between\nnodes (travelling in straight line) with associated edge parameters, such as the time to travel between vertices,\nthe battery used to traverse the distance, or cost of taking this edge. Let K be a set of labels of functionalities\n(representing the diverse set of functions the group of drones can perform). Each drone, dronei, has a base\nvertex, vi \u2208 V, in which the drone must begin and end its journey. A valid route set is a set I of routes in G\nsuch that for every drone di \u2208 D, there exists a route \u03b3\u2208 \u0393, starting and finishing at bi such that the drone\nhas not exceeded its battery or capabilities. The drone has the correct functionalities for vertices that it visits\nand performs the tasks at. The total time taken for the journey is below Tmax. The goal is to then to find the\noptimal route set I such that it yields the minimum possible Tmax.\n3.2 Formulation of MILP Model\nIn this section we use the following notation for the problem defined in section 3.1:\nWe model the problem as a complete graph, where the nodes are locations that the drones may visit. Certain\nedges and nodes belong to groups that possess different characteristics.\n\u2022 Vo - These are the nodes with objectives that must be visited during the mission.\n\u2022 V\u2081 - These are the nodes which are intermediate, they don't have to be visited. This includes nodes at\nwhich drones may recharge but also be additional nodes added to the problem in an attempt to produce\nsmoother routes for the drones.\n\u2022 Vs - These are nodes at which a drone starts the mission.\n\u2022 VE - These are nodes at which a drone must end the mission.\n\u2022 Vrec - These are nodes at which drones can recharge their batteries.\n\u2022 Eo - These are edges with objectives that must be traversed (in either direction).\n\u2022 E1 - These are edges which are intermediate. They don't have to be traversed.\nThe important properties of the graph are:\n\u2022 Ta,b - The time taken to traverse from a to b and then complete the objective at b.\n\u2022 Bab - The battery used to traverse from a to b and then complete the objective at b.\n\u2022 qa - The quantity of the goods the drone must use for the objective at a. This could be memory or payload.\nEach drone also has its own set of parameters:\n\u2022 Bmax - The maximum amount of battery the drone can possess.\n\u2022 Bhov - The rate at which battery is used whilst hovering.\n\u2022 Qmax - The maximum quanity of goods the drone can possess.\n\u2022 Brecharge - The rate at which the drone recharges.\n\u2022 D - A possibly unique ID that contains binary variables of what capabilities the drone possesses."}, {"title": "3.3 Toy Example with Quantum Annealing", "content": "Problem instances that can be run on current quantum annealers are constrained by their size as well as their\ndecoherence times and the connectivity between qubits. This makes any moderately sized instance of the problem\ntoo large to run on current hardware. Instead, we attempt to solve the toy model in fig. 1 on the D-Wave Leap's\nHybrid solver. The solver combines quantum annealing with classical algorithms in a hybrid approach which\nis kept private by D-Wave, limiting what we conclusions we can speculate from the results. We encoded the\nproblem into a MILP instance as in eq. (1) and then converted into a QUBO with 275 variables for us to then\nsubmit to the D-Wave platform. Out of the 100 attempts to solve the problem with an average processing time\nof 3 seconds on the Leap's Hybrid solver, which is a combination of both quantum and classical processing times,\nwe were able to find a valid solution 4 times, and all of them were optimal solutions. More time can be spent\ntuning the hyperparameters of the QUBO to balance the constraints, but this is left for future work."}, {"title": "3.4 Toy Example with Classical Solver", "content": "Current classical solvers do not possess the same size constraints as quantum solvers and can be run on problems\nof thousands of variables with thousands of constraints, so we are able to run the MILP formulation of the\nproblem on much larger problem instances. We were able to find efficient solutions to the problem instance in\nfig. 2. One potential issue we encountered was, since we were optimising over the time for the last drone to return\nto base, there was no incentive for the penultimate (or in fact any faster drone) to return to the base earlier than\nis required. Some drones would wait at intermediate nodes until all nodes can return at the same time. This\ncould be resolved by not allowing the drone to wait to complete the mission once the paths are chosen, but this\nwould not help with the faster drones taking inefficient paths. To solve this we ran multiple problem instances\nin succession as follows.\n1. Run the solver on the full MILP.\n2. For each drone route found, run the solver on a reduced MILP (with only the one drone, that must visit\nthe same objective nodes and edges, but can now take a more efficient route) as the MILP is smaller and\nthe solver can be more effective.\n3. Take the individual drone route with the longest time to return to base and fix the route. Remove the\nrequired nodes and edges visited from full MILP formulation and reduce the number of drones by one.\n4. If there are any drones without a set route fixed, return to Step 1.\n5. If required, we run all of the routes together with the 'no crashing' constraints to then ensure the drones\nwait at intermediate nodes to prevent crashes.\nBreaking the problem into many smaller problem instances to solve can be useful to guide the solver towards\ngood solutions, as we understand the structure of the problem and how the constraints are interlaced, a lot\nmore intuitively than algorithm can. Leaving the no 'no crashing' constraints to the end can lead to sub-optimal\nsolutions as there can be many intersections between routes and congestion in the drones routes. Choosing how"}, {"title": "4. QUANTUM ALGORITHMS FOR THE TRAVELLING SALESMAN PROBLEM", "content": "In this section, we focus solely on standard TSP and suggest ways in which we can modify existing quantum\nalgorithms to respect the constraints of TSP."}, {"title": "4.1 Hamiltonian Formulation", "content": "For these algorithms, we focus on the time indexed formulation of travelling salesman problem. 31 The main point\nin this formulation is that a route can described using a permutation matrix $P_\\sigma \\in \\mathbb{R}^{n\\times n}, P_{\\sigma i,j} = \\delta_{j,\\sigma(i)}$. If our\nvariables are $x_{i,j}$ for a permutation matrix, then the cost of a route would be $\\sum_{i,j,t} d_{i, j}x_{i,t}x_{j,t\\oplus 1}$. Fixing the first\nnode in the route will reduce redundancy in the description by removing cyclical solutions from the search space.\nTo ensure our variables truly form a permutation matrix, we must then also have the constraints $\\forall i \\sum_j x_{i,j} = 1$\nand $\\forall j i \\sum_i x_{i,j} = 1$. At this stage, we could reduce the MILP formulation into a QUBO using previously discussed\ntechniques. This would then increase the search space of the solutions from $n! = O(2^{nlog(n)})$ to $2^{n^2}$. Instead\nwe propose modifying existing algorithms from section 2.3 to preserve the structure of permutation matrices\nsuch that for all possible circuit parameters, $U(\\theta) |\\psi_0\\rangle$ only has support on computational states which are\npermutation matrices."}, {"title": "4.2 Motivation", "content": "The subspace of the Hilbert Space where our constraints are satisfied is spanned by computational states which\nare also permutation matrices, $P = \\{|\\psi\\rangle|\\langle\\psi| = \\sum_{\\sigma\\in P} |\\sigma\\rangle\\langle\\sigma|\\}$. If we choose to build $U(\\theta)$ of gates that leave $P$\nas an invariant subspace, then $U(\\theta) |\\psi_0\\rangle \\in P \\Leftrightarrow |\\psi_0\\rangle \\in P$. So it would suffice to prepare the initial state to\nbe a superposition of permutation matrices, such as $|\\psi_0\\rangle = \\frac{1}{\\sqrt{n!}}\\sum_{\\sigma\\in P} |\\sigma\\rangle$, which can be achieved efficiently.32\nIn our VQE circuit and QAOA inspired circuit, we carefully choose the gates in $U(\\theta)$ to have this invariance\nproperty. 33 Since our desired subspace contains a lot of symmetry, there are many natural sets of gates that\nhave the required property. As the computational states are permutation matrices, any operation that preserves\npermutation matrices will have this property. A natural choice here would be permuting the rows and columns.\nLet $(\\sigma,\\tau)$ be a pair of permutation matrices. Then the unitary defined by $V_{(\\sigma,\\tau)} : |p\\rangle \\rightarrow |\\sigma p\\tau\\rangle$ would leave $P$\ninvariant. Moreover, this gate would be comprised only of performing swap gates on the qubits and is efficiently\nimplementable. In order to have parameterisable gates, we restrict ourselves to the case where $\\sigma^2 = \\tau^2 = I$."}, {"title": "4.3 Q-SWAP", "content": "We take inspiration from this formalism and make changes that should allow us to optimise entirely within the\nspace of feasible solutions and also allow for more adaptability in the search space, allowing us to arrive at the\nground state faster.\nThe algorithm Q-SWAP, shown in fig. 3, is defined as follows:\n1. Prepare the initial state $|\\psi\\rangle := |\\psi_0\\rangle = \\frac{1}{\\sqrt{n!}}\\sum_{p\\in P}|p\\rangle$ and set counter 0\n2. Apply the gate $e^{i\\delta H}$\n3. Obtain a pair of permutations $\\sigma,\\tau$ (can be random or through an optimisation process)\n4. Estimate $f(\\theta) = \\langle\\psi|e^{-i\\theta V_{(\\sigma,\\tau)}} H e^{i\\theta V_{(\\sigma,\\tau)}} |\\psi\\rangle$ for $\\theta = 0, \\frac{\\pi}{4}, \\frac{\\pi}{2}$\n5. Find values of $A, B, \\phi$ such that $f(\\theta) = A + B cos(2\\theta \u2013 \\phi)$ and compute $\\theta^* = \\frac{\\phi+\\pi}{2}$\n6. Apply $e^{i\\theta^* V_{(\\sigma,\\tau)}}$ to $|\\psi\\rangle$\n7. counter $\\rightarrow$ counter + 1, if counter < steps, return to 2\n8. Take multiple measurements of $|\\psi\\rangle$ and output the route with the minimal cost.\nRemarks:\n1. The justification for step 4, is that since $V^2 = I$, we can decompose $|\\psi\\rangle = \\alpha |V_+\\rangle + \\beta |V_-\\rangle$. The computation\nthen becomes:\n$\\langle\\psi|e^{-i\\theta V} H e^{i\\theta V} |\\psi\\rangle = (e^{i\\theta V} (\\alpha|V_+\\rangle + \\beta |V_-\\rangle))\u2020H(e^{i\\theta V} (\\alpha|V_+\\rangle + \\beta |V_-\\rangle))\n= (e^{i\\theta} \\alpha [V_+\\rangle + e^{-i\\theta}\\beta|V_-\\rangle))\u2020H(e^{i\\theta}\\alpha|V_+\\rangle + e^{-i\\theta}\\beta|V_-\\rangle)\n= |\\alpha|^2 \\langle V_+| H |V_+\\rangle + |\\beta|^2 \\langle V_-| H |V_-\\rangle + e^{2i\\theta} \\alpha\\beta^* \\langle V_-| H |V_+\\rangle + e^{-2i\\theta}\\alpha^* \\beta \\langle V_+| H |V_-\\rangle\n= |\\alpha|^2 \\langle V_+| H |V_+\\rangle + |\\beta|^2 \\langle V_-| H |V_-\\rangle + 2\\Re(e^{2i\\theta} \\alpha\\beta^* \\langle V_-| H |V_+\\rangle\\}\n= A + B \\cos(2\\theta \u2013 \\phi)$\nwhere $A = |\\alpha|^2 \\langle V_+| H |V_+\\rangle + |\\beta|^2 \\langle V_-| H |V_-\\rangle$ and $B e^{-i\\phi} = 2 \\alpha \\beta^* \\langle V_-| H |V_+\\rangle)$.\nOther values of $\\theta$ can be sampled to increase the convergence of $\\phi$, which is the only parameter we require\nfor optimisation, but $\\theta = 0, \\frac{\\pi}{4}, \\frac{\\pi}{2}$ will give us estimates for $A + B \\cos(\\phi), A + B \\sin(\\phi), A \u2013 B \\cos(\\phi)$. which\ncan be used to calculate A, B, $\\phi$ directly.\n2. Optimising $\\sigma,\\tau$ to yield the largest decrease in expectation can be done using classical algorithms and\ntaking expectations. The advantage to this compared to randomly picking permutations is that this will\nallow the circuit to have a lower depth, which is important to keep in mind for NISQ devices. The topic of\nstrategies for choosing optimal $\\sigma, \\tau$ is unclear and the focus of future works. The simple strategies employed\nby us were:\n\u2022 Random 1 swap - Here we fix $\\tau = I$ and aim to pick a strong $\\sigma$. We try this by uniformly sampling from\npermutations of order 2, many times and then choosing sigma with the largest drop in expectation.\n\u2022 Random both sides - Choose a random pair of initial permutations $\\sigma_0, \\tau_0$. We take it in turns optimiz-\ning over $\\sigma$, then $\\tau$, we randomly sample distance 2 permutations and if $V_{\\sigma, \\tau_0}$ yields a greater decrease\nin expectation, we update $\\sigma_0 \\rightarrow \\sigma$. We do the same process for $\\tau_0$ and repeat for a fixed number of\nrounds."}, {"title": "4.4 Variational Quantum Eigensolver", "content": "Here we demonstrate a variable-efficient VQE ansatz to allow us to search only the state space of valid journeys.\nThe circuit is achieved by initialising n registers of length n in a valid permutation, i.e. $|0\\rangle |1\\rangle |2\\rangle ... |n \u2212 1\\rangle$. Our\nansatz circuit is chosen as a combination of parameterised swap gates, which will then allow us to reach all other\npossible permutations. To achieve this with minimal gates/parameters, we have chosen to use minimal sorting\nnetworks35 (the minimal number of swaps needed to reach all possible permutations) as shown in fig. 4. The\nnumber of parameters needed scale is $O(nlog(n))$, and again we have the advantage that our state is constrained\nto always have support on valid states and no additional constraints are needed in the cost function. Here, for\nsimplicity, to calculate the expectation $\\langle\\psi| H |\\psi\\rangle$, we perform many measurements of $|\\psi\\rangle$ to sample from states\ndistribution distribution \\{\\mathbf{x}: |\\langle\\mathbf{x}|\\psi\\rangle|^2, \\mathbf{x} \\in P_n\\} which can the be used to compute an estimate for expected cost\nof the route. There is an interesting trade off between this and the Q-SWAP approach. Here, the number of\nparameters in the model are fixed at the start circuit and then optimised together. In Q-SWAP, however, the\nnumber of variables is linear in the depth of the circuit, which depends on how well the solution can be found.\nIn Q-SWAP, each variable is also individually maximized, which is not the case here."}, {"title": "4.5 Results", "content": "We simulated Q-SWAP and VQE approaches with a noiseless simulator to solve travelling salesman instances\non six and seven nodes as in fig. 5. The results for how the AR varied over the computation is shown in fig. 6.\nThere are two main takeaways from the results. Firstly, there is a clear advantage to putting care into how $\\sigma,\\tau$\nare chosen, which allowed the mutations style approach to vastly outperform sampling random permutations.\nIt is still not clear what would be the best approach to choosing optimal permutations to perturb the state\nby, but this will studied further in future work. Secondly, the plateau of the AR will be correlated to number\nof nodes in the instance. Each iteration of $e^{V_{\\sigma,\\tau} \\theta}$ is simultaneously moving more amplitude into low energy\nstates and moving amplitude from low energy states to higher ones. When a certain threshold of amplitude is\ncongregated into low energy states, it would be beneficial to not change the amplitudes and to choose $\\theta = 0$.\nWhen this threshold has occurred, we must already have a certain amount of amplitude in good states so we can,\nin principle, have a non-trivial percentage of measuring close to optimal routes. How these features are correlated"}, {"title": "5. CONCLUSION", "content": "We have demonstrated a new MILP formulation for multiple drone routing problems which is flexible to accom-\nmodate for a plethora of interesting constraints which weren't simultaneously met by existing models. We have"}]}