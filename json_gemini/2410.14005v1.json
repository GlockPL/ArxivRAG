{"title": "Whisker-Inspired Tactile Sensing: A Sim2Real Approach for Precise Underwater Contact Tracking", "authors": ["Hao Li", "Chengyi Xing", "Saad Khan", "Miaoya Zhong", "Mark R. Cutkosky"], "abstract": "Aquatic mammals, such as pinnipeds, utilize their whiskers to detect and discriminate objects and analyze water movements, inspiring the development of robotic whiskers for sensing contacts, surfaces, and water flows. We present the design and application of underwater whisker sensors based on Fiber Bragg Grating (FBG) technology. These passive whiskers are mounted along the robot's exterior to sense its surroundings through light, non-intrusive contacts. For contact tracking, we employ a sim-to-real learning framework, which involves extensive data collection in simulation followed by a sim-to-real calibration process to transfer the model trained in simulation to the real world. Experiments with whiskers immersed in water indicate that our approach can track contact points with an accuracy of < 2 mm, without requiring precise robot proprioception. We demonstrate that the approach also generalizes to unseen objects.", "sections": [{"title": "I. INTRODUCTION", "content": "Whiskers, or vibrissae, are vital sensory organs that enable animals to acquire crucial information about their environ-ment, especially in situations where vision is compromised. In low-light or cluttered environments, terrestrial animals like rats and cats use their whiskers to detect and navigate around obstacles, effectively sensing nearby objects and surfaces [1]. Similarly, underwater animals such as pinnipeds, which have limited visual acuity in turbid water, rely on their sensitive whiskers to detect and differentiate objects as well as analyze water movements [2]-[4], aiding them in prey detection and navigation.\nUnderwater robots similarly can benefit from whiskers in cluttered scenarios. Robots such as OceanOne sometimes operate in murky water and have even become stuck on underwater obstacles [5]. If cameras are not able to see where the contact occurs, freeing the robot may require external assistance. Recently, commercial counterparts to OceanOne have been developed (e.g. [6]) and these too may benefit from contact or proximity sensing for safe operation.\nAlthough whiskers are not as widely employed in robotics as other sensing modalities, a number of examples appear in the literature. Some approaches involve active whisk-ing mechanisms with rotational joints and actuators at the whisker base [7]-[10], while others utilize passive whiskers for contact sensing and tracking [11]\u2013[14]. Most designs incorporate a thin elastic rod attached to a one- or two-axis base sensor to detect contacts at the whisker tip or, in more advanced applications, to track continuous contacts along a deflected whisker. Additional discussion on prior related work is included in Section II.\nIn the present work we report on whiskers designed for underwater operation (Fig. 1). The transduction technology employs optical fibers with Bragg gratings (FBGs) enbedded within 3D printed structures. The whiskers are Nitinol (TiNi) wires. This choice of technology is motivated by the ultimate application: operation in deep, corrosive salt water with large changes in ambient pressure as the robot moves up and down. Optical fibers with FBGs have demonstrated robustness in harsh environments, including deep oil and gas wells [15]. Functioning as optical strain gages, they are highly sensitive, able to resolve strains of 10-5. Strains in the FBGs produce shifts in reflected optical wavelengths, which are read by an optical interrogator. The interrogator can be located as much as 1 km away, allowing it to reside on a surface boat while the robot operates below. In addition, it is possible to arrange dozens of FBGs along a single fiber, each with a sightly different nominal wavelength and sample all of them at 2 kHz rates.\nApart from the process of converting whisker deflections to data, there are a number of issues associated with interpret-ing the results. In comparison to some previous work, we use pre-curved whiskers to avoid the highly nonlinear buckling behavior that can occur when straight whiskers approach a surface in the axial direction. In addition, we are interested in knowing not only when the tip of a whisker makes contact but also the path of the contact location as a curved whisker brushes over a surface. With this information we can track whisker/surface contacts and ultimately reconstruct surfaces.\nContributions: We introduce a whisker sensor design that uses a single optical fiber with multiple FBGs to record data"}, {"title": "II. RELATED WORK", "content": "from a patch of whiskers. Although the use of optical fibers for whiskers or whisker-like sensors is not unprecedented [16]-[21], the design presented here is particularly suited for tracking whisker/surface contacts and for operation in the deep ocean, as it is unaffected by saltwater or high ambient pressure.\nIn contrast to our previous work [22], which used Bayesian methods and relied on accurate proprioception data from the robot, we use a deep learning approach to track whisker/object contacts. To meet the requirement for large amounts of data, we employ a sim-to-real framework with the following components: (1) a digital twin in MuJoCo to generate large-scale datasets of whiskers sweeping over vari-ous objects from the YCB dataset, (2) a deep learning model based on a transformer-decoder architecture that processes sensor signal history to predict the next contact location, and (3) a calibration method that maps real-world signals to simulation signals using Gaussian Process Regression (GPR). The overall framework is shown in Fig. 2. This approach does not rely explicitly on robot proprioceptive data and is therefore suitable for use on a mobile robot, which may be subject to drift.\nTo validate the effectiveness of our design and methods, we conduct experiments in both simulated and real-world environments, including tests in air and immersed in water. The water tests are conducted using a robot arm to drag a set of whiskers through a shallow water tank; this is a first step toward operation on a mobile robot in deep water. A variety of previously identified and new, unseen objects are evaluated, with our metric measuring the distance from predicted contact points to the nearest object surface. Our experiments demonstrate that our method achieves contact prediction accuracy within 2 mm for most objects. The main discrepancies arise from imperfect whisker/object tracking as whiskers slide over surfaces with steep vertical angles or abrupt changes in contour. Additionally, we conduct an ablation study on the impact of different movement speeds to show robustness in real-world applications."}, {"title": "A. Robotic Whisker Sensing", "content": "In comparison to the approach of considering only tip-contact for relatively stiff whiskers, some works have con-sidered continuous contacts along complaint whiskers as they brush over surfaces. Early approaches consisted of a flexible beam, a rotation motor, and a torque sensor, to locate contact points using rotational compliance [7, 8]. Subsequent works were able to discriminate various object shapes by measuring deflection angles and velocities [9, 11]. A recent review of whisker sensing in robotics is provided in [23].\nOther work has employed model-based methods to esti-mate contact points using a 3-axis force sensor at the base of a compliant whisker in 3D [12]\u2013[14]. The solution is not straightforward, however, because isolated torque mea-surements at a compliant whisker base do not correspond to a unique contact location. Additional information can be incorporated for higher accuracy. For example, [22, 24] achieved an accuracy of within 2mm for contact tracking using a Bayesian filtering method that incorporates the known velocity of the whisker base on a robot arm moving among stationary objects. For a mobile robot, we desire an approach that does not require this information.\nWhiskers in water are also useful to detect water currents, for example from nearby moving objects. This is perhaps the most important use of whiskers in pinnipeds, and it has been used in robotic implementations as well [25]-[27]. Some works also use optical fiber-based whiskers to detect flow and vortices. For example, [19] estimate the direction and velocity of flow disturbances by treating the optical fiber as a whisker and sensing the strain applied at the base using one FBG sensor. In [20] a resin whisker with a shaft embedded with four FBG sensors measures flow velocity. Our work focuses on contact detection with thin, metallic whiskers"}, {"title": "B. One-shot Sim-to-Real Transfer", "content": "The rapid advancement of deep learning has led to a pivotal change in robotics research, steering it toward ap-proaches that require large datasets for training purposes. However, generating such datasets using robots can be pro-hibitively expensive and time-consuming. To address this challenge, robotic simulators like PyBullet [28], MuJoCo [29], Drake [30], and Isaac Sim [31] have been developed, enabling efficient and cost-effective data collection.\nWhile these simulators are becoming increasingly accu-rate, they are implemented based on a set of physical models and, therefore, imperfect. To bridge the reality gap, one-shot transfer techniques like domain randomization and sys-tem identification are employed [32], perturbing visual and dynamics parameters (e.g., texture, lighting, camera pose, friction, damping, and geometry) and identifying physical parameters through real-to-sim-to-real calibration to align simulations with reality, thereby improving model transfer-ability. These methods have facilitated the successful transfer of learned models to physical tasks such as navigation [33]- [37], locomotion [38]-[41], and manipulation [42]-[45].\nWe follow a similar methodology by simulating whiskers in MuJoCo. We align the whisker shape in simulation to real world measurements, and brush whiskers against various objects in simulation with different trajectories and veloci-ties, generating a large dataset for training purposes. While it is common to align simulation data with real-world data, we instead calibrate measured shifts in FBG wavelengths to match simulated torque (bending moment) signals, as described in Section IV. This \"real-to-sim\" calibration allows us to deploy our model for navigating real-world scenarios, although it limits performance to the fidelity of the simulator's dynamics."}, {"title": "III. SENSOR DESIGN AND FABRICATION", "content": "Fig. 3 shows an overview of our underwater sensor design and components. The whiskers consist of thin, precurved, super-elastic ASTM F2063 nitinol wires, 0.3 mm diameter, with a distal 20 mm arc radius, and a 60 mm total length (Fig. 3). An advantage of using nitinol is that it resists plastic deformation if the whisker is accidentally smashed against a surface.\nThe base of the wire is inserted and glued into a 3D printed structure (Stratasys Objet24 with VeroWhitePlus, accuracy \u2248 0.1 mm.). The structure consists of an undulating track with a groove, into which an optical fiber is placed and glued. The trajectory of the groove is dictated by the 8 mm minimum bend radius of the fiber. The fiber is Corning Ultra glass fiber with an acrylate coating. Bragg Gratings are located along the fiber adjacent to the site where each wire is anchored, so that bending moments at the base of the wire produce bending strains in the corresponding plastic structure. These, in turn, result in tensile or com-pressive strains in the FBGs. Each whisker anchor has two FBGs to measure moments about local x and y axes at the whisker base (Fig. 3). An additional strain-isolated FBG serves for temperature compensation. The FBGs all have different nominal wavelengths, between 1525 and 1565 nanometers and are sampled simultaneously at 2kHz by a Micron Optics sm130 optical sensing interrogator. The general optical sensing approach follows that in [46]. Finite Element Analysis was used to determine the FBG placements for maximum strain and corresponding sensitivity to light forces on the whisker (Fig. 4). The FEA model includes the plastic structure and the thin, but much stiffer, glass fiber. For protection, the base plastic structure is encapsulated in a thin layer of Shore 20A silicone rubber; the silicone is soft enough that it has a negligible effect on the strains detected by the FBGs."}, {"title": "IV. WHISKER SIM-TO-REAL LEARNING", "content": "Collecting large-scale data data on contact positions from the real world is a challenging and laborious task. We therefore created a digital whisker sensor in the MuJoCo simulator, which approximates the real whisker dynamics. The real-world data includes FBG wavelength shifts and camera images of the deflected whiskers, including contact locations-but does not provide whisker base moments di-rectly. Accordingly, as shown in Fig. 2, we train a trans-former decoder using pair data of contact positions and base"}, {"title": "A. Contact Localization Assumptions", "content": "We begin by summarizing the assumptions made to limit the scope of the problem.\n1) Objects that come into contact are immobile in the world reference frame, meaning that if the robot does not move, the contact position remains unchanged.\n2) There is at most one contact point on a whisker with the environment at any time. For surfaces that are locally concave in the direction of whisker travel, this means that we only capture the proximal whisker/object contact.\n3) Frictional forces along the whisker are negligible in terms of their effect on the sensor, which is generally valid due to the properties of the nitinol whisker material, especially in water."}, {"title": "B. Data Collection in Simulation", "content": "Whisker Sensor in MuJoCo Our thin whiskers can be ap-proximated as inextensible, elastic, one-dimensional objects in space. In MuJoCo, we simulate the whisker sensor using the Cable object [47], which we represent as a sequence of capsules. Our aim is to capture the overall deflection of the whisker and the mapping from contact locations to base moments, without concern for higher order dynamics asasociated with whisker tip bouncing and vibrations. We therefore slightly increased the damping parameter for the capsule connections [48] and reduced the surface impedance at contacts to reduce vibrations and base moment spikes arising from contact with rough surfaces and from sudden changes between free motion and contact [49].\nIn particular, the dimensionless damping parameter was incrementally adjusted from \u2248 0 (consistent with a metal wire) to 0.03 in steps of 0.005. Additionally, to ensure simulation stability, we introduced a small rotational joint inertia of 3 \u00d7 10-5kg\u00b7m\u00b2 as recommended in [50].\nIn addition, we reduced the contact impedance value d and employed a higher-order impedance curve. This allowed us to balance the contact duration between minimal and maximal impedance values, do and dmax, ensuring a gradual response without excessive penetration into objects. We conducted a grid search, varying the width from 0.001 to 0.010 with steps of 0.001, and exploring do and dmax from 0 to 1 with steps of 0.05. Details on how to modify these parameters can be found in the MuJoCo documentation [51]. As a result of these adjustments, the whisker bounces back at roughly half the speed of a bare nitinol wire when contacting a rigid object, and the collected data becomes more stable.\nObject Initialization Since MuJoCo does not support the direct import of concave objects, it is necessary to decompose objects into convex components. We use CoACD [52] for decomposition because it efficiently preserves the collision properties of the original shape without greatly increasing the number of components, enabling more precise and efficient object interactions in downstream applications. However, one limitation of this method is that when applied to meshes from scanned objects such as those in the YCB data set [53], it can remove surface details such as small bumps, grooves, and sharp corners. As will be discussed in the experiment section, this leads to the assumption that our experiments only support continuous contact. We will further discuss extensions to overcome this limitations in the future work section.\nBuilding a whisker-sweeping dataset requires both quan-tity and quality, particularly in the diversity of objects swept by the whisker. To achieve this, we apply random rotations and transformations to the YCB objects, allowing the whisker sensor to interact with different faces and ori-entations. Specifically, after rotating the object, a random plane is selected, and the distance from the whisker sensor to the nearest point on the object is randomly set within a specified range. Given the curved shape of the whisker"}, {"title": "C. WhiskerNet: Contact Prediction from the Torque", "content": "Contact prediction from the sensor signal can be viewed as a sequence prediction problem. We designed a transformer decoder to learn the relationship between the contact and all the signals prior to that time step. We only select the torque signal in the y and z directions, as there is negligible torque about the whisker axis. Given the dataset {S,C}, where S represents the signals of the whisker base torque and C rep-resents the contact position in the whisker base coordinate, WhiskerNet infers the contact position from sequences of signals. Intuitively, it learns from the changes in the signals; for example, a change near the base can cause a large torque change. For each signal sequence s = [81, 82, ..., Sn] and the contact position c = [C1, C2, . . ., Cn], we learn the following distribution:\n$p(c|s) = p(C_i | S_{<i}).$\nSpecifically, we encode the signal sequence s into the feature f\u00ba via multiple linear layers and add the position embeddings. Then, several layers of transformer decoder layers attend to each other to learn the relationship features f\u00b2 among them. A linear head maps the contact position c from the final features f\". The Mean Squared Error Loss for the predicted c' compared to the contact ground truth c is given by:\n$L(c, c') = \\frac{1}{2} \\sum_{i=1}^n ||c_i - c'_i||^2$."}, {"title": "D. Real2Sim Calibration", "content": "Due to structural issues, the FBG signals of the two axes in the real world setup are somewhat coupled. Therefore, a calibration mapping is required to map from the base torques in the simulation to the wavelength shifts. We gather the same calibration data from the real world and simulation. To obtain data we use a calibration rig attached to a multi-axis optical calibration stage. The rig includes a V-shaped groove to enforce a known contact location on the whisker. We sweep several linear trajectories to collect different contact positions and their corresponding sensor signals. The same calibration rig and calibration trajectories are used in the simulation in MuJoCo.\nFrom the sim-to-real calibration, we obtain a dataset D = {(sreal,ssim)|i = 1,2,...,m}, where seal is the wavelength of an FBG sensor, and s\u015fim is a torque on the whisker base in the simulation. We use Gaussian Process Regression (GPR) to map the real-world wavelength sreal to simulation torque ssim. In GPR, the kernel function defines the covariance between pairs of random variables. We choose a Thin-plate (TP) kernel for its robust performance in the mapping, as noted in previous work with a different whisker sensor [22]. The kernel function is defined as:\n$\u041a_{TP} = \\frac{(2|r|^2 - 2Rr^2 + R^3)}{12}$\nwhere R is the radius of the region within which the TP model will minimize the second-order gradient. Before mapping the real-world data using GPR, a series of heuristic methods first filter the signal noise and filter out the signals below a certain threshold."}, {"title": "V. EXPERIMENT SETUP", "content": "We performed experiments both in simulation and in the real world, including an underwater experiment, a speed ablation study, and a sim2real ablation study. This section provides details about both setups, the sim2real calibration setup, and the WhiskerNet implementation details."}, {"title": "A. Simulation Setup", "content": "To train and evaluate WhiskerNet in the simulation en-vironment, we built our digital twin in MuJoCo using a dual camera setup to obtain the whisker shape in the real world and collect a large-scale dataset. We used 78 objects from YCB dataset of which mesh files are available [54]. For each object, we collected 200 samples of sweeping with random orientations. The initial moving speed of whiskers was randomly set between 3 and 7 mm/s and we applied a changing acceleration of \u00b1 0.4 mm\u00b2/s.\nDuring data collection, We record the torque at the whisker base and the corresponding contact positions. We filter out signals with torque values exceeding a certain threshold and those with contact jumping problems, defined by the dif-ference between the current and previous contact positions. After compiling the dataset, we downsample the data to 5 Hz. To augment the data, we introduce random no-contact signals at the beginning of contact and truncate the signals to a predetermined maximum length. The dataset is then randomly split into 80% for the training set and 20% for the validation set. For testing, we select the same objects used in the real-world experiments. The performance is evaluated using the Root Mean Square Error (RMSE) between the predicted contact positions and the actual object surface."}, {"title": "B. Immersed Experiment Setup", "content": "We conducted underwater experiments to validate the accuracy of the whisker sensor, as illustrated in Fig. 8. The whisker sensor is mounted on a Flexiv Rizon 4 robot arm using a 3D-printed connector. Sensor signals are transmitted through a Micron Optics sm130 optical sensing interrogator. For testing, we selected 10 seen objects from the YCB dataset and 10 unseen objects commonly found in underwater environments. The seen objects are chosen to represent a variety of geometries and categories within the YCB dataset, while the unseen objects are selected to include more challenging cases. As shown in Fig. 7, to mount all the test objects, we add a pillar on the bottom of the objects and design a holder with seven cube-shaped slots to secure them. A steel nut attached to the end of each pillar is magnetically fixed to the holder, ensuring the objects remain stable against any bounce forces and allowing for easy attachment and removal.\nPrior to testing, the whisker array is fully immersed in water for 30 minutes to stabilize the signal in response to temperature changes. The robot arm then moves from right to left, sweeping whiskers across the objects. The sweeping height is individually selected for each object to ensure continuous and convex contact in a single trial. Examples include the handle of a power drill, the bottom portion of a piece of artificial coral, and the convex part of a shell (Table I). After each trial, the object is rotated 90 degrees, with a total of four trials conducted per object.\nThe underwater experiment and sim2real ablation study use the same setup, with the exception that the in-air test in the sim2real ablation study is conducted without water in the tank. In the speed ablation study, we select the same coffee can as the testing object and sweep on its first side. For the underwater experiment and sim-to-real ablation study, a moving speed of 4 mm/s is used, with random variations between 80% and 120% at each time step. For speed ablation study, we select the coffee can as the test object. A video demonstration with three views is included in the supplementary materials. The performance is evaluated using the RMSE between the predicted contact positions and the object surfaces."}, {"title": "C. Sim-to-real Calibration Setup", "content": "To map the wavelength signal to the simulation torque, we built matching calibration setups in hardware and in simulation Fig. 6. The real world calibration is performed with a Zaber model LSM100A linear optical stage and a 3D-printed calibration rig. We ran the calibration in both simulation and real-world environments using the 9 same linear trajectories. For each trajectory, we evenly collected values at three points. Therefore, we collect 27 pairs of wavelength and torque values in total, which cover the sensing range of whiskers."}, {"title": "D. WhiskerNet Implementation Details", "content": "For the WhiskerNet, we use a Transformer decoder to map the signal to the contact position. The hidden size of the signal encoder is 64. The Transformer decoder consists of 6"}, {"title": "VI. RESULTS", "content": "We present the results of our underwater experiment and two ablation studies to evaluate our sim2real contact prediction performance."}, {"title": "A. Main Results", "content": "Table I presents the accuracy of our whisker sensor in both simulated and real-world underwater environments within a water tank. In the simulation, the accuracy for all objects is high, with errors within 1.5 mm. For real world experiments on the in-domain YCB objects, the model effectively captures the geometry of cylindrical objects with minimal curvature changes (row 1, columns 1-4). It also performs well on objects with flat surfaces (row 1, columns 5-7), except in cases where the object is positioned close to the whisker, causing sharp corners, like those of the LEGO block and the sugar box, to drag the whisker and hinder its movement. These types of objects perform well overall, as the contact point remains stable without lateral slipping on the contact surface. Beyond standard shapes like cylinders or cubes, the model also shows good performance on more complex shapes (row 1, columns 8-9). However, the accuracy is slightly reduced when slipping happens in the direction orthogonal to whisker travel (row 1, column 10).\nIn real-world experiments with unseen objects, the model continues to demonstrate robust performance on items with standard or simple geometries, such as a vase, bottle, and chest. Even with highly complex surfaces, like a rock, the accuracy remains within 2 mm. This can be attributed to the fact that, although the object itself may be out of distribution, its geometric characteristics are not. However, there are some scenarios where our model encounters difficulties. These include very flat and thin objects (row 2, column 8), situations where jumping occurs, and concave objects with discontinuous contact. Detailed analysis of these cases is provided in the following case studies."}, {"title": "B. Speed Ablation Study", "content": "Table II presents the results of our speed ablation study, demonstrating a clear correlation between whisker move-ment speed and model performance. As the whisker's speed increases, the model's performance gradually declines. No-tably, when the speed exceeds 8 mm/s, which lies beyond the range of our training data, there is a marked deterioration in performance. Additionally, introducing variability in the whisker speed exacerbates prediction errors compared to a consistent speed scenario."}, {"title": "C. Performance in Simulation and Real-World Environments", "content": "We evaluated the performance of our whisker sensor in both simulation and real-world environments, specifically in air and underwater conditions. The sensor was tested on three diverse and representative objects selected from 20 testing objects. In simulation, all objects demonstrate high accuracy, with errors of less than 1 mm. The performance in air is comparable to that in water, which can be attributed to our design choice of using a 0.3 mm thick nitinol wire and our low speeds so that drag forces from the water are negligible."}, {"title": "D. Case Study of Successes and Failures", "content": "As shown in Fig. 9, the three objects at the top represent successful cases, while the three objects at the bottom illustrate failure cases. For the coffee can (A), the model performs best on smooth surfaces, with the whisker signal spiking when sweeping across the object's corner. For the Lego block (B), the model performs well on the two faces but produces an outlier at the corner. The model also works well on uneven objects like the rock (C). Although it cannot capture the fine-grained details of the surface, it successfully predicts its shape.\nOne of the failure patterns observed occurs with thin and flat objects, such as the coin (D). In our training dataset, the contact prediction trajectories occur on continuous surfaces rather than being stuck at corners or edges. As a result, the model incorrectly predicts a slight movement in the contact position from its previous point, leading to significant errors. Another failure case occurs when the whisker interacts with concave objects, such as the lamp (E). When the whisker brushes against the gap between the handle and the body of the lamp, it inevitably makes multiple contacts, leading to inaccurate predictions in the gap. The third failure case occurs when the whisker jumps or slips on the surface, as seen with the fish (F). The contact position is lost when there is insufficient friction to keep the whisker in continuous con-tact with the surface. As discussed below, these all represent cases associated with discontinuous whisker contact tracing."}, {"title": "VII. CONCLUSIONS AND FUTURE WORK", "content": "Underwater manipulation in cluttered and confined envi-ronments remains a challenge due to the limited sensing capabilities of current technologies. To enhance robotic per-ception underwater, our design features a low-force, non-intrusive whisker system based on FBG technology, capable of accurately predicting contact positions using a single op-tical fiber. This design is robust, waterproof, and well-suited for underwater environments. Additionally, we propose a sim-to-real learning framework that involves collecting large-scale data in a digital twin environment and training our deep learning WhiskerNet model to predict contact locations using signal history. The framework also includes a calibration method to map the signals and transfer the trained model to real-world scenarios. This approach allows us to release a constraint from our previous work [24], where accurate robot proprioception is required. Our results demonstrate significant success in transferring simulations to real-world applications, both in air and in water.\nFor future work, we plan to address the limitations of our current method. Specifically, we aim to improve our perception algorithms by accounting for multiple contacts and discontinuous contacts. Our current approach assumes that only one contact occurs at a time and contacts are continuous along the trajectory. Thus, we filter out samples with multiple or discontinuous contacts in both our training and testing datasets. However, these types of interactions are common, particularly when dealing with complex object geometries. In response, we plan to develop methods for identifying and handling such cases, including segmenting the data to determine when a new object interaction begins. We also intend to expand our method to accommodate a broader range of material properties and surface geometries. Currently, we assume friction is negligible and use only 3D-printed objects for testing. We aim to deepen our un-derstanding of whisker interactions with different objects. Additionally, we plan to increase the whisker's movement speed to support more realistic manipulation scenarios and refine the data collection process by integrating simulation with real-world fine-tuning. Moreover, we recognize the need to develop a more precise metric for evaluating the accuracy of our contact predictions.\nFurthermore, we are interested in exploring the sensor's potential for water flow detection. The high sampling rate of FBG signals suggests that whiskers have significant potential in sensing water flow dynamics, which could open new avenues for underwater sensing and manipulation tasks. To achieve this, we will explore new methods to distinguish between water flow information and contact signals."}]}