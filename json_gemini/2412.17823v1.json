{"title": "RUL forecasting for wind turbine predictive maintenance based on deep learning", "authors": ["Syed Shazaib Shah", "Tan Daoliang", "Sah Chandan Kumar"], "abstract": "Predictive maintenance (PdM) is increasingly pursued to reduce wind farm operation and maintenance costs by accurately predicting the remaining useful life (RUL) and strategically scheduling maintenance. However, the remoteness of wind farms often renders current methodologies ineffective, as they fail to provide a sufficiently reliable advance time window for maintenance planning, limiting PdM's practicality. This study introduces a novel deep learning (DL) methodology for future-RUL forecasting. By employing a multi-parametric attention-based DL approach that bypasses feature engineering, thereby minimizing the risk of human error, two models\u2013ForeNet-2d and ForeNet-3d\u2013are proposed. These models successfully forecast the RUL for seven multifaceted wind turbine (WT) failures with a 2-week forecast window. The most precise forecast deviated by only 10 minutes from the actual RUL, while the least accurate prediction deviated by 1.8 days, with most predictions being off by only a few hours. This methodology offers a substantial time frame to access remote WTs and perform necessary maintenance, thereby enabling the practical implementation of PdM.", "sections": [{"title": "1. Introduction", "content": "Wind energy as the leading source of renewables has been in the lime-, driven by the heightened concerns over the environmental impacts and unsustainability of fossil-fuels for the future [1,2]. In order to keep up with the rising demand, the wind industry is actively working to make it more viable and competitive, which means tackling some of the biggest challenges it faces [3,4]. A survey analysis [5] shows that approximately 45% of the overall budget might be set aside for operation and maintenance (O&M), as shown in Fig. 1, posing as one of the biggest challenges faced by the wind industry. To counter this, preventive maintenance (PM) could be employed, which follows a periodically scheduled maintenance plan to reduce unplanned maintenance. However, this leads to unnecessary downtime, as often times the maintenance is not required [6-8]. This could be resolved if predictive maintenance (PdM) could be achieved. PdM predicts the optimal time for maintenance, ensuring it is performed precisely when needed and avoiding unnecessary machine stoppages [9]. One way to achieve this is by analyzing the remaining useful life (RUL) of the turbine and scheduling maintenance immediately prior to failure [10]. However, wind farms are often located in remote locations, usually spanning over many miles [11,12]; especially in the case of off-shore wind farms [13,14]; and timely arrival becomes an issue as a result. Consequently, current RUL methodologies fail to provide a significant reliable time window in advance for the maintenance"}, {"title": "2. Data procurement & analysis", "content": ""}, {"title": "2.1. SCADA data", "content": "Currently, a cohort of research has illustrated the use of the supervisory control and data acquisition (SCADA) dataset to detect degradation in WT and its components [24,25]. DNNs can be trained to recognize these degradation patterns, allowing them to forecast WT failures. Kevin et al. [26] utilized this SCADA data and alarm history to assess WT health, allowing them to diagnose defects with 71% accuracy within a 30-hr time window. SCADA data refers to the data collected in real time from sensors, devices, and control systems located in an industrial or infrastructural environment, equipment, or machine [27]. SCADA data have shown predictive capabilities despite being initially meant for control applications only [28,29]. Due to the prevalence of SCADA systems in the WT industry, various research studies have made use of it to evaluate key operation aspects like change detection [30], fault detection [31,32], power curves [33-36], WT health [37], and more. Hu et al. [38] predicted the WT bearing RUL by using the Weiner method on SCADA data from WT bearing temperature sensors, making the case for RU L\u0192 to be based on SCADA data."}, {"title": "2.2. Failure logs data", "content": "The primary rationale behind selecting EDP dataset was the inclusion of failure logs; provided in a separate log file. The initial step in data processing involved the integration of failure logs with precise time logs into the SCADA data. Upon initial analysis, it was concluded that a cumulative count of 12 failure instances occurred within the specified time period, but unfortunately, due to the lack of the corresponding SCADA data for one of the turbines and other irregularities in the dataset, only eight failure instances could be used for this application, which were separated into individual datasets and labelled with a unique \"Failure Tag\" in numbered fashion accordingly; details of the selected are listed in Tables 1 and 2. Referring to Table 2, Failure 6 exhibits a limited number of 196 log entries; each log entry is recorded at a 10-minute interval, resulting in a data span of approximately one and a half days only. However, as emphasized previously, the objective of this research study is to provide a significant time window for WT PdM. Hence, using Failure 6 is impractical for our particular application. After omitting Failure 6, we are left with a total of seven instances of failure, each organized into distinct datasets. The RUL forecasting was conducted using a set of seven failures, designated as distinct datasets named Failure 1, Failure 2, Failure 3, Failure 4, Failure 5, Failure 7, and Failure 8."}, {"title": "2.3. Data analysis", "content": "A thorough data analysis on all datasets was done in order to study the behaviour of WT breakdowns. A heat correlation map, amounting to all of the available parameters, is presented in Fig. 2, with sub-Fig. 2a to 2h showcasing the parametric coherence for the given datasets from Failure 1 to 8 respectively. This map highlights the correlation between the diverse parameter sets; the visual aesthetic indicates a strong coherence between multiple parameters. Under this premise, it can be postulated that, for a specific failure instance, multiple contributing variables would exhibit an unhealthy status pre-breakdown. We included the heat map for Failure 6 in Fig. 2 to examine the erratic behaviour of the WT during this instance; however, it is important to clarify that this inclusion serves solely as to further testify towards it's exclusion, as the decision to opt out Failure 6 was based on its operational duration, as outlined in Table 2. Based on the heat map, Failure 6 has a notably feeble and inconsistent pattern, which might be related to the limited amount of data log (N) available. The brief operational run of WT in case of Failure 6 also points towards the possibility that the WT was in aberrant status from the start-up, leading to an imminent failure, and further testified by the heat map.\nThe covariation between different parameter combinations is shown in Fig. 3 to examine the relation among the failure points. The data points from the last one hour prior to failure are highlighted in the plots. Two behavioural correlation clusters are observed:\n\u2022 Group 1: Failure 2, Failure 4, Failure 6, Failure 7, and Failure 8"}, {"title": "\u2022 Group 2: Failure 1, Failure 3, Failure 5", "content": "Group 1 is associated with the hydraulic group (see Table 2), except for Failure 6, which is an outlier among the available datasets. Group 2 consists of the remaining failure datasets, each of which is linked to distinct failure sites. This interrelationship among different failure point behaviors is of key importance to allowing the DNN models to achieve robust prediction capabilities for multifaceted failure forecasting. An emphasized case on the relation between WT reactive power and rotor RPM was made by Menezes et al. [40], underscoring its role towards failure behaviour in WT, based on which a similar analysis was performed for this study; see Fig. 4. Again, similar behaviour among the grouped failure points is observed, whereas abnormal behaviour for Failure 6 can also be noticed."}, {"title": "3. Experiment setting", "content": ""}, {"title": "3.1. Data preprocessing: general", "content": ""}, {"title": "Time Series Data Preparation:", "content": "Time series format of the given WT's SCADA data can be equated as Equation (1) as follows:\nD\u2081 = {d1, d2,...,d}"}, {"title": "3.2. Data preprocessing: sliding window", "content": "Previous research on using WT SCADA data for DNNs has predominantly used 1D-DNNs or the sliding window (SW) technique for 2D input processing. The utilization of SW offers the benefit of effectively capturing temporal dependencies [45], and as stated previously, RUL is the measure for WT health's progressive degradation over time, therefore, the SW is employed to capture these time-varying dependencies in WT SCADA data. Putting consecutive data inputs in rows, with each output value (i.e., RUL\u0173, see equation (12)) linked to a window, creates a two-dimensional input data structure with time as the second dimension. The dimensions of the SW, specifically the width (SWWidth) and length (SWLength), are contingent upon the number of rows (the number of parameters taken, i.e., M = 82) and the length of each individual row (the number of time logs taken, which is to be l = 24), respectively. The size of the SW (SWsize) can be mathematically represented as equation (8). The stride is configured to be one unit, which implies the SW will move one log step at a time, creating a 2D input structure. The SW and the stride can be adjusted accordingly, tuning the ability to capture the time-varying dependencies. It is important to mention here that for the conversion of this 2D structured data into 3D, a depth of SWDepth = 1 unit is applied.\nSWSize = SWLength \u00d7 SWWidth\nIn case of 3D DNN architecture, equation (8) is modified into equation (9):\nSWSize = SWLength \u00d7SWWidth \u00d7SWDepth\nAfter the implementation of SW, the input and output datasets are formulated as follows:"}, {"title": "3.3. Data preprocessing: forecasting window", "content": "This research work introduces the novel concept of forecasting window (FW) on WT SCADA data for the WT RUL forecasting; FW determines how far in the future RUL or failure prediction can be done accurately. As mentioned in Section 3.2, each input data entry following the deployment of SW, is linked to a corresponding RUL value. For instance, the input log in X' input at index z corresponds to a RUL value in Y' at index z. The task of the FW is to establish a correspondence between the input value X' at index z and the RUL value, which is some predetermined steps (f, FW size) ahead at index z+f, i.e., Yz+f. Following the implementation of FW, the equations (13) and (14) are modified as follows:"}, {"title": "3.4. Model architecture", "content": "A cohort of research has utilized different DNN models to analyze WT SCADA data. Lei et al. (2019) [46] demonstrated the effectiveness of long short-term memory (LSTM) model in processing and classifying time-series data, showing outstanding performance in long-term time-series datasets. Zhang et al. (2023) [24] developed an adaptive multivariate time-series convolutional network (AdaMTCN) to extract enriched features from SCADA data. Qin et al. (2023) [47] enhanced pitch system fault diagnosis using a Multi-Channel Attention Long Short-Time Memory Network (MCA-LSTM), which uses multi-channel AM to detect pitch bearing anomalies and hub faults with remarkable accuracy. Xiang et al. [48] had introduced a convolutional neural network (CNN) with an integrated AM for fault detection, enhancing the model's ability to issue early warnings and predict turbine failures before they escalate into more significant issues. However, since our objective is to forecast RUL over much longer period of 2-weeks while bypassing feature engineering, a much more sophisticated model architecture is required. In this context, our study proposes two new hybrid DNN models, ForeNet-2d and ForeNet-3d, which combines the strengths of CNNs, LSTMs, and AM, enhancing their ability to identify and prioritize relevant features, leading to more accurate and timely fault predictions."}, {"title": "3.4.1. ForeNet-2d", "content": "Xiang et al. [48] took advantage of AM [49]\u2014to manipulate training weights\u2014in combination with CNN and LSTM to give early WT failure alerts. However, for our application, since the RUL metric reflects the linear degradation of the WT health over the entire period of its operational life, which can be few months, for such long period forecasting, a custom designed model is required which specialized towards catching these long term dependencies. Therefore, taking insights from Xiang et al., this research study proposes its own custom-optimized ForeNet-2d DL model architecture for the purpose of RU Lf. The designed model aims to efficiently capture intricate temporal patterns and dependencies present in multivariate time series data.\nThe combination of CNN and LSTM models has proven effective across various domains, particularly for time-series tasks [50,51]. These studies highlight that CNNs excel in feature extraction, while LSTMs are adept at retaining temporal patterns [52]. The synergy of these models creates a robust tool for time-series predictions. Additionally, the incorporation of AM in various applications has further enhanced model efficiency [53,54]. The effectiveness of such hybrid structures has been consistently validated. The ForeNet-2d model leverages this powerful combination through a sequential architecture composed of CNN, LSTM, and AM layers, each dedicated to a specific function. The CNN block, consisting of three convolutional layers, is designed to extract temporal discrepancies across a wide array of parameters, enabling the model to map data features to complex patterns via convolutional operations. This allows for feature extraction and regression from 2D signal data while avoiding the complexities associated with multi-dimensional samples [48]. However, given the time-series nature of the task, where long-term temporal patterns are crucial, a single LSTM layer is introduced to bolster the model's ability to remember these patterns [51]. Following the LSTM layer, an AM is applied to emphasize the parameters most indicative of turbine failure. This layered structure harnesses the strengths of each individual model component, delivering superior forecasting capabilities compared to any single model.\nThe model layout is as follows (see Table 3 and Fig. 7): The model's input layer is designed to handle multivariate time series data with a shape of (l = 24, M = 82). The CNN component commences with a configuration consisting of two Conv1D layers (from the Keras machine learning algorithm); Conv1D not to be confused with the 2D input shape, which was achieved with the application of SW (Section 3.2). The two Conv1D layers are equipped with 64 filters and a kernel size of 3. The feature extraction process is carried out by the convolutional layers, which involve sliding over the time series data and applying rectified linear unit (ReLU) activation to introduce non-linearity. This non-linearity is crucial in addressing the vanishing gradient problem, allowing the network to learn complex patterns and hierarchical representations effectively. The subsequent Conv1D layer is composed of 128 filters, which serve to further enhance the feature representation. Thus, the input data goes through a total of three Conv1D layers before the LSTM layer, ensuring that the model enables efficient feature extraction, hierarchical representation learning, and translation invariance, enhancing the model's ability to capture temporal patterns for accurate RU Lf.\nIn order to effectively capture temporal dependencies, specifically the RUL linear degradation behaviour, over the entire tenure of the failure dataset, the LSTM layer is positioned subsequent to the CNN block. The LSTM network is composed of 64 units and is set up to output the sequences of hidden states by enabling the return sequences parameter to be true. This enables the LSTM model to effectively transmit pertinent temporal information across consecutive time steps.\nSubsequently, the AM is employed to selectively emphasize training weights manipulation, thereby enhancing the predictive accuracy of the model. The use of AM in this DNN model is necessitated by the lack of feature engineering step. The output of the attention layer is subsequently flattened for further processing. The flattened attention output is connected to a Dense layer, which is responsible for converting the extracted representations into the output used for forecasting RUL predictions. The Dense layer is configured with a single unit, and the final prediction of the RUL is obtained by applying a linear activation function.\nIt is to point out here that Xiang et al. [48] used AM to manipulate training weights in order to obtain faster convolution. In contrast, this research utilized AM to assess the influence of each parameter on a specific failure to manipulate the training weights and circumvent the constraints of feature engineering."}, {"title": "3.4.2. ForeNet-3d", "content": "To the best of our knowledge, the application of a 3D DNN model architecture for the processing of time series predictions using WT SCADA data has not been previously explored; however, some fault classification applications have been implemented [24]. Also,"}, {"title": "3.5. Evaluation criteria", "content": "The evaluation criteria for RU L\u0192 evaluates the accuracy in future failure prediction with reference to its actual occurrence timing. This can be quantified by accessing the temporal disparity (Dk), equated in Equation (19), between the projected end-of-life cycle (failure) for the WT and the observed failure time. For example, in the event that the model's prediction deviates by 5 hours from the observed time of failure, the model's forecasting accuracy is deemed to be inaccurate by a margin of 5 hours.\nDk = R\u00db Lk \u2013 RU Lk\nwhere R\u00dbLk is the forecasted RUL at time k."}, {"title": "3.6. Model training and testing", "content": "The experimental setup was devised such that for every instance of failure, both models were trained using the remaining failure datasets and subsequently evaluated for that particular failure based on the criteria specified in Section 3.5. As summarized in Section 3.5, the model's performance evaluation is based on the accurate failure forecast, which corresponds to a zero value at the end of the failure dataset, representing WT breakdown. However, it was theorized that the model with a higher level of effectiveness based on the root mean square error (RMSE) parameter would naturally demonstrate superior ability to achieve better curve-fitting, resulting in increased accuracy in forecasting progression towards zero value, indicating failure. To this end, the training process of the models was carefully executed with a specific focus on reducing the loss function, particularly RMSE with help of Adam optimizer [56,57]. The model training process was purposefully designed to systematically reach the prognosticated failure points before the actual failure happened. This tactical approach involved permitting the ongoing trained model to be saved only in cases where the forecasted failure threshold was reached preemptively by testing the trained model after each epoch via a looped training mechanism, reducing the likelihood of post-forecast failures. A total of 14 experiments were conducted, i.e., 7 RUL forecast predictions for all seven datasets for both models. Each experiment utilized the remaining failure datasets to train the model, consequently resulting in varied dataset combinations and epochs needed to attain a particular degree of accuracy for each experiment setting. In order to maintain a consistent experimental framework, 10 epochs were instantiated, and the one with the highest model accuracy was saved for forecasting applications. It is imperative to acknowledge that a plausible augmentation in the model's forecasting capabilities could be achieved via an increase in epoch count, thereby suggesting a prospective avenue for further refinement in forecasting performance.\nThe overall experiment summary can be visually encapsulated in Fig. 9, providing a visual representation of the key facets of the conducted experiments."}, {"title": "4. Results and analysis", "content": "The testing process for both models is presented in Figs. 10 and 11; Fig. 10 consist ForeNet-2d testing excerpt for Failure 1 (Fig. 10a), Failure 2 (Fig. 10b), Failure 3 (Fig. 10c), Failure 4 (Fig. 10d), Failure 5 (Fig. 10e), Failure 7 (Fig. 10f) and Failure 8 (Fig. 10g), similarly, in case of ForeNet-3d, Fig. 10 showcase Failure 1 (Fig. 11a), Failure 2 (Fig. 11b), Failure 3 (Fig. 11c), Failure 4 (Fig. 11d), Failure 5 (Fig. 11e), Failure 7 (Fig. 11f) and Failure 8 (Fig. 11g). Moreover, the results from all 14 experiments are summarized in Tables 5 & 6. The ForeNet-2d demonstrated superior performance for Failures 4 and 8, exhibiting a minimal discrepancy of 40 and 30 minutes, respectively. In contrast, the outcomes with the least precision were observed for Failures 1 and 5, exhibiting a deviation of slightly more than a day each. In the case of ForeNet-3d, optimal performance was exhibited for Failure 3, demonstrating a marginal forecast difference of only 10 minutes, while Failure 7 being a bit more modest around 10 hours. Conversely, the least precise outcome was observed for Failure 1 of 1.8 days. Here, the model accuracy parameter can be further elaborated by taking an example from one of the experiments, i.e., Failure 4 from the ForeNet-2d experiments. The projected failure forecast from this experiment is 40 minutes before the actual failure. This shows that the model was able to forecast RUL two weeks in advance, which was off by only 40 minutes.\nThis research underscores the significance of minimizing deviations between the DNN forecast and the actual failure instance, the crucial significance of which is ensuring a sufficient and reliable time window for advance maintenance scheduling leading to PdM. As a result, the model's capacity to predict beyond the 2-week mark is limited due to increased inaccuracy post-2-week FW, posing a constraint on the DNN's predictive capabilities. From Table 6 & 5, the least accurate results obtained are:"}, {"title": "1. Failure 5 for ForeNet-2d \u2192 1.1 days difference", "content": "2. Failure 2 for ForeNet-3d \u2192 1.8 days difference\nRounding off to 2 days to compensate for the model inaccuracies, we are left with a 12-day reliable maintenance window. This temporal buffer remains notably advantageous for the orchestration of preemptive PdM measures. It is to emphasize here that providing the models with additional training on akin datasets holds the potential to widen the FW.\nA comparison between the both ForeNet models is drawn in Fig. 12; a simplistic overview of this comparison reveals that both models exhibit lower forecast capabilities for Failure 1, while, for the remaining failure cases, both models capabilities differ comparatively. It can be inferred that the ForeNet-2d exhibited superior performance compared to the ForeNet-3d for failures 1, 4, and 8. Conversely, the ForeNet-3d demonstrated better performance for the remaining failure cases. Also, a general visual overview of the graph tells us that the ForeNet-3d showcased marginally superior performance overall compared to the ForeNet-2d.\nTable 7 presents the results of the RU Lf accuracy in relation to different failure types and failure lengths (i.e., N). The negative sign in the \"Difference\" column indicates that the forecasted failure precedes the actual failure occurrence; ensuring this alignment is crucial in the context of RU L\u0192 as the goal is to proactively anticipate and forecast WT breakdowns prior to their actual occurrence. The column denoted \"Data Logs Available\" in the table shows the duration before each failure instance, representing a temporal window ultimately leading towards breakdown at the last log entry. The table also specifies the location of the failure for each instance, such as the transformer, hydraulic group, gearbox, and generator. Both models accurately predict the RUL for each failure incidence, regardless of location. The models showed varying forecast accuracy (Dr) across experiments, with variances in RU Lf ranging from a few logs to several hundred. In the event of Failure 1, specifying transformer failure, the ForeNet-2d demonstrated a deviation of -145 log values, whereas for the ForeNet-3d, this was -262 logs. Conversely, in the case of Failure 4, related to the hydraulic group, the respective Dk values were -4 and -54. The reason for this disparity between these failure point forecasts may be attributed to the differing number of failure instances associated with the hydraulic group and the transformer.\nAs mentioned in Table 7, there are four failure points related to the hydraulic group, providing ample training data for this particular failure type, whereas only one failure instance, Failure 1, is available for the transformer. Besides this, the close correlation exhibited by the failure instances associated with the hydraulic group, as shown in Fig. 3, is testimony to smaller Dk, resulting in a better forecast. In the case of the Failure 3, affiliated with the gearbox, both models exhibited notable performance, with deviations of only -22 and -1 log values, respectively. It is worth noting that only one instance of gearbox failure was available for analysis. Thus, such close proximity might take into account the same correlation, discussed prior in Section 2.3 with reference to Fig. 3 and 4.\nSince Section 3.4 asserted the superiority of the ForeNet model architecture over other models [24,46-48], it is indispensable to justify this assertion by comparing ForeNet models with these predecessors. Therefore, Figs. 13 and 14 illustrate the preeminence of ForeNet-2d and ForeNet-3d relative to other models. This superiority is largely attributed to their advanced architectures and the integration of the AM. Moreover, the importance of AM is clearly demonstrated in Figs. 15 and 16, which present the average Dk for the 2D and 3D models. Fig. 15 shows that ForeNet-2d significantly outperforms the CNN-LSTM model-essentially ForeNet-2d without AM. Similarly, CNN-AM and LSTM-AM surpass their counterpart models, CNN and LSTM, respectively. This pattern is also evident in Fig. 16, where ForeNet-3d outperforms CNN-M (which has the same architecture as ForeNet-3d but lacks AM) and other prominent models (GoogLeNet, AlexNet, and ResNet-50, all of which lack AM). Thus, it is reasonable to conclude that AM plays a critical role in enhancing the accuracy of the ForeNet models, particularly because the RU Lf methodology and the models circumvent standard feature engineering; without AM, it is quite challenging for the models to effectively weight the key parameters contributing to failure progression."}, {"title": "5. Conclusion", "content": "With the employment of the FW concept, this study was successfully able to use DL to provide a 2-week lead time window for PdM in hopes of mitigating the O&M cost in WT. Considering the most accurate forecasted RUL was off by only 10 minutes of the actual RUL and the majority were off by only a few hours, while the least accurate deviated by 1.8 days, the majority were off by only a few hours. The proposed models were able to employ multi-parametric SCADA data to base adaptive RUL forecasts for different failure types (based on location) by making use of the existing coherence among the apparent post-failure parametric behaviours. Since all of the available parameters were used for this application and the impact of each failure for a certain failure type was evaluated using the model architecture, the need for feature engineering was successfully bypassed, and thus any chance of human error during this step. However, it must be acknowledged that the RU Lf methodology did not account for categorizing the failure type within its two-week advance forecast window, which could have been more desirable. Unfortunately, achieving this level of specificity would"}, {"title": "6. Future work", "content": "For future work, it is plausible that RULf methodology could also potentially facilitate the categorization of failure locations or failure components, contingent upon the availability of sufficient training data pertaining to a specific failure. Furthermore, it is important to evaluate the model's performance on significantly larger datasets that encompass a greater number of failures. While this research work was able to capture the failure discrepancies over a longer duration and forecast RUL, it is also possible to utilize shorter time windows (i.e., FW) to proactively identify alarm warnings a few minutes to hours in advance. It would also be interesting to investigate how the accuracy of the models is affected by varying the number of parameters used or by making an incremental increase in the number of parameters while assessing the effect on accuracy. But this falls beyond the scope of this research study. As this research study establishes the use of 3D DNN for WTs' SCADA data, it would be interesting to access the performance of RU Lf while deploying some other famous 3D DNN architectures. The two models proposed in this study, although optimised for RU Lf, might potentially be helpful in accessing other key features also using WT SCADA data."}, {"title": "CRediT authorship contribution statement", "content": "Syed Shazaib Shah: Writing \u2013 review & editing, Writing \u2013 original draft, Visualization, Validation, Software, Resources, Methodology, Investigation, Formal analysis, Data curation, Conceptualization. Tan Daoliang: Writing review & editing, Validation, Supervision, Resources, Methodology, Conceptualization. Sah Chandan Kumar: Validation, Software, Formal analysis."}, {"title": "Funding", "content": "This work was supported by Beihang University Science Center for Gas Turbine Project under Grant 2022-B-V-004 and Chinese Government Scholarship under Grant 2021SLJ008269."}, {"title": "Declaration of competing interest", "content": "The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper."}, {"title": "Data availability", "content": "Data will be made available on request."}]}