{"title": "Massimo: Public Queue Monitoring and Management using Mass-Spring Model", "authors": ["Abhijeet Kumar", "Unnati Singh", "Rajdeep Chatterjee", "Tathagata Bandyopadhyay"], "abstract": "An efficient system of a queue control and regulation in public spaces is very important in order to avoid the traffic jams and to improve the customer satisfaction. This article offers a detailed road map based on a merger of intelligent systems and creating an efficient systems of queues in public places. Through the utilization of different technologies i.e. computer vision, machine learning algorithms, deep learning our system provide accurate information about the place is crowded or not and the necessary efforts to be taken.", "sections": [{"title": "I. INTRODUCTION", "content": "Queue management : a perennial problem\nA challenge faced across various public settings such as retail stores, healthcare areas, parks, and universities is the problem of extended waiting periods and disorganized queue management. These issues negatively impact both customers and businesses by reducing employee efficiency, service quality, and income generation. Since COVID-19, the importance of effective queue management has increased significantly to ensure both customer safety and satisfaction. Traditional queue management methods rely heavily on manual observation and outdated systems, which often prove to be inaccurate and inefficient. With the rapid advancement of technology, there is a rising demand for smart systems that can efficiently manage and monitor queues.\nThis paper introduces a new technology that utilizes advanced computer vision techniques with YOLO models (YOLOv7, YOLOv8) and machine learning algorithms, such as Linear Regression and Polynomial Regression, to develop intelligent queue management systems. By implementing a monitoring system that detects body coordinates, calculates optimal lines, and identifies outliers, the new technology aims to improve resource allocation, reduce waiting times, and enhance the overall experience for the public. The proposed system incorporates a novel approach by analyzing the tension in virtual springs connecting detected body points, and visualizes the magnitude of these forces using color-coding.\nThe rest of the paper is organized into five sections. Related works have been discussed in Section II. Section III covers the necessary background concepts. The proposed method has been discussed and visualized in Section IV. The results and analysis are explained in Section V. The algorithms are discussed in Section VI. The Workflow is detailed in Section VII. Finally, the paper has been concluded in Section VIII."}, {"title": "II. RELATED WORK", "content": "The problem of efficient queue management, especially in public spaces, has gained significant attention in recent years, particularly due to the challenges presented by the COVID-19 pandemic. Various studies have explored the use of advanced computer vision techniques and deep learning models to address these challenges.\n\nA. Social Distancing and Crowd Management\nDuring the COVID-19 pandemic, the need for efficient queue management systems became critical, especially in public spaces where maintaining social distancing was paramount. Research has been conducted using YOLOv3 and Faster R-CNN models to monitor crowd density and ensure social distancing. These studies highlight the effectiveness of YOLO-based models in real-time monitoring, offering a valuable approach to managing queues in environments where physical distancing is crucial. The use of these models in detecting and monitoring crowds aligns directly with the objectives of this paper, which aims to utilize advanced versions of YOLO (YOLOv7 and YOLOv8) to develop a more sophisticated queue management system [1].\n\nB. Real-Time Human Detection and Counting System Using Deep Learning\nAnother relevant study focuses on real-time human detection and counting systems, employing YOLOv3 and DeepSORT tracking algorithms. This research demonstrates the effectiveness of deep learning techniques in managing crowd density in public places, such as shopping malls. The implementation of such systems ensures that crowd management and social distancing measures are upheld. The insights gained from this study are particularly relevant for the development of intelligent queue management systems, as they provide a framework for using deep learning models like YOLO for real-time monitoring and resource allocation in queues [2]."}, {"title": "III. BACKGROUND CONCEPTS", "content": "A. Object Detection Models\nObject detection is a critical component in many computer vision applications, including queue management systems. YOLO (You Only Look Once) models are widely recognized for their efficiency and accuracy in real-time object detection. YOLOv7, and YOLOv8 represent successive improvements in this model family, each iteration offering enhanced performance in terms of accuracy and inference speed. YOLOv7 introduced improvements in model architecture and training techniques, while YOLOv8 further advanced these innovations with more sophisticated network designs and optimization strategies. For the purpose of this study, YOLO models are employed to detect body points in images of individuals in queues. The choice of model impacts both the accuracy of body point detection and the computational efficiency, which are crucial for real-time applications.\nThe following equations are used to compute precision, recall, and the F1 score:\nPrecision (P):\n$P = \\frac{Tp}{Tp + Fp}$ (1)\nwhere $T_p$ is the number of true positives, and $F_p$ is the number of false positives.\nRecall (R):\n$R=\\frac{TP}{TP + FN}$ (2)\nwhere $T_p$ is the number of true positives, and $F_N$ is the number of false negatives.\nF1 Score (F1):\n$F\u2081 = 2 \\cdot \\frac{PR}{P+R}$ (3)\nwhere P is the precision and R is the recall.\n\nB. Regression Techniques\nRegression analysis plays a pivotal role in modeling and predicting relationships between variables. Linear regression is a fundamental statistical method used to model the linear relationship between a dependent variable and one or more independent variables. Polynomial regression extends this concept by fitting a polynomial equation to the data, which can capture more complex relationships. In the context of queue management, these regression methods are utilized to determine the optimal path that individuals should follow based on detected body points. The choice between linear and polynomial regression methods is evaluated based on their ability to accurately model the expected path and their computational efficiency."}, {"title": null, "content": "Linear Regression:\n$y = \\beta_0 + \\beta_1x + \\epsilon$ (4)\nwhere y is the dependent variable, x is the independent variable, $\\beta_0$ is the intercept, $\\beta_1$ is the slope, and $\\epsilon$ represents the error term.\nPolynomial Regression:\n$y = \\beta_0 + \\beta_1x + \\beta_2x^2 + \\cdots + \\beta_nx^n + \\epsilon$ (5)\nwhere y is the dependent variable, x is the independent variable, $\\beta_0, \\beta_1,..., \\beta_n$ are polynomial coefficients, and $\\epsilon$ is the error term.\n\nC. Confidence Intervals\nA confidence interval provides a range of values within which the true value of a parameter is expected to lie, with a specified level of confidence. In this study, a 95% confidence interval is employed to assess the deviation of individual body points from the predicted optimal path. Points falling outside this interval are considered outliers, indicating deviations from the expected alignment. This statistical approach is essential for identifying non-compliant individuals in the queue and assessing the effectiveness of the optimal path model.\n95% Confidence Interval:\n$\\hat{y} \\pm t_{n-2} \\cdot SE$ (6)\nwhere $\\hat{y}$ is the predicted value, $t_{n-2}$ is the critical value from the Student's t-distribution with n -2 degrees of freedom, and SE is the standard error of the estimate. Points falling outside this interval are considered outliers.\n\nD. Physics-Based Outlier Detection\nThe concept of spring force, derived from Hooke's Law, is applied to model interactions between individuals in a queue. According to Hooke's Law, the force exerted by a spring is proportional to its displacement from the equilibrium position. In this study, each individual is modeled as a mass connected by springs to their neighbors. The forces acting on each individual are calculated based on the horizontal and vertical components of these interactions. Outliers are identified by comparing the calculated forces to a threshold determined using Otsu's method, which is a technique for automatic thresholding based on image histogram analysis.\nHooke's Law:\n$F=Kx$ (7)\nwhere F is the force exerted by the spring, K is the spring constant, and x is the displacement from the equilibrium position.\nThe horizontal and vertical components of the force vector are:\nHorizontal Component ($F_x$):\n$F_x = F \\cdot cos(\\theta)$ (8)\nVertical Component ($F_y$):\n$F_y = F \\cdot sin(\\theta)$ (9)"}, {"title": null, "content": "where $\\theta$ is the angle of the force vector with the horizontal axis.\n\nE. Derivation of Spring Force\nConsider two adjacent people located at positions $p_i = (x_i, y_i)$ and $p_{i+1} = (x_{i+1}, y_{i+1})$, and let the optimal line direction vector be $e_v = (x_n - x_1, y_n - y_1)$, where n is the total number of people in the queue.\nDistance Between People: The distance between two people is given by:\n$d = \\sqrt{(x_{i+1} - x_i)^2 + (y_{i+1} \u2013 y_i)^2}$\nAngle Between Two Points and the Optimal Line: The angle $\\theta$ between the line joining two people and the optimal line is:\n$\\theta = cos^{-1} \\frac{(x_{i+1} - x_i)(x_n - x_1) + (y_{i+1} - y_i)(y_n \u2013 y_1)}{d \\cdot ||e_v||}$\nDeformation Along the Perpendicular Direction: The displacement due to deviation from the optimal line is:\n$\\Delta d = d \\cdot (1-cos(\\theta))$\nSpring Force Along the Perpendicular Direction: Using Hooke's law, the spring force along the perpendicular direction is:\n$F = k \\cdot \\Delta d$\nwhere k is the spring constant.\nComponents of the Force: The force acting between two adjacent people can be decomposed into two components:\n* Force along the optimal line:\n$F_{\\parallel} = k \\cdot \\Delta d \\cdot cos(\\theta)$\n* Force perpendicular to the optimal line:\n$F_{\\perp} = k \\cdot \\Delta d \\cdot sin(\\theta)$\nThe net force on each individual is the sum of forces from neighboring individuals. This net force helps identify outliers by detecting deviations from the optimal line in terms of force magnitude.\n\nF. Color Mapping and Visualization\nColor mapping is a powerful tool for visualizing data and enhancing interpretability. Saliency maps and colormaps are used to represent the magnitude of forces acting on individuals in the queue. The jet colormap, which spans from blue to red, is employed to visually differentiate between low, medium, and high force magnitudes. This color representation aids in quickly identifying individuals experiencing different levels of force, thus facilitating a more intuitive understanding of the queue dynamics.\nColor Mapping Function:\n$Color = colormap(norm\\_force)$ (10)\nwhere norm_force represents the normalized force value, and the colormap function assigns colors to different ranges of force magnitudes: blue (low), green/yellow (medium), and red (high)."}, {"title": "IV. PROPOSED SOLUTION", "content": "The proposed solution for optimizing queue management involves a multi-faceted approach integrating advanced object detection models, regression analysis, statistical methods, and visualization techniques. Each component of the solution addresses specific aspects of queue dynamics to enhance accuracy and real-time performance.\n\nA. Heap Area Coordinate Detection Methods\nTo accurately detect and track individuals within a queue, we employ three distinct object detection models: YOLOv7, and YOLOv8. Each model represents an evolution in the YOLO (You Only Look Once) series, offering incremental improvements in detection capabilities and inference speed.\n* YOLOv7: This model features advanced architectural enhancements and optimization techniques, pushing the boundaries of object detection performance. It serves as a key reference point for evaluating improvements in detection accuracy and efficiency.\n* YOLOv8: This iteration introduces more sophisticated network designs, which contribute to enhanced performance metrics. YOLOv8 is expected to demonstrate reduced inference times and improved accuracy compared to its predecessors.\nFor each model, we measure the inference time and assess detection accuracy using the same set of images. This comparative analysis allows us to identify the model that best balances accuracy and speed, thereby informing the choice of the most suitable model for real-time queue management.\n\nB. Finding the Optimal Line That Needs to Be Followed by Everyone\nDetermining the optimal path within a queue involves analyzing the detected body points, with a focus on the hip area. The procedure comprises the following steps:\n* Coordinate Averaging: Two key points in the hip area are identified for each individual. The average coordinates of these points are computed to establish a reference position.\n* Optimal Line Calculation: Using the averaged coordinates, we derive the equation of the optimal line that individuals are expected to follow. This is achieved through:\n  * Linear Regression: This method fits a straight line to the data, modeling the relationship between body point coordinates and the desired path. Linear regression provides a fundamental approach to determining the optimal path.\n  * Polynomial Regression: This technique extends linear regression by fitting a polynomial function to the data, accommodating more complex, non-linear relationships between coordinates and the path.\nA comparative analysis of these regression methods will be conducted to determine which approach offers the most accurate representation of the optimal line while minimizing computational requirements."}, {"title": "C. Finding Outliers That Are Not Within the 95% Confidence Interval of the Predicted Line", "content": "To identify deviations from the optimal path, we calculate a 95% confidence interval for the predicted line. This statistical approach involves:\n* Confidence Interval Calculation: We compute the 95% confidence interval around the predicted line, establishing a range within which the true coordinates are expected to fall with 95% confidence.\n* Outlier Detection: Individuals whose coordinates fall outside this confidence interval are considered outliers. This method allows for systematic identification of deviations from the expected path, highlighting non-compliance within the queue.\nThis approach ensures that deviations are detected in a statistically rigorous manner, enhancing the accuracy of queue management.\n\nD. Finding Outliers Using the Tension in Spring Concept\nA physical-based model is employed to analyze interactions between individuals using the spring force concept:\n* Spring Force Model: Each individual is modeled as a mass connected by springs to adjacent persons. The force exerted by the springs is described by Hooke's Law:\n$F=Kx$ (11)\nwhere F represents the force, K is the spring constant, and x denotes the displacement.\n* Force Calculation: The horizontal and vertical components of the force vector are calculated based on the angle of the force vector.\n* Outlier Detection Using Otsu's Method: Otsu's method is applied to determine a threshold for identifying significant deviations. Forces exceeding this threshold are classified as outliers. Otsu's method optimizes the threshold value by analyzing the histogram of force magnitudes.\nThis physical modeling approach enhances outlier detection by incorporating force dynamics and statistical analysis.\n\nE. Showing Color Similar to Saliency Maps on Each Person According to the Magnitude of Force\nTo visualize the force magnitudes affecting individuals in the queue, we utilize color mapping techniques:\n* Color Mapping: The jet colormap is applied to represent varying magnitudes of force. This colormap transitions from blue (indicating low force) to red (indicating high force):\n$Color = colormap(norm\\_force)$ (12)\nwhere norm_force is the normalized force value.\n* Color Representation: By mapping different colors to force magnitudes, we provide an intuitive visual representation of the force distribution. This approach facilitates the identification of individuals experiencing varying levels of force, aiding in the assessment and management of queue dynamics.\nThrough these visualization techniques, we enhance the interpretability of the force magnitudes, contributing to more effective queue management and analysis."}, {"title": "V. RESULTS, DISCUSSION, AND ANALYSIS", "content": "This section presents the results obtained from implementing the proposed solution for queue management, discusses the performance of the different methods, and provides an in-depth analysis of the findings. The evaluation covers object detection models, optimal line determination, outlier detection, and visualization techniques.\n\nA. Object Detection Model Performance\nThe performance of YOLOv7, and YOLOv8 was evaluated based on inference time and detection accuracy. YOLOv8 achieved the best results by considering both accuracy and inference time. Specifically:"}, {"title": "VI. ALGORITHMS", "content": null}, {"title": "VII. WORKFLOW FOR QUEUE MANAGEMENT", "content": "This section provides a detailed overview of the queue management system's workflow, illustrating the sequential steps from detecting body points in an input image to visualizing forces between individuals. It covers the selection of relevant points, calculation of optimal alignment, generation of a top-view for analysis, and the final computation and visualization of forces using color-coded representations based on magnitude (refer to Figure 6 for the step-by-step workflow).\nThe process begins with an input image where all body points are detected using object detection techniques. From these detected points, heap area points are selected, or if those are not available for some individuals, the most relevant points are chosen instead. These points are used to calculate the midpoints that determine the optimal alignment line. A top-view representation is then generated to visualize this alignment. Finally, forces are calculated by treating people as masses connected by springs, and through vector addition, the resultant force on each person and the force between each pair are computed. These forces are then represented in different colors corresponding to their magnitudes."}, {"title": "VIII. CONCLUSION", "content": "The proposed system for public queue monitoring and management using a mass-spring model has demonstrated its effectiveness in optimizing queue management. By leveraging advanced computer vision techniques, machine learning algorithms, and statistical methods, the system provides accurate information about crowd distribution. The system successfully detects body points in frames of individuals in queues, determines the optimal line that individuals should follow, and effectively identifies outliers using two separate methods: the 95% confidence interval method and a physics-based approach, where the spring force model is employed to analyze interactions between individuals and outliers are detected by calculating a threshold on the spring tension. Additionally, the system visualizes the magnitude of spring forces on each individual in the queue using color coding, providing an intuitive understanding of queue dynamics. With significant implications for improving resource allocation, reducing waiting times, and enhancing the overall experience for the public, the system has the potential to be integrated with other technologies and evaluated in real-world scenarios to assess its performance and identify areas for improvement."}]}