{"title": "ENHANCING IOT BASED PLANT HEALTH MONITORING THROUGH ADVANCED HUMAN PLANT INTERACTION USING LARGE LANGUAGE MODELS AND MOBILE APPLICATIONS", "authors": ["Kriti Agarwal", "Samhruth Ananthanarayanan", "Srinitish Srinivasan", "Abirami S"], "abstract": "This paper presents the development of a novel plant communication application that allows plants to \"talk\" to humans using real-time sensor data and AI-powered language models. Utilizing soil sensors that track moisture, temperature, and nutrient levels, the system feeds this data into the Gemini API, where it is processed and transformed into natural language insights about the plant's health and \"mood.\" Developed using Flutter, Firebase, and ThingSpeak, the app offers a seamless user experience with real-time interaction capabilities. By fostering human-plant connectivity, this system enhances plant care practices, promotes sustainability, and introduces innovative applications for AI and IoT technologies in both personal and agricultural contexts. The paper explores the technical architecture, system integration, and broader implications of AI-driven plant communication.", "sections": [{"title": "1 Introduction", "content": "In recent years, the integration of Artificial Intelligence (AI) and Internet of Things (IoT) technologies has opened up innovative avenues for enhancing human interaction with the natural world. One such innovation is the ability to bridge the communication gap between humans and plants, leveraging the capabilities of sensors and AI-driven models. Plants, although non-verbal, possess vital signals that can be harnessed and interpreted using real-time data from sensors. This paper introduces a novel application that enables plants to \"talk\u201d to humans through an AI-powered interface using the Gemini API. The system collects real-time soil data and transforms it into insights that users can interpret as the plant's \"mood\" and health status, facilitating a unique form of human-plant communication[1]\nSoil sensors embedded in the plant's environment are essential to this system. These sensors monitor critical factors such as moisture, temperature, and pH levels, which are fed to the Gemini API in real-time. Recent research has demonstrated the effectiveness of such sensors in accurately monitoring environmental conditions for plants, enabling users to make informed decisions about care and management[2]. Our app extends this by utilizing AI-driven insights to provide more intuitive feedback to users. Instead of raw data, the AI translates the plant's needs into a human-readable format, enabling users to track plant health, understand its \u201cmood,\u201d and interact with it directly through a language-based interface[3].\nThe app was developed using Flutter, Firebase, and ThingSpeak, a combination that ensures the system is scalable, responsive, and capable of real-time data processing. Flutter was selected for its cross-platform functionality, allowing the app to be deployed across multiple devices seamlessly. Firebase offers backend services for data storage and"}, {"title": null, "content": "real-time updates, while ThingSpeak handles the collection and transmission of IoT sensor data [4]. Together, these technologies create a robust ecosystem, allowing for continuous monitoring and real-time plant-human interaction.\nThis approach offers a new dimension of connectivity between humans and plants, fostering a deeper relationship with nature through digital means. Prior studies have highlighted the growing interest in human-nature interaction facilitated by AI and IoT technologies. By transforming the way we understand and care for plants, this app aims to promote sustainability and more attentive plant care practices, encouraging users to engage with their environment in a meaningful way. The combination of AI and sensor data interpretation can also be applied to agriculture, enhancing crop management and improving yields by providing personalized care insights for plants[5]\nIn this paper, we will explore the development of the app, focusing on its technical architecture and system integration. We will also review the broader implications of utilizing AI and IoT in human-plant communication, discussing the potential benefits and limitations. The insights gained from this study contribute to the growing body of research on AI-driven interactions with the natural world, showcasing how emerging technologies can reshape our relationship with the environment[6]"}, {"title": "2 Literature Survey", "content": "The integration of AI and IoT in plant monitoring systems has been a growing area of research, particularly as sensors have become more accessible and precise. Numerous studies have explored the application of soil sensors for real-time environmental monitoring, providing data on factors such as moisture, temperature, and pH levels. For example, Batte et al. demonstrated the effectiveness of soil sensors in continuously monitoring environmental conditions, highlighting their potential to enhance agricultural practices and home gardening [7]. These sensors have since been integrated into larger IoT systems, where real-time data transmission is essential for immediate feedback, laying the groundwork for interactive applications like the one developed in this project.\nArtificial Intelligence has also been increasingly employed to interpret sensor data and provide users with actionable insights. Research by Jain et al. explored the potential of AI models to translate raw environmental data into intuitive, human-readable outputs, thereby enhancing the interaction between humans and plants [8]. This approach is central to the design of our application, which uses the Gemini API to process real-time sensor data and convert it into natural language feedback for the user. Santos and Barros further explored the application of AI for plant health monitoring, identifying both the potential benefits and challenges of using AI to facilitate human-plant interaction [9]. These studies underscore the growing role of AI in making complex biological data accessible and meaningful to everyday users.\nFurthermore, the integration of cloud-based platforms like Firebase has proven to be a key factor in the scalability and responsiveness of modern applications. Harley and Chesser's work on Flutter and Firebase highlights the importance of real-time data handling and cross-platform compatibility in ensuring seamless user experiences [10]. Zhou et al. examined how IoT platforms, such as ThingSpeak, enable continuous data streaming and storage, particularly in agricultural contexts [11]. These technologies were integral to the design of our app, ensuring real-time interaction between users and plants. This body of research provided critical insights into the architectural decisions behind the system, demonstrating how emerging technologies can be harnessed to build intuitive, scalable solutions for plant care."}, {"title": "3 App Structure", "content": "The app consists of four main sections, each of which plays a critical role in enabling users to communicate with their plants and track their health:\n\u2022 The front-end\n\u2022 The back-end storage and data retrieval\n\u2022 The sensors\n\u2022 The chatbot"}, {"title": "3.1 Front-End", "content": "The front-end of the app is developed entirely using Flutter, a cross-platform framework that ensures the app functions smoothly across Android and iOS devices. Flutter was chosen for its flexibility, real-time rendering capabilities, and ability to create a highly responsive user interface. The front-end is designed to provide an intuitive and seamless experience, where users can easily interact with the app and access vital information about their plants."}, {"title": null, "content": "User authentication and authorization are handled through Google Play services, ensuring that each user has a secure and personalized experience. When a user logs in, their account is authenticated using their Google credentials, and a corresponding user entry is maintained in the app's database. This allows for easy tracking of user-specific data and plant profiles, making sure that each user only has access to their own plants.\nThe interface provides features for monitoring plant health, displaying real-time data, and viewing historical trends for each plant. Users can also receive notifications and alerts based on real-time sensor data, which inform them of their plant's current needs. This interface was designed to be user-friendly, ensuring that even those without technical expertise can maintain and nurture their plants effectively."}, {"title": "3.2 Back-End", "content": "The back-end of the application is built using a combination of real-time and NoSQL databases. The back-end architecture ensures that sensor data is efficiently processed, stored, and retrieved, while also maintaining scalability and performance.\nThe real-time database is primarily responsible for handling sensor data. Each sensor attached to a plant has a unique ID, and data is continuously uploaded to the real-time database using this sensor ID. The microcontroller nodes of the sensor network transmit data directly to the database, ensuring real-time updates. This real-time database serves as a temporary data store for the sensor readings, which are later fetched by the app for analysis. The use of a real-time database allows for instant updates and ensures that users are always presented with the most current information about their plants.\nIn addition to the real-time database, a separate NoSQL database is used to manage user and plant data. This NoSQL database was chosen for its scalability, making it possible to handle numerous users and a wide variety of plant species efficiently. It stores key information such as user profiles, plant types, and ideal environmental conditions for different plant species. The separation of real-time sensor data and user/plant data ensures the efficient handling of large volumes of information, making the app scalable for broader use.\nMoreover, the data from the real-time database is processed to determine the plant's mood, which is an essential feature for enhancing user engagement. This mood data is further utilized in the chatbot system, which provides a humanized experience by interpreting sensor readings in a way that users can easily understand."}, {"title": "3.3 Sensors", "content": "The sensors attached to the plant's soil play a critical role in gathering real-time data about the plant's environment. These sensors measure parameters such as soil moisture, temperature, humidity, and sunlight exposure, which are vital for determining the plant's health and well-being.\nEach sensor is connected to a microcontroller node equipped with Wi-Fi capabilities, allowing it to transmit the collected data to the real-time database. The microcontroller processes the raw sensor readings, converting them into digital values or percentages that are readable and interpretable by the app. For instance, soil moisture might be expressed as a percentage of ideal moisture content, while temperature and humidity are displayed in Celsius and percentage, respectively.\nThis system ensures that the data is not only collected but also standardized, enabling consistent and accurate analysis. These environmental factors are continuously monitored, and the app aggregates this data to present a comprehensive view of the plant's current health status. The use of multiple sensors ensures that the app can provide precise feedback, and this feedback is essential for both the user and the chatbot interface."}, {"title": "3.4 Chatbot", "content": "One of the most unique features of the app is the chatbot, which allows users to \"talk\" to their plants. The chatbot is powered by a large language model (LLM) that leverages the sensor data to create a natural conversation between the user and the plant. The chatbot translates the plant's health and environmental data into human-like responses, providing the user with real-time updates on how their plant is doing.\nThe chatbot utilizes prompt engineering techniques to interpret the data collected from the sensors and communicate it in a way that is understandable and engaging. For instance, if the soil moisture is low, the chatbot might say, \"I'm feeling a bit thirsty today, could you water me?\" Similarly, if the plant is in ideal conditions, the chatbot could respond with, \"I'm feeling great, thanks for taking care of me!\" This conversational interface humanizes the plant, making it more relatable to the user."}, {"title": "4 Conclusion", "content": "In summary, the app's architecture consists of a user-friendly front-end built with Flutter, a robust back-end for data management using real-time and NoSQL databases, sensor networks that continuously monitor environmental factors, and a chatbot that facilitates human-plant interaction. Together, these components work in unison to create a system that helps users maintain their plants' health while fostering a unique, engaging relationship between humans and their plants. The integration of real-time data, AI, and IoT technologies has the potential to transform plant care by making it more interactive, intuitive, and accessible."}, {"title": "5 Results", "content": null}, {"title": "5.1 Development Environment", "content": "The app was built using Flutter(3.24) using the Android Studio development toolkit. The application was developed on an HP Pavilion Notebook with 16GB RAM and 512 GB internal storage while the app was tested on an OnePlus Nord 3 with 8GB RAM, 128GB internal storage with a resolution of 2272X1240 pixels, 450ppi. The sensors used in all experiments were acquired from an Internet of Things(IoT) laboratory of Vellore Institute of Technology, Chennai."}, {"title": "5.2 Readings for LLM Interpretation", "content": "In this section, we present the readings of the sensors. Considering the constraints in equipment at the laboratory, we made use of only soil moisture and DHT11 sensors. Figures 1 to 3 detail the readings obtained."}, {"title": "5.3 Prompt Response Analysis", "content": "For our conditioned experiments, we consider 2 scenarios\n\u2022 Plants on soil with no moisture content\n\u2022 Plants on soil with moisture content"}]}