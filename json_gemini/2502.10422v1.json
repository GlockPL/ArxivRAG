{"title": "DA-LIF: Dual Adaptive Leaky Integrate-and-Fire Model for Deep Spiking Neural Networks", "authors": ["Tianqing Zhang", "Kairong Yu", "Jian Zhang", "Hongwei Wang"], "abstract": "Spiking Neural Networks (SNNs) are valued for their ability to process spatio-temporal information efficiently, offering biological plausibility, low energy consumption, and compatibility with neuromorphic hardware. However, the commonly used Leaky Integrate-and-Fire (LIF) model overlooks neuron heterogeneity and independently processes spatial and temporal information, limiting the expressive power of SNNs. In this paper, we propose the Dual Adaptive Leaky Integrate-and-Fire (DA-LIF) model, which introduces spatial and temporal tuning with independently learnable decays. Evaluations on both static (CIFAR10/100, ImageNet) and neuromorphic datasets (CIFAR10-DVS, DVS128 Gesture) demonstrate superior accuracy with fewer timesteps compared to state-of-the-art methods. Importantly, DA-LIF achieves these improvements with minimal additional parameters, maintaining low energy consumption. Extensive ablation studies further highlight the robustness and effectiveness of the DA-LIF model.", "sections": [{"title": "I. INTRODUCTION", "content": "The human brain's efficiency and complexity have long inspired advancements in artificial intelligence, particularly in deep learning and Convolutional Neural Networks (CNNs). Despite CNNs' success, their energy consumption remains much higher than that of the human brain. Spiking Neural Networks (SNNs), modeled more closely on biological neural activity, have emerged as the third generation of neural networks, offering better biological plausibility, lower energy use, and compatibility with neuromorphic hardware [1]. SNNs simulate how neurons communicate via spikes, but current models often overlook the heterogeneity and complex dynamics of biological neurons. Insights from neuroscience highlight the importance of factors like neurotransmitter clearance and modulation of synaptic strength. These mechanisms, while critical in biological systems, are not yet fully integrated into SNNs. To bridge this gap, we propose incorporating glial cell functions into the Leaky Integrate-and-Fire (LIF) neuron model by making membrane decay parameters adaptive[2, 3, 4]. The experimental results in Fig. 1(a) demonstrate that both spatial and temporal membrane decays contribute to the network accuracy, with a maximum improvement of 1.84%. To optimizing the values for two decay settings automatically, we advocate the incorporation of independently learnable membrane decays in LIF neurons to regulate their membrane permeability, thereby achieving adaptive learning and allowing relevant information to pass through while blocking irrelevant information without imposing a significant computational burden. The strategic incorpration introduces intricate biological mechanisms to the SNNs with few additional parameters, enhances the fidelity of SNNs, paving the way for innovative solutions in neural network modeling. Our contributions summarized as follows:\n\u2022 Incorporation of independently learnable spatial and temporal decays, enabling more precise regulation of membrane permeability across layers, improving performance without compromising efficiency.\n\u2022 We evaluate our method on both static and neuromorphic datasets, outperforming previous state-of-the-art results with fewer timesteps.\n\u2022 Extensive ablation experiments demonstrate the robustness and effectiveness of the proposed model."}, {"title": "II. RELATED WORKS", "content": "Training of SNN typically follows two approaches: Artificial Neural Network (ANN)-to-SNN conversion and direct SNN training. The ANN-to-SNN method involves converting pre-trained ANNs by mapping parameters and replacing ReLU activation with spiking activation. For direct SNN training, recent advancements have introduced various improvements. The tdBN [5] enhances feature normalization in temporal and spatial dimensions, while MPBN [6] and TET stabilize the training process through better batch normalization and momentum control. Other innovations, such as SEW-ResNet and DS-ResNet, improve the adaptation of ResNet architectures to SNNs[7, 8, 9]. Techniques like IM-Loss [10] and model compression strategies also optimize information processing and advancing the applicability of SNNs[11].\nSeveral studies have demonstrated the advantages of adaptive LIF models [12, 13]. For example, LSNN [14] and LTMD[15] introduced adaptive threshold neurons, improving the learning dynamics of SNNs. Additionally, works such as PLIF incorporated a learnable membrane time constant to enhance the performance of spiking neurons[16]. Recent efforts like Diet-SNN and BDETT have further optimized neuron models by integrating learnable parameters such as membrane leak and firing thresholds[17, 18, 19]. Despite these advances, current models do not independently address spatial and temporal aspects of neuron behavior. Future work could focus on separate learnable parameters for each dimension and layer, aligning more closely with biological observations and enhancing SNN expressiveness."}, {"title": "III. METHODS", "content": "A. LIF model with Variable Decays\nSpiking neurons serve as the primary computational units in SNNs. Among various neuron models, the LIF model commonly used in deep SNNs is expressed by:\n$\\Tm \\frac{du(t)}{dt} = -(u(t) - Urest) + RmI(t),$\nwhere $\\Tm$ is the membrane time constant, u(t) is the membrane potential, $Urest$ is the resting potential, I(t) is the pre-synaptic input, and $Rm$ is the membrane resistance. When u(t) exceeds a threshold $uth$, the neuron fires a spike and u(t) is reset.\nTo adapt the LIF model for deep learning, discretize it into iterative equations:\n$Vt,n = f(Ht\u22121,n, xt,n),$\n$St,n = \\Theta(Vt,n \u2013 Uth),$\n$Ht,n = Vreset \u00b7 St,n + Vt,n (1 \u2013 St,n).$\nWhere $Vt,n$ is the membrane potential after integration, $Ht-1,n$ represents the membrane potential after a spike trigger in the previous timestep, The input current $Xt,n$ at timestep t layer n is obtained through the output spiking of the previous layer $St,n\u22121$ via a convolutional layer with weight W:\n$Xt,n = Conv(W, St,n\u22121).$\nThe function $f(\u00b7)$ for the vanilla LIF model is:\n$Vt,n = Ht-1,n + \\frac{1}{Tm}(xt,n + (-(Ht-1,n \u2013 Vrest))).$\nThe Heaviside step function $\\Theta(x)$ return 0 if x < 0, 1 otherwise. The subsequent membrane potential $Ht,n$ reset to $Vreset$ if $St,n = 1$ and maintain $Vt,n$ otherwise. In this study, $Vrest$ and $Vreset$ are both set to 0.\nTo enhance adaptability, variable decay terms $\\mu$ and $\\lambda$ are introduced into the LIF model, allowing the membrane potential and input signal to decay independently:\n$\\Tm \\frac{du(t)}{dt} = -\\mu(u(t) \u2013 Urest) + \\lambda I(t).$\nThen the integration of the LIF model with variable decays is:\n$Vt,n = (1 - \\frac{\\mu}{Tm})Ht-1,n+\\frac{\\lambda}{Tm}xt,n.$\nB. LIF with Dual Adaptive Mechanism\nAssigning independent learning of temporal and spatial decay parameters by employing $\\frac{\\lambda}{Tm}$ and $\\frac{\\mu}{Tm}$as distinct variable decay terms. Firstly, define:\n$\\alpha' = \\frac{\\lambda}{Ta}, \\beta' = 1 - \\frac{\\mu}{Tb}.$\nThe conflict arises when $\\alpha'$ and $\\beta'$are learnable decays with a shared parameter $\\Tm$, whereas our method aims to train the two learnable decays independently. decouple the spatial and temporal learnable decays, which requires the two learnable decays are trained independently. Then by defining\n$\\alpha = \\frac{\\lambda}{Ta}$\n$\\beta=1- \\frac{\\mu}{Tb}$\nwhere ta and \u266d are separate time constants for spatial and temporal processes. The membrane potential update becomes:\n$Vt,n = \\beta_n Ht\u22121,n + \\alpha_n Xt,n.$\nThe connection between the Dual Adaptive LIF neurons is depicted in Fig. 1(c), where the spatial and temporal tuning, $\\alpha_n$ and $\\beta_n$, are independently learned and share parameters within the same layer but at different timesteps, with distinct parameters when trained across different layers."}, {"title": "C. Training Framework", "content": "Addressing the challenge of the non-differentiable nature of spiking activity, we employ the spatio-temporal backpropagation (STBP) combined with surrogate gradients (SG)[20]:\n$\\frac{\\partial L}{\\partial W_n} = \\Sigma_t (\\frac{\\partial L}{\\partial St,n} \\frac{\\partial St,n}{\\partial Vt,n} + \\frac{\\partial L}{\\partial Vt+1,n} \\frac{\\partial Vt+1,n}{\\partial St,n}) \\frac{\\partial Vt,n}{\\partial W_n}$)\n$\\frac{\\partial}{\\partial V} sign(V) = a * sign(|Vt \u2013 Vth| < = 0.5),$\nwhere a is a hyper-parameter and set to 1, the gradient is equal to 1 when Vth \u2013 0.5 < Vt < Vth + 0.5, and 0 otherwise."}, {"title": "IV. EXPERIMENTS", "content": "A. Dataset and Implementation Details\n1) Dataset: The CIFAR10 dataset consists of 50,000 training and 10,000 test images across 10 classes, while CIFAR100 [21] extends it to 100 classes for more fine-grained classification. ImageNet [22], with 1.2 million images in 1,000 classes, is a widely used benchmark for large-scale image classification. The CIFAR10-DVS [23] dataset is one of the largest visual neuromorphic datasets, while the DVS128 Gesture [24] dataset is specifically ideal for gesture recognition, making them well-suited for evaluating SNNs.\n2) Implementation Details: In our implementation, critical hyperparameters such as the firing threshold vth are set to 1.0, with the learnable decay terms a and \u1e9e both initialized at 1.0 within the range of [-1, 1]. The codebase is fully implemented in PyTorch. All experiments, except those involving ImageNet, are conducted on an RTX 3090 GPU, while ImageNet experiments are executed on 8 RTX 4090D GPUs. Optimization is performed using the SGD optimizer with a momentum of 0.9, and the initial learning rate is set to 0.1. For CIFAR10, CIFAR100, and CIFAR10-DVS, models are trained for 1000 epochs, while the DVS CIFAR-10 dataset is trained for 200 epochs. On ImageNet, models are trained for 320 epochs.\nB. Comparison to Previous Work\na) Static Image Classification: As shown in Tab. I, the DA-LIF SNN model was tested on CIFAR-10/100 and ImageNet, showing superior accuracy of 96.72%/80.59% and 70.58% respectively. Integrated into ResNet-19, ResNet-20, and VGG-16 architectures, and using timesteps of 1, 2, and 4, the model consistently outperforms SOTA methods. Notably, it achieved a 1.28% accuracy improvement on CIFAR-100 with ResNet-20, timestep 2.\nb) Event-based Action Recognition: As shown in Tab. II, the DA-LIF achieving a 1.71% improvement on CIFAR10-DVS and reaching 98.61% accuracy on DVS128 Gesture with only 16 timesteps.\nC. Analysis of Computation Efficiency\nTab. III shows the computational cost for processing a single sample from CIFAR-100, ImageNet, and CIFAR10-DVS using ResNet architectures. For ANNs, energy is calculated based on MAC operations, while for SNNs, energy depends on both MACs in the first layer and accumulate computations (ACs) in subsequent layers, influenced by spiking activity and timesteps[35]. SNNs show greater energy efficiency, with each synaptic operation in an ANN equating to roughly five in an SNN. This highlights the potential for substantial energy savings in SNNs, especially with optimized hardware designs.\nD. Ablation Study\n1) Impact of Spatial and Temporal Tuning: We evaluated the individual contributions of the a and \u1e9e in DA-LIF neurons by training each decay independently on the CIFAR-100 dataset using ResNet-20. As depicted in Fig. 2, tuning a or Balone improved accuracy by 0.76% and 0.37% over the baseline, respectively. At timestep = 1, \u1e9e had no effect, as it matched the baseline SNN. The combined tuning of both a and \u1e9e led to a 1.28% accuracy increase, highlighting the enhanced feature extraction ability provided by learnable decays in both spatial and temporal dimensions.\n2) Evaluation of Different Activation Functions.: The impact of different activation functions, Sigmoid and Tanh were evaluated on the network's performance across two datasets, CIFAR-10 and CIFAR-100. The parameters for these functions were initialized to 1. Using the ResNet-20 architecture with a timestep of 4. The findings indicate that Tanh outperforms Sigmoid, improving performance by 0.48% on CIFAR-10 and 0.27% on CIFAR-100. Given that the Tanh function constrains values within the range of [-1, 1], it is the preferred choice for the proposed model due to its superior performance.\n3) Distribution of a and \u1e9e Across Layers.: The distribution of a and \u1e9e values across the layers of the neural network during training is shown in Fig. 3, reveals three key insights. Firstly, the significant gap between the initial and final values demonstrate the effectiveness of the training process. Second, distinct a and \u1e9e values across layers indicate adaptability, with layers focusing on different features. Finally, shallow layers prioritize temporal features, while deeper layers emphasize spatial features, highlighting the dynamic spatio-temporal tuning necessary for improved network performance."}, {"title": "V. CONCLUSION", "content": "The DA-LIF model is a novel approach based on investigating the role of glial cells in neural synapses and supported by experimental findings. It introduces spatial and temporal tuning mechanisms that regulate neuron membrane permeability, allowing selective feature extraction from input signals in both spatial and temporal dimensions. By incorporating independently learnable decay parameters across neurons and layers, the model achieves heterogeneous filtering and prioritization of inputs. This results in superior performance, achieving state-of-the-art accuracy on static and neuromorphic datasets with fewer timesteps. Extensive ablation studies further validate the model's robustness and effectiveness."}]}