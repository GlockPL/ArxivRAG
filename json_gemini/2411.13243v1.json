{"title": "XMask3D: Cross-modal Mask Reasoning for Open Vocabulary 3D Semantic Segmentation", "authors": ["Ziyi Wang", "Yanbo Wang", "Xumin Yu", "Jie Zhou", "Jiwen Lu"], "abstract": "Existing methodologies in open vocabulary 3D semantic segmentation primarily concentrate on establishing a unified feature space encompassing 3D, 2D, and textual modalities. Nevertheless, traditional techniques such as global feature alignment or vision-language model distillation tend to impose only approximate correspondence, struggling notably with delineating fine-grained segmentation boundaries. To address this gap, we propose a more meticulous mask-level alignment between 3D features and the 2D-text embedding space through a cross-modal mask reasoning framework, XMask3D. In our approach, we developed a mask generator based on the denoising UNet from a pre-trained diffusion model, leveraging its capability for precise textual control over dense pixel representations and enhancing the open-world adaptability of the generated masks. We further integrate 3D global features as implicit conditions into the pre-trained 2D denoising UNet, enabling the generation of segmentation masks with additional 3D geometry awareness. Subsequently, the generated 2D masks are employed to align mask-level 3D representations with the vision-language feature space, thereby augmenting the open vocabulary capability of 3D geometry embeddings. Finally, we fuse complementary 2D and 3D mask features, resulting in competitive performance across multiple benchmarks for 3D open vocabulary semantic segmentation. Code is available at https://github.com/wangzy22/XMask3D.", "sections": [{"title": "1 Introduction", "content": "As the integration of vision and language in deep learning continues to expand, text descriptions are increasingly utilized in visual generation [37, 50, 39, 35, 26, 40] and perception [36, 22, 23, 13, 45, 12] tasks. This integration enhances the adaptability of models in real-world applications and improves user experiences in customized artificial intelligence systems. Open vocabulary 3D semantic segmentation exemplifies a perception task that is trained on base categories and demands robust extrapolation capabilities to discriminate fine-grained geometry in novel categories that are invisible during training. The base and novel classes are only linked by the shared open vocabulary within the language space. However, constructing a shared 3D-text space while maintaining precise, modality-specific representation remains a significant challenge. Successfully addressing this issue would advance open vocabulary 3D semantic segmentation, facilitating virtual reality interactions and manipulations, and thereby contributing to the development of user-friendly robotics and autonomous driving technologies.\nExisting approaches for open vocabulary 3D perception predominantly aim to bridge the gap between 3D and text representations by using the 2D modality as an intermediary. One line of research [34,"}, {"title": "2 Related Work", "content": ""}, {"title": "2.1 2D Open Vocabulary Segmentation", "content": "Open vocabulary perception is a recently emerged research problem that focuses on enabling perception models to recognize novel categories that are invisible during supervised training, relying solely on a shared language vocabulary with the base categories. The key to addressing this problem lies in the Vision-Language model, which creates a shared embedding space for images and texts. Based on the types of Vision-Language models, previous literature on 2D open vocabulary segmentation can be broadly divided into two approaches: utilizing Vision-Language perception models like CLIP [36] or leveraging Vision-Language generation models like the diffusion model [18, 37].\nAlthough traditional Vision-Language perception models like CLIP are primarily designed for classification, open vocabulary segmentation can also be viewed as a dense classification task. Consequently, several studies have proposed aligning dense image features with 2D-text embeddings, a concept pioneered by LSeg [23]. Successor models have introduced various techniques to enhance the feature alignment process, including attention-based combinations [30, 12], mask embedding decoupling [10], side network injection [46, 24], and cross-modal aggregation [6].\nGenerative-based methods utilize Vision-Language generation models, such as diffusion models, to produce segmentation masks that can be extrapolated to open vocabulary categories. Since the diffusion model can generate semantically meaningful images based on text conditions, its intermediate features effectively represent the vision-language embedding space. ODISE [45] first proposed using the intermediate features from the denoising UNet of a pre-trained diffusion model as input to a mask generator for segmentation. Other works [25, 21, 41] leverage the strong generative capabilities of the diffusion model to create prototypes or augmented image-mask pairs, thereby enhancing the open vocabulary capacity of the segmentation model from a data perspective."}, {"title": "2.2 3D Open Vocabulary Segmentation", "content": "In 3D vision, Semantic Abstraction [15] opens up the avenue to leverage Vision-Language models for open-world 3D scene understanding. Subsequent studies have primarily developed two types of methods to address 3D open vocabulary segmentation: feature alignment and model distillation.\nThe principle of feature alignment methods is to explicitly pull 3D representations towards the vision-language embedding space, using the 2D modality as a mediator to establish 3D-text relationships. OpenScene [34] employs a cosine similarity loss between point cloud features and image CLIP features, integrating them for open vocabulary perception. PLA [11] introduces hierarchical 3D caption pairs to progressively align scene-level, view-level, and entity-level features with the CLIP feature space in a coarse-to-fine manner. Its successor, RegionPLC [47], further introduces region-level captions with sliding windows and object bounding boxes, while CLIP-FO3D [49] similarly divides super-pixels for finer feature alignment. UniM-OV3D [16] utilizes a pre-trained point-text model, PointBind [14], to enforce uni-modality representation learning of point clouds, images, depth maps, and texts. OV3D [20] proposes leveraging foundation models to establish point-entityText associations through pixel, thereby enhancing open-vocabulary recognition within the 3D domain.\nModel distillation methods typically involve selecting a foundational Vision-Language model and transferring its knowledge to a 3D network using paired point clouds and image data. Seal [28] introduces spatial contrastive learning and temporal consistency regularization to distill vision foundation models for point cloud sequence segmentation in an open vocabulary setting. 3D-OVS [27] aims to distill CLIP [36] and DINO [2, 33] into a neural radiance field [32] using novel alignment losses for 3D perception. Xiao et al. [44] propose object-level and voxel-level distillation losses for fine-grained 3D open vocabulary panoptic segmentation."}, {"title": "3 Approach", "content": ""}, {"title": "3.1 Overview", "content": "The detailed architecture of XMask3D is depicted in Figure 2. It consists of three components: a 3D geometry extraction branch, a 2D mask generation branch, and a 3D-2D feature fusion module.\nThe 3D geometry extraction branch is an encoder-decoder segmentation network, which can be"}, {"title": "3.2 3D-to-2D Mask Generation", "content": "Design Insights. An optimal 2D branch is expected to exhibit robust open vocabulary capabilities, enabling it to predict accurate masks for novel categories. To this end, we employ the denoising UNet of the renowned text-to-image diffusion model [37] to extract features from the well-established text-2D embedding space, followed by a mask generator to convert features into segmentation masks."}, {"title": "Preliminary: Open Vocabulary Mask Generation with diffusion.", "content": "The inference process of a text-to-image diffusion model [37] begins with a random Gaussian noise and a conditional text embedding, generating high-quality images through iterative denoising steps. ODISE [45] was the first to propose the use of the denoising UNet of a pre-trained diffusion model for open vocabulary 2D segmentation. Given an input image x, a noisy image xt is first sampled at time step t:\n$x_t = \\sqrt{\\bar{a}_t}x + \\sqrt{1 - \\bar{a}_t}\\epsilon, \\epsilon\\sim N(0, I)$ (2)\nwhere $\\bar{a}_t = \\Pi_{k=1}^{t}\\alpha_k$, and $\\alpha_1,..., \\alpha_{\\tau}$ are pre-defined noise schedule. Then the diffusion model's visual representation f can be computed via the denoising step:\n$f = UNet(x_t, MLP\\circ V(x))$ (3)\nwhere the denoising UNet is the building block of the diffusion model, MLP stands for multi-layer perceptron, and V is a frozen CLIP image encoder to encode x into the vision-language embedding space. V(x) is the implicit caption embedding which serves as the text condition input to the diffusion model. Subsequently, the mask generator, implemented with Mask2Former [4, 3], uses the feature f to produce M class-agnostic binary masks $M_{2d}$ and their corresponding mask embedding features Fmask. Since f is highly representative of the vision-language feature space, the model is inherently capable of generating open vocabulary segmentation masks and embeddings. The experimental results of ODISE strongly confirm this hypothesis."}, {"title": "Geometry-aware Mask Generation.", "content": "In XMask3D, the 2D mask generation branch is implemented by a variant of the ODISE model. We propose an Implicit 3D Captioner that takes the global 3D feature $f_{3d} \\in R^{1\\times C_g}$ from the 3D encoder as input, and predicts the implicit condition embedding to be injected into the diffusion model. Then Equation 3 can be replaced by:\n$f = UNet(x_t, MLP\\circ f_{3d}), f_{3d} = \\mathcal{E}(P)$ (4)\nwhere $\\mathcal{E}$ represents the encoder of the point cloud segmentation model, and $C_g$ denotes the feature dimension of the global point cloud feature. The rationale behind this design is twofold. First, since MLP $f_{3d}$ serves as the text condition for the pre-trained denoising UNet with frozen weights, the training objective of the 2D mask generation branch implicitly pushes $f_{3d}$ closer to the text-2D feature space. If $f_{3d}$ does not align with this space, the pre-trained denoising UNet will not recognize the condition, resulting in a high loss of the 2D branch. Through gradient descent, the point cloud encoder gradually distills some vision-language knowledge from the pre-trained and frozen denoising UNet. Second, $f_{3d}$ encapsulates rich 3D geometric information that the 2D branch lacks due to occlusion and dimensional compression issues inherent in images. Using $f_{3d}$ as the condition for the 2D branch encourages the model to produce geometry-aware mask outlines and embeddings, facilitating the back-projection of 2D masks into 3D space. The effectiveness of the proposed geometry-aware mask generation will be validated through quantitative ablation comparisons in Section 4.3."}, {"title": "3.3 2D-to-3D Mask Regularization", "content": "Although some vision-language knowledge from the diffusion model is distilled to the point cloud encoder $\\mathcal{E}$ via the proposed Implicit 3D Captioner, the 3D feature $f_{3d}$ still deviates from the 2D-text embedding space. This is because there is no constraint on the point cloud decoder D, and the encoder distillation via gradient descent is inherently weak. Consequently, it is crucial to introduce contrastive regularization in the training pipeline to explicitly align 3D features with the shared 2D-text embedding space. Existing contrastive learning methods [34, 11] between 3D features and 2D-text features typically explore global, patch-wise, or point-wise relations. However, global contrastive learning is too coarse, and point-wise feature alignment is prone to noise. While patch-wise contrastive learning is more fine-grained and robust, it still lacks semantic clarity. A patch in a 2D image may correspond to multiple irrelevant and discontinuous regions in a 3D point cloud due to depth compression, resulting in ambiguous and less representative local features in 3D."}, {"title": "To this end, we propose an explicit 2D-to-3D mask regularization term for fine-grained and consistent feature space alignment between the 3D and 2D-text modalities. Specifically, we extract 3D mask embeddings $G_{3d} \\in R^{M\\times C}$ from 3D features $F_{3d}$ using the back-projected 3D binary mask $M_{3d}$:", "content": "$G_{3d}^{i} = avgpool(F_{3d}|_{M_{3d}^i = 1}), 1 \\leq i \\leq M$ (5)\nwhere $G_{3d}^{i} \\in R^{1\\times C}$ represents the $i^{th}$ mask embedding, and avgpool signifies the average pooling operation. $F_{3d}$ is sampled from $F_{3d}$ at indices where $M_{3d}^i = 1$, with $M_{3d}^i$ being the $i^{th}$ binary mask.\nGiven the 2D binary mask $M_{2d}$ and the input image I, we can also derive a ground truth mask CLIP feature $G^{CLIP}$ via a pre-trained CLIP model [36]. For detailed information on obtaining the ground truth $G^{CLIP}$, please refer to MaskCLIP [12] or Section A.1. Subsequently, the 2D-to-3D regularization term can be computed using a classical cosine contrastive loss:\n$\\mathcal{L}_{mask} = \\frac{1}{M}\\sum_{i=1}^{M} \\frac{G_{3d}^i \\cdot (G^{CLIP})^T}{||G_{3d}^i||||G^{CLIP}||}$ (6)\nAs each mask region ideally corresponds to a distinct category, the pooled mask embedding achieves semantic consistency and representativeness. Consequently, contrastive learning at the mask level offers finer granularity than global contrast, greater robustness than point-wise contrast, and clearer distinction than patch-wise contrast. Through our proposed 2D-to-3D mask regularization, the 3D features are explicitly aligned with the 2D-text feature space, enhancing the performance of the 3D branch in open vocabulary segmentation. This progress is further substantiated by the ablation studies outlined in Section 4.3."}, {"title": "3.4 3D-2D Mask Feature Fusion", "content": "The 3D-2D mask feature fusion block is devised to merge 3D features $F_{3d} \\in R^{N\\times C}$ with the pseudo mask feature $F_{2d} \\in R^{N'\\times C}$ derived from the 2D branch. It is noteworthy that each element in $F_{3d}$ possesses unique and distinguishing embeddings, whereas elements in $F_{2d}$ pertaining to the same mask share identical mask embeddings. Consequently, $F_{3d}$ offers detailed geometric structural information, while $F_{2d}$ provides semantic features with robust open vocabulary capabilities. Our approach combines features from these two modalities to leverage their complementary insights, resulting in $F_{fuse}$ which excels in both precise geometry delineation and expansive semantic extrapolation. Concretely, given that N' < N, we selectively merge $F_{2d}$ and $F_{3d}$ solely on the N' points where correspondences exist:\n$F_{fuse} = \\begin{cases} MLP \\circ cat(F_{3d}, F_{2d}) & \\text{have correspondence} \\\\ F_{3d} & \\text{no correspondence} \\end{cases}$ (7)\nwhere cat represents concatenation. Ablation studies in Section 4.3 and visualization results in Section 4.2 will demonstrate that $F_{fuse}$ effectively integrates the strengths of both $F_{3d}$ and $F_{2d}$."}, {"title": "3.5 Training Objectives", "content": "In XMask3D, our training strategy encompasses supervised segmentation loss ($\\mathcal{L}_{seg}$) computed from 3D ($\\mathcal{L}_{3d}^{seg}$), 2D ($\\mathcal{L}_{2d}^{seg}$), and fusion ($\\mathcal{L}_{fuse}^{seg}$) modalities. We employ Cross Entropy loss for 3D and fusion segments, and for 2D, we adopt multi-head losses including Cross Entropy, Dice, and Focal Loss, following ODISE [45] and Mask2Former [4, 3] guidelines. Additionally, we follow PLA [11] to introduce a binary head and view-level contrastive loss. The binary head is optimized with Binary Cross Entropy loss ($\\mathcal{L}_{bi}$) to differentiate between base and novel categories. The view-level contrastive loss ($\\mathcal{L}_{view}$) is calculated between the view global feature and text embedding of the view image caption, weighted by respective coefficients (w3dw, Wview, w2d wfuse Detailed information about the binary head and the view-level regularization can be found in the PLA paper or in Section A.3 and A.2. In conclusion, the overall training objective can be adjusted by:\n$\\mathcal{L} = w_{seg} \\mathcal{L}_{seg} + w_{mask} \\mathcal{L}_{mask} + \\mathcal{L}_{view} + w_{bi} \\mathcal{L}_{bi}$ (8)\nwhere $w_{seg}, w_{mask}, w_{3d}^{view}, w_{view}^{view}, w_{2d}^{view}, w_{fuse}^{view}$, is, whi, are loss weight hyperparameters."}, {"title": "4 Experiments", "content": ""}, {"title": "4.1 Experiment Settings", "content": "Datasets. In accordance with prior literature, our research conducts experimentation on two prominent indoor scene datasets: ScanNet [9] and S3DIS [1]. ScanNet, a foundational dataset in this domain, comprises 1201 scenes allocated for training and 312 scenes designated for validation. Each scene within ScanNet furnishes point cloud data, multi-view images, and corresponding camera pose matrices. Similarly, S3DIS offers analogous data modalities, encompassing 271 rooms across six distinct indoor environments. Conforming to established conventions, we reserve Area 5 of S3DIS for validation purposes, ensuring consistency with prior methodologies.\nCategory Partition. In alignment with previous research, we exclude the otherfurniture class and partition the remaining classes into three benchmarks: B15/N4, B12/N7, and B10/N9. Here, B15 signifies the 15 fundamental categories that remain visible and supervised during the training process, while N4 denotes the presence of 4 novel categories introduced during evaluation. For the ScanNet variant featuring 200 classes [38], we adopt a similar approach, dividing the dataset into B170/N30 and B150/N50 benchmarks, each representing a distinct configuration of base and novel categories. Similarly, in the case of S3DIS, comprising 13 classes, we disregard the clutter class and organize the dataset into B8/N4 and B6/N6 benchmarks. Detailed information can be found in Section A.4.\nMetrics. Following PLA [11], we present the mean Intersection over Union (mIoU) scores separately for both base and novel categories to assess open vocabulary segmentation performance. Additionally, to provide a comprehensive evaluation of the segmentation capability, we report the harmonic mean IoU (hIoU) derived from the mIoU scores of base and novel categories. This holistic metric offers insights into the overall segmentation efficacy across the dataset.\nImplementation Details. Our implementation incorporates MinkUNet [7] as the 3D branch and ODISE [45] as the 2D branch within the architecture. For the vision-language model, we opt for CLIP-L [36]. The training regimen for the XMask3D model involves utilizing the AdamW optimizer [29] with a Cosine learning rate scheduler. We train the model for 150 epochs on 4 NVIDIA A800 GPUs, employing a batch size of 64. Notably, we introduce mask-level regularization to the training pipeline after the initial 50 epochs. This decision is motivated by the observation that the quality of mask prediction at the onset of training may be suboptimal, making the mask-level contrastive loss ineffective and potentially misleading. Detailed information regarding hyperparameter selections is provided in Section A.4."}, {"title": "4.2 Main Results", "content": "Quantitative Comparisons. From Table 1 and Table 2, our proposed XMask3D outperforms previous methods across most benchmarks, irrespective of the novel category proportion or dataset sources. The performance indicates that XMask3D is a robust and generalizable method for open vocabulary 3D semantic segmentation. Notably, we compare XMask3D with our baseline method, PLA, on novel category performance. On the ScanNet dataset, XMask3D demonstrates improvements ranging from 7.4% to 20.0% over PLA. On the ScanNet200 dataset, XMask3D surpasses PLA by an impressive"}, {"title": "4.3 Ablation Studies", "content": "In this section, we comprehensively discuss the design choices of XMask3D through extensive ablation studies on the ScanNet B12/N7 benchmark. The results are presented in Table 3."}, {"title": "Mask Generation Condition.", "content": "In Section 3.2, we introduce an Implicit 3D Captioner to convert global 3D features into implicit condition embeddings for the diffusion model. In Table 3a, we compare this implicit 3D condition with the vanilla text condition and implicit 2D condition. The text condition is generated by a ViT-GPT2 [48] captioning model and encoded via the frozen CLIP text encoder. The 2D condition is generated by the frozen CLIP image encoder and a learnable MLP, following the design in ODISE [45] (Equation 3). Our proposed implicit 3D condition outperforms the others in novel category segmentation, demonstrating that integrating the 3D global feature with the diffusion model produces the most compatible open vocabulary masks with the 3D branch."}, {"title": "Mask Regularization.", "content": "In Section 3.3, we propose a fine-grained mask regularization term to align 3D features with the 2D-text embedding space. In the first line of Table 3b, we remove the fine-grained mask-level loss Lmask from the training pipeline. Besides the final results from the fusion block, we also report the intermediate results from the 2D and 3D branches. The inclusion of the mask loss results in a significant improvement of 11.7 in 3D performance on novel categories, demonstrating that our fine-grained mask-level regularization effectively brings 3D features closer to the 2D-text embedding space. Additionally, the performance gain on the fused output is 1.5, highlighting the positive impact of this regularization from 3D to fusion features."}, {"title": "4.4 Limitations", "content": "Due to resource constraints, we only evaluate the performance of XMask3D on semantic segmentation in this study. However, the XMask3D pipeline has the potential to be extended to the instance and panoptic perception by replacing the 3D backbone with an instance or panoptic segmentation model."}, {"title": "A Additional Implementation Details", "content": ""}, {"title": "A.1 Mask-level Regularization", "content": "Mask-level regularization facilitates local and finely-grained alignment between features extracted from the 3D branch of XMask3D and the 2D-text embedding space. The ground truth for mask-level loss is computed using MaskCLIP [12], utilizing the predicted segmentation mask $M_{2d} \\in R^{M\\times H\\times W}$ and the view image $I\\in R^{3\\times H\\times W}$.\n$G^{CLIP} = MaskPooling(\\mathcal{V}(I), M_{2d})$ (9)\nwhere M represents the number of masks, and H and W denote the height and width of the image, respectively. $\\mathcal{V}$ refers to the pre-trained CLIP [36] image encoder.\nSpecifically, the view image I is encoded into image tokens $T_{1} \\in R^{N\\times C}$ with the pre-trained CLIP image model, where N is the number of image tokens and C is the dimension of the CLIP embeddings. The class token $T_{c} \\in R^{1\\times C}$ is duplicated M times as the mask class tokens $T^{m} \\in R^{M\\times C}$. Then $T_{1}, T_{C}, T_{M}$ are concatenated together to perform masked attention with frozen weights from the pre-trained CLIP image model. The attention mask is designed as\n$M = \\begin{bmatrix} T^{(N+1)\\times (N+1)} & T^{(N+1)\\times M} \\\\ P_{M\\times N} & F_{M\\times 1} & T_{M\\times M} \\end{bmatrix}$ (10)\nwhere $T_{m\\times n}$ is an $m \\times n$ True matrix, $F_{m\\times n}$ is an $m \\times n$ False matrix and P is defined as:\n$P_{ij} = \\begin{cases} False & \\text{if mask contains at least one pixel in patch;} \\\\ True & \\text{otherwise.} \\end{cases}$ (11)\nwhere True means that this position is masked out i.e. not allowed to attend and False otherwise. Then the updated mask class tokens $T^{M}$ from the masked attention layers can be regarded as the CLIP embedding of the masked regions, serving as the ground truth $G^{CLIP}$ for mask-level regularization."}, {"title": "A.2 View-level Regularization", "content": "The view-level regularization facilitates coarse and high-level alignment between features extracted from the 3D branch and the 2D-text embedding space. To elaborate, upon receiving an image I, we initially generate its text caption using a pre-trained captioning model, ViT-GPT2 [48]. Subsequently, we employ the pre-trained CLIP [36] text encoder to encode the text caption into the 2D-text embedding space, yielding $f^{view}_{text}$, which serves as the ground truth for view-level regularization.\nWe perform average pooling operation on dense 3D point cloud features, 2D image features and fused features to obtain their global embeddings $f^{3d}_{view}, f^{2d}_{view}, f^{fuse}_{view}$. Then we implement contrastive loss between global features and the ground truth text embeddings:\n$\\mathcal{L}^{view}_{m} = 1 - \\frac{f^{m}_{view}(f^{view}_{text})^T}{||f^{view}_{text}||||f^{m}_{view}||}$ (12)\nwhere m = 3d, 2d, fuse denotes different modalities."}, {"title": "A.3 Binary Head", "content": "Following PLA [11], we include a binary head to predict whether the points belong to base or novel categories. We implement a small 3D model as the binary head with minimum computation cost. The prediction sb is utilized to modulate the over-confident semantic score s:\ns = SB \u00b7 (1 \u2212 s\u266d) + sn \u2022 s\u266d (13)\nwhere SB is the semantic score computed solely on base classes with novel class scores set to zero. Similarly, SN is computed only for novel classes, setting base class scores to zero."}, {"title": "A.4 Training and Inference Settings", "content": "Training. The supervised segmentation loss $\\mathcal{L}^{seg}_{seg}$ is calculated via the per-point classification Cross Entropy Loss on N points:\n$\\mathcal{L}_{seg} = \\frac{1}{N} \\sum CrossEntropy (p, y_i)$ (14)\np = Softmax(Fm. Fext/T) (15)\nwhere m = 3d, 2D, fuse denotes different modalities, yi is the ground truth for base categories, Fm is the normalized feature, and $\\tau$ is a learnable temperature parameter.\nInference. We follow ODISE [45] to combine the predicted logits p with the prediction from a text-image discriminative model to enhance the open vocabulary classification capacity of the model. Specifically, we leverage the mask-level regularization ground truth feature GCLIP from Section A.1 to modulate the segmentation logits:\n$P_{final} = \\hat{p}^{\\lambda} \\cdot P_{aux}^{(1-\\lambda)}$ (16)\n$P_{aux} = Softmax(G_{CLIP} F_{text}/ \\tau)$ (17)\nwhere GCLIP is the normalized feature of GCLIP, $\\lambda \\in [0, 1]$ is the fixed balancing factor.\nHyper-parameters. For all benchmarks, we set the same wseg = 4, $w_{view} = 1$, $w_{2d}^{view} = 4$, $w_{fuse}^{view} = 1.5$ as the hyper-parameter choices. The Wmask and wbi are set differently across benchmarks. We"}]}