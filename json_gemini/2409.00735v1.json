{"title": "AgGym: An agricultural biotic stress simulation environment for ultra-precision management planning", "authors": ["Mahsa Khosravi", "Matthew Carroll", "Kai Liang Tan", "Liza Van der Laan", "Joscif Raigne", "Daren S. Mueller", "Arti Singh", "Aditya Balu", "Baskar Ganapathysubramanian", "Asheesh Kumar Singh", "Soumik Sarkar"], "abstract": "Agricultural production requires careful management of inputs such as fungicides, insecticides, and herbicides to ensure a successful crop that is high-yielding, profitable, and of superior seed quality. Current state-of-the-art field crop management relies on coarse-scale crop management strategies, where entire fields are sprayed with pest and disease-controlling chemicals, leading to increased cost and sub-optimal soil and crop management. To overcome these challenges and optimize crop production, we utilize machine learning tools within a virtual field environment to generate localized management plans for farmers to manage biotic threats while maximizing profits. Specifically, we present AgGym, a modular, crop and stress agnostic simulation framework to model the spread of biotic stresses in a field and estimate yield losses with and without chemical treatments. Our validation with real data shows that AgGym can be customized with limited data to simulate yield outcomes under various biotic stress conditions. We further demonstrate that deep reinforcement learning (RL) policies can be trained using AgGym for designing ultra-precise biotic stress mitigation strategies with potential to increase yield recovery with less chemicals and lower cost. Our proposed framework enables personalized decision support that can transform biotic stress management from being schedule based and reactive to opportunistic and prescriptive. We also release the AgGym software implementation as a community resource and invite experts to contribute to this open-sourced publicly available modular environment framework.", "sections": [{"title": "1 Introduction", "content": "Pests and diseases are a major threat to crop yields and consequentially to food security. On a global scale, pest and disease outbreaks result in an average of 10-30% crop yield losses annually Savary et al. [2019]. Climate change also poses an increased threat of crop pests and diseases, especially as increasing temperatures in temperate regions could potentially allow for greater reproduction, expansion of geographic distribution, and increased overwintering survival Skend\u017ei\u0107 et al. [2021], Juroszek and von Tiedemann [2015]. Precision agriculture approaches provide a promising approach to localized and just-in-time mitigation, ensuring profitable and sustainable farming. However, it has not been used in the management of pests/diseases in the way that it has been used in weed management, soil fertility, and planting \u0160arauskis et al. [2022].\nRecently, the paradigm of cyber-agricultural systems (CAS) has emerged, utilizing multimodal sensing, AI and machine learning (ML), and intelligent actuation to enable real-time monitoring and precise control of pests and diseases Sarkar et al. [2024], Bhakta et al. [2019]. For example, new advances in remote sensing have enabled prescriptive herbicide applications using Unpiloted Aerial Vehicles (UAVs) Stroppiana et al. [2018], and real-time sensors have been used effectively for precision spraying with no difference in yield from conventionally managed fields Zanin et al. [2022]. A recent work developed an agricultural digital twin for mandarins for designing individualized management practices at an intra-orchard scale Kim and Heo [2024]. Overall, CAS can optimize interventions, reduce excessive chemical use, and provide actionable insights for healthier crops, increased yields, and sustainable farming practices. However, for the success of CAS, we need better and pertinent sensing, modeling and reasoning, and actuation strategies in a scale-agnostic and time-sensitive manner.\nIn this paper, we focus on the modeling and reasoning aspect in the context of biotic stresses (i.e., pests and diseases) and their mitigation. While it is difficult to develop one unified model that works equally well for insect pests and diseases, we leverage some of their common features to establish a base model that can be refined in a context-specific manner. The early days of plant disease models were empirical and based on simple rules and graphs that incorporated information from disease cycles and weather Stern et al. [1959]. Today, we have moved to more dynamic models that include spatial and temporal aspects of the disease triangle and cycle. This incorporates the dynamics of plant disease epidemics and modelling of crop losses, which includes the study of plant pathogens on crop growth, development, and performance Rossi et al. [2010], Horsfall et al. [1959], De Wolf and Isard [2007], Krause and Massie [1975], Gonz\u00e1lez-Dom\u00ednguez et al. [2023]. Crop entomologists and pathologists have also extensively studied multiple crops and pests interactions, which is the basis of many pest growth and development models, as well as models that estimate the effect on crop yield. These studies have been the basis for establishing Integrated Pest Management (IPM) approaches to manage crop losses (the integrated control concept), Radcliffe et al. [2009], management practices such as economic injury levels (EILs) Catangui et al. [2009] and relative risks of plant disease Fall et al. [2018]. However, standard crop models and simulation platforms (e.g., EPIC Williams et al. [1989], DSSAT Jones et al. [2003], and APSIM Keating et al. [2003]) typically do not account for biotic stresses, such as insect-pests and diseases.\nRecently, efforts have begun to bring crop models and disease models together, e.g., Triki et al, Triki et al. [2023] developed the Mediation Interface for Model Inner Coupling (MIMIC) that allows researchers to integrate plant disease models with crop growth models. Still, most of these models operate at the field scale rather than smaller areas within fields, thus overlooking the inherent spatial heterogeneity within production fields. To develop robust models that simulate impact and control of biotic stresses, it is essential to consider plant health status, relationships between host-pathogen-environment, disease cycles, pathogen development, and infection spread characteristics. These are non-trivial; and a monolithic modeling approach may not be a solution for all situations. Hence, there is a need to develop a modular and open-source simulator environment, which will enable the community to come together to build and personalize various models that work for different crops, production systems, pathogens, geographies, and climates.\nOur work aims to take the first step in filling this gap by developing a modular framework for simulating the development and spread of biotic stresses as well as estimating corresponding yield losses with and without chemical treatment. Specifically, we develop a simulator, called AgGym that simulates the effects of biotic stresses. This simulator also serves as an open-source Gym environment Brockman et al. [2016] that provides researchers with a versatile platform to explore and experiment with various management strategies under different environmental conditions using algorithmic approaches such as reinforcement learning (RL). In this regard, a few related works have emerged recently. For example, Overweg et al. proposed CropGym Overweg et al. [2021] that optimizes fertilizer application to maximize crop yield returns, which used the python crop simulation environment to simulate the inputs in the model. Gautron et al. converts the monolithic DSSAT crop model software to a gym-like python library for deep RL agent interactions. It facilitates daily engagements between an RL agent and the simulated crop setting within DSSAT and has been utilized to enhance nitrogen management Wu et al. [2022]. All these works proposed environments for crop yield maximization via fertilizer management policies Shaikh et al. [2022], Tonnang et al. [2017]. However, there is still a lack of validated Gym environments for designing biotic stress management strategies at a localized level and our work aims to bridge this gap. Specifically, we implement multiple popular deep RL algorithms within the AgGym environment and provide their baseline performances in optimizing chemical treatment schedules for real agricultural use cases."}, {"title": "2 Materials and Methods", "content": "AgGym is a modular simulation framework that consists of two primary modules: (i) infection spread module, and (ii) yield estimation module under infection with and without local chemical treatment. As shown in Fig. 1, AgGym"}, {"title": "2.1 Infection spread model", "content": "The plant science community has utilized models, such as Susceptible-Infected-Recovered (SIR) from human studies, to investigate the dynamics of plant disease spread Arias et al. [2018]. The SIR model is a simple population-scale model that can track the number of disease susceptible individuals (units) in a population, the number of individuals infected with the disease, and the number of individuals who have recovered. The model assumes that individuals can only be in one of three states: susceptible (can become infected), infected (can recover), or recovered (immune to the disease). This model is not fully applicable to plant diseases; as models need to account for host (i.e., plant), pathogen or agent (i.e., fungi or bacteria), and environment, catering to the disease triangle Horsfall et al. [1959]. In plant epidemiological studies, researchers use SIR models comprising differential equations for susceptible (S), infected (I), and recovered (R) populations, allowing investigations of simulated plant disease outbreaks in crops. An improved SEIR model defines categories for susceptible (S), latently infected (E), infectious (I), and post-infectious (R) individuals and have been utilized in fungal and viral diseases Jeger et al. [2018], Cunniffe et al. [2012]. These mathematical models, though imperfect, are still helpful to plan mitigation strategies.\nIn our proposed framework, we consider a \"simplistic\" model that coincides with observed patterns in crop fields and prior disease spread modeling, where pathogen vectors are more likely to take the shortest path from plant to plant Arias et al. [2018]. Taking into account the features of the disease and pest triangle, and the myriad of crops and diseases/pests that exist (viral, bacterial, fungal, insects) modeling plant disease or insect pests can become a daunting task Britannica [2024]. Focusing on disease and pest triangle - this model extends it to include IPM and reinfection probability after spraying. This further increases the issue of complexity by introducing chemical applications that differ in effectiveness, duration and pre-harvest-interval (PHI) Prodhan et al. [2018]. Due to the complexity of disease and insect-pest dynamics and their interactions with host and environment, we propose a modular approach. The modular aspect of this framework solves this problem by allowing the community to alter and create models that simulate the spread of not only insect and vector transmitted disease (viruses) but any biotic disease of interest and predict the outcomes of IPM.\nIn AgGym, we divide a given field into multiple sub-regions and denote the health status for a sub-region (i, j) by $H_{i,j}$. Therefore, the health status of the field can be represented as:"}, {"title": null, "content": "$$\\begin{aligned}\nH_{l,w} = \\begin{bmatrix}\nH_{1,1} & \\dots & H_{1,w} \\\\\n\\vdots & \\ddots & \\vdots \\\\\nH_{l,1} & \\dots & H_{l,\\omega}\n\\end{bmatrix}\n\\end{aligned}$$\n(1)"}, {"title": null, "content": "where l, w are the bounding lengths of the field. We can represent any arbitrarily shaped field into a set of rectangular areas. More details on how we handle arbitrary shaped fields can be found in the supplementary material (see Supplementary Material: Figure 9).. For simplicity, we discretize the health status into three levels, {$h_1$, $h_2$, $h_3$} as defined below.\nh1: Healthy status signifies that the plants in a sub-region are not affected by a biotic stress or it has recovered from a prior stress.\nh2: Infected status signifies that the plants in a sub-regions are affected by biotic stress(es) and it also has the capability of spreading infection to its neighboring sub-regions.\nh3: Degraded status signifies that the sub-regions is maximally affected by biotic stress(es) with a loss of yield and is not recoverable by chemical treatments. For model development purposes, we assume that a degraded sub-regions no longer has the capability of spreading infection to its neighboring plants in the larger region.\nDue to a modular framework, researchers can manipulate these scenarios as applicable to their host-disease or host-pest condition. With this setup, we define the probability of infection spread, denoted by $PIS(P_{i,j}|P_{k,l})$, as the probability of infection initiation at a sub-region $P_{ij}$ due to an infected sub-region $P_{k,l}$. The probability of infection spread is a function (S) of the physical distance between the two sub-regions, r and the environmental factors, E."}, {"title": null, "content": "$$PIS(P_{i,j}|P_{k,l}) = S(r, E)$$\n(2)"}, {"title": null, "content": "Depending on the biotic stress characteristics, there can be various environmental factors that may affect the infection spread between neighboring plants in a larger region such as terrain, soil distribution, and wind flow characteristics. For example, studies have identified Stripe Rust Puccinia striiformis f. sp. tritici epidemic infections based on wind patterns in wheat Chen [2005]. However, there is still a lack of biophysical understanding and mathematical formulations of how these environmental factors may impact local spread of biotic stresses. Hence, in this early attempt of building a biotic stress simulator, we ignore the effect of environment in local stress propagation. Similarly, the dependency of infection spread on physical distance may also manifest in various ways. In the current implementation, we consider a simple and intuitive model where, PIS becomes lower with increase of distance from the infected plants in a sub-region. Based on this assumption, we define three neighborhood zones with increasing distance from the infected sub-regions, with three discrete possible values of PIS, {$S_H$,$S_M$,$S_L$}, where the subscripts signify H = High, M = Medium, L = Low (see Fig. 2 (A)). Both the neighborhood sizes and {$S_H$,$S_M$,$S_L$} values are user-defined parameters. Further, we note that given our modular software architecture, the user can also import other S(r, E) functions in the framework that could be more suitable for specific use cases.\nUpon defining PIS, we now introduce the probability of infection, $PI(P_{i,j})$ for a given sub-regions $P_{i,j}$. Other than depending on the infection transmission probability from neighbors, $PI(P_{i,j})$ may also depend on the history of previous infections, and the history of chemical treatments. Both prior infections and chemical treatments may reduce the susceptibility of future infections. To capture these effects, we consider an additional scaling factor, 0 < > < 1 such that"}, {"title": null, "content": "$$PI(P_{i,j}) = \\frac{\\lambda}{\\sum\\limits_{\\{Nb(P_{i,j})\\}| P_{k,l} \\in Nb(P_{i,j})}}PIS(P_{i,j}|P_{k,l})$$\n(3)"}, {"title": null, "content": "where, {$Nb(P_{i,j})$} is the set of neighboring plants in a region of $P_{i,j}$ as defined by the user. In the current implementa- tion, we consider (1) \u03bb = \u03bbRI (RI stands for reinfection), when sub-region $P_{i,j}$ had a history of previous infection that it recovered from (possibly due to chemical treatment); and (2) \u03bb = \u03bbSpray, when sub-regions $P_{i,j}$ had been treated previously without any infection. While these are user-defined parameters, typically, we choose \u03bbRI < \u03bbSpray < 1. In all other cases, we consider X = 1. All these different possibilities are illustrated in Fig. 2 (B,C,D)."}, {"title": "2.2 Yield loss and management", "content": "From a crop production viewpoint, farmers are interested in producing a high-yielding, high-quality crop with optimal resource utilization. For practical application of IPM strategies, researchers can look at the issue of pathogen-induced crop losses from the perspective of potential yield > attainable yield > actual yield (farmer's realized yield). Yield- defining factors, such as sunlight, temperature, rainfall, crop phenology, and physiological status, are crucial for determining potential yield, while yield-limiting factors, such as water and nutrients, are vital for attainable yield."}, {"title": null, "content": "AgGym also includes the interaction of the type of pathogen, current plant phenology stage at initial infection, and the duration of infection Madden et al. [2000]. This builds the framework to accurately model the yield loss by taking into account the type of damage (e.g., target plant organ), how much damage (e.g., duration), and when it occurs (e.g., phenology stage) Cooke and Suski [2008], Ficke et al. [2018]. To illustrate, an infection that targets reproductive organs during flowering will cause more yield loss than an infection that targets leaf tissue during grain filling stage.\nFormally, let the actual yield ($Y_{act}$) be a fraction ($\u03b7_Y$) of the attainable yield ($Y_{att}$) due to the various stresses. We consider that the yield reduction is a function of duration of infection ($T_{inf}$) and the growth stage at the time of infection initiation ($G_{inf}$). As shown in Fig. 3 and suggested \u2018damage curve' in literature [Singh, 2010, p. 306], we choose an inverse sigmoid function form for g(\u00b7) that can capture how the actual yield may reduce as a function of the duration of infection as a fraction of the attainable yield. As the infection initiation occurs at a later growth stage, the function shifts upwards signifying a lower yield loss. Therefore,"}, {"title": null, "content": "$$\\eta_Y = \\frac{Y_{min}(G_{inf}) + (1 - Y_{min}(G_{inf}))}{1 + exp(\\frac{-T_{inf}+T_{50\\%}}{T_{50\\%}})}$$\n(4)"}, {"title": null, "content": "where, $Y_{min}(G_{inf})$ is the minimum actual yield obtained without any treatment for the stress which is a function of $G_{inf}$. $T_{50\\%}$ signifies the infection duration by which there will be 50% of the total yield loss. This function represents the yield decay of a crop after being infected and left untreated for a given $G_{inf}$.\nThe yield loss ($Y_{loss}$) can be further impacted by the severity of infection. Stress severity can be a function of the weather parameters. For example, historical studies of Sclerotinia sclerotiorum severity in soybean show that severity can be represented as a function of precipitation and average air temperature Fall et al. [2018]. Severity can also be quantified via scouting of stresses by experts or other means. In AgGym, we provide the flexibility of choosing either of these approaches to include the severity factor in simulation as shown in Fig. 3. The dependency of yield loss on severity can be determined based on domain knowledge about specific stresses for the crop of interest. In the current implementation, we assume a simple multiplicative decomposition as follows:"}, {"title": null, "content": "$$Y_{loss} = (1 \u2013 \u03b7_Y) \u00d7 S_{inf}$$\n(5)"}, {"title": null, "content": "where, $S_{inf}$ = [0, 1] is the (normalized) severity index. The yield loss is maximum for the highest severity index value 1 and there is no yield loss for the lowest severity index value 0."}, {"title": "2.3 Supervisory decision-making", "content": "AgGym framework is multi-faceted, and one of the uses includes the designing of optimal and precise farm management strategies. Here, we present an example use case where the AgGym simulation platform is used to develop an optimal schedule for chemical treatment in a field during an entire growing season. The goal here is to provide decision support to a farmer on 'when to spray' (i.e., spraying schedule) and \u2018what to spray' (i.e., type of chemical), given a perfect observation of the infection status of the field. We also assume that the infected plants in a sub-regions are sprayed accurately based on the spraying schedule using the suggested type of chemical. We acknowledge that some of these assumptions, such as perfect knowledge of infection and perfect actuation of spraying can be restrictive. However, this initial proof-of-concept study still demonstrates the potential of a supervisory decision-making framework developed"}, {"title": null, "content": "using AgGym. Future work by the broader research community can build on this work to consider more realistic constraints and relax some of the assumptions made here.\nSpecifically, we formulate a model-free deep reinforcement learning (RL) problem to design the supervisory decision-making framework described above. Reinforcement learning (RL) or deep reinforcement learning (DRL, RL that leverages deep neural networks to handle complex environment and action structures) aims to produce optimal sequence of actions (decisions) in an environment to obtain maximum expected reward as defined by the user. In our context, we aim to obtain optimal spraying schedule (action), given the infection status of a field (environment), to obtain maximum possible yield recovery with minimum amount or cost of chemical (reward). Mathematically, RL (or DRL) is formulated by a Markov Decision Process (MDP) described by a 4-tuple (S, A, T, R), where:\n\u2022 S represents the set of possible states of the environment.\n\u2022 A represents the set of all actions available to the RL agent.\n\u2022T: S \u00d7 A \u00d7 S' \u2192 [0, 1] is the transition function, indicating the environment's probability of transitioning from one state S to another state S' due to an action A.\n\u2022R: S \u00d7 A \u00d7 S' \u2192 R is the reward received by the agent for a transition from state S to state S' under the specific action A.\nThe objective of RL (or DRL) is to design an optimal policy \u03c0* that enables the agent to maximize the expected reward along a trajectory which is a sequence of states and actions ($s_0, a_0, s_1, a_1, ..., s_T, a_T$). The expected reward is calculated as $J(\\theta) = E_{\\tau \\~\\pi_{\\theta}} [\\sum_{t=0}^T \\gamma^t R(s_t, a_t, s_{t+1})]$, where \u03b8 signifies the parameters of the policy, and \u03b3 the discount factor. In the case of a DRL, the policy is modeled by a deep neural network. Hence, & denotes the parameters of the deep neural network that are learned by interacting with the environment. In addition, we also define 'horizon' as the duration over which the performance of a policy is assessed, and an 'episode' that describes a complete trajectory. With this setup, we describe the state, action and reward that we consider for our problem.\nRL for optimal spray scheduling\nIn this paper, we consider the health status matrix H of a field as the state observation. Other auxiliary information about the environment, such as weather parameters over the growing season, can be also be used as a part of the state observation, depending on user customization. In our implementation, we also allow the user to only consider certain manageable areas in the field (as opposed to the whole field) that may signify specific regions of the field with a historically high risk of infections.\nWe consider the set of possible actions as $a_\u03c0 = {NO, LE, ME, HE}$ denoting the \u2018no spray' (NO) decision, followed by spraying chemicals with different levels of effectiveness (and possibly with different cost), as described earlier. While we consider this specific discrete action formulation in this study, users can customize the action space with a simpler (e.g., binary action - spray or no spray) or a more complex (e.g., continuous action - how much to spray) depending of the demand of a specific application.\nThe objective of the RL agent is to mitigate the impact of biotic stresses and increase revenue. Hence, components of the reward functions are tightly related to the net revenue generated from each unit. Therefore, we consider an objective function that minimizes both yield loss as well as cost of chemical treatment. Specifically, we define the reward function, r\u2081, for the yield loss minimization as:"}, {"title": null, "content": "$$r_Y = -Y_{loss} \u00d7 UAY \u00d7 PPB$$\n(6)"}, {"title": null, "content": "where, UAY is the unit attainable yield and PPB is the price per bushel of yield. On the other hand, the reward function, r\u2082, for the cost of chemical minimization is defined as:"}, {"title": null, "content": "$$r_C = -|h_2(H) \u00d7 C(a_\u03c0) \u00d7 UPP$$\n(7)"}, {"title": null, "content": "where, $h_2(H)$ is the infection count of the field, $C(a_\u03c0)$ is the cost of chemical chosen by the policy \u03c0, and UPP is the unit pesticide price. Note that r\u2082 is zero when either there is no infection in the field or the RL agent suggests 'no spray'. Also, we reiterate that we assume a perfect observation of health status of the field, and spray is applied to only the infected sub-regions when the RL agent decides to spray.\nThe overall reward function r is expressed as r = rY + rC with the goal achieving r as close to zero as can be attained based on a given infection rate and severity. Similarly, with the State-Action formulation, the reward formulation is also customizable in a modular fashion."}, {"title": "3 Results and Discussion", "content": "We have performed extensive validation of the different modules of the proposed AgGym platform to demonstrate that it has the capability to emulate real agricultural systems with careful calibration. We also present a simulation-based example use case to show that the RL-based management may be able to reduce the cost and extent of chemical treatment while maintaining or improving yield recovery."}, {"title": "3.1 Stress simulation validation", "content": "We begin with the validation of the infection spread model that is critical for AgGym's applicability in real-world agricultural scenarios. In this section, we consider the spread of an insect pest in an agricultural field. We focus on evaluating the capability of AgGym to accurately capture both the spread of insects as well as the resulting impact on crop yield. This validation enables us to devise effective mitigation measures and facilitate evidence-based decision-making for implementing successful pest management strategies using AgGym."}, {"title": "Validation of insect pest spread", "content": "We present the validation process of our spread dynamic model using satellite imagery and the Normalized Difference Vegetation Index (NDVI) obtained from the satellite data provider, Planet PBC [2018-]. The main objective of this validation study is to evaluate the simulation model's capability to accurately replicate the observed spread patterns in real-world agricultural fields. We consider satellite data from an alfalfa field located in East Central Iowa that encountered an infestation of fall armyworm (Spodoptera frugiperda) the fall of 2021. Fall armyworm is an invasive pest of global importance that feeds on green leaves and other parts of a plant, causing severe agricultural losses Overton et al. [2021]. We analyzed the NDVI values for a specific time interval during the growing season. Typically, the NDVI value decreases as the fall armyworm damages the crop and hence, we considered areas with NDVI values below a threshold (0.7 in this paper) as infested regions. By incorporating these initial infested sections, our simulation model was able to simulate the spatial spread of infestation over time. The simulated NDVI values were then visualized alongside the real NDVI values from satellite data for the corresponding time intervals. Through a comparison of the NDVI trends from both sources, we can directly assess the accuracy and reliability of our spread dynamic model in capturing the spread of insect pests during the growing season."}, {"title": "Validation of yield loss and mitigation", "content": "We conducted an extensive analysis using real-world agronomic data collected from seven distinct farms in Iowa: Ames, NCRF (Kanawha), NERF (Nashua), NWRF (Sutherland), SCRF (McNay), SERF (Crawfordsville), and SWRF (Armstrong) between the years 2018-2020. The dataset from each farm comprised information on soybean yields and various stress/disease indices recorded, as represented in Fig 4-(B). The description of various crop stress and disease indices are provided in the supplementary material (see Supplementary Material: Agronomic Data Description). This information was collected under conditions with no pesticide application, and following the implementation of 19 various treatment regimens. These treatments included different fungicide products, their Fungicide Resistance Action Committee (FRAC) groups (indicating their mode of action), application rates, and the companies that manufacture them. Examples of the treatments include Miravis Neo (FRAC: 3,7,11; 13.7 oz/A; Syngenta), Domark 230 (FRAC: 3; 5 oz/A; Gowan), and Quilt Xcel (FRAC: 3,11; 10.5 oz/A; Syngenta) as shown in Table 2. The attainable soybean yield for each farm in each respective year was determined by taking an average of the yields linked to the top six treatments. From the attainable yield and the actual yield data, we were able to compute the yield loss percentages under each scenario.\nOur simulation model's yield loss prediction relied on the severity index of each field. As such, we derived the severity index for each farm by calculating the mean of all the severity indices noted for that particular farm. Furthermore, in our quest to validate our model's ability to account for different efficacy grades of pesticide application, we needed to compare it with real-world yield loss data obtained from treatments of varying effectiveness. Therefore, we categorized treatments based on their efficacy levels and computed the corresponding yield loss and severity indices."}, {"title": "3.2 Precision management planning", "content": "Upon validating the AgGym simulation modules, we demonstrate its use for designing optimal and precise farm management strategies. Specifically, we present a few benchmark model free deep RL policies trained with AgGym and evaluate their effectiveness in the context of our real life use cases."}, {"title": "Deep RL policy learning with AgGym", "content": "To demonstrate AgGym's utility as a RL gym environment, We deployed three deep RL strategies: the Double Deep Q Network (DDQN) Van Hasselt et al. [2016], a Q-learning-based method, and two prominent policy gradient algorithms, Proximal Policy Optimization (PPO) and Trust Region Policy Optimization (TRPO) Schulman et al. [2015], all implemented using Preferred Network's Deep RL library, PFRL Fujita et al. [2021]. In the experimental configuration, each episode was set to span 115 days, representing a typical crop growing season (for row crops in the Midwest of United States). Within this setup, the initiation of infection was programmed to occur during the reproductive stage, typically between time steps 44 to 55. Our evaluation and comparison of these algorithms were based on the average reward obtained during training over a window of 10,000 episodes. We conducted ten training runs with different random seeds for the growing season setting. More details of the experimental parameters can be found in the SI.\nInsights into the algorithms' performance can be derived from infection and spraying action sub-region over the course of the growing season (i.e, one episode for RL agent). As an example, Fig. 5 showcases the performance evaluation of the DDQN algorithm, based on the most optimal seed selected from ten training iterations, conducted on a farm near Ames, Iowa. In (A), the spatial dynamics of an infection is depicted, illustrating how infections emerge, spread, and are subsequently managed. Infected sub-regions are shown being sprayed and returning to health across various stages of the growing season. Additionally, (B-i) and (B-ii) detail the number of infected sub-regions and the different grades of pesticide application on these sub-regions, respectively, with darker sections indicating more efficient but costlier pesticide usage. A significant observation was the absence of any degraded or infected plants in a sub-region in the final phase preceding the harvest time termination. This clearly demonstrates the agent's capability to effectively apply pesticides in response to the detected threats, showcasing the system's responsiveness and precision in managing biotic stress. Note that we assume perfect observation of the infection state of the field and perfect actuation, i.e., error-free spraying of chemicals for these experiments. Results for different RL algorithms for different runs are summarized in the SI. Notably, the agent trained using TRPO showed superior performance compared to the others, achieving the maximum expected reward with the lowest standard deviation."}, {"title": "Schedule-based vs. RL-based management", "content": "We conducted a comparative analysis to evaluate the effectiveness of RL-based management strategies against the conventional agricultural practices in pest management. As the TRPO algorithm demonstrated the most promising results in terms of cost-effectiveness, we used the TRPO-generated policies for this analysis. The real-world scenarios employed for this evaluation (that were previously utilized for validating yield loss and mitigation strategies) encompass various fields such as Ames, NCRF (Kanawha), NERF (Nashua), NWRF (Sutherland), SERF (Crawfordsville) for the year 2018, SWRF (Armstrong) for 2019, and SCRF (McNay) for 2020. The objective is on contrasting the conventional approach of uniform chemical application across the entire field with the precision strategy employed in the RL setting, where chemical is applied only as necessary to infected sub-regions. This approach is quantified in the % Sprayed column of Table 1, showing the percentage of the field that received pesticide applications in the RL scenario, in contrast to the full-field application in real-world practices.\nThe results, as detailed in Table 1, show the potential gain for using the RL-based approach. Conventional practices typically involve extensive chemical application, leading to significant costs and yield losses. For instance, the traditional approach in the 2018 Ames scenario resulted in a pesticide cost of $2.14 per acre and an 18% yield loss. Conversely, the RL method, employing the TRPO algorithm, achieved a significant reduction in costs to $0.17 per acre and completely eliminated yield loss, with pesticide applications required on only 4.22% of the field. Such substantial decreases in chemical usage and yield loss across all fields investigated underscore not only the economic benefits of the optimization (RL in this paper) approach but also its potential to significantly enhance the sustainability of agricultural management."}, {"title": "4 Conclusion", "content": "The new paradigm of cyber-agricultural systems (CAS) Sarkar et al. [2024", "what-if scenarios": "fter calibrating for specific field geometries, weathers, crops, and stress types. Specifically, we note that the modular nature of our framework allows for modifying (e.g., changing the function structures, adding/removing variables) different parts of the simulator as needed. An important use of AgGym would be for designing optimized strategies for mitigating the impact of stresses. While agronomists, agricultural extension specialists, and farmers may find this useful, we anticipate that AgGym will also serve as a benchmark use case for the optimization and machine learning research community.\nAs indicated earlier, AgGym is an early attempt towards simulating biotic stresses and their impacts at a field-scale. Hence, there is a significant scope of improvement such as including impacts of additional environmental factors (e.g., wind, terrain) and historical data (useful"}]}