{"title": "Contrastive Learning Augmented Social Recommendations", "authors": ["Lin Wang", "Weisong Wang", "Xuanji Xiao", "Qing Li"], "abstract": "Recommender systems play a pivotal role in modern content platforms, yet traditional behavior-based models often face challenges in addressing cold users with sparse interaction data. Engaging these users, however, remains critical for sustaining platform growth. To tackle this issue, we propose leveraging reconstructed social graph to complement interest representations derived from behavioral data. Despite the widespread availability of social graphs on content platforms, their utility is hindered by social-relation noise and inconsistencies between social and behavioral interests. To mitigate noise propagation in graph data and extract reliable social interests, we introduce a dual-view denoising framework. This approach first applies low-rank singular value decomposition (SVD) to the user-item interaction matrix, generating denoised user embeddings for reconstructing the social graph. It then employs contrastive learning to align the original and reconstructed social graphs. To address the discrepancy between social and behavioral interests, we utilize a mutual distillation mechanism that decomposes interests into four subcategories: aligned social/behavioral interests and social/behavioral-specific interests, enabling effective integration of the two. Empirical results demonstrate the efficacy of our method, particularly in improving recommendations for cold users, by combining social and behavioral data. The implementation of our approach is publicly available at https://github.com/WANGLin0126/CLSRec.", "sections": [{"title": "1 Introduction", "content": "Recommender systems (RS) have now become an indispensable component of modern content platforms (e.g., music, video, review&rating), which provide personalized content to shape user experiences and drive engagement. Traditional recommendation models[1-5], and typical content recommendation models [6-10], typically score candidate items based on user characteristics extracted from behaviors (e.g., clicking, viewing). However, behavior-based recommendation models typically fail on cold users, who exhibit little behavior or are new to the platform [11-16]. Improving the personalized experience of cold users on RS can be helpful to drive engagement, and converting cold users into active users is vital to the continuous development of all content platforms.\nTo overcome the limitations of behavior-based models, we propose to leverage the social graph to complete the interest patterns. Social graphs on popular content platforms, including LastFM, Tik-Tok, and YouTube, are prevalent and easily accessible. Typical social graphs encompasse a variety of user relationships, such as mutual friendships, shared interests in movie stars, and subscriptions to the same TV series (Fig.1). It stands to reason that users who engage in these social interactions may share similar interest preferences. Consequently, integrating the social graph into RS could yield significant benefits. Nevertheless, despite the wealth of information in social graphs, behavior-based models face challenges in affectively harnessing this data.\nSocial Relation Noise. The heterogeneity of graph data introduces noise propagation, which makes the social interest inaccurate [17]. For example, users who are friends tend to have higher similarity, and their information propagation is considered beneficial for he performance of the recommendation system. However, the information propagation between celebrities and their fans needs to be carefully considered to avoid degrading the performance. On the other hand, considering the sparsity of social data, there is a significant proportion of users who have limited social connections. To enhance the representation capability of this sub-data in social relation, we adopt a dual-view denoising approach. The approach firstly applies low-rank SVD to the user-item matrix to obtain user embeddings. The advantage of low-rank decomposition is the ability to select principal components and remove unnecessary interference, effectively filtering the user-item matrix. Then, the user embeddings are used to calculate the similarity between all pairs of users for a reconstructed social graph. The contrastive learning between these two graphs is finally adopted as data augmentation for users, alleviating the challenges imposed by graph noise.\nInterest Inconsistency. Although social relations provide numerous information for each user, there exists distinct interest inconsistency between the social interest representation and the behavioral interest representation [17], which exposes challenge to effectively fuse the knowledge existing in the two interest. We adopt a \"mutual distillation\" method to co-extract the interest representations of social graphs and interactive behaviors. From the view of social interest, we distill the information from the social graph that is useful to the user interest representation. On the other hand, from the view of behavior interest, to avoid the knowledge loss in the behaviors, we isolate two distinct interest representations from the behavior-based interest, i.e., social-interest similar representation and behavior-specific representation. In this way, we fully fuse the knowledge of two domains for recommendation.\nIn general, our contributions can be summarized as follows:\n\u2022 We propose a novel social graph-enhanced method to traditional behavior-based graph recommendations, which incorporates social-relation de-noising and social-behavior alignment, and comprehensively exploit the knowledge in social relations.\n\u2022 Our method provides a dual-view contrast learning to purify the raw social relations and uses \"mutual distillation\" to co-extract the information from behaviors and social relations, which maximally fuse knowledge in both two interest representations without significant knowledge loss.\n\u2022 Experimental results on widely adopted industry datasets demonstrate the effectiveness of our method, especially for cold users, verifying that effectively fusing social relations and behaviors can be highly useful for modern recommendation platforms."}, {"title": "2 Methodology", "content": "In this section, we present our proposed Contrastive Learning Social Recommendation (CLSRec). It employs GNN to represent user-item behavior interaction and then filters the interaction graph to remove invalid connections, reconstructing a refined social graph view as the basis for generating refined user embeddings. To integrate user embeddings from the reconstructed and original graphs, we employ contrastive learning, which captures complementary information from both graphs. Given the two user representations derived from behaviors and social relations, we address the inconsistency between social interests and private behaviors. To achieve this, we disentangle the consistent and inconsistent information embedded in these representations. This disentanglement allows us to maximize the utility of the knowledge contained within both representations and construct a comprehensive user embedding."}, {"title": "2.1 Scoial Recommendation", "content": "Social recommendation approaches leverage two primary types of graphs to derive user and item embeddings: the user-item interaction graph and the user-user social graph. Specifically, the propagation for user-item interaction graph is modeled as follows:\n$e_{u,i}^{(l)} = \\sum_{v \\in N_i} \\frac{1}{\\sqrt{|N_i||N_v|}} e_{v,i}^{(l-1)} + \\sum_{j \\in N_u} \\frac{1}{\\sqrt{|N_u||N_j|}} e_{u,j}^{(l-1)}$\n(1)\nwhere $e_{u,i}^{(l)}$ and $e_{u,i}^{(l)}$ denotes the i-th user's and item's embedding in l-th layer, respectively. $N_i$ is the item neighborhood of user i, while $N_u$ are the user neighborhoods of the j-th item. For the social graph, the layer-wise propagation could represented as,\n$\\hat{e}_{u,i}^{(l)} = \\sum_{j \\in N_u} \\frac{1}{\\sqrt{|N_u||N_j|}} e_{u,j}^{(l-1)}$\n(2)\nwhere $\\hat{e}^{(l)}$ denotes the i-th user embedding in l-th layer obtained from the social graph. $N_u$ is the user neighborhood of j-th user in the social graph.\nAfter L rounds of propagation, the final embeddings for users and items are computed by mean each layer embeddings, encapsulating the aggregated information from both the user-item interaction graph and the social graph.\n$E_u = \\frac{1}{L+1} \\sum_{l=0}^L E_u^{(l)}, E_v = \\frac{1}{L+1} \\sum_{l=0}^L E_v^{(l)}, \\hat{E}_u = \\frac{1}{L+1} \\sum_{l=0}^L \\hat{E}_u^{(l)}$\n(3)"}, {"title": "2.2 Refine the Social knowledge", "content": "Social graphs are valuable in social recommendation as they can reflect purchasing behaviors, such as friends with strong ties sharing similar product preferences. However, they often include invalid relationships, such as users with limited social interactions, which lack mutual interests and can degrade recommendation performance. To address this, we propose reconstructing a refined social graph view using embeddings derived from the interaction graph through Singular Value Decomposition (SVD). Subsequently, contrastive learning is employed to align the user embeddings obtained from the reconstructed graph with those derived from the original social graph. This alignment process aims to suppress noise and enhance the performance of recommendations."}, {"title": "2.2.1 Reconstructed Social View", "content": "To construct the refined social graph view, SVD [18, 19] is first utilized to decompose the user-item interaction matrix $A \\in R^{M \\times N}$ as $A = USV^T$. Here, $S \\in R^{M \\times N}$ is a diagonal matrix of singular values, while $U \\in R^{M \\times M}$ and $V \\in R^{N \\times N}$ are orthogonal matrices of eigenvectors. The dimensions M and N represent the number of users and items, respectively. Singular values reflect the significance of their corresponding eigenvectors, referred to as principal components. To construct a low-rank approximation, we select the top k singular values and their associated components, forming:\n$A_k = U_kS_kV_k^T$,\n(4)\nwhere $A_k$ is a rank-k approximation, $U_k \\in R^{M \\times k}$ and $V_k \\in R^{N \\times k}$ contain the top k eigenvectors, and $S_k \\in R^{k \\times k}$ is a diagonal matrix of the k largest singular values.\nThen, a refined social view is reconstructed as,\n$A_S = U_kS_kU_k^T$,\n(5)\nwhere $A_S$ is a continuous approximation of the social view, differing from the binary nature of the original social and interaction graphs. For neighborhood aggregation on this reconstructed view, user embeddings are propagated as:\n$E'^{(l)} = A_S \\cdot E'^{(l-1)}$,\n(6)\nwhere l denotes the layer index. After L propagation layers, the final user embeddings are obtained by taking the average across all layers, $\\hat{E}_u = \\frac{1}{L+1} \\sum_{l=0}^L E'^{(l)}$."}, {"title": "2.2.2 Contrastive Learning Alignment", "content": "The reconstructed social view is considered an enhanced representation of social connections compared to the original social graph. For the same user from two different social graph view, the positive pairs is defined as ${(\\hat{e}_{u,i}, e_{u,i}) | i \\in U}$, while views of different users form negative pairs ${(\\hat{e}_{u,i}, e_{u,j}) | i, j \\in U, i \\neq j}$ [20]. The reconstructed social view is derived by filtering user embeddings through SVD and computing the dot product. While this reconstructed view often differs significantly from the original social graph, we aim to ensure that similar users in the original graph remain similar, and dissimilar users remain dissimilar. To achieve this, we employ contrastive loss [21, 22] to maximize agreement for positive pairs and minimize it for negative pairs:\n$\\mathcal{L}_{cl} = - \\sum_{i \\in U} log \\frac{exp(s(\\hat{e}_{u,i}, e_{u,i})/\\tau)}{\\sum_{j \\in U} exp(s(\\hat{e}_{u,i}, e_{u,j})/\\tau)}$,\n(7)\nwhere s(,) is the similarity function, set as cosine similarity in this work, and $\\tau$ is a hyperparameter."}, {"title": "2.3 Interest Inconsistency Alignment", "content": "Although social relations and user behaviors both contribute to user interest representation, inconsistencies often arise between a user's social interests and private behaviors. Directly combining these representations from different data domains may introduce noise and reduce effectiveness. To address this, we propose a \"mutual distillation\" method to extract valuable information from social relations and behaviors while isolating conflicting information to mitigate noise (Fig. 3)."}, {"title": "2.4 Training and Optimization", "content": "Ultimately, the dot product of these two embeddings $E_u$ and $E_v$ quantifies the user's predicted rating of the item. A higher score suggests an increased probability of the user selecting the product.\n$Y = E_u^TE_v$, where $Y \\in R^{M \\times N}$, the element $\\hat{y}_{ij}$ in which indicates the score of user i rating item j.\nFor the recommendation, we use the Bayesian Personalized Ranking (BPR) [25] loss, which states,\n$\\mathcal{L}_{bpr} = - \\sum_{u=1}^M \\sum_{i \\in N_u} \\sum_{j \\not\\in N_u} ln \\sigma (\\hat{y}_{ui} - \\hat{y}_{uj}) + \\lambda ||\\Theta^{(0)} ||^2$,\n(14)\nwhere $\\lambda$ is a hyperparameter which controls the regularization strength and $\\Theta^{(0)} = [E_u^{(0)}, E_v^{(0)}]$ are the init value of user and item embedding. Therefor, the final loss function is $\\mathcal{L} = \\mathcal{L}_{bpr} + \\alpha \\mathcal{L}_{cl}$, where $\\alpha$ is the hyperparameter to balance the BPR loss and contrastive learning loss."}, {"title": "3 Experiments", "content": "Our experiments are conducted on two real-world industry datasets, which vary in terms of scale and sparsity: LastFM\u00b9 and Ciao2. LastFM is a music-related dataset that records the friendships of 1,892 users and their interactions with 17,632 music items. Ciao is a database covering online shopping, containing ratings from 7,375 users on 105,114 products as well as the social relationships between users. During the experiments, we randomly split the interaction data of each dataset into a training set and a test set, with 80% of the data used for training and the remaining 20% used for testing. To fairly tune the hyperparameters of the model and prevent overfitting, we randomly select 10% of the training data as a validation set.\nTo evaluate the performance of CLSRec, we compare it with the following 4 state-of-the-art methods: BPR[25], a classic pairwise collaborative filtering algorithm optimized by maximizing the difference between the probability of a user interacting with positive samples and negative samples. DiffNet[26], a graph-based social recommendation method that generates final user representations by integrating user representation vectors from both the user-item interaction graph and the social graph. LightGCN[27], a widely applied model based on NGCF that further simplifies the model structure. SocialLGN[28], that is currently the most advanced social recommendation graph model based on LightGCN."}, {"title": "3.1 Performance Comparison", "content": "Table 1 compares the proposed method with state-of-the-art baselines on the LastFM and Ciao datasets using Precision, Recall, and NDCG metrics. On the LastFM dataset, the proposed method consistently outperforms SocialLGN in most metrics, achieving notable improvements in Precision@10, Recall@10, and NDCG@10, with gains of up to 1.92%. On the Ciao dataset, the proposed method demonstrates significant improvements in Precision and NDCG, particularly at top-ranked positions, with gains of up to 2.81%. The results highlight the effectiveness of the proposed method in improving top-ranked recommendations. On the LastFM dataset, the method excels in capturing user preferences, particularly in ranking relevant items higher in shorter recommendation lists. On the Ciao dataset, the method demonstrates robustness by achieving substantial gains in Precision and NDCG, which are critical for evaluating top-ranked recommendations. In summary, the proposed method consistently improves top-ranked recommendations, particularly on Precision@10, Recall@10, and NDCG@10, demonstrating its effectiveness in refining social information."}, {"title": "3.2 Cold Users", "content": "Table 1 compares methods for addressing the cold-user problem, where users with fewer than 20 interactions are defined as cold users [28].\nOn LastFM, CLSRec exhibits significant and substantial relative-gains across all metrics, with improvements exceeding 18% in Precision, 13% in Recall, and 10% in NDCG. On Ciao, the performance gains are more modest, with slight improvements in Recall and NDCG, while Precision shows mixed results depending on the recommendation list length. Overall, CLSRec effectively mitigates the cold-user problem, achieving substantial gains on LastFM and maintaining competitive performance on Ciao, validating its robustness across datasets."}, {"title": "4\nConclusion", "content": "In this paper, we proposed a CLSRec recommendation method to fuse social relation into behavior-based recommendations, which leverages the reconstructed social view to enhance the user interest representation, addressing key challenges like social relation noise and interest inconsistency. By introducing a dual-view augmentation approach, the method effectively filters the social information, mitigating noise and sparsity issues. Additionally, the mutual distillation method aligns and fuses social and behavioral interest representations, ensuring that knowledge from both sources is effectively combined without loss. Experimental results validate the effectiveness of the approach and dramatically improve recommendations for cold users, demonstrating its great potential to enhance user experiences and drive engagement on modern content platforms."}]}