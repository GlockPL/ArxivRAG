{"title": "METHODOLOGY FOR ONLINE ESTIMATION OF RHEOLOGICAL PARAMETERS IN POLYMER MELTS USING DEEP LEARNING AND MICROFLUIDICS", "authors": ["Juan Sandubete-L\u00f3pez", "Jos\u00e9 L. Risco-Mart\u00edn", "Alexander H. McMillan", "Eva Besada-Portas"], "abstract": "Microfluidic devices are increasingly used in biological and chemical experiments due to their cost-\neffectiveness for rheological estimation in fluids. However, these devices often face challenges in terms\nof accuracy, size, and cost. This study presents a methodology, integrating deep learning, modeling and\nsimulation to enhance the design of microfluidic systems, used to develop an innovative approach for\nviscosity measurement of polymer melts. We use synthetic data generated from the simulations to train\na deep learning model, which then identifies rheological parameters of polymer melts from pressure drop\nand flow rate measurements in a microfluidic circuit, enabling online estimation of fluid properties. By\nimproving the accuracy and flexibility of microfluidic rheological estimation, our methodology accelerates\nthe design and testing of microfluidic devices, reducing reliance on physical prototypes, and offering\nsignificant contributions to the field.", "sections": [{"title": "1 INTRODUCTION AND RELATED WORK", "content": "Rheology is the science that studies how materials flow and deform. Among these rheological properties,\nviscosity is of special interest as it defines how much the fluid will flow when a force is applied. Viscosity\nestimation is crucial across various applications, from industrial processes like mold injection and 3D\nprinting to medical diagnostics involving bodily fluids (Shaw 2011; Meek et al. 2014; Zhao et al. 2023).\nThe behavior of non-Newtonian fluids, such as polymer melts or gelled propellants, under different pressure\ngradient presents significant challenges due to the complex dynamics of their viscosities (Kirchberger et al.\n2016).\nTraditional methods for measuring viscosity, such as rolling ball, rotational or capillary viscometers,\nwhile accurate, are often not suitable for inline measurement and real-time monitoring (Shaw 2011). These\nstandardized methods such as those in (ASTM 2020) typically require discrete liquid samples and are\nimpractical for processes involving continuous or semi-continuous flow of changing fluid compositions.\nThe objective of this study is to develop a methodology that integrates deep learning with microfluidic\ntechnology to enable online, real-time estimation of rheological parameters in polymer melts. This approach\naims to overcome the limitations of traditional methods by providing a cost-effective, accurate, and flexible\nsolution for continuous monitoring and adjustment of fluid properties.\nRecent developments in microfluidic devices are becoming a promising alternative. These devices\nrequire minimal fluid volumes and can be directly integrated into larger systems, facilitating real-time\nrheological estimation (Del Giudice 2022). Various microfluidic designs have already been explored,\nranging from devices measuring the deformation of flowing polymers (Lee and Tripathi 2005; Del Giudice\n2020) to systems using embedded sensors to measure pressure changes after a particular flow-path (Bie\net al. 2019).\nMoreover, in recent years deep learning has been successfully used to model many complex processes\nin fluid dynamics (Vinuesa and Brunton 2021) and in microfluidics (McIntyre et al. 2022), as well as\nin the intersection of rheology and microfluidics to perform parameters identification of non-Newtonian\nfluids (Mustafa et al. 2023; Jarujareet et al. 2023). Nonetheless, estimating the viscosity's parameters\nfrom just pressure and flow signals could be convenient for their integration in microfluidic circuits, since\nthese magnitudes are commonly measured. Liu et al. (2022) do so by combining least squares for the\nfittings. Their approach requires nevertheless of a particular stepped input signal, not being adequate for\nonline estimation. The use of deep learning could help reducing the dependency of this restricted input\nsequences, allowing for estimating rheological properties, online, from pressure and flow rate signals.\nOne aspect that makes difficult the development of these systems is the fact that deep learning models\nrequires of large training datasets. Simulating Newtonian and non-Newtonian fluids is often a computationally\nexpensive and time-consuming task, which requires both expertise and resources because it is commonly\ndone by means of Computational Fluid Dynamics (CFD, Galindo-Rosales and Rubio-Hern\u00e1ndez 2010).\nFor microfluidics, the simulations might be performed applying a finite-volume method (Keslerov\u00e1 and\nKozel 2010; Ferziger et al. 2019) or the Lattice-Boltzmann method (Kr\u00fcger et al. 2017). Higher levels\nof abstraction are possible, using the geometry of the systems and their symmetries to approximate the\nmicrofluidic system as two-dimensional (Boulais and Gervais 2023) or one-dimensional (Oh et al. 2012)\nproblems. This allows to trade off the accuracy and complexity of the simulations. In this regard, Takken\nand Wille (2024) have recently proposed a hybrid simulation framework in which high levels of abstraction\nare used to speed-up the simulations through analytic expressions (where the flow path is abstracted to\n1D), using CFD only in cases where this expressions are not available (e.g. junctions of fluidic paths).\nOur methodology employs these principles of microfluidics to reduce the complexity of simulating\ngeneralized non-Newtonian fluids behaviors approximating the system as one-dimensional. By modeling\nthe microfluidic system as a network of hydraulic resistances and capacitances, we can emulate the flow\ncharacteristics of various fluids under different conditions with reduced computational overhead. This\nmodel generates synthetic data used to train a deep neural network, an architecture containing Recurrent\nNeural Networks (RNN), which allows to discover time dependencies on the input data. This deep learning\nmodel is trained to predict the fluid's rheological parameters based on observed pressure changes and flow\nrates.\nThe main contributions of this work are: a methodology which can be applied to model, simulate\nand develop microfluidic systems flowing non-Newtonian fluids and integrated with deep learning, and an\ninnovative approach to viscosity estimation for generalized Newtonian fluids, and more concretely, polymer\nmelts, from commonly measured magnitudes such as pressure and flow signals. By providing a robust\nsimulation framework, this work contributes to the broader field of fluid simulation and modeling, offering\na practical tool for researchers and engineers working with complex fluid systems.\nExamples of potential applications might range from the development of deep neural networks for\nthe estimation of viscosity's parameters (shown in this paper), to chemical process AI-based control in\nmicrofluidics, passing through cell-culture anomaly detection within complex fluids.\nThis paper is organized as follows. Section 2 describes the theoretical microfluidic background under-\npinning our methodology. Section 3 details our methodology, including the exposition of our microfluidic\ncircuit design, of the physical model used for simulation, and of the architecture of the neural network\nmodel used to estimate parameters of the viscosity model. Section 4 presents the conducted experiments\nand the obtained results. Finally, Section 5 draws the conclusions and presents some future lines of research."}, {"title": "2 BACKGROUND", "content": "This section introduces the required background on two areas supporting our work: generalized Newtonian\nfluid models, and microfluidics systems modeling.\nThe viscosity of a fluid relates its rate of displacement or shear rate, usually denoted \u00fd, for an imposed\nshear stress. This shear stress depends of how the material reacts to an applied force under some conditions.\nFor Newtonian fluids, the ratio between these two magnitudes is independent of the applied shear stress,\nwhile in non-Newtonian fluids this does not always hold. Many different models have been proposed,\nalthough the most commonly used is the power-law fluid model (Shaw 2011),\n$$\u03b7 = \u03b7\u03bf(\u03b3)^{n\u22121},$$\nwhere, no stands for the zero shear rate viscosity, y for the aforementioned shear rate, and n for its power\nindex. For n = 1, shear rate and viscosity are perfectly independent, which is the behavior of an ideal\nNewtonian fluid. This model is used by Srivastava and Burns (2006) to semi-analytically approximate the\nsolution to the flow of a non-Newtonian fluid through a hydraulic resistance of rectangular cross-section.\nAnalytic and semi-analytic expressions have been derived for the streamlined capillary geometries\ncommonly used in microfluidics. These expressions are obtained by considering one-dimensional or two-\ndimensional approximations to the problem (Mortensen et al. 2004). They are used to speed up the\nsimulations of these systems, accelerating the design process, for example, by simulating the system as\nanalogous electrical problems, i.e., 1D approximation of the microfluidic circuits (Oh et al. 2012).\nIn these analogous electrical problems, an equivalent Ohm's law (Tipler and Mosca 2004) is defined for\nNewtonian fluids under laminar flow. The equations of Hagen-Poiseuille (Anna 2013) allows for solving\nmicrofluidic circuits in an analogous manner to electrical circuits. In particular, the flow rate, Q, through\na hydraulic resistance can be estimated as\n$$Qv=\\frac{\u0394\u03a1}{Rhyd}$$\nwhere Rhyd is the hydraulic resistance value, and AP is the pressure drop over it. Here, the subscript v\nof Q is used to denote that the flow is governed by viscous forces. If the circuit has only one branch\nwith multiple hydraulic resistances interconnected in series, then the total resistance of the circuit can be\nestimated as Rhyd = R1 + R2 + .... The total flow rate passing through the branch can be calculated using\nequation (2) over the total resistance.\nLastly, and continuing with the analogy, a hydraulic RC circuit can be defined by adding a hydraulic\ncapacitance, C, to the circuit. Its transient response will be then governed by a time constant \u03c4 = RhydC.\nThe relation between volume, V, and capacitance C is simply C = KfluidV, where Kfluid depends on the\nfluid, being Kfluid = 1.0 for air."}, {"title": "3 METHODOLOGY", "content": "Figure 1 shows the overall work-flow of the designed and implemented methodology, which is explained\nin this section. The aim of the methodology is to generate data for training a RNN model to estimate the\nrheological properties of a fluid.\nFirst, a set of values of the viscosity model's parameters is sampled from random uniform distributions\nwithin defined ranges. For this set, a random sequence of pressure signals is generated to be used as input\nto the microfluidic circuit simulator together with the sampled parameters, outputting signals of pressure\ndrop along the resistances, as well as input and output flows to the capacitance. Simulations that do not\ncontain significant information for the corresponding parameters are rejected, requiring the generation of\na new random sequence of signals for the same set of parameters. This way, for each simulation, four\noutput signals and one set of parameters of the viscosity model are collected.\nSecond, the generated dataset is used to perform a supervised training of the RNN model with the\npurpose of identifying the viscosity's parameters corresponding to each fluid from the signals produced\nby the simulator. This way, the model is trained for a number of epochs using mini-batches where each\nmini-batch is composed of sixteen simulations. Each simulation is made up of the four signals (two pressure\ndrop signals, and two flow-rate signals) associated to the set of viscosity model's parameters that have\nbeen used to produce them. The RNN model receives these four signals, sample by sample, four values\nin parallel (one by input signal), outputting one prediction once the whole simulation has passed through.\nLast, the simulator is again used to verify the operation of the trained artificial neural network. The\ninput signals from the test dataset are used to test the prediction quality of the RNN model. For each"}, {"title": "3.1 Design and Modeling of the Microfluidic Circuit", "content": "Microfluidic systems development is pursued for many reasons (e.g. increased surface-volume ratio or\nlow-waste applications, Tabeling 2005), however, the most interesting feature of microfluidics related to\nthis work is the reduction of complexity of the system under laminar flow. According to Hagen-Poiseuille's\nequations (Anna 2013), the laminar flow of a Newtonian liquid passing through a capillary can also be\nanalytically characterized for simple cross-sectional geometries. The expression depends of the geometry\nand dimensions of the capillary, the dynamic viscosity of the fluid, \u03b7, and the applied pressure drop along\nthe capillary (Tabeling 2005). In particular, for a microfluidic resistance of rectangular cross-section of\nwidth, w, height, h, and length, L (when h\u226aw, and h,w < L) becomes\n$$Qv,i = \\frac{wh\u00b3}{12Ln} (1-0.63\\frac{h}{W}) AP = \\frac{\u0394\u03a1}{Rg,in},$$\nwhere Rg,i = 12L/(wh\u00b3(1-0.63)) stands for the contribution of all the purely geometrical terms to the\ni-th hydraulic resistance (i.e. R\u2081 = Rg,in). The subscripts, i, in terms h,w, and L have been omitted for\nsimplicity in equation (3).\nFigure 2 shows the equivalence between the designed microfluidic circuit and the corresponding ideal\nelectrical circuit, which can be modeled by one resistance in series connected to another resistance with"}, {"title": "3.2 Simulation", "content": "To generate the training and testing datasets for the RNN, simulations are run following the scheme presented\nin Figure 3. The first block generates a set of random values for the parameters no, n and \u03bb, from their\ncorresponding uniform distributions within the ranges defined in Table 1. These ranges has been selected\naccording to the selected commercially-available hydraulic resistances to be able to observe Newtonian and\nnon-Newtonian behaviors within experiments of 12.5 seconds. The timescale of the tool can be tuned by\nchanging the time duration of the experiments, the values of the hydraulic resistances or the capacitance\nof the microfluidic circuit in order to study fluids of different degree of viscosity with this setup."}, {"title": "3.3 Artificial Neural Network", "content": "The proposed architecture is composed of five layers, has four inputs (namely AP1, AP2, Q1, Q2) and three\noutputs (consisting of the estimated values of parameters no, \u03b7 and \u03bb).\nThe two first layers of the model constitute the recurrent part, where different implementations were\ntested. Namely unidirectional Long Short-Term Memory (LSTM, Hochreiter and Schmidhuber 1997),\nunidirectional Gated Recurrent Unit (GRU, Cho et al. 2014) and bidirectional GRU (BGRU, Wang et al.\n2017). In unidirectional RNN, information can only flow from past instants to the last instant, whereas in\nbidirectional RNN the signals are analyzed in both (time) directions (Schuster and Paliwal 1997). These\nBGRU layers were both implemented with twenty hidden units, Rectified Linear Units (RELU) as activation\nlayers, leaky RELU for their recurrent activation, and a recurrent dropout of probability 10%.\nAfter the two RNN layers, two fully connected (i.e. dense) layers are sequentially connected, separated\nby a dropout layer. The first input layer is implemented with twenty hidden units, followed by a leaky\nRELU activation layer. The dropout layer is set with probability 10%. The output fully connected layer\nis composed by three units, one unit for each estimated parameter, with linear activation. The final model\nversion has a total of 11.5k tunable parameters. Its architecture can be observed in Figure 4.\nThe inputs to the system are two signals of pressure drop and two signal of flow-rate. Each signal is\nindividually normalized in range (-1.0, 1.0), with a length of 250 samples per signal, 1000 samples in total.\nThis configuration allows for its operation in real-time by implementing an input sliding window with the\nprevious setup. The model produces only one estimate of each parameter, i.e., \u03b7,n, and \u03bb, after inserting\nthe 250 samples of each signal. The outputs are also in range (-1.0,1.0) and must be denormalized. The\nmodel was trained from zero. Adam optimizer is used with learning rate 2.5e \u2013 5, no weight-decay, for 25\nepochs, and Mean Squared Error (MSE) is used as loss function."}, {"title": "3.4 Verification", "content": "In order to verify the operation of the simulation, training, and estimation methodology, the following three\nsteps procedure is performed: first, a K-fold cross validation method is applied to ensure the independence\nbetween the training and testing dataset. Thirty three percent of the generated dataset is used for the testing,\nand the remaining sixty seven percent is used for training. Thus, it is chosen K = 3, performing a complete\nrotation over the dataset after three iterations of the method. Since the generation of the parameters is\nuniformly performed within the defined range and the dataset is shuffled before the execution of the K-fold\ncross validation, the performance is expected to be similar for the three iterations. To evaluate it, an\naccuracy normal distribution curve is fitted of each model.\nAfterwards, for each model, simulations are performed using the estimated parameters for each sample\nof the dataset. The Mean Square Error (MSE) between the curves simulated with the reference parameters\nand the curves simulated with the estimated parameters is calculated.\nFinally, the Pearson correlation coefficients are calculated between the parameters estimation error and\nthe simulated curves error. Correlation coefficients close to the unit imply a high correlation between these\ntwo error evaluation. This potentially indicates that the mapping between the parameters and the simulated\ncurves is injective, and thus, the experiments are properly set for the training of the RNN. Otherwise,\na correlation coefficient for a particular estimated parameter closer to one half mean that the performed\nexperiments might not be suitable for the RNN to discover the original values."}, {"title": "4 EXPERIMENTS AND RESULTS", "content": "In this section we explain how we have used the proposed methodology to explore the optimization of\nthe simulation setup towards the inference of complex parameters, such as the rheological properties of a\nfluid, from pressure and flow-rate signals that do not have a straightforward linkage.\nIn order to define the ranges over which the current setup could be useful, the proposed framework can\nbe used to perform a heuristic analysis. For the given resistances, capacitance, and maximum input pressure\n(arbitrarily set to 600mbar or 60e3 Pa), the objective is to find out what are the ranges for the parameters\nof the viscosity model for which both Newtonian and non-Newtonian regimes can be observed. The most\ninfluential parameter in this regard is the relaxation time, \u03bb, because it regulates the threshold flow-rate\nat which the fluid will behave in one or the other way. A higher zero-shear viscosity, no, will decrease\nthe observed flow-rate, Qi, for a given applied pressure, P\u2081, making it harder to reach the non-Newtonian\nregime. Figure 5 shows two example simulations with same random input signal. Non-Newtonian regime\nis only achieved in one of them. The resulting parameters' ranges from this analysis are found in Table 1."}, {"title": "5 CONCLUSIONS AND FUTURE WORK", "content": "In this study, we developed a one-dimensional model for a hydraulic RC circuit to simulate generalized\nNewtonian fluids. This model was crucial for generating synthetic data to train deep learning models.\nWe used bidirectional GRUs in our methodology, which effectively predicted rheological parameters from\nthe dynamic responses of microfluidic systems. Our findings show that the behavior index n of the fluid\ncorrelates strongly with the output signals, making it the most reliably estimated parameter.\nFor future work, we plan to improve the simulation setup by automating the exploration process to\noptimize input signal configurations and model parameters systematically. We also aim to build a physical\nprototype to validate our simulations and refine model assumptions. This step is essential for practical\napplications in industrial and medical diagnostics. Additionally, we will explore incorporating more complex\nfluid dynamic models and advanced neural network architectures to handle a wider range of fluids and flow\nconditions, expanding the applicability of our methodology to various industrial uses."}]}