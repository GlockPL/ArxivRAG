{"title": "Real Time Offside Detection using a Single Camera in Soccer", "authors": ["Shounak Desai"], "abstract": "Technological advancements in soccer have surged over the past decade, transforming aspects of the sport. Unlike binary rules, many soccer regulations, such as the \"Offside Rule,\" rely on subjective interpretation rather than straightforward True or False criteria. The on-field referee holds ultimate authority in adjudicating these nuanced decisions. A significant breakthrough in soccer officiating is the Video Assistant Referee (VAR) system, leveraging a network of 20-30 cameras within stadiums to minimize human errors. VAR's operational scope typically encompasses 10-30 cameras, ensuring high decision accuracy but at a substantial cost. This report proposes an innovative approach to offside detection using a single camera, such as the broadcasting camera, to mitigate expenses associated with sophisticated technological setups. contributes to fairer and more accurate officiating. Additionally, it outlines areas for future research and development to enhance the capabilities of such systems. To conclude, this report sets the stage for a detailed exploration of offside detection using a single camera, emphasizing its importance in advancing soccer technology and paving the way for future innovations in sports officiating.", "sections": [{"title": "I. INTRODUCTION", "content": "The objective of this research project is to detail the implementation of offside detection using a single camera, specifically the broadcast camera commonly used in soccer matches. This system leverages various image processing techniques, including segmentation, line detection, and 3D-to-2D space interpretation, to achieve accurate offside detection.\n The background section provides a comprehensive overview of prior implementations related to offside detection using similar techniques. It also discusses the inspiration behind this project, highlighting the need for innovative approaches in soccer technology. In the Experiment section, a step-by-step explanation will be provided regarding the implementation process. This includes the methodology adopted for image processing, algorithmic decisions, and technical considerations for utilizing a single camera setup. The Results section presents the anticipated outputs of this project, showcasing the effectiveness and reliability of the offside detection system. Visual representations and statistical analyses will be included to support the findings. Furthermore, this report discusses the potential impact of this project on the realm of soccer technology. It highlights how advancements in offside detection"}, {"title": "II. BACKGROUND", "content": "In soccer, a player is offside if they are closer to the opponent's goal line than the ball and the last defender when the ball is passed to them. Being offside means they can't immediately play the ball, preventing unfair advantages. It's like ensuring players don't camp near the goal for easy goals, promoting fair and active gameplay."}, {"title": "B. Related Work", "content": "There has been a lot of similar research already in this field. With the introduction of VAR which uses different cameras at different angles to draw parallel lines is one of the advanced and state-of-the-art tech. I came up with a novel idea to implement the Offside detection. I have majorly referred two papers while working on this project and became my inspiration for the new idea. Vision based offline Vision Based Dynamic Offside Line Marker for Soccer Games; [1] explains the step by step implementation of using Image processing techniques to detect lines on the Soccer pitch and then drawing parallel lines in 3D space. Although, this implementation is based on the FIFA Game dataset which is a kind of simulation dataset. Along with this, the authors used the players \"Bodies\" converting into blobs to draw parallel lines. Since the offside rule is very strict about which body parts are considered as \"Offside\", this paper does not use those specific body parts. Computer Vision based Offside Detection in soccer; [2], uses the Keypose estimation to detect the only relevant body parts that are used in the Offside rule. This paper implements the offside detection on the body parts of the players on a real dataset for Images. These 2 papers inspired me to come up with a new idea of doing the same Offside detection on Real Video dataset of a broadcasted game and implementing keypose detection to make it accurate."}, {"title": "III. EXPERIMENT", "content": "The data used for this project is basically a broadcasted game \u201cManchester City vs West Ham 2023; Premiere League\u201d.\nThe game that we see on TV uses a single static camera which never changes the position and pans left to right or right to left as\nthe game goes on. Fig. 2 shows how one of the frames looks\nlike during the game. We can see audience in the background\nwatching the game, advertisement boards and score board set\nup by the broadcaster."}, {"title": "A. Play Area Segmentation:", "content": "During Image processing we only need the Soccer pitch\nand the players inside it. Rest of the details become noise in\nthe input and may be responsible for poor image processing.\nHence, Segmenting the Playing area becomes a necessary part\nof the process. Fig. 3. shows the segmented image. I used the\nOpenCV library to segment the playing area in an image. First,\nI converted the image from the BGR color space to the HSV\ncolor space using the cv.cvtColor() function. Then, I defined\na range of green color in HSV format using lower and upper\nbounds. Next, I created a binary mask by thresholding the\nHSV image using the cv.inRange() function with the defined\ngreen color range.\nAfter obtaining the binary mask, I found contours\nin the mask using the cv.findContours() function\nwith the RETR_EXTERNAL retrieval mode and\nCHAIN_APPROX_SIMPLE contour approximation method.\nThis step helped me identify the boundaries of the green\nareas in the image.\nUsing the detected contours, I created a black image\nwith the same dimensions as the original image using\nnp.zeros_like(). Then, I drew filled contours on this black\nimage using cv.drawContours() to create a mask of the green\nareas.\nFinally, I applied this mask to the original image using\nbitwise AND operation (cv.bitwise_and()) to obtain the seg-\nmented result, where only the green areas are preserved, and\neverything else is blacked out as seen in Fig. 3.\nNow the image is ready for further processing."}, {"title": "B. Detecting lines on Soccer pitch:", "content": "The light green and dark green patches (check Fig. 2.)\nwas the biggest clue to detect all the parallel lines on the\nsoccer pitch at any point of time in the game. These lines\nare parallel to the breadth of the field, making all these lines\nparallel in 3D space. Hence, the idea was to only detect\nthese lines which can be actual references to draw the virtual\nlines passing through all the players. To detect these lines,\nappropriate Image processing is necessary. Hence, i tested\ndifferent image space CIE-LAB, HSV, BGR etc. and came\nto the conclusion that the difference in the light green and\ndark green is maximum when used the Saturation channel\nfrom HSV image space. You can see Fig. 4. which shows\nthe difference in light and dark green strips on the field.\nThis makes it easier to find the edges on the field as the\ngradient is high where the light and dark green strips meet.\nHence, using Sobel filter which is the go-to filter for edge"}, {"title": "C. Vanishing point:", "content": "The set of lines we got from Hough detection shows that\nthese lines are not parallel in 2D space. Although, these set of\nlines are parallel in 3D space. Hence to find the similar parallel\nlines on the image, calculating Vanishing point becomes\nnecessary. In 2D space, the vanishing point is where parallel\nlines appear to converge when projected onto a flat surface,\ncreating the illusion of depth. In 3D space, it represents the\npoint at which parallel lines in the three-dimensional world\nconverge when viewed from a specific perspective, aiding in\nunderstanding spatial relationships and depth perception in\nimages and scenes. The algorithm starts by analyzing all lines\ndetected in the image. For each pair of lines (excluding pairs\nof identical lines), it calculates the intersection point using\nmathematical principles based on the lines' equations.\nNext, the algorithm employs the Random Sample Consensus\n(RANSAC) technique, a robust estimation method commonly\nused in computer vision tasks. RANSAC iteratively fits line\nmodels through randomly sampled intersection points, aiming\nto find the best-fitting line model that represents the vanishing\npoint.\nDuring each iteration of RANSAC, two random intersection\npoints are chosen to form a line model. The distances between\nall intersection points and this line model are computed. Points\nthat lie within a specified threshold distance from the line\nmodel are considered inliers.\nThe algorithm repeats this process for a predetermined\nnumber of iterations, adjusting the line model each time to\nmaximize the number of inliers. It keeps track of the line\nmodel with the most inliers, indicating a better fit to the actual\nvanishing point.\nThe iteration terminates early if a sufficient percentage\nof points are identified as inliers, providing computational\nefficiency while ensuring accuracy.\nFinally, the vanishing point is determined by averaging\nthe coordinates of the best set of inliers found during the\nRANSAC process. This average represents the estimated lo-\ncation where parallel lines in the image converge, providing\nvaluable information about the image's perspective and spatial\nlayout. I used a reference code for the RANSAC algorithm\nfrom this blog.\nThe output of this is shown in 2 different settings during\nthe game as shown in Fig. 7 and 8.\nThis concludes the part of calculating the Vanish point."}, {"title": "D. Keypose Estimation:", "content": "In soccer, the Offside rule, which is crucial for fair play,\nconsiders specific body parts like the left and right knees,\nshoulders, and ankles/toes. Accurate detection of Offside situa-\ntions relies on keypose estimation, emphasizing the importance\nof understanding player positions and movements for precise\nrule enforcement."}, {"title": "IV. RESULTS", "content": "The goal of this project was to draw parallel virtual lines\nusing a single camera view (broadcast view) which pass\nthrough the player's key points. These set of lines are potential\noffside lines and the right most line out of all the virtual\nlines becomes the actual lines that we need to track during\nthe video for Offside detection. As we have a Vanishing point\n(x1, y1) and a set of key pose points (list of (x2, y2)), we draw\neach and every line passing through all the detected keypoints.\nFig. 10. shows the all the lines drawn from Vanishing point\n(x1, y1).\nAlthough these lines do not look like they are parallel in 2D\nspace, these lines are parallel in 3D space. We now need the\nlines going through the last defender of the defending team\nwhich are the right most set of lines. Note that in the given\nFig. 10. the right most lines pass through the Goalkeeper of the\ndefending team, but Goalkeeper is not involved in the offside\nrule (barring a rare edge case which is out of scope of this\nproject). Fig. 11. shows the final goal of this project achieved"}, {"title": "V. DISCUSSION", "content": "Leveraging basic image processing techniques involves uti-\nlizing fundamental methods to analyze and manipulate images\neffectively. These techniques are essential for various tasks in\ncomputer vision and image analysis. Here's an elaboration on\nthe mentioned techniques:\n1) Different Image Spaces: Images can be represented in\ndifferent color spaces like RGB, HSV, LAB, etc. Each color\nspace has its advantages for specific tasks. For instance, HSV\nis useful for segmenting objects based on color, while LAB is\nbeneficial for color correction and analyzing image gradients.\n2) Canny Edge Detector: The Canny edge detector is a\npopular technique for detecting edges in images. It works\nby identifying areas of rapid intensity change, which often\ncorrespond to object boundaries or significant features in the\nimage.\n3) Hough Lines Transform: The Hough transform is used to\ndetect lines in an image, which is valuable for tasks like line\ndetection, lane detection in autonomous vehicles, and shape\nrecognition. The Hough Lines Transform, a variant of the\nHough transform, detects lines using polar coordinates and\nis robust to noise.\n4) Keypose Estimation using PyTorch: Keypose estimation\ninvolves identifying key points or landmarks in an image, such\nas joints in a human body. PyTorch, a popular deep learning\nframework, provides pre-trained models and tools for keypoint\ndetection, making it easier to implement complex computer\nvision tasks like pose estimation.\n5) Calculating Vanishing Points: Vanishing points are crit-\nical in computer vision for understanding the 3D structure of\na scene from 2D images. By analyzing the convergence of\nparallel lines in an image, vanishing points can be calculated,\naiding in tasks like camera calibration, depth estimation, and\nscene understanding."}, {"title": "VI. FUTURE WORK", "content": "Tracking players based on their jersey/kit colors and de-\ntermining the attacking player and defending player using\nKLT (Kanade-Lucas-Tomasi) tracker. [1] used a KLT tracker\nto track the players based on the jersey colors using a UI\ninterface which can be bypassed as well. Detecting the referees\nand goalkeeper in the game in every frame, as they are\nnot a part of the Offside (barring the rare edge cases such\nas goalkeeper is ahead of the last defender of the team).\nDetecting the \"last\" line of the defender of a team and\nattacker of the other team and then labelling if the player of\nattacking team is offside or not. Along with this, the pretrained\nmodel KeypointRCNN_ResNet50 is accurate but slow. Slower\nmodels would make the video processing slow. Hence, finding\nan accurate and faster key pose estimator can work well on a\nreal-time video."}, {"title": "VII. CONCLUSION", "content": "I came up with a novel idea of Offside detection to achieve\nhighest accuracy in finding the offside line. But the question\narises why Single Camera should be used? The current\nSOTA (state of the art) for offside detection instilled as\nVideo Assistant Referee (VAR), uses 30+ cameras around\nthe stadium which makes it a huge investment for all the\nteams/leagues. Since this is a huge investment, only the rich\nclubs/teams/stadiums/leagues can afford this technology. The\nlow budget teams cannot afford such tech as they hardly use\nmore than 2 cameras making the sport unfair for the low-\nbudget teams.Bringing in this technology makes the game\nfair for all sort of financially backed clubs/teams/stadium-\ns/leagues. Although, SOTA tech is highly accurate, there is\na debate among the people regarding its use making the sport\nmonotonous and taking out the \"uncertainty factor\" which\nmany people like about any sport. A minor error or benefit of\ndoubt makes the game more lively. Hence, while the research\narea in academia leverages expensive technology to get the\nhighest accuracy possible, cutting down on cost significantly\nat highest accuracy possible using the principles of Augmented\nReality by making the Sport of Soccer fair is an inspiration to\nimplement such a project and take this research forward."}]}