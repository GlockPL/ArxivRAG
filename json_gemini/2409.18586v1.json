{"title": "Analysis of Truncated Singular Value Decomposition for Koopman Operator-Based Lane Change Model", "authors": ["Chinnawut Nantabut"], "abstract": "Understanding and modeling complex dynamic systems is crucial for enhancing vehicle performance and safety, especially in the context of autonomous driving. Recently, popular methods such as Koopman operators and their approximators, known as Extended Dynamic Mode Decomposition (EDMD), have emerged for their effectiveness in transforming strongly nonlinear system behavior into linear representations. This allows them to be integrated with conventional linear controllers. To achieve this, Singular Value Decomposition (SVD), specifically truncated SVD, is employed to approximate Koopman operators from extensive datasets efficiently. This study evaluates different basis functions used in EDMD and ranks for truncated SVD for representing lane change behavior models, aiming to balance computational efficiency with information loss. The findings, however, suggest that the technique of truncated SVD does not necessarily achieve substantial reductions in computational training time and results in significant information loss.", "sections": [{"title": "INTRODUCTION", "content": "In automotive engineering, model or system identification is crucial for understanding the behavior of traffic participants under various driving conditions. This understanding is essential for improving vehicle performance and safety, particularly when transferring insights from scene analysis in these scenarios to autonomous vehicles, enhancing their decision-making accuracy.\nGiven the complexity of modeling such behaviors, the underlying dynamic systems are inherently nonlinear. To address these challenges, various modeling techniques are employed, particularly black-box models, which do not require explicit logical or physical representations of the relationship between inputs and outputs. Examples of these data-driven approaches include neural networks, series models, and autoregressive models.\nOne of the prominent data-driven approaches is the Koopman operator. Although initially developed long ago, it has gained renewed attention in modern applications for capturing the behavior of dynamical systems. Its appeal lies in its connection to classical methods, the ability to integrate measurement-based formulations suitable for machine learning, and the potential for simplification in real-world applications. Another advantage is that it provides a global representation of the system, unlike instantaneous linearization or dynamic linearization, which offer only a local approximation of the model around a specific operating point.\nSince Koopman operators are theoretically infinite-dimensional, the Extended Dynamic Mode Decomposition (EDMD) method is employed to approximate them using a set of smaller, more manageable basis functions.\nKoopman operators have been widely applied to model identification, particularly within the automotive industry. Notable examples include , where a single-track model derived from a twin-track model was used to generate trajectory data by varying tire forces and kinematic variables. Their findings showed that increased model complexity does not necessarily improve accuracy. Similarly, assessed model fidelity in lane-change scenarios using various systems, while  demonstrated the ability of Koopman operators to reduce compu-"}, {"title": "METHOD", "content": "The analysis presented in this paper is summarized in Figure 1. First, a simplified vehicle model for lane change behavior is explained in Section 2.1, leading to the generation of trajectories denoted as T. Next, the primary focus of this paper - system identification"}, {"title": "Lane Change Model", "content": "Since, in this paper, real data were not collected to approximate the model described by the Koopman operator, a mathematically simplified model proposed by  is used instead, as depicted in Figure 2.\nAdditionally, the longitudinal and lateral movement of the vehicle can be modeled independently. The vehicle transitions from the right to the left lane of width $w_L$ in the Frenet-Serret frame, also known as the lane frame, discribed by the coordinates $s$ and $y_L$. The $s$ axis runs along the right edge of the right lane, whereas the $y_L$ axis is perpendicular to it and directed to the left.\nFurthermore, the vehicle is located at the position $(x_L,y_L)$ and is oriented to the lane at an angle $\\psi$. The longitudinal length of the complete trajectory, depicted in yellow, is defined by $d_L$. Starting from the current pose, including the vehicle's position and orientation, a trajectory $T$ in orange is generated until the vehicle reaches the middle line of the left lane.\nTo model the longitudinal movement, a constant acceleration model is utilized. In this model, the longitudinal state at time step $k$ is defined as $X_{s,k} = [s_k\\ v_{s,k}\\ a_{s,k}]^T$, where $s_k$ denotes the longitudinal displacement along the road, $v_{s,k}$ represents the longitudinal velocity, and $a_{s,k}$ indicates the longitudinal acceleration at time step $k$. The next state $X_{s,k+1}$ can be sampled from the normal distribution $\\mathcal{N}_1$, as shown in green in Figure 2:\n$\\begin{bmatrix}\ns_{k+1} \\\\\nv_{s,k+1} \\\\\na_{s,k+1}\n\\end{bmatrix} \\sim \\mathcal{N}_1(\\begin{bmatrix}\n1 & T & \\frac{T^2}{2} \\\\\n0 & 1 & T \\\\\n0 & 0 & 1\n\\end{bmatrix}\\begin{bmatrix}\ns_k \\\\\nv_{s,k} \\\\\na_{s,k}\n\\end{bmatrix}, \\begin{bmatrix}\n\\frac{T^4}{4} & \\frac{T^3}{2} & \\frac{T^2}{2} \\\\\n\\frac{T^3}{2} & T^2 & T \\\\\n\\frac{T^2}{2} & T & 1\n\\end{bmatrix}\\sigma_{a_s}^2)$\t\t\t\t\t\t\t\t(1)\nwhere the first argument of the expression denotes the mean vector, and the second one is represented by the covariance matrix that depends on the sample time $T$ and the standard deviation in the longitudinal acceleration $\\sigma_{a_s}$.\nTo model the lateral movement, which is approximated by sinusoidal geometry, the initial lateral position $y_{L,0}$ is generated from the normal distribution $\\mathcal{N}_2$, as shown in red in Figure 2:\n$y_{L,0} \\sim \\mathcal{N}(0.5w_L, \\sigma_{y_L}^2)$,\t\t\t\t\t\t\t\t(2)\nwhere $\\sigma_{y_L}$ denotes the standard deviation in the lateral displacement.\nThe start angle $\\Psi_0$ can be sampled from a uniform distribution $\\mathcal{U}$, with the exclusion of zero:\n$\\Psi_0 \\sim \\mathcal{U}[-\\Psi_{0,max}, \\Psi_{0,max}]$,\t\t\t\t\t\t\t\t\t\t(3)\nwhere $\\Psi_{0,max}$ is the maximal possible initial yaw angle.\nAs derived in , where $y_{L,0}$ must also be larger than $0.5w_L$, the longitudinal length of the complete trajectory $d_L$ can then be calculated by:\n$d_L = \\frac{w_L}{\\pi - 2 \\tan(\\Psi_0)} cos^{-1}(\\frac{2y_{L,0}}{w_L}) - sin^{-1} (\\frac{2y_{L,0}}{w_L})\\)$\t\t\t\t\t\t\t(4)"}, {"title": "System Identification", "content": "Once the trajectories are generated in Section 2.1, the next step is to understand how the system evolves based on the presented data. Given the assumption that the system is complex and nonlinear, Koopman operators and EDMD are employed to elevate the system into a higher-dimensional space where it can be described linearly. This transformation enables the application of typical linear modeling techniques such as LQR or linear MPC.\nSection 2.2.1 elaborates on the Koopman operator and its approximators, EDMD, highlighting their roles in system transformation. Subsequently, to optimize computational efficiency, Section 2.2.2 discusses the reduction of linear system dynamics using truncated SVD, focusing on methods to select an appropriate threshold.\nFinally, Section 2.2.3 covers the methods for reconstructing truncated trajectories and compares them with the original trajectories."}, {"title": "Koopman Operator", "content": "The concept of the Koopman operator $\\mathcal{K}$ is to transform or \"lift\" the original nonlinearly dependent adjacent states to another space where the relationship between the new or lifted states becomes linear, as illustrated in Figure 3. Here, the original states are described by trajectories obtained from the previous section, consisting of tuples representing longitudinal displacement $s$ and the lateral displacement $y_L$.\nSince these trajectories are generated from sinusoidal curves, the transition from one state to another is inherently nonlinear. With the Koopman operator $\\mathcal{K}$, the states can be transformed into the lifted ones $\\mathcal{K}(s,y_L)$ such that\n$\\mathcal{K}(s,y_L)_{k+1} = A\\mathcal{K}(s,y_L)_k$,\t\t\t\t\t\t(8)\nwhere $A$ is the system matrix describing the linear dependency between the current (at time step $k$) lifted states $(\\tilde{s},\\tilde{y}_L)_k = \\mathcal{K}(s,y_L)_k$, and the next lifted states $(\\tilde{s},\\tilde{y}_L)_{k+1} = \\mathcal{K}(s,y_L)_{k+1}$.\nSince the Koopman operator is infinite-dimensional, it can only be approximated using EDMD. (8) can then be transformed into:\n$\\Phi(s,y_L)_{k+1} \\approx A\\Phi(s,y_L)_k$,\t\t\t\t\t\t(9)\nwhere $\\Phi$ denotes the function approximator that aims to describe the linearity as accurately as possible.\nThere are various options for selecting function approximators. A common approach involves using a set of basis functions to construct them. One widely used type is the monomial basis:\n$\\Phi_m(s,y_L) = \\begin{bmatrix}\ns \\\\\ny_L \\\\\ns^2 \\\\\n\\vdots \\\\\ns^{N_m} \\\\\ny_L^{N_m}\n\\end{bmatrix}$,\t\t\t\t\t\t(10)\nwhere $N_m$ denotes the highest order of polynomials.\nAnother common type is the thin plate spline radial basis, described by:\n$\\Phi_r(s,y_L) = \\begin{bmatrix}\ns \\\\\ny_L \\\\\n||s - c_s||^2 log(||s - c_s||^2) \\\\\n||y_L - c_y||^2 log(||y_L - c_y||^2)\n\\end{bmatrix}$,\t\t\t\t\t\t(11)"}, {"title": "Truncated SVD", "content": "In the case of EDMD, once the states are lifted using the operator $\\Phi$, the lifted states are then stored and utilized for subsequent training processes. To determine the system matrix $A$ that captures the linearity, the inversion of $\\mathcal{K}(s,y_L)_k$ in (8) or $\\Phi(s,y_L)_k$ in (9) is necessary. This involves employing SVD for numerical stability, which can also be truncated to expedite the training process. However, not only two tuples of $(s,y_L)_k$ are utilized, but the entire trajectories are used to determine the system matrix $A$. At first, a so-called snapshot matrix of trajectory $T_i$, $X_i$, can be defined as:\n$X_i = [\\Phi(s_{0},y_{L,0})_i  ... \\Phi(s_{k_{max}-1},y_{L,k_{max}-1})_i]$,\t\t\t\t\t(13)\nand its right-shifted snapshot matrix $X'$ is denoted by:\n$X' = [\\Phi(s_{1},y_{L,1})_i ... \\Phi(s_{k_{max}},y_{L,k_{max}})_i]$.\t\t\t\t\t(14)\nConsequently, the total snapshot matrix of all trajectories $T$, $X$, is computed by:\n$X = [X_1 \\  X_2 \\  ... \\  X_{N_T}]$,\t\t\t\t\t\t(15)\nand its total shifted snapshot matrix $X'$ is denoted by:\n$X' = [X'_1\\  X'_2 \\  ...\\ X'_{N_T}]$\t\t\t\t\t(16)\nThe linear dynamics of the system can be approximated, using the system matrix $A$, by:\n$X' \\approx AX$,\t\t\t\t\t\t\t\t\t\t(17)\nanalogous to (8) and (9).\nSince the matrix $X$ is not square, its pseudo-inverse or Moore-Penrose inverse $X^{\\dagger}$ is computed instead to calculate the system matrix $A$:\n$A \\approx X'X^{\\dagger}$,\t\t\t\t\t\t\t\t\t\t(18)\nwhere $X^{\\dagger} = X^T(XX^T)^{-1}$ as derived from the so-called normal equation.\nAlternatively, the snapshot real matrix $X$ can be reformulated using SVD, resulting in the form:\n$X = U\\Sigma V^T$,\t\t\t\t\t\t\t\t\t\t\t(19)\nwhich results in the pseudo-inverse $X^{\\dagger}$ of the form:\n$X^{\\dagger} = V\\Sigma^{-1}U^T$,\t\t\t\t\t\t\t\t\t\t\t(20)\nwhere the $\\Sigma$-matrix is displayed as:\n$\\Sigma = \\begin{bmatrix}\n\\sigma_1 & 0 & 0 & ... & 0 & ... & 0 \\\\\n0 & \\sigma_2 & 0 & ... & 0 & ... & 0 \\\\\n0 & 0 & ... & ... & ... & ... & 0 \\\\\n: & : & & \\sigma_{r_{max}} & & ... & 0 \\\\\n0 & 0 & ... & ... & ... & ... & 0\n\\end{bmatrix}$,\t\t(21)\ngiven that this matrix (and therefore $X$) has a rank of $r_{max}$, the singular values are sorted in descending order, namely $\\sigma_1 \\ge \\sigma_2 \\ge ... \\ge \\sigma_{r_{max}}$.\nBy choosing a specific rank $r < r_{max}$, an approximated $X$ in the truncated SVD is obtained by:\n$\\tilde{X} = \\tilde{U}\\tilde{\\Sigma}\\tilde{V}^T$,\t\t\t\t\t\t\t\t\t\t\t(22)\nwhere $\\tilde{U} = U_{:,1:r}$, $\\tilde{\\Sigma} = \\Sigma_{1:r;1:r}$, and $\\tilde{V} = V_{:,1:r}$.\nNow, the question of how to systematically choose the rank $r$ is posed. As suggested in , the percentual accumulated \"energy\" up to rank $r$ can be calculated as:\n$E_r = 100\\% \\cdot \\frac{\\sum_{i=1}^r \\sigma_i}{\\sum_{i=1}^{r_{max}} \\sigma_i}$,\t\t\t\t\t\t\t\t(23)\nTypically, the empirical values of $E_r = 90\\%$ or $E_r = 99\\%$ are used to determine the appropriate rank, resulting in a good representation $\\tilde{X}$ of the original snapshot matrix $X$. Alternatively, a hard threshold (HT) based on the ratio $\\beta = \\frac{n}{m}$ of the dimensions of the (snapshot) matrix $X_{n \\times m}$ and the median of its singular values $\\sigma_{med}$ is recommended by . The hard threshold $r_{HT}$ is calculated by:\n$r_{HT} = \\omega(\\beta)\\sigma_{med}$,\t\t\t\t\t\t\t\t(24)\nwhere $\\omega(\\beta)$ is based purely on the ratio $\\beta$ and can be calculated accordingly. Since some values of the relationship between $\\beta$ and $\\omega$ are provided, interpolation techniques can be employed to roughly determine the hard threshold rank $r_{HT}$ used to approximate the snapshot matrix $X$.\nThe system matrix $A$ can be approximated by an approximated system matrix $\\tilde{A}$:\n$\\tilde{A} = X'\\tilde{X}\\tilde{X}^{\\dagger}$,\t\t\t\t\t\t\t\t\t(25)\nAnalogous to (9), the approximated system dynamics can then be described as:\n$\\Phi(s,y_L)_{k+1} \\approx \\tilde{A}\\Phi(s,y_L)_k$.\t\t\t\t\t\t\t\t(26)\nThe next states $(s, y_L)_{k+1}$ can then be retrieved by inverting the operator $\\Phi$."}, {"title": "Reconstruction Error", "content": "To evaluate model fidelity, the Frobenius norm $||B||_F$ of a matrix $B$ can be used, where $||B||_F = \\sqrt{\\sum_i \\sum_j b_{ij}}$, and $b_{ij}$ denotes the elements of the matrix $B$. This norm allows for a comparison of the system dynamics between the full-ranked system matrix $A$ and its truncated version $\\tilde{A}$.\nThe relative reconstruction error of the truncated matrix $A$ is represented by:\n$REA = \\frac{||A-\\tilde{A}||_F}{||A||_F}$,\t\t\t\t\t\t\t\t\t\t(27)\nThe time consumption of the truncated matrix $\\tilde{A}$ can also be measured relative to the full matrix $A$:\n$\\tau_A = \\frac{T_{\\tilde{A}}}{T_A}$,\t\t\t\t\t\t\t\t\t(28)\nAll the steps outlined in Figure 1 are summarized in Algorithm 1 for the easy implementation of the analysis proposed in this paper. This includes the definition of necessary variables, the collection of data, the execution of truncated SVD, and the analysis of the results using various metrics."}, {"title": "SIMULATION", "content": "All parameters utilized in the previous section, as summarized in Algorithm 1, are defined here. The comparison between the original data and the Koopman operators using different types of basis functions is illustrated. Additionally, qualitative trajectories based on truncated SVD with various rank selections are compared and analyzed. Finally, the time consumption for these processes is also discussed."}, {"title": "Setup", "content": "Taken from the original paper for modeling lane change behavior , the lane width $w_L$ is set to $3.5 m$. With the vehicle width $w_V$ of $1.5 m$, the standard deviation of lateral deviation $\\sigma_{y_L} = \\frac{0.5(w_L - w_V)}{3} = 0.2 m$, whereas the value of the longitudinal direction $\\sigma_{a_s} = \\frac{3}{3\\sqrt{2}}$. The time constant $T$ is set to $0.1 s$. The initial kinematic variables are $s_0 = 0 m$, $v_0 = 10\\frac{m}{s}$, and $a_0 = 0$. The vehicle can start with a maximal orientation of $\\psi_0 = 15^\\circ$.\nTo ensure both basis functions have the same dimension, $N_m$ is set to 2. Furthermore, the constants $c_s$ and $c_y$ are sampled from a uniform distribution ranging between $-\\frac{\\pi}{2}$ and $+\\frac{\\pi}{2}$."}, {"title": "Results", "content": "In Figure 4, a single trajectory illustrating a lane change maneuver (from the red right middle lane to the green left middle lane) is depicted in blue, based on the approach by  as detailed in Section 2.1. The vehicle follows a simple sinusoidal pattern, returning to the right lane after exceeding the maximum longitudinal displacement $d_L$, as previously discussed.\nSubsequently, strong oscillations occur, stemming"}, {"title": "CONCLUSIONS", "content": "This study investigates the efficacy of truncated SVD in conjunction with Koopman operators and EDMD for system identification in the context of lane change behavior. The results indicate that while these techniques do not necessarily lead to a significant reduction in the computational time required for training the system matrix, they entail a compromise in model fidelity.\nTo validate these findings, future research will explore the use of diverse datasets for training and conduct a more comprehensive statistical analysis, as well as analyze controllers not covered here."}]}