{"title": "FEAD: Figma-Enhanced App Design Framework\nfor Improving UI/UX in Educational App\nDevelopment", "authors": ["Tianyi Huang"], "abstract": "Abstract\u2014Designing user-centric mobile applications is in-\ncreasingly essential in educational technology. However, plat-\nforms like MIT App Inventor-one of the world's largest ed-\nucational app development tools-face inherent limitations in\nsupporting modern UI/UX design. This study introduces the\nFigma-Enhanced App Design (FEAD) Method, a structured\nframework that integrates Figma's advanced design tools into\nMIT App Inventor using an identify-design-implement workflow.\nLeveraging principles such as the 8-point grid system and\nGestalt laws of perception, the FEAD Method empowers users to\naddress design gaps, creating visually appealing, functional, and\naccessible applications. A comparative evaluation revealed that\n61.2% of participants perceived FEAD-enhanced designs as on\npar with professional apps, compared to just 8.2% for baseline\ndesigns. These findings highlight the potential of bridging design\nwith development platforms to enhance app creation, offering a\nscalable framework for students to master both functional and\naesthetic design principles and excel in shaping the future of\nuser-centric technology.", "sections": [{"title": "I. INTRODUCTION", "content": "The proliferation of mobile applications has fundamentally\ntransformed global communication, information access, and\ndaily life. With over five billion smartphone users worldwide\nand approximately 1,300 new apps released daily, the demand\nfor innovative and user-centric applications is at an all-time\nhigh [1], [2]. In this digital age, tools like MIT App Inventor\nplay an important role in empowering the next generation\nof creators [3]. As a free, open-source platform, MIT App\nInventor allows users regardless of technical background-to\ndesign fully functional mobile applications using an intuitive\ndrag-and-drop interface [4]. With over 11 million users across\n200 countries and regions, the platform has bridged the gap\nbetween computational thinking and real-world innovation [5].\nHowever, despite its accessibility and educational impact,\nMIT App Inventor faces limitations in its UI/UX design\ncapabilities. Users often encounter a rigid grid system, limited\ndesign customization, and alignment inconsistencies across\ndevices, which restrict the creation of modern and visually\nappealing apps. These shortcomings diminish the overall user\nexperience and cause obstacles for users trying to meet\nprofessional design standards [6]. Feedback from student\ncommunities and educational organizations such as App-\nIn Club, a global nonprofit that supports student-driven app\ndevelopment-highlights the urgent need for enhanced design\ncapabilities within the platform [7].\nTo address these challenges, leveraging external design\ntools into the MIT App Inventor workflow offers a promising\nsolution. Figma, a web-based design platform popular for its\ncollaborative features and comprehensive design functionali-\nties, provides tools such as vector editing, flexible grids, and\na vast library of design components [8]. By incorporating\nFigma's capabilities, developers can potentially overcome MIT\nApp Inventor's inherent design constraints, crafting apps that\nare both visually modern and functional.\nThis study introduces the Figma-Enhanced App Design\n(FEAD) Method, a complete approach to integrating Figma\ninto the MIT App Inventor development process to enhance\nUI/UX design. By combining Figma's design tools with funda-\nmental design principles\u2014such as the 8-point grid system and\nGestalt laws of perception-this method directly addresses the\nplatform's limitations while elevating the app development ex-\nperience. The findings demonstrate that the FEAD Method also\nserves as a scalable framework for incorporating professional\ndesign tools into educational programming environments. This\nstudy provides a detailed guide for educators, students, and de-\nvelopers, enabling them to apply the FEAD Method to unlock\ngreater creativity, usability, and impact in app development."}, {"title": "II. RELATED WORKS", "content": "A. Design Extensions in MIT App Inventor\nEfforts to improve MIT App Inventor's design capabilities\nhave included extensions like UI Enhancer and MakeViewUp,\nwhich introduce additional customization options such as\ngradients, padding, and ripple effects [9], [10]. While these\nextensions provide helpful tools for refining app aesthetics,\nthey are constrained by the limitations of MIT App Inven-\ntor's component library. Moreover, they come with a major\nlimitation: apps built with extensions can't be published to\nthe MIT App Inventor gallery, restricting their accessibility.\nThis constraint limits the usability of such enhancements for\nusers who wish to showcase their apps broadly. Addressing\nthis limitation requires an alternative approach that bypasses\nthe reliance on extensions while offering the same design\nflexibility.\nB. External Design Tools in Education\nThe use of external design tools such as Adobe XD, Sketch,\nand Figma have been lauded for their ability to streamline\ncollaborative workflows and produce professional-grade de-\nsigns [11]. Studies exploring their integration into educational\nsettings have demonstrated significant improvements in both\nengagement and output quality [12]. For instance, in higher\neducation, researchers have found that incorporating Figma\ninto app development courses helps students grasp the impor-\ntance of design principles while promoting collaboration [13].\nHowever, these studies often focus on advanced techniques\nor the selection of optimal external design tools, leaving\ntheir integration with programming platforms like MIT App\nInventor still underexplored. To address this gap, the FEAD\nMethod was developed with the aim of mitigating the divide\nbetween design tools and programming platforms.\nC. Impact of Design on Learning\nResearch in human-computer interaction (HCI) and educa-\ntional technology highlights the importance of intuitive UI/UX\ndesign. Poorly designed interfaces can increase cognitive load\nand frustration, particularly for beginners, while well-designed\napps promote ease of use and continued engagement [14]\u2013[16].\nThis study builds on existing findings that demonstrate the dual\nrole of design as both a functional tool and a motivational\ndriver in education, reinforcing the purpose and development\nof the FEAD Method."}, {"title": "III. METHODOLOGY", "content": "A. Identify\nWe selected an existing shopping list application from the\nMIT App Inventor gallery as the example for our improve-\nments [17]. This application allowed users to add items via\ntyping, remove individual entries, and clear the entire list.\nAn initial usability analysis was conducted to identify UI/UX\nshortcomings. The analysis revealed several issues: a cluttered\nlayout, weak visual hierarchy, and inadequate color contrast.\nThese issues were assessed based on Gestalt principles of\nperception [18], [19] and established UI design guidelines\n[20].\nThe cluttered layout resulted from the close proximity of\nfunctionally distinct components (e.g., add, remove, and clear\nbuttons), which could lead to user confusion and increased\ncognitive load. The weak visual hierarchy made it difficult for\nusers to intuitively understand the primary functions of the\napp, potentially hindering efficient task completion. Inadequate\ncolor contrast posed accessibility concerns, particularly for\nusers with visual impairments, contravening the Web Content\nAccessibility Guidelines (WCAG) [21].\nB. Design\n1) Wireframing: To address the identified issues, we de-\nveloped wireframes to conceptualize the improved UI layout.\nWireframing is an important step in the design process, allow-\ning designers to focus on content placement, functionality, and\nuser flow without the distraction of visual design elements.\nWe utilized Figma, a professional design tool, to create the\nwireframes and applied an 8-point grid system to ensure\nconsistent spacing and alignment.\nThe wireframes were designed following Gestalt principles,\nspecifically the laws of proximity and common region, which\nstate that elements close to each other or within the same\nbounded area are perceived as related [22]. By reorganizing\ninput elements (e.g., the input field and related labels) and\noutput elements (e.g., list view and action buttons) into distinct\nregions, we aimed to enhance the logical flow and reduce\ncognitive load.\nStandard icons were used in place of text labels to improve\nclarity and universal understanding, adhering to best practices\nin iconography [23]. The use of icons also contributed to a\ncleaner visual aesthetic and streamlined the user experience.\n2) Design Development: Building upon the wireframes, we\ndeveloped the final screen designs with a focus on visual\naesthetics. We adopted the 60-30-10 rule for color scheme\ncomposition, a guideline used in interior design and UI/UX\ndesign to create balanced and harmonious color palettes [24].\nIn our design, beige was selected as the dominant color\n(60%), blue as the secondary color (30%), and orange as the\naccent color (10%) to draw attention to important interactive\nelements.\nTo ensure color choices met accessibility standards, we\nleveraged Realtime Colors and other contrast-checking tools\nto evaluate the color combinations in real-time [25]. These\ntools assessed the contrast ratios between background and\ntext, adhering to WCAG 2.1 guidelines, which recommend\na minimum contrast ratio of 4.5:1 for normal text and 3:1\nfor large text [21]. Our chosen color palette achieved contrast\nratios exceeding 7:1, satisfying Level AAA compliance for\noptimal readability.\nThe final design also considered typography, iconography,\nand visual hierarchy. We selected fonts that were legible and\nensured that interactive elements were visually distinct and\nintuitive to use [26].\nC. Implementation\nWe imported the designs from Figma into App Inventor by\nexporting the visual assets and integrating them within the ap-\nplication's interface using vertical arrangements. To maintain\nthe visual integrity of the design, we set the background color\nof components to \"none,\u201d making them invisible and allowing\nthe imported design elements to serve as the primary visual\ncomponents. Interactive elements such as buttons and text\nfields were overlaid onto the visual design using empty labels\nand arrangements to preserve functionality without disrupting\nthe aesthetic.\nLive testing was conducted using the MIT App Inventor\nCompanion app, which allowed real-time previewing and\""}, {"title": "IV. RESULTS", "content": "A. Quantitative Analysis\nTo evaluate the impact of integrating Figma into the UI/UX\ndesign process within MIT App Inventor, we conducted an\nanonymous survey involving 50 participants, particularly high\nschool students who have created apps with MIT App Inven-\ntor. Participants were presented with two app designs: one\ncreated solely using MIT App Inventor (baseline) and another\ndesigned with Figma in MIT App Inventor (FEAD).\nParticipants rated each design on several aspects, including\noverall UI/UX experience and color scheme, using a scale\nfrom -1 to 1 (where -1 indicates a negative perception, 0 is\nneutral, and 1 is positive).\nThe quantitative analysis revealed a clear preference for the\nFigma-enhanced design, indicating a significant improvement\nin user perception when Figma is incorporated into the design\nprocess.\n\u2022\nMean score for overall UI/UX experience:\n\u2022\nFigma design: 0.727\n\u2022\nMIT App Inventor design: -0.380\nInterpretation: Figma-enhanced design scored signifi-\ncantly higher, proving its superior user experience.\n\u2022\nMean score for color scheme:\n\u2022\nFigma design: 0.719\n\u2022\nMIT App Inventor design: -0.423\nInterpretation: Figma-enhanced design outperformed\nMIT App Inventor, proving its visual appeal.\nB. Qualitative Analysis\nIn addition to quantitative ratings, participants provided\nopen-ended feedback on their experiences with each design.\nWe performed a thematic analysis of the responses, extracting\nkey descriptors and sentiments associated with each design.\nThe findings are visualized in the following word clouds.\nC. Perceived Professionalism\nParticipants were also asked to identify which design they\nperceived as originating from a professional app. A significant\nmajority, 61.2%, selected the Figma-enhanced design, while\nonly 8.2% chose the MIT App Inventor design. The remaining\nparticipants were either undecided or felt that neither design\nappeared professional. This disparity demonstrates the impact\nof professional design tools on user perception of app quality.\nD. Implications\nOverall, the results demonstrate that incorporating exter-\nnal design tools like Figma can significantly improve the\nUI/UX quality of apps developed with MIT App Inventor.\nThe enhanced designs meet more users' aesthetic expectations\nand also improve usability and overall satisfaction. These\nimprovements are critical in educational contexts, where the\ngoal is to create engaging and effective learning experiences.\nThe substantial differences in user ratings suggest that the\nlimitations of MIT App Inventor's native design capabilities\ncan be effectively addressed by integrating modern design\nprinciples through external tools. This approach allows devel-\nopers and educators to leverage the simplicity and accessibility\nof MIT App Inventor while delivering a user experience that\naligns with modern UI/UX standards."}, {"title": "V. LIMITATIONS AND FUTURE WORK", "content": "A. Limitations\n\u2022\nScreen Size Adaptability: Integrating Figma designs\ninto MIT App Inventor poses challenges in achieving\nconsistent user interfaces across different screen sizes.\nWithout precise adjustments for each device, UI elements\nmay become misaligned or improperly scaled, adversely\naffecting the user experience and necessitating testing and\nmodification.\n\u2022\nRestricted Components: MIT App Inventor's limited\ncustomization for interactive components can cause re-\nstrictions that prevent users from fully implementing\nspecific layouts and advanced UI concepts envisioned in\nFigma.\n\u2022\nLimited Interactivity: Currently, Figma designs can only\nbe imported as static background images within MIT App\nInventor. To add functionality, developers must overlay\ninvisible components and manually align them with the\ndesign elements. This process is time-consuming and\ncomplicates the development workflow.\nB. Future Work\n\u2022\nDeveloping a Custom AI Alignment Tool: A major\nfuture direction can be creating a custom AI-powered\nalignment tool specific to MIT App Inventor [27]. This\ntool would analyze the layout differences between the\ndesign viewed on the desktop (in MIT App Inventor) and\non a mobile device, providing precise guidance on the\nadjustments needed to achieve perfect alignment. By au-\ntomating this process, developers would save significant\ntime and effort.\n\u2022\nFigma Templates for MIT App Inventor: To lower the\nbarrier to entry for educators and users, another key direc-\ntion is to develop a library of high-quality, customizable\nFigma templates specifically designed for integration with\nMIT App Inventor. These templates would follow best\npractices in UI/UX design and address common needs\nin educational and general app development. Offering\nready-made templates would enable users to focus on\nfunctionality while ensuring a polished and professional\naesthetic.\n\u2022\nPilot Testing and Surveys: Building on the initial\nuser surveys, a more extensive pilot testing program\nis necessary to validate the integration method. Users\nwould create complete example apps using both meth-\nods-direct design in MIT App Inventor and Figma-\nenhanced workflows and provide detailed feedback on\ntheir experiences. By analyzing their ratings and feed-\nback, we can gain a better understanding of the method's\nstrengths, weaknesses, and overall user satisfaction. This\ndata would also inform future iterations of the integration\nworkflow and tools."}, {"title": "VI. ETHICAL CONSIDERATIONS", "content": "This study involved an anonymous survey to evaluate the\nimpact of integrating external design tools, such as Figma, into\nthe MIT App Inventor workflow. All participants were high\nschool students familiar with app development and voluntarily\nparticipated in the survey after being informed of the study's\npurpose and methodology.\nThe survey was conducted anonymously to ensure partic-\nipant privacy. No personal or identifiable information was\ncollected during the process, and responses were used solely\nfor the purposes of this study. Participants were made aware\nof their rights to withdraw from the survey at any time\nwithout penalty. These measures align with ethical standards\nfor research involving human participants and prioritize trans-\nparency, respect, and confidentiality."}, {"title": "VII. CONCLUSION", "content": "This study successfully introduced the Figma-Enhanced\nApp Design (FEAD) Method to address the UI/UX limitations\nof MIT App Inventor by integrating external design principles\nand tools. Through a combination of Figma and established\ndesign frameworks, we demonstrated a measurable improve-\nment in user experience and aesthetic quality. Apps developed\nusing the FEAD Method achieved mean scores of 0.727 for\noverall user experience and 0.719 for color scheme ratings,\nsignificantly outperforming the baseline designs, which only\nscored -0.380 and -0.423.\nBy merging accessibility with professional-grade design, the\nFEAD Method not only enhances the visual appeal of MIT\nApp Inventor apps but also sets a precedent for integrating\nexternal tools into educational programming environments.\nThis framework paves the way for broader adoption of design-\nfirst approaches in app development education, promoting\ncreativity, engagement, and innovation among students and\neducators alike."}]}