{"title": "CAV-AHDV-CAV: Mitigating Traffic Oscillations for CAVs through a Novel Car-Following Structure and Reinforcement Learning", "authors": ["Xianda Chen", "PakHin Tiu", "Yihuai Zhang", "Xinhu Zheng", "Meixin Zhu"], "abstract": "Connected and Automated Vehicles (CAVs) offer a promising solution to the challenges of mixed traffic with both CAVs and Human-Driven Vehicles (HDVs). A significant hurdle in such scenarios is traffic oscillation, or the \"stop-and-go\" pattern, during car-following situations. While HDVs rely on limited information, CAVs can leverage data from other CAVs for better decision-making. This allows CAVs to anticipate and mitigate the spread of deceleration waves that worsen traffic flow. We propose a novel \"CAV-AHDV-CAV\" car-following framework that treats the sequence of HDVs between two CAVs as a single entity, eliminating noise from individual driver behaviors. This deep reinforcement learning approach analyzes vehicle equilibrium states and employs a state fusion strategy. Trained and tested on diverse datasets (HighD, NGSIM, SPMD, Waymo, Lyft) encompassing over 70,000 car-following instances, our model outperforms baselines in collision avoidance, maintaining equilibrium with both preceding and leading vehicles and achieving the lowest standard deviation of time headway. These results demonstrate the effectiveness of our approach in developing robust CAV control strategies for mixed traffic. Our model has the potential to mitigate traffic oscillation, improve traffic flow efficiency, and enhance overall safety.", "sections": [{"title": "I. INTRODUCTION", "content": "TRAFFIC congestion, characterized by recurring periods of \"stop-and-go\" motion as shown in Fig. 1, plagues transportation systems globally. This phenomenon not only frustrates commuters but also incurs substantial economic and environmental burdens [1]\u2013[4]. The emergence of Connected and Automated Vehicles (CAVs) presents a promising solution for mitigating traffic flow inefficiencies [5]\u2013[8]. However, in mixed-traffic environments where CAVs coexist with Human-Driven Vehicles (HDVs), a critical challenge arises [9]-[11].\nWhile CAV technology possesses the potential to revolutionize traffic management, the inherent unpredictability of HDV behavior significantly hinders the ability to fully harness this potential.\nBuilding on the potential of CAVs, their advanced sensors and communication capabilities offer the ability to react more precisely and consistently to traffic conditions [12], [13]. This translates to smoother traffic flow, potentially eliminating the stop-and-go oscillations that plague current systems. These oscillations, characterized by repeated cycles of sudden braking and acceleration, significantly reduce traffic efficiency. Vehicles waste fuel while stuck in stop-and-go traffic, leading to increased emissions and environmental damage. Additionally, these rapid speed changes create safety hazards as drivers react poorly to unpredictable congestion [14], [15]. However, the success of CAV technology in achieving these improvements hinges on its ability to account for the unpredictable behavior of human drivers.\nUnfortunately, directly implementing CAV control strategies in mixed traffic environments proves challenging due to the inherent variability in human driving behavior. Traditional car-following models struggle to account for sudden maneuvers, emotional responses, and other unpredictable actions of HDVS [16], [17]. This unpredictability disrupts the carefully planned maneuvers of CAVs, hindering their ability to optimize traffic flow. To address this gap, we propose the \"CAV-AHDV-CAV\u201d car-following framework as depicted in Fig. 2. This framework treats a sequence of HDVs following a leading CAV as a single, aggregated unit, termed the AHDV. By considering the"}, {"title": "II. RELATED WORK", "content": "Several approaches have been explored to mitigate traffic oscillation, a recurring pattern of stop-and-go traffic flow. One approach focuses on optimizing traffic signal control [18], [19]. By strategically adjusting signal timings based on real-time traffic data, researchers aim to smooth traffic flow and prevent bottlenecks from forming, which can trigger oscillations. Another approach investigates the role of AV control. Proponents of this approach believe that vehicles equipped with advanced communication and control systems can coordinate their movements, maintaining a consistent speed and headway to prevent the propagation of disruptions and minimize oscillations."}, {"title": "A. Traffic Signal Control", "content": "One way to address the stop-and-go pattern of traffic congestion is by optimizing traffic signal control strategies. Aboudolas el al. studied three traffic signal control methods for large congested urban networks, comparing their effectiveness and real-time applicability [20]. They also introduced a real-time traffic signal control system for congested cities that uses quadratic programming to optimize queue lengths and prevent gridlock [21]. Lo proposed a new traffic signal control system that adjusts to changing traffic conditions using real-time data and a comprehensive traffic flow model [22]. Atta el al. suggested an adaptive traffic congestion control system utilizing RFID sensors and dynamic signal timing to ease traffic congestion [23]. Meanwhile, other researchers delved into network congestion control. Katabi el al. introduced XCP, a new congestion control protocol designed to outperform TCP, especially in high-bandwidth and high-latency networks [24]. Hayes and Armitage presented a delay-gradient congestion control algorithm for TCP that enhances performance over traditional methods by reducing queuing delays and tolerating non-congestion-related packet losses [25]. Paganini el al. proposed a congestion control system for general networks that achieves high performance, stability, and fairness; and allows for user preferences within a provably stable framework [26]. Mittal el al. introduced a novel congestion control system for data centers that utilizes round-trip time (RTT) measurements for low-latency, high-bandwidth communication [27]. Mascolo proposed a congestion control algorithm for high-speed networks using Smith's principle to ensure stable data flow and efficient link utilization [28]. Cao el al. suggested a delay-based congestion control algorithm for multipath TCP, achieving finer load balancing and faster congestion response compared to loss-based approaches [29]. However, these approaches rely on accurate data collection and traffic flow modeling, which can be challenging in real-world scenarios with unpredictable factors. Therefore, we aim to propose a microscopic autonomous vehicle control strategy that can adapt to these uncertainties and potentially improve traffic flow efficiency."}, {"title": "B. Autonomous Vehicle Control", "content": "Numerous studies in autonomous vehicle control have prioritized optimizing vehicle behavior to improve traffic flow. Chen el al. introduced a car-following model that accurately reproduces stop-and-go traffic patterns by considering driver behavior and emphasizing the significance of analyzing microscopic traffic flow [30]. Zhou el al. proposed a recurrent neural network model that effectively predicts traffic flow disruptions (oscillations) by capturing driver behavior more accurately than existing models [31]. He el al. developed a data-driven car-following model that utilizes real-world traffic data and the k-nearest neighbor approach to predict vehicle behavior without relying on assumptions about driver behavior or fundamental diagrams [32]. They also suggested a \"Jam-Absorption Driving (JAD)\" strategy, where a designated vehicle slows down before traffic oscillations to eliminate them and enhance traffic flow [33]. However, these approaches have limitations"}, {"title": "III. METHODOLOGY", "content": "This paper aims to develop advanced control strategies for CAVs in car-following scenarios within mixed traffic on an infinite one-lane segment. To enable a systematic analysis and focus on fundamental interactions, several crucial assumptions have been established:\ni) CAVs are equipped with real-time information acqui-sition capabilities regarding the speed and position of surrounding vehicles;\nii) CAVs utilize V2V communication to exchange informa-tion with other CAVs in their vicinity;\niii) HDVs do not have communication capabilities and rely solely on their perception for situational awareness;\niv) Lane-changing maneuvers within the vehicular platoon are not considered, simplifying the analysis of the car-following process.\nWith these assumptions in place, our proposed \"CAV-AHDV-CAV\" car-following structure aims to address the interaction dynamics between CAVs and HDVs in a mixed-traffic scenario. As illustrated in Fig. 2, the leading CAV can acquire essential data such as its velocity, the velocity of the immediate following HDV, and the spacing between them. Similarly, the following CAV at the end of the convoy can gather information including its own velocity, the velocity of the immediate preceding HDV, and the spacing between them. Additionally, the following CAV has access to information transmitted by the leading CAV. Consequently, the HDVs located between the leading CAV and the following CAV can be treated as an aggregated vehicle unit, characterized by a time-variant"}, {"title": "B. Vehicle Equilibrium", "content": "Upon establishing the conceptual framework for our proposed car-following model, this study draws inspiration from the concept of vehicle equilibrium state introduced in a prior work by Shi et al. [34]. The equilibrium state referred to here serves as a reference point for the following CAV (denoted as the i-th vehicle) to sustain an optimal relationship with both the preceding AHDV (denoted as the j-th vehicle) and the leading CAV (denoted as the k-th vehicle) in the platoon. This equilibrium state is characterized by two key elements: the equilibrium spacing denoted as $d_{i,j/k}^{*t}$ and the equilibrium velocity represented by $v_{i,j/k}^{*t}$. Importantly, this equilibrium state is dynamic and varies over time to adapt to the changing conditions at each time step.\nThe equilibrium spacing and velocity between the following CAV and the preceding AHDV are defined as follows:\n$d_{i,j}^{*t} = v_i^tT_i + l_i$ (1)\n$v_{i,j}^{*t} = v_j^t$ (2)\nIn the above equations, $v_i^t$ and $v_j^t$ represent the current velocity of the following CAV and the preceding AHDV, respectively. The parameters $T_i$ and $l_i$ denote the desired constant time headway and the minimum standstill spacing between the following CAV and the preceding AHDV, respectively. With this equilibrium state, the following CAV aims to maintain a stable and harmonious interaction with the preceding AHDV.\nSimilarly, the equilibrium state between the following CAV and the leading CAV can be described as follows:\n$d_{i,k}^{*t} = v_i^tT_k + L_{i,k}$ (3)\n$v_{i,k}^{*t} = v_k^t$ (4)\nHere, the time-dependent desired constant time headway $T_{i,k}^{*t}$ and the minimum standstill spacing $L_{i,k}^{*t}$ between the following"}, {"title": "C. State Fusion Formulation", "content": "In our proposed \"CAV-AHDV-CAV\u201d car-following framework, the following CAV incorporates information not only from the preceding AHDV but also from the leading CAV to mitigate traffic oscillations. To achieve this, we introduce a novel state fusion strategy that integrates the equilibrium states associated with both the preceding AHDV and the leading CAV. This fusion strategy empowers the following CAV to dynamically adjust its spacing and velocity, ensuring the maintenance of an optimal state relative to both the preceding AHDV and the leading CAV within the traffic flow system.\nThe fusion state of the following CAV is determined using the following equations:\n$\\Delta d = \\frac{q_j\\Delta d_{i,j} + q_k\\Delta d_{i,k}}{q_j + q_k}$ (11)\n$\\Delta v = \\frac{q_j\\Delta v_{i, j} + q_k\\Delta v_{i,k}}{q_j + q_k}$ (12)\nwhere $q_j$ and $q_k$ are the weights assigned to the two equilibrium states, determining their influence on the fusion state of the following CAV. By appropriately assigning these weights, a balanced fusion state can be achieved, incorporating the best aspects of each equilibrium."}, {"title": "D. Control Strategy and Algorithms", "content": "Upon the implementation of the state fusion strategy to achieve vehicle equilibrium, the current state return values can be derived as $s = [\\Delta d, \\Delta v]$. Additionally, an action $a_t$ is determined by the agent to represent the acceleration at the current time step. To assess the system's performance based on the current state and action, it is necessary to define a reward function $r_a$. This reward function quantitatively measures the system's performance and provides feedback to the learning algorithm, thereby guiding the agent towards making decisions that lead to the equilibrium state within our car-following framework.\nIn our proposed framework, the reward function is defined as follows:\n$r = exp(-(c+g))$ (13)\nwhere\n$c = (s)^T\\begin{bmatrix} a_{1, i} & 0\\\\ 0 & a_{2, i} \\end{bmatrix} s$ (14)\n$g = a_{3,i}(a)^2$ (15)\nHere, the adjustable weights $a_{1,i}$, $a_{2,i}$, and $a_{3,i}$ can be determined using the same settings employed in the optimal control method.\nAfter defining the reward function in our car-following framework, we incorporated the Deep Deterministic Policy Gradient (DDPG) algorithm, as suggested by Lillicrap el al. [37], to aid learning and improve decision-making. Illustrated in Fig. 3, the DDPG algorithm is a model-free, off-policy reinforcement learning method well-suited for continuous action spaces, making it ideal for handling the intricacies of our car-following system. DDPG comprises two main components: the Actor and the Critic networks. The Actor network directly learns the optimal policy by mapping states $s_i$ to actions $a_i$, providing continuous control outputs. In contrast, the Critic network assesses the actions $a_i$ chosen by the Actor by estimating the Q-value function, enhancing learning by offering feedback on the selected actions. Furthermore, the integration of target Actor and target Critic networks in DDPG enhances training stability. These target networks help address issues like overestimation or divergence during training by gradually updating target values, leading to more consistent and effective learning outcomes."}, {"title": "IV. EXPERIMENTS", "content": "In this study, we implemented the data selection criteria as detailed in our prior work [38]. This process involved the utilization of five distinct datasets: HighD [39], NGSIM [40], SPMD [41], Waymo [42], and Lyft [43]. Notably, the HighD dataset presented a recording frame rate of 25Hz, differing from the 10Hz frame rate observed in the remaining datasets. To ensure consistency during training and avoid episode length variations, we standardized all car-following pairs to a fixed duration. Each event became precisely 10 seconds long, corresponding to 250 frames in the HighD dataset and 100 frames in other datasets.\nOur analysis identified a total of 76, 553 car-following pairs across the datasets. Specifically, the HighD dataset contributed 12,540 car-following pairs, the NGSIM dataset contained 1,725 pairs, the SPMD dataset (SPMD1 and SPMD2) included 40,903 pairs, the Waymo dataset featured 661 pairs, and the Lyft dataset comprised 20, 724 pairs. Following the established protocol, we partitioned the collected data into a training set (70%) and a testing set (30%). Each car-following pair includes four types of extracted data: the spacing between the following vehicle and the leading vehicle, the speed of the following vehicle and the leading vehicle, and the relative speed between them."}, {"title": "B. Implementation", "content": "This study uses Stable-Baselines3 (SB3) [44], a Python library offering user-friendly implementations of various reinforcement learning (RL) algorithms. Built on top of PyTorch, a popular framework for deep learning and deep reinforcement learning (DRL), SB3 simplifies our development process. In our car-following environment, we set a constant acceleration limit of 3m/s\u00b2 and defined the action space to range from -3m/s2 to 3m/s2. We also established specific parameters for the desired constant time headway $T_i$ and minimum standstill spacing $l_i$ at 0.85s and 2.3m (half of the vehicle length), respectively. The wave speed was set to 4.4m/s. The reset function within our car-following environment initializes the following CAV as defined in Eq. 16 and Eq. 17. It then combines this information to create an initial fusion state that's returned by the function. The step function takes an action (acceleration in our case) as input and updates the state of the following CAV. It then calculates a new fusion state based on this updated state. This new fusion state, along with a reward"}, {"title": "B. Vehicle Equilibrium", "content": "To fit our proposed \"CAV-AHDV-CAV\u201d car-following structure, we treated the car-following pair as the leading CAV and the preceding AHDV. We simulated the following CAV with an initial state where the initial spacing and speed of the following CAV were determined based on the preceding AHDV and the leading CAV as follows:\n$v_i^{OP} = \\frac{v_j + v_k}{2}$ (16)\n$d_{i,j}^{OP} = d_{j,k}$ (17)\nwhere $v_j^t$ and $v_k^t$ represents the initial speed of the preceding AHDV and the leading CAV, respectively."}, {"title": "C. Baseline Models", "content": "In order to assess the effectiveness of our model, we carried out a thorough evaluation by comparing it against several established car-following models. These models included the Intelligent Driver Model (IDM) developed by Treiber el al. [46], a Neural Network (NN)-based model, and a Long Short-Term Memory (LSTM)-based model. However, in our experiment settings of these existing models, the following CAV lacks access to information from the leading CAV. Consequently, the following CAV makes decisions based solely on its own data and the information gathered from the preceding AHDV through its sensors.\nThe IDM represents a fundamental and widely accepted traditional car-following model that is extensively utilized in various research endeavors. It serves as a fundamental basis for understanding and simulating driver behaviors in traffic scenarios, providing a crucial benchmark for evaluating the performance of newer car-following models. Within our framework, we defined the comfortable acceleration as 1m/s2. Additionally, the desired speed reflects the equilibrium states of speed and spacing relative to the preceding AHDV, as outlined in Eq. 1 and Eq. 2. In our model setup, we have configured the beta parameter to be 2, enabling the model to achieve the desired speed and spacing equally. Furthermore, we have constrained the acceleration output within the range of [-3, 3], ensuring realistic and bounded acceleration values for the simulation.\nOn the contrary, the NN-based model comprises three fully connected layers with Rectified Linear Unit (ReLU) activation functions interposed between them, culminating in a final"}, {"title": "D. Evaluation Metrics", "content": "In our experimental setup, which integrates learning-based models such as NN, LSTM networks, and DDPG algorithms, it is essential to evaluate the proficiency of these models in collision avoidance. One key evaluation metric for our learning-based models is the collision rate, which is defined as:\n$Collision Rate = \\frac{Number\\ of\\ Events\\ with\\ Spacing\\ <\\ 0}{Total\\ Number\\ of\\ Car\\text{-}Following\\ Events}$ (18)\nAfter establishing equilibrium states for the following CAV concerning both the preceding AHDV and the leading CAV, a fundamental evaluation measure is the MSE that quantifies the disparity between the simulated state and the equilibrium state. The MSE for each occurrence is expressed as:\n$MSE = \\frac{1}{T} \\sum_{t=0}^{T} (S_t \u2013 S^{*t})^2$ (19)\nwhere N signifies the total number of time steps, t denotes the index of the time step, $S_t$ represents the simulated state at time step t, and $S^{*t}$ corresponds to the equilibrium state at time step t. Our experiments evaluated the model's performance using three equilibrium states: the fused equilibrium state for speed, and separate equilibrium states for spacing with both the preceding AHDV and the leading CAV.\nAdditionally, our proposed model is tailored to address traffic oscillations. To evaluate the impact of different control models on these oscillations, we introduce the concept of string stability within the platoon. This approach enables us to measure how various control models affect traffic oscillations. In the absence of a standardized evaluation metric for traffic oscillation, we define our own metric as the standard deviation of the time headway of the following CAV concerning both the preceding AHDV and the leading CAV.\nTo compute the time headway at each time step, we employ the following formula:\n$THW_{i,j}^t = \\frac{d_{i,j}^t}{v_{i,j}^t}$ (20)\nHere, $THW_{i,j}^t$ represents the time headway between the following CAV and the preceding AHDV at time t. We can"}, {"title": "D. Evaluation Metrics", "content": "similarly calculate the time headway between the following CAV and the leading CAV.\nSubsequently, to determine the standard deviation of time headway of the n-th event, we utilize the following equation:\n$t = \\sqrt{\\frac{1}{T}\\sum_{t=0}^{T}(THW_{i,j}^t \u2013 \\overline{THW_{i,j}})^2}$ (21)\nwhere T represents the total number of time steps of the n-th event and $\\overline{THW_{i,j}}$ denotes the average time headway throughout the entire event."}, {"title": "V. DISCUSSION", "content": "Fig. 5 and Fig. 6 reveal distinct behaviors of the compared models in all four randomly chosen events. The IDM strategy maintained a larger following distance from the preceding AHDV by simply matching its speed. In contrast, the NN-based, LSTM-based, and our proposed model all initiated deceleration to reach a stable equilibrium state. Here's the key difference:\n\u2022\nThe NN-based and LSTM-based models focused solely on achieving equilibrium with the preceding AHDV.\n\u2022\nOur proposed model, however, considered both the preceding AHDV and the leading CAV, incorporating a balance as defined in Eq. 11 and Eq. 12. This enabled it to anticipate the deceleration of the preceding AHDV by considering the leading CAV's influence. Consequently, when the leading CAV slowed down, our model reacted proactively, avoiding collisions or near-collisions, unlike the NN-based and LSTM-based models that reacted only after the preceding AHDV braked.\nThese results demonstrate the advantage of our proposed model in handling stop-and-go scenarios compared to baseline models (IDM, NN-based, LSTM-based). By considering both the preceding AHDV and the leading CAV, our model can anticipate upcoming changes and react proactively, achieving smoother and safer interactions within the traffic flow.\nThe performance evaluation in Table I further strengthens the advantages of our proposed model. It demonstrates significant improvements in collision avoidance compared to baseline models. Notably, our model achieves a remarkably low overall collision rate of 0.048%, far exceeding the NN-based model (2.138%) and LSTM-based model (4.297%). This translates to zero collisions in both the HighD and NGSIM (I-80) datasets. While IDM excels at achieving a desired speed (resulting in the lowest overall MSE of speed at 4.938), our proposed model achieves a competitive overall MSE of speed (19.272) while significantly outperforming the NN-based and LSTM-based models. It's worth noting that our model achieves the best overall MSE of speed (2.977) in the HighD dataset. In terms of maintaining spacing, all three models (NN-based, LSTM-based, and ours) demonstrate similar performance regarding the preceding AHDV (around 490 MSE). However, our proposed model shines in maintaining equilibrium with both the preceding AHDV and the leading CAV, achieving the lowest overall MSE of spacing concerning the leading CAV (311.035). This advantage is further emphasized by the IDM's significantly higher MSEs in spacing. The mean standard deviations of time headway follow a similar trend. While IDM exhibits the highest overall values, our proposed model achieves the lowest concerning the preceding AHDV"}, {"title": "B. Limitations", "content": "While our proposed model has shown promise in helping CAVs reduce the impact of traffic oscillation in mixed traffic by leveraging information from the leading CAV and predicting stop-and-go patterns for early braking and maintaining the movement without dropping the speed to 0, there are limitations in our experimental setup that need to be considered. Firstly, in our experiments, we treat a sequence of HDVs as an aggregated unit, but we only have one vehicle between the CAVs in our setup. To validate our assumption that treating a sequence of HDVs as an aggregated unit can eliminate the variability of HDVs, further validation on car-following events with varying numbers of HDVs is necessary. Secondly, our car-following platoon consists of only two CAVs, whereas in real-world scenarios, multiple CAVs can work together to address"}, {"title": "VI. CONCLUSION", "content": "In conclusion, our study introduces a CAV-AHDV-CAV car-following framework employing deep reinforcement learning to tackle traffic oscillations in mixed traffic scenarios. This structure effectively addresses the stochastic behaviors of HDVs during car-following events by aggregating a sequence of HDVs. Leveraging V2V communication capabilities, our framework integrates a vehicle equilibrium state and state fusion strategy, enabling the following CAV to make decisions based on the preceding AHDV and the leading CAV. Through extensive training and testing on diverse datasets such as HighD, NGSIM, SPMD, Waymo, and Lyft, our model demonstrates superior performance in collision prevention, achieving equilibrium states, and maintaining stable time headways. These results underscore the effectiveness of our proposed approach in addressing dynamic traffic challenges across various scenarios. Future research endeavors could focus on enhancing"}]}