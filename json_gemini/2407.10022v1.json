{"title": "ATOMAGENTS: ALLOY DESIGN AND DISCOVERY THROUGH PHYSICS-AWARE MULTI-MODAL MULTI-AGENT ARTIFICIAL INTELLIGENCE", "authors": ["Alireza Ghafarollahi", "Markus J. Buehler"], "abstract": "The design of new alloys is a multi-scale problem that requires a holistic approach that involves retrieving relevant knowledge, applying advanced computational methods, conducting experimental validations, and analyzing the results, a process that is typically slow and reserved for human experts. Machine learning (ML) can help accelerate this process, for instance, through the use of deep surrogate models that connect structural and chemical features to material properties, or vice versa. However, existing data-driven models often target specific material objectives, offering limited flexibility to integrate out-of-domain knowledge and cannot adapt to new, unforeseen challenges. Here, we overcome these limitations by leveraging the distinct capabilities of multiple AI agents that collaborate autonomously within a dynamic environment to solve complex materials design tasks. The proposed physics-aware generative AI platform, AtomAgents, synergizes the intelligence of large language models (LLM) the dynamic collaboration among AI agents with expertise in various domains, including knowledge retrieval, multi-modal data integration, physics-based simulations, and comprehensive results analysis across modalities that includes numerical data and images of physical simulation results. The concerted effort of the multi-agent system allows for addressing complex materials design problems, as demonstrated by examples that include autonomously designing metallic alloys with enhanced properties compared to their pure counterparts. Our results enable accurate prediction of key characteristics across alloys and highlight the crucial role of solid solution alloying to steer the development of advanced metallic alloys. Our framework enhances the efficiency of complex multi-objective design tasks and opens new avenues in fields such as biomedical materials engineering, renewable energy, and environmental sustainability.", "sections": [{"title": "1 Introduction", "content": "The continuous demand for new materials is driven by the need to address emerging technological challenges, enhance efficiencies, reduce costs, and minimize environmental impacts across a range of industries [1, 2, 3, 4]. Innovations in materials science can catalyze breakthroughs in sectors such as electronics [5], aerospace [6, 7], energy storage [8, 9], and biomedicine [10]. For example, the development of lighter, stronger materials could lead to more fuel-efficient vehicles and aircraft, while advancements in semiconductor technology could revolutionize electronics through enhanced functionality and reduced energy consumption [11].\nMetal alloys are indispensable for many structural applications mainly due to the critical role of defects in their crystalline lattices, such as dislocations, interfaces, crack tips, grain boundaries, precipitates, and vacancies. These defects and their interactions determine key properties like plastic flow behavior, creep, fatigue, and fracture toughness, directly impacting the material's performance [12, 13, 14, 15, 16, 17]. Understanding these defects and their chemical dependencies is crucial for optimizing existing alloys and designing new, high-performance materials. Experimental and computational methods are essential in this pursuit, providing detailed insights into the complex behaviors of metallic systems under varying conditions. Advanced experimental techniques reveal the formation and dynamics of defects in real-time, enhancing our understanding of material behavior under operational conditions. Atomistic simulations, including molecular dynamics (MD) [18, 19, 20, 21] and Density Functional Theory (DFT) [22], offer detailed models of defect behaviors at the atomic level, enabling the prediction of material behaviors under various conditions. These are complemented by physics-based theoretical models, which bridge the gap between atomic-scale phenomena and macroscopic material behavior, thereby further accelerating the material design process and providing mechanistic insights. [23, 24, 25, 26, 27, 28, 29, 30, 31] Recently, machine learning (ML) and artificial intelligence (AI) techniques have been integrated into computational materials science, enabling property prediction and accelerating materials analysis and design [32, 33, 34, 35, 36, 37, 38]. In early stages of such ML driven AI methods as applied to physics, prime applications have been as surrogate models or tools to serve specific inverse problems, like the design of new microstructures to meet certain material behaviors [39, 40, 41, 42, 43, 44, 45].\nMaterials design is inherently a multi-scale challenge, necessitating the integration of materials characteristics across different scales\u2014from atomic interactions to macroscopic behaviors [46, 47, 48]. The vast array of data generated from these diverse scales including deformation mechanisms, mechanical and thermal properties, processing-structure-property relationships, microstructural characteristics, and chemical compositions-exists in various formats such as text, images, and tabular data. Valuable insights are also embedded in resources like books, materials databases, patents, and technical reports [13, 49, 50, 51]. Moreover, designing materials with enhanced performance involves satisfying multiple criteria, a task complicated by the limitations of current modeling approaches. Physics-based models are precise but generally target specific properties and depend on computationally expensive input parameters derived from intensive simulations like DFT, and their integration requires reasoning over results, simulation strategies, and and understanding of relative weaknesses and strenghths of various tools. Machine learning and deep learning models complement these efforts in various ways: For instance, as surrogate models that bridge different scales enabling the exploration of massive design spaces [52], or by developing state-of-the-art ML interatomic potentials to achieve DFT accuracy with the speed of empirical potentials. [53, 54, 55, 56, 57].\nHowever, a persistent frontier in materials science is the development of systems that cultivate comprehensive intelligence by automating complex materials modeling and design tasks, while leveraging a diverse array of knowledge, tools, and capabilities across different scales. These systems are crucial not only for generating novel insights into materials but also for dynamically integrating existing knowledge and developing new data. Importantly, these systems should ideally be able to iteratively refine their strategies, merging insights across disciplines to progressively evolve towards optimal solutions, along with an understanding, awareness and ability to probe specific details of the physics. Such a broad and integrative capability enables them to continuously enhance their approaches, adapting to new data (e.g. observations) and findings, thus improving the efficiency and effectiveness of material design and discovery processes. In this study, we propose a method to achieve such an integration of external knowledge, tools, logic, reasoning, and show how a physics-aware artificial intelligence can be effectively implemented through the deployment of a multi-model multi-agent AI system driven by Large Language Models (LLMs)."}, {"title": "2 Results and discussion", "content": "The outline of our proposed multi-agent model is shown in Figure 2, illustrating the collaborative efforts of a team of agents to solve complex multi-objective problems in the context of alloy design and analysis requiring atomistic simulations. At the core of AtomAgents lies a group of agents\u2014User, Engineer, Scientist, and Group Manager-who control the overall workflow of the problem-solving process by calling and executing relevant tools, providing appropriate inputs, and returning output results. Several tools are implemented in AtomAgents to facilitate the alloy design and analysis process, performing different tasks as shown in Figure 2. A fundamental tool is the planning tool, which consists of a group of agents: an Admin, a Planner, and a Critic, who are responsible for providing a detailed, well-structured plan to solve the multi-objective complex task. When a problem is posed, the planning tool is executed at the beginning, and a plan is created through collaboration between the Planner and the Critic, and returned to the core agents. Then, the core agents start executing the plan by calling the appropriate tools. These agents (except the User who poses the task) are powered by a state-of-the-art general-purpose large language model from the GPT family [77] accessed via the OpenAI API [78]. Moreover, each agent is characterized by a unique profile that describes its role in the system, as shown in Table 1.\nThe full description of the tools and functions incorporated in AtomAgents is listed in Table S2 of the Sup-porting Information, showcasing a broad range of capabilities and functionalities. These include computations by atomistic simulations, knowledge retrieval from external sources, coding, plotting, and image analysis, collectively making AtomAgents a robust physics-aware LLM-based framework for solving intricate materials design and analysis tasks. As shown in Figure 2, each tool is equipped with a set of agents that autonomously collaborate to respond to the given query. Similar to the core agents, each of these AI agents is powered by a general-purpose LLM and is assigned a role described by its profile. Upon receiving a query from the user, the core agents dynamically and non-linearly call and execute the necessary tools until the solution is reached and the problem is resolved. The full profile of tool's agents is shown in Table S2 of the Supporting Information. Moreover, the computation tool is composed of a rich library of functions covering a wide range of atomistic simulations such as elastic constant and surface energy calculations, and performing complex nudged elastic band computations. The full list of computation functions along with their profile is listed in Table S3 in the Supporting Information.\nThe following sections present a series of experiments to demonstrate how the multi-agent system addresses various tasks in the domain of alloy design, particularly through generating new physics via atomistic simulations, eliminating or substantially reducing the need for human intervention. All atomistic simulations"}, {"title": "2.1 Experiment I - Material Properties Calculation and Knowledge Retrieval; multi-model integration problem", "content": "Computing material properties such as lattice and elastic constants is crucial in atomistic simulations. These properties characterize materials and are particularly important for theoretical modeling. For instance, when computing the critical fracture toughness based on Griffith's theory, both the elastic constants and surface energies must be determined. However, computing various material properties often requires setting up different structures, writing and adjusting multiple LAMMPS scripts, and running numerous simulations, which becomes cumbersome when studying a broad range of materials, especially in alloy design.\nIn this section, we demonstrate the capability of multi-agent modeling to perform complex tasks without the need for extensive coding knowledge or expertise in LAMMPS. Furthermore, we illustrate how multi-agents can automate the extraction of valuable knowledge from the literature, such as material properties computed by specific interatomic potentials from corresponding papers. The entire problem-solving process is managed by AI agents, encompassing plan definition, simulation execution, knowledge retrieval, and the storage of results. The workflow illustrating multi-agent collaboration for this experiment is shown in Figure 3.\nInitially, the core agents activate the \"planning\" tool responsible for developing a plan to address the query posed by the user. The \"planner\" agent within this tool breaks down the complex task into simpler sub-tasks by proposing a step-by-step plan. This plan is then evaluated and approved by the accompanying \"critic\" agent, and the approved plan is returned to the AtomAgents for execution. The plan involves using a computation tool to derive material properties from atomistic simulations, a knowledge retrieval tool to extract these properties from papers, and coding tools to write a Python script for saving the results.\nThe \"Assistant\" agents in AtomAgents demonstrate excellent performance in following the developed plan, calling, and executing the relevant functions. They are particularly adept at providing the correct query to the team of agents embedded in different tools, as these agents do not have access to external information. Once the results from the computation and knowledge retrieval tools are returned, they are collected and formatted as a Python dictionary. This dictionary is then utilized by the \"coder\" agent to save the results in a CSV file, as illustrated in Figure 3 in tabular format.\nThis experiment showcases the efficacy of the multi-agent system in solving complex tasks that involve conducting atomistic simulations. Moreover, the agreement between the computed and reported values confirms the accuracy of the computations, paving the way for more challenging experiments."}, {"title": "2.2 Experiment II-Analyzing screw dislocation core structure; multi-model analysis problem", "content": "The previous experiment focused on computing basic material properties through atomistic simulations conducted on pristine materials. In this experiment, we extend the scope to include simulations on defected structures, specifically modeling screw dislocations in BCC materials. Screw dislocations are line defects that significantly influence the plasticity of BCC materials and have been extensively studied through atomistic"}, {"title": "2.3 Experiment III - Multi-Scale Mechanics Problem: Fracture Toughness in Alloy Systems", "content": "To further explore the capabilities of our multi-agent model in solving complex simulation-based problems, this experiment is devoted to addressing a multi-scale mechanics problem that combines simulations with theories. Specifically, this task involves computing the critical fracture toughness, a macro-scale material property. Based on linear elastic fracture mechanics (refer to 4.1 for more details), computing the critical fracture toughness necessitates calculating the elastic constants and surface energies of the material. Moreover, this task extends beyond computations in pure materials, as conducted in previous experiments, by incorporating simulations on alloy systems.\nThe overall workflow employed by our multi-agent system is illustrated in Figure 5, where the user poses a highly complex multi-objective task to explore the effect of niobium (Nb) concentration on the fracture toughness in NbMo alloys for two crack systems. An important feature of this experiment is the use of a moment tensor potential [81, 82], a machine-learning-based potential, to describe the interatomic interactions, showcasing the flexibility of the multi-agent system. Furthermore, the task includes plotting the results and discussing them, which is performed by the multi-model agent expert in analyzing images and plots. Another critical aspect of this problem is the computation of material properties (elastic constants and surface energies) for alloy systems. Due to fluctuations in random solute environments, multiple configurations may need to be sampled to obtain an average material property, increasing the computational cost. Here, we have assigned five as the default value for the number of samples, but the user can opt for higher values if needed (e.g., user assigns 20 samples for the NEB simulations in Experiment IV).\nAt the initial step, the core agents engage the \"planning\" tool to provide a detailed implementation plan for the given task. The \u201cplanner\" agent develops a comprehensive plan, which is then validated for accuracy by the \"critic\" agent. The plan (shown in Figure S3 in the supporting information), demonstrates the planner's effectiveness in identifying the key steps necessary for accomplishing the tasks posed by the user. Specifically, the planner correctly identifies that calculating the critical fracture toughness requires computing the surface energy and elastic constants. Moreover, it accurately recognizes that the surface energy should be computed along the crack planes. Saving the final results and analyzing them is another crucial step adeptly captured in the plan.\nUpon receiving the plan, the \"Assistant\" agent in the core module initiates the implementation of the plan step-by-step by activating the tools as outlined. Despite the complexity and length of the tasks, all tools are implemented and the necessary results are gathered autonomously, without human intervention. After the material properties are collected, the fracture toughness is computed for the specified crack systems and alloy compositions. These results are then used as input for the plotting tool.\nThe plot of the results, generated by the multi-agent collaboration, is displayed in Figure 5. Subsequently, the plot is analyzed, and conclusions are drawn by the multi-model agent within the analysis tool, as shown in Figure 6. The multi-model agent, empowered by GPT-4, adeptly captures all details of the plot both quantitatively and qualitatively. This includes identifying the maximum and minimum values of the fracture toughness for the crack systems and providing a detailed discussion on the variation of fracture toughness relative to the Nb concentration.\nThe results from this experiment showcase the competence of the multi-model agent in providing a robust framework for automating the design of alloys. This integration effectively combines various modalities such as theory, simulations, coding, and image analysis, illustrating the comprehensive capabilities of the multi-agent system."}, {"title": "2.4 Experiment IV-Hypothesis generation and validation", "content": "The previous experiments demonstrated the exceptional performance of our multi-agent model in solving complex computational problems requiring atomistic simulations. In this experiment, we explore another intriguing aspect of the multi-agent strategy: hypothesis generation and validation. Due to their high reasoning capabilities, general-purpose large language models like the GPT family have the potential to generate innovative research ideas across fields, including materials science. Combining this with the computational prowess of the multi-agent strategy offers a robust framework where LLM-based research ideas and hypotheses can be validated and refined, providing new opportunities for scientific discovery. The objective of this experiment is to assess the performance of our multi-agent model in hypothesis generation and validation."}, {"title": "3 Summary and future perspective", "content": "We constructed a physics-aware artificial intelligence (AI) model that combines multimodal capabilities in complex reasoning, rational thinking, and strategic planning of large language models (LLMs) with abilities to write and execute code, conduct atomistic-level molecular simulations to solicit new real-world physics data, and conduct visual analysis of graphed data, molecular mechanisms and motions. Through a multi-agent strategy in which these capabilities are integrated, we construct a physics-aware intelligent system capable of solving complex analysis and design tasks, applied here to alloy design and discovery. We showed that such an integration is possible to model complex compositional problems in alloy modeling and design. Our model, AtomAgents, combines a comprehensive suite of tools with various capabilities, including physics-based atomistic simulators, effectively coupling the formidable multimodal reasoning capabilities of LLMs with the essential computational power required for addressing sophisticated materials design problems.\nA key feature of the proposed multi-model system is the potential of integration of different modalities from different domains into the materials design process, offering a paradigms shift in solving challening multi-scale materials problems that traditionally demands considerable human expertise and manual effort. The comprehensive data integration allows AtomAgents to continuously update and improve its predictive capabilities, ensuring that the latest findings and trends in materials science are incorporated into its models. The systematic assimilation of such diverse and dynamic data sources not only enhances the accuracy of simulations and predictions but also accelerates the materials discovery process, paving the way for groundbreaking advancements in the field"}, {"title": "4 Materials and Methods", "content": "Screw dislocation generation\nTo model the screw dislocation, a periodic array of dislocations (PAD) configuration is used (e.g. ref. [96]) with periodic boundary conditions along the dislocation glide direction $z||[11\\overline{2}]$ and dislocation line direction $x||[111]$, and free boundaries along the glide plane normal direction $y||[\\overline{1}10]$. Atomic positions are relaxed by using a combination of the FIRE algorithm [97] and relaxation of the cell dimensions until the convergence is achieved-the norm of the force vector fell below $10^{-6}$ eV/ \u00c5 and stresses $\\sigma_{\\alpha\\alpha}$, $\\sigma_{xy}$, and $\\sigma_{yy}$ fell below 0.1 MPa.\nNEB simulations\nTo compute the minimum energy path between initial and final screw dislocation configurations, nudged elastic band (NEB) [98, 99, 100] computations are performed as implemented in LAMMPS. To perform NEB simulations, first the initial and final screw dislocation configurations were created inside the material using the PAD method. Then NEB simulations are performed using the desired number of replicas. An initial path of intermediate configurations (replicas) is constructed by linearly interpolating the atomic positions between the relaxed initial and final states. The NEB inter-replica spring constant is set to $10^{-2}$ eV/\u00c5 and convergence is assumed when the maximum of the force acting on all of the atoms across all replicas is less than $10^{-3}$ eV/\u00c5."}, {"title": "Surface energy calculations", "content": "The surface energies along a given plane are computed as follows. First, system with periodic boundary conditions in all directions is created and relaxed and the energy $E^{bulk}$ is computed. Then, the supercell is extended along the desired direction and then the system is relaxed and the energy is computed $E^{surf}$. The surface energy is then computed as\n$\\gamma_{s}=\\frac{E^{surf} - E^{bulk}}{2A}$\nwhere A is the area of the surface plane."}, {"title": "4.1 Critical fracture toughness", "content": "The mode I anisotopic critical fracture toughness is given by\n$K_{IC} = \\sqrt{\\frac{2\\gamma_{s}}{\\Lambda_{22}}}$\nwhere $\\gamma_{s}$ is the surface energy and $\\Lambda_{22}$ is the component of the the Stroh energy tensor [101, 102]."}, {"title": "Agent design", "content": "We design AI agents using the state-of-the-art all-purpose LLM GPT-4 family models. The dynamic multi-agent collaboration is implemented in the AutoGen framework [103], an open-source ecosystem for agent-based AI modeling. In our multi-agent system, the user, admin, and executor agents are constructed using UserProxyAgent class from Autogen, and assistant and reviewer agents in the \"Knowledge retrieval\" tool are crated using RetrieveAssistantAgent class. Moreover, the \u201cPlot analyzer\" agent is created via the MultimodelConversableAgent class. The remaining agents are created via AssistantAgent class from Autogen; and the group chat manager is created using GroupChatManager class. Each agent is assigned a role through a profile description, included as system_message at their creation. Details of the implementation can be identified in the source code shared via GitHub."}, {"title": "Function and tool design", "content": "All the tools implemented in this work are defined as Python functions. Each function is characterized by a name, a description, and input properties with a description."}, {"title": "Conflict of interest", "content": "The author declares no conflict of interest."}, {"title": "Data and code availability", "content": "All data and codes are available on GitHub at https://github.com/lamm-mit/AtomAgents. Alternatively, they will be provided by the corresponding author based on reasonable request."}]}