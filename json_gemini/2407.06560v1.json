{"title": "TCKIN: A Novel Integrated Network Model for Predicting Mortality Risk in Sepsis Patients", "authors": ["Fanglin Dong"], "abstract": "Sepsis poses a major global health threat, accounting for millions of deaths annually and significant economic costs. Accurate predictions of mortality risk in sepsis patients facilitate the efficient allocation of medical resources, thereby enhancing patient survival and quality of life. Through precise risk assessments, healthcare facilities can effectively distribute intensive care beds, medical equipment, and staff, ensuring high-risk patients receive timely and appropriate care. Early identification and intervention significantly decrease mortality rates and improve patient outcomes. Current methods typically utilize only one type of data\u2014either constant, temporal, or ICD codes. This study introduces the Time-Constant KAN Integrated Network (TCKIN), an innovative model that enhances the accuracy of sepsis mortality risk pre- dictions by integrating both temporal and constant data from electronic health records and ICD codes. Validated against the MIMIC-III and MIMIC- IV datasets, TCKIN surpasses existing machine learning and deep learning methods in accuracy, sensitivity, and specificity. Notably, TCKIN achieved AUCs of 87.76% and 88.07%, demonstrating superior capability in identify- ing high-risk patients. Additionally, TCKIN effectively combats the preva- lent issue of data imbalance in clinical settings, improving the detection of patients at elevated risk of mortality and facilitating timely interventions. These results confirm the model's effectiveness and its potential to transform patient management and treatment optimization in clinical practice. With this advanced risk assessment tool, healthcare providers can devise more tai- lored treatment plans, optimize resource utilization, and ultimately enhance survival rates and quality of life for sepsis patients.", "sections": [{"title": "Introduction", "content": "Sepsis, a systemic inflammatory response syndrome triggered by infection [1], can lead to multi-organ dysfunction or failure in severe cases [2]. As a significant global health challenge, sepsis affects millions annually, resulting in substantial medical costs and high mortality rates [3]. According to the World Health Organization, approximately 49 million cases occur worldwide each year, with about 11 million fatalities [4]. The economic impact is pro- found; for instance, in the United States, the annual cost of treating sepsis exceeds $24 billion, representing one of the healthcare system's largest expen- ditures [5]. Given the high mortality associated with sepsis [6] and its eco- nomic repercussions, accurately predicting mortality risk in sepsis patients is crucial. This enables more rational allocation of medical resources, enhancing patient survival rates and quality of life [7]. Through precise mortality risk assessments, medical institutions can more effectively distribute resources like intensive care beds and medical staff, ensuring high-risk patients receive timely care. Accurate predictions also allow for the development of person- alized treatment plans, optimizing treatment strategies to improve efficacy, reduce hospital stays, and lower costs [8]. Most critically, early identification and intervention for high-risk patients can significantly decrease mortality rates, thereby improving outcomes and quality of life.\nWith the advent of Electronic Health Records (EHR) systems [9], there has been a significant increase in the availability of medical data, enriching the resources for mortality risk prediction in sepsis. Data typically used for this purpose includes physiological metrics from the prior 24 hours, labora- tory results, and demographic and diagnostic information, which are pivotal for developing high-accuracy predictive models.\nIn current clinical practice, several scoring tools are widely utilized to assess sepsis severity, including the Sequential Organ Failure Assessment (SOFA) [10], Acute Physiology and Chronic Health Evaluation II (APACHE II) [11], Simplified Acute Physiology Score II (SAPS II) [12], and the Sepsis Severity Score (SSS) [13]. However, these tools exhibit notable limitations. They are predominantly based on specific populations and clinical settings from their time of development, leading to reduced predictive accuracy as de- mographics and practices evolve. Studies indicate that SOFA, APACHE II, and SAPS II are less effective in predicting ICU sepsis patient mortality due to their reliance on a limited set of static physiological parameters, which do not fully capture dynamic patient condition changes [14, 15]. Furthermore,"}, {"title": "", "content": "although the Sepsis Severity Score is tailored for in-hospital sepsis severity, it similarly shows weak predictive performance for in-hospital mortality [16].\nAdvancements in machine learning have spurred the use of its algorithms to enhance sepsis mortality predictions. For example, Taylor et al. employed a local big data-driven Random Forest model [17], using over 500 clinical variables to predict emergency department sepsis patient mortality, yielding results superior to those of Logistic Regression [18]. Continuing this trend, Zhang et al. developed a LASSO score using the MIMIC-III dataset [19], although it still requires external validation. Additionally, Kong et al. cre- ated four machine learning models, including LASSO [20], Random Forest [17], Gradient Boosting Machine [21], and Logistic Regression, using 86 fea- tures from the MIMIC-III dataset to predict in-hospital mortality in ICU sepsis patients. These models, except for Random Forest\u2014which underesti- mated high-risk patient mortality\u2014showed good calibration, in contrast to the poor calibration of the SAPS II score [22]. However, traditional machine learning techniques face challenges with handling extensive feature sets and time-series data, potentially leading to overfitting and limited effectiveness in sepsis mortality prediction [23, 24].\nDeep learning, a pivotal branch of machine learning, has significantly advanced the medical field recently. Its applications span medical image analysis [25], genetic data analysis [26], and disease risk prediction[27]. Deep learning surpasses traditional methods with its robust feature extraction and pattern recognition capabilities, enabling the automatic learning of useful features from extensive, complex datasets. Additionally, deep learning ef- fectively processes time-series data, thus enhancing its predictive accuracy in such environments. In a study on 30-day mortality rates for sepsis pa- tients, Su et al. employed a basic two-layer multilayer perceptron (MLP) model using only 11 static data features[28]. Although this method achieved some predictive success, it failed to incorporate patients' temporal data, which restricted its ability to detect time-dependent changes. Moreover, the model's simplicity likely limited its capacity to uncover complex data patterns, thereby capping further improvements in predictive performance.\nIn subsequent research, Cheng et al. utilized three machine learning mod- els\u2014Convolutional Neural Network (CNN)[29], Long Short-Term Memory (LSTM) [30], and Random Forest (RF) to analyze sepsis patients' tem- poral vital signs data, predicting in-hospital mortality[31]. However, their study was confined to a minimal set of seven features, which might have overlooked more complex variables influencing patient outcomes. Similarly,"}, {"title": "", "content": "Gong et al. developed a Temporal Convolutional Networks (TCN)-based model that integrated time-series data with four vital signs to predict near- term mortality risks in sepsis patients, yet it also limited its analysis to a few variables [32]. Remarkably, none of these studies considered the impact of patients' diagnostic ICD codes on mortality risk predictions, which could be a critical oversight.\nIn this study, we introduce the Temporal-Constant KAN Integrated Net- work (TCKIN) designed to predict the mortality risk of ICU sepsis patients. Figure 1 illustrates the main flowchart of the TCKIN model. Our principal contributions are outlined as follows:\n1. Integration of Diagnostic ICD Codes and CCS Medical Ontology: We have integrated the patient's diagnostic ICD codes with the Clinical Classifications Software (CCS) medical ontology into our model using graph networks. This integration significantly enhances the model's predictive accuracy by fully leveraging these coding systems.\n2. Fusion of Temporal and Constant Data: Our approach merges tem- poral data handling via the GRU-D[33] with constant data analysis performed by the KAN network[34]. The KAN network extracts crit- ical information from constant data, which is then combined with the"}, {"title": "", "content": "temporal data processed by GRU-D. This combined data, along with ICD and CCS codes, undergoes further processing through the KAN network to notably improve the model's predictive capabilities.\n3. Superior Model Performance: Experimental results demonstrate that the TCKIN substantially surpasses existing methods in prediction accu- racy and robustness. By integrating multiple data sources and process- ing techniques, TCKIN achieves exceptional performance across various evaluation metrics, thereby offering more reliable support for clinical decision-making."}, {"title": "Methods", "content": "2.1. Datasets\nThis study utilizes the MIMIC-III[19] and MIMIC-IV[35] datasets, both derived from the Intensive Care Units (ICU) at Beth Israel Deaconess Med- ical Center, USA. These datasets were collaboratively created by the Mas- sachusetts Institute of Technology's Computer Science and Artificial Intelli- gence Laboratory (MIT CSAIL) and the medical center. MIMIC-III, publicly available, encompasses detailed health records of approximately 60,000 pa- tients from 2001 to 2012, encompassing patient demographics, vital signs, laboratory test results, medication records, nursing notes, radiology reports, and discharge summaries. This database supports clinical research and the development of machine learning and artificial intelligence algorithms. MIMIC- IV, an enhancement of MIMIC-III, includes ICU data from 2012 to 2019, featuring improved data quality and expanded clinical data types over a longer record span. These enhancements facilitate complex medical research and sophisticated data analysis. This study leverages these rich datasets to deeply analyze diagnostic information, temporal changes in vital signs, and other pertinent clinical features of sepsis patients. Authorization to use the MIMIC databases was obtained, and data extraction was conducted. Eth- ical approval was granted by the Institutional Review Board of Beth Israel Deaconess Medical Center. Compliance with HIPAA regulations ensured de-identification of all Protected Health Information (PHI), eliminating the need for patient consent and maintaining strict ethical and privacy standards to protect patient privacy effectively.\n2.2. Data Preprocessing\nBased on the Sepsis-3 definition[36], we selected sepsis patients from the MIMIC-III and MIMIC-IV datasets who had a SOFA score of 2 or higher, as illustrated in Figure 2. Initially, we excluded patients under the age of 16 and those with corrupted data. We also eliminated patients with suspected infections occurring more than 24 hours before or after ICU admission, due to the ambiguous timing of their infection diagnoses, which could compro- mise the study's accuracy. Furthermore, we excluded patients with ICU stays shorter than 24 hours, as their incomplete clinical data insufficiently support the model. Additionally, patients who underwent cardiac, thoracic, or vascu- lar surgery were omitted because their unique surgical treatments and care requirements could adversely affect the model's generalizability. For sepsis patients with multiple hospital admissions, we used data from their initial admission."}, {"title": "", "content": "along with diagnostic ICD coding information, from the MIMIC-III and MIMIC-IV databases. Constant data includes basic demographic informa- tion like gender, age, and weight, which provides essential background on the patients. Temporal data encompasses detailed physiological signs and labo- ratory test results recorded during the ICU stay, such as temperature, heart rate, blood pressure, respiratory rate, hemoglobin levels, and white blood cell count, reflecting the immediate health status and condition changes of the patients. Additionally, diagnostic ICD codes were transformed into vector representations via graph embedding methods, allowing for a comprehen- sive integration of patients' constant characteristics, temporal features, and diagnostic information. Table 1 provides a detailed listing of the features extracted from the temporal and constant data.\nIn preprocessing the constant data extracted from patients, we imple- mented specific strategies for different types of data missingness. For contin- uous variables such as age and weight, missing values were filled with zero to maintain data completeness and consistency without introducing bias, ensur- ing that the model's training is unaffected by missing values. For categorical variables such as gender and race, we employed one-hot encoding, which con- verts these variables into binary vectors where each category corresponds to a unique dimension. This approach prevents the imposition of implicit ordinal"}, {"title": "", "content": "relationships among categories, thereby avoiding misleading influences on the model's training. In processing the temporal data, we adhered to strict time window and interval strategies: temporal data were extracted within the 24 hours prior to ICU admission and sampled at 1-hour intervals. For each interval, single measurement values were used directly, while multiple mea- surements were averaged to represent the feature's level during that hour. In cases where no measurements were recorded within an interval, values were designated as missing. Figure 3 illustrates the processing of temporal data. We will address the treatment of missing values in temporal data during subsequent model processing.\nTo enhance the diagnostic information of patients, we implemented the methodology of Li et al. [37], converting extracted patient visit ICD-9 code sequences into corresponding Clinical Classifications Software (CCS) code sequences. The CCS system groups ICD-9 codes to simplify and summa- rize complex diagnostic information, facilitating more efficient and intuitive analysis. Table 2 presents data from the multi-level ICD-9-CM CCS. \u03a4\u03bf construct a comprehensive diagnostic information graph, we built a medical concept graph, G=(V,E), on the MIMIC-III and MIMIC-IV datasets, fol- lowing the method of Li et al. In this graph, V represents the nodes, which include ICD diagnostic codes and CCS medical ontology, while E denotes the edges that connect these nodes. This setup forms a directed tree-like"}, {"title": "", "content": "structure that visually represents the hierarchical relationships between ICD codes and CCS groupings. For processing ICD and CCS codes, we applied Li et al.'s method using a two-layer graph convolutional network (GCN). Table 3 displays details of the medical concept graph. The layers of the GCN are computed as follows:\n$$H^{(l+1)} = \\sigma \\left(\\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} H^{(l)} W^{(l)}\\right)$$\nwhere $H^{(l)}$ is the node feature matrix at layer $L$, $H^{(0)}$ the initial feature representation, $A$ the adjacency matrix with self-connections, $\\tilde{D}$ the degree matrix, $W^{(l)}$ the trainable weight matrix, and $\\sigma$ the activation function. This two-layer GCN effectively embeds ICD and CCS codes into vector space.\n2.3. The Architecture of TCKIN\nIn our study, the proposed network architecture comprises three primary components. Initially, temporal data are processed via the GRU-D (Gated Recurrent Unit with Decay) model, which generates hidden representations"}, {"title": "", "content": "of these data. The second component utilizes an attention mechanism to an- alyze the patient's ICD diagnostic codes and CCS codes, capturing complex relationships and semantic information, thereby enriching diagnostic feature representations. The third component processes constant data through the Kolmogorov-Arnold Networks (KAN). This network efficiently leverages con- stant feature information to extract high-level features via a multi-layer neu- ral network. Subsequently, the hidden features from these three components are concatenated to form an integrated feature vector. This vector is fur- ther processed through a final KAN network to predict the patient's sepsis mortality risk.\nIn our methodology, temporal data D is defined as\n$$D = (D_1, D_2, . . . , D_t, ..., D_T) \\in \\mathbb{R}^{T\\times N}$$\nwhere T denotes a 24-hour time interval, and N represents the number of features. To address missing values, we introduce a mask matrix I and time intervals \u2206, facilitating effective management of these gaps. The mask $I \\in \\mathbb{R}^{T\\times N}$ indicates data presence, where a value of 0 shows absence, and 1 shows presence of data at a time step. The time interval $\\Delta \\in \\mathbb{R}$ measures the time elapsed since the last observed data point, calculated by:\n$$\\Delta_t^n = \\begin{cases}\n1 + \\Delta_{t-1}^n, & \\text{if } t > 1 \\text{ and } I_{t-1}^n = 0, \\\\\n1, & \\text{if } t > 1 \\text{ and } I_{t-1}^n = 1, \\\\\n0, & \\text{if } t = 1.\n\\end{cases}$$\nThis data is processed through the GRU-D (Gated Recurrent Unit with Decay) model. The GRU-D network effectively manages missing values by utilizing the mask I and time intervals \u2206. The decay mechanism dynamically adjusts imputation values based on these intervals, thereby mitigating the impact of missing data during state updates. Through this approach, the GRU-D model generates reliable hidden feature representations $h_t$. Figure 4 illustrates the GRU-D network, detailing the operations as follows:\nDecay factor calculation:\n$$\\gamma_t = \\exp(-\\max(0, W_\\Delta \\Delta_t + b_\\Delta))$$\nInput gate:\n$$Z_t = \\sigma (W_z(D_t \\odot I_t) + U_z(\\gamma_t \\odot h_{t-1}) + b_z)$$"}, {"title": "", "content": "Reset gate:\n$$r_t = \\sigma (W_r(D_t \\odot I_t) + U_r(\\gamma_t \\odot h_{t-1}) + b_r)$$\nCandidate hidden state:\n$$\\tilde{h_t} = \\tanh (W_h(D_t \\odot I_t) + U_h(r_t \\odot (\\gamma_t \\odot h_{t-1})) + b_h)$$\nHidden state update:\n$$h_t = (1 \u2013 Z_t) \\odot h_{t-1} + Z_t \\odot \\tilde{h_t}$$\nImputation of missing values:\n$$\\hat{D_t}^n = I_t^n D_t^n \u2013 (1 \u2013 I_t^n) \\gamma_t B_i D_i + (1 - \\gamma_t B_i) \\bar{D}^n$$\nwhere $D_t$ is the input feature vector at time step t, I is the mask matrix, \u2206 is the time interval matrix, $\\gamma_t$ is the decay factor dynamically adjusted based on the time interval $\\Delta_t$, $\\sigma$ is the sigmoid activation function, W, U, and b are the weight matrices and bias terms."}, {"title": "", "content": "In the analysis of the patient's diagnostic ICD code sequence and the cor- responding medical ontology CCS sequence, we employ an attention mech- anism to elucidate the complex relationships and semantic nuances between the codes. This mechanism calculates the similarity between codes to de- termine their relative importance and assigns attention weights accordingly, thereby accentuating crucial diagnostic features. We embed the ICD and CCS code sequences, as detailed in section 2.2, into a low-dimensional vector space. Subsequently, we apply the attention mechanism using the following equations:\n$$h_{icd} = ScaleDotProductAttention(Q, K, V) = softmax(\\frac{QK^T}{\\sqrt{d_k}}) V$$\nwhere $X_{icd}$ serves as the query, while $X_{ccs}$ functions as both the key and value. The terms $X_{icd}$ and $X_{ccs}$ denote the ICD and CCS code features, respectively, which are extracted using the Graph Convolutional Network (GCN) as outlined in section 2.2.\nWe process constant data using the Kolmogorov-Arnold Networks (KAN), which includes basic demographic characteristics of patients such as gender, age, and weight. The KAN network's unique architecture offers greater ac- curacy and interpretability compared to traditional multilayer perceptrons (MLPs) when handling high-dimensional, multivariate constant data. This network effectively approximates complex functional relationships by em- ploying learnable B-spline activation functions at the edges, enhancing flex- ibility and adaptability to different data features without significant compu- tational overhead. Unlike traditional MLPs that use fixed activation func- tions, KAN's design enables precise approximation of multivariate functions and adaptability through learnable activation functions positioned on each layer's edges. Figure 5 illustrates the KAN network architecture. Each layer in KAN is expressed as a function matrix: \u03a6 = {$\u03c6_{q,p}$}, p = 1, 2, ..., Nin, q = 1, 2, ..., Nout, where $\u03c6_{q,p}$ includes trainable parameters. The operational flow within the network is as follows:\nPre-activation:\n$$x_{l,j,i} = \\phi_{l,j,i}(x_{l,i})$$\nwhere $x_{l,j,i}$ denotes the pre-activation value from input node i to output node jin layer l.\nPost-activation:\n$$x_{l,j,i} = \\phi_{l,j,i}(x_{l,i})$$"}, {"title": "", "content": "where $x_{l,j,i}$ represents the post-activation value from input node i to output node j in layer l, after being processed by the function $\\phi_{i,j,i}$.\nNode Activation: The activation value at node (l + 1, j) is the sum of all input activation values:\n$$x_{l+1,j} = \\sum_{i=1}^{n_l} x_{l,j,i} = \\sum_{i=1}^{n_l} \\phi_{l,j,i}(x_{l,i})$$\nIn matrix form, this is represented as $x_{l+1,j} = \\Phi_l \\cdot x_l$, where $\u03a6_l$ is the function matrix of layer l in the KAN. The KAN network in this paper is a combination of two layers: $KAN(x) = (\u03a6_1 \\circ \u03a6_0)x$. Expanding, this can be written as:\n$$h_s = KAN(x) = \\sum_{l_1=1}^{n_1} \\bigg(\\sum_{l_0=1}^{n_0} \\phi_{1,l_1,l_0} (x_{l_0}) \\bigg)$$\nwhere $n_1$ and $n_0$ represent the number of nodes in each layer. Finally, the constant data produces hidden features $h_s$ through the KAN network.\nFinally, we concatenate the temporal features $h_p$, constant features $h_s$, and diagnostic features $h_{icd}$ to create an integrated feature vector. This vector is then used to generate the patient's sepsis mortality risk prediction via a single-layer Kolmogorov-Arnold Network (KAN).\n2.4. Implementation\nIn our research, we implemented and trained our model using the Tensor- Flow framework. We utilized the Adam optimizer to update model parame- ters and employed a learning rate decay strategy to dynamically adjust the learning rate, enhancing the model's convergence stability. To address the significant imbalance between positive and negative samples, we applied over- sampling techniques to maintain a consistent ratio of these samples across training, validation, and test sets. This method effectively mitigated model bias toward the majority class, thereby enhancing its generalization capabili- ties on imbalanced datasets. Moreover, we adopted five-fold cross-validation to validate the model's stability and generalizability. By dividing the dataset into five mutually exclusive subsets, using one for validation and the remain- ing four for training\u2014and repeating this process five times\u2014we ensured the model's consistent performance across various data splits. To prevent over- fitting, we incorporated Dropout layers and monitored the validation set per- formance using early stopping techniques, halting training when no further reduction in validation loss was observed."}, {"title": "Results", "content": "3.1. Performance Metrics\nIn this section, we describe the metrics employed to assess the TCKIN model's performance. These metrics are vital for gauging the model's accu- racy in predicting mortality risk among ICU sepsis patients. The principal evaluation metrics include sensitivity, specificity, area under the receiver op- erating characteristic curve (AUROC), area under the precision-recall curve (AUPRC), and the Brier Score (BS). Each metric offers a unique perspec- tive on the model's performance, enabling a thorough analysis. The specific formulas for these metrics are as follows:\n$$Sensitivity = \\frac{TP}{TP+FN}$$\n$$Specificity = \\frac{TN}{TN+FP}$$"}, {"title": "", "content": "$$Precision = \\frac{TP}{TP+FP}$$\n$$BS = \\frac{1}{N} \\sum_{i=1}^{N}(f_i - o_i)^2$$\nwhere TP is true positive, FN is false negative, TN is true negative, FP is false positive, N is the number of samples, $f_i$ is the predicted probability for the ith sample, and $o_i$ is the actual label (0 or 1) for the ith sample.\n3.2. Model Performance\nWe evaluated the TCKIN model's performance on the MIMIC-III and MIMIC-IV datasets by comparing it with seven established baseline mod- els: Xgboost [38], SVM, Random Forest (RF)[39], LGBM[22], LSTM[31], IseeU[40], and and Che et al.'s model GRU-D[33]. This comparison across various metrics such as sensitivity, specificity, AUROC, AUPRC, and Brier score allowed us to thoroughly assess the strengths and weaknesses of each model. Figure 6 illustrates the comparative performance, demonstrating that the TCKIN model generally outperforms the baseline models. Notably, on the MIMIC-IV dataset, the TCKIN model achieved AUROC and AUPRC values of 0.8807 and 0.5470, respectively, significantly surpassing its com- petitors. This indicates its superior accuracy and stability in distinguishing between positive and negative cases and handling imbalanced datasets. Ad- ditionally, the TCKIN model's balanced performance in sensitivity (0.7875) and specificity (0.8153) underscores its effectiveness in identifying patients at different levels of risk. A lower Brier score of 0.0696 reflects the model's precision in probability predictions. Figure 7, showing the ROC curves, fur- ther highlights the TCKIN model's enhanced ability to differentiate between outcomes, with its curve closer to the top-left corner, symbolizing higher prediction accuracy across various thresholds.\nTo further evaluate the robustness of the TCKIN model, we conducted pa- rameter sensitivity experiments focusing on the learning rate (LR) and batch size, two crucial hyperparameters that influence model performance. We sys- tematically varied these parameters, setting the learning rate at 0.0001, 0.001, 0.01, and 0.1, and the batch size at 16, 32, 64, and 128, to observe their effects on model performance under various combinations. Figure 8 illustrates these performance changes through a three-dimensional graph that plots AUROC values against variations in learning rate and batch size. The results indicate that the TCKIN model achieves optimal performance with a learning rate"}, {"title": "", "content": "of approximately 0.001 and a batch size of 64. Notably, excessively high or low learning rates can degrade performance, while very small batch sizes can introduce instability during training, and overly large batch sizes may reduce training speed and impair generalization.\n3.3. Ablation Study\nTo further validate the effectiveness and importance of the components of the TCKIN model, we conducted ablation experiments. These experi- ments involved removing or replacing key modules to assess their impact on the overall model performance. In the first ablation study, we substituted the GRU-D (Gated Recurrent Unit with Decay) module, which is tailored to manage irregular time series data more effectively, with a standard GRU module. This change allowed us to directly compare the performance en- hancements offered by GRU-D. Results, as shown in Table 4, indicate a"}, {"title": "Discussion", "content": "In this study, we conducted an in-depth analysis of various data features to determine their significance in a model predicting the mortality risk of sepsis patients. Our comprehensive evaluation revealed several key features that significantly influence the model's predictive accuracy.\nFor the temporal data, Figure 9 highlights the top ten features with the highest feature weights and their contributions, including pH value, alanine aminotransferase, red blood cell count, monocyte count, urine output, pro- thrombin time, calcium levels, bilirubin, anion gap, and mean corpuscular hemoglobin concentration. These indicators not only reflect the patient's current physiological state but also detect subtle shifts in their condition, enhancing the accuracy of mortality predictions. For instance, variations in"}, {"title": "", "content": "pH value can signal shifts in acid-base balance, alterations in urine output may indicate changes in renal function, and levels of alanine aminotransferase and bilirubin provide insights into liver health. Additional data such as red blood cell and monocyte counts, along with mean corpuscular hemoglobin concentration, are crucial for assessing blood health and immune response, while prothrombin time and anion gap offer insights into coagulation and metabolic status.\nFigure 10 presents the top five features by feature weight within the constant data, including age, race, weight, and type of admission. These attributes provide essential health and demographic information about the patient. Notably, age is a crucial factor because older patients often have a higher risk of mortality. Additionally, weight serves as a significant health indicator that can affect the severity of diseases and the efficacy of treat- ments, thereby influencing the overall prognosis. The nature of admission (emergency, urgent, or elective) informs the urgency of the patient's condi- tion upon hospitalization.\nOur analysis of patient ICD codes revealed that certain codes, especially those related to severe conditions like diabetes and specific malignancies, are"}, {"title": "", "content": "strongly associated with increased mortality risk. Codes for secondary di- abetes, certain skin disorders, diseases of the middle ear and mastoid, and malignant neoplasms of the retina, for instance, highlight underlying severe health issues that can complicate the patient's recovery process. Addition- ally, ICD codes for benign tumors of the colon, malignant neoplasms of the cervix, spirochaetal jaundice, neuroendocrine tumors, trigeminal neuralgia, and Pneumocystis jirovecii pneumonia were also identified as significantly influencing mortality rates, underscoring their importance in patient man- agement and treatment focus.\nDespite the achievements of this study, it has several limitations. First, the datasets used, primarily MIMIC-III and MIMIC-IV, originate from a sin- gle medical center and may not adequately represent patient conditions in other regions or healthcare facilities. Second, while the model's predictive performance surpasses existing methods, opportunities for enhancement re- main, particularly in processing specific types of patient data. For instance, certain features may exhibit variable performance across different popula- tions, necessitating further validation of the model's applicability. Addition- ally, the feature selection and preprocessing methods employed may not cap-"}, {"title": "Conclusion", "content": "The Temporal-Constant KAN Integrated Network (TCKIN) model intro- duced in this study has demonstrated considerable superiority in predicting the mortality risk of ICU sepsis patients. By integrating constant and tem- poral data along with patient diagnostic ICD codes and medical ontology CCS codes, the TCKIN model achieves greater accuracy in mortality risk prediction. Experimental results show that the TCKIN model surpasses ex- isting models on evaluation metrics such as AUROC, AUPRC, sensitivity, and specificity, underscoring its effectiveness in managing complex medical data and enhancing predictive precision. Furthermore, these results high- light the substantial benefits of the GRU-D and KAN modules in processing irregular temporal data and capturing intricate features.\nThis study not only confirms the effectiveness of the TCKIN model in integrating multi-source heterogeneous data but also underscores the signif- icance of key features in prediction accuracy. These insights provide strong support for future clinical decision-making, facilitating the early identifica- tion and timely intervention for high-risk patients, thereby potentially reduc- ing sepsis mortality rates and improving outcomes. The findings also serve as valuable references for ongoing research. By continuing to refine and expand the model, its applicability and accuracy across various clinical environments and patient demographics can be further improved. Future studies could in- clude additional types of feature data, such as genetic and imaging data, to provide a more comprehensive assessment of patients' health conditions and enhance the model's predictive capabilities."}]}