{"title": "A COMPREHENSIVE REVIEW OF RECOMMENDER SYSTEMS: TRANSITIONING FROM THEORY TO PRACTICE", "authors": ["Shaina Raza", "Mizanur Rahman", "Safiullah Kamawal", "Armin Toroghi", "Ananya Raval", "Farshad Navah", "Amirmohammad Kazemeini"], "abstract": "Recommender Systems (RS) play an integral role in enhancing user experiences by providing personalized item suggestions. This survey reviews the progress in RS inclusively from 2017 to 2024, effectively connecting theoretical advances with practical applications. We explore the development from traditional RS techniques like content-based and collaborative filtering to advanced methods involving deep learning, graph-based models, reinforcement learning, and large language models. We also discuss specialized systems such as context-aware, review-based, and fairness-aware RS. The primary goal of this survey is to bridge theory with practice. It addresses challenges across various sectors, including e-commerce, healthcare, and finance, emphasizing the need for scalable, real-time, and trustworthy solutions. Through this survey, we promote stronger partnerships between academic research and industry practices. The insights offered by this survey aim to guide industry professionals in optimizing RS deployment and to inspire future research directions, especially in addressing emerging technological and societal trends.", "sections": [{"title": "1 Introduction", "content": "Recommender Systems (RS) are a type of information filtering system designed to predict and suggest items or content-such as products, movies, music, or articles-that a user might be interested in. These predictions are based on the user's past behavior, preferences, or the behavior of similar users [1]. The main goal of any RS is to enhance user experience, increase engagement, and facilitate decision-making processes [2]. This is applicable across various domains, including e-commerce, entertainment, and social media. RS hold significant roles in both theoretical research (academics) and practical applications (industry).\nThe importance of RS has grown exponentially with the advent of big data and advancements in artificial intelligence [3, 4]. As users interact with digital platforms, they generate vast amounts of data that can be leveraged to make precise"}, {"title": "2 Background", "content": "Recommender systems (RS) are algorithms designed to suggest items\u2014such as books, movies, products, or content-to users based on their preferences. The primary goal of RS is to enhance user experience by personalizing content [3]. At its core, an RS combines user and item profiles with a filtering mechanism to align user preferences with suitable items [13]. User profiles gather data such as demographics and browsing history, while item profiles detail features like genres. Both explicit feedback (e.g. ratings) and implicit feedback (e.g. browsing actions) refine these recommendations."}, {"title": "2.1 Historical Context", "content": "One of the pioneering efforts for RS is from Elen Rich in 1979 [67] to suggest books based on user preferences categorized into \"stereotypes\". Following this, Jussi Karlgren conceptualized the \"digital bookshelf\" in 1990 [68], an idea later expanded by researchers at SICS, MIT, and Bellcore, with notable contributions from Pattie Maes, Will Hill, and Paul Resnick, whose GroupLens project [69] received the 2010 ACM Software Systems Award. Later, Adomavicius [3], Herlocker [70], and Beel [71] provided foundational theory on RS.\nTraditional RS methods can be categorized into collaborative filtering, content-based filtering, and hybrid approaches, aiming to improve user experience [13]. Collaborative filtering (CF) [70] is based on the idea that users with similar preferences will likely have similar tastes in the future. CF recommends items by finding a neighborhood of similar users or items. CF can recommend items without needing much content analysis, however, it normally faces challenges like cold starts, scalability, and sparsity [34] . Content-based filtering (CBF) [72] recommends items based on a user past preferences and item characteristics, using techniques like Term Frequency - Inverse Document Frequency (TF-IDF), cosine similarity, and neural networks for item representation. However, it may struggle with recommending new or unseen items. Hybrid RS [36] combine the strengths of both approaches, offering more accurate and personalized recommendations by integrating diverse methodologies."}, {"title": "2.2 Current State of Practice and Theory in Recommender Systems", "content": "Academia focuses on the theory, methods, and algorithms in RS, while the industry emphasizes practical applications, scalability, and direct business impacts. This section explores the distinct challenges faced by these two sectors."}, {"title": "Theoretical Research on Recommender Systems", "content": "Theoretical research on RS is commonly initiated by academics through the development of new algorithms, models, and evaluation metrics. However, academic researchers face challenges in accessing diverse and comprehensive datasets due to privacy concerns, proprietary restrictions, and financial barriers. Additionally, data quality issues such as biases, inaccuracies, and outdated information limit the development and testing of RS in varied contexts.\nThe drive for high accuracy in research models can often lead to overfitting, which makes them unusable for real-world applications. Such a focus may neglect crucial aspects like diversity, novelty, and user satisfaction. Additionally, solutions from academia are frequently not easily adaptable in industry settings due to their reliance on data-intensive algorithms, complexity, and a disconnect in keeping developers updated."}, {"title": "Practices in Recommender Systems", "content": "The industry faces several challenges in deploying RS, particularly concerning scalability as user bases and catalog sizes expand. Adapting to constantly evolving user preferences and content availability presents ongoing difficulties. Ensuring the diversity and fairness of recommendations is crucial to avoid biases. Additionally, integrating real-time data and maintaining high performance under heavy loads are significant challenges. Balancing personalization with privacy concerns requires careful handling of user data to build trust and comply with regulations.\nBoth theory and practice emphasize the importance of high-quality (accurate, relevant, reliable, and representative of the intended use case or application) datasets for building RS. Academic research often relies on high-quality data for benchmarking purposes, while the industry frequently requires such data to enhance user experience and system effectiveness.\nTheoretically, RS algorithms are quite advanced now, featuring layers of deep neural networks and the latest language model complexities. In practice, however, these models are not immediately applicable to real-world use cases. Industry sectors, generally running a set of standard models, require significant adaptations to implement these advanced algorithms effectively\nIn this survey, we examine the theoretical and practical aspects of RS, with the goal to facilitate a smooth transition from research to real-world application."}, {"title": "3 Literature Review Methodology", "content": "To compile a comprehensive and relevant list of papers for our review, we conducted a systematic literature review, adhering to established methodology principles [74]. Our search query and extraction methods are detailed below."}, {"title": "Research Questions", "content": "1. How have RS algorithms evolved theoretically over the years?\n2. What strategies can be utilized to apply theoretical advancements in RS to practical applications?"}, {"title": "Databases Searched", "content": "For selecting studies, we gathered articles published inclusively from January 2017 through April 2024. This timeframe was chosen because much of the evolution in RS is linked to deep learning algorithms, also highlighted in the RecSys workshop in 2017 [75]. We conducted our literature search across multiple academic databases and digital libraries renowned for their extensive collections of RS literature, including IEEE Xplore, ACM Digital Library, PubMed, ScienceDirect, JMLR, and Wiley. To refine the search results, we applied specific inclusion and"}, {"title": "Search Query", "content": "Our search strategy aimed to find literature across various aspects of RS, including types, algorithms, evaluation, application, user interaction, and data quality. The search query used was:\n(\"recommender systems\" OR \"recommendation systems\" OR \"RS\" OR \"RecSys\") AND (\"content-based filtering\" OR \"collaborative filtering\" OR \"hybrid recommender systems\" OR \"context-aware recommender systems\" OR \"knowledge-based systems\" OR \"social recommender systems\") AND (\"matrix factorization\" OR \"deep learning\" OR \"convolutional neural networks\" OR \"recurrent neural networks\" OR \"reinforcement learning\" OR \"autoencoders\" OR \"neural collaborative filtering\" OR \"graph neural networks\") AND (\"precision\" OR \"recall\" OR \"F1 score\" OR \"RMSE\" OR \"MAE\" OR \"hit rate\" OR \"novelty\" OR \"diversity\" OR \"serendipity\" OR \"user satisfaction\") AND (\"e-commerce\" OR \"media streaming\" OR \"social media\" OR \"education\" OR \"healthcare\" OR \"tourism\" OR \"personalized news\" OR \"job recommenders\") AND (\"user interface\" OR \"user experience\" OR \"usability\" OR \"interaction design\" OR \"user engagement\" OR \"user feedback\" OR \"user profiling\") AND (\"explicit feedback\" OR \"implicit feedback\" OR \"data sparsity\" OR \"cold start problem\" OR \"data quality\" OR \"user-generated content\") AND (\"privacy\" OR \"data security\" OR \"ethical algorithms\" OR \"bias and fairness\" OR \"transparency\" OR \"recommendation explainability\") AND (\"tech industry\" OR \"startup case studies\" OR \"market analysis\" OR \"business models\" OR \"return on investment\" OR \"user retention\") AND (\"transformer models\" OR \"BERT\" OR \"GPT\" OR \"natural language understanding\" OR \"language generation\" OR \"sentiment analysis\" OR \"text embeddings\") AND (\"user personalization\" OR \"adaptive systems\" OR \"customization techniques\" OR \"user-adaptive content\" OR \"dynamic personalization\")"}, {"title": "Quality Assessment", "content": "We screened the articles using the inclusion and exclusion criteria detailed above in Table 2. If there was any uncertainty, the paper was briefly reviewed and then either included or excluded based on consensus from the two first co-authors. Selected papers underwent a thorough reading and were subject to a quality assessment involving a set of questions:\nA paper was considered for inclusion in our review if it received a \"yes\" or \"partially\" response to any of these questions:\n1. Does the article present a novel RS or methodology?\n2. Is the article related to a RS in an academic setting?\n3. Is the article related to a RS in an industry setting?\n4. Does the article propose a framework, tool or methodology?\n5. Has the research provided a concise statement or definition outlining its aims, goals, purposes, problems, motivations, objectives, and questions?\nThe results of the literature search were finalized and categorized by database, as shown inTable 3."}, {"title": "4 Challenges in Recommender Systems", "content": "RS play a vital role in personalizing user experiences and driving business value across various domains. Despite their widespread adoption, several challenges persist in their deployment and maintenance.\nE-commerce E-commerce platforms face the challenge of personalizing the shopping experience by recommending products in real-time, managing vast data, and adapting to changing consumer preferences [76]. Personalization must consider factors such as time, season, location, and the user's current situation. For example, recommendations for a new parent shopping for baby products will differ significantly from those for a book lover. Introducing diversity and novelty in recommendations is crucial to keep the experience fresh and engaging."}, {"title": "Entertainment", "content": "In the entertainment industry, the challenge lies in tracking users' preferences across genres while introducing them to new content to maintain engagement. Balancing personalization and novelty is essential. Music recommendations require frequent updates due to the shorter shelf life of songs compared to movies [77]. Conversely, movie recommendations are less dependent on frequent updates, as films typically have a longer shelf life. However, effective movie RS should still balance between promoting new releases and maintaining a selection of enduring favorites to satisfy a wide range of user preferences [78]."}, {"title": "News", "content": "The news industry must deliver personalized content promptly without overwhelming users. News preferences are highly dynamic, necessitating recommendations that adapt to rapid changes in interests and current events [59]. It is important to offer diverse viewpoints to prevent echo chambers, combat misinformation [79], and maintain user trust."}, {"title": "Tourism", "content": "Personalized booking recommendations in tourism must account for user preferences regarding destinations, travel dates, budgets, and accommodations [80]. Integrating factors such as past travel history, seasonal trends, and real-time availability is essential. Balancing immediate needs, like dining recommendations during travel, with advance bookings for stays and major attractions enhances the overall user experience."}, {"title": "Healthcare", "content": "Healthcare RS face issues like data privacy, security, and patient consent under regulations such as Health Insurance Portability and Accountability Act (HIPAA). Providers, patients, and administrators all require access to relevant information tailored to their roles, necessitating role-based solutions and robust processing capabilities to handle large volumes of heterogeneous data effectively [81]."}, {"title": "Finance", "content": "Financial RS need to navigate data privacy, security, and compliance with regulations like General Data Protection Regulation (GDPR) and Payment Card Industry Data Security Standard (PCI-DSS). Challenges include managing data quality, integrating diverse data sources, and providing personalized financial advice [19]. Ensuring the interpretability and transparency of recommendations is crucial for building trust and user confidence. Fairness of the recommendations is of utmost importance."}, {"title": "E-learning", "content": "E-learning RS face the task of addressing varied user needs, overcoming the cold start problem with new users, and handling data sparsity. Adapting to dynamic content and user behavior, ensuring contextual relevance, scalability, and employing suitable evaluation metrics to assess educational impact are fundamental challenges [82]."}, {"title": "Discussion", "content": "RS across various sectors face a set of common challenges despite their industry-specific characteristics. Generally, these systems struggle with balancing personalization and user privacy, managing data scalability, and ensuring the diversity and novelty of recommendations to keep users engaged. They must also address the cold-start problem, where insufficient user data can hinder the system's ability to make accurate recommendations. Additionally, dynamic user preferences require systems to continually adapt and learn from new data, posing challenges in real-time processing and algorithmic efficiency. Lastly, ensuring fairness and avoiding bias in recommendations is crucial, as these systems often influence user decisions and can perpetuate existing disparities if not carefully managed.\nIn the following sections, we explore the evolution of RS and how they address these challenges."}, {"title": "5 Foundational Recommender Systems", "content": "A RS can be mathematically represented as a function f that predicts the utility of an item i for a user u, denoted as $r_{ui}$, which estimates how much user u would prefer item i.[3] . This function is typically learned from historical data:\n$r_{ui} = f(u, i; \\Theta)$        (1)\nwhere $\\Theta$ represents the parameters of the model, learned from the data. In the context of RS, the term $r_{ui}$ represents a prediction of the rating or utility that a user would assign to an item This prediction is used for recommending items that are likely to be of interest to the user. A general framework of RS is illustrated in Figure 2. The lifecycle of a data-driven model within an RS starts with data acquisition, followed by storage and preparation. This leads to feature engineering, forming the basis of the data pipeline. The data pipeline feeds into the training pipeline, which includes model training and validation. Following training, the process involves candidate generation and ranking. This process is complemented by A/B testing, offline and/or online evaluation. The final stages include deployment and monitoring.\nBelow, we present an overview of foundational RS."}, {"title": "5.1 Foundational Recommender Systems", "content": "Foundational RS refers to the early models and techniques that established the core principles and methodologies in the field of recommendation engines. These systems primarily include collaborative filtering, content-based filtering, and hybrid approaches.\nContent-Based Filtering Content-based filtering (CBF) is a recommendation strategy that suggests items to a user based on the attributes of the items and a profile of the user's preferences, typically utilizing similarity measures to match user preferences with item attributes [83]. In CBF, the recommendation $r_{ui}$ is based on the features of items $\\phi(i)$ and a profile of the user's preferences $\\theta(u)$:\n$r_{ui} = \\theta(u)^T \\phi(i)$        (2)\n\u2022 $\\phi(i)$ represents the feature vector of the item.\n\u2022 $\\theta(u)$ represents the user preference vector.\nThe evolution of CBF recommendation models starts from traditional methods [83] like vector-space models, probabilistic models, and decision trees, relying on manual feature engineering and similarity calculations. Vector-space models compute item similarity through cosine similarity [84], probabilistic models estimate the likelihood of user preference with statistical analysis [85], and decision trees recommend items by categorizing them based on attributes [83]. These models laid the groundwork for personalized recommendations by leveraging explicit item features and user preferences.\nAlgorithmic advancements in computer science and ML methods led to a shift to sophisticated neural networks that allow automatic feature extraction and learning complex data patterns [86]. These neural network-based systems leverage deep learning to analyze user interactions and item features across different modalities, including textual (such as reviews [87], citations [88], and news [89]), streaming (like music [77]), and image data [90]. The overall goal of these advancements is to generate personalized recommendations by aligning user profiles with item characteristics.\nChallenges with CBF: In general, CBF faces challenges such as the cold-start problem, over-specialization (only suggesting items similar to those the user has already seen or liked), computational cost (which can increase quadratically or cubically with the number of users and items), and a lack of updates to user and item profiles.\nCollaborative Filtering Collaborative filtering (CF) is a technique used by RS to predict the preferences of a user based on the preferences of similar other users [34]. CF techniques are broadly divided into two main categories: memory-based and model-based methods. Memory-based CF makes recommendations using similarities between users or items directly from user ratings. It has further two types: user-based CF predicts a user ratings based on similar users' historical ratings [70], while item-based CF predicts ratings based on similar items [91]. Both methods face"}, {"title": "5.2 Can Foundational Recommender Systems address Practical Challenges?", "content": "Foundational RS, which include CF, CBF, and hybrid methods, form the core of many personalized recommendation solutions. While these systems have proven effective across various industries, their ability to address practical"}, {"title": "6 The Era of Deep Learning in Recommender Systems", "content": "In recent years, deep learning has emerged as the standard in RS, as detailed in a related survey [86]. In the context of this discussion, we shed some light on some popular deep neural network based RS."}, {"title": "6.1 Deep Learning-based Recommender Systems", "content": "Multi-Layer Perceptrons Traditional RS primarily use linear methods like matrix factorization [92], which struggle with capturing complex user-item interactions. In contrast, Multi-Layer Perceptrons (MLPs), a type of feedforward neural network, use deep layers to model these nonlinear interactions more accurately, improving both prediction accuracy and recommendation quality. The evolution of MLPs is seen in RS such as Neural Collaborative Filtering (NCF) [94], Deep Factorization Machine (DFM) [99], Wide & Deep [97], xDeepFM [141], Deep & Cross Network (DCN) [100], FMLP-Rec [142], a model with learnable filters for improving sequential recommendation\u2014and FinalMLP [143], which combines dual MLP architectures with feature selection for effective Click-Through Rate (CTR) prediction.\nChallenge with MLP: Despite their success, MLP models in RS face challenges like complexity, the risk of overfitting, lack of spatial invariance, issues with vanishing or exploding gradients, and explainability concerns.\nAutoencoders are neural network architectures specifically designed for unsupervised learning and are used for an effective dimensionality reduction method. An autoencoder comprises two components: an encoder for compressing input data into a lower-dimensional representation, and a decoder, which reconstructs the original data. Unlike traditional MLP models, autoencoders explicitly capture this encoding-decoding structure.\nNotable RS include AutoRec [144], Collaborative Filtering Autoencoder, Multi-Variational Auto-Encoder (Multi-VAE) [145], Deep Recommender (DeepRec) [146], Recommender Variational Auto-Encoder (RecVAE) [147], Item-based variational auto-encoder for fair recommendation [148], and the Variational Bandwidth Auto-Encoder (VBAE) hybrid RS [149]. These approaches address sparsity and noise challenges, making them effective for personalized recommendations.\nChallenge with Autoencoder: Autoencoders are powerful for dimensionality reduction and capturing complex data structures, but one key issue is their sensitivity to noise, which can lead to poor reconstructions if the input data is noisy [150]. Also, the reconstruction process might not always preserve meaningful patterns essential for recommendations.\nConvolutional Neural Networks (CNNs) can learn from visual, sequential, and multimodal data and have enhanced accuracy and personalization of recommendations. CNNs have been applied in RS in various settings. DeepCoNN analyzes text and visual cues to understand user preferences [87, 151]. CNNs are integrated with graph structures for scalable recommendation systems [120], employed in DKN for news recommendations [152], and utilized in MusicCNN for music recommendations based on audio signals [153]. CNN-based RS models predict next-item recommendations [130], recognize user preference patterns through CoCNN [154], and leverage collaborative filtering with CAGCN [155].\nChallenge with CNNs: CNNs in RS face challenges such as data sparsity, scalability, privacy, and domain-specific issues [156]. Researchers continue to explore solutions to enhance CNN-based RS performance and usability"}, {"title": "6.2 Can Deep Learning-based Recommender Systems address Practical Challenges?", "content": "Deep learning-based RS have effectively addressed many practical challenges faced by foundational systems. Models like NCF, DeepFM, and DeepMF have enhanced personalization by capturing complex user-item interactions in e-commerce product recommendations [303]. Wide & Deep Learning has shown improved performance in e-commerce for both product recommendations and ads [304]. CNNs, RNNs, and their variations and hybridizations are used in content-based and sequential data recommendations, benefiting industries like news [164] and entertainment [305]. Transformer models like BERT are used for movie recommendations [228]. GNNs capture relationships in social networks and e-commerce, offering improved accuracy and diversity in recommendations [155].\nAdvancements in deep learning have brought further changes to the theory and practice of RS, leading to the development of advanced modeling methods, which is discussed next."}, {"title": "7 Advanced Modeling Techniques in Recommender Systems", "content": ""}, {"title": "7.1 Graph-based Recommender Systems", "content": "Graph Neural Networks (GNNs) are specialized neural networks designed to work with graph-structured data. GNNs have emerged as a powerful tool in RS due to their capability to efficiently leverage complex, relational user-item interaction data, enhancing recommendation accuracy and personalization. GNNs in RS are highlighted in the related survey articles [48, 47], showcasing their significant impact and evolution in the domain."}, {"title": "7.2 Sequential and Session-based Recommender Systems", "content": "Traditional models like Markov chains [306], pattern/rule mining [225], and latent factorization techniques [307] have been long used in analyzing sequential data and user-item relationships by examining transitions, patterns, and latent connections. However, they often struggle with dynamically predicting user preferences, typically due to a narrow"}, {"title": "7.3 Knowledge-based Recommender Systems", "content": "Knowledge Bases (KB), particularly Knowledge Graphs (KG), have been extensively used in the literature, for enhancing personalized recommendations by leveraging user/item information [173]. A KG is a directed graph G = (V, E), where V and E represent entities and relations between them, respectively, with E C V \u00d7 V. It includes entity type function $\\phi$ : V \u2192 A and relation type function $\\Psi$ : E \u2192 R, mapping entities to types A and relations to types R. KGs are depicted as sets of triples (en, r, et), signifying a relation r from en to et. This relational information helps RS understand user preferences and item relations, employing various methods to integrate KGs for improved recommendations. KG-based RS can be observed through three primary approaches: Embedding-based, Path-based, and Propagation-based approaches, each advancing the way RS leverage the rich relational data within KGs, as classified by [173].\nEmbedding-based approaches focus on learning and applying embeddings to represent KG entities (nodes) and relations (edges), enhancing user and item representations. They typically start with initial embedding generation using models like TransE [309], TransD [198], and node2vec [310], followed by their application in RS through attention mechanisms in KSR [229] or generative models like BEM [176] and KTGAN [311]."}, {"title": "7.4 Reinforcement Learning-based Recommender Systems", "content": "Reinforcement learning (RL) [277] is a subset of ML where an agent learns to make decisions by interacting with an environment, aiming to achieve a goal through trial and error, guided by rewards for its actions, without explicit instructions on what actions to take. Deep Reinforcement Learning-based methods [256] integrate RL with deep neural networks to enable agents to handle complex modalities of the data directly. Given a set of states S, a set of actions A, a reward function R, a transition probability function P, and a discount factor $\\gamma$, the goal of the RL agent is to find a policy $\\pi$ that maximizes the expected, discounted cumulative reward over time. The mathematical formulation is [43]:\n$\\max_{ \\pi} E\\left[ \\sum_{t=0}^{T} \\gamma^t r(s_t, a_t) \\right]$         (8)\nwhere t indexes the time steps, ranging from 0 to T, the maximum time step in a finite Markov Decision Process (MDP), $s_t$ and $a_t$ represent the state and action at time t, respectively, r(st, at) is the immediate reward received after taking action at in state st, $\\gamma$ applies the discount factor to future rewards, making them worth less than immediate rewards. Applying these RL concepts to RS, the RS itself acts as the RL agent [254] through an environment constituted by user interactions and data, as detailed in a related survey [43].\nRL methods in RS has evolved into two primary frameworks: traditional RL-based RS and deep learning-enhanced RL-based RS. Traditional methods, such as Q-learning [255] and SARSA [324], optimize policies within Markov Decision Processes (MDP) using model-free approaches, with applications well-documented across various contexts [325, 269, 271, 267, 257]. These methods often leverage Monte Carlo Tree Search (MCTS) [326] for effective simulation and policy refinement.\nDeep learning methods in RL-based RS [43], on the other hand, incorporate advanced neural network architectures to enhance policy learning. These include Vanilla Deep Q-Network (DQN) and its variants [255, 259, 253, 131, 214, 264, 258], which utilize neural networks for accurate action-reward estimation. Hybrid methods like Actor-Critic and Deep Deterministic Policy Gradient (DDPG) [253, 327, 281, 252], and Soft Actor-Critic (SAC) [328, 262, 266] blend value and policy strategies to balance exploration and exploitation effectively."}, {"title": "7.5 Large Language Model based Recommender Systems", "content": "Language is a fundamental tool for human communication, essential for expressing thoughts, feelings, and intentions. The challenge of understanding and leveraging human language has been a central pursuit in NLP research, leading to significant developments in language modeling [282]. Early statistical models relied on the Markov assumption"}, {"title": "8 Specialized Recommender Systems", "content": "Specialized RS can be defined as those RS that are tailored to meet specific needs across various domains, using advanced techniques to address unique user preferences or situations. Unlike general RS, these focus on specialized techniques, functions and targeted recommendations. In the following subsections, we will explore these specialized systems in detail."}, {"title": "8.1 Context-aware Recommender Systems", "content": "Context-aware recommender systems (CARS) are advanced RS that enhance the personalization of content by incorporating contextual information into the recommendation process [33]. Unlike traditional RS that primarily rely on user-item interactions, CARS consider additional dimensions such as time, location, social settings, and user behavior patterns to deliver more relevant and timely suggestions [352]. These systems have evolved to address specific challenges such as the cold-start problem, where limited initial data is available about new users or items.\nThe core models employed in CARS span a variety of sophisticated algorithms designed to leverage contextual information effectively into the recommendation process. Among these, factorization machines (FM) [353] are prominent for their ability to capture interactions between variables within large datasets. Field-Aware Factorization Machines (FFMs) [354] are specifically optimized for CTR prediction, showing the versatility and depth of models developed for enhancing CARS' performance. The Neural Factorization Machine (NFM) [98] extends FM by modeling second-order feature interactions with the non-linearity of neural networks for higher-order interactions.\nDeep learning has significantly advanced CARS by enabling sophisticated feature extraction and integration of diverse data types, such as images and sequences [355]. Models like CNNs and LSTMs can process complex inputs and temporal sequences, enhancing the system ability to understand and utilize context like time and location effectively. DeepFM [99] merges FM recommendation capabilities with a novel neural network architecture. xDeepFM [141] further extends the DeepFM concept by explicitly learning bounded-degree feature interactions while also capturing arbitrary low- and high-order interactions implicitly. Additionally, scalability allows these models to maintain high performance even with vast datasets, ensuring personalized recommendations.\nTechniques such as attention mechanisms make recommendations more adaptive and context sensitive. The Attentional Factorization Machine (AFM) [356] introduces a neural attention network to show the significance of each feature interaction, enhancing model interpretability and efficiency. The Graph Convolution Machine (GCM) [188] and the Attention-based Context-aware Sequential Recommendation model using Gated Recurrent Unit (ACA-GRU) [226] both enhance RS by effectively synthesizing user, item, and context information into actionable insights.\nVarious CARS have been developed for different use cases. These include a tourism RS for personalized suggestions [225], and a context-aware paper citation RS [134] that utilizes graph CNN combined with BERT for effective document and context encoding. There are also CARS designed for smart product-service systems [357] and for cultural heritage [66]. Moreover, the Sequential Model for Context-Aware Point of Interest (POI) Recommendation (SCR) [237] enhances next POI predictions by integrating short-term preferences with multi-head attentive aggregation and long-term preferences through context-aware layers.\nPractical Challenges Addressed CARS enhance industries by efficiently handling diverse data sources and ensuring scalability, interpretability, and computational efficiency. Models like FFM, NFM, and DeepFM are ideal for e-commerce, advertising, and web platforms. They build user trust by making recommendations understandable and"}, {"title": "8.2 Review-based Recommender Systems", "content": "A review-based RS uses textual reviews and ratings from users to generate personalized recommendations for products or services [358, 45]. The review-based RS have evolved by improving through various models. Initially, models like Hidden Factors as Topics (HFT) [359] aligned topics from reviews with latent dimensions from ratings. Successive approaches, such as Rating-Boosted Latent Topics (RBLT) [360], Topic Initialized Latent Factor Model (TIM) [307], and deep learning models like Convolutional Matrix Factorization (ConvMF) [361] and Deep Cooperative Neural Networks (DeepCoNN) [87], utilized neural networks to better handle sparse data and extract nuanced features from reviews. Advanced models, including SentiRec [362] and Neural Collaborative Topic Regression (NCTR) [363], incorporated sentiment analysis and hybrid data integration to refine recommendations further."}, {"title": "8.3 Aspect-based Recommender Systems", "content": "Aspect-based RS extract and analyze specific product attributes from reviews, providing tailored recommendations to the users based on item aspects [376]. This approach to RS differs with review-based RS, which assess overall user sentiment and preferences from review content.\nAspect-based RS have evolved from traditional RS that rely on user-item interactions to methods that delve into item aspects or features for tailored suggestions. Early works laid the foundation by extracting aspect-related information from reviews to enhance user satisfaction and uncover niche items [377]. The concept of multi-criteria RS that uses CF and opinion mining to extract aspects and sentiment from user reviews, shows better accuracy over single-criteria methods [378]. The Aspect-based Neural Recommender (ANR) uses representation learning for users and items [376]. Simultaneously, introduction of lightweight ontologies in aspect-based RS improve the search for relevant venues [379]. The integration of deep learning methods in the aspect-based RS, such as in related works [380, 381, 382], enable the capturing of syntactic and semantic features without extensive feature engineering in these methods [56].\nAspect-based sentiment analysis began to play a critical role in detecting sentiment polarity towards specific aspects within a context, exemplified by Sentic GCN [175] and sentiment analysis with CF [382]. Lately, incorporating neural co-attention mechanisms and deep neural networks further refine the consideration of user aspects in making recommendations [383]. Multi-criteria RS such as Hybrid Aspect-based Latent Factor Model (HALFM) [384] and Aspect-based Opinion mining using Deep learning method for RS (AODR) [380], which utilized global and local aspect-based latent factor models and weighted aspect-based opinion mining further improve recommendation accuracy. Specialized approaches like the use of a query-click bipartite graph alongside an iterative clustering algorithm start recommending products for specific events and focus on event-related aspects [118]. The integration of diversity preference in link recommendations for online social networks highlight the ongoing evolution and expansion of aspect-based RS [385].\nAspect-based RS has applications mainly in tourism [386] and customer-generated content, such as for restaurants [387]."}, {"title": "Practical Challenges Addressed", "content": "Aspect-based RS effectively address several practical challenges by focusing on specific product attributes extracted from user reviews. These systems enhance personalization by tailoring recommendations based on individual user preferences and item characteristics. In e-commerce, aspect-based RS can recommend niche products by analyzing detailed aspects like product features and user sentiments. This capability improves customer satisfaction and boosts sales by aligning recommendations more closely with user needs. Additionally, in the tourism and hospitality industries, aspect-based RS provide recommendations by considering specific attributes of destinations or services, thus offering more relevant and satisfactory suggestions. More details in Table 14."}, {"title": "8.4 Explainable and Trustworthy Recommender Systems", "content": "To gain user engagement and satisfaction"}, {"title": "A COMPREHENSIVE REVIEW OF RECOMMENDER SYSTEMS: TRANSITIONING FROM THEORY TO PRACTICE", "authors": ["Shaina Raza", "Mizanur Rahman", "Safiullah Kamawal", "Armin Toroghi", "Ananya Raval", "Farshad Navah", "Amirmohammad Kazemeini"], "abstract": "Recommender Systems (RS) play an integral role in enhancing user experiences by providing personalized item suggestions. This survey reviews the progress in RS inclusively from 2017 to 2024, effectively connecting theoretical advances with practical applications. We explore the development from traditional RS techniques like content-based and collaborative filtering to advanced methods involving deep learning, graph-based models, reinforcement learning, and large language models. We also discuss specialized systems such as context-aware, review-based, and fairness-aware RS. The primary goal of this survey is to bridge theory with practice. It addresses challenges across various sectors, including e-commerce, healthcare, and finance, emphasizing the need for scalable, real-time, and trustworthy solutions. Through this survey, we promote stronger partnerships between academic research and industry practices. The insights offered by this survey aim to guide industry professionals in optimizing RS deployment and to inspire future research directions, especially in addressing emerging technological and societal trends.", "sections": [{"title": "1 Introduction", "content": "Recommender Systems (RS) are a type of information filtering system designed to predict and suggest items or content-such as products, movies, music, or articles-that a user might be interested in. These predictions are based on the user's past behavior, preferences, or the behavior of similar users [1]. The main goal of any RS is to enhance user experience, increase engagement, and facilitate decision-making processes [2]. This is applicable across various domains, including e-commerce, entertainment, and social media. RS hold significant roles in both theoretical research (academics) and practical applications (industry).\nThe importance of RS has grown exponentially with the advent of big data and advancements in artificial intelligence [3, 4]. As users interact with digital platforms, they generate vast amounts of data that can be leveraged to make precise"}, {"title": "2 Background", "content": "Recommender systems (RS) are algorithms designed to suggest items\u2014such as books, movies, products, or content-to users based on their preferences. The primary goal of RS is to enhance user experience by personalizing content [3]. At its core, an RS combines user and item profiles with a filtering mechanism to align user preferences with suitable items [13]. User profiles gather data such as demographics and browsing history, while item profiles detail features like genres. Both explicit feedback (e.g. ratings) and implicit feedback (e.g. browsing actions) refine these recommendations."}, {"title": "2.1 Historical Context", "content": "One of the pioneering efforts for RS is from Elen Rich in 1979 [67] to suggest books based on user preferences categorized into \"stereotypes\". Following this, Jussi Karlgren conceptualized the \"digital bookshelf\" in 1990 [68], an idea later expanded by researchers at SICS, MIT, and Bellcore, with notable contributions from Pattie Maes, Will Hill, and Paul Resnick, whose GroupLens project [69] received the 2010 ACM Software Systems Award. Later, Adomavicius [3], Herlocker [70], and Beel [71] provided foundational theory on RS.\nTraditional RS methods can be categorized into collaborative filtering, content-based filtering, and hybrid approaches, aiming to improve user experience [13]. Collaborative filtering (CF) [70] is based on the idea that users with similar preferences will likely have similar tastes in the future. CF recommends items by finding a neighborhood of similar users or items. CF can recommend items without needing much content analysis, however, it normally faces challenges like cold starts, scalability, and sparsity [34] . Content-based filtering (CBF) [72] recommends items based on a user past preferences and item characteristics, using techniques like Term Frequency - Inverse Document Frequency (TF-IDF), cosine similarity, and neural networks for item representation. However, it may struggle with recommending new or unseen items. Hybrid RS [36] combine the strengths of both approaches, offering more accurate and personalized recommendations by integrating diverse methodologies."}, {"title": "2.2 Current State of Practice and Theory in Recommender Systems", "content": "Academia focuses on the theory, methods, and algorithms in RS, while the industry emphasizes practical applications, scalability, and direct business impacts. This section explores the distinct challenges faced by these two sectors."}, {"title": "Theoretical Research on Recommender Systems", "content": "Theoretical research on RS is commonly initiated by academics through the development of new algorithms, models, and evaluation metrics. However, academic researchers face challenges in accessing diverse and comprehensive datasets due to privacy concerns, proprietary restrictions, and financial barriers. Additionally, data quality issues such as biases, inaccuracies, and outdated information limit the development and testing of RS in varied contexts.\nThe drive for high accuracy in research models can often lead to overfitting, which makes them unusable for real-world applications. Such a focus may neglect crucial aspects like diversity, novelty, and user satisfaction. Additionally, solutions from academia are frequently not easily adaptable in industry settings due to their reliance on data-intensive algorithms, complexity, and a disconnect in keeping developers updated."}, {"title": "Practices in Recommender Systems", "content": "The industry faces several challenges in deploying RS, particularly concerning scalability as user bases and catalog sizes expand. Adapting to constantly evolving user preferences and content availability presents ongoing difficulties. Ensuring the diversity and fairness of recommendations is crucial to avoid biases. Additionally, integrating real-time data and maintaining high performance under heavy loads are significant challenges. Balancing personalization with privacy concerns requires careful handling of user data to build trust and comply with regulations.\nBoth theory and practice emphasize the importance of high-quality (accurate, relevant, reliable, and representative of the intended use case or application) datasets for building RS. Academic research often relies on high-quality data for benchmarking purposes, while the industry frequently requires such data to enhance user experience and system effectiveness.\nTheoretically, RS algorithms are quite advanced now, featuring layers of deep neural networks and the latest language model complexities. In practice, however, these models are not immediately applicable to real-world use cases. Industry sectors, generally running a set of standard models, require significant adaptations to implement these advanced algorithms effectively\nIn this survey, we examine the theoretical and practical aspects of RS, with the goal to facilitate a smooth transition from research to real-world application."}, {"title": "3 Literature Review Methodology", "content": "To compile a comprehensive and relevant list of papers for our review, we conducted a systematic literature review, adhering to established methodology principles [74]. Our search query and extraction methods are detailed below."}, {"title": "Research Questions", "content": "1. How have RS algorithms evolved theoretically over the years?\n2. What strategies can be utilized to apply theoretical advancements in RS to practical applications?"}, {"title": "Databases Searched", "content": "For selecting studies, we gathered articles published inclusively from January 2017 through April 2024. This timeframe was chosen because much of the evolution in RS is linked to deep learning algorithms, also highlighted in the RecSys workshop in 2017 [75]. We conducted our literature search across multiple academic databases and digital libraries renowned for their extensive collections of RS literature, including IEEE Xplore, ACM Digital Library, PubMed, ScienceDirect, JMLR, and Wiley. To refine the search results, we applied specific inclusion and"}, {"title": "Search Query", "content": "Our search strategy aimed to find literature across various aspects of RS, including types, algorithms, evaluation, application, user interaction, and data quality. The search query used was:\n(\"recommender systems\" OR \"recommendation systems\" OR \"RS\" OR \"RecSys\") AND (\"content-based filtering\" OR \"collaborative filtering\" OR \"hybrid recommender systems\" OR \"context-aware recommender systems\" OR \"knowledge-based systems\" OR \"social recommender systems\") AND (\"matrix factorization\" OR \"deep learning\" OR \"convolutional neural networks\" OR \"recurrent neural networks\" OR \"reinforcement learning\" OR \"autoencoders\" OR \"neural collaborative filtering\" OR \"graph neural networks\") AND (\"precision\" OR \"recall\" OR \"F1 score\" OR \"RMSE\" OR \"MAE\" OR \"hit rate\" OR \"novelty\" OR \"diversity\" OR \"serendipity\" OR \"user satisfaction\") AND (\"e-commerce\" OR \"media streaming\" OR \"social media\" OR \"education\" OR \"healthcare\" OR \"tourism\" OR \"personalized news\" OR \"job recommenders\") AND (\"user interface\" OR \"user experience\" OR \"usability\" OR \"interaction design\" OR \"user engagement\" OR \"user feedback\" OR \"user profiling\") AND (\"explicit feedback\" OR \"implicit feedback\" OR \"data sparsity\" OR \"cold start problem\" OR \"data quality\" OR \"user-generated content\") AND (\"privacy\" OR \"data security\" OR \"ethical algorithms\" OR \"bias and fairness\" OR \"transparency\" OR \"recommendation explainability\") AND (\"tech industry\" OR \"startup case studies\" OR \"market analysis\" OR \"business models\" OR \"return on investment\" OR \"user retention\") AND (\"transformer models\" OR \"BERT\" OR \"GPT\" OR \"natural language understanding\" OR \"language generation\" OR \"sentiment analysis\" OR \"text embeddings\") AND (\"user personalization\" OR \"adaptive systems\" OR \"customization techniques\" OR \"user-adaptive content\" OR \"dynamic personalization\")"}, {"title": "Quality Assessment", "content": "We screened the articles using the inclusion and exclusion criteria detailed above in Table 2. If there was any uncertainty, the paper was briefly reviewed and then either included or excluded based on consensus from the two first co-authors. Selected papers underwent a thorough reading and were subject to a quality assessment involving a set of questions:\nA paper was considered for inclusion in our review if it received a \"yes\" or \"partially\" response to any of these questions:\n1. Does the article present a novel RS or methodology?\n2. Is the article related to a RS in an academic setting?\n3. Is the article related to a RS in an industry setting?\n4. Does the article propose a framework, tool or methodology?\n5. Has the research provided a concise statement or definition outlining its aims, goals, purposes, problems, motivations, objectives, and questions?\nThe results of the literature search were finalized and categorized by database, as shown inTable 3."}, {"title": "4 Challenges in Recommender Systems", "content": "RS play a vital role in personalizing user experiences and driving business value across various domains. Despite their widespread adoption, several challenges persist in their deployment and maintenance.\nE-commerce E-commerce platforms face the challenge of personalizing the shopping experience by recommending products in real-time, managing vast data, and adapting to changing consumer preferences [76]. Personalization must consider factors such as time, season, location, and the user's current situation. For example, recommendations for a new parent shopping for baby products will differ significantly from those for a book lover. Introducing diversity and novelty in recommendations is crucial to keep the experience fresh and engaging."}, {"title": "Entertainment", "content": "In the entertainment industry, the challenge lies in tracking users' preferences across genres while introducing them to new content to maintain engagement. Balancing personalization and novelty is essential. Music recommendations require frequent updates due to the shorter shelf life of songs compared to movies [77]. Conversely, movie recommendations are less dependent on frequent updates, as films typically have a longer shelf life. However, effective movie RS should still balance between promoting new releases and maintaining a selection of enduring favorites to satisfy a wide range of user preferences [78]."}, {"title": "News", "content": "The news industry must deliver personalized content promptly without overwhelming users. News preferences are highly dynamic, necessitating recommendations that adapt to rapid changes in interests and current events [59]. It is important to offer diverse viewpoints to prevent echo chambers, combat misinformation [79], and maintain user trust."}, {"title": "Tourism", "content": "Personalized booking recommendations in tourism must account for user preferences regarding destinations, travel dates, budgets, and accommodations [80]. Integrating factors such as past travel history, seasonal trends, and real-time availability is essential. Balancing immediate needs, like dining recommendations during travel, with advance bookings for stays and major attractions enhances the overall user experience."}, {"title": "Healthcare", "content": "Healthcare RS face issues like data privacy, security, and patient consent under regulations such as Health Insurance Portability and Accountability Act (HIPAA). Providers, patients, and administrators all require access to relevant information tailored to their roles, necessitating role-based solutions and robust processing capabilities to handle large volumes of heterogeneous data effectively [81]."}, {"title": "Finance", "content": "Financial RS need to navigate data privacy, security, and compliance with regulations like General Data Protection Regulation (GDPR) and Payment Card Industry Data Security Standard (PCI-DSS). Challenges include managing data quality, integrating diverse data sources, and providing personalized financial advice [19]. Ensuring the interpretability and transparency of recommendations is crucial for building trust and user confidence. Fairness of the recommendations is of utmost importance."}, {"title": "E-learning", "content": "E-learning RS face the task of addressing varied user needs, overcoming the cold start problem with new users, and handling data sparsity. Adapting to dynamic content and user behavior, ensuring contextual relevance, scalability, and employing suitable evaluation metrics to assess educational impact are fundamental challenges [82]."}, {"title": "Discussion", "content": "RS across various sectors face a set of common challenges despite their industry-specific characteristics. Generally, these systems struggle with balancing personalization and user privacy, managing data scalability, and ensuring the diversity and novelty of recommendations to keep users engaged. They must also address the cold-start problem, where insufficient user data can hinder the system's ability to make accurate recommendations. Additionally, dynamic user preferences require systems to continually adapt and learn from new data, posing challenges in real-time processing and algorithmic efficiency. Lastly, ensuring fairness and avoiding bias in recommendations is crucial, as these systems often influence user decisions and can perpetuate existing disparities if not carefully managed.\nIn the following sections, we explore the evolution of RS and how they address these challenges."}, {"title": "5 Foundational Recommender Systems", "content": "A RS can be mathematically represented as a function f that predicts the utility of an item i for a user u, denoted as $r_{ui}$, which estimates how much user u would prefer item i.[3] . This function is typically learned from historical data:\n$r_{ui} = f(u, i; \\Theta)$        (1)\nwhere $\\Theta$ represents the parameters of the model, learned from the data. In the context of RS, the term $r_{ui}$ represents a prediction of the rating or utility that a user would assign to an item This prediction is used for recommending items that are likely to be of interest to the user. A general framework of RS is illustrated in Figure 2. The lifecycle of a data-driven model within an RS starts with data acquisition, followed by storage and preparation. This leads to feature engineering, forming the basis of the data pipeline. The data pipeline feeds into the training pipeline, which includes model training and validation. Following training, the process involves candidate generation and ranking. This process is complemented by A/B testing, offline and/or online evaluation. The final stages include deployment and monitoring.\nBelow, we present an overview of foundational RS."}, {"title": "5.1 Foundational Recommender Systems", "content": "Foundational RS refers to the early models and techniques that established the core principles and methodologies in the field of recommendation engines. These systems primarily include collaborative filtering, content-based filtering, and hybrid approaches.\nContent-Based Filtering Content-based filtering (CBF) is a recommendation strategy that suggests items to a user based on the attributes of the items and a profile of the user's preferences, typically utilizing similarity measures to match user preferences with item attributes [83]. In CBF, the recommendation $r_{ui}$ is based on the features of items $\\phi(i)$ and a profile of the user's preferences $\\theta(u)$:\n$r_{ui} = \\theta(u)^T \\phi(i)$        (2)\n\u2022 $\\phi(i)$ represents the feature vector of the item.\n\u2022 $\\theta(u)$ represents the user preference vector.\nThe evolution of CBF recommendation models starts from traditional methods [83] like vector-space models, probabilistic models, and decision trees, relying on manual feature engineering and similarity calculations. Vector-space models compute item similarity through cosine similarity [84], probabilistic models estimate the likelihood of user preference with statistical analysis [85], and decision trees recommend items by categorizing them based on attributes [83]. These models laid the groundwork for personalized recommendations by leveraging explicit item features and user preferences.\nAlgorithmic advancements in computer science and ML methods led to a shift to sophisticated neural networks that allow automatic feature extraction and learning complex data patterns [86]. These neural network-based systems leverage deep learning to analyze user interactions and item features across different modalities, including textual (such as reviews [87], citations [88], and news [89]), streaming (like music [77]), and image data [90]. The overall goal of these advancements is to generate personalized recommendations by aligning user profiles with item characteristics.\nChallenges with CBF: In general, CBF faces challenges such as the cold-start problem, over-specialization (only suggesting items similar to those the user has already seen or liked), computational cost (which can increase quadratically or cubically with the number of users and items), and a lack of updates to user and item profiles.\nCollaborative Filtering Collaborative filtering (CF) is a technique used by RS to predict the preferences of a user based on the preferences of similar other users [34]. CF techniques are broadly divided into two main categories: memory-based and model-based methods. Memory-based CF makes recommendations using similarities between users or items directly from user ratings. It has further two types: user-based CF predicts a user ratings based on similar users' historical ratings [70], while item-based CF predicts ratings based on similar items [91]. Both methods face"}, {"title": "5.2 Can Foundational Recommender Systems address Practical Challenges?", "content": "Foundational RS, which include CF, CBF, and hybrid methods, form the core of many personalized recommendation solutions. While these systems have proven effective across various industries, their ability to address practical"}, {"title": "6 The Era of Deep Learning in Recommender Systems", "content": "In recent years, deep learning has emerged as the standard in RS, as detailed in a related survey [86]. In the context of this discussion, we shed some light on some popular deep neural network based RS."}, {"title": "6.1 Deep Learning-based Recommender Systems", "content": "Multi-Layer Perceptrons Traditional RS primarily use linear methods like matrix factorization [92], which struggle with capturing complex user-item interactions. In contrast, Multi-Layer Perceptrons (MLPs), a type of feedforward neural network, use deep layers to model these nonlinear interactions more accurately, improving both prediction accuracy and recommendation quality. The evolution of MLPs is seen in RS such as Neural Collaborative Filtering (NCF) [94], Deep Factorization Machine (DFM) [99], Wide & Deep [97], xDeepFM [141], Deep & Cross Network (DCN) [100], FMLP-Rec [142], a model with learnable filters for improving sequential recommendation\u2014and FinalMLP [143], which combines dual MLP architectures with feature selection for effective Click-Through Rate (CTR) prediction.\nChallenge with MLP: Despite their success, MLP models in RS face challenges like complexity, the risk of overfitting, lack of spatial invariance, issues with vanishing or exploding gradients, and explainability concerns.\nAutoencoders are neural network architectures specifically designed for unsupervised learning and are used for an effective dimensionality reduction method. An autoencoder comprises two components: an encoder for compressing input data into a lower-dimensional representation, and a decoder, which reconstructs the original data. Unlike traditional MLP models, autoencoders explicitly capture this encoding-decoding structure.\nNotable RS include AutoRec [144], Collaborative Filtering Autoencoder, Multi-Variational Auto-Encoder (Multi-VAE) [145], Deep Recommender (DeepRec) [146], Recommender Variational Auto-Encoder (RecVAE) [147], Item-based variational auto-encoder for fair recommendation [148], and the Variational Bandwidth Auto-Encoder (VBAE) hybrid RS [149]. These approaches address sparsity and noise challenges, making them effective for personalized recommendations.\nChallenge with Autoencoder: Autoencoders are powerful for dimensionality reduction and capturing complex data structures, but one key issue is their sensitivity to noise, which can lead to poor reconstructions if the input data is noisy [150]. Also, the reconstruction process might not always preserve meaningful patterns essential for recommendations.\nConvolutional Neural Networks (CNNs) can learn from visual, sequential, and multimodal data and have enhanced accuracy and personalization of recommendations. CNNs have been applied in RS in various settings. DeepCoNN analyzes text and visual cues to understand user preferences [87, 151]. CNNs are integrated with graph structures for scalable recommendation systems [120], employed in DKN for news recommendations [152], and utilized in MusicCNN for music recommendations based on audio signals [153]. CNN-based RS models predict next-item recommendations [130], recognize user preference patterns through CoCNN [154], and leverage collaborative filtering with CAGCN [155].\nChallenge with CNNs: CNNs in RS face challenges such as data sparsity, scalability, privacy, and domain-specific issues [156]. Researchers continue to explore solutions to enhance CNN-based RS performance and usability"}, {"title": "6.2 Can Deep Learning-based Recommender Systems address Practical Challenges?", "content": "Deep learning-based RS have effectively addressed many practical challenges faced by foundational systems. Models like NCF, DeepFM, and DeepMF have enhanced personalization by capturing complex user-item interactions in e-commerce product recommendations [303]. Wide & Deep Learning has shown improved performance in e-commerce for both product recommendations and ads [304]. CNNs, RNNs, and their variations and hybridizations are used in content-based and sequential data recommendations, benefiting industries like news [164] and entertainment [305]. Transformer models like BERT are used for movie recommendations [228]. GNNs capture relationships in social networks and e-commerce, offering improved accuracy and diversity in recommendations [155].\nAdvancements in deep learning have brought further changes to the theory and practice of RS, leading to the development of advanced modeling methods, which is discussed next."}, {"title": "7 Advanced Modeling Techniques in Recommender Systems", "content": ""}, {"title": "7.1 Graph-based Recommender Systems", "content": "Graph Neural Networks (GNNs) are specialized neural networks designed to work with graph-structured data. GNNs have emerged as a powerful tool in RS due to their capability to efficiently leverage complex, relational user-item interaction data, enhancing recommendation accuracy and personalization. GNNs in RS are highlighted in the related survey articles [48, 47], showcasing their significant impact and evolution in the domain."}, {"title": "7.2 Sequential and Session-based Recommender Systems", "content": "Traditional models like Markov chains [306], pattern/rule mining [225], and latent factorization techniques [307] have been long used in analyzing sequential data and user-item relationships by examining transitions, patterns, and latent connections. However, they often struggle with dynamically predicting user preferences, typically due to a narrow"}, {"title": "7.3 Knowledge-based Recommender Systems", "content": "Knowledge Bases (KB), particularly Knowledge Graphs (KG), have been extensively used in the literature, for enhancing personalized recommendations by leveraging user/item information [173]. A KG is a directed graph G = (V, E), where V and E represent entities and relations between them, respectively, with E C V \u00d7 V. It includes entity type function $\\phi$ : V \u2192 A and relation type function $\\Psi$ : E \u2192 R, mapping entities to types A and relations to types R. KGs are depicted as sets of triples (en, r, et), signifying a relation r from en to et. This relational information helps RS understand user preferences and item relations, employing various methods to integrate KGs for improved recommendations. KG-based RS can be observed through three primary approaches: Embedding-based, Path-based, and Propagation-based approaches, each advancing the way RS leverage the rich relational data within KGs, as classified by [173].\nEmbedding-based approaches focus on learning and applying embeddings to represent KG entities (nodes) and relations (edges), enhancing user and item representations. They typically start with initial embedding generation using models like TransE [309], TransD [198], and node2vec [310], followed by their application in RS through attention mechanisms in KSR [229] or generative models like BEM [176] and KTGAN [311]."}, {"title": "7.4 Reinforcement Learning-based Recommender Systems", "content": "Reinforcement learning (RL) [277] is a subset of ML where an agent learns to make decisions by interacting with an environment, aiming to achieve a goal through trial and error, guided by rewards for its actions, without explicit instructions on what actions to take. Deep Reinforcement Learning-based methods [256] integrate RL with deep neural networks to enable agents to handle complex modalities of the data directly. Given a set of states S, a set of actions A, a reward function R, a transition probability function P, and a discount factor $\\gamma$, the goal of the RL agent is to find a policy $\\pi$ that maximizes the expected, discounted cumulative reward over time. The mathematical formulation is [43]:\n$\\max_{\\pi} E\\left[ \\sum_{t=0}^{T} \\gamma^t r(s_t, a_t) \\right]$         (8)\nwhere t indexes the time steps, ranging from 0 to T, the maximum time step in a finite Markov Decision Process (MDP), $s_t$ and $a_t$ represent the state and action at time t, respectively, r(st, at) is the immediate reward received after taking action at in state st, $\\gamma$ applies the discount factor to future rewards, making them worth less than immediate rewards. Applying these RL concepts to RS, the RS itself acts as the RL agent [254] through an environment constituted by user interactions and data, as detailed in a related survey [43].\nRL methods in RS has evolved into two primary frameworks: traditional RL-based RS and deep learning-enhanced RL-based RS. Traditional methods, such as Q-learning [255] and SARSA [324], optimize policies within Markov Decision Processes (MDP) using model-free approaches, with applications well-documented across various contexts [325, 269, 271, 267, 257]. These methods often leverage Monte Carlo Tree Search (MCTS) [326] for effective simulation and policy refinement.\nDeep learning methods in RL-based RS [43], on the other hand, incorporate advanced neural network architectures to enhance policy learning. These include Vanilla Deep Q-Network (DQN) and its variants [255, 259, 253, 131, 214, 264, 258], which utilize neural networks for accurate action-reward estimation. Hybrid methods like Actor-Critic and Deep Deterministic Policy Gradient (DDPG) [253, 327, 281, 252], and Soft Actor-Critic (SAC) [328, 262, 266] blend value and policy strategies to balance exploration and exploitation effectively."}, {"title": "7.5 Large Language Model based Recommender Systems", "content": "Language is a fundamental tool for human communication, essential for expressing thoughts, feelings, and intentions. The challenge of understanding and leveraging human language has been a central pursuit in NLP research, leading to significant developments in language modeling [282]. Early statistical models relied on the Markov assumption"}, {"title": "8 Specialized Recommender Systems", "content": "Specialized RS can be defined as those RS that are tailored to meet specific needs across various domains, using advanced techniques to address unique user preferences or situations. Unlike general RS, these focus on specialized techniques, functions and targeted recommendations. In the following subsections, we will explore these specialized systems in detail."}, {"title": "8.1 Context-aware Recommender Systems", "content": "Context-aware recommender systems (CARS) are advanced RS that enhance the personalization of content by incorporating contextual information into the recommendation process [33]. Unlike traditional RS that primarily rely on user-item interactions, CARS consider additional dimensions such as time, location, social settings, and user behavior patterns to deliver more relevant and timely suggestions [352]. These systems have evolved to address specific challenges such as the cold-start problem, where limited initial data is available about new users or items.\nThe core models employed in CARS span a variety of sophisticated algorithms designed to leverage contextual information effectively into the recommendation process. Among these, factorization machines (FM) [353] are prominent for their ability to capture interactions between variables within large datasets. Field-Aware Factorization Machines (FFMs) [354] are specifically optimized for CTR prediction, showing the versatility and depth of models developed for enhancing CARS' performance. The Neural Factorization Machine (NFM) [98] extends FM by modeling second-order feature interactions with the non-linearity of neural networks for higher-order interactions.\nDeep learning has significantly advanced CARS by enabling sophisticated feature extraction and integration of diverse data types, such as images and sequences [355]. Models like CNNs and LSTMs can process complex inputs and temporal sequences, enhancing the system ability to understand and utilize context like time and location effectively. DeepFM [99] merges FM recommendation capabilities with a novel neural network architecture. xDeepFM [141] further extends the DeepFM concept by explicitly learning bounded-degree feature interactions while also capturing arbitrary low- and high-order interactions implicitly. Additionally, scalability allows these models to maintain high performance even with vast datasets, ensuring personalized recommendations.\nTechniques such as attention mechanisms make recommendations more adaptive and context sensitive. The Attentional Factorization Machine (AFM) [356] introduces a neural attention network to show the significance of each feature interaction, enhancing model interpretability and efficiency. The Graph Convolution Machine (GCM) [188] and the Attention-based Context-aware Sequential Recommendation model using Gated Recurrent Unit (ACA-GRU) [226] both enhance RS by effectively synthesizing user, item, and context information into actionable insights.\nVarious CARS have been developed for different use cases. These include a tourism RS for personalized suggestions [225], and a context-aware paper citation RS [134] that utilizes graph CNN combined with BERT for effective document and context encoding. There are also CARS designed for smart product-service systems [357] and for cultural heritage [66]. Moreover, the Sequential Model for Context-Aware Point of Interest (POI) Recommendation (SCR) [237] enhances next POI predictions by integrating short-term preferences with multi-head attentive aggregation and long-term preferences through context-aware layers.\nPractical Challenges Addressed CARS enhance industries by efficiently handling diverse data sources and ensuring scalability, interpretability, and computational efficiency. Models like FFM, NFM, and DeepFM are ideal for e-commerce, advertising, and web platforms. They build user trust by making recommendations understandable and"}, {"title": "8.2 Review-based Recommender Systems", "content": "A review-based RS uses textual reviews and ratings from users to generate personalized recommendations for products or services [358, 45]. The review-based RS have evolved by improving through various models. Initially, models like Hidden Factors as Topics (HFT) [359] aligned topics from reviews with latent dimensions from ratings. Successive approaches, such as Rating-Boosted Latent Topics (RBLT) [360], Topic Initialized Latent Factor Model (TIM) [307], and deep learning models like Convolutional Matrix Factorization (ConvMF) [361] and Deep Cooperative Neural Networks (DeepCoNN) [87], utilized neural networks to better handle sparse data and extract nuanced features from reviews. Advanced models, including SentiRec [362] and Neural Collaborative Topic Regression (NCTR) [363], incorporated sentiment analysis and hybrid data integration to refine recommendations further."}, {"title": "8.3 Aspect-based Recommender Systems", "content": "Aspect-based RS extract and analyze specific product attributes from reviews, providing tailored recommendations to the users based on item aspects [376]. This approach to RS differs with review-based RS, which assess overall user sentiment and preferences from review content.\nAspect-based RS have evolved from traditional RS that rely on user-item interactions to methods that delve into item aspects or features for tailored suggestions. Early works laid the foundation by extracting aspect-related information from reviews to enhance user satisfaction and uncover niche items [377]. The concept of multi-criteria RS that uses CF and opinion mining to extract aspects and sentiment from user reviews, shows better accuracy over single-criteria methods [378]. The Aspect-based Neural Recommender (ANR) uses representation learning for users and items [376]. Simultaneously, introduction of lightweight ontologies in aspect-based RS improve the search for relevant venues [379]. The integration of deep learning methods in the aspect-based RS, such as in related works [380, 381, 382], enable the capturing of syntactic and semantic features without extensive feature engineering in these methods [56].\nAspect-based sentiment analysis began to play a critical role in detecting sentiment polarity towards specific aspects within a context, exemplified by Sentic GCN [175] and sentiment analysis with CF [382]. Lately, incorporating neural co-attention mechanisms and deep neural networks further refine the consideration of user aspects in making recommendations [383]. Multi-criteria RS such as Hybrid Aspect-based Latent Factor Model (HALFM) [384] and Aspect-based Opinion mining using Deep learning method for RS (AODR) [380], which utilized global and local aspect-based latent factor models and weighted aspect-based opinion mining further improve recommendation accuracy. Specialized approaches like the use of a query-click bipartite graph alongside an iterative clustering algorithm start recommending products for specific events and focus on event-related aspects [118]. The integration of diversity preference in link recommendations for online social networks highlight the ongoing evolution and expansion of aspect-based RS [385].\nAspect-based RS has applications mainly in tourism [386] and customer-generated content, such as for restaurants [387]."}, {"title": "Practical Challenges Addressed", "content": "Aspect-based RS effectively address several practical challenges by focusing on specific product attributes extracted from user reviews. These systems enhance personalization by tailoring recommendations based on individual user preferences and item characteristics. In e-commerce, aspect-based RS can recommend niche products by analyzing detailed aspects like product features and user sentiments. This capability improves customer satisfaction and boosts sales by aligning recommendations more closely with user needs. Additionally, in the tourism and hospitality industries, aspect-based RS provide recommendations by considering specific attributes of destinations or services, thus offering more relevant and satisfactory suggestions. More details in Table 14."}, {"title": "8.4 Explainable and Trustworthy Recommender Systems", "content": "To gain user engagement and satisfaction, latest works in RS start prioritizing transparency and trustworthiness. An"}]}]}