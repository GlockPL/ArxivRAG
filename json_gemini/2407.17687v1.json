{"title": "Overcome the Difficulties of NSGA-II via Truthful Crowding Distance with Theoretical Guarantees", "authors": ["Weijie Zheng", "Benjamin Doerr"], "abstract": "The NSGA-II is proven to encounter difficulties for more than two objectives, and the deduced reason is the crowding distance computed by regarding the different objectives independently. The recent theoretical efficiency of the NSGA-III and the SMS-EMOA also supports the deduced reason as both algorithms consider the dependencies of objectives in the second criterion after the non-dominated sorting but with complicated structure or difficult computation. However, there is still a question of whether a simple modification of the original crowding distance can help.\nThis paper proposes such a variant, called truthful crowding distance. This variant inherits the simple structure of summing the component for each objective. For each objective, it first sorts the set of solutions in order of descending objective values, and uses the smallest normalized L\u2081 distance between the current solution and solutions in the earlier positions of the sorted list as the component. Summing up all components gives the value of truthful crowding distance. We call this NSGA-II variant by NSGA-II-T that replaces the original crowding distance with the truthful one, and that sequentially updates the crowding distance value after each removal.\nWe prove that the NSGA-II-T can efficiently cover the full Pareto front for many-objective mONEMINMAX and mOJZJ, in contrast to", "sections": [{"title": "1 Introduction", "content": "The NSGA-II, the mostly widely used multi-objective evolutionary algorithm, starts its runtime analysis since [ZLD22, ZD23a], and recently received quite rapid attentions for further runtime analysis, especially for bi-objective optimization problems [ZD22, BQ22, ZD23b, DQ23a, DQ23b, DQ23c, DOSS23b, DOSS23a, CDH+23, ZLDD24, WD24]. Recently, it is proven to be inefficient for more than two objectives [ZD23b]. Zheng and Doerr [ZD23b] proved that the NSGA-II needs at least exponential iterations to cover the full Pareto front of the mONEMINMAX problem with the number of objectives m \u2265 3. They deduced the essential reason for this inefficiency lies on the crowding distance that treats the objective independently, which can result in an undesired situation that points far away have huge influence of the crowding distance calculation of current solution.\nThe NSGA-III, a variant of the NSGA-II that replaces the crowding distance by using the predefined reference points for some diversity maintenance, was proposed by [DJ14] to tackle the difficulties of the NSGA-II for many objectives. Recently, Wietheger and Doerr [WD23] proved that the NSGA-III can efficiently cover the full Pareto front of 3-ONEMINMAX, and later Opris, Dang, Neumann, and Sudholt [ODNS24] proved its efficiency for objectives more than 3. The SMS-EMOA is another variant of the NSGA-II that replaces the crowding distance by the hypervolume contribution, and is also recently proven to cover the Pareto front of mOJZJ in expected $O(\\mu Mn^k)$ iterations where \u03bc > M for M the maximal size of incomparable solutions, M the Pareto front size, n the problem size, and k the gap size. Obviously, the reference point mechanism in the NSGA-III and the hypervolume contribution in the SMS-EMOA consider the objectives dependently, and their efficiency verify that the non-dominated sorting in the NSGA-II works but the crowding distance has its deficiency. On the other hand, the structure of the NSGA-III is complicated as it does not use a straightforward calculation way as in the NSGA-II but needs many procedures, like non-trivial normalization, reference point association, number of selected points associated with the reference point, update the number"}, {"title": "2 Preliminaries", "content": "This section introduces the original crowding distance in the NSGA-II with the difficulties in the existing literature, and also the problems that will be used for the analyses in this paper."}, {"title": "2.1 Original Crowding Distance in the NSGA-II", "content": "The original NSGA-II [DPAM02] designed a simple way of calculating the crowding distance with the framework of calculating the component for each objective and then summing them up. For each component w.r.t. an objective, it sorts the individuals in order and assigns the first and the last elements in the sorted list with positive infinite value and others the normalized distance between its left and right neighbors in this sorted list. Formally, let S = {S\u2081, . . . , S|s|} be the set of individuals, and S\u1d62,\u2081 , . . . , S\u1d62,|s| be the sorted list of S w.r.t. f\u1d62 for i \u2208 [1..m], where m is the number of objectives. Let x \u2208 |S| has its position of i\u2093 in the sorted list w.r.t. f\u1d62, that is, x = S\u1d62,\u1d62\u2093. The crowding distance of x is\n$cDis = \\begin{cases}\n+\u221e, & \\text{if any } i_x \\in \\{1, |S|\\} \\text{ for } i \\in [1..m], \\\\\n\\sum_{i=1}^m \\frac{|f_i(S_{i, i_x-1}) - f_i(S_{i, i_x+1})|}{|f_i(S_{i, 1}) - f_i(S_{i, |S|})|}, & \\text{otherwise}\n\\end{cases}$       (1)\nIt is quite simple compared with the measurement for the crowd in the NSGA-III and the SMS-EMOA, and is shown to ensure the efficiency of the NSGA-II with large enough population size for all existing bi-objective benchmarks in the evolutionary theory community [ZD22, BQ22, DQ23a, DQ23c, DOSS23b, DOSS23a, CDH+23, ZLDD24]. However, the NSGA-II with this crowding distance has the theoretical difficulty for many-objective optimizations, and cannot be overcome by increasing the population size or using different parent selections, offspring generation ways, or survival selections [ZD23b]. The reason they deduced is the independent treatment of the objectives in calculating the crowding distance. Later, the efficiency of two variants of the NSGA-II considering the objectives dependently (NSGA-III [WD23, ODNS24] and SMS-EMOA [ZD24b]) also verify such finding. However, the NSGA-III has a complicated mechanism of reference point and the hypervolume in SMS-EMOA is expensive to calculate when the objectives become larger [DJ14, SIHP20, GFP21]. This paper attempts to design a simple and efficient variant of crowding distance for many objectives.\nBesides, together with this original crowding distance, the survival selection in the original NSGA-II also has possible difficulty (for some examples) for approximation [ZD24a]. Also in [ZD24a], they prove that the NSGA-II with the sequential survival selection, that is, updating the crowding distance after each removal, and the steady-state NSGA-II is proven to have a nice approximation for bi-objective ONEMINMAX. This paper will also consider such a fact for survival selection in the NSGA-II variant equipped with the designed crowding distance variant."}, {"title": "2.2 Problems to Analyze", "content": "As mentioned before, the difficulty of the NSGA-II with the original crowding distance for many objectives is proven for the mONEMINMAX benchmark [ZD23b]. Note that the efficiency of the SMS-EMOA, a steady-state NSGA-II variant, for many objectives is proven for mOJZJ, which includes mONEMINMAX as a special case [ZD24b]. Here, we introduce their formal definitions (see Definition 1 for mOJZJ and for mONEMINMAX, Definition 1 with k = 0 and f\u2081 and f\u2082 exchanged, or with k = 1, f\u2081 and f\u2082 exchanged, and with f\u2081 \u2212 1 and f\u2082 \u2212 1), which will be used for the discussion of the runtime for full Pareto front coverage of the proposed NSGA-II variant. Due to the limited space, we ignore the definitions of other benchmarks, mCOCZ, mLOTZ, COCZ, LOTZ, and DLTB [LTZ+02, LTZ04, ZLDD24], but also show the runtime of the proposed NSGA-II variant in Section 4.\nDefinition 1 (mOJZJ [ZD24b] and mONEMINMAX [ZD23b]). Let m be an even integer and n be a multiple of m/2. Let n' = 2n/m and k \u2208 [0..n']. The m-objective mOJZJ function f = (f\u2081, . . . , f\u2098) value of x \u2208 {0, 1}\u207f is\n$f_i(x) = \\begin{cases}\nJUMP_{n', k}(x[\\frac{i-1}{2}n'+1..\\frac{i+1}{2}n']), & \\text{if i is odd}\n\\text{JUMP}_{n', k}(x[\\frac{i}{2}n'+1..\\frac{i}{2}n']), & \\text{otherwise,}\n\\end{cases}$\nwhere x = (1 \u2212 x\u2081, . . . , 1 \u2212 x\u2099) and\n$JUMP_{n',k}(z) = \\begin{cases}\nk + \\text{ONEMAX}(z), & \\text{if } |z| \\leq n'-k \\text{ or } y = 1^{n'}, \\\\\nn' - \\text{ONEMAX}(z), & \\text{otherwise,}\n\\end{cases}$\nwhere ONEMAX(z) = \u2211\u1d62=\u2081\u207f' z\u1d62 for z \u2208 {0, 1}\u207f'.\nAlso mentioned before, the theoretical approximation ability of the NSGA-II with sequential survival selection is proven for the ONEMINMAX benchmark [ZD24a]. Here, we note ONEMINMAX from Definition 1 with k = 0, m = 2, and f\u2081 and f\u2082 exchanged, which will be used for the discussion of the runtime for good approximation ability of the proposed NSGA-II variant."}, {"title": "3 Truthful Crowding Distance and the NSGA-II-T", "content": "As mentioned, Zheng and Doerr [ZD23b] deduced the reason for the inefficiency of the NSGA-II for many objectives is the independently treatment"}, {"title": "3.1 Truthful Crowding Distance", "content": "As pointed out in the example in [ZD23b], the original crowding distance allows that points away from a considered solution have a huge influence on its crowding distance. It is undesired and stems from an independent consideration of the objectives in the calculation of the original crowding distance. More specifically, in the original crowding distance (1), the i-th component only relies on the values of f\u1d62, no matter the values of other objectives f\u2c7c, j \u2260 i. Thus, a point y that is far away (w.r.t. f) from a point x can join in the calculation of the i-th component of cDis(x) if f\u1d62(x) and f\u1d62(y) are neighbors in the sorted list w.r.t. f\u1d62. Note that the crowding distance is designed to reflect how crowded the area (where a point is located) is, and will be used as a quantitative measure that helps to remove the points in the crowded area in the survival selection procedure. Hence, this phenomenon is undesired for a suitable crowding measure.\nTo avoid the undesired influence of the far away points in crowding distance components, we need to identify the distance of points w.r.t. entire f. Independent consideration can only show the distance of points w.r.t. specific f\u1d62, then a dependent consideration among all objectives f\u2081, . . . , f\u2098 is required. For easy calculation, we adopt the L\u2081 norm to reflect the distance.\nFollowing the original crowding distance, we consider a crowding distance variant as the sum of the components for each objective. For calculating the i-th component (i \u2208 [1..m]), we also sort the solutions according to f\u1d62 values. Different from the original crowding distance that considers f\u1d62 distance, we consider the smallest \u201coverall\" distance between a specific solution and the solutions not worse than it w.r.t. f\u1d62.\nFor clear demonstration, we call the proposed crowding distance variant dependent crowding distance and denote it as tCD. Formally, let S = {S\u2081, . . . , S|s|} be the set of pair-wise non-dominated individuals, and we take the calculation of i-th component of the truthful crowding distance of S\u2091 as an example. Let S\u1d62,\u2081 , . . . , S\u1d62,|s| be the sorted list of S (w.l.o.g. in descending order of f\u1d62) and let S\u1d62,\u2c7c be S\u2091 in the sorted list. Let tCD(S\u1d62,\u2081) = +\u221e. As"}, {"title": "3.2 The NSGA-II-T", "content": "The above subsection introduced the designed truthful crowding distance. A natural variant of the NSGA-II is just to replace its original crowding distance by the truthful crowding distance. However, as pointed in [ZD24b], the original survival selection that calculates the crowding distance once and remove all worse individual based on the one-time calculation of the crowding distance will have possible difficulties for the approximation (with some examples). They also proved a good approximation ability with theoretical runtime for the sequential survival selection that updates the crowding distance after each removal of the individual with the worst crowding distance.\nBased on this consideration, we consider the NSGA-II variant with truthful crowding distance also with the sequential survival selection, called the"}, {"title": "4 Pareto Front Coverage and Runtime", "content": "The last section introduces the proposed truthful crowding distance and the NSGA-II-T, the corresponding variant of the NSGA-II. This section and the next section will analyze the runtime of the NSGA-II-T for many objectives and for approximation of bi-objective ONEMINMAX, respectively. The result in this section will show that the NSGA-II-T can efficiently optimize the many-objective mOJZJ and mONEMINMAX, in contrast to the exponential runtime of the original NSGA-II on mONEMINMAX [ZD23b]."}, {"title": "4.1 Not Losing Pareto Front Points", "content": "As a theoretical behavior stemming from the independent consideration, the original crowding distance results in a drawback that the already reached Pareto front point can be removed in the survival selection. A large amount"}, {"title": "4.2 Specific Runtime for Many Objectives", "content": "The last subsection introduces the general property of the NSGA-II-T. In this subsection, we easily apply such findings to establish the runtime of the NSGA-II-T on existing benchmarks including the one that the original NSGA-II cannot solve efficiently.\nWe resort to the proofs in [WD24] where near-tight runtime guarantees for many-objective optimization is proven. They require three properties to utilize their proof, among which one is to ensure that there is always an individual in any future generation that weakly dominates any specific individual in the current solution and the other two are for parent selection and generating offspring. The first property holds from Theorem 3, and the last two are well analyzed. Hence, analogous to the results in [WD24], we have the following results.\nTheorem 5. Let $M = (n' \u2212 2k + 3)^{m/2}$. Consider using the NSGA-II-T with problem size N > M, fair or random selection, and standard bit-wise mutation to optimize mOJZJ. Then in expected O(mn^k) iterations, the full Pareto front of the mOJZJ is covered.\nTheorem 6. Consider using the NSGA-II-T with problem size $N > M := (\\frac{2n}{m} + 1)^{m/2}$, fair or random selection, and standard bit-wise mutation to optimize mONEMINMAX or mCOCZ. Then in expected $O(nm) + O(m^2 \\ln n)$ iterations, the full Pareto front of the mONEMINMAX or mCOCZ is covered.\nTheorem 7. Consider using the NSGA-II-T with problem size $N > M := (\\frac{2n}{m} + 1)^{m/2}$, fair or random selection, and standard bit-wise mutation to optimize mLOTZ. Then in expected $O(\\frac{n^2}{m}) + O(mn\\ln(\\frac{n}{m})) + O(n\\ln n)$ iterations, the full Pareto front of the mLOTZ is covered.\nNote that the speed-up of using the crossover for mOJZJ is trivial here and we just state the above result which already shows the NSGA-II-T can reach the same asymptotic runtime as GSEMO and SMS-EMOA, in contrast to the at least exponential runtime of the original NSGA-II for ONEMINMAX (a special case of mOJZJ)."}, {"title": "4.3 Specific Runtime for Two Objectives", "content": "In addition to the efficiency of the NSGA-II-T for many objectives in the above subsection, this subsection will show the runtime results for popular bi-objective benchmarks. We will prove that the NSGA-II-T also perform well for two objectives with same asymptotic runtime but with less restrictions on the population size, compared with the original NSGA-II.\nTheorem 8. Let $k \\in [1..n/2]$. Consider using the NSGA-II-T with problem size N > n \u2212 2k + 3, fair or random selection, and standard bit-wise mutation to optimize ONEJUMPZEROJUMP. Then in expected O(n^k) iterations, the full Pareto front of the ONEJUMPZEROJUMP is covered.\nTheorem 9. Consider using the NSGA-II-T with problem size N > n + 1, fair or random selection, and standard bit-wise mutation to optimize ONEMINMAX or COCZ. Then in expected O(n log n) iterations, the full Pareto front of the ONEMINMAX or COCZ is covered.\nTheorem 10. Consider using the NSGA-II-T with problem size N > n + 1, fair or random selection, and standard bit-wise mutation to optimize LOTZ. Then in expected O(n\u00b2) iterations, the full Pareto front of the LOTZ is covered.\nTheorem 11. Consider using the NSGA-II-T with problem size N > n + 1, fair or random selection, and standard bit-wise mutation to optimize DLTB. Then in expected O(n\u00b3) iterations, the full Pareto front of the DLTB is covered.\nWe note that for all above bi-objective benchmarks, we only require the population size at least the same size of the Pareto front, compared with the fact that the existing runtime results for these bi-objective benchmarks requires the population size at least twice of the Pareto front size [ZLD22, ZD23a, BQ22, DQ23a, ZLDD24].\nWe also note here that all above results also hold for the NSGA-II variant with only replacing the crowding distance by the truthful crowding distance (and not replacing the survival selection to the sequential one)."}, {"title": "5 Approximation Ability and Runtime", "content": "In Section 4, we proved that the NSGA-II-T can efficiently optimize the many-objective mOJZJ, mONEMINMAX, mCOCZ, and mLOTZ benchmarks as well as the popular bi-objective ONEJUMPZEROJUMP,"}, {"title": "6 Conclusion and Future Work", "content": "To overcome the difficulty of the NSGA-II for many objectives, this paper proposed a truthful crowding distance, inspired from the deduced reason of independent treatment of the objectives in the calculation of the crowding distance [ZD23b]. Considering the possible approximation difficulty shown in the existing literature [ZD22, ZD24a], the proposed NSGA-II variant with truthful crowding distance, called NSGA-II-T, used the sequential survival selection as in [ZD22].\nThis paper proved that the proposed NSGA-II-T can overcome the difficulty of the original NSGA-II for many objectives, reducing its original at"}]}