{"title": "Hologram Reasoning for Solving Algebra Problems with Geometry Diagrams", "authors": ["Litian Huang", "Xinguo Yu", "Feng Xiong", "Bin He", "Shengbing Tang", "Jiawen Fu"], "abstract": "Solving Algebra Problems with Geometry Diagrams (APGDs) is still a challenging problem because diagram processing is not studied as intensively as language processing. To work against this challenge, this paper proposes a hologram reasoning scheme and develops a high-performance method for solving APGDs by using this scheme. To reach this goal, it first defines a hologram, being a kind of graph, and proposes a hologram generator to convert a given APGD into a hologram, which represents the entire information of APGD and the relations for solving the problem can be acquired from it by a uniform way. Then HGR, a hologram reasoning method employs a pool of prepared graph models to derive algebraic equations, which is consistent with the geometric theorems. This method is able to be updated by adding new graph models into the pool. Lastly, it employs deep reinforcement learning to enhance the efficiency of model selection from the pool. The entire HGR not only ensures high solution accuracy with fewer reasoning steps but also significantly enhances the interpretability of the solution process by providing descriptions of all reasoning steps. Experimental results demonstrate the effectiveness of HGR in improving both accuracy and interpretability in solving APGDs.", "sections": [{"title": "Introduction", "content": "Algebra Problems with Geometry Diagrams (APGDs) involve solving algebraic equations derived from the problem text and diagrams, which is a common task in educational contexts. These problems require solvers to interpret both textual descriptions and geometry diagrams, necessitating a combined understanding of algebraic and geometric principles (Xia and Yu 2021). The complexity arises from needing to apply geometric theorems and manage implicit information within diagrams, which are not always explicitly stated (as shown in Fig. 1). Addressing these challenges is crucial for developing intelligent educational tools and advancing automated reasoning systems. Therefore, effective methods for APGD solving are essential for educational applications.\nIn the domain of solving APGDs, existing techniques are divided into two primary categories: the neural methods and the symbolic methods. Neural methods (Chen et al. 2021,"}, {"title": "Related Work", "content": "Methods of Solving APGDS\nRecent advancements in solving APGDs have primarily focused on two categories: neural methods and symbolic methods. Neural methods (Chen et al. 2021, 2022; Ning et al. 2023; Liang et al. 2023) leverage neural networks to integrate textual and diagrammatic inputs, producing solutions through cross-modal representations. Neural methods excel at processing multimodal data, creating a unified framework for processing text and diagrams. However, they often struggle with accurately capturing the detailed aspects of diagrams and maintaining logical coherence in the solutions (Trinh et al. 2024). There is a growing trend in leveraging LLMs for solving APGDs, utilizing their extensive pre-trained knowledge to interpret and generate mathematical reasoning (Lu et al. 2023; Kazemi et al. 2023). However, these LLMs often struggle to accurately extract necessary information from geometry diagrams, leading to significant performance drops (Zhang et al. 2024). Their reliance on the quality and scope of training datasets also limits their generalization across different datasets and problem types, resulting in inconsistent performance and susceptibility to errors in mathematical reasoning (Ahn et al. 2024). Unlike neural methods, symbolic methods first parse the textual descriptions and geometric diagrams to extract structured representations, then utilize these representations to apply predefined theorems and rules for problem-solving. These methods (Seo et al. 2014, 2015; Lu et al. 2021; Huang et al. 2022, 2023; Peng et al. 2023; Wu et al. 2024) demonstrate expertise in providing a clear rule-based framework for interpreting the geometric relations within APGDs, making them highly interpretable and ensuring mathematical rigor. However, symbolic methods are often constrained by their reliance on rigid symbolic systems based on formal language, limiting their applicability. To address these issues, our method utilizes a hologram-based reasoning system. It allows for more flexible and adaptable representations, improving the efficiency and accuracy of APGD-solving."}, {"title": "Integration of Neural and Symbolic Methods", "content": "To address the limitations of neural and traditional symbolic methods, the integration of symbolic and neural methods has led to significant advancements in solving APGDs. Inter-GPS (Lu et al. 2021) and E-GPS (Wu et al. 2024) use a trained theorem predictor that significantly improves the accuracy and efficiency of the symbolic solver. GeoDRL (Peng et al. 2023) combines self-learning frameworks with symbolic manipulation, using Deep Q-Networks (DQN) (Mnih et al. 2013) to choose theorems and guide deductive reasoning, thus merging interpretability with adaptability. AlphaGeometry (Trinh et al. 2024), a neuro-symbolic system that uses a neural language model to assist a symbolic deduction engine, effectively synthesizing and solving complex geometry-proving problems with human-readable proofs. These integrated methods leverage the strengths of both symbolic and neural methods, offering more comprehensive, efficient, and interpretable solutions for APGDs. In our method, we employ DQN to select graph models from the model pool, improving both the speed and accuracy of reasoning."}, {"title": "Method", "content": "The HGR method for solving APGDs consists of the parser, graph model construction and reasoner, as depicted in Fig. 2. In this section, the definition of the hologram and each HGR component are introduced separately.\nHologram\nInspired by the Geometry Logic Graph (GLG) used in GeoDRL (Peng et al. 2023), we optimize it to better suit the specific requirements of APGDs and propose the hologram which serves as the foundation for reasoning process and solution generation.\nThe hologram is a heterogeneous attributed graph denoted as G = (V, E, A, \u00c2), where:\n\u2022 Vertices V: The vertices in the hologram represent various geometric primitives, including points, lines, angles, arcs, circles and polygons.\n\u2022 Edges E: The edges represent the geometric relations between the primitives, including adjacency, incidence (e.g., a point on a line), parallelism, perpendicularity, similarity and congruence. These edges ensure the hologram accurately reflects the spatial and relational data from the problem. The edges do not have a direction since the hologram is an undirected graph, reflecting the symmetrical nature of geometric relations.\n\u2022 Mathematical Attributes A: Mathematical attributes associated with vertices include measurable properties such as lengths of lines, measures of angles, and area of polygons. Additionally, the hologram incorporates a special target attribute \u03c4 that specifies the problem's target. These attributes are critical for incorporating quantitative data necessary for problem-solving.\n\u2022 Visual Attributes \u00c2: Visual attributes associated with vertices are the properties of geometric primitives calculated from the diagram image, such as point positions, visual lengths and angles. Visual attributes are not used in the formal calculation process but serve as auxiliary data to support model matching process.\nUsing the hologram for reasoning in HGR provides several advantages. It provides a structured representation of the problem, effectively addressing the limitations of traditional symbolic reasoning methods, such as handling spatial and geometric relations inadequately. This structured approach enhances efficiency and precision, allowing for the rapid identification and application of relevant theorems and rules. Additionally, by avoiding the redundancy of symbolic grammar, it ensures that the reasoning process is clear and precise, facilitating better problem-solving in APGDs.", "Parser": "The parser of HGR plays a critical role in converting raw problem inputs into structured data that can be used for reasoning. The parser consists of three parts: text parser, diagram parser, and hologram generator.\nText Parser. The text parser adopts the rule-based approach used in Inter-GPS (Lu et al. 2021) and GeoDRL (Peng et al. 2023). The text parser interprets the problem text Tinto a set"}, {"title": "Graph Model Construction", "content": "In HGR, graph models play a crucial role in the reasoning process, as they encapsulate geometric configurations and relations, enabling systematic application of theorems and rules to derive algebraic equations essential for solutions. These models are divided into two primary types: Proving Models Mprov and Property Models Mprop. Both types of models share common components but serve different purposes within the reasoning process. The collection of these models forms the model pool, denoted as M =\nMprov \u222a Mprop.\nProving model mprov = (Gp,R,\u0108,C, \u2206G) \u2208 Mprov and property model mprop = (Gp, R,\u0108,E) \u2208 Mprop have the following common components: 1) Pattern Hologram Gp = (Vp, Ep) is generated based on the hologram definition without including attribute values for the vertices. It is used in both mprov and Mprop to match with Gg. It identifies specific geometric configurations corresponding to known theorems or properties. 2) Relation R represents the geometric relation template associated with each graph model. While they do not actively participate in the reasoning process, they play a crucial role in the solution-generation process by providing a readable explanation of the solution. 3) Visual Constraints \u0108 are crucial for ensuring the accuracy of pattern matching in the hologram, as the matching process itself primarily ensures topological consistency. \u0108 provides auxiliary information necessary for resolving ambiguities that arise from purely topological matches. For instance, when two triangles are known to be similar but the corresponding angles are not explicitly identified, \u0108 helps determine the correct angle correspondences by comparing visual aspects like the proximity of angle measures. This ensures that the correct geometric relations are established, thus enhancing the precision of the reasoning process.\nProving model mprov contains the following specific components: 1) Mathematical Constraints C are used to verify whether the mathematical attributes of geometric primitives in Gg, such as angle measures or line segment lengths, meet the conditions required for the theorem being established. 2) Graph Expansion \u2206G refers to a set of operations applied to Gg, which involves adding new vertices and edges and modifying mathematical attributes. It facilitates the application of geometric theorems and extends the reasoning process by introducing new geometric primitives or modifying existing ones.\nProperty model mprop contains the specific component Equations E, which describes the quantitative properties of geometric primitives. The generated equations are then added to the equation set for solving."}, {"title": "Reasoner", "content": "The reasoner in HGR iteratively applies geometric theorems to the global hologram Gg until the final solution is reached. As illustrated in Fig. 5, the reasoning process involves several key steps: 1) Proving model matching, where the proving model is matched with Gg; 2) Graph expansion, updating Gg with new vertices or edges based on the matching; 3) Property model matching, where the property model is matched with Gg; 4) Equations derivation, where equations are derived based on the matched property models; and 5) Attributes update, updating the mathematical attributes of the vertices of Gg based on the solutions obtained from the equations. The iterative process continues until the target answer is obtained, ensuring all relevant theorems are applied accurately.\nModel Matching (Step 1 and 3). The model matching process of the reasoner determines which theorems to apply to specific geometric primitives identified in Gg. The model matching process consists of graph pattern matching, mathematical constraints verification (for proving models) and visual constraints verification.\nGraph pattern matching involves finding a mapping function between the pattern hologram Gp = (Vp, Ep) and global hologram Gg = (Vg, Eg, A, \u00c2):\nM: Vp \u2192 Vg   (1)\nwhere Vp and V9 represent the sets of vertices in Gp and Gg respectively. The function M must preserve the graph's structure by maintaining the presence and absence of edges between corresponding vertice pairs.\nFor this task, we utilize the VF3 algorithm (Carletti et al. 2017), which has been shown to offer high efficiency and accuracy in graph pattern matching (Carletti et al. 2020).\nFollowing the graph pattern matching, the mathematical constraints verification ensures that the mathematical attributes A of the mapped vertices meet the specific conditions required for the theorems to be applied. Each mathematical constraint ci \u2208 C is evaluated as follows:\nC(M(Vp)) = \n{\nTrue ifi(A(M(Vp))) = 0\nFalse otherwise   (2)\nwhere M(Vp) denotes retrieving the mapped vertices from Vg based on the mapping function M, A(\u00b7) denotes obtaining the mathematical attributes of vertices from A, and fi(\u00b7) denotes evaluating the i-th algebraic function of C.\nThe overall mathematical constraints verification C is determined by the logical conjunction of all constraints ci:\nC(M(Vp)) = \n\u220f\ni=1\nci(M(Vp))   (3)\nIf any constraint ci fails, C outputs False, indicating that the theorem cannot be applied to the current state. The visual constraints verification follows a similar process, with ci \u2208 C and A replaced by \u0109i \u2208 \u0108 and \u00c2 respectively. When graph pattern matching, mathematical constraints verification (for proving models), and visual constraints verification all succeed, the graph model is considered successfully matched. The geometric relation template is instantiated using M for solution presentation, denoted as R(M(Vp)).\nOperations Application (Step 2 and 4). Once the model matching process is successful, specific operations are executed depending on the type of graph model.\nFor the proving model, graph expansion is performed based on the mapping M established during the model matching, resulting in a new global hologram Gg:\nGg\u2032 \u2190 Gg + \u2206G(M(Vp))   (4)\nwhere \u2206G(M(Vp)) denotes the set of graph expansion operations applied to Gg.\nFor the property model, variables of equations E are replaced with the actual mathematical attributes of Vg from A:\n\u0190 = {ei \u2208 E | ei = gi(A(M(Vp)))}   (5)\nwhere gi() denotes replace variables of the i-th equation in E. The generated set of equations \u0190 is then added into the equation set Etotal = Etotal \u222a\u0190 for the equations solving process.\nEquations Solving and Attributes Update (Step 5). The set of equations Etotal is solved to find the unknown values. The solution is then used to update the mathematical attributes in Gg. If the updated mathematical attributes satisfy the problem target \u03c4, the reasoning process concludes. Otherwise, the reasoning process continues iteratively.\nEnhanced Model Selection. In HGR, a critical challenge is efficiently selecting the appropriate graph models to match. A naive method would involve employing a heuristic strategy to exhaustively search through all graph models, but this method becomes inefficient as the complexity and number of graph models increase.\nTo address this, we design a model selection agent that implements deep reinforcement learning to select the graph model at each reasoning step. The objective is to find a deterministic policy \u03c0 : s \u2192 \u03c0(s) = a that maximize the expected cumulative rewards:\n\u03c0\u2217 = argmax\n\u03c0\n\u2211\nt=0\n\u221e\nEt[r(st, at)]   (6)\nwhere r(st, at) is the reward of obtained at step t for taking action at in state st, and \u03c0\u2217 is the optimal policy.\nIn the implementation, the state s is represented by the global hologram Gg and the action a is represented by selecting the graph model m\u2208 M. The GraphTransformer"}, {"title": "Experiments", "content": "Datasets and Evaluation Metrics\nDatasets. The experiments are primarily conducted on Geometry3K (Lu et al. 2021), a comprehensive dataset designed for evaluating geometry problem-solving systems. Geometry3K consists of 3,002 SAT-style APGDs. Each problem in the dataset is presented as a single-choice question with four choices, accompanied by problem text, a geometric diagram, and explicit parsing annotations in a formal language. The problems cover a wide range of geometric shapes, including lines, triangles, circles, quadrilaterals, and other polygons, providing a robust benchmark for evaluating the performance of problem solvers.\nEvaluation Metrics. To evaluate the performance in solving APGDs, two primary metrics are used: 1) accuracy: the accuracy is determined by whether the numerical result produced is closest to the correct answer among four choices. In cases where the method fails to produce a numerical result, a random selection is made; 2) reasoning steps: the average number of geometric theorems applied to generate the solution. For HGR, theorems are counted by the number of successful graph model matches. Additionally, the count includes the number of geometric relations and equations generated, represented as a combined metric: theorems / relations / equations.\nBaselines\nHGR is compared against several baseline methods recognized for their effectiveness in solving APGDs. FiLM (Perez et al. 2018) is used for visual reasoning on abstract images, adapted for APGD solving. Enhanced versions, FiLM-BERT (Devlin et al. 2019) and FiLM-BART (Lewis et al. 2020), incorporate BERT and BART encoders to improve performance. Both Inter-GPS (Lu et al. 2021) and GeoDRL (Peng et al. 2023) utilize the same symbolic system for solving APGDs, with Inter-GPS employing deep learning and", "Algorithm 1": "Algorithm 1: Iterative Reasoning Process with Different\nModel Selection Strategy\nInput: Global hologram Gg, model selection strategy\n(Heuristic or Agent)\nParameter: Graph models pool M = Mprov \u222a Mprop\nOutput: Problem target T"}, {"title": "Evaluation", "content": "The evaluation of HGR's accuracy on the Geometry3K dataset, as detailed in Table 1, demonstrates its superior capabilities in solving APGDs compared to baseline methods. Specifically, HGR achieves an overall accuracy of 68.7%, which improves to 89.6% when using Ground Truth (GT) parsing results. This performance is comparable to the state-of-the-art GeoDRL model and surpasses Inter-GPS, particularly in solving problems related to area calculations or circle type.\nIn terms of efficiency, HGR outperforms the baselines by requiring fewer reasoning steps on average. As shown in Table 2, HGR requires only 2.26 average steps compared to 2.37 for GeoDRL, highlighting its effectiveness in generating concise and accurate solutions.\nAblation Study\nIn the ablation study, we evaluated the impact of various components in HGR on Geometry3K. As presented in Table 3, the results demonstrate the significance of each component. The removal of the model selection agent results in a notable decrease in overall accuracy from 89.6% to 83.4%, while also increasing the average reasoning steps", "Discussion": "Interpretability of HGR. Table 4 compares the interpretability of various APGD solvers, showing that HGR offers the most comprehensive interpretability. UniGeo (Chen et al. 2022), as a neural method, is only capable of generating the final computational sequence, lacking detailed intermediate explanations. Inter-GPS and GeoDRL, while utiliz-"}, {"title": "Conclusion and Future Work", "content": "This paper has presented HGR, a high-performance method for solving APGDs in which the hologram reasoning scheme played the main contribution in improving solving accuracy and computing efficiency and enhancing the interpretability of the solution. During this process, this paper has three technique contributions. First, it proposed the hologram and the method of converting a given APGD into a hologram, which possesses the excellent property that a procedure can acquire all the relations from it for solving the problem. Second, it proposed a model-matching method to acquire the relations from the hologram and it prepared a pool of graph models for acquiring relations. Third, it proposed a deep reinforcement learning method to select models from the pool to speed up the model matching process.\nThree future works can be done on the base of this paper. First, the method presented in this paper can be improved in hologram construction and relation acquisition from hologram. Second, we want to transfer the hologram reasoning into other types of problems. Third, we want to integrate the method for solving APGDs and the method for solving word algebra problems into a uniform method."}]}