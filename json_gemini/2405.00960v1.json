{"title": "Foundations for Digital Twins", "authors": ["Regina HURLEY", "Dan MAXWELL", "Jon MCLELLAN", "Finn WILSON", "John BEVERLEY"], "abstract": "The growing reliance on digital twins across various industries and domains brings with it semantic interoperability challenges. Ontologies are a well-known strategy for addressing such challenges, though given the complexity of the phenomenon, there are risks of reintroducing the interoperability challenges at the level of ontology representations. In the interest of avoiding such pitfalls, we introduce and defend characterizations of digital twins within the context of the Common Core Ontologies, an extension of the widely-used Basic Formal Ontology. We provide a set of definitions and design patterns relevant to the domain of digital twins, highlighted by illustrative use cases of digital twins and their physical counterparts. In doing so, we provide a foundation on which to build more sophisticated ontological content related and connected to digital twins.", "sections": [{"title": "1. Introduction", "content": "The concept of digital twins was first introduced by NASA during the 1960s as part of the Apollo 13 program [1], but decades would pass before the first documented definition was offered by Grieves in 2003 [2]. Grieves envisioned digital twins to be sophisticated virtual representations of physical systems which receive real-time updates from those systems. Digital twins, on this understanding, are used to track, evaluate, and assess physical assets or collections of them. While this characterization has been influential, digital twins have evolved considerably alongside numerous technological and methodological achievements. For example, the emergence in the past decades of the Internet of Things (IoT) brought with it a need for efficient, secure, interactions across interconnected network devices and software systems [3]. Accordingly, researchers observed the value of creating digital twins not only for physical assets and manufactured goods [4], but also manufacturing processes [5], business logic [6], and the environment [7]. Digital twins have seemed to many a path towards more sophisticated integrations of technologies, frameworks, products, and so on. Indeed, the global digital twin market is expected to top 73 billion by 2027, with companies such as Meta and Nvidia capitalizing on this technology [8]. As with any data-driven endeavor, the specter of semantic interoperability looms over digital twins. A 2020 report by The National Institute for Standards and Technology (NIST) estimated, for example, costs emerging from the lack of interoperability across industrial datasets as between 21-43 billion [9]. Leveraging digital twins in this environment runs the risk of exacerbating the already significant interoperability costs. On the one hand, ambiguity over what counts as a \"digital twin\" results in what we might call social or communicative interoperability challenges [10, 11]. On the other hand, differing data formats, coding standards, and parochial jargon result in well-known technical interoperability challenges [12]. Symptomatic of each is the presence of data silos [13], data sets representing nearby domains that cannot be easily integrated using standard computing techniques. Because digital twins heavily rely on the integration and synthesis of real-time data from disparate sources, data silos are particularly problematic in this context. Achieving meaningful data exchange using digital twins requires overcoming the communicative and technological hurdles that underwrite data silos across researchers and application groups.\nOntologies - controlled vocabularies of terms and logical relationships among them - are a well-known resource for addressing semantic interoperability challenges [12]. Ontologies have been leveraged to support data standardization, integration, machine learning, natural language processing, and automated reasoning [15, 16] in fields such as biology and medicine [16] and proprietary artificial intelligence products, such as Watson [17] and Siri [18]. IoT researchers are well-aware of the benefits of ontologies [19, 20] and digital twin initiatives are not far behind, as evidenced by the World Avatar digital twin project [21] among others [22]. If pursued without oversight, however, combining digital twins and ontologies can easily recreate semantic interoperability problems [13, 23]. This occurs, for instance, when ontologies representing content specific to digital twins are created without reflection on how they might integrate with ontologies covering nearby domains.\nDecades ago, recognition of such undesirable consequences led to the creation of ontology 'foundry' efforts [24, 25] aimed at creating ontologies in accordance with common standards. Among the principles underwriting most ontology development is that ontologies must extend from a common top-level architecture: Basic Formal Ontology (BFO). BFO [13, 26] is a highly-general ontology designed to contain classes and relations representing content common to all areas of research and investigation \u2013 e.g. object and process. BFO is also designed to be extended to more specific domains, and as such is used in over 600 ontology initiatives, providing a rich ecosystem covering areas such as biomedicine, manufacturing, defense and intelligence, and education, to name a few. We maintain that the best strategy for leveraging ontologies to address semantic interoperability challenges arising from digital twins will be one that leverages BFO. To that end, in what follows we explore common definitions of \"digital twin\" and identify themes and issues with the goal of constructing an ontologically precise definition for this expression and nearby phenomena. We employ an extension of BFO \u2013 the Common Core Ontologies [27] suite as a foundation on which to construct our definitions, with a particular emphasis on information design patterns characteristic of the suite. In doing so, we provide a firm ontological foundation on which to construct more sophisticated representations of digital twins within the BFO ecosystem."}, {"title": "2. Definitions of \u201cDigital Twin\"", "content": "Many definitions of \"digital twin\" have been proposed, reflecting a desire among researchers for clarity around the phenomena [28]. Exploring the range of extant definitions reveals common themes as well as challenges.\nA theme across most definitions is treatment of digital twins as information or virtual entities designed to represent some physical entity or system; another is that digital twins be designed for synchronization with some physical entity represented. While important, defining \"digital twin\" as requiring such interaction excludes digital twins that have been created in, say, anticipation of the manufacturing of the corresponding physical entity. However, digital twin \u201cprototypes\" are frequently created as blueprints for the physical entities they will ultimately represent [29].\nDefinitions differ with respect to scope, some being narrower than others [10]. For example, the restriction to physical manufactured products in definition A excludes digital twins of human bodies [30] and Earth [7], among other natural entities. Similar remarks apply to definitions B, E, F, and G. Definition A is, moreover, too exclusive in another sense, as it requires digital twins \"fully\" describe a physical entity across all levels of granularity; no digital twin can be so complete.\nDigital twins are fundamentally virtual representations but are often confused or conflated with nearby or related entities [31, 32]. The often conflated with \u201cdigital shadows\", but the latter merely provide a copy of a physical state of a given system without reflecting real-time updates. Similar remarks apply to conflation with \"product avatars\" [33] or \u201cVirtual Factory Data Models\" [30]. Moreover, definitions B, H, and I subsume digital twins under \"simulation\". While digital twins and simulations share much in common [34], they differ insofar as simulations are often snapshots of a system state used for prediction and analysis, while digital twins are synchronized for real-time evaluation. Definition D exhibits a different issue, as it appears to define digital twins circularly, i.e. as \u201cdigital replicas.\u201d Lastly, definition G suggests that digital twins are the combination of a virtual representation and the physical entity represented, which runs the risk of conflating a synchronizing system and one of its parts."}, {"title": "3. Ontological Characterization of Digital Twins", "content": "The Common Core Ontologies (CCO) suite extends from BFO and so inherits its methodological commitments [26]. CCO ontologies aim to represent entities in reality, rather than merely concepts about them, and are also designed to contain annotations, labels, and definitions reflecting intuitive natural language semantics concerning entities within scope. As an extension of BFO, CCO provides a bridge from the highly general, rather abstract, top-level to the more specific content relevant to digital twins [27]. In what follows, we will introduce ontology elements from BFO and CCO where needed to articulate our characterization of digital twins.\n\nDigital twins are plausibly described as information; in CCO terms, they fall under the class , a subclass of the BFO class , where one finds entities that may be copied across bearers. Distinct computer monitors could bear any of the following distinct patterns: '\u03c0', 'pi', '3.14...', or \u20183.14159265358979323...', and all of these would convey the same information. In each case that information is said to generically depend on respective computer monitors, which we call when they enter such a relation. Because in every case generically depend on some , a given digital twin might be said to generically depend on some computer hardware. Dependence in this context being such that if all relevant computer hardware were to cease to exist, then all corresponding digital twins would cease to exist as well. An immediate corollary is that the same instance of a digital twin can depend on multiple computer hardware instances as copies.\n\nDigital twins often represent some existing physical entity. A digital twin might, however, serve as a prototype that prescribes how a physical entity might be manufactured in the future. Noting this, Grieves and Vickers distinguish between Digital Twin Instance (DTI) \u2013 which describes a physical product to which a digital twin remains linked throughout the life of the product and Digital Twin Prototype (DTP) information needed to produce a physical product meeting the specifications of a digital twin [2]. Table 3 displays how we may respect this distinction by leveraging specializations of information content entity which characterize information that is prescriptive \u2013 such as the information comprising a blueprint \u2013 or representational \u2013 such as the content of a photograph. DTIs are plausibly understood as at least representational, and so falling under in CCO. represent in a variety of ways. For example, the content of a painting of Napoleon Bonaparte represents the former emperor since the content generically depends on the painting which in turn bears some similarities to Napoleon. Similarly, a digital twin represents some physical entity insofar as it generically depends on computer hardware that bears similarity to that physical entity. Appeal to \u201cisomorphism\" in the definition of is understood as relative to the type of entities involved. In other words, an isomorphism for one pair of entities need not share much in common with an isomorphism between a distinct pair of entities. The arrangement of Napoleon's body parts in a painting by Jacques Louis David was meant to reflect the actual arrangement of his body; the arrangement of computer hardware circuitry on which a digital twin generically depends is not obviously, in contrast, meant to reflect the arrangement of parts of the corresponding physical entity. Nevertheless, there exists some manner of isomorphism between the circuitry and the corresponding physical entity, such that were the circuitry to be physically altered in some manner then the resulting digital twin might no longer represent the physical entity.\nDTIs need not be solely representational. A given DTI may, for example, have parts that describe or prescribe other entities. For example, the digital twin of Truist Park [44] includes descriptions of historical baseball players as well as directions for how to navigate the park. In this respect, the digital twin both represents the park as a whole while having parts that are not merely representational.\nIn contrast to the preceding, DTPs do not have any corresponding physical entity they may properly be said to represent. In CCO, the relation holds between instances.\u00b3 If there is no instance for a DTP to represent, then that DTP cannot be a representational information content entity. This seems the right result since DTPs are better understood on the model of plans or blueprints rather than as representational entities. In CCO, prescriptive entities of this sort fall under the class , which in every case prescribe some instance. While this intuition seems correct, our path forward is once again blocked. In our envisioned scenario, there is no instance that a DTP can be said to prescribe.\nThe issue we are encountering is not new. There are known challenges to characterizing what unrealized plans and blueprints are about in BFO and CCO [45]. CCO maintains an extension \u2013 the Modal Relations Ontology (MRO) [43] \u2013 that was developed to partially address this issue. To that end, MRO introduces modal object property and creates duplicates for every relation in CCO as sub-relations; users can then"}, {"title": "3.2 Counterparts of Digital Twins", "content": "DTIs have in every case some counterpart, for example, the real-world wind turbine represented by a wind turbine digital twin. DTIs should not be restricted to physical entities though, as researchers often construct digital twins for manufacturing [40] and design processes [12, 46]. Relevant here is that CCO adopts BFO's fundamental division between occurrent and continuant. Occurrents are extended over time and have temporal parts, such as eating or walking, each of which is an example of the process subclass of occurrent. Instances of continuant lack temporal parts, endure through time, and participate in instances of occurrent. CCO extends process to a variety of process types, such as natural processes, agential acts, mechanical processes, and so on. CCO and BFO thus provide the resources needed to distinguish physical counterparts from process counterparts of digital twins.\nBecause one may create a digital twin to represent or prescribe just about any sort of process, it would be unwise to introduce an ontology class such as 'process digital twin' which contains all such process counterparts, since such a class might collapse into process. There is nevertheless a need to connect digital twins, where possible, to relevant counterparts. Our strategy is to introduce sub-properties of represents reflecting representation, tracking, and synchronization. Specifically, we introduce with range process. Similarly, we introduce since physical counterparts of DTIs plausibly fall under the BFO continuant subclass , instances of which have matter as parts. CCO provides resources to draw a further distinction between artifacts, material entities that have been designed to achieve some function, and environmental features, material entities such as rivers, wind, Earth, and so on. This is an important distinction to draw noting that DTIs may have manufactured and engineered counterparts, i.e. artifacts, as well as natural phenomena counterparts, i.e. environmental features.\nOur proposal thus provides ontological resources for distinguishing among the wide variety of digital twin counterparts, whether natural, manufactured, or processual. Moreover, because material entities often participate in processes, there is a clear line connecting digital twin representing processes to digital twins representing the physical entities that participate in them."}, {"title": "3.3 Twinning", "content": "Digital twins are often updated with real-time information about changes in the corresponding physical counterpart. Alterations to counterparts can be accounted for in CCO using the class , roughly, a process in which a continuant gains or loses one or more properties. CCO contains a rich hierarchy reflecting varieties of such gains and losses. For example, if a vehicle participates in an increase of its thermal energy, this amounts to a in which one temperature quality of the vehicle is replaced by another.\nGain or loss of properties is not the only way in which physical counterparts might change. For example, a wind turbine plausibly participates in a change when one of its fan blades is replaced by another. This involves the replacement of a material part of the turbine, rather than the replacement of its properties. Following CCO, this manner of change can be captured by observing that the change of material parts of a physical counterpart will in every case involve a change in properties. The wind turbine initially, say, had a worn blade that is later, say, replaced by a fresh blade. Properties may come and go while the material parts of a given physical counterpart remain; but change of physical part leads to change of properties.\nChanges to digital twins owing to changes in physical counterparts involve an update process through which the digital twin receives an instigating signal triggered by a change in the physical counterpart. Supposing a given sensor system is working correctly, a change in a physical counterpart will initiate a signal-sending process, during which a signal will be sent to and received by the corresponding digital twin. Because the digital twin is an information content entity, updating the digital twin requires updating the computer system on which it generically depends. Like the physical counterpart of the digital twin, updates to the computer system can be represented as a during which properties are gained or lost. For example, suppose a decelerating vehicle is the physical counterpart of a digital twin that is updated with information regarding velocity. Circuitry within the relevant computer hardware participate in some during which qualities of the hardware are replaced with others. The corresponding digital twin that generically depends on the hardware may then have updated parts, such as a descriptive information content entity that describes the velocity of the vehicle as decelerating."}, {"title": "3.4 Fidelity as Granularity Partitions", "content": "When constructing a digital twin, there is an immediate need to identify the degree of fidelity desirable between the virtual representation and what it represents. The degree to which a digital twin mirrors its physical counterpart trades on a balancing act between the cost of creating and maintaining a digital twin compared to how the virtual representation is to be used [10, 11]. Digital twin development is often pursued in an iterative manner, where sub-components of the twin are added or refined in response to changes in the physical counterpart. Additionally, the use of a given digital twin may change to emphasize different levels of fidelity and relationships among them. In either case, mereological relationships appear important for ontologically precise characterization of the phenomena.\nThe lines along which we characterize fidelity can be seen in the theory of granular partitions [47]. Suppose the digital twin of a vehicle has a part representing the vehicle's engine but does not represent any proper parts of the engine, such as its pistons or cylinders. We might think of this virtual representation of the engine as a granular partition or a projection onto a whole that does not project onto all of its parts [47]. In this case, the digital twin of the vehicle projects onto the steering wheel, front window, engine, and so on but does not project onto all proper parts of these objects.\nAs illustrated, a granular partition of the vehicle and its engine might not project onto all other parts of the vehicle, such as the front window. In this case, we might say the granular partition is selective, which is \"a partition does not project onto all objects\" within its scope [47]. illustrates a scenario in which a new material entity is added to the engine, namely, a piston where this addition is of interest for monitoring by a digital twin. From the perspective of granular partitions, this would be a proper refinement of the digital twin partition, in which \u201cthe object targeted by the root cell...remains the same\" [47]. Lastly, the root of the digital twin granular partition could itself be extended. illustrates such a case in which a given digital twin represents more than one vehicle, perhaps for the sake of modeling autonomous vehicles navigating by one another safely. We have thus extended the granular partition, where \u201cthe target of the original root cell is always a proper part of the extension's root cell\" [47]. Moreover, we observe that the relationships across granular partitions, namely, those of parthood, provide a means by which to explain connections within and across partitions. A digital twin of an engine has a digital twin of a piston as part under some granular partition specification because the material entity counterpart of the engine has a piston material part.\nWe observe that the fidelity of a digital twin can be characterized on the model of granular partitions, which provide a high-level guide for ways in which fidelity might change during the use of digital twins. Fidelity on our construal is best understood as a measurement of the types of information transferred between a digital twin instance and what it represents [48, 49]. This might include information regarding the digital twin counterpart's temperature, overall health, production capabilities, weathering capability, and so on. In each case, the degree of fidelity is relative to a granular partition of interest as contrasted with the granular partitions that are not of interest. For example, we might say the granular partition of the vehicle referenced above does not intuitively exhibit a high degree of fidelity, as can be seen in contrast to the granular partitions exhibited in other scenes.\nWe should take care, however, as fidelity cannot be obviously reduced to the number of parts and subparts of interest in a given granular partition. For example, a granular partition that covers the transmission of information regarding both the temperature and weight of an engine has a higher fidelity than a granular partition that covers only the transmission of temperature. This raises no special modeling problem, however. Just as, according to our ontological design patterns, the engine would be part of the vehicle, we can say that parts of the vehicle bear qualities such as temperature and weight. Moreover, different granular partitions will contain material entities that bear different qualities, much like different granular partitions contain material entities having different parts."}, {"title": "4. Conclusion", "content": "The growing reliance on digital twins across various industries and domains brings with it semantic interoperability challenges that ontology solutions are well-suited to address. Given the complexity of the phenomena and interest from so many different disciplines, there is significant risk of reintroducing interoperability challenges at the level of ontology representations. Our goal in this work has been to avoid such potential pitfalls by leveraging and aligning with Basic Formal Ontology and the Common Core Ontologies suite, for ontological characterization of digital twins and nearby entities of interest. In this respect, we envision this work to be foundational for more sophisticated ontological representations of digital twins within the BFO ecosystem. Additionally, what we describe is directly extendable to simulation and many other computer-based analytic techniques where machine to machine interoperability is critical. With that in mind, next steps involve working closely with subject-matter experts in various fields that employ digital twins, identify use cases against which to test our representations, and clarify verbal disputes around this topic while promoting semantic interoperability."}, {"title": "5. Code Availability", "content": "BFO is available on the BFO-2020 GitHub repository (https://github.com/BFO-ontology/BFO-2020); BFO is maintained under the CC BY 4.0 License. CCO ontologies are available on the CCO GitHub repository (https://github.com/CommonCoreOntology/CommonCoreOntologies); CCO is maintained under the BSD-3 License."}]}