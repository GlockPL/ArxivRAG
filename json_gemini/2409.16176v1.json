{"title": "Cyber Knowledge Completion Using Large Language Models", "authors": ["Braden K Webb", "Sumit Purohit", "Rounak Meyur"], "abstract": "The integration of the Internet of Things (IoT) into Cyber-Physical Systems (CPSs) has expanded their cyber-attack surface, introducing new and sophisticated threats with potential to exploit emerging vulnerabilities. Assessing the risks of CPSs is increasingly difficult due to incomplete and outdated cybersecurity knowledge. This highlights the urgent need for better-informed risk assessments and mitigation strategies. While previous efforts have relied on rule-based natural language processing (NLP) tools to map vulnerabilities, weaknesses, and attack patterns, recent advancements in Large Language Models (LLMs) present a unique opportunity to enhance cyber-attack knowledge completion through improved reasoning, inference, and summarization capabilities. We apply embedding models to encapsulate information on attack patterns and adversarial techniques, generating mappings between them using vector embeddings. Additionally, we propose a Retrieval-Augmented Generation (RAG)-based approach that leverages pre-trained models to create structured mappings between different tax-onomies of threat patterns. Further, we use a small hand-labeled dataset to compare the proposed RAG-based approach to a baseline standard binary classification model. Thus, the proposed approach provides a comprehensive framework to address the challenge of cyber-attack knowledge graph completion.", "sections": [{"title": "I. INTRODUCTION", "content": "The integration of the Internet of Things (IoT) into Industrial Control Systems (ICS) has enhanced their automation, efficiency, and productivity in the industrial environment through a seamless convergence of the information technology (IT) and operational technology (OT) domains [1]. The widespread adoption of the Industrial Internet of Things (IIoT) has also created opportunities for cyber attacks, leading to the exploitation of the confidentiality, integrity, and availability (CIA) of the service and/or data [2]. Some examples of such attacks include, but are not limited to, malware/ransomware attacks [3]-[5], distributed denial of service (DDoS) [6], phishing attacks [7], and supply chain compromise [8]. Such threats can pose significant risk to critical infrastructure and have severe consequences for safety, economy, and public well-being [9].\nTo understand how adversaries exploit vulnerabilities in cyber systems, the Common Attack Pattern Enumerations and Classifications (CAPEC), which are maintained by MITRE Corporation, serve as a publicly available catalog of cyber attack patterns [10]. Similarly, the MITRE Adversarial Tactics, Techniques, and Common Knowledge (ATT&CK) framework is another essential tool that offers a comprehensive knowledge base for cyber threats from real world observations [11]. This framework provides a taxonomy of adversarial motivations or goals (tactics) and a list of actions often taken to achieve those goals (techniques) in Enterprise, mobile, and ICS networks.\nThese two publicly available information repositories, CAPEC and ATT&CK, collectively contain a wealth of knowledge about cyber threats that could be invaluable to organizations seeking to model potential adversarial behavior, plan mitigation measures, or otherwise improve their cybersecurity infrastructure. Therefore, we developed a novel approach and capability to better understand and model the relationship between the two taxonomies and identify the ATT&CK techniques that correspond to each CAPEC attack pattern. While some cross-references currently exist for the Enterprise-oriented adversarial techniques in the MITRE ATT&CK framework, there are no such references for techniques in the ICS or mobile domains. A challenge to this integration is the lack of an automated framework which maps a CAPEC attack pattern to related ATT&CK techniques.\nThis integration is a daunting task. As of August 2024, there were 559 CAPEC attack patterns and 83 ATT&CK ICS techniques, for a combination of 46,397 possible mappings between the two repositories. Moreover, significant domain expertise is necessary to verify whether a given connection is valid, often requiring discussion between cybersecurity experts, system operators, and users. Since they are frequently updated, it is difficult to justify manually linking the two data sets.\nAlthough traditional machine learning classifiers might seem useful for identifying similar descriptions of attack patterns and techniques, most of these approaches require fairly structured input to learn representations. Almost all of the information describing a CAPEC attack pattern or ATT&CK ICS technique, however, is expressed in fields of unstructured text consisting of entry identifier, name and description.\nWe therefore turn to methodologies of natural language processing, where recent advances in large language models provide an opportunity to use artificial intelligence as a tool in automating the mapping task. In particular, many embedding models can algorithmically encode text strings as arrays of floating-point numbers in a high-dimensional normed vector"}, {"title": "II. RELATED WORK", "content": "Researchers have explored AI/ML approaches to automate the process of cyber knowledge alignment across different data sources. Random Forest [13], naive bayes classifier [14], and natural language-based similarity measures [15] has been used with limited success to align several MITRE repositories, including Common Vulnerabilities and Exposures (CVE), Common Weakness Enumeration (CWE), and CAPEC. Maunero et al. [16] use an ontology-based approach to automate the risk assessment process. These approaches suffer from a lack of ground-truth data required for model training and rule generation. In contrast, our previous work V2W-BERT [17] and Villanueva-Miranda et al. [18] have also demonstrated the use of encoder-only and encoder-decoder language models, such as BERT and Google T5, to automate the task of mapping between various cybersecurity databases with high accuracy. However, decoder-only large language models have greatly improved in recent years and have revolutionized the way they are used in few-shot learning applications with limited data. In this paper, we use state-of-the-art embedding models for this purpose and performed a comparison among them to identify which among them suits best for the task of cyber knowledge completion, and utilize a decoder-only LLM to refine their output."}, {"title": "III. METHODS", "content": "This section introduces mathematical notations used to describe the cyber-knowledge problem space and presents an embedding and mapping generation approach. We provide examples of the descriptive text contained within CAPEC attack patterns and ATT&CK ICS techniques, and use it to explain the methodology."}, {"title": "A. Preliminaries", "content": "Let $C = {c_1,...,c_N}$ be the set of N CAPEC attack patterns and $T = {t_1, ..., t_M }$ the set of M MITRE ATT&CK ICS techniques. We want to find the set of mappings $M\\subset C \\times T$ such that for each $(c, t) \\in M$, adversarial behaviors can be accurately described by both $c$ and $t$. We can represent this set by a function $f : C \\rightarrow P(T)$ from individual CAPEC attack patterns to sets of techniques, where $P(T)$ denotes the power set of T. A possible approximation for this function is to identify the best k choices of ICS techniques that can be related to a given CAPEC attack pattern, i.e., $f_k(C_i) = {t_{i1},...,t_{ik}}$, where $t_{i1},...,t_{ik}$ are the k ICS techniques that are most similar to $c_i$.\nWe can also model the problem in the reverse direction as the process of learning a function $g : T \\rightarrow P(C)$. Indeed, our methods work in both directions (although the asymmetry produces slightly different results). However, since the process is completely analogous, we focus on describing the \"forward\" direction $C \\rightarrow P(T)$ in the remainder of the paper."}, {"title": "B. Embedding Generation", "content": "Our approach to learn the mapping function between the CAPEC and ATT&CK taxonomies utilizes document embedding models. Specifically, we use transformer-based neural networks that produce fixed-length, dense representations of variable length documents-allowing us to compare the taxonomies quantitatively.\nWe prepare a description string for each CAPEC attack pattern and ATT&CK ICS technique by concatenating their name, ID, and description, as displayed in Fig. 1. An embedding model, \u03a6, then tokenizes each input description string to a list of tokens and transforms those tokens to a vector"}, {"title": "C. Mapping Generation", "content": "The next task is to use the vector embedding of the description strings of CAPEC attack patterns and ATT&CK ICS techniques to generate a mapping between the taxonomies, i.e., identify the list of k entries from one taxonomy that are most similar to a given entry from the other taxonomy. Here, we present two methods of generating the required mapping - (i) nearest-neighbour mapping, and (ii) RAG-based mapping. These are compared in Fig. 2. As we will show in this section, the RAG-based approach builds directly off the nearest-neighbor approach, refining its output to improve precision.\nNearest-Neighbor Mapping: Treating the direction of the vector embedding of the description string as indicative of its semantic meaning, we can approach our problem of identifying $f_k(C_i) = {t_{i1},...,t_{ik}}$ by evaluating the k-nearest neighbors of the CAPEC embedding $\\Phi (c_i)$ from the set of technique embeddings {\u03a6 (t1), \u03a6 (t2),\u2026\u2026, \u0424 (t\u043c)}. Formally, then,\n$f_{k,\\Phi}(C_i) = \\underset{J\\subset T:|J|=k}{argmax} \\sum_{t \\in J} \\Phi(c_i)\\cdot\\Phi(t)$,\nwhich is the set of k techniques that have the largest inner products with $\\Phi (c_i)$. At this scale, matrix multiplication makes this calculation easily tractable. As a result, for each choice of both embedding model and k, we have complete approximate mappings given by\n${(c,t): t \\in f_{k,\\Phi}(c)}$ and ${(c,t) : c\\in g_{k,\\Phi}(t)}$\nfor both the forwards (CAPEC to ATT&CK) and backwards (ATT&CK to CAPEC) directions. For notational convenience going forward, we will not write \u03a6(c) or \u03a6(t) each time we refer to the embedding of a CAPEC attack pattern or ATT&CK ICS technique. Instead we also use c ort to denote their embedded representation in $R^d$.\nThe nearest-neighbor embedding approach provides a baseline method of retrieving potential candidates for CAPEC-ATT&CK mappings, but suffers from filtering those candidates with precision. It also requires every CAPEC attack pattern (or ATT&CK ICS technique) to be linked to the same fixed number k of ATT&CK ICS techniques (or CAPEC attack patterns), when in reality the number of links might vary widely. Hence, we present a RAG-based mapping as an alternative to address these common problems.\nRAG-Based Mapping: We propose a method that improves upon the simple embedding-based retrieval method by utilizing LLMs in an approach similar to standard RAG techniques [22]. This RAG pipeline relies upon both an embedding model and a generative language model\u2014the nearest-neighbor mapping function $f_k$, is in fact the first step of the RAG pipeline. As shown in Fig. 2, an individual CAPEC attack pattern c is fed into the pipeline as input along with a parameter k, and the resulting techniques $f_k$, (c) are retrieved. While we did store the intermediate, low-dimensional embedded representations in a vector database, the taxonomies are currently small enough that all embeddings can alternatively be kept in memory. Once retrieved, the techniques are ranked according to their proximity to c, and then passed along to the LLM in a prompt. Because of the significant instability and sensitivity of LLMs to small changes in their inputs [23], prompt engineering is necessary to improve their robustness. We utilized the open-source 8B-parameter instruction fine-tuned variant of Meta's Llama 3 for this purpose [24].\nBecause a key desideratum of our research is to automate this mapping task, we also desired the outputs to be structured in a predictable, machine-accessible format. To this end, we"}, {"title": "IV. EVALUATION", "content": "The lack of any external ground truth data set for validating our results is a major roadblock in efforts to evaluate the efficacy of our methodology. Indeed, this data-scarcity problem is a key aspect of the very problem we seek to address\u2014and this is reflected in our test set. We hand-crafted this sample by manually labeling a set of what we determined to be corresponding CAPEC attack patterns and ATT&CK ICS techniques. While we sought to obtain a representative sample of both taxonomies, the selection process was not entirely random. Several CAPEC attack patterns were chosen because they were either (i) classified as being 'meta'-level abstractions or (ii) listed by MITRE among patterns that could be relevant to industrial control systems. However, it is quite possible that there are other, equally relevant ATT&CK ICS techniques for any one of those CAPEC attack patterns. Moreover, it is highly unlikely that each of the CAPEC attack patterns chosen to generate the test set should map to the same number k of ATT&CK ICS techniques (and indeed, for a given c\u2208 C, the size of the set given by {t : (c,t) \u2208 G} varies between 0 and 5). For these reasons, we explicitly tried to get as broad of a range of patterns and techniques included in the data set as possible and developed novel metrics to gain better insight into pipeline performance.\nDue to the many-to-many relationship that should exist between the CAPEC database and the MITRE ATT&CK framework, we determined to evaluate our approach as a standard classification model. In general, important performance metrics for a classification algorithm include:\n\u2022 accuracy the ratio of correct classifications (both positive and negative) to all possible classifications\n\u2022 recall - the ratio of correctly retrieved relevant instances (true positives) to all relevant instances\n\u2022 precision the ratio of correctly retrieved relevant instances (true positives) to all retrieved instances\n\u2022 F\u2081-score the harmonic mean of precision and recall, given by\n$F_1 = 2 \\times \\frac{precision \\times recall}{precision + recall}$\nIn order to make inferences about a larger population, or for reasons of computational efficiency, these metrics are usually calculated on a test set of randomly sampled data points rather than on the entire space of possibilities.\nWe provide these same metrics in the language of our problem, but due to insufficiencies in our test set, we also define notions of coverage and a false mapping ratio. Since many of the methods we discuss involve computing various 1- to-k mappings from CAPEC attack patterns to ICS techniques, these metrics allow us greater insight into how often, on average, a given function maps individual attack patterns to at least one of their associated techniques, as well as how often we should expect false positives among our retrieved mappings. The metrics can also be reversed to apply analogously for mappings from ATT&CK space to CAPEC space."}, {"title": "A. Metric Definitions", "content": "Let C be the set of all CAPEC attack patterns and T the set of all MITRE ICS techniques. We consider mappings M, G C C \u00d7 T, where M is the mapping we wish to evaluate, and G is the labeled set of ground-truth mappings. In other words, G denotes a mapping such that for each pair (c, t) \u2208 G, the CAPEC attack pattern c truly does correspond to t. We can then define\n$recall_G(M) = \\frac{|M \\cap G|}{|G|}$\nand\n$precision(M) = \\frac{|M \\cap G|}{|{(c_i, t_z) \\in M : \\exists t \\in T, (c_i, t) \\in G}|}$\nIn essence, when calculating the precision of M given G, we only want to evaluate M over the CAPEC attack patterns considered in G.\nIt is therefore natural to define the F-score (or $F_1$-score) of M given G as"}, {"title": "V. RESULTS", "content": "Table II compares the two proposed mapping methodologies-nearest neighbor mapping and RAG-based mapping\u2014from CAPEC attack patterns to ATT&CK ICS techniques, while Table III compares performance from ATT&CK to CAPEC. We compare four embedding models for each mapping: E5-large-v2 (listed as 'e5' in the tables) [20], instructor-large (listed as 'instructor') [21], all-MiniLM-L6-v2 (listed as 'sent-transf') [12], and text-embedding-ada-002 (listed as 'ada-002') [19]. The models are evaluated for mapping performance using standard metrics like Recall, Precision, and F-Score, as well as the new metrics introduced in section IV, namely Coverage and the FMR. The best results are highlighted in bold. By placing the symbols \u2191 and \u2193 next to the metric names, we indicate the direction in which an improvement is represented. We consider 1-5 nearest mapped ATT&CK techniques for each CAPEC in order to evaluate the mapping between elements of the two frameworks.\nThe key findings for the mapping from CAPEC attack patterns to ATT&CK ICS techniques shown in Table II can be listed as follows: (i) RAG-based mapping generally outperforms nearest neighbor mapping in terms of precision and F- score across most embedding models, indicating more accurate mapping predictions. (ii) Coverage increases consistently as we move from 1-to-1 to 1-to-5 mappings for both methods. This means that considering more nearest neighbors allows for more elements to be mapped, though it may also increase false positives. This can be validated from the FMR scores, where we see that for each embedding model, the FMR tends to increase ask increases. Recall that a lower FMR indicates fewer incorrect mappings. (iii) instructor-large and text-embedding-ada-002 exhibit stronger performance in precision and F-score in both mapping methodologies, particularly in the RAG-based approach. E5-large-v2 performs consistently weaker compared to other models, with lower recall and F-scores in both methodologies. Therefore, text-embedding-ada-002 and instructor-large should be preferred as top choices of embedding model for this task.\nThe key findings for the mapping from ATT&CK to CAPEC shown in Table III can be listed as follows: (i) The performance generally improves as the number of nearest neighbors k increases from 1 to 5 for all embedding models and mapping methodologies. (ii) The FMR tends to increase with the number of neighbors k, indicating a trade-off between coverage and false-positive matches. We note this holds only for the nearest neighbor mapping method. (iii) The RAG-based mapping typically outperforms thenearest neighbor mapping across most metrics. We note higher precision, coverage and F-scores for high k values, while the FMR values are lower, indicating the superiority of RAG-based mapping for this task. (iv) The text-embedding-ada-002 model shows the highest coverage, reaching 100% for k \u2265 2 with both mapping methods, denoting it to be the best choice of embedding model for this mapping task.\nA significant challenge in evaluating mapping methodologies between data sets, such as CAPEC attack patterns and ATT&CK ICS techniques, is the lack of labeled ground truth dataset. Without a comprehensive, annotated mapping of relationships between these frameworks, it is difficult to assess the true accuracy of various predictive mapping models. Community-driven efforts are essential to address this gap by creating and maintaining a labeled data set that defines the relationships between CAPEC and ATT&CK. Such initiatives would not only enrich the cybersecurity knowledge graph but also provide a critical resource for data-driven approaches aimed at automating the mapping process. The availability of a well-labeled ground truth would enable researchers and practitioners to validate new methodologies, refine existing models, and improve the overall accuracy of threat detection and defense strategies within the cybersecurity landscape."}, {"title": "VI. CONCLUSION", "content": "This study presents a comprehensive evaluation of mapping methodologies between two distinct taxonomies, leveraging both nearest neighbor and RAG-based approaches across multiple embedding models. The results consistently demonstrate that RAG-based mapping outperforms nearest neighbor mapping in terms of precision, F-score, and the ability to reduce incorrect mappings, as evidenced by lower FMR scores. Among the embedding models, instructor-large and text-embedding-ada-002 achieve the highest mapping accuracy, particularly when larger sets of neighbors are considered (1- to-5 mappings). Conversely, the E5-large-v2 embedding model consistently underperforms across both methodologies. These findings highlight the importance of selecting both an appropriate mapping strategy and embedding model when tackling the similarity-based mapping problem between elements of the CAPEC and ATT&CK frameworks.\nFuture work will focus on refining these approaches through fine-tuning the LLMs to further reduce false mappings and improve scalability. Additionally, incorporating more advanced"}]}