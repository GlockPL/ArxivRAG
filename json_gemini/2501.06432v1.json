{"title": "Deep Learning on Hester Davis Scores for Inpatient Fall Prediction", "authors": ["Hojjat Salehinejad", "Ricky Rojas", "Kingsley Iheasirim", "Mohammed Yousufuddin", "Bijan Borah"], "abstract": "Fall risk prediction among hospitalized patients is a critical aspect of patient safety in clinical settings, and accurate models can help prevent adverse events. The Hester Davis Score (HDS) is commonly used to assess fall risk, with current clinical practice relying on a threshold-based approach. In this method, a patient is classified as high-risk when their HDS exceeds a predefined threshold. However, this approach may fail to capture dynamic patterns in fall risk over time. In this study, we model the threshold-based approach and propose two machine learning approaches for enhanced fall prediction: One-step ahead fall prediction and sequence-to-point fall prediction. The one-step ahead model uses the HDS at the current timestamp to predict the risk at the next timestamp, while the sequence-to-point model leverages all preceding HDS values to predict fall risk using deep learning. We compare these approaches to assess their accuracy in fall risk prediction, demonstrating that deep learning can outperform the traditional threshold-based method by capturing temporal patterns and improving prediction reliability. These findings highlight the potential for data-driven approaches to enhance patient safety through more reliable fall prevention strategies.", "sections": [{"title": "I. INTRODUCTION", "content": "Fall risk assessment is a critical process in healthcare, aimed at identifying hospitalized patients who are at higher risk of falling during their stay [1]. This assessment typically involves evaluating a combination of factors such as age, mobility, mental status, use of certain medications, and previous fall history. Tools like the Hester Davis Score (HDS) are widely employed to quantify fall risk based on these factors, allowing healthcare providers to classify patients into low, moderate, or high-risk categories [2], [3]. By accurately identifying high-risk patients, hospitals can implement preventive measures, such as increasing monitoring, modifying the patient's environment, or providing assistive devices to prevent falls. Effective fall risk assessment is key to improving patient safety, reducing fall-related injuries, and minimizing healthcare costs associated with prolonged hospital stays and related complications [1], [4].\nThe HDS is a widely used tool in clinical settings for fall risk evaluation, offering a structured and standardized scoring system that assesses key factors such as age, mental status, mobility, medication usage, continence, recent fall history, and behavioral tendencies. Each factor is assigned a weighted score based on its contribution to fall risk, producing a cumulative score that categorizes patients into risk levels. The HDS allows for near real-time reassessment, as it incorporates both static and dynamic characteristics of the patient. This facilitates timely interventions, such as bed alarms or increased supervision, to mitigate fall risks in hospitalized patients [5].\nDespite the utility of the HDS and other threshold-based models, these approaches often fail to capture the evolving risk patterns over time. They rely on instantaneous values to trigger preventive measures, which may not reflect the subtle, progressive changes in a patient's condition. To address this limitation, machine learning models can offer a more dynamic and data-driven approach to fall risk prediction by incorporating the sequential pattern in the data. Similar approaches have been proposed for other challenges in healthcare, such as early warning systems [6], [7], hypertension detection [8], and human activity recognition [9], [10].\nMachine learning, and particularly deep learning, has demonstrated superior performance in a variety of healthcare applications, from COVID-19 lung prognosis detection using chest computed tomography (CT) scans [11], to cervical spine fracture detection [12], and in-hospital mortality prediction among diabetic intensive care unit (ICU) patients [13]. In fall prediction, these models can be used to analyze complex, non-linear interactions between clinical variables, offering enhanced predictive power.\nIn this paper, we model the traditional threshold-based fall risk assessment approach using HDS and propose two machine learning-based alternatives: One-step ahead fall prediction and sequence-to-point fall prediction using deep learning. The former uses the HDS at a given time to predict fall risk at the next timestamp, while the latter leverages all preceding samples in a time series to forecast fall events. Sequence-to-point prediction is particularly important, as it captures the entire sequence of events leading up to a fall, allowing the model to identify temporal patterns and trends that threshold-based methods might overlook. For example, a gradual increase in HDS values over time may signify rising fall risk, even if the individual scores do not exceed predefined"}, {"title": "II. FALL PREDICTION MODELS", "content": "In this section, fall prediction using HDS is mod- eled in two schemes, as illustrated in Figure 1. Let Xn = (Xn,1, ..., Xn,t, ..., Xn,T) represent T HDSs of an individual n \u2208 {1, ..., N} from admission to discharge, where t+1 is a prediction timestamp, T is the total number of retrospective samples, and N is the total number of individuals. The HDSs of patients are calculated every \u2206T hours. In the One-step ahead fall prediction scheme, in order to make a prediction for an individual n at the future timestamp tn + 1, the last HDS Xn,tn is used. In the sequence-to-point fall prediction scheme, the entire HDS samples (xn,1,..., Xn,tn) since admission, are used to make a prediction for an individual n at the future timestamp tn + 1."}, {"title": "A. One-Step ahead Fall Prediction", "content": "The current clinical practice approach involves comparing the HDS to a predefined threshold. In this section, we mathematically model this approach and then propose machine learning models to learn from the HDS at the current times- tamp t in order to predict the outcome at the subsequent timestamp t + 1.\n1) Threshold-based Method: Most clinical providers use an absolute number threshold @ to determine if a patient is at a high risk of fall and needs extra care and increased monitoring. In this approach, if at any time t the HDS value In,t for patient n exceeds the threshold 0, the patient is classified as high-risk for falls, defined as\n$Y_{n,t+1} = \\begin{cases}\n1 & \\text{if } X_{n,t_n} \\geq \\theta \\\\\n0 & \\text{otherwise}\n\\end{cases}$,\nwhere yn,t+1 = 1 means the patient n is at high-risk of fall at the future timestamp tn + 1 and \u1ef9n,t+1 = 0 means otherwise.\n2) Machine Learning Methods: It is possible to build a binary fall prediction model about the fall outcome at a future timestamp t + 1 based solely on the current available HDS sample Xn,t. The task is to predict a binary label Yn,t+1 \u2208 {0,1} at time t + 1, using only the value of Xn,t, the sample immediately preceding t + 1. For each sample xn,t in the retrospective dataset, we pair it with a corresponding label yn,t+1, which represents the outcome at the next time step. The prediction model is built using a binary classifier $(xn,t)$, which maps each Xn,t to a binary outcome \u1ef9n,t+1 as\n$\\tilde{Y}_{n,t+1} = \\phi(x_{n,t})$,\nwhere the training set consists of N 1 pairs {(X1,t, Y1,t+1), ..., (XN\u22121,t, YN\u22121,t+1)} and each Xn,t serves as a feature to predict the binary outcome Yn,t+1. The classifier is trained to minimize the prediction error by adjusting its parameters to best capture the relationship between the single time series sample In,t and the next time step's binary fall label. Various machine learning models such"}, {"title": "B. Sequence-to-Point Fall Prediction", "content": "Sequence-to-point fall prediction", "Networks": "The RNNs are one of the popular methods to model sequential dependencies within time series", "15": "let Xt represent a HDS at time t for an individual without loss of generality. The RNN processes each time series up to time step t to predict whether a fall occurs at time t + 1. The hidden state ht at each time step is computed as\n$h_t = \\sigma(W_{IH"}, "cdot X_t + W_{HH} \\cdot h_{t-1} + b_h)$,\nwhere \u03c3(\u00b7) is the activation function, ht is the hidden state at time step t, WIH is the input weight matrix, WHH is the recurrent weight matrix, and bh is the bias vector. The hidden state ht at time step t captures the information of the HDSs up to that point.\nAt the time step t, the hidden state ht is used to predict the occurrence of a fall at time step t + 1. The hidden state is passed through a fully connected layer followed by a Softmax activation to produce the output logits as\n$Z_{t+1} = W_{HO} \\cdot h_t + b_o,$\nwhere WHO is the output weight matrix and bo is the bias term. The Softmax activation function is applied to the logits to obtain the probability distribution over the two classes (fall or no fall) as\n$p_c = \\frac{e^{z_{t+1,c}}}{\\sum_{i=1}^{2} e^{t+1,c}}$,\nwhere 2t+1,c is the logit corresponding to class c (fall or no fall)and the predicted outcome is\n$Y_{n,t+1} = \\arg \\max_{c \\in {1,2}} p_c$.\nFor simplicity, assume p as the predicted probability of the fall outcome class. The networks is trained using backpropagation and cross-entropy loss function as\n$\\mathcal{L} = \\frac{1}{N} \\sum_{n=1}^{N} (y_n . log(p_n) + (1 - Y_n) . log(1-p_n))$,\nwhere yn \u2208 {0,1} is the true label, pn is the predicted prob- ability of the fall outcome class of individual n \u2208 {1, ..., N}.\n2) Long Short-Term Memory Networks: To address the issue of vanishing gradients commonly faced by standard RNNs, we implemented a LSTM network, which introduces gates to control information flow and maintain long-range dependencies across time steps [15"]}