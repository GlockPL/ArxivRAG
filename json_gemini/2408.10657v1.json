{"title": "ETGuard: Malicious Encrypted Traffic Detection in Blockchain-based Power Grid Systems", "authors": ["Peng Zhou", "Yongdong Liu", "Lixun Ma", "Weiye Zhang", "Haohan Tan", "Zhenguang Liu", "Butian Huang"], "abstract": "The escalating prevalence of encryption protocols has led to a concomitant surge in the number of malicious attacks that hide in encrypted traffic. Power grid systems, as fundamental infrastructure, are becoming prime targets for such attacks. Conventional methods for detecting malicious encrypted packets typically use a static pre-trained model. We observe that these methods are not well-suited for blockchain-based power grid systems. More critically, they fall short in dynamic environments where new types of encrypted attacks continuously emerge. Motivated by this, in this paper we try to tackle these challenges from two aspects: (1) We present a novel framework that is able to automatically detect malicious encrypted traffic in blockchain-based power grid systems and incrementally learn from new malicious traffic. (2) We mathematically derive incremental learning losses to resist the forgetting of old attack patterns while ensuring the model is capable of handling new encrypted attack patterns. Empirically, our method achieves state-of-the-art performance on three different benchmark datasets. We also constructed the first malicious encrypted traffic dataset for blockchain-based power grid scenario. Our code and dataset are available at https://github.com/PPPmzt/ETGuard, hoping to inspire future research.", "sections": [{"title": "1 Introduction", "content": "The immutable and decentralized nature of blockchain has led to applications such as Bitcoin, decentralized crowdfunding, and cross-industry finance [31]. While research often focuses on system and software issues like consensus mechanisms [29], smart contracts [18], and virtual machines, cybersecurity challenges, particularly malicious traffic attacks, are often neglected.\nIn blockchain-based power systems, critical national infrastructure, malicious traffic poses severe risks such as widespread power outages and energy data"}, {"title": "2 Problem Statement", "content": "Problem formulation. Given a sequence of encrypted packets s = {P1,P2,..., Pn}, we are interested in developing a fully automated model to determine whether the packet sequence is malicious. Put differently, we aim to estimate the label \u0177 for each encrypted packet sequence s, where \u0177 = 1 represents s is a malicious sequence, and \u0177 = 0 indicates that s is benign."}, {"title": "3 Method", "content": "Method Overview The detailed architecture of our proposed framework is outlined in Fig. 1. Overall, the framework consists of three key components:\n\u2022 Data Preprocessing: Raw packets are cleaned and processed, ensuring that the packets from an individual client are sorted into a packet sequence and are separated from the packets of other clients. To extract features from these sequences, we use an unsupervised auto-encoder with stacked bi-GRUs.\n\u2022 Incremental Learning Module: To adapt to novel attacks while preventing catastrophic forgetting, we introduce an incremental learning module and mathematically derive the incremental learning losses.\n\u2022 Detection Module: The detection module learns the feature distinctions between benign and malicious sequences to continuously identify potential attacks. The learning process is supervised by the classification loss and incremental learning losses.\nIn what follows, we will elaborate on the details of these components one by one."}, {"title": "3.1 Data Preprocessing", "content": "The preprocessing module aims to clean and process raw packet data into distinct sequences for different clients. Since packet sequences cannot be directly input into a network, we employ an unsupervised auto-encoder with stacked bi-GRUs to extract features from each client's packet sequence.\nSpecifically, raw traffic data consists of packets organized by a five-tuple (i.e., source and destination IP addresses, source and destination ports, and transport layer protocol). We group packets with the same five-tuple into sequences s and sort them chronologically. Irrelevant packet information, such as IP addresses and port numbers, is removed from each sequence.\nThe resulting sequences, Sinput, are formatted with components l, d, and tm, where: l = {b1,b2,...,bn} denotes the packet length sequence, d = tn - t1 represents the duration of Sinput, tm is the mean time interval between packets."}, {"title": "3.2 Mathematical Derivation of Incremental Learning Objectives", "content": "In this subsection, we introduce the incremental learning module, and provide the key mathematical derivations of incremental learning objectives within this module.\nWe use the incremental learning method based on empirical replay [24,6,27] with targeted modifications for encrypted traffic scenarios to realize the incremental update of the model when facing new types of traffic attack. Specifically, we maintain a sample buffer to store representative traffic samples. When new malicious encrypted traffic arises, we incrementally update the model through a anti-forgetting loss function to detect new attack patterns. The new traffic samples are updated into the buffer using a reservoir sampling algorithm [28], serving as a representative sample set for subsequent incremental model updates.\nSample Buffer The sample buffer is used to store representative traffic samples to achieve experience replay during incremental learning. When the model learns new traffic patterns, it replays previous samples from the sample buffer to effectively prevent catastrophic forgetting. We implement the update of the sample buffer using the reservoir sampling algorithm. When new traffic samples arrive, the sample buffer is dynamically updated to ensure diversity and representativeness.\nIncremental Learning Loss Function The goal of the incremental learning module is to detect the ongoing emergence of new malicious traffic attacks. To enable the model to learn from new datasets, the loss function and optimization objectives are defined as follows:\n\nmin Lce = E(x,y)~D[l(fo(x), y)],\n\nwhere \u03b8 denotes the model parameters, Lce represents the loss function using cross-entropy, D denotes the dataset, fe(x) denotes the detection model, and y denotes the true target of the sample.\nTo mitigate catastrophic forgetting, we introduce a new loss function aimed at balancing the learning between new and old data. We use the past data on the"}, {"title": "3.3 Detection Module", "content": "Due to the substantial volume of traffic data and the high traffic rate in the blockchain-based power grid scenario, the real-time performance and resource consumption of the model are critically demanding. The MLP model architecture, being relatively simple, requires lower computing resources and offers faster training speeds. It is capable of monitoring traffic data in real time, and experiments have demonstrated that the MLP model is sufficient to meet the task requirements. Therefore, the MLP model is chosen to detect malicious traffic."}, {"title": "4 Evaluations", "content": "In this section, we conduct extensive experiments on multiple malicious encrypted traffic detection datasets to evaluate our framework. Next, we introduce the experimental setup, followed by presenting the comprehensive empirical results."}, {"title": "4.1 Experimental Setup", "content": "Datasets\n\u2022 CIRA-CIC-DoHBrw-2020 (DoHBrw) [21]: The DoHBrw dataset provides a mix of benign and malicious DNS-over-HTTPS (DoH) traffic, all data is encrypted traffic. The normal traffic is generated by querying benign DNS servers using the DoH protocol. Tunneling tools such as dns2tcp, DNSCat2, and Iodine are used to generate malicious DoH traffic.\n\u2022 CIC-AndMal2017 (CIC) [14]: CIC collected a rich variety of malicious attacks from several sources. The malicious traffic samples come from 42 unique malware families, which can be classified into four categories: Adware, Ransomware, Scareware, and SMS Malware.\n\u2022 GridET-2024 (GridET): To better detect the encrypted attacks of real-world blockchain-based power grid scenario, we create the dataset GridET-2024. Benign traffic samples are collected by capturing power grid system interaction traffic data. Malicious traffic data samples are sourced from malware-traffic-analysis.net and USTC-TFC2016 dataset to ensure the diversity of malicious traffic attack patterns."}, {"title": "4.2 Performance on Malicious Encrypted Traffic Detection", "content": "In this section, we benchmark our method against state-of-the-art malicious encrypted traffic detection methods for two public dataset and one power grad scenario dataset GridET.\nIn public dataset evaluations, we train and test methods on DoHBrw, and CIC, respectively. Fig. 2 presents public dataset comparison results. From Fig. 2, we observe that our method is capable of consistently outperforming existing methods on all five benchmarks. For example, the F1 score of our method is 0.92 on DoHBrw while the state-of-the-art detection method RAPIER [23] is 0.88. The F1 score of our method is also outperformed FS [17] in all datasets. In addition, we also use the CoinFlip algorithm and PacketLen algorithm, which simulate randomly guess and only utilize packet length, respectively, to detect encrypted traffic.\nThe blockchain-based power grid scenario malicious traffic detection is more challenging for existed detection methods. To evaluate the detection abilities of the methods on this scenario, we train and test the models on the GridET"}, {"title": "4.3 Performance on Incremental Learning", "content": "To evaluate the performance of our method on incremental learning, we create a new dataset DoHBrw/CIC. Specifically, we combine all benign samples from the DoHBrw dataset with a selection of malicious samples from the CIC dataset. We further divide the datasets into six sub-datasets {A0, A1, A2, A3, A4, A5}. In each of these sub-datasets, the benign traffic is all of the same type DoHBrw, while the malicious traffic all consists of different types of malicious attacks. We use Ao for pre-training the model, while the other sub-datasets are used for incremental updates to the model. We established a separate test set for each round, where the test set for round i includes all attack types observed from rounds 0 to i.\nWe compare ETGuard against five incremental learning methods (ER [25], DER [6], DER++ [6], GSS [1], SI [30]) on DoHBrw/CIC. To assess the efficacy of the incremental learning module within our approach, we extracted this component from ETGuard, resulting in a variant dubbed ETGuard-V. We then evaluated the performance of ETGuard-V to conduct an ablation study. We further provide an upper bound given by training all attack samples (FULL)."}, {"title": "5 Related Work", "content": ""}, {"title": "5.1 Malicious Encrypted Traffic Detection", "content": "Traditional malicious encrypted traffic detection mainly uses signature-based methods [12,7,9] to detect malicious encrypted traffic. However, the method"}, {"title": "5.2 Incremental Learning", "content": "The core challenge of incremental learning is to balance the conflict between remembering information about old tasks and absorbing information about new tasks, the so-called catastrophic forgetting problem. To overcome this problem, existing methods fall into two main categories: replay-based methods and parameter optimization-based methods. Replay-based methods mitigate Catastrophic Forgetting by replaying some samples of old tasks while learning new ones. The replayed samples can be real historical data, i.e., empirical replay. It can also be pseudo-samples generated by generative models (e.g., Generative Adversarial Networks, GAN), i.e., generative replay. iCaRL [24] is a representative of the empirical replay-based approach, which combines knowledge distillation methods to update the model parameters on a representative sample pool. However, iCaRL updates the parameters of old tasks and therefore suffers from overfitting to old data."}, {"title": "6 Conclusion", "content": "In this paper, we try to tackle the malicious encrypted traffic detection problem from two aspects: (1) We propose a novel framework termed ETGuard, which to our knowledge is the first approach tailored for automatically identifying malicious traffic attacks in blockchain-based power grid systems. (2) We lay the mathematical foundation for establishing an incremental learning model that can effectively adapt to new types of attacks. We utilized real data collected from the State Grid and constructed the malicious encrypted traffic dataset GridET. We extensively evaluated the proposed method on three benchmark datasets. Empirical results show that our method consistently delivers state-of-the-art performance on malicious encrypted traffic detection across general scenarios and the blockchain-based power grid scenario."}]}