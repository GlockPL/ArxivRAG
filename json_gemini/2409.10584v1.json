{"title": "Manifold-Constrained Nucleus-Level Denoising Diffusion Model for Structure-Based Drug Design", "authors": ["Shengchao Liu", "Divin Yan", "Weitao Du", "Weiyang Liu", "Zhuoxinran Li", "Hongyu Guo", "Christian Borgs", "Jennifer Chayes", "Anima Anandkumar"], "abstract": "Artificial intelligence models have shown great potential in structure-based drug design, generating ligands with high binding affinities. However, existing models have often overlooked a crucial physical constraint: atoms must maintain a minimum pairwise distance to avoid separation violation, a phenomenon governed by the balance of attractive and repulsive forces. To mitigate such separation violations, we propose NucleusDiff. It models the interactions between atomic nuclei and their surrounding electron clouds by enforcing the distance constraint between the nuclei and manifolds. We quantitatively evaluate NucleusDiff using the Cross Docked2020 dataset and a COVID-19 therapeutic target, demonstrating that Nucleus Diff reduces violation rate by up to 100.00% and enhances binding affinity by up to 22.16%, surpassing state-of-the-art models for structure-based drug design. We also provide qualitative analysis through manifold sampling, visually confirming the effectiveness of NucleusDiff in reducing separation violations and improving binding affinities.", "sections": [{"title": "1 Introduction", "content": "Structure-based drug design is a cornerstone of drug discovery, aiming at designing small molecule ligands based on the geometric structures of biological targets, typically the protein pockets. It faces significant challenges due to the vast chemical search space and the complex geometric interactions between ligands and proteins in three-dimensional Euclidean space [1]. To cope with these challenges, machine learning has emerged as a powerful tool for efficiently navigating the design space of small molecules and effectively generating ligands with high binding affinities.\nState-of-the-art deep generative models for the task generate ligands with high binding affinities by leveraging physical properties, such as the equivariance of molecular systems to rotations and translations [2, 3, 4, 5, 6, 7, 8]. However, they suffer from certain limitations due to the approximations in modeling. For instance, they treat each atom as a solid point, which is inconsistent with the reality that each atom occupies a distinct sphere around the atomic nucleus, known as the electron cloud. The electron cloud is a probability distribution describing the likely locations of electrons, with their behaviors governed by attractive forces (e.g. between electrons and protons in the nuclei) and repulsive forces (e.g., electron pair repulsion). As illustrated in Figure 1, these factors collectively influence the distribution and arrangement of electrons, adhering to a physical law that requires atoms to maintain a minimum pairwise distance to avoid separation violation. Having overlooked this principle, current deep generative models could breach fundamental physical laws and result in separation violation, where two atoms in the generated ligand-pocket pairs are positioned too close to each other, as depicted in Figure 2.\nOne straightforward approach to address this issue is to consider separation violations into deep learning models as a regularization term. However, since this is an atom pairwise measure, the computational complexity scales quadratically with the number of atoms. Therefore, a more efficient and effective method is necessary to address the separation violation problem."}, {"title": "2 Results", "content": null}, {"title": "2.1 Background", "content": "Small Molecules and Proteins. In this work, we consider small molecule ligands, which are sets of atoms in the 3D Euclidean space, {v\u00b9,x\u00b9}, where v\u00b9 represents the atomic number and x\u00b9 represents the atomic nucleus coordinate. Proteins are macromolecules, i.e., chains of residues. In nature, there are 20 types of residues. Each residue is a small molecule, with a fixed backbone structure: a basic amino group, an acidic carboxyl group, a side chain that is unique to each amino acid, and a carbon Ca connecting three components. In this work, we consider modeling proteins in the backbone-level information, i.e., the backbone atomic number and backbone atomic nucleus coordinates, {v,x}.\nNucleus and Electron Cloud. Each atom constitutes a nucleus and an electron cloud surrounds each nucleus, as shown in Figure 1. Recent works employ manifold learning on such an electron cloud for molecule property prediction [10, 11] and protein modeling in structure-based drug design [12]. In this work, we consider modeling the manifold around each nucleus in the ligands, and the approximated distance is the atomic radii. Then we discretize the manifold into triangle mesh points, a form suitable for computational analysis. This is implemented using the Python package PyMesh [13]. For notation, for each ligand atom (v\u00b9, x\u00b2), the coordinate and type of nuclei are the same as the atom-level, i.e., vN \u2266 vL and xx\u00b2. The coordinate of the discretized points on the manifold is marked as xM. Notice that we use a special token to delegate the electron points on the manifold.\nStructure-based Drug Design. The structure-based drug design (SBDD) task utilizes the geometric structures of proteins to design and optimize ligands, like small molecules. This can be formulated as a conditional distribution modeling problem, p(x\u00b2, v\u00b2\u00b9|v\u00ba,x\u00b2). Notice that NucleusDiff improves this objective function by introducing nucleus-level modeling combined with manifold-sensitive constraints of small molecules, and the problem formulation becomes P(x, v, xm|vP,x\u00ba). More details will be discussed in the Materials and Methods Section."}, {"title": "2.2 Separation Violation and Violation Ratio Metrics", "content": "The separation violation occurs when two atoms come too close to each other, contradicting the underlying physical laws. We introduce the van der Waals radii d for measuring it. Suppose we have one ligand atom coordinate xi, one protein atom coordinate xj, and the corresponding van der Waals radii are d; and dj, respectively. Then during the sampling stage for ligand generation, if two atoms get too close to each other, i.e., ||xj \u2013 xj|| < Dij = di+dj, we refer to this as the separation violation problem. To quantify this in existing deep generative models, we propose three violation ratio metrics from three granularities. For clarity, we only present one of the representative metrics in the main article.\nPairwise-Level Violation Ratio (PLVR). The metric is the atom pairwise-level violation ratio (PLVR), which quantifies the violation ratio between all the ligand atoms and protein atoms. For each ligand atom (x), we extract its K nearest protein atoms within the binding site. Then the PLVR is defined as\nPLVR = \\frac{ \\Sigma_{k\\in N_{mol}, i\\in N_{atom}, j\\in N_{nearest}} 1(\\lVert x_i - x_j \\rVert < D_{ij}) }{K \\cdot \\Sigma_{k\\in N_{mol}} N_{atom} } \tth\nwhere Nmol is the number of ligand molecules, Natom is the number of atoms in the k-th molecule, Ninearest is the number of the nearest protein atoms of the t-th ligand atom, and 1 (.) is the indicator function.\nWe present the other two metrics in the supplementary materials. The proposed violation ratio metrics assess the separation violations between pockets and generated ligands, enhancing our understanding of the generative model's inference process for structure-based drug design. We initially test them on the generated ligands by a state-of-the-art generative model [7]. As illustrated in Figure 2, existing works exhibit the separation violation issue to a certain extent.\nTo overcome this violation, these metrics can be directly incorporated into the training objective when modeling, but the computational complexity of these metrics is as high as O(NmolNatom), where Nmol is the number of molecules and Natom is the combined number of atoms in the molecule and the protein pocket. Subsequently, we introduce NucleusDiff, an efficient model with higher binding affinities and lower separation violations."}, {"title": "2.3 Manifold-Constrained Nucleus-Level DDPM: Nucleus Diff", "content": "We propose NucleusDiff to reduce the separation violation in the deep generative model for the structure-based drug design. The main idea is to jointly model the atomic nucleus and the manifold of the electron cloud using a denoising diffusion model. In this section, we provide a brief introduction to NucleusDiff, and more detailed descriptions can be found in the Materials and Methods section.\nDiffusion Model for Geometry Generation. We first introduce the denoising diffusion model for density estimation on general geometries, x. The denoising diffusion probabilistic model (DDPM) consists of two stages: a forward and a backward process [14]. The forward process gradually adds noise to the input geometric data x = x to a prior Gaussian distribution xy, and the backward process is the denoising process from the prior distribution to the data distribution. In concrete, suppose the data distribution is x ~ q(x), and we have T forward and backward steps with the scheduled variance {B}7_1. Then each forward step can be represented as q(xt|xt\u22121) = N (xt; \u221a 1 - \u1e9etxt\u22121,\u1e9e\u2081I), which gives q(xt|x0) = N (xt; \u221a\u0101rxo, (1 \u2013 \u0101\u2081)I), where a\u2081 = 1 \u2212 \u03b2t and \u0101\u2081 = \u03a0=1 \u03b1s. Following the Bayes theorem, the posterior q(x1-1/xt, xo) can also be expressed as a Gaussian distribution:\nq(x_{t-1}/X_t, X_0) = N (x_{t-1};\\mu(X_t, X_0), \\beta_tI),\nwhere (x1,xo) = \u221a4-1\u03b2\u03b9x0+ \u221a\u03b1 (1-04-1 1x and Br = 1. The goal is to maximize the log-likelihood of data distribution p(x), and after reparameterization, we aim to directly predict the ground-truth coordinates x) with a parameterized network xo = $o (x,t). The training objective is\nL1-1(x) = Eq [||xo-xo||2].\nPlease refer to the DDPM paper for detailed derivations [14].\nEquation (3) holds for arbitrary density estimation, and in the following paragraphs, we will discuss how we adapt this for our proposed NucleusDiff for structure-based drug design.\nNucleus-Level Diffusion Model for Ligand Generation. In our task, the goal is to model the atomic types and coordinates in ligands given the pocket structure: p(v\u00b2,x|vp,x\u00b2). The training objective includes a categorical term L\u2081-1(v) on atomic types and a continuous term L\u2081-1(x\u00b2\u00b9) on atomic coordinates [7]. Recall that with loss of generality, we can interchange atom information (type and coordinate) with nucleus information (type and coordinate), i.e., v = v\u00b2 and x = x\u00b2.\nIn this paragraph, we mainly discuss the continuous objective L\u2081-1(x), while the discrete objective function L\u2081-1(VN) over atomic type is described in the Materials and Methods section. Then adopting Equation (3) for atomic coordinates, the training objective becomes\nL1-1(x) = Eq [||x \u2212 x (x,t,v,x) ||2]."}, {"title": "Manifold-Constrained Nucleus-Level Diffusion Model for Ligand Generation", "content": "To reduce the separation violation, we introduce an extra constraint term that keeps the distance between the nucleus and the manifold over the electron cloud as atomic radii, R. This constraint aligns with the fundamental physical principles, as electron clouds exert both attraction and repulsion forces, preventing separation violation. To adopt this into modeling, for each nucleus, we obtain its K closest mesh points in the manifold, marked as XM. Thus, the goal becomes to maximize the joint distribution of nuclei and mesh points conditioned on the pocket, as P(v,x,xMvP,x). To adapt this into Equation (3), the objective of the sampled mesh points is\nL1-1(x) = Eq [||x \u2212 x (x^^,t,v,xP)||2].\nOn the other hand, recall that the mesh points are scattered around the nuclei with a fixed atomic radius R. Thus we add a regularization term by forcing the distance between each corresponding mesh point and nucleus to be close to R:\nL1-1(x,xM,R) = \\Sigma\\Sigma [|||\\x (x,t,v,x) \u2013 x(x^M,t,v,x\u00b2) || \u2013 Rij || .\nWe call such a manifold-constrained nucleus-level modeling as NucleusDiff. The overall objective function of the NucleusDiff is:\nL=E1[L1-1(x)+L1-1(VN)+\nLt-1(x)+L1-1(x,xM,R)]."}, {"title": "2.4 Experimental Setup", "content": "Datasets. We conduct experiments on two datasets. (1) We first utilize CrossDocked2020 [9] to train and evaluate our model. Following the approach of [4], we refine the dataset of 22.5 million docked protein-ligand binding complexes by selecting the poses with a root-mean-square deviation (RMSD) of less than 1 \u00c5 and protein sequence identity below 30%. Ultimately, we have 100,000 complexes for training and 100 complexes for testing. (2) We also carry out experiments on the COVID-19 target. Additionally, we assess the generalization abilities of NucleusDiff on two other real-world therapeutic targets, as detailed in the supplementary materials.\nMesh Point Construction. We utilize MSMS [17] to compute the solvent-excluded surface of the molecule. It generates a triangular mesh data structure for small molecules, and we set the argument probe radius to 1.5 \u00c5 and sampling density argument to 3.0. MSMS possesses certain challenges such as degenerate vertices and disconnected surfaces, which can disrupt the uniform distribution of mesh points. We employ PyMesh to overcome these issues [13]. It enhances the mesh quality by reducing the vertex count and correcting errors in poorly meshed regions. Finally, we select the K mesh points that are closest to the Van der Waals radii distance from the nucleus to construct a mesh point dataset. Notably, this mesh point data structure, which predominantly includes the 3D coordinates of the mesh points, is only required during the learning phase and not during inference.\nBaselines. For benchmarking, we compare with various baselines: liGAN [18], AR [4], Pocket2Mol [6], GraphBP [5] and TargetDiff [7]. liGAN [18] is a 3D CNN-based method that generates 3D voxelized molecular images following a conditional VAE scheme. AR [4], Pocket2Mol [6], and GraphBP [5] are GNN-based methods that generate 3D molecules by sequentially placing atoms into the protein binding pocket. We choose AR-SBDD [4] and Pocket2Mol [6] as representative baselines due to their outstanding performance. TargetDiff [7] is the state-of-the-art model in this research line, and it employs a diffusion-based technique for generating atom coordinates and types."}, {"title": "2.5 Separation Violation Evaluation on Cross Docked2020", "content": "The Violation Metrics. To gain a comprehensive understanding of how the separation violation problem evolves during the inference process of diffusion-based probabilistic models [14] for structure-based drug design, we compare NucleusDiff with the state-of-the-art model in this research line, TargetDiff [7]. For both methods, we use 1000 timesteps for training and inference. We analyze the PLVR metric for separation violation at 11 timesteps, sampled every 100 intervals from Step-0 to Step-1000. We present the separation violation ratios from Step-700 to Step-1000 in Table 2, with the complete results available in the supplementary materials.\nAnalysis. As shown in Table 2, TargetDiff maintains stable separation violation ratios from Step-700 to Step-1000. In contrast, NucleusDiff demonstrates consistently lower separation violation ratios during these inference steps. Notably, Nucleus Diff outperforms TargetDiff by nearly an order of magnitude in terms of the PLVR metric. In the final sampling step, NucleusDiff achieves an almost negligible violation ratio, further demonstrating its superior performance. As illustrated in Figure 2, the convergence trends of NucleusDiff and TargetDiff differ markedly when evaluated using the PLVR metric, with NucleusDiff demonstrating a significantly more pronounced convergence. More comprehensive results and analyses of NucleusDiff's separation violation performance are provided in the supplementary materials."}, {"title": "2.6 Binding Affinity Evaluation on Cross Docked2020", "content": "The General Metrics. The Vina Score, Vina Min, and Vina Dock metrics are employed to evaluate the binding affinity and potential biological efficacy of small molecule drug candidates in interaction with target proteins, via the computation of docking efficiency scores. Following the methodologies outlined in [4, 6, 7], we utilize the open-source AutoDockTools software [20] for these calculations. The High Affinity metric gauges the strength of the ligand-target protein interaction.\nAdditionally, we follow existing works and consider three more metrics [4, 6, 7]. QED provides a numerical assessment of a compound's drug-like characteristics, with higher values indicating a greater propensity for a compound to embody successful drug attributes. SA quantifies the ease with which a compound can be synthesized. Lastly, Diversity measures the range and heterogeneity of molecular structures and properties across a set of compounds.\nAnalysis. We generate 100 ligand molecules for each protein target in the test set, resulting in a total of 10,000 molecules. The size of each generated molecule, i.e., the number of atoms in each molecule, is determined by sampling from the size distribution observed in the training set. The comprehensive results for NucleusDiff and the baselines are displayed in Table 1.\nWe note that NucleusDiff surpasses all baseline models on 8 out of 14 evaluated metrics, with the exceptions of QED, SA, and Diversity. In Table 1, NucleusDiff is only surpassed by GraphBP [5] in terms of Diversity, yet it exhibits superior performance compared to another diffusion model, TargetDiff [7]. According to the average Vina Dock, NucleusDiff generates molecules with high affinities to the pockets (-7.90), which is 6.43% better than the best autoregressive model baseline, AR-SBDD [4], and 22.16% better than the best diffusion model baseline, TargetDiff [7]. Besides, NucleusDiff surpasses AR-SBDD [4] and TargetDiff [7] on average High Affinity (60.1%) by 58.6% and 6.7%, and average Diversity (0.74) by 6.71% and 4.23%. On the other hand, the SA of generated molecules should fall within a reasonable range so that the ability to explore the molecular space confined by protein pockets is high enough to discover potential molecules. As shown in Table 1, the average QED of NucleusDiff (0.39) is slightly lower than that of AR-SBDD [4] (0.51) and TargetDiff [7] (0.48), but remains comparable to that of liGAN [18] (0.39), implying that NucleusDiff satisfies this desired property. Notably, the molecules generated by NucleusDiff perform even better than those in the test set on Vina Score, Vina Min, and Vina Dock, suggesting that NucleusDiff has great potential to generate more drug-like molecules with higher affinity. NucleusDiff models the constraints between atomic nuclei and their surrounding electron clouds to prevent separation violatio, which is important for the generation of high-affinity and realistically viable pharmaceuticals. Although TargetDiff [7], a diffusion-based model, also generates molecules by sampling from a learned distribution, it solely considers the positional information of atomic nuclei when learning the distribution of atoms, which fails to incorporate fundamental physical laws on electrons. Consequently, it is reasonable to assert that the NucleusDiff model, as a geometric diffusion generative model incorporating the manifold constraints, provides critical insights for the generation of molecules and pharmaceuticals with high binding affinities."}, {"title": "2.7 Case Study of NucleusDiff on COVID-19 Target", "content": "Scientists and drug designers are particularly interested in how deep learning models generalize to real-world problems, where practical constraints and biological variability should be considered. To this end, we follow previous work and conduct a case study focused on a COVID-19-related therapeutic target [11]. This case study allows us to assess the practical utility of NucleusDiff in addressing critical and timely challenges in structure-based drug design. In this context, we generate molecules targeting the COVID-19 therapeutic target and subsequently evaluate their binding affinities and drug-likeness properties using the same set of metrics discussed earlier, including the Vina Score, Vina Min, Vina Dock, QED, SA, and Diversity. Lastly, we assess the performance of NucleusDiff and TargetDiff on this COVID-19-related therapeutic target using the proposed PLVR metric.\nSeparation Violation Evaluation. To evaluate the performance of NucleusDiff on the COVID-19 therapeutic target, we conduct a comprehensive comparison with TargetDiff. Both methods utilize diffusion-based models, enabling a thorough understanding of separation violations during the inference process of DDPM (Denoising Diffusion Probabilistic Models) [14]. Our evaluation involves the 3CL protease as a real-world therapeutic target, with its experimentally validated active ligands. For both NucleusDiff and TargetDiff, we set an identical number of timesteps (1000) for inference. We analyze the violation ratio metric PLVR at 11 timesteps, sampled every 100 steps from Step-0 to Step-1000, and the main results are summarized in Table 2. We observe that TargetDiff shows a significant reduction in separation violations from Step-0 to Step-1000. However, NucleusDiff maintains a consistently lower violation ratio throughout the inference steps. Notably, NucleusDiff outperforms TargetDiff in the PLVR metric, achieving improvements of up to 66.7%. Specifically, in the final sampling steps, NucleusDiff achieves an almost negligible separation violation ratio, verifying the effectiveness of our design.\nFigure 2 visualizes the violation ratio for both methods across the COVID-19 target (3CL), revealing a marked contrast in the convergence trends. NucleusDiff demonstrates a more pronounced and rapid reduction in violation ratios compared to TargetDiff, underscoring its potential for addressing challenging targets in real-world drug design, such as those encountered in COVID-19 research."}, {"title": "2.8 The Results for Minimum Distance Constraint", "content": "Our research is dedicated to addressing the critical challenge of separation violations in structure-based drug design. While NucleusDiff incorporates soft constraints during training to mitigate separation violations, an alternative approach involves implementing minimum distance constraints during the sampling process of pre-trained models. In this part, we rigorously evaluate the efficacy of applying minimum distance constraints to the sampling process of pre-trained NucleusDiff and TargetDiff models, assessing the generated molecules' performance in terms of both separation violation performance and binding affinity.\nGiven that NucleusDiff has demonstrated near-elimination of separation violation on the CrossDocked2020 dataset, we conduct a more representative experiment. This involves examining the properties of 1000 molecules sampled from both NucleusDiff and TargetDiff models using a minimum distance constraint inference process, specifically targeting the COVID-19 target (3CL). This approach enables a more thorough evaluation of the models' capabilities under minimum distance constraint inference conditions, providing deeper insights into their performance in this context.\nMinimum Distance Constraint for the Inference Process of TargetDiff and NucleusDiff. The high-level idea of the minimum distance constraint is to correct the distances of atom pairs that exhibit separation violations during the inference process. In this paper, we present two types of minimum distance constraints as post-correction schemes:\nMinimum Distance Constraint (Parallelogram): For protein-ligand atom pairs (a, b) with separation violation, we first identify atom c within the ligand that is closest to ligand atom b. Clearly, the line connecting the protein-ligand pair in 3D space intersects with a sphere centered at ligand atom c, with a radius equal to the distance between c and b. One intersection point obviously becomes b, while the other intersection point b' becomes the corrected position of b after applying the minimum distance constraint.\nMinimum Distance Constraint (Circle): For a protein-ligand pair (a, b) exhibiting separation violation, we first identify the atom c within the ligand that is closest to ligand atom b. We ensure that the distance between a and b is less than that between a and c. Based on this condition, we construct two spheres: one centered at protein atom a with a radius equal to the van der Waals radius of a and b (noting that the distance between (a, b) is less than the summation of their van der Waals radius), and another centered at ligand atom c with a radius equal to the distance between c and b. If these two spheres intersect, their intersection forms a circular region. By deriving the analytical expression for this circle, we sample a new point b' on this circle using a predetermined random seed (42). This b' effectively avoids separation violations while preserving the ligand's geometric characteristics. In the case where the two spheres are tangent, the point of tangency serves as the unique corrected position b', avoiding separation violations and maintaining the ligand's geometric properties."}, {"title": "2.9 Visual Analysis of NucleusDiff on Cross Docked2020 and COVID-19 Target", "content": "Figure 3 illustrates the ligands generated by NucleusDiff and TargetDiff, alongside reference ligands, for specific binding pockets. We select five representative protein pockets for structural analysis: 5NGZ, 2RHY, 4U5S, 2GNS from the CrossDocked2020 dataset, and an additional COVID-19 target. Both TargetDiff and NucleusDiff demonstrate the capability to generate structurally diverse ligands that conform to their respective binding pockets. Notably, NucleusDiff consistently produces ligands with superior Vina Scores compared to both TargetDiff and the reference ligands across all examined pockets. This is particularly evident for the COVID-19 target, where NucleusDiff achieves a remarkable Vina Score of -8.98, substantially outperforming TargetDiff (-7.46) and the reference ligand (-6.47). A key distinction between TargetDiff and NucleusDiff lies in the molecular representations they generate. While TargetDiff generates only atomic positions, NucleusDiff provides a more comprehensive visualization by not only displaying atomic nuclei positions but also incorporating the manifold of generated molecules. This is depicted by a green spherical manifold encompassing the ligand structure, providing a deeper understanding of how the molecule occupies space within the binding pocket.\nIt is important to note that our evaluation of molecular properties focuses on metrics such as binding affinity (Vina score, Vina Min, and Vina Dock), QED (Quantitative Estimate of Drug-likeness), SA (Synthetic Accessibility), and Diversity. Structural similarity between the generated molecule and the reference ligand is not necessarily required, as the generative model is not designed to replicate these structures exactly. Also, the reference ligand is not always the optimal drug candidate for the target, and its structure often leaves room for improvement. As these reference structures are typically derived through computational chemistry"}, {"title": "3 Conclusion", "content": "In this work, we first introduce three metrics to effectively quantify the separation violation issue of existing deep generative models for ligand design in structure-based drug discovery tasks. We then present NucleusDiff, which jointly models the atomic nucleus and the surrounding manifold to address this violation issue. Empirical results reveal that NucleusDiff not only achieves superior performance on existing stability and potency metrics but also significantly mitigates separation violations and converges more rapidly to the target geometric distribution.\nOne limitation of NucleusDiff is its current focus on modeling the ligand manifold while neglecting the protein manifold. Incorporating the protein manifold into the ligand manifold is an important aspect that we aim to explore in future work. Additionally, NucleusDiff utilizes a discretized version of the manifold over the electron cloud, represented by triangle mesh points. Yet in reality, the manifold is continuous. This requires a more profound understanding and utilization of the first-principle theorem, and we would like to leave this for future research."}, {"title": "4 Materials and Methods", "content": "Our main goal is to jointly model the nucleus and the manifold over the electron cloud surrounding each nucleus, aiming to reduce the separation violation issue in the diffusion model sampling process for structure-based drug design. We first explain how the DDPM model is applied to the existing structure-based drug design modeling. Following this, we introduce how we adopt the manifold-constrained modeling in NucleusDiff. Last but not least, we provide more details on the training objective and inference, along with insights into the architecture specifics."}, {"title": "4.1 Nucleus Diffusion for Atomic Nuclei Generation", "content": "Here our main goal is to model the nuclei types v and nuclei coordinates x given the protein pocket (vP,x\u00b2): p(v,xNvP,xP). We follow the existing DDPM for the structure-based drug design pipeline by estimating this conditional with a categorical diffusion model on atomic types and a continuous diffusion model on atomic coordinates [7, 21].\nIn the main manuscript, we define the variance scheduler \u1e9e\u06c1 and a\u2081, and how to derive the prior q(x|x) and posterior q(x_1x,x) for nuclei coordinates at time t. Similarly, for the nuclei types, we use categorical distribution C, and suppose we have K nuclei types in total. The prior distribution and posterior distribution of nuclei types at time t are\nq(v|v) = C(v\u0101\u03bd + (1 \u2212\u0101\u2081)/K),\nqvvv) = C(v0c(vv)),\nwhere (v^v) = 10* / \u03a3k 0, and 10* = [\u03b1\u03bd^ + (1 \u2212 \u03b1\u2081)/K] [\u0101-1v+ (1 \u2212\u0101\u2081\u22121)/K], where \u2299 is element-wise product. Then after reparameterization, we predict from v, i.e., v = \u03bc\u0473(vt). Injecting this into the posterior, then the objective functions for the discrete types and continuous coordinates are\nL1-1 (v) = KL(q(v|v, v )||qv|v)),\n\u03b8\u03b5\u03bd, \u03bd\u03b1 \u03ba\n= \\Sigma \\mu_{\\theta_{v}}(v)c log \\mu_{\\theta_{v}}(v)\nL1-1(x) = Eq [||x \u2212 x (x^^,t,v,x\u00ae) ||2]."}, {"title": "4.2 Manifold-Constraint Denoising Diffusion Model", "content": "Meanwhile, the generated nuclei coordinates should follow the physical properties: atoms are not solid points and they are composed of nuclei and surrounding electron clouds; thus there exists a minimum distance between pairwise atoms. Ignoring this can lead to the separation violation issue. To alleviate this, we jointly model the manifold and nuclei for structure-based drug design."}, {"title": "4.3 Learning and Inference", "content": "To sum up, the training objective function is composed of four parts, as in Equation (7). For the inference, because the mesh points from manifold modeling are treated as the auxiliary components of the physics-guided nuclei modeling, they can be ignored at this stage, while only the nuclei coordinates are considered. We provide the detailed pseudo-codes for inference in the supplementary materials."}, {"title": "4.4 Computational Resources", "content": "All algorithms and models have been developed using Python 3.8.13, with PyTorch version 1.12.1 and PyTorch Geometric version 2.5.2, under CUDA 11.0. Experiments are conducted on a server with 8 NVIDIA V100 GPUs (32 GB memory) and Intel(R) Xeon (R) Platinum 8255C CPU @ 2.50GHz. We employ a single V100 GPU for training while leveraging eight GPUs to accelerate the sampling procedure. The models typically converge after approximately 48 hours of training and sampling 10k ligands using eight GPUs takes about 12 hours."}, {"title": "Data, Materials, and Software Availability", "content": "We provide the code and dataset generation scripts at this GitHub repository. The code developed for this study is released under the MIT License."}, {"title": "Author Contributions Statement", "content": "S.L., D.Y., W.D., W.L., Z.L., H.G., C.B., J.C., and A.A. conceived and designed the experiments. S.L. and D.Y. analyzed the data. D.Y. performed the experiments. S.L., D.Y., W.L., and Z.L. contributed to the visual analysis and demos. S.L., D.Y., W.D., Z.L., and W.L. contributed analysis tools. S.L., D.Y., W.D., H.G., C.B., J.C., and A.A. wrote the paper. C.B., J.C., and A.A. contributed equally to advising this project."}, {"title": "Competing Interests Statement", "content": "The authors declare no competing interests."}, {"title": "A Related Work", "content": "Structure-based Drug Design. In recent years, the availability of structural data catalyzes the development of numerous generative models for the target-aware molecule generation task. Such models include those by [22, 23], which generate SMILES representations based on protein contexts, and the flow-based model proposed by [24] for generating molecular graphs conditional on protein target sequence embeddings. [18] explores the generation of 3D molecules through the voxelization of molecules in atomic density grids within a conditional VAE framework. [25] leverages normalizing flow to generate pocket-based 3D molecules, with properties controlled by a tailored prior distribution. Further, [26] employs Monte-Carlo Tree Search coupled with a policy network for optimizing molecules in 3D space. Notably, [4, 5, 6] develop autoregressive models for atom-by-atom 3D molecule generation using Graph Neural Networks (GNNs). Despite these advancements, current models still grapple with several challenges. These include the separate encoding of small molecules and protein pockets [22, 23, 24, 18], reliance on voxelization techniques and non-equivariant networks [22, 23, 18], and the limitations inherent to autoregressive sampling methods [4, 5, 6]. In contrast to previous approaches, our equivariant diffusion-based generative model innovatively integrates 3D protein-ligand interactions within a unified framework while employing non-autoregressive sampling, thereby enhancing the model's capacity to capture complex molecular relationships and improving the consistency between training and inference processes.\nMolecular and Protein Manifold Learning. Manifold learning has been widely applied in the vision tasks [27, 28, 29, 30, 31]. Additionally, recent advancements in manifold learning for molecular & protein have garnered attention in the scientific community. Several studies [32, 11, 10, 12] embark on an innovative trajectory by employing or integrating sophisticated representational learning techniques pertaining to molecular and protein surfaces. This approach facilitates a precise articulation and comprehension of the intricate complexities inherent in molecular structures.[32] introduces MaSIF, a method using deep learning to identify and predict how proteins interact with other molecules by analyzing patterns on their surfaces. SurfGen [11], introducing its two neural networks, Geodesic-GNN and Geoatom-GNN, effectively analyzes topological interactions on pocket surfaces and spatial interactions between ligand atoms and surface nodes for advanced molecular prediction. HMR [10] employs Laplace-Beltrami eigenfunctions for representing molecules on 2D Riemannian manifolds, enhancing molecular encoding through harmonic message passing. Atomsurf [12] explores the use of 3D mesh surfaces for representing proteins, revealing that while promising, this method alone is less effective than 3D grids. It proposes a novel framework that synergistically combines surface representations with graph-based methods for improved protein representation learning."}, {"title": "B Formulation and Analysis of Proposed Separation Violation Metrics", "content": "The phenomenon of separation violation arises when two atoms come sufficiently close to each other such that their electron clouds overlap. This overlap violates the Pauli exclusion principle and the electrostatic repulsion between electrons. To quantify this proximity, we employ van der Waals radii, denoted as d. Consider a scenario involving a ligand atom with coordinates xi and a protein atom with coordinates xj. The"}]}