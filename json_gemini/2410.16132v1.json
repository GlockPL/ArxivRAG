{"title": "A Data-driven Crowd Simulation Framework Integrating Physics-informed Machine Learning with Navigation Potential Fields", "authors": ["Runkang Guo", "Bin Chen", "Qi Zhang", "Yong Zhao", "Xiao Wang", "Zhengqiu Zhu"], "abstract": "Crowd simulation plays a crucial role in the prevention and management of urban public safety events. However, the complexity and heterogeneity of human behaviors pose significant challenges to achieving realistic and accurate simulations. Traditional rule-based physical models are limited by their reliance on singular physical formulas and parameters, making it difficult to effectively tackle the intricate tasks associated with crowd simulation. Recent research has introduced deep learning methods to tackle these issues, but most current approaches focus primarily on generating pedestrian trajectories, often lacking interpretability and failing to provide real-time dynamic simulations. To address the aforementioned issues, we propose a novel data-driven crowd simulation framework that integrates Physics-informed Machine Learning (PIML) with navigation potential fields. Our approach leverages the strengths of both physical models and PIML. Specifically, we design an innovative Physics-informed Spatio-temporal Graph Convolutional Network (PI-STGCN) as a data-driven module to predict pedestrian movement trends based on crowd spatio-temporal data. Additionally, we construct a physical model of navigation potential fields based on flow field theory to guide pedestrian movements, thereby reinforcing physical constraints during the simulation. In our framework, navigation potential fields are dynamically computed and updated based on the movement trends predicted by the PI-STGCN, while the updated crowd dynamics, guided by these fields, subsequently feed back into the PI-STGCN. Comparative experiments on two publicly available large-scale real-world datasets across five scenes demonstrate that our proposed framework outperforms existing rule-based methods in accuracy and fidelity. The similarity between simulated and actual pedestrian trajectories increases by 10.8%, while the average error is reduced by 4%. Moreover, our framework exhibits greater adaptability and better interpretability compared to methods that rely solely on deep learning for trajectory generation.", "sections": [{"title": "I. INTRODUCTION", "content": "ROWD simulation is a technique that simulates the dynamics of virtual individual movements [1, 2], ex-"}, {"title": "II. RALATED WORK", "content": "Rule-based crowd simulation methods can be categorized into macroscopic models and microscopic models [1]. At the macroscopic level, crowd simulation algorithms emphasize group path planning or global control, employing methods"}, {"title": "A. Applying Rule-Based Methods in Crowd Simulation", "content": "Rule-based crowd simulation methods can be categorized into macroscopic models and microscopic models [1]. At the macroscopic level, crowd simulation algorithms emphasize group path planning or global control, employing methods"}, {"title": "B. Applying Potential Field Models in Crowd Simulation", "content": "In scenarios where individuals have global objectives, simulating real-world crowds solely based on collision avoidance is insufficient. Therefore, many crowd models integrate collision avoidance with global navigation, employing potential field methods to guide crowd movement. Chenney was the first to introduce a flow tiles model [44], demonstrating that ideal crowd properties can be represented using divergence-free flows. In addition, motion flow fields extracted from crowd video footage were utilized to guide one or more agents toward desired goals [20]. In the context of crowd evacuation, Sun developed a density navigation field model based on potential field to investigate ways to enhance evacuation efficiency [45]. Moreover, potential field models offer users the ability to dynamically create and control crowd simulations at runtime. The interactive navigation field [46] methods guide the motion of one or more agents by integrating user-defined guiding fields. Most of these methods provide control over global paths by allowing users to draw curves for agents to follow or by converting them into directional cues for the flow field. For instance, B\u00f6nsch proposed a sketch-based VR method that"}, {"title": "C. Applying Deep Learning Methods in Crowd Simulation", "content": "The rapid advancement of artificial intelligence technology has made deep learning an essential tool for applications involving crowd simulation. Research on crowd trajectory pre-diction using deep learning leverages various neural network architectures to extract features from crowd trajectories. Some of these studies focused on the randomness of crowd behaviors by employing GAN to generate diverse crowd trajectories [26]. However, these approaches often face challenges, including unstable training processes, slow convergence, and limited interpretability. Other Methods, based on GCN, modeled pedestrians as nodes and represented the relationships between nodes as a graph network structure [51, 52]. For instance, Social Spatio-temporal Graph Convolutional Neural Network (Social-STGCNN) [27] is a representative work for pedestrian trajectory prediction. This network embeds the social inter-action relationships among pedestrians within an adjacency matrix and processes the matrix through kernel functions to capture both spatial and temporal information. Most trajectory prediction methods based on deep learning primarily focus on generating the spatial position information of pedestri-ans, often neglecting the underlying physical mechanisms of pedestrian movement, which leads to poor interpretability. In response to this challenge, recent research developed deep learning methods that incorporate physical models [53, 54]. Given the widespread application of PINN in PIML, a network that surrogates social force models was developed to predict pedestrian movements [31]. In addition, Yu et al. employed continuum models combined with neural networks to control crowd behaviors [55], further demonstrating the efficacy of integrating traditional methods with deep learning for crowd simulation. Despite these advancements, current methods re-main reliant on neural network designs, limiting their ability to adapt to simulations that fall outside the distribution of the training data.\nBased on existing spatio-temporal graph neural network models, this paper employs the PIML framework to predict pedestrian movement trends and integrates it with a physical model of navigation potential fields, to implement data-driven crowd simulations."}, {"title": "III. THE DATA-DRIVEN CROWD SIMULATION FRAMEWORK", "content": "As shown in Figure 1, our crowd simulation framework adopts a hybrid architecture that combines physical models with deep learning models. In the framework, PIML functions as the data-driven module to predict pedestrian movement trends, while the potential fields serve as the underlying physical model that supports large-scale computation of path planning. The crowd simulation based on this framework consists of three stages: (i) Prediction of movement trends based on PI-STGCN. Crowd dynamics in simulation are continuously sensed by an intelligent surveillance system and stored in a database, creating dynamically updated spatio-temporal data of pedestrian trajectories. Subsequently, the PI-STGCN leverages the positions and velocities of pedestrians, along with physical dynamics from the spatio-temporal infor-mation, to train the neural network and predict the movement trends of agents in real time. (ii) Construction of data-driven navigation potential fields. The position distribution function predicted by PI-STGCN is sampled to generate movement trend lines. Taking into account agents' collision avoidance and pedestrian interaction behaviors, an algorithm is required to further convert these trend lines into numerical potential fields. (iii) Execution of agents' movement. Under the influ-ence of navigation potential fields, agents plan their paths in real time based on the distribution of potential values in the environment, and then execute movements according to the planned paths to update their positions. After all agents complete their actions within a simulation time step, the crowd"}, {"title": "A. Overall Framework", "content": "As shown in Figure 1, our crowd simulation framework adopts a hybrid architecture that combines physical models with deep learning models. In the framework, PIML functions as the data-driven module to predict pedestrian movement trends, while the potential fields serve as the underlying physical model that supports large-scale computation of path planning. The crowd simulation based on this framework consists of three stages: (i) Prediction of movement trends based on PI-STGCN. Crowd dynamics in simulation are continuously sensed by an intelligent surveillance system and stored in a database, creating dynamically updated spatio-temporal data of pedestrian trajectories. Subsequently, the PI-STGCN leverages the positions and velocities of pedestrians, along with physical dynamics from the spatio-temporal infor-mation, to train the neural network and predict the movement trends of agents in real time. (ii) Construction of data-driven navigation potential fields. The position distribution function predicted by PI-STGCN is sampled to generate movement trend lines. Taking into account agents' collision avoidance and pedestrian interaction behaviors, an algorithm is required to further convert these trend lines into numerical potential fields. (iii) Execution of agents' movement. Under the influ-ence of navigation potential fields, agents plan their paths in real time based on the distribution of potential values in the environment, and then execute movements according to the planned paths to update their positions. After all agents complete their actions within a simulation time step, the crowd"}, {"title": "B. Attributes and Behaviors of Agents", "content": "In this paper, we leverage an agent-based modeling method to depict heterogeneous crowds. In order to enhance computational efficiency, the simulation employs a semi-continuous computing method. This involves each individual moving a specific distance in their direction of motion at each discrete time step. In our framework, the environment is discretized into a two-dimensional grid plane, and then a corresponding two-dimensional potential field is established. Each pedestrian is represented by an agent that guided towards the goal by the potential field. As an agent moves, it dynamically adjusts velocity and direction based on the environment to avoid collisions with other pedestrians and obstacles. The attributes of agent i at time t are:\n1) Position coordinates: Assuming that the environment is represented by a Cartesian coordinate system, the position coordinates of pedestrian i at time t are represented as $S_i = (x_i^t, y_i^t)$.\n2) Velocity vector: The velocity of the pedestrian is represented by $V_i = (v_{xi}^t, v_{yi}^t)$ in the Cartesian coordinate system. The velocity angle $v_{\\varphi}^t = arctan\\left(\\frac{v_{yi}^t}{v_{xi}^t}\\right)$ indicates the current direction of movement of the pedestrian. In a discretized grid environment, the velocity angle can take 8 possible values, each corresponding to one of the 8 neighboring grids towards which the pedestrian is moving."}, {"title": "C. Predicting Pedestrian Movement Trends Based on PIML", "content": "In this section, the details of the PI-STGCN for predicting pedestrian movement trends are presented. Table I shows the main concepts and notations used in the PI-STGCN.\nThe network structure of the PI-STGCN is illustrated in Figure 2. The neural network receives as input the observed positions and velocities time series of agents. Through spatio-temporal graph convolution operations and the learning of physical information, it outputs the parameters of a bivariate Gaussian distribution function representing future movement trends.\nThe position of a pedestrian is represented by a bivariate Gaussian distribution function [25] in x and y directions. $\u03bc$ denotes the mean of the x and y coordinates, $\u03c3$ represents the corresponding variance, and $\u03c1$ indicates the correlation coefficient between x and y. Therefore, the distribution of the position can be expressed as:\n$S \\sim N(\\mu, \\sigma, \\rho)$ (1)\nA displacement graph $G_s$ is constructed based on the positions of all agents in the crowd at time t. Each vertex in the graph corresponds to an agent, with the vertex feature representing the pedestrian's displacement within a time step of $\\Delta t$, denoted as $S_t - S_{t-1}$. The connectivity between vertices is represented by an adjacency matrix A. If the distance between pedestrian i and pedestrian j is not equal to 0, the corresponding element $a_{ij}$ is set to $a_{ij} = \\frac{1}{||s_i - s_j||}$; Otherwise, the two pedestrians are considered as the same agent, i.e., $a_{ij} = 0$. Similarly, replacing the displacement features of the vertices in the graph with the pedestrian's velocity $V_i$, the velocity graph $G_v$ is constructed.\nGraph $G_s^t$ is input of the spatio-temporal graph neural network. Let $H^l$ be the displacement feature tensor at the $l^{th}$ layer. After one graph convolution, $H^{l+1}$ is computed. The mathematical representation of the propagation process is:\n$H^{l+1} = ReLU \\left(\\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} H^l W^{(l)}\\right)$ (2)\nHere, $\\tilde{A} = I_N + A$ represents the normalized adjacency matrix, $D_{ij} = \\sum_j A_{ij}$ is the normalized degree matrix,"}, {"title": "IV. NAVIGATION POTENTIAL FIELDS", "content": "This section describes the computational methods for constructing navigation potential fields based on the prediction of movement trends."}, {"title": "A. Discretization", "content": "The navigation potential fields span the entire available free space and can be flexibly edited to adapt user-defined simulation specifications, which are extremely suitable for guiding agent movements. At the outset, the processing and computation of a navigation potential field requires discretization of the free space in the environment. For simplicity, the space occupied by the crowd is discretized by regular two-dimensional grids, with the grid cell size slightly larger than the average diameter of a standing pedestrian (0.4 meter) [56]. As shown in Figure 3, each cell is labeled as \"free\" or \"obstacle,\u201d denoted by 1 or 0, respectively. Additionally, it is assumed that a free cell is connected to neighboring cells in eight directions."}, {"title": "B. Basic Definition of an Navigation Potential Field", "content": "A single navigation potential field describes the direction that an agent will adopt near a specific source, which is denoted by s. The source may be other agents, obstacles, or any other environmental factors that induce a specific behavior in the agent. Some sources attract crowds (Figure 4a), such as exits or destinations, while others repel them (Figure 4b), like obstacles.\nIn Cartesian coordinate system, the effective range of s is defined as region D, then a navigation field with source s and domain D is represented as a vector field $PF_{S,D}$.\n$PF_{S,D} : D \\rightarrow \\mathbb{R}^2$"}, {"title": "C. Construction of the Navigation Potential Fields Based on PI-STGCN", "content": "Based on PI-STGCN's output of pedestrian position pre-diction, the distribution of the future positions of the agent is obtained at the current time, denoted by $\\hat{S} \\sim N(\\hat{\\mu}, \\hat{\\sigma}, \\hat{\\rho})$. For a distribution prediction sequence of length $T_p$, position points {$S_1, S_2, ..., S_{T_p}$} are generated by randomly sampling from a binary Gaussian distribution at each time point (Figure 5a). All position points of sampling describe possible movement trends of pedestrians. Let the target grid of a pedestrian as a source s, which attracts the pedestrian to move along a predetermined trend line (Figure 5b). Then, interpolations are performed on the nodes within {$S_1, S_2, ..., S_{T_p}$} to generate a continuous movement trajectory line formed by connecting the grids in sequence. In this phase, the A* algorithm [57] is utilized to plan the shortest path between $S_t$ and $S_{t+1}$, supporting fast generation of movement trend lines. G is represented by Equation (8), where $g_i$ denotes a grid. The last grid $g_n$ represents the destination where the agent is moving to.\n$G = \\{g_1, g_2...,g_n\\}$ (8)\nCalculating the difference between the coordinates of adjacent grids in G as Equation (9), the raw direction vector is obtained based on the trend line (Figure 5c).\n$\\mathbb{F}_{g_i} = (g_{x}^{i+1}-g_{x}^i, g_{y}^{i+1}-g_{y}^i), \\forall g_i \\in G$ (9)\nIn reality, pedestrian movements exhibit randomness, and pedestrians may move to any available grid units near G. Taking the grid center in G as the center of the navigation potential field, the radius of field domain D is set to r grids. Every grid p within the range of r is attracted by the field. Finally, the raw direction vectors are expanded outward. Before the first expansion, only the grids in G are marked. During each expansion, unmarked grids randomly select the nearest marked grid and calculate the direction vector pointing towards that marked grid, and then the unmarked grid is marked. After r expansions, a pedestrian navigation potential field based on the PI-STGCN's position prediction is constructed, denoted as"}, {"title": "D. Collision Avoidance and Pedestrian Interaction", "content": "In a simulated environment that uses a discrete grid rep-resentation, all obstacle objects are assumed to be regular geometric shapes or assemblies of multiple geometric shapes. The obstacle field denoted as C is designed to describe the obstruction effect of obstacles on pedestrians. As shown in Figure 6a, the contour lines of the obstacle objects are expanded from the edges of the outermost grid, and the obstacle field is perpendicular to the contour edges. Let $\\delta$ be the range of the obstacle field, $\u03bb_o$ be the proportionality factor characterizing the strength of obstruction effect of obstacles,"}, {"title": "V. EXPERIMENTS", "content": "We evaluate our proposed crowd simulation framework on two public large-scale real-world datasets, including the GC dataset [58] and the UCY dataset [59]. The GC dataset contains pedestrian data from two scenarios: ETH and Hotel, while the UCY dataset includes pedestrian data from three scenarios: Univ, Zaral, and Zara2. These datasets record pedestrian trajectories in real-world environments, consisting of thousands of trajectories from over 1,500 individuals across five scenarios. Different scenarios exhibit variations in crowd size, trajectory distribution, and social behaviors. Based on the aforementioned datasets, pedestrian information with a sequence length compatible with the PI-STGCN's input is ex-tracted from real crowds to create agents for crowd movement simulation experiments. The extracted simulation input data for the agents is shown in Table II. In the UNIV scenario, pedestrians are the most concentrated, with the slowest average movement velocity, while in the ETH scenario, pedestrians exhibit the maximal average velocity.\nTo enhance the generalization performance of our data-driven framework by leveraging diverse data distributions,"}, {"title": "A. Datasets and Setup", "content": "We evaluate our proposed crowd simulation framework on two public large-scale real-world datasets, including the GC dataset [58] and the UCY dataset [59]. The GC dataset contains pedestrian data from two scenarios: ETH and Hotel, while the UCY dataset includes pedestrian data from three scenarios: Univ, Zaral, and Zara2. These datasets record pedestrian trajectories in real-world environments, consisting of thousands of trajectories from over 1,500 individuals across five scenarios. Different scenarios exhibit variations in crowd size, trajectory distribution, and social behaviors. Based on the aforementioned datasets, pedestrian information with a sequence length compatible with the PI-STGCN's input is ex-tracted from real crowds to create agents for crowd movement simulation experiments. The extracted simulation input data for the agents is shown in Table II. In the UNIV scenario, pedestrians are the most concentrated, with the slowest average movement velocity, while in the ETH scenario, pedestrians exhibit the maximal average velocity.\nTo enhance the generalization performance of our data-driven framework by leveraging diverse data distributions,"}, {"title": "B. Performance Analysis", "content": "The accuracy of the simulation can be evaluated by quantitatively comparing the simulated crowd trajectories with the real trajectories. As the lack of constraints on the interactions"}, {"title": "C. Trajectory Analysis", "content": "The simulated crowd trajectories are visually represented, with the heatmap constructed based on the positions of agents within the trajectories. The heatmap reflects the concentra-tion of crowd activity in different areas within the scene; regions with higher heat values indicate a greater number of pedestrians passing through. Figure 8 illustrates the heatmaps of crowd trajectories simulated in five different scenarios alongside the heatmaps extracted from real-world datasets. From the perspective of trajectories, both methods generate relatively realistic crowd movements. Nevertheless, there are certain differences in the crowd distribution produced by"}, {"title": "D. The Data-Driven Period", "content": "In real-time crowd simulation calculations, the update pe-riod $T_a$ for navigation potential fields reflects data-driven strength. If $T_a$ is large, it indicates insufficient data injection. In environment where crowd movement changes rapidly and exhibits significant randomness, a delayed update of nav-igation potential fields may occur. Consequently, outdated navigation potential fields no longer reflect the agent's current movement trend, which could lead to an increase in simulation errors. Exploratory experiments on data-driven period are im-plemented across five scenarios under various $T_a$ conditions, as illustrated in Figure 11. The experimental results demonstrate that the update period of navigation potential fields affects the accuracy of the simulated trajectories, with ADE values exhibiting fluctuations as $T_a$ changes. Although the numerical differences in ADE are minor, our findings suggest that a smaller $T_a$ does not automatically yield a lower ADE. Instead, the lowest ADE is achieved at a moderate update period.\nConsidering the real pedestrian movements across the five scenarios, we hypothesize that this phenomenon arises from the relative stability of pedestrian behaviors in limited-scale environments, where individuals are more likely to maintain their movement trends over extended periods. When the data-driven period is too short, excessively frequent updates to the navigation potential fields lead to substantial fluctuations in the predictions output by the neural network. In such simulations, agents frequently change their movement directions, conse-quently leading to an increase in errors. The curves depicted in Figure 11 indicate that the ADE of the crowd in the relatively"}, {"title": "E. Disscussion", "content": "In this section, we conclude the research findings and discuss some drawbacks of this work."}, {"title": "Findings.", "content": "In existing stduies of crowd simulation, rule-based models exhibit poor fidelity and heterogeneity, while models solely based on deep learning methods are limited in their generalization and interpretability. To address these challenges, a crowd simulation framework that integrates PIML with navigation potential fields is proposed. Based on this framework, more accurate and realistic simulations are successfully achieved compared to rule-based models, with an average reduction of 4% in simulation trajectory errors on two real-world crowd datasets across five scenarios. Moreover, through the analysis of agent trajectories and the navigation potential fields in simulation, our framework demonstrates greater stability and interpretability compared to methods that directly generate simulation trajectories using deep learning methods. Additionally, we find that the data-driven period has a two-sided impact on the accuracy of simulations. These findings demonstrate the feasibility of combining traditional physical modeling methods with the latest advancements in machine learning to enhance the fidelity and applicability of crowd simulations."}, {"title": "Drawbacks.", "content": "However, there remain some drawbacks in the present work. On one hand, in predicting pedestrian movement trends, the PI-STGCN only considers the physical constraints of velocity-displacement and is limited by the assumption of uniformly accelerated motion. As the complexity of the envi-ronment increases, pedestrian movements may no longer con-form to the assumed kinematic equations, making it necessary to redesign the physical loss function and retrain the neural network. Moreover, the training difficulty of the PI-STGCN will also increase. On the other hand, the psychological effects"}, {"title": "VI. CONCLUSION", "content": "In this study, a data-driven crowd simulation framework that integrates PIML with navigation potential fields is proposed. Specifically, the PI-STGCN is constructed to provide accurate predictions of pedestrian movement trends, and a computational algorithm of navigation potential fields is designed to support real-time path planning for agents. The effectiveness of our framework is validated by extensive experiments on two real-world datasets across five scenarios by comparing it with the rule-based model and methods based solely on deep learning. Research findings reveal that the proposed framework advances the fidelity and accuracy of crowd simulations while also exhibiting higher adaptability and better interpretability.\nIn the future, we aim to explore data-driven decision-making for crowd management, particularly concerning congested crowd dynamics, by leveraging the advantages of integrating data-driven methods with physical modeling."}]}