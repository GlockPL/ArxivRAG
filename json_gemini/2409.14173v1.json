{"title": "An Evolutionary Algorithm for the Vehicle Routing Problem with Drones with Interceptions", "authors": ["Carlos Pambo", "Jacomine Grobler"], "abstract": "The use of trucks and drones as a solution to address last-mile delivery challenges is a new and promising research direction explored in this paper. The variation of the problem where the drone can intercept the truck while in movement or at the customer location is part of an optimisation problem called the vehicle routing problem with drones with interception (VRPDi). This paper proposes an evolutionary algorithm (EA) to solve the VRPDi. The paper demonstrates a metaheuristic strategy by applying an evolution-based algorithm to solve the VRPDi. In this variation of the VRPDi, multiple pairs of trucks and drones need to be scheduled. The pairs leave and return to a depot location together or separately to make deliveries to customer nodes. The drone can intercept the truck after the delivery or meet up with the truck at the following customer location. The algorithm was executed on the travelling salesman problem with drones (TSPD) datasets by Bouman et al. (2015), and the performance of the algorithm was compared by benchmarking the results of the VRPDi against the results of the VRP of the same dataset. This comparison showed improvements in total delivery time between 39% and 60%. Further detailed analysis of the algorithm results examined the total delivery time, distance, node delivery scheduling and the degree of diversity during the algorithm execution. This analysis also considered how the algorithm handled the VRPDi constraints. The results of the algorithm were then benchmarked against algorithms in Dillon et al. (2023) and Ernst (2024). The latter solved the problem with a maximum drone distance constraint added to the VRPDi. The analysis and benchmarking of the algorithm results showed that the algorithm satisfactorily solved 50 and 100-nodes problems in a reasonable amount of time, and the solutions found were better than those found by the algorithms in Dillon et al. (2023) and Ernst (2024) for the same problems. However, the algorithm performance deteriorated considerably as the number of nodes in the problems increased. This deterioration was in terms of the quality of the solution and the computation time required to solve the problem.", "sections": [{"title": "1 Introduction", "content": "Over the past few years, there has been a massive adoption of online shopping. Several factors contributed to that reality, such as increased access to internet services, the rise in smartphone users, and companies increasingly looking to decrease the time between consumers ordering products and these orders being delivered. These factors have all contributed to the increase in the adoption of online shopping (e-commerce) as a standard method of shopping. This adoption has led to delivery companies expanding their delivery networks and looking for ways to optimise delivering goods from warehouses to customers. This last leg of the delivery network, known as last-mile delivery operations/scheduling, can be characterised as a vehicle routing problem (VRP) optimisation problem.\nAdding drones to the VRP creates new flexibility and efficiency in the transportation system. Drones can deliver goods directly to customers, bypassing road congestion and thus reducing delivery times. They can also access remote or difficult-to-reach locations, such as islands or mountainous areas, where the accessibility for ground vehicles may be limited. Also, drones are considered a green form of transportation. Solving the VRPDi represents a significant challenge due to the complexity of integrating drones into the existing VRP frameworks. It is a very active research area in engineering, transportation, operations research, and computer science. Researchers have explored various approaches, including heuristic algorithms (Daknama and Kraus, 2017; Schermer et al., 2018; Di Puglia Pugliese et al., 2021; Rios et al., 2021); metaheuristics algorithms (Braekers et al., 2016; Schermer et al., 2019b; Pugliese et al., 2020; Rios et al., 2021; Ernst, 2021); and exact methods (Braekers et al., 2016; Di Puglia Pugliese et al., 2021) to find efficient solutions to the VRPD. Developing efficient and effective VRPD algorithms can significantly improve the performance and cost-effectiveness of last-mile delivery operations."}, {"title": "Problem", "content": "The VRPDi is a variant of the well-known VRP that includes using drones with interception capabilities, that is, return to the vehicle from where they are launched after the delivery. In contrast, the vehicle is stationary or in transit to the next delivery customer to support transporting goods. The VRP can be categorised as a combinatorial optimisation problem in operations research, where the aim is to minimise an objective function. This objective function could be the total distance travelled, the total delivery time required, and the total cost of the scheduling operation. In the instance of VRPDi, the distance travelled by the drones from the vehicle where it is launched to the customer location and its return to the launching vehicle also counts towards the problem's total cost, subject to various constraints such as time windows and the capacity of the vehicles."}, {"title": "Approach", "content": "This paper develops an evolutionary algorithm (EA) to address the vehicle routing problem with drones with interception (VRPDi), where the use of drones is included to support the transportation of goods, where a combination of vehicles and drones can deliver goods, where the drone can intercept the vehicle mid-way through its next delivery node. VRPDi introduces new complexities to the VRP, requiring coordination and synchronisation between vehicles to optimise the routing and scheduling of both vehicles and drones, as well as the time and energy needed for intercepting and transferring packages from the vehicle to the drone."}, {"title": "Contribution and structure", "content": "Our contribution is the first use of a genetic algorithm (GA) to solve the VRPDi.The approach includes defining the number of trucks and drone combinations and using a metameric representation of the algorithm solution. A review of the current VRPDi literature is presented in Section 2, including the mathematical formulation of the problem in this paper and related work. Section 3 overviews our approach, including a detailed description of the algorithm developed. Section 4 discusses the results of the algorithm using the different benchmark problems. Section 5 presents a discussion of the results obtained by the algorithm, while Section 6 concludes the paper."}, {"title": "2 Background", "content": "The introduction of drones in collaboration with trucks to perform delivery tasks resulted in the creation of the truck drone routing problem (TDRP), which is a variation of the classical VRP, which was first introduced in Dantzig and Ramser (1959) and has been an intensively researched over the decades since. Contrasting both VRP and TDRP is the introduction of drones in the latter and the inherited need for the solution to simultaneously cater to the collaboration between drones and trucks. Early research on the TDRP aimed to address solutions for the travelling salesman problem with drones (TSPD), a simplified version of the TDRP consisting of only one truck. In Murray and Chu (2015), two classes of the TSP were studied: the flying sidekick travelling salesman problem (FSTSP) and the parallel drone scheduling travelling salesman problem (PDSTSP). Both problems assume that a truck or a drone serves a customer. In the FSTSP, a drone collaborates with a truck to serve different customers, is dispatched from the truck to make deliveries and is collected by the truck to restore resources such as batteries and cargo. In the PDSTSP, the truck and drone work independently to serve the customers."}, {"title": "2.1 Mathematical Formulation", "content": "The vehicle routing problem (VRP) seeks to find optimal delivery or collection routes from a depot to customers while considering constraints. The problem was first introduced as the truck dispatching problem (TDP) by Dantzig and Ramser (1959). While exact methods are used to solve VRP optimally, heuristic methods like the Clark and Wright savings algorithm are used to solve large VRPs (Clarke and Wright, 1964). Over time, VRPs became more complex, resulting in different VRP variants. Examples of these different variations include the vehicle routing problem with time windows (VRPTW) (Desrochers et al., 1992), the vehicle routing problem with pick-ups and deliveries (VRPPD) (Min, 1989), and the multi-depot vehicle routing problem (Wren and Holliday, 1972). The capacitated vehicle routing problem (CVRP), or traditional VRP, involves vehicles with limited capacities (C) servicing customers scattered across a geographic area from a central depot."}, {"title": "Subject to:", "content": "$\n\\sum_{j\\in V\\{i\\}} X_{ij} = 1 \\quad \\forall i \\in V \\setminus \\{0\\}\n$\n$\n\\sum_{i\\in V\\{i\\}} X_{io} = K\n$\n$\n\\sum_{j\\in V\\{j\\}} X_{0j} = K\n$\n$\n\\sum_{i\\in S} \\sum_{j\\in S} X_{ij} \\leq r(S) \\quad \\forall S \\subseteq V \\setminus \\{0\\}, S \\neq \\Phi\n$\n$\nX_{ij} \\in \\{0,1\\} \\quad \\forall i, j \\in V\n$\n\u2022 The goal of the function labelled as 2 is to minimise the distance or travel time for each vehicle.\n\u2022 Constraints 3 and 4 are constraints that ensure each vertex has one arc entering and leaving it.\n\u2022 The requirements for the depot vertex's degree are outlined in constraints 5 and 6.\n\u2022 Constraints 7 are constraints that eliminate sub-tours. r(S) is the lower bound on the number of vehicles needed to visit all vertices in S.\nIn Moremi (2022), the vehicle routing problem with drone with interception (VRPDi), was introduced with the following characteristics:\nTo determine the time and position of the drone and the truck, Equation 10 was utilised. The equation calculates the interception time. This equation calculates the time taken by the drone to move from node j to the truck's location $pI^{3}$. The vector $c$ is a 2-dimensional representation of the x and y coordinates of node j, whereas $d(c^{i}, c^{j})$ is the distance between node j and the position of a truck at the beginning of a drone launch at node i.\nTo calculate the time from node j to the interception point $pI$, $T_{I}$ is used, and it is calculated in Equation 9, where $c^{j} \u2013 c^{i}$ represents the difference between the x and y coordinates of nodes j and i as a 2-dimensional vector.\n$\nT_{I} = \\frac{-2(c^{i} - c^{j}). (v) \\pm \\sqrt{(((c^{i} - c^{j}). (v))^{2} - (4(v^{2}-v^{2})(-d(c^{i},c^{j}))))}}{2(v^{2}-v^{2})}\n$"}, {"title": "follows:", "content": "$\npI^{3} = c^{i} + (v_{ik}).(T_{I}^{1} + \\sigma + (T_{I}^{1} \u2013 s_{i}))\n$\nIn this situation, the drone has two choices: intercept the truck before it gets to node k or fly straight to node k. If the drone cannot intercept the truck before it reaches node k, it will fly directly to the node's location, and the truck will wait for the drone. The total time it takes for the truck to travel from node i to k is known as $T_{ik}$. The total time it takes for the truck to travel from node i to the interception point $pI$ is equal to $(t_{I}^{1} \u2013 s_{i})$, where $t_{I}^{1}$ is the time when the drone and the truck meet after the drone has delivered at node j and $s_{i}$ is the time when the truck arrives at customer i for delivery. This time is equivalent to the drone's travel time from i to the interception point $pI^{3}$. If the truck arrives at node location k without intercepting the drone, it must wait for its arrival. The waiting time, W, is calculated as $T_{ijk} - T_{ik}$, where $T_{ijk}$ is the total drone travel time from node i to k and is only relevant when $t_{ijk} > T_{ik}$. The total time to finish the deliveries of nodes i and j and travel to k is $T_{ijk} = max(T_{ik}, t_{ijk})$. The arrival of the last vehicle at node k determines $T_{ijk}$.\nMoremi (2022) proposed the following mathematical models with the assumption that a drone delivery must be scheduled between each truck delivery.The model has the following input parameters:\n\u2022 n denotes the number of nodes to be serviced, including a depot at node 0\n\u2022 $T_{ijk}$ denotes the time required to attend to nodes i and j, and travel to k. The truck moves between nodes i and k, while the drone caters to node j in between.\nIn the above model, the decision variables are:\n$\nX_{ijk} = \\begin{cases}\n1, & \\text{If the truck services node i before node k,}\\\\\n& \\text{and the drone services node j in between}\\\\\n0, & \\text{Otherwise}\n\\end{cases}\n$\n$\nb_{j} = \\begin{cases}\n1, & \\text{If the drone services node j}\\\\\n0, & \\text{If the truck services node j}\n\\end{cases}\n$\n$\nZ_{ik} = \\begin{cases}\n1, & \\text{If the truck travels from node i to node k}\\\\\n0, & \\text{Otherwise}\n\\end{cases}\n$"}, {"title": "Subject to:", "content": "$\n\\min \\sum_{i=1}^{n} \\sum_{k=1}^{n} \\sum_{j=1}^{n} X_{ijk} T_{ijk}\n$\n$\nX_{ii} = 0 \\quad \\forall i \\in \\{1, ..., n\\}\n$\n$\n\\sum_{j=1}^{n} X_{ijj} = 0 \\quad \\forall i \\in \\{1, ..., n\\}\n$\n$\nZ_{ik} = \\sum_{j=1}^{n} X_{ijk} \\quad \\forall i, k \\in \\{1, ..., n\\}\n$\n$\nb_{j} = \\sum_{i=1}^{n} \\sum_{k=1}^{n} X_{ijk} \\quad \\forall j \\in \\{1, ..., n\\}\n$\n$\n\\sum_{i=1}^{n} \\sum_{k=1}^{n} Z_{iq} = 0 \\quad \\forall q \\in \\{1, ..., n\\}\n$\n$\n\\sum_{k=1}^{n} Z_{ik} = 1- b_{i} \\quad \\forall i \\in \\{1, ..., n\\}\n$\n$\n\\sum_{k=1}^{n} Z_{ik} = 1-b_{k} \\quad \\forall k \\in \\{1, ..., n\\}\n$\n$\n\\sum_{j=1}^{n} X_{ijk} \\leq 1 \\quad \\forall i, k \\in \\{1, ..., n\\}\n$\n$\nu_{i} + Z_{ij} \\leq \nu_{j} + (n - 1)(1 \u2013 z_{ij}) \n$\n$\n\\forall i, j \\neq 1 \\in \\{1, ..., n\\}\n$\n$\n\nu_{1} = 0\n$\n$\nX_{ijk}, b_{i}, Z_{ik} \\in \\{0,1\\} \\quad \\forall i, j, k \\in \\{1, ..., n\\}\n$\n\u2022 The objective of Equation 11 is to reduce the drone's and truck's overall travel time.\n\u2022 Constraints 12 and 13 simplify the model by ensuring that the truck and drone cannot return to a previously visited node.\n\u2022 Constraint 14 links $Z_{ik}$ and $X_{ijk}$.\n\u2022 Constraint 15 links $b_{j}$ and $X_{ijk}$.\n\u2022 Constraint 16 ensures that if a delivery is made at a node, the vehicle used for delivery must depart from that same node.\n\u2022 Constraint 19 ensures that only one drone delivery can occur between two truck deliveries.\n\u2022 Constraints 20 and 21 eliminate any sub-tours.\n\u2022 Constraint 22 restricts the decision variables to binary values."}, {"title": "3 Our approach", "content": "Algorithm 3.1 provides a pseudo-code description of the algorithm used to solve the VRPDi. The algorithm requires the following input control parameters: the number of nodes (n) and the number of iterations the algorithm runs. These iterations are also called generations (g), the size of the population ($P_{size}$), a list of a 2-dimensional vector of the x and y coordinates of the nodes (L), a matrix of the Euclidean distances between the nodes (D), obtained using Equation 23, for the distance between nodes i and j, that contain the Cartesian coordinates $(c_{x}^{i}, c_{y}^{i})$ and $(c_{x}^{j}, c_{y}^{j})$, respectively:\n$\nd(c^{i}, c^{j}) = \\sqrt{(c_{x}^{i}-c_{x}^{j})^{2} + (c_{y}^{i} \u2013 c_{y}^{j})^{2}}.\n$"}, {"title": "4 Results", "content": "The work presented in this paper investigated the feasibility of applying an evolutionary algorithm to solve the vehicle routing problem with drones with interceptions (VRPDi). The algorithm is evaluated on ten datasets from Bouman et al. (2015). The selected datasets feature customer nodes that are uniformly distributed across the x y Cartesian plane. These datasets are summarised in Table 1.\nThe algorithm parameters were set as follows:\n\u2022 Algorithm-specific parameters include the population size, the elitism rate, the mutation rate, and the maximum number of generations.\n\u2022 Problem-specific parameters include the number of nodes (n), the truck speed ($v_{t}$), the drone speed ($v_{d}$), the truck delivery time ($w_{t}$), the drone delivery time ($\\sigma_{t}$) and the number of truck-drones"}, {"title": "5 Discussion", "content": "The algorithm is evaluated over 30 independent runs on the datasets. This section only contains graphical representations of Uniform-71-n50 dataset deliveries for the VRP and VRPDi. The delivery tours for each of the trucks of the VRP and the trucks and drones of the VRPDi for the dataset are shown in Figures 5 and 6. The figure's continuous solid lines represent truck paths, the dotted lines represent drone paths, the black circles represent customer node locations, and the black squares represent interception points between trucks and drones. The above figure clearly shows that the solution obtained by the algorithm is feasible and complies with the problem constraints.\nEAs often suffer from loss of diversity through prema-"}, {"title": "5.1 Benchmarking", "content": "The algorithm in Dillon et al. (2023) (referred to as NNHis SaNSDE I algorithm), and the algorithm in"}, {"title": "6 Conclusions", "content": "This paper proposes an evolutionary algorithm to solve the vehicle routing problem with drones with interceptions (VRPDi). The literature has shown the TSPD and the VRPD, including all its different variations, to be complex problems to solve, specifically as the number of nodes increases. This paper then discussed the different mathematical formulations of the VRPD, showing that solving the model proposed in this is more complex than unravelling a VRP. There is additional complexity in adding drones to assist the trucks in completing the deliveries. This paper demonstrated the performance of the proposed algorithm to solve such problems. The evaluation of the results of the proposed algorithm included solutions for the VRP (truck-only) and the VRPDi (truck-drone pairing) variations of the vehicle routing problem, which were done so that they could be compared. The paper also shows that the total delivery time improvement from a VRP to a VRPDi solution was between 39% and 64%. The improvement in total distance was between 7% and 69%, from VRP to VRPDi. The paper then compared the performance of the algorithm developed to the NNHis SaNSDE I algorithm from Dillon et al. (2023) and the NNHis SaNSDE II algorithm from Ernst (2024).\nThe algorithm developed in this paper outperforms the NNHis SaNSDE I algorithm in datasets with 50 and 100 nodes. For the same datasets with more than 100 nodes, the algorithm of this paper is outperformed by the NNHis SaNSDE I algorithm. The comparison also showed that the NNHis SaNSDE II algorithm outperformed the algorithm developed in this paper in datasets with more than 100 nodes for the VRPDi problem variation with a maximum drone distance constraint. For the same problem variation, the algorithm developed in this paper outperformed the NNHis SaNSDE II algorithm in datasets with 100 nodes or fewer nodes. Through the above benchmarking, it becomes evident that the algorithm in this paper performed better than the other algorithms in all variations of the VRPDi reviewed in this paper for 50 and 100-node datasets regarding the quality of the solutions and the computation effort required to arrive at the solution. It also became evident that the algorithm developed in this paper became more computationally expensive as the number of nodes in the problem increased, requiring an average of 128 minutes to execute each run of the 500 node dataset, highlighting the fact that its solution quality decreased as the number of nodes in the datasets increased.\nGiven the increase in the demand for last-mile deliveries from central logistic locations and their customers, enterprises aim to optimise these scheduling and routing activities to be as efficient as possible. The scheduling and routing algorithm developed from this paper can be utilised in any environment where deliveries must be scheduled from a central location.\nThe contribution of this work includes the development of the first GA-based algorithm to solve this multi-vehicle, namely trucks and drones, scheduling and routing problem, the VRPDi. The paper contributes to the metaheuristics optimization field. These contributions include applying evolutionary algorithm concepts to solve scheduling and routing optimization problems. The paper also contributes to evolutionary computing, namely, the genetic algorithm, which has been tested for solving this single-objective routing problem. Given the emergence of the fourth industrial revolution, companies operating in the transportation industry can benefit immensely from optimisation research into scheduling and routing optimisation. The VRPDi problem is characterised by a delivery system comprised of trucks and drones. An EA was developed to solve this scheduling and routing optimisation problem, leading to several areas being identified for future research. These opportunities are aimed at improving the approach used by the algorithm to solve the problem, thus improving the algorithm's efficiency. In future work, we aim to utilise self-adaptive parameters in the algorithm to optimise control parameters for specific problem variations and increase the algorithm's efficiency by assigning nodes to trucks and drones us-"}, {"title": "Abbreviations", "content": "The following abbreviations are used in this manuscript:\nCVRP Capacitated vehicle routing problem\nEA Evolutionary algorithm\nFSTSP Flying sidekick travelling salesman problem\nGA Genetic algorithm\nNNHis Nearest neighbour heuristic for initial solutions\nPDSTSP Parallel drone scheduling travelling salesman problem\nPMX Partially mapped crossover\nSaNSDE Self-adaptive neighbourhood search differential\nTSP Travelling salesman problem\nVRP Vehicle routing problem\nVRPDi VRP with drones with interceptions\nVRPPD VRP with pick-up and delivery\nVRPTW VRP with time windows"}]}