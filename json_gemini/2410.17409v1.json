{"title": "Geometric Graph Neural Network Modeling of Human Interactions in Crowded Environments", "authors": ["Sara Honarvar", "Yancy Diaz-Mercado"], "abstract": "Modeling human trajectories in crowded environments is challenging due to the complex nature of pedestrian behavior and interactions. This paper proposes a geometric graph neural network (GNN) architecture that integrates domain knowledge from psychological studies to model pedestrian interactions and predict future trajectories. Unlike prior studies using complete graphs, we define interaction neighborhoods using pedestrians' field of view, motion direction, and distance-based kernel functions to construct graph representations of crowds. Evaluations across multiple datasets demonstrate improved prediction accuracy through reduced average and final displacement error metrics. Our findings underscore the importance of integrating domain knowledge with data-driven approaches for effective modeling of human interactions in crowds.", "sections": [{"title": "1. INTRODUCTION", "content": "Over the last decade, predicting how humans move and interact has become an active field of research, driven by applications in autonomous driving, surveillance, and the creation of socially aware robots (see Rudenko et al. (2020); Mavrogiannis et al. (2023) and references therein). The challenge lies in anticipating human motion due to its inherently complex and stochastic nature, influenced by internal and external stimuli, social dynamics, and psycho-logical decision-making factors as described in Wirth et al. (2022). This challenge is magnified in crowded spaces, where the interplay of these factors becomes even more intricate (see Korbmacher and Tordeux (2022) for a re-view).\nDespite this complexity, humans demonstrate an impres-sive ability to navigate crowds. As we move, we instinc-tively stay close to our group while maintaining a social distance from others. Our behavior adapts based on the type of interaction at play. Understanding these implicit interactions is crucial for autonomous systems, enabling them to predict and adapt to the unpredictable behaviors of pedestrians in the absence of explicit communication.\nVarious modeling-based and learning-based algorithms have been proposed to understand human interactions when navigating through crowds, as reviewed in Korb-macher and Tordeux (2022). Model-based approaches, such as the social force model by Helbing and Molnar (1995) and velocity-based methods like the reciprocal n-body collision avoidance technique introduced by Van Den Berg et al. (2011), aim to develop intuitive strategies for explaining human interactions based on first principles and social factors. In contrast, learning-based methods leverage deep learning algorithms, including long short-term memory (LSTM) networks Alahi et al. (2016), con-volutional neural networks (CNNs), generative adversarial networks (GANs) Gupta et al. (2018), and graph neural networks (GNNs) Mohamed et al. (2020), to predict hu-man motions directly from data.\nBoth model-based and learning-based approaches have their advantages and disadvantages. Model-based algo-rithms typically have fewer parameters, making them com-putationally efficient and enabling careful reasoning about human intentions. However, they may overlook complex aspects of human behavior. Our proposed model takes the form of a geometric graph neural network, a struc-ture inspired by the Social Spatio-Temporal Graph Neural Network (STGCNN) architecture proposed by Mohamed et al. (2020). However, we go beyond conventional GNN formulations by integrating geometric kernel functions and a refined neighborhood of interaction definition, draw-ing insights from psychological studies on human crowd behaviors (Rio et al. (2018); Wirth et al. (2022)). Our hybrid approach aims to combine the strengths of both model-based and learning-based methods by incorporating geometric kernel functions and refined interaction neigh-borhood definitions derived from psychological studies. These enhancements contribute to a more interpretable and context-aware weighted adjacency matrix, enabling a comprehensive framework for modeling pedestrian inter-actions."}, {"title": "2. RELATED WORK", "content": "In recent years, deep learning approaches for predicting human motion have gained significant attention. These methods typically assume that pedestrian trajectories fol-low a bivariate Gaussian distribution and aim to predict trajectory distributions based on observed frames.\nSocial-LSTM proposed by Alahi et al. (2016) represents one of the early methods using a recurrent neural network to predict individual pedestrian motion. To incorporate human interactions, it introduces a social pooling layer that aggregates recurrent outputs and concatenates hidden states of nearby agents. Extending this idea, Social-GAN by Gupta et al. (2018) employs generative networks and a loss function encouraging multi-modality of pedestrian trajectory distributions, as agents' trajectories may have multiple possible futures. However, it assigns uniform weights to all surrounding pedestrians, failing to capture the importance of close neighbors.\nGiven the advancements of GNNs introduced in Kipf and Welling (2016) for explaining and modeling interactions between different entities, recent works have integrated graph representation GNNs to capture the interaction mechanism between humans, departing from traditional pooling methods (see Korbmacher and Tordeux (2022) for an extensive review).\nGNN is a powerful tool for learning representations of network systems, but they rely heavily on the given network structure which may not accurately reflect the true interactions. Most approaches construct an initial graph based on node feature similarities, then refine it using metric (e.g., neural (e.g., attention mechanism such as the works by Huang et al. (2019) and Kosaraju et al. (2019)), kernel functions as in Mohamed et al. (2020)), or direct methods (e.g., optimization methods enumerated in Zhu et al. (2021)).\nFor instance, STGAT proposed by Huang et al. (2019) and social-BiGAT by Kosaraju et al. (2019) treat each agent as a node in a graph, and use Graph Attention Net-works (GAT) to describe their interaction by weighing the importance of each pedestrian's contribution. Although attention mechanism is beneficial in terms of modeling the importance of each neighboring pedestrian, they exhibit drawbacks such as a lack of explainability and a substantial increase in training time and learnable parameters. In response to these limitations, alternative approaches like social STGCNN (Mohamed et al. (2020)) have emerged. This method proposes a graph representation for modeling crowd interaction based on spatio-temporal information, opting for a kernel function instead of an attention mech-anism to weigh the importance of agents before construct-ing a graph representation of pedestrians. This strategic choice not only overcomes the shortcomings associated with attention mechanisms but also introduces a more interpretable and computationally efficient approach to assessing the importance of individual agents within a crowd.\nOur work builds upon the kernel-based GNN framework proposed in Social STGCNN by Mohamed et al. (2020), but explores the impact of various geometric kernel func-tions to identify the neighborhood of interaction in crowds, determining which neighbors influence each pedestrian's behavior and to what extent. These proposed kernel func-tions draw inspiration from psychological studies (Rio et al. (2018)) that conducted experiments on human crowds to understand the underlying mechanisms of their interactions. By leveraging this domain knowledge, we aim to enhance the model's ability to reason about pedestrian interactions in a more interpretable and context-aware manner, paving the way for improved prediction and nav-igation capabilities in crowded environments."}, {"title": "3. METHOD", "content": "The main objective in this paper is to predict the future trajectory positions of N pedestrians over a time horizon of $T_{pred}$, given their observed trajectories from t = 1 to t = $T_{obs}$. This task is particularly challenging in crowded environments, where pedestrian motion is governed by complex interactions and social dynamics.\nAgent Dynamics: Following the work in Mohamed et al. (2020), we assume pedestrian trajectories follow a bi-variate Gaussian distribution. The parameters $(\\mu_i, \\sigma_i, \\rho_i)$ represent the mean, standard deviation, and correlation coefficient of the Gaussian distribution, respectively, where we parameterize mean $\\mu_i = (\\mu_x, \\mu_y)$, standard deviation $\\sigma_i = (\\sigma_x, \\sigma_y)$, and correlation coefficient $\\rho_i = (\\rho_x, \\rho_y)$, for i = 1,..., N. The pedestrian trajectories are given by $p^t_i = (x, y) \\sim \\mathcal{N}(\\mu_i, \\sigma_i, \\rho_i)$, where (x, y) are random variables capturing the probability distribution of pedes-trian i's position at time t in the 2D space. The model is trained by minimizing the negative log-likelihood loss function:\n$J^2(W) = - \\sum_{t=1+T_{obs}}^{T_{pred}} log(P(p^t_i|\\mu_i, \\sigma_i, \\rho_i))$, (1)\nHere, $\\mu_i, \\sigma_i, \\rho_i$ are the estimated parameters of the pre-dicted trajectory distribution, p.\nGraph Representation of Crowd Interaction: We employ a graph representation rooted in algebraic graph theory to model pedestrian interactions within crowd Mes-bahi and Egerstedt (2010). Consider $G_t = (V_t, E_t)$ as a spatial graph at time t, comprising N nodes represent-ing the relative positions of pedestrians in the scene at time t. The node set is $V_t = \\{v_1,...,v_N\\}$, and edge set $E_t = \\{e_{ij} = (v_i,v_j)\\} \\subseteq V_t \\times V_t$ captures the interac-tions among agents. The adjacency matrix is defined as $A_t = [a_{ij}]$, determining the neighborhood of interaction, where $a_{ij} = w_{ij}$ if $v_i$ and $v_j$ are connected (agent i can receive information from agent j); otherwise, $a_{ij} = 0$. The interaction neighborhood will be defined in more details later. The weights $w_{ij}$ quantify how strongly agents influ-ence each other's movements and are determined through geometric kernel functions inspired by psychological stud-ies on human crowd behaviors. The graph Laplacian is defined as $L_t = D_t - A_t$, where $D_t$ denotes the diagonal matrices of node degrees, taken as the sum of the weights for each neighbor: $D_t = [d_{ii}] = \\sum_{j=1}^N a_{ij}$."}, {"title": "3.2 Topology of Interaction", "content": "Diverging from the approach of social-STGCNN Mohamed et al. (2020), which assumes a complete graph to estab-lish the neighborhood set for each agent and weighs the importance of neighboring agents based solely on their distance, this work takes a more nuanced perspective. Our goal is to experiment with different neighborhood sets inspired by psychological literature on human interactions in crowds, as described in Rio et al. (2018), aiming to enhance model performance in predicting future pedes-trian motion. This exploration seeks to identify the crucial factors in accurately modeling human interactions across various datasets.\nNeighborhood of Interaction:\nAccording to Grasso et al. (1998), people have a 180\u00b0 horizontal field of view and face toward their walking direction ($\\Delta p^t_i = p^{t+1}_i - p^t_i$). Therefore, interactions are expected to be influenced by neighbors within their field of view ($\\pm90\u00b0$) who are approaching them. Empirical experiments on human crowds by Rio et al. (2018) reveal that the impact of neighbors diminishes exponentially to zero at a distance of 4-5m. The following sections explain how we incorporate these key points in constructing our weighted adjacency matrix.\n(1) Graph 1 (View):\nTo account for the 180\u00b0 field of view, we introduce the following kernel-based weight. It stipulates that if the angle between walking direction of pedestrian i and jis smaller than 90\u00b0, they mutually influence each other; otherwise, the weight is set to zero.\n$w^{Kij}_{view,t} = \\begin{cases} K^{ij}_{App} > 0 \\\\0 & o.w.\\end{cases}$ (2)\n$Kij$ will be defined shortly.\n(2) Graph 2 (View, Thresh):\nIn a different scenario, we incorporate a threshold of $e = 5m$ distance, selected based on empirical ob-servations from psychological studies according to Rio et al. (2018) to ensure that only nearby pedestrians within the field of view influence each other (Fig. 1):\n$w^{Kij}_{view,thresh,t} = \\begin{cases} K^{ij}_{App} > 0, d^{ij}_t < \\epsilon \\\\0 & o.w.\\end{cases}$ (3)\nwhere $d^{ij}_t = ||p_i - p_j||$ is the distance between agent i and j.\n(3) Graph 3 (Approach):\nIn this scenario, when the distance between agents decreases, signifying that they are approaching each other and likely to influence each other, we define the kernel-based weight as:\n$w^{Kij}_{appr,t} = \\begin{cases} K^{ij} \\Delta p^{t+1}_i \\cdot \\Delta p^{t}_i > 0, d^{ij}_{t+1} > d^{ij}_{t} \\\\0 & o.w.\\end{cases}$ (4)\n(4) Graph 4 (View, Approach): We also consider a case that encompasses both of the above scenarios:\n$w^{Kij}_{view,appr,t} = \\begin{cases} K^{ij} \\Delta p^{t+1}_i \\cdot \\Delta p^{t}_i > 0, d^{ij}_{t+1} > d^{ij}_{t} \\\\0 & o.w.\\end{cases}$ (5)\nIt is worth noting that Yang et al. (2023) also considers the field of view and direction of movement. However, they consider each of the factors in separate graphs, and then use a multi-layer perceptron (MLP) to combine them into a single graph. In this work, we choose to combine the two conditions into a single graph to follow psychological studies and better explain the adjacancy matrix.\nKernel Functions for Assigning Neighbors Impor-tance Through Edge Weights:\nWe employ kernel functions to capture the strength of interaction between pedestrians. We examine the impact of two distinct kernel functions on the model's accuracy in predicting pedestrian trajectories.\n(1) Kernel 1 (Inverse of Norm): Similar to Mohamed et al. (2020), we use the inverse of the L2 norm as a similarity measure, considering that further away neighbors exert less influence:\n$K^{ij} = \\begin{cases} \\frac{1}{||P_i - P_j||} & ||P_i - P_j|| \\neq 0 \\\\0 & o.w.\\end{cases}$\n(2) Alternatively, in this case, we use the exponential decay as the kernel function:\n$K^{ij} = \\begin{cases} exp(-||P_i - P_j||) & ||P_i - P_j|| \\neq 0 \\\\0 & o.w.\\end{cases}$\nto reflect the fact that the weight decays as agents move away from each other, according to Rio et al. (2018)."}, {"title": "3.3 Model Architecture:", "content": "Our model leverages the same network architecture as introduced in Mohamed et al. (2020), consisting of spatial and temporal components. The key difference from previ-ous work is in the graph representation, which incorporates geometric kernels and neighborhood definitions inspired by psychological studies on crowd dynamics, as explained earlier. Fig. 2 provides a visual overview of the network architecture adopted in this paper.\n(1) Kernel-based Spatio-Temporal Graph Repre-sentation: The first step in our network is to con-struct the graph representation of pedestrian interac-tions. We utilize the proposed neighborhood of inter-actions and kernel functions one by one and report the modeling accuracy for each of them.\n(2) Spatio-Temporal Graph CNN:\nIn the second step, to extract meaningful features from the graph representation, we employ spatio-temporal graph convolutions, as described by Yan et al. (2018). This approach is particularly suitable for our problem as it effectively captures both spatial and temporal dependencies in pedestrian trajectories. The colvolution operation compute node embeddings by aggregating information from neighboring nodes in a recursive fashion as follows:\n$f(V^{(l)}, A) = \\sigma (L_tV^{(l)}W^{(l)})$, (6)\nwhere $V^{(l)}$ is the stack of all node values at time t and layer l, and $W^{(l)}$ is the matrix of trainable parameters at layer l. $L_t = D_t^{-1/2}L_tD_t^{-1/2}$ is the normalized graph Laplacian matrix at time t, as explained in Kipf and Welling (2016). Finally, $\\sigma$ is the activation function.\n(3) Time-Extrapolator CNN:\nTaking the features from the previous step as input, this network applies temporal convolutions to predict probability distributions of future trajectories for all pedestrians within the time interval from t = $T_{obs+1}$ to t = $T_{pred}$."}, {"title": "3.4 Datasets and evaluation metrics", "content": "To train and assess the performance of our model, we utilize two well-established pedestrian datasets, in line with established methodologies in prior research. These datasets include: (1) ETH Dataset, collected by Pellegrini et al. (2009), with two scenes: ETH and Hotel, and (2) UCY Dataset, given by Lerner et al. (2007): with 3 scenar-ios: ZARA-01, ZARA-02, and UNIV. In total, our model is evaluated across five distinct datasets, encompassing diverse nonlinear trajectories from 1536 pedestrians within real-world crowded environments. To ensure consistency in data representation across various datasets, we adopt the preprocessing approach outlined in Social-GAN by Gupta et al. (2018). To facilitate fair comparisons, we employ a leave-one-out training methodology, as suggested Alahi et al. (2016). This involves training and validating on four datasets and subsequently testing on the fifth. This procedure is consistently applied across the four interaction neighborhood scenarios and the two proposed kernel functions as well as other baseline methods for best evaluation.\nFor the quantitative assessment of our approach, we em-ploy two widely recognized metrics Alahi et al. (2016):\nAverage Displacement Error (ADE) computes the average L2 distance between the ground truth and our model's predictions over all predicted time steps. It serves as a measure of trajectory accuracy along the path.\nFinal Displacement Error (FDE) quantifies the distance between the predicted final position and the ground truth final position at the end of the prediction period $T_{pred}$.\nGiven our assumption of Gaussian distribution for pedes-trian trajectories, the estimated trajectory is a distribu-tion. For fair comparison with previous work, we follow Mohamed et al. (2020)'s evaluation approach. We generate 20 samples from the predicted trajectory distribution and"}, {"title": "4. RESULTS", "content": "The results presented in Table 1 show that our proposed methods, incorporating different neighborhood definitions and kernel functions, achieve competitive performance compared to previous approaches across various pedestrian datasets. Our model has 7,563 parameters, with an av-erage inference time of 0.002 seconds, based on multiple single inference steps.\nOn the ETH dataset, our method with Graph 1 (using pedestrian's field of view in neighborhood definition) and Kernel 1 (inverse of the norm) achieves the best perfor-mance, following the Social-STGCNN ADE of 0.64 and improving the FDE to 1.09. For the HOTEL dataset, our method with Graph 3 (using approach dynamics in neighborhood definition) and Kernel 2 (exponential de-cay) significantly outperforms all existing methods, achiev-ing the best ADE of 0.34 and FDE of 0.47. On the UNIV dataset, the previous Social-STGCNN method by Mohamed et al. (2020) maintains the best performance with an ADE of 0.44 and FDE of 0.79. However, our method with Graph 2 (using field of view and 5m distance threshold for neighborhood definition) and Kernel 2 closely follows the best performance with an ADE of 0.45 and FDE of 0.82. Other graph variations and kernel functions also show very close performance on this dataset, further highlighting the importance of using geometric definitions. For the ZARA01 dataset, the Social-BiGAT method by Kosaraju et al. (2019) achieves the best ADE of 0.30, while our method with Graph 2 and Kernel 1 achieves the best FDE of 0.52. On the ZARA02 dataset, our method with Graph 2 and Kernel 2 outperforms all existing methods, achieving the best ADE of 0.27 and FDE of 0.45.\nOverall, our method with Graph 1 and Kernel 1 achieves the best average ADE of 0.43 and FDE of 0.73 across all datasets, surpassing previous methods. Our results suggest that methods incorporating attention mechanisms, whether through softmax (e.g., social-BiGAT by Kosaraju et al. (2019)) or geometric kernel functions, consistently enhance accuracy, underscoring the importance of kernel functions for graph representations in GNN methods. Furthermore, our results highlight the effectiveness of integrating domain knowledge, such as pedestrian's field of view, 5m distance threshold, and approach dynamics, into neighborhood definitions for modeling human interactions in crowded environments. While Mohamed et al. (2020) found no improvement with the exponential decay kernel, our results suggest that performance outcomes can vary and improve depending on the interaction neighborhood definition.\nWhile no single method consistently outperforms others across all datasets, our proposed methods exhibit com-petitive performance. Performance discrepancies may arise from unaccounted factors like landmarks or scene informa-tion, highlighting the potential impact of external factors. Notably, Lv et al. (2023) demonstrated significant accu-racy improvements by integrating scene information into their graph attention network.\nOur primary objective was to demonstrate how incorporat-ing domain knowledge can enhance data-driven trajectory prediction, rather than finding the best-performing model. Thus, we maintained the same parameters as the refer-enced work. Additionally, our model estimates uncertainty using the covariance matrix in the bivariate Gaussian distribution, capturing the inherent uncertainty in predic-tions. Future work can explore Bayesian approaches and the impact of data and domain uncertainties on model performance."}, {"title": "4.1 Conclusion", "content": "In summary, this case study introduces a geometric GNN architecture featuring various kernel functions and inter-action topologies inspired by psychological studies. This framework lays a foundation for better understanding and modeling human interactions. Integrating a 180\u00b0 field of view in the interaction neighborhood and employing the inverse of norm kernel function to weigh neighboring agents' importance contribute to overall accuracy improve-ments, reflected in enhanced ADE and FDE metrics across all datasets. Our results suggest that different topologies of interaction and kernel functions may perform better"}]}