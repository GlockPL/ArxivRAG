{"title": "The Causal-Effect Score in Data Management", "authors": ["Felipe Az\u00faa", "Leopoldo Bertossi"], "abstract": "The Causal Effect (CE) is a numerical measure of causal influence of variables on observed results. Despite being widely used in many areas, only preliminary attempts have been made to use CE as an attribution score in data management, to measure the causal strength of tuples for query answering in databases. In this work, we introduce, generalize and investigate the so-called Causal-Effect Score in the context of classical and probabilistic databases.", "sections": [{"title": "1. Introduction", "content": "Users of a database management system could expect explanations, for example, for the answers to a query, for a violation of an integrity constraint, etc. So as in AI and machine-learning, explanations may come in different forms, in particular, as an attribution score, that is, as a quantitative degree of relevance of a piece of data in a database (DB) in relation to the observed output (or for the feature values in input entities in the case of AI and ML). This work concentrates on local attribution scores as explanations in DBs, that is, for a particular query answer, and at the DB tuple level.\nSeveral scores have been proposed and investigated in DBs. Responsibility (Chockler and Halpern, 2004) is based on actual causality and counterfactual interventions (Halpern and Pearl, 2005; Halpern, 2015, 2016). The latter can be seen as hypothetical changes performed on a (causal) model, to iden-tify other changes. By doing so, one can detect cause-effect relationships. In the context of actual causality, Responsibility (RESP) has been applied in DBs to quantify the relevance of individual tuples, and attribute values in them, for a query result (Meliou et al., 2010a,b; Bertossi and Salimi, 2017a,b). The Shapley Value of Coalition Game Theory (Shapley, 1953; Roth, 1988), as a measure of contribution of individual players to a shared wealth or game function, has been applied as an explanation score in DBs, with tuples acting as players, and the query (Boolean or aggregate) as the game function (Livshits et al., 2021a,b; Deutch et al., 2022; Bertossi et al., 2023b). The Shap-ley Value is as the only measure that satisfies a given set of desired properties (or axioms) (Roth, 1988). A related game-theoretic measure, the Banzhaf Power Index (BPI) (Banzhaf, 1964), has been applied in DBs as the Banzhaf Score (Livshits et al., 2021a; Abramovich et al., 2024).\nThe Causal-Effect Score (CES) can be traced back to causality in observational studies (Rubin, 1974; Holland, 1986), where one usually cannot predefine and build control groups, but they have to be recovered from the available data (Gelman and Hill, 2007; Pearl, 2009; Roy and Salimi, 2023). The CES is also based on interventions. In (Salimi et. al., 2016), an appropriate form of the CES was first used in data management, when RESP did not provide intuitive results. Furthermore, CES is more appropriate than RESP for explaining aggregate queries. RESP would only consider, say"}, {"title": "2. Background", "content": "Relational Databases. For causality purposes, some of the tuples in a DB D are considered to be endogenous. They can be subject to causal (more precisely, counterfactual) interventions, in this case, deletions, insertions, or value updates. The other tuples are exogenous, and are taken as given. They may participate in query answering, but they are not subject to interventions. $D_{en}$, $D_{ex}$ denote the subinstances containing the endogenous, resp. exogenous tuples. With $Adom(D)$ we denote the active domain of D, formed by all the constants appearing in D."}, {"title": "3.1. Interventional Distributions on PDBS", "content": "The causal effect relies on interventions, which in DBs become hypothetical insertions or deletions of tuples. If we start with a PDB DP, with a given distribution p, an intervention induces a new, interventional distribution (see Definition 2). Interventions will be denoted with do(Tin) and do(T out), with the intuitive meaning that tuple t is made true, i.e. it is inserted into DP (if it is not already in it). Similarly, do(\u03c4 out) means that 7 is made false, i.e. removed from DP. Interventions are applied only with endogenous tuples, which have an initial probability of being (true) in DP. Interventions are applied to detect if making a tuple true or false affects a query answer. They can also be applied with sets of tuples T, e.g. do(T in).\nWe will use expressions of the form $P(Q = 1 | do(t in))$, etc., where Q is a Boolean query, and P is the intervened distribution on the query range associated to a PDB DP. Intuitively, it means \"the probability of the query being true given that tuple + is made true\u201d. This common notation may be misleading, suggesting a conditional probability, which strictly speaking is not.\nMore precisely, in Definition 2, we start with a distribution p on the class of possible worlds W associated to Dr, and we create the intervened distributions $p^{+\\tau}(W) := p(W | do(tin))$ and $p^{-\\tau}(W) := p(W | do(\u03c4 out))$ on possible worlds. They can be seen as modifications of the original distribution p.\nDefinition 2 Given a PDB DP = \u3008W,p), and a tuple : (a) The positive intervention with \u315c on DP is the PDB: DP(do(tin)) := (W++,p++), with W++ := {W\u222a {T} |W \u2208 W}; and, for each W' \u2208 W++, $p^{++}(W') := \\sum_{W\\cup\\{ \\tau \\}=W'} p(W)$.\n(b) Similarly, for a negative intervention: DP(do(\u03c4out)) := (W\u00ae\u2122,p\u00ae\u2122), with W\u00ae\u00ae := {W \\ {T} | W \u2208 W}; and, for each W' \u2208 W\u00b2\u00af\u00ac, $p^-(W') := \\sum_{W\\setminus\\{ \\tau \\}=W'} p(W)$.\n(c) For a Boolean query Q, its intervened probabilities are: $P(Q = 1 | do(\\tau in)) := p^{++}(\\{W' \\in W^{++} | W' \\models Q\\})$, $P(Q = 0 | do(\\tau in)) := p^{++}(\\{W' \\in W^{++} | W' \\not\\models Q\\})$, $P(Q = 1 | do(\\tau out)) := p^{\\ominus\\tau}(\\{W' \\in W^{\\ominus\\tau} | W' \\models Q\\})$, and $P(Q = 0 | do(\\tau out)) := p^{\\ominus\\tau}(\\{W' \\in W^{\\ominus\\tau} | W' \\not\\models Q\\})$.\nIt holds: $p^{++}(\\{W' \\in W^{++} | W' \\models Q\\}) = \\sum_{W\\in W, W \\cup \\{ \\tau \\} \\models Q} p(W)$ (similarly for other cases). In case (c), e.g. P is the probability induced by $p^{++}$ on the range {0,1} of the query.\nRemark 3 (a) It follows from (1) that, for an endogenous tuple \u0442: $P(\\tau | do(\\tau in)) = 1$; and $P(\\tau | do(\\tau out)) = 0$, which captures the original intuition. (b) For a TID DP and two tuples \u03c4,\u03c4' \u2208 Den, it holds: $P(\\tau' | do(\\tau in)) = P(\\tau' | do(\\tau out)) = p(\\{\\tau'\\})$, that is, an intervention do(Tin) (do(out), resp.) on a TID translates in changing the probability of 7 to 1 (0, resp.), leav-ing all other probabilities unchanged. Furthermore, an intervened TID becomes a TID.\nThe same definitions can be applied to a scalar aggregate query Q, which also becomes a random variable over a PDB. Similarly, and \u201ccomponentwise\u201d, for aggregate queries with group-by."}, {"title": "3.2. The Generalized Causal Effect Score", "content": "In (Salimi et. al., 2016), in order to apply the CES(I,U(+)), the original DB was converted into a uniform TID. The CES(I,U(+)) can be generalized by considering an arbitrary PDB DP.\nDefinition 4 Let DP = \u3008W, p\u3009 be a PDB, and Q a Boolean or scalar aggregate query. The generalized causal effect score (GCES) of T C Den on Q is:\n$CE(DP,Q,T) := E(Q | do(Tin)) \u2013 E(Q | do(T out))$.\nThis definition relies on the probability distribution of DP. When DP is a TID associated to a regular relational DB D, we write $CE^{I}(D, Q,T)$. CES(I,U(+)) is a particular case where endoge-nous tuples have a uniform distribution U(+) (see Remark 1). In this case we use the notation $CE^{UI}(D, Q,T)$ (omitting the \u00bd).\nThe role of exogenous tuples is twofold. First, they are excluded from counterfactual interven-tions; and, secondly, they influence the probabilities used in the expected values by contributing with probability 1. There are no technical difficulties in defining causal-effects for exogenous tuples. However, we leave them outside the scope of explanations for query answers.\nRemark 5 Special cases and notation. (a) For a Boolean query Q: $CE(DP, Q,T) = P(Q = 1| do(T in)) \u2013 P(Q = 1 | do(T out))$. (b) CE(DP, Q, T) denotes the GCES for a single endoge-nous tuple \u0442.\nIn (Salimi et. al., 2016) it was shown that, for a MBQ Q, and \u03c4\u2208 Den, t is an actual cause (Halpern and Pearl, 2005) for Q in D iff $CE^{UI}(D, Q,T) > 0$. In (Livshits et al., 2021a), it was shown that the CES coincides with the BPI: $CE^{UI}(D, Q, t) = BPI(D, Q,T)$."}, {"title": "4. Computational Complexity of CES", "content": "In this section we investigate the complexity of computing the CES for an arbitrary TID, i.e. CEI(D, Q, T), and BCQs (see Remark 5). We obtain a dichotomy result similar to that for query answering on TIDs (Suciu et al., 2011). For its formulation, we need some preliminary notions.\nFor a BCQ Q, Atoms(Q) denotes the set of all atoms in Q, i.e. its conjuncts. For a variable v in Q, Atoms(v) denotes the set of atoms of Q where v appears. A BCQ Q is hierarchical if, for any two variables x,y in Q, one of the following holds: (a) Atoms(x) \u2286 Atoms(y), (b) Atoms(y) Atoms(x) or (c) Atoms(x) \u2229 Atoms(y) = \u00d8. Otherwise, the query is called non-hierarchical (Suciu et al., 2011). The evaluation of a BCQ without self-joins on a TID D: (a) Can be done in polynomial-time when Q is hierarchical, and (b) Is #P-hard when Qis non-hierarchical. All these results are in data complexity (Suciu et al., 2011). Deciding if a BCQ is hierarchical or not can be done with an efficient syntactic test.\nDefinition 6 (a) Let Q be a BCQ; G the undirected graph with nodes in Atoms(Q) and edges of the form {Ai, Aj}, where A\u2081 and A2 share at least one variable; and C(Q) the sets of connected components in G. Accordingly, two different sets of atoms in C(Q) do not share variables. (b) For an instance D compatible with the schema of Q, the fresh expansion of D via Q is the instance"}, {"title": "5. Characterizing Properties of the GCES", "content": "In this section we provide an axiomatic characterization of the Generalized Causal-Effect Score (GCES), that is, we show that this score is the only function satisfying a given set of properties. We consider the most general version of GCES, i.e. for an arbitrary probability distribution over all possible worlds of an instance. However, we restrict ourselves to monotone Boolean queries (MBQs), which includes BCQ and UBCQs. The axioms depend on dealing with MBQs.\nIn (Dubey and Shapley, 1979), an axiomatic characterization was given for the Banzhaf Power Index (BPI). It is a general axiomatization in the context of game-theory. As already mentioned, in (Livshits et al., 2021a) it was shown that, in the context of query answering in DBs, CES(I,U()), i.e. the CES with independent tuples and uniform distribution with parameter coincides with BPI; the latter applied with the endogenous tuples as players in a coalition game. From this connection, it follows that there is an axiomatic characterization for this particular case of the CES.\nIn the following, we will show that only some of the characterizing properties, or axioms, for the BPI still hold for the GCES. We will also propose extra properties for the GCES, and will establish, in Theorem 13, that the resulting set of axioms turns out to be categorical, i.e. fully characterizing for the GCES. We will start introducing some useful notions and notation that will allow us to formulate the characterizing properties of the GCES as appropriate for query answering in PDBs.\nDefinition 12 Let Q be a monotone Boolean query, DP = (W,p) a PDB, and W \u2208 W.\n(a) For W Den its power is:\n$Power(DP, Q, W) := \\sum_{\\tau \\in Den} \\Delta(Q, W, \\tau)$, with\n$\\Delta(Q, W, \\tau) := Q[W \\cup D_{ex} \\cup \\{t\\}] \u2013 Q[W \\cup D_{ex}]$.\n(b) For a tuple \u0442\u2208 Den, its power is: $Power(DP, Q, \\tau) := \\sum_{W \\subset (Den\\setminus\\{ \\tau \\})} \\triangle(Q, W, \\tau)$, with $\\Delta(Q, W, \\tau)$ as in (a).\n(c) The weighted power of \u0442\u2208 Den is:\n$Power^{w}(DP, Q, \\tau) := \\sum_{W \\subset (Den\\setminus\\{ \\tau \\})} \\Delta(Q, W, \\tau) \\times p(W \\cup D_{ex})$.\n(d) The total power of the pair (DP, Q), is: $Power(D, Q) := EW Den Power(DP, Q, W)$.\nThe power of a tuple 7 represents the number of subsets W for which, adding to them, pro-duces a change in the value of Q. Similarly, the power of a subset W represents the number of tu-ples that, when added to W, change the query answer. Notice that, equivalently, $Power(DP, Q) = \\sum_{\\tau \\in Den} Power(DP, Q, \\tau)$.\nConsider the instance (with tuple-identifiers) $DP = \\{T_{1}: R(a,b), T_{2} : R(b, c), T_{3} : S(\\alpha,\\alpha), T_{4}: S(a,d)\\}$ with exogenous tuples in $D_{ex} = \\{T_{1}\\}$. For the BCQ Q:\u2203x\u2203y\u2203z(R(x, y) \u2227 S(x, z)) and $W_{1}=\\{T_{2}\\}$: $Power(DP, Q, W_{1}) = \\sum_{\\tau\\in\\{T_{2},T_{3},T_{4}\\}} \\triangle(Q, W_{1}, T) = 0 + 1 + 1 = 2$.\nThe power of $T_{2}$ (as a tuple, not as the set $\\{T_{2}\\}$) is: $Power(DP, Q, T_{2}) = \\sum_{W \\subset (Den\\setminus\\{T_{2}\\})} \\Delta(Q, W, T_{2}) = \\Delta(Q,\\O, T_{1}) + \\Delta(Q, \\{T_{3}\\}, T_{2}) + \\Delta(Q, \\{T_{4}\\}, T_{2}) + \\Delta(Q, \\{T_{3}, T_{4}\\}, T_{2}) = 0 + 0 + 0 + 0 = 0$.\nWith $W_{2} = \\{T_{3}\\}, W_{3} = \\{T_{4}\\}, W_{4} = \\{T_{2}, T_{3}\\}, W_{5} = \\{T_{2}, T_{4}\\}, W_{6} = \\{T_{3}, T_{4}\\}, W_{7} = \\{T_{2}, T_{3}, T_{4}\\}, W_{8} = \\O$, the power of $W_{i}$ is $Power(D^{p}, Q,W_{i}) = 2$ if $i = 1, 8$, but 0, otherwise. Then, the total power of (DP, Q) is: $Power(DP, Q) = \\sum_{W \\subset Den} Power(DP, Q, W) = Power(DP, Q, W_{1}) +...+ Power(DP, Q, W_{8}) = 2 + 0 + \u2026 + 0 + 2 = 4$.\nAs mentioned above, the total power can also be obtained through the power of the tuples. The power of $T_{3}$ and $T_{4}$ are $Power(DP, Q, T_{3}) = Power(DP, Q, T_{4}) = 2$. Then, $Power(DP, Q) = \\sum_{\\tau\\in\\{T_{2},T_{3},T_{4}\\}} Power(DP, Q, t) = 0 + 2 + 2 = 4$.\nIn the following, we will assume that we have a fixed PDB $DP = D_{en} \\cup D_{ex}$, with $D_{en} = \\{T_{1}, ..., T_{N} \\}$, and a probability distribution p on W, its set of possible worlds. We restrict ourselves to the class MBQ of monotone Boolean queries for the schema of DP.\nNow, depending on a query Q, each tuple in $D_{en}$ will take a real number as a score that represent its relevance for the answer to Q from DP. This is represented as a \u201cvectorial score-function\", \u03c8, from MBQ to RN: \u03c8(Q) = (\u03c8T\u2081 (Q), ..., \u03c8TN (Q)).\nBased on (Dubey and Shapley, 1979), we first analyze the following potential properties of \u03c8:\nDUM: (for \u201cdummy\u201d) If \u03c4\u2208 Den is a dummy tuple, meaning that $Power(DP, Q, t) = 0$, then $\u03c8_{T}(Q) = 0$.\nEFF: (for \u201cefficiency\u201d) $\\sum_{\\tau\\in Den} \\psi_{\\tau}(Q) = Power(DP, Q)/(2^{N-1})$.\nSYM: (for \u201csymmetry\") If $Q[W \\cup D_{ex} \\cup \\{t\\}] = Q[W \\cup D_{ex} \\cup \\{T'\\}]$ for every $W \\subset D_{en} \\setminus \\{T,T'\\}$, then $\u03c8_{T}(Q) = \u03c8_{T'}(Q)$.\nLIN: (for \u201clinearity\u201d) For MBQs Q and Q', \u03c8(Q \u2228 Q') + \u03c8(Q\u2227 Q') = \u03c8(Q) + \u03c8(Q').\nAccording to (Dubey and Shapley, 1979), as applied to our setting, there is a unique function 4 : MBQ \u2192 RN that satisfies the properties DUM, EFF, SYM and LIN, and it corresponds to the BPI as defined in (3). For the formulation of the properties above we do not using the possibly arbitrary distribution of the PDB DP. However, the BPI on DBs coincides, in its turn, with the CES(I,U()) case of the Causal-Effect Score in DBs (Livshits et al., 2021a). This leaves open the question about properties that characterize GCES, the general case of the score, that we address in the rest of this section. We would expect the distribution p of DP to play a role in them."}, {"title": "6. Discussion and Conclusions", "content": "In between, and in parallel work, we have managed to investigate in detail the conditions under which CES(I,U(+)) (i.e. GCES with independence and U(+) distribution), Shapley and RESP are aligned, i.e. they produce the same rankings (a property also called \"ordinal equivalence\" Freixas (2010)). Experimentation with cases of queries whose scores are not aligned is left for ongoing and future work, so as other open research directions we mention next.\nBeyond Monotone Queries: We have restricted ourselves to monotone queries, and this as-sumption play an important role in the characterization of the GCES. It is left open to find a charac-terization for interesting classes of non-monotone queries, e.g. conjunctive with negative literals.\nBeyond Boolean Queries: For the axiomatic characterization of the GCES, we have restricted ourselves to Boolean queries. It would be interesting to have such an axiomatization for more general monotone numerical queries, e.g. some aggregate queries.\nGES Monotonicity: It would be interesting to investigate more deeply the monotonicity prop-erties (or the lack thereof) of the GCES. For example, under what changes in the database, or in the tuple probabilities, the GCES of tuples change accordingly (or the other way around).\nScore Computation: Due to the intrinsic high complexity of computing the GCES, it is worth exploring efficient approximate algorithms, possibly for some interesting cases of queries.\nAggregate Queries: In this work, we considered mostly conjunctive queries. A natural exten-sion is a deeper investigation of queries with aggregations on CQs. We made early on the case for the convenience of the GCES for this kind of queries.\nSemantic Constraints: RESP has been formalized and investigated in the presence of integrity constraints, and its behavior changes (Bertossi and Salimi, 2017b). This is something to investigate for the GCES, in its basic and generalized versions. Particularly interesting becomes dealing with constraints on probabilistic DBs (Suciu, 2020).\nGES Robustness: It would be interesting to analyze the robustness of the Generalized CES, under small variations of parameters, such as the distribution of the probabilistic DB.\nAttribute-Level GCES: We defined the GCES at the tuple level. It would be interesting to extend its definition and investigation in order to quantify the causal effect of an attribute value in a tuple. This case is challenging in that it is not only about making an attribute value true or false anymore."}, {"title": "Appendix: Proofs", "content": "Appendix A. Proofs of Section 4\nProof of Proposition 8: Let DP = (W, p) be a TID associated to relational instance with D. Now, consider a fresh expansion of D over Q, D' = DUT. Each new tuple TU \u2208 T will have a probability of 1 and will be independent from every other tuple. The tuples in D \u2229 D' retain there original (independent) probabilities. Now, consider a new tuple TU \u2208 T created from an atom of the component Ck \u2208 C(Q), we can compute its CES using the new probability distribution p': CEI(D', Q, TU) = E(Q | do(TU in)) \u2013 E(Q | do(TU out)) = P(Q | do(TU in)) \u2013 P(Q | do(TU out)) = 1 \u2013 P(Q | do(TU out)), the last probability corresponds to interventions on p'.\nIt holds: (a) P(Q, D') = 1 since (D' \\ D) |= Q, that is, the set of new tuples TU is sufficient to make the query true, and each new tuple has a probability of 1. This probability will not change by the intervention do(TU in). (b) By Remark 7, we can compute P(Q | do(TU out)) by multiplying the probability of the sub-query of each component of Q, and since each component, will have a probability of 1 (because each tuple in T has a probability of 1), P(Q | do(TU out)) = P(Qk, D), with Qk the sub-query of component Ck. Note that, if \u03c4\u03c5,\u03c4' \u2208 T were created from atoms of the same component, say Ck, then CEI(D',Q,TU) = CEI(D',Q,TU'). Consider a selec-tion function o as in Definition 6. Then, by Remark 7, we can rewrite the probability of the sub-query of each component as $P(Q_{i}, D) = 1 \u2013 CE^{I} (D, Q, \\sigma(C_{i}))$. It follows that $P(Q, D^{p}) = \\Pi_{C \\in C(Q)} (1 \u2013 CE^{I} (D, Q, \\sigma(C)))$. Since two tuples from atoms of the same component will have the CES, then any selection function \u03c3 would produce the same result.\nProof of Theorem 10: Assume Q is hierarchical. Its causal effect is given in Remark 5(a). Since DP is a TID, the two probabilities there are also for TIDs (see Remark 3(b)). As a consequence, they can be computed in polynomial-time.\nAssume Q is non-hierarchical. We appeal to Proposition 8. Let DP be a TID that makes com-puting P(Q, DP) a #P-hard case. Now, for DP, consider the TID (D')p as in Proposition 8, for which there are endogenous tuples satisfying (4), which shows that there are tuples for which com-puting CE\u00b9 is as hard as computing P(Q, DP).\nAppendix B. Proof of Theorem 13\nIn order to prove Theorem 13, we need some notions and a technical result. First, we need to introduce a particular query and its notation. For a fixed instance D, and S \u2286 D, Qs denotes the following monotone Boolean query: For W\u2208 W,\n$Q_{S}[W] := \\begin{cases} 1,&\\text{if } S \\subseteq W \\\\ 0& \\text{ otherwise}. \\end{cases}$"}]}