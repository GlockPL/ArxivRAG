{"title": "Inverse Deep Learning Ray Tracing for Heliostat Surface Prediction", "authors": ["Jan Lewen", "Max Pargmann", "Mehdi Cherti", "Jenia Jitsev", "Robert Pitz-Paal", "Daniel Maldonado Quinto"], "abstract": "Concentrating Solar Power (CSP) plants play a crucial role in the global transition towards sustainable energy. A key factor in ensuring the safe and efficient operation of CSP plants is the distribution of concentrated flux density on the receiver. However, the non-ideal flux density generated by individual heliostats can undermine the safety and efficiency of the power plant. The flux density from each heliostat is influenced by its precise surface profile, which includes factors such as canting and mirror errors. Accurately measuring these surface profiles for a large number of heliostats in operation is a formidable challenge. Consequently, control systems often rely on the assumption of ideal surface conditions, which compromises both safety and operational efficiency.\nIn this study, we introduce inverse Deep Learning Ray Tracing (iDLR), an innovative method designed to predict heliostat surfaces based solely on target images obtained during heliostat calibration. Our simulation-based investigation demonstrates that sufficient information regarding the heliostat surface is retained in the flux density distribution of a single heliostat, enabling deep learning models to accurately predict the underlying surface with deflectometry-like precision for the majority of heliostats. Additionally, we assess the limitations of this method, particularly in relation to surface accuracy and resultant flux density predictions. Furthermore, we are presenting a new comprehensive heliostat model using Non-Uniform Rational B-Spline (NURBS) that has the potential to become the new State of the Art for heliostat surface parameterization. Our findings reveal that iDLR has significant potential to enhance CSP plant operations, potentially increasing the overall efficiency and energy output of the power plants.", "sections": [{"title": "1. Introduction", "content": "In order to enhance the economic viability of solar tower power plants, it is crucial to enhance their efficiency. A viable approach for achieving this is through the optimization of the flux density distribution on the receiver. In commercial plants this can be done by optimal aimpoint control. e.g. using the ant-colony optimization meta-heuristic [1, 2] or deep learning models [3] to calculate a flux density for each heliostat using ray tracing and optimize in a next step the flux density distribution on the receiver as a superposition of those. Moreover, using the knowledge about the focal spot shape and its position on the receiver even higher efficiency gains can be achieved. Even simple assumptions can increase the energy output by up to 20% [4]. However, in commercial power plants aimpoint distribution is mostly static or just to mitigate temperature peaks and gradients that may cause material wear, e.g. by using the Vant Hull algorithm [5, 6].\nThis can be explained by the fact that exact information about the heliostats is not easily accessible. Inherent mirror errors and uncertainties about the heliostat's precise geometry model contribute to the individuality of each heliostat's flux density shape and the tracking error.\nThe mirror error is constituted of roughness, slope, and canting errors. The roughness, arises from sub-micrometer flaws on the reflective surface. Slope error measures the deviations of the mirror surface from its ideal shape. Canting error, on the other hand, reflects misalignment among mirror facets. Among these errors, slope and canting are particularly crucial for the flux density [7, 8, 9]. A precise knowledge about the heliostats mirror error can be loaded in a ray tracing environment to predict the flux density of the heliostat under certain environmental conditions accurately [10, 11].\nThe most prominent and state-of-the-art method for obtaining specific surface profiles of heliostats is deflectometric measurement [11, 12]. This method involves capturing camera images of stripe patterns with diverse frequencies projected onto a Lambertian target and subsequently reflected from the heliostat. However, this approach faces obstacles in the heliostat field due to factors such as dew, wind, and that the measurement has to be conducted at night with long exposure times. Alternatively, some methods utilize a laser [13, 14], while others employ photogrammetry [15, 16, 17, 18, 19] or flux mapping [20]. However, up for today these measurements are unreliable or cost intensive. For a complete review the reader is referred to [9]."}, {"title": "2. Workflow of inverse Deep Learning Ray Tracing", "content": "The primary measurements executed at CSP plants are target images employed for calibration with the Camera-Target Method [26], offering a direct observation of a heliostat's flux density. The flux density shape is caused by the precise heliostat surface characteristics and known parameters such as sun and heliostat positions, and hence the flux density contains information about the surface. However, predicting surfaces from the heliostat's flux density is highly ill-posed and underdetermined due to facets canting and the overlap of reflected and scattered rays on deformed heliostat surfaces and hence highly challenging.\nThis study aims to use deep learning models to predict the heliostat surface using the heliostat's target images as input. This approach is the inverse direction to physical ray tracing and hence we term the method inverse Deep Learning Ray Tracing (iDLR). Figure 1 shows the integration of iDLR in the routine power plant operation. Deep learning models have the capability to learn typical surface deformations constrained by material properties and mechanical construction of the mirror surface. This unique ability enables them to predict heliostat surfaces even within the underdetermined regime, leveraging the surface information learned during training. With this capability iDLR should perform better in this underdetermined problem than comparable physical algorithms like differentiable ray tracing [21]."}, {"title": "2.1. Comprehensive NURBS Heliostat Model", "content": "We employ a heliostat model proposed by Pargmann et al. [21], which integrates a traditional geometric model with an innovative spline approach to parameterize the reflecting surface of the heliostat. Current state-of-the-art (SOTA) methods represent heliostat surfaces as a point cloud of normal vectors [11], providing precise representation but at the cost of a high number of parameters. For instance, the deflectometry used at the Solar Tower J\u00fclich predicts approximately 80,000 normal vectors per facet (1.6 m \u00d7 1.25 m). This presents a challenge for training deep learning models due to the high computational resource demands and the potential decrease in model precision from the large number of free parameters.\nPargmann et al. [21] employ a differentiable Non-Uniform Rational B-Spline (NURBS) within a differentiable ray tracing routine (code published at [31]) as a trainable parameter to fit a heliostat surface to a given flux density. NURBS are the industrial standard to represent complex geometries with few parameters in Computer-Aided Design (CAD) [32]. We adapt this method by fitting the NURBS parameter against the normal vectors from the deflectometry measurement through a gradient-based optimization process. The NURBS parameter subsequently serves as a representation of the heliostat surface.\nInitially, we reduce the number of NURBS parameters. By using one NURBS per facet, fixing the xy-position of each control point on a predefined grid, and setting the NURBS weight to zero, the heliostat surface is parameterized by only 4x8x8 z-control points. These z-control points are then fitted using the differentiable formulation of Pargmann et al. [21] and gradient descent against the normal vector cloud of the deflectometry measurement. As a result, the z-control points of the NURBS surface act as a comprehensive representation of the heliostat surface, reducing the number of free parameters from nearly 1 million to just 256-a reduction of 99.97%. This significantly enhances the efficiency of training machine learning models that involve heliostat surfaces. Furthermore, the NURBS representation is drastically more memory and computationally efficient than the normal point cloud. A single deflectometry measurement's normal vectors occupy 8.6 MB, while the NURBS representation requires only 7 KB, a reduction of 99.91%."}, {"title": "2.2. Data Acquisition and Augmentation", "content": "The utilized dataset comprises stripe pattern deflectometry measurements conducted at the STJ, encompassing a total of 458 heliostat surfaces. A split into training data (428), validation (32) and testing data (32) was made, ensuring the exclusion of surfaces from validation and testing heliostats in the model training. For each heliostat, the z-control points of the NURBS were computed as detailed in Section 2.1 and act as surface representation. As there is a constant unknown offset for the surface of each facet, the mean value of the surface from each facet was set to zero.\nThe dataset comprises an unusually extensive collection of deflectometry data. Despite its size, it remains relatively small for effectively training a neural network. To address this limitation, two types of data augmentation were applied. Firstly, the heliostat surface was rotated by 180 degrees. Secondly, the weighted average between two randomly selected surfaces was calculated using $Z_{augm} = a * Z_1 + (1 \u2212 a) * Z_2$ with $a \u2208 (0, 1)$. This approach ensures training on a diverse artificial dataset, avoiding the use of surfaces with unrealistic features given the physical constraints"}, {"title": "2.3. Model and Training", "content": "The nature of the problem suggests the adoption of an Encoder-Decoder architecture (see Figure 3). For the decoder, we employ the StyleGAN2 architecture [33] which is highly successful in generating data of a certain domain. The encoder is tasked with fusing two distinct input data streams: the eight flux densities, parameterized as an 8x64x64 tensor, and scalar data containing the corresponding sun positions and the position of the heliostat in the field. The input flux densities undergo processing by a convolutional encoder, while weight demodulation, as elucidated in Karras et al. [33], is employed to integrate the scalar information. The number of channels is kept constant by 256 in the encoder. The latent space size is 3*32 using the extended w+ latent space of the styleGAN2 architecture introduced by Richardson et al. [34]. The latent surface representation in the latent space is fed in the decoder which generates a cartesian representation of the surface spline. The total number of trainable parameter is 3.5 million.\nThe model underwent training utilizing the semi-artificial dataset detailed in Chapter 2.2 for a total of 50 epochs. By using also less than eight input flux densities and sun positions during the training we ensure that the model can predict surfaces for any number of input flux densities up to eight."}, {"title": "3. NURBS for Surface Representation: Quality and Computational Efficiency", "content": "To assess the quality of the NURBS parameterization, we compare it to the deflectometry normal vector point cloud. Figure 4a compares the normal vectors from deflectometry measurements with those from the NURBS surface, demonstrating minimal differences and underscoring the accurate parameterization of the heliostats' normal vectors using the 4x8x8 NURBS z-control points. In Figure 4b, the surface deviation of the heliostat from the ideal assumption is depicted, with a conventional integration-based algorithm estimation on the left and the NURBS parameterization on the right. The strong alignment between both underscores the robust parameterization achieved with the NURBS parameters. To quantify the quality of the NURBS parameterization, we calculate the angular deviation between the normal vectors from the NURBS spline and the deflectometry measurements. 81% of the NURBS normal vectors have an angular deviation of zero mrad from the original deflectometry normal vectors within machine accuracy. The remaining 19% form an extremely skewed tail, with the largest outlier being 10.2 mrad. While the majority of the normal vectors are fitted perfectly, the outliers have mainly three causes: the NURBS normals must be smoother than the original, sharp edges in the contour lines are rounded, and at the boundary of the facets, the NURBS parameterization becomes slightly less accurate due to boundary effects.\nNext, we compare the flux density predictions based on the normal vector cloud and the"}, {"title": "4. Results", "content": "4.1. Surface Prediction\nIn Figure 6a, ten randomly selected surface predictions by iDLR are shown, whereby seven simulated flux densities were used as an input. The mean absolute error per control-point (MAE) between the predicted surface and the deflectometry-derived surface has a median of 0.14 mm with (Mininmum/Quantile 1/Quantile 3/Maximum) of (0.07/0.12/0.17/0.7) mm. For comparison the typical surface deviation falls within the range of -2 mm to 2 mm, but exhibiting considerable variability among heliostats. As illustrated in Figure 6a, a strong alignment is evident"}, {"title": "4.2. Flux density prediction", "content": "In the subsequent phase, the predicted surfaces serve as a basis for forecasting flux densities of heliostats using ray tracing. Randomly selected flux density predictions are visualized in Figure 6b and compared to the ideal heliostat assumption. A high match between the flux densities evoking from iDLR and deflectometry surfaces is visible across all shown heliostats. Remarkably, this does not only hold for the heliostats with accurate surface prediction (compare Figure 6a) but also for those with a poor surface reconstruction (the third heliostat from the left). This phenomenon can be attributed to the inherent underdetermination of the problem, as surface deformations that significantly change the facets mean normal vector (especially canting errors) have a stronger effect on the flux density shape for heliostats at larger distances. To quantify the quality of the flux density predictions, the mean accuracy is computed as described in section 2.1. The median accuracy of the flux density prediction of the model is 0.92 with (Min/Q1/Q3/Max) of (0.43/0.90/0.94/0.98), proving a very accurate and reliable flux density prediction using the surfaces predicted with the model for most predictions. Generally, even fine details can be predicted using the method, however some small deviations from especially inhomogeneous and exceptional flux densities are possible. For comparison, the ideal heliostat assumption of a flat surface without deformations achieves a median accuracy of only 0.67 with (Min/Q1/Q3/Max) of (0.37/0.59/0.74/0.9). This is not only on median 0.25 (-0.08/0.18/0.33/0.55) less accurate then the prediction with iDLR and ray tracing, but also the interquartile range (IQR) of the ideal heliostat prediction (IQRideal = 0.15) is more than three times as high as those from iDLR (IQRIDLR = 0.04) and make iDLR to the more precise and reliable model. Over the whole test data set consisting of 32 simulated heliostats on 142 positions, the ideal heliostat flux density was more accurate than the iDLR prediction for only four heliostats, showing a failure rate of iDLR based flux density prediction around 1% in the presented simulated environment."}, {"title": "5. Discussion", "content": "The results obtained through simulation underscore the significant ability of iDLR. The method demonstrates its capability to predict heliostat surfaces with high accuracy using simulated flux densities, despite the inherently undetermined and ill-posed nature of the inverse problem. While the majority of the reconstructed surfaces closely align with the deflectometry ground truth (median MAE of 0.14 mm with (Min/Q1/Q3/Max) of (0.07/0.12/0.17/0.7) mm), it is important to acknowledge a potential drawback: there exists a risk of less accurate surface predictions compared to deflectometry measurements for a minority of heliostats. This is particularly evident for heliostats with a small amount of input flux densities and those in close proximity to the tower, where surface predictions may exhibit deviations from deflectometry ground truth. This discrepancy arises due to the influence of canting errors and surface deformation, leading to changes in the mean normal vector of facets. The impact of these factors on flux density is stronger for heliostats located further away from the tower, providing more information about those surface deviations. However, this relationship does not hold for surface errors with higher frequency heliostat surface features, such as waviness. With higher distances to the tower, the features in the flux density caused by waviness diminishes and the flux density becomes more smooth. Notably, the model demonstrates the ability to predict higher frequency heliostat features even for heliostats at greater distances, indicating the utilization of learned static material constraints to make accurate predictions rather than relying solely on conserved information in the flux density.\nIn contrast to the singular existing alternative for heliostat surface prediction from target images, the differentiable ray tracer proposed by Pargmann et al. [21], our findings demonstrate substantial improvement. While the differentiable ray tracer can only predict the surface for one singular heliostat with pronounced, artificially introduced surface deformations, iDLR is able to predict a wide range of measured, realistic heliostat surfaces. The problem of the differentiable ray tracer lies in the underdetermined nature of the problem as it does not acquire any preknowledge about the physical constraints of the surface deformations. Our approach successfully navigates this challenge by learning the physical constraints of the heliostat surfaces, thereby narrowing the solution space and enabling precise predictions despite the inherent underdetermination and ill-posed characteristics of the problem. Furthermore, iDLR predictions come at real time while the predictions of differentiable ray tracing is depended on the number of epochs and number of input flux densities, resulting in computation times in the range of a few minutes up to some hours per heliostat.\nOn the other side, we identified three drawbacks of iDLR. Firstly, while the model yields real-time predictions, its training process is notably time-intensive. The execution of ray tracing and subsequent flux density processing consumes approximately 0.1 seconds per iteration. Consequently, the generation of the training dataset demanded approximately 45 hours of computation on a single GPU (NVIDIA A100). Subsequent training and testing of the model on the same GPU required additional 12 hours. Despite this initial investment in time, the eventual computational costs are anticipated to be outweighed by iDLR's real-time inference capabilities, rendering it superior to optimization-based algorithms like differentiable ray tracing over already short periods of usage. Secondly, to achieve accurate surface predictions, the model necessitates training on realistic heliostat surfaces, which can be obtained through measurement or simulation. While surface measurement incurs associated costs, it's noteworthy that each power plant intending to implement iDLR need not possess a measurement setup; rather, only one setup per heliostat type is requisite at any power plant or even at the manufacturer side. Alternatively, circumventing the necessity for heliostat surface measurements, finite-element simulation of heliostats could be employed to predict potential deformations induced by construction-induced stress. Simple surface simulation, that do not consider physical factors like adding gaussian deformations to the ideal heliostat, were tried out and it was found that the trained model has problems to predict real heliostat surfaces from the simulated flux densities, as it does not learn the heliostat surface space with its physical constraints. Lastly, the model may encounter challenges in accurately predicting particularly rare or unique surface deformations that substantially deviate from those encountered during its training phase. Such out of distribution predictions pose a notable hurdle, necessitating ongoing refinement and adaptation of the iDLR framework.\nThe minimum requisite quantity of measured heliostat surfaces for model training is contingent upon two primary factors. Firstly, it relies on the diversity present in surface deformations, as the iDLR model necessitates comprehending a broader surface space, thereby requiring a larger dataset for effective learning. Secondly, it is influenced by the generalizability of a distinct set of deflectometry measurements. Biases often manifest within datasets, such as an overrepresentation of deflectometry measurements from heliostats situated in close proximity to the tower, owing to the ease of application in these areas. Given the likely existence of correlations between mirror error and heliostat position (e.g. larger canting errors occurring at closer positions),"}, {"title": "6. Conclusion", "content": "We have introduced inverse Deep Learning Ray Tracing (iDLR), an innovative and cost-effective methodology for predicting heliostat surfaces from target images, employing deep learning to solve the inverse direction to ray tracing. The simulation results indicate that iDLR holds considerable promise as an in-situ approach for predicting heliostat surfaces from target images. The predicted surfaces demonstrate competitive accuracy compared to deflectometry surfaces for the majority of heliostats, all while incurring minimal costs. Integrating the predicted surface into ray tracing aim-point optimization strategies has the potential to enhance the flux density distribution on the receiver, thereby optimizing the overall efficiency of power plant operations."}]}