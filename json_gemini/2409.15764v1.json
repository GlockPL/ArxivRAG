{"title": "Spatial-Temporal Mixture-of-Graph-Experts for Multi-Type Crime Prediction", "authors": ["Ziyang Wu", "Fan Liu", "Jindong Han", "Yuxuan Liang", "Hao LIU"], "abstract": "As various types of crime continue to threaten public safety and economic development, predicting the occurrence of multiple types of crimes becomes increasingly vital for effective prevention measures. Although extensive efforts have been made, most of them overlook the heterogeneity of different crime categories and fail to address the issue of imbalanced spatial distribution. In this work, we propose a Spatial-Temporal Mixture-of-Graph-Experts (ST-MoGE) framework for collective multiple-type crime prediction. To enhance the model's ability to identify diverse spatial-temporal dependencies and mitigate potential conflicts caused by spatial-temporal heterogeneity of different crime categories, we introduce an attentive-gated Mixture-of-Graph-Experts (MGEs) module to capture the distinctive and shared crime patterns of each crime category. Then, we propose Cross-Expert Contrastive Learning(CECL) to update the MGEs and force each expert to focus on specific pattern modeling, thereby reducing blending and redundancy. Furthermore, to address the issue of imbalanced spatial distribution, we propose a Hierarchical Adaptive Loss Re-weighting (HALR) approach to eliminate biases and insufficient learning of data-scarce regions. To evaluate the effectiveness of our methods, we conduct comprehensive experiments on two real-world crime datasets and compare our results with twelve advanced baselines. The experimental results demonstrate the superiority of our methods.", "sections": [{"title": "I. INTRODUCTION", "content": "As the incidence of various crimes (e.g., theft, assault, robbery, etc.) continues to rise, they have become a significant threat to public safety and economic development [1]. Contrary to the intuitive belief that criminal acts are random and unpredictable, crime pattern theory reveals a different reality, suggesting that crimes are either planned or opportunistic, following implicit patterns [2]. The goal of crime prediction, therefore, endeavors to unravel these patterns, as accurate forecasting of crime occurrences stands as a cornerstone for effective crime prevention. By empowering policymakers and law enforcement agencies to adopt proactive strategies, crime prediction plays a pivotal role in shaping urban governance and enhancing public safety.\nDue to its importance, numerous machine learning based crime prediction methods have recently been developed, generally categorized into deep attentive-based and graph-based approaches. The deep attentive-based approach [3], [4] aims to model crime dynamics using various attention mechanisms. For example, DeepCrime models crime dynamics using external feature adaptive fusion. On the other hand, graph-based approaches [5], [6], [7], [8] aim to capture the spatial-temporal relationships among different crime patterns. For instance, Wu et al. [9] explore the use of spatial-temporal Graph Neural Networks (GNNs) for crime prediction, leveraging the spatial modeling capabilities of GNNs. Despite these significant efforts, these methods still struggle to effectively model the spatial-temporal dependencies among different crime categories due to their spatial-temporal heterogeneity.\nThe spatial-temporal heterogeneity among different crime categories is primarily driven by the distinct spatial-temporal patterns characteristic of each crime category. Crime activities in each category typically reflect unique patterns. For instance, burglaries are intuitively more likely to occur in residential zones than in commercial or public areas, whereas larcenies are more prevalent in the latter. As depicted in Figure 1, different crime categories exhibit significant disparities in their spatial distributions, highlighting the pronounced pattern heterogeneity among them. When traditional spatial-temporal prediction approaches are applied to crime prediction, they are often constrained by their model architecture, which typically only captures shared spatial-temporal dependencies across all crime categories. Such approach overlooks the distinctive patterns unique to each category, which can lead to two key issues: 1) The unique crime patterns, especially those that are distinctive, cannot be fully captured, resulting in incomplete pattern modeling; 2) Different categories of crime patterns can be mutually contradictory in specific regions, complicating accurate pattern modeling. However, simply introducing a more tailored model architecture or increasing the model size is insufficient to address this pattern heterogeneity. Therefore, a fundamental question arises: How can we develop a prediction model that fully captures the heterogeneous crime patterns while alleviating the conflicts among categories?\nRecently, the Mixture-of-Experts (MoE) architecture has demonstrated its superiority in handling heterogeneous data due to its remarkable adaptability and generalization capabilities [10], [11]. However, directly adopting the MoE architecture for the multi-type crime prediction presents a non-trivial task. First, there is the issue of dynamically routing different experts to integrate the extracted spatial-temporal knowledge. Most existing MoE methods are designed to handle static tasks, whereas crime prediction is typically a dynamic task. This dynamic nature arises from the fact that crime patterns are highly variable across different regions and time periods. For instance, property crimes might peak in certain residential areas during nighttime, while violent crimes may be more prevalent in commercial areas during weekends. As a result, the system must route the specific experts for different crime categories, adapting to changes in spatial and temporal crime distributions, which is challenging. Second, the complexity of dynamically modeling the various crime patterns adds another layer of difficulty. Crime data naturally exhibits spatially imbalanced distributions. As shown in Figure 2, different crime categories are unevenly distributed across various regions of New York City. Traditional MoE frameworks can be easily influenced by regions with extreme numbers of crime occurrences, potentially compromising prediction performance in other regions. Therefore, avoiding biased modeling caused by imbalanced spatial distribution presents another significant challenge. These challenges necessitate a sophisticated mechanism to ensure that the MoE framework can adapt to the dynamic and heterogeneous nature of crime data.\nTo this end, we propose a new spatio-temporal crime prediction framework, named Spatial-Temporal Mixture-of-Graph-Experts (ST-MoGE), designed to address the spatial-temporal heterogeneity posed by different crime categories. Specifically, we introduce the Attentive-gated Mixture-of-Graph-Experts (MGEs) module. This module comprises multiple spatial-temporal graph learning experts-both crime-specific and universal experts to fully capture the heterogeneous and universal crime patterns. An attentive gating mechanism is employed to dynamically route specific experts for the selective integration of the extracted spatial-temporal knowledge from each expert. Additionally, to ensure that the optimal crime-dependent experts are routed and to decompose the learning of unique crime patterns in parallel, we propose cross-expert contrastive learning (CECL) to ensure that each crime-dependent expert focuses on learning its specific crime pattern. Furthermore, to address the challenge of imbalanced spatial distribution, we propose regional-aware predictors. These predictors dynamically adjust weights across different regions to mitigate disproportionate influences during model training. The key contributions can be summarized as follows:\n\u2022We present ST-MoGE, a tailored framework for collective multi-type crime prediction an innovative framework for crime prediction. To the best of our knowledge, this study is the first attempt to address the spatial-temporal heterogeneity of different crime categories by MOE architecture.\n\u2022We propose an MoE-architectured spatial-temporal network that comprehensively captures heterogeneous spatial-temporal characteristics posed by diverse crime categories. We further devise a contrastive learning approach, relieving the redundancy and enhancing the concentration of each expert. Moreover, we devise a hierarchical adaptive loss-reweighting algorithm to relieve the training biases caused by the imbalanced spatial distribution of crimes.\n\u2022We conduct comprehensive experiments on two real-world crime datasets from New York City and Chicago, evaluating 12 spatial-temporal prediction methods from various angles. The experimental results demonstrate that our ST-MoGE significantly outperforms existing methods."}, {"title": "II. RELATED WORKS", "content": "Spatial-temporal prediction involves analyzing and predicting the evolution of state or value across both spatial and temporal dimensions. It has been widely used for tasks of urban computing, such as traffic flow prediction [12] and public transportation optimization [13]. Extensive methodologies are proposed for spatial-temporal prediction. Early methodologies involve employing statistical or conventional machine learning models, including ARIMA [14], Random Forest Regression [15], SVR [16] and KNN [17]. In recent years, deep learning methods, benefiting from their capacity for capturing complex spatial-temporal dependencies, have shown remarkable performance in various urban computing tasks involving spatial-temporal prediction [18], [19], [20]. Time-series prediction methods like Recurrent Neural Networks (RNNs) and Temporal Convolutional Networks (TCNs) are widely applied for modeling temporal dependencies. RNNs are used in models such as D-LSTM [21], ST-RNN [22].\nOn the other hand, TCNs are leveraged in GWN [23] and MTGNN [24], demonstrating their effectiveness in handling temporal dynamics. To capture spatial dependencies, convolutional neural networks (CNNs) are often applied to grid-structured data [8]. More recently, graph neural networks (GNNs) have been adopted to model spatial dependencies in non-Euclidean structured spatial-temporal data. For instance, several methods leverage spectral graphs, such as STGCN [5] and DCRNN [25]. To account for dynamic spatial dependencies, graph attention neural networks have been introduced to dynamically calculate region-specific importance, as seen in GMAN [24]. These models do not require predefined spatial information, allowing them to discover spatial correlations in a data-driven manner. However, the aforementioned methods could be limited when applied to crime prediction due to several imbalanced data distributions and issues with multi-objective prediction."}, {"title": "B. Crime Prediction", "content": "Crime prediction has been widely researched over the years. Initially, statistical models and conventional machine learning methods were employed, including ARIMA [26], [27], KNN [28], [29], Random Forest [30], [31], Decision Tree [32], [33], and XGBoost [34], [35]. In recent years, deep learning-based methods have also gained significant attention in crime prediction [36], [37].\nSome researchers use external information to boost prediction performance [38], [39], [40], [41]. For example, [42] estimates regional crime rates using point-of-interest (POI) data and demographic information. Huang et al. [43] developed DeepCrime, which builds static region embeddings with POI data to capture regional traits and uses hierarchical GRUs for prediction. AttenCrime [44] incorporates external spatial-temporal data like anomaly data and taxi data, employing attention mechanisms to model these cross-domain relationships. Data sparsity is a key challenge in crime prediction, limiting the model's ability to detect patterns in areas with few crime occurrences. Zhao et al. [45] tackled this by using transfer learning, extracting crime patterns from areas with abundant data and applying them to regions with low crime rates. Similarly, in [46], an unsupervised domain adaptation method was introduced for cross-city crime risk prediction. Li et al. [8] also used self-supervised learning for data augmentation in ST-HSL, incorporating a hypergraph convolution network for crime pattern modeling. Fine-grained crime prediction worsens data sparsity due to the increased detail, making the problem even more significant [9], [44], [47]. In STtrans [9], a shared embedding space for pattern extraction and adversarial training helped address this issue. Zhao et al. [44] also proposed a classification-labeled continuousization strategy to convert sparse crime data into continuous signals, easing the sparsity problem in fine-grained predictions.\nUnlike deep learning methods, some studies use mathematical models to predict crime patterns, offering faster inference and better explainability [48], [49], [50], [27]. For instance, Zhao et al. [48] introduced a tensor factorization approach for single-category crime prediction. In their later work [49], they expanded to multi-category crime prediction, designing a mathematical model to capture dependencies across spatial, temporal, and categorical dimensions."}, {"title": "C. Mixture-of-Expert", "content": "Mixture-of-Expert (MoE) indicates a machine learning architecture that combines multiple specialized sub-models, each trained to handle different subsets of data or tasks, to improve overall performance. In recent years, MoE has been applied in various domains (e.g., computer visions [51], [11], nature language processes [52], [53]), presenting remarkable effectiveness in handling heterogeneous data and complex tasks. Several existing studies also adopt MoE for spatial-temporal prediction. For instance, GESME-Net [54] introduces a spatial-temporal MoE network with CNNs and RNNs as experts, applied to handle the source heterogeneity posed by multi-city ride-hailing demand prediction. Liu et. al. [55] propose ST-MoE, which constructs embeddings encoded with spatial-temporal knowledge and adopts MLPs as experts for prediction. CP-MoE [56] employs multiple tailored adaptive graph learners as experts to capture traffic congestion spatial-temporal patterns from various aspects and further introduces specialized experts to identify stable trends and periodic patterns from traffic data. An ordinal regression strategy is further adapted to facilitate effective collaboration among different experts."}, {"title": "III. PRELIMINARIES AND PROBLEM DEFINITION", "content": "In this section, we first introduce several definitions in this paper and then formally formulate the research problem.\nDefinition 1 (Region Graph G). In this study, we represent the topological structure of a city as a graph $G = (V,E, A)$. The city is equally divided into N regions using, with each region labeled as $R = {r_i|r_i \u2208 r_1, ..., r_n, ..., r_N }$. Each region serves as a node in E. The set V represents a collection of edges. If two regions are adjacent geographically, their corresponding nodes in the graph are considered connected. A represents the adjacency matrix, defined as $A \u2208 R^{N\u00d7N}$, where\n$A_{i,j} = \\begin{cases}\n1, & \\text{if } r_i \\text{ and } r_j \\text{ are connected} \\\\\n0, & \\text{else.}\n\\end{cases}$\nDefinition 2 (Crime Tensor). The raw crime data comprises reports of crime occurrences. Each report includes details such as the category of crime, precise timestamp, and geographical coordinates. By associating each crime occurrence with its respective time slot and region, we construct the crime tensor $X \u2208 R^{N\u00d7T\u00d7C}$, where N, T, and C represent the number of regions, time slots, and crime categories, respectively. Within the crime tensor, each entry $X_{n,t,c}$ denotes the occurrence of a crime in category c within region r during time slot t.\nProblem Formalization Given the historical crime tensor $X \u2208 R^{N\u00d7T\u00d7C}$ from previous T time slots and the region graph G, the crime prediction problem aims to learn a mapping function F(\u00b7) to predict the crime occurrence of each category in each region during the next time slot T + 1,\n$F: (X_T,G) \u2192 X_{T+1} \u2208 R^{N\u00d7C}$,"}, {"title": "IV. METHODOLOGY", "content": "Figure 3 presents an overview of the ST-MoGE framework, showing the architecture of the Attentive-Gated Mixture-of-graph-Experts (MGEs). It contains multiple spatial-temporal graph learning experts (ST-expert), including the category-specific ST-experts and the universal ST-expert, to capture the shared and category-specific crime patterns, respectively. Spatial attentive gates are further introduced to selectively route the shared spatial-temporal knowledge of each region for different crime categories. The regional-aware predictor is further applied, in which the regions are clustered based on their spatial-temporal characteristics, and tailored predictors are deployed to obtain the prediction results.\nTo enhance the prediction capacity of MGEs module, two training strategies are further applied: (1) Cross-Expert Contrastive Learning (CECL): It employs an auxiliary expert shared parameter with the universal expert, generating corrupted representations for contrasting with representations from others, forcing each expert to focus on its target crime pattern. (2) Hierarchical Adaptive Loss Re-weighting (HALR): This algorithm is introduced to dynamically adjust the loss weight of each predictor during the training phase, alleviating issues related to insufficient training in specific regions."}, {"title": "A. Attentive-Gated Mixture-of-Graph-Experts", "content": "Due to the pattern heterogeneity that exists across different crime categories, only modeling a shared spatial-temporal pattern is not able to comprehensively present the complex spatial-temporal dependencies of each crime category. To address this issue, the MGEs module is proposed. In this module, two types of spatial-temporal graph learning experts are comprised, including a universal expert for shared crime pattern capturing and multiple category-specific experts for distinctive pattern extraction. Spatial attentive gates are applied to selectively route regions to the universal expert or corresponding category-specific expert."}, {"title": "1) Spatial-Temporal Graph Learning Expert", "content": "The spatial-temporal graph learning expert serves as a key component in MGEs, aiming at modeling both spatial and temporal dependencies simultaneously. The category-specific and universal ST-experts share the same architecture but differ in their data input. The category-specific ST-experts receive crime tensors corresponding to their specific categories, allowing them to model distinctive crime patterns unique to each category. In contrast, the universal ST-expert processes the combined crime tensors from all categories, aiming to capture the shared crime patterns that are common across different types of crimes.\nEach expert consists of several stacked spatial-temporal blocks (ST-blocks) to simultaneously model the spatial and temporal dependencies across crime occurances. In the ST-blocks, two types of layers are employed: (1) spatial dependency modeling layers, which employ graph convolutional networks (GCN) with self-adaptive adjacency matrices to autonomously capture geographical interrelations, and (2) temporal dependency modeling layers, which utilize dilated temporal convolutional networks (TCN) to capture temporal patterns. The architecture of the ST-expert is illustrated in Figure 4.\nGCN effectively extends convolutional neural networks to process non-euclidean graph structures. It enhances node representations by aggregating neighbor information with flexible transformation functions, ensuring the retention of structural details. Conventional GCN purely depends on the pre-defined adjacent matrix to provide the structure information, and existing crime prediction approaches construct the adjacent matrix by physical proximity among regions [3], [44]. However, the spatial correlation of crime occurrence not only depends on the physical neighboring but is also influenced by the functions of urban regions. Two regions with similar functions usually present similar crime patterns, such correlations could be ignored in the pre-defined adjacent matrix if they are not physically connected. Consequently, to comprehensively extract spatial dependencies, we adopt a self-adaptive adjacency into the spatial modeling layer, which is entirely learned end-to-end via stochastic gradient descent in the training stage. In particular, for each ST-expert, we define two randomly initialized node embeddings as trainable parameters, $E_1, E_2 \u2208 R^{N\u00d7d_n}$, where $d_n$ indicates the hidden size of them. Then the self-adaptive adjacent matrix is constructed as:\n$A_{adp} = SoftMax(ReLU(E_1E_2^T)).$\nThe SoftMax function is adopted to normalize the self-adaptive adjacency matrix. Consequently, the normalized self-adaptive adjacency matrix can be considered as the transition matrix of a hidden diffusion process. By integrating the pre-defined adjacency matrix A with self-learned hidden graph dependencies, the adaptive GCN layer can be defined as:\n$H^{l+1} = GCN(H^l, A_{adp}, A) = \u03c3(A_{adp}H^lW_1 + AH^lW_2)$,\nwhere $H^l$ is the output of the previous layer and $W_1, W_2$ represent the projection matrices with trainable parameters. The function $\u03c3(\u00b7)$ denotes the activation function, which is set to ReLU in this study. This approach enables the model to uncover implicit dependencies among regions as a complement to the prior spatial information.\nTCNs have demonstrated considerable effectiveness in modeling temporal dependencies in spatial-temporal prediction tasks [24], [5]. Compared to RNNs, TCNs are both time-efficient and parameter-efficient, making them more suitable for urban scenarios where models need to capture features quickly and be sensitive on a limited time scale. We utilize dilated causal convolution to capture the temporal dynamics of crime occurrences. Dilated causal convolution ensures the preservation of temporal causality by introducing zero-padding to the input, thereby ensuring that current predictions are solely based on historical data. The dilated causal convolution operation F on the sequence of one node is defined as:\n$F(s) = (x *d f)(s) = \\sum_{k=0}^{K_{t-1}} f_kX_{s-d\u00b7k}$,\nwhere d is the dilation factor. In the TCN layer, all nodes in the graph can be computed in parallel at the temporal dimension, accelerate. The TCN layer can be expressed as:\n$H^{l+1} = TCN(H^l) = \u03c3(BN(F(H) + b))$,\nwhere $H^l$ is the output of the previous layer and b represents the bias. BN indicates the batch normalization layer which normalizes features to accelerate the convergence of the model. $\u03c3(\u00b7)$ represents the ReLU function.\nDrawing inspiration from [24], in each ST-expert, to mitigate the issue of gradient vanishing, we incorporate residual connections for each spatial-temporal modeling layer, as well as skip connections after each temporal modeling layer.\nThe representations output by the category-specific ST-expert and the universal ST-expert are denoted as $H^{(S)}$ and $H^{(U)}$, respectively, encoding the distinctive crime patterns and shared crime patterns accordingly."}, {"title": "2) Attentive Spatial Gates", "content": "For different crime categories, there exists a substantial discrepancy in spatial-temporal patterns across regions. This discrepancy indicates that the need for shared knowledge from the universal expert can vary significantly by region for different crime categories. Simply concatenating the knowledge from category-specific experts and the universal expert may introduce noise or even mutually contradictory knowledge in some regions, complicating the accurate modeling of spatial-temporal patterns. To address this issue, we introduce attentive spatial gates for selective knowledge integration from diverse experts.\nIn particular, we employ a multi-head cross-attention mechanism, which autonomously identifies the relative significance of each region's representations from the universal expert. Specifically, for category c of crime, given the representation $H^{(S)} \u2208 R^{N\u00d7d}$ from its category-specific expert, alongside the representation $H^{(U)} \u2208 R^{N\u00d7d}$ from the universal expert, the multi-head attention mechanism conducts selectively aggregation with attention scores derived from them. The computation for the m-th attention head is articulated as:\n$H^{(U),m} = softmax(\\frac{(W_Q H^{(S)}) (W_K H^{(U)})^T}{\\sqrt{d_Q}}) W_V H^{(U)}$,\nwhere the matrices $W_Q, W_K,$ and $W_V$ serve as trainable parameters for queries, keys, and values in the attention model, respectively. The term $d_Q$ denotes the embedding dimension of $W_Q$, and the normalization term $\\sqrt{d_Q}$ is applied to mitigate overly large inner product values. The representations from each attention head are then merged, described as:\n$H^{(U)} = W^* \u00b7 concat(H^{(U),1}, ..., H^{(U),m}, ..., H^{(U),M})$,\nwhere $W^*$ is a trainable parameter that combines the outputs of multiple attention heads into a single representation. A gated fusion operation is further applied to adaptively integrate the recalibrated universal representation $H^{(U)}$ with the category-specific representation $H^{(S)}$ in the following manner:\n$H^{(F)} = z \u2299 H^{(S)} + (1 \u2212 z) \u2299 H^{(U)}$\n$z = \u03c3(H^{(S)}W_1 + H^{(U)}W_2 + b_z)$,\nwhere $W_1, W_2,$ and $b_z$ denote the trainable parameters of the model. The operation \u2299 indicates element-wise multiplication, with $\u03c3(\u00b7)$ being the sigmoid function, acting as a gating mechanism to modulate the integration from each expert."}, {"title": "3) Regional-aware Predictor", "content": "Existing crime prediction approaches usually employ a predictor with shared parameters to predict crime across all regions. However, the skewed crime distribution can introduce substantial bias if a single shared predictor is utilized. Therefore, it is essential to learn a predictor with a separate set of parameters for regions and crime categories with different spatial-temporal characteristics. To achieve this, we leverage a clustering-based mechanism to encourage regions with similar spatial-temporal characteristics to form clusters. The node embedding E learned in each category-specific ST-expert preserves the unique parameters of each region and reflects their spatial-temporal characteristics. For each crime category, we cluster the regions into K clusters with the K-means algorithm [57]. Consequently, the corresponding representations of each cluster are deployed with a Multi-Layer Perceptron (MLP) as the tailored predictor to obtain the prediction results of the involved regions. Formally, the process can be represented as follows:\n$\\hat{X}c,k = MLP(H^{(F)}k)$,\nwhere $H^{(F)}k$ represents the selected representation of region cluster k, crime category c, and $\\hat{X}c,k$ denotes the prediction result for this cluster. The integrated prediction result is achieved by aggregating the results from each cluster."}, {"title": "B. Training Strategies", "content": "Although the ST-MOGE network is adept at capturing complex spatial-temporal dependencies inherent in criminal incidents, it is negatively influenced by challenges such as cross-expert information blending and the imbalanced distribution of crime data. In response to these challenges and with the aim of augmenting the model capacity, we propose the implementation of the following training strategies: cross-expert contrastive learning (CECL) and hierarchical adaptive Loss re-weighting (HALR)."}, {"title": "1) Cross-Expert Contrastive Learning", "content": "Though in the MGEs module, multiple experts are employed to capture different types of crime patterns, without any constraints on the differentiation of target patterns, there may exist blendings across experts in the implementation. Such blending could result in non-eligible redundancy or even contradictory knowledge. To mitigate this issue, we introduce cross-expert contrastive learning, which decomposes the extracted distinctive and mutual patterns in a self-supervised method.\nThe key insight of CECL is to force the representations encoded with different types of crime patterns to be far away from each other in the latent space. However, since the input for different experts is inherently different, directly leveraging the origin representations to construct negative pairs yields minimal benefit. Therefore, an auxiliary ST-expert is deployed for corrupted representation generation. This expert shares parameters with the universal expert. The corrupted representation of c-th crime category, denoted as $\\hat{H_c}$, can be generated by inputting crime data of the corresponding category. Our objective is to maximize the distinction between corrupted representations and ordinary representations. Hence, the negative pairs can be constructed as a corrupted representation with representations from the corresponding category-specific expert or the universal expert. Moreover, inspired by SimCSE [58], the representation for positive pairs construction, denoted as $H^S_c$, are generated in a similar approach, with small disturbance by dropout operations. The InfoNCE [59] loss function is adopted, aiming to maximize the lower bound on mutual information for positive pairs while minimizing it for negative pairs [60]. The contrastive loss $L_{cs}$ for category-specific experts and $L_{cu}$ for the universal expert can be expressed as:\n$L_{cs} = \\frac{1}{C} \\sum_{c=1}^C log \\frac{exp(sim(H_c^{(S)}, H_c^{(S)})/\u03c4)}{\\sum_{c'=1}^C exp(sim(H_c^{(S)}, \\hat{H}_{c'})/\u03c4)}$\n$L_{cu} = \\frac{1}{C} \\sum_{c=1}^C log \\frac{exp(sim(H_c^{(U)}, H_c^{(U)})/\u03c4)}{\\sum_{c'=1}^C exp(sim(H_c^{(U)}, \\hat{H}_{c'})/\u03c4)}$\nHere, \u03c4 represents the temperature parameter, and sim(\u00b7) denotes the cosine similarity function. By applying CECL, the extracted knowledge of different experts can be efficiently separated, consequently decomposing the distinctive and shared crime patterns and relieving the blendings among experts."}, {"title": "2) Hierarchical Adaptive Loss Re-weighting", "content": "The real-world crime activities normally follow a long-tailed spatial distribution. In the training stage, the model is easily insufficiently trained on regions with relatively low crime frequency due to the skewed crime distribution. To address this challenge, we propose a hierarchical adaptive loss re-weighting algorithm to balance the loss of each cluster of regions, with consideration of imbalanced categorical crime distribution. This method adaptively adjusts weights for each region cluster over time by assessing the change in loss rates. The weighting coefficient for category c, $\u03bb_c(t)$ is defined as follows:\n$\u03bb_c(t) = \\frac{Cexp(w_c(t-1)/T)}{\\sum_{c'=1}^C exp(w_{c'}(t \u2212 1)/T)}$,\nwith\n$w_c(t \u2212 1) = \\frac{L_c(t-1)}{L_c(t-2)}$,\nwhere $w(\u00b7)$ measures the rate of loss reduction, t indicates the iteration step, and T denotes a tuning parameter that adjusts the smoothness of weight distribution. A larger T value promotes a more equitable weight distribution. The term $L_c$ signifies the error in predictions for category c.\nFor clusters belonging to the same crime category, we calculate the coefficient employing a similar method by replacing $L_c$ in Equation 15 with $L_{c,k}$, which indicates the prediction error for cluster k within category c. Consequently, the re-weighted loss is depicted as:\n$L_{c,k}^{(pred)} = \\sum_{c=1}^C \u03bb_c(t) \\sum_{k=1}^K \u03bb_{c,k}(t) ||\\hat{X_{c,k}}^{T+1} - \\hat{X_{c,k}}(t) ||$,\nwhere $X_{T+1}$ and $\\hat{X_{c,k}}$ respectively denote the ground truth and prediction results for cluster k and category c."}, {"title": "C. Joint Optimization", "content": "The composite loss function integrates three key elements. The first element is the re-weighted prediction loss $L^{(pred)}$, calculated in Equation 16. The second element contains the contrastive losses $L_{cs}$ and $L_{cu}$, obtained in equation 12&13. Overall, the ST-MOGE model is trained by jointly optimizing the following objective function:\n$L = \u03bb_1L^{(pred)} + \u03bb_2(L_{cs} + L_{cu})$\nIn this formulation, $\u03bb_1$ and $\u03bb_2$ act as regulatory coefficients optimizing the balance of losses, collectively summing to 1."}, {"title": "D. Model Complexity Analysis", "content": "In this section, we analyze the time complexity of the ST-MOGE framework. For the MGEs module, it takes $O(C \u00d7 L(s) \u00d7 N^2 \u00d7 T \u00d7 d)$ time complexity for all spatial modeling layers and spends $O(C \u00d7 L(T) \u00d7 N \u00d7 T \u00d7 d)$ for all temporal modeling layers, where L(s) and L(T) denotes the number of these layers in each ST-expert. For the attentive spatial gates, it takes $O(C\u00d7M\u00d7N^2\u00d7d)$ time complexity, where M represents the number of heads in the multi-head attention mechanism. In the CECL module, it takes $O(C \u00d7 (L(s) \u00d7 N^2 + L(T) \u00d7 N) \u00d7 T\u00d7 d)$ to generate the corrupted representation. The HALR module has a small time complexity that can be neglected. Overall, our ST-MoGE framework can achieve comparable model efficiency compared to GNN-based or attention-based spatial-temporal prediction approaches."}, {"title": "V. EXPERIMENTS", "content": "In this section, we conduct comprehensive evaluations of our ST-MoGE framework through extensive experiments on real-world crime datasets, aiming to address the following research questions (RQs):\n\u2022 RQ1: How does our ST-MoGE framework perform on various crime categories compared to other spatial-temporal prediction models and crime prediction approaches?\n\u2022 RQ2: What is the impact of our proposed modules, such as MGES, CECL, and HALR, on the prediction performance?\n\u2022 RQ3: How do different hyper-parameter settings affect the prediction performance of ST-MOGE?\n\u2022 RQ4: How does the ST-MoGE framework perform in low-crime-frequency regions?\n\u2022 RQ5: Is ST-MOGE always effective for different crime categories with heterogeneous spatial-temporal distributions?"}, {"title": "A. Experiment Setup", "content": "1) Datasets: We evaluate our proposed ST-MOGE framework in two real-world crime datasets, collected from New York City and Chicago. The statistical description of them is presented in Table I. NYC and Chicago are evenly divided into 225 and 140 disjoint geographical regions, respectively. The adjacency matrix of these regions is constructed based on the geographical proximity relationship between regions. The time slot is set to be 1 day. T is set to 7, which means that data from 7 days before the target day is used as the input to the model. The training, validation, and test data sets are generated by partitioning on both datasets with a ratio of 8:1:1.\n2) Evaluation Metrics: To assess the performance of crime prediction, we employ the Mean Absolute Error (MAE) and Mean Absolute Percentage Error (MAPE) as the evaluation metric. MAE measures the average magnitude of errors between actual and predicted values. MAPE calculates the average percentage difference between actual and predicted values, providing a relative measure of accuracy that is easy to interpret. These metrics are defined as follows:\n$MAE = \\frac{1}{n} \\sum_{i=1}^n |y_i - \\hat{y_i}|$,\n$MAPE = \\frac{1}{n} \\sum_{i=1}^n |\\frac{y_i - \\hat{y_i}}{y_i}|$,\nwhere $y_i$ represents the actual value, $\\hat{y_i}$ represents the predicted value, and n is the total number of samples.\n3) Hyper-Parameter Settings: The hyper-parameters were determined by their performance on the validation set. For each component within the spatial-temporal experts (i.e.: GCN, TCN), the embedding layer, and the attentive spatial gates, the dimensionality of hidden channels is standardized at 32. Within the GCNs, the dimensions of node vectors $E_1$ and $E_2$ were configured to 16, and the kernel size in TCNs is set to 3. In the regional-aware predictor, the number of clusters K is set to be 4. In the context of the hierarchical adaptive loss re-weighting algorithm the temperature parameter T is set to 1, while in the contrastive learning module, the temperature T is 0.05. The Adam optimizer was employed for the training process, with an initial learning rate of 0.01. This rate was designed to decrease progressively throughout the training duration. The batch size was established at 64."}, {"title": "4) Baselines", "content": "We compare our proposed ST-MoGE framework with 12 baselines for crime prediction. These baseline approaches are categorized into the following three groups:\nGNN-based Spatial-Temporal Prediction Methods These methods utilize GNNs to capture spatial dependencies. We include STGCN, GWN, GMAN, MTGNN, AGCRN, MAGNN, and FCSTGNN in our comparison.\n\u2022 STGCN [5", "5": "This method utilizes an adaptive adjacency matrix in the graph convolutional network to automatically capture the uncertain spatial dependencies, combined with dilated causal convolutions for temporal patterns modeling.\n\u2022 GMAN [7", "24": "This method incorporates a graph structure learning module to autonomously capture the latent dependencies while employing graph and temporal convolutional networks to model the spatial and temporal patterns.\n\u2022 AGCRN [6", "61": "This method exploits a multi-scale network to capture temporal dependencies under different scales of time granularity while using adaptive"}]}