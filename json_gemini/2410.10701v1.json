{"title": "Early Diagnoses of Acute Lymphoblastic Leukemia Using YOLOv8 and YOLOv11 Deep Learning Models", "authors": ["Alaa Awad", "Mohamed Hegazy", "Salah A. Aly"], "abstract": "Thousands of individuals succumb annually to leukemia alone. This study explores the application of image processing and deep learning techniques for detecting Acute Lymphoblastic Leukemia (ALL), a severe form of blood can-cer responsible for numerous annual fatalities. As artificial intelligence technologies advance, the research investigates the reliability of these methods in real-world scenarios. The study focuses on recent developments in ALL detection, particularly using the latest YOLO series models, to distinguish between malignant and benign white blood cells and to identify different stages of ALL, including early stages. Additionally, the models are capable of detecting hematogones, which are often misclassified as ALL. By utilizing advanced deep learning models like YOLOv8 and YOLOv11, the study achieves high accuracy rates reaching 98.8%, demonstrating the effectiveness of these algorithms across multiple datasets and various real-world situations.", "sections": [{"title": "I. INTRODUCTION", "content": "Today, we live in a technology-driven era where computer science is harnessed to mimic human intelligence, enabling more accurate and faster decision-making. As a result, many researchers have tackled the challenge of leukemia detec-tion through Artificial Intelligence, employing various deep learning methodologies such as MobileNetV2 [1], attention mechanisms [2], and YOLO [3]. Several datasets have been used in different studies, including the ALL image dataset [4] and the CNMC-2019 dataset [5]. Most research to date has relied on single-cell datasets to train AI models. However, in real-world applications, models need to handle multi-cell images and still maintain high accuracy. This paper aims to bridge this gap by training the proposed model on multi-cell samples. In this study, we used image processing techniques such as segmentation to prepare the dataset. Additionally, we applied transfer learning and fine-tuning techniques on models like YOLOv11 [6] and YOLOv8 [7] achieving results above 98% accuracy. The contributions of this research are summarized as follows:\n1) Up to our knowledge, this is the first work to utilize YOLOv11 for ALL blood cancer detection.\n2) The integration of two datasets to improve generalization across different sample types.\n3) The classification of white blood cells as malignant or benign is addressed\n4) Successful detection of hematogones, which are often misclassified as ALL.\n5) A comparative analysis of our results with previous work in the field."}, {"title": "II. RELATED WORK", "content": "Hosseini et al. [8] aimed to detect B-cell acute lymphoblastic leukemia (B-ALL) and its subtypes using a deep CNN. Talaat et al. [9] applied an attention mechanism to detect and classify leukemia cells.\nYan [10] worked with the single-cell dataset CNMC-2019 [5] to classify normal and cancerous white blood cells using three models: YOLOv4, YOLOv8, and a CNN. Data augmentation was applied to the CNN and YOLOv4 models. The CNN model, featuring convolutional layers, max-pooling layers, and ReLU activation, achieved 93% accuracy, while YOLOv4 and YOLOv8 surpassed 95\nDevi et al. [11] combined custom-designed and pretrained CNN architectures to detect ALL in the augmented ALL image dataset [4]. The custom CNN extracted hierarchical features, while VGG-19 extracted high-level features and performed classification, achieving 97.85% accuracy. In contrast, Khos-rosereshki [12] used image processing and a Fuzzy Rule-Based inference system for this task.\nRahmani et al. [13] utilized the C-NMC 2019 dataset, applying preprocessing techniques such as grayscaling and masking, followed by feature extraction via transfer learning using VGG19, ResNet50, ResNet101, ResNet152, Efficient-NetB3, DenseNet-121, and DenseNet-201. Feature selection employed Random Forest, Genetic Algorithms, and Binary Ant Colony Optimization. The classification, done through a multilayer perceptron, achieved slightly above 90% accuracy.\nKumar et al. [14] focused on classifying different blood cancers, including ALL and Multiple Myeloma, in white blood cells. After preprocessing and augmentation, feature selection was done using SelectKBest. Their model comprised two blocks with convolutional and max-pooling layers, followed by fully connected and classification layers, achieving 97.2% accuracy."}, {"title": "III. DATASETS AND DATA COLLECTIONS", "content": "Available datasets are divided into two types: single-cell and multi-cell datasets. Single-cell datasets typically contain images with a single white blood cell per image, whereas multi-cell datasets depict multiple cells within each sample. Since multi-cell datasets better represent real-life scenarios when working with blood cells, we chose to focus on them. The two datasets selected for this study are the Acute Lym-phoblastic Leukemia (ALL) image dataset from Kaggle [4] and ALL-IDB1 [16], both of which contain multiple white blood cells per sample.\nTable I summarizes the statistics of the ALL image dataset, which contains 3,256 images in total, divided into four cate-gories: Benign, Early, Pre, and Pro. The benign class includes Hematogones, a condition where lymphoid cells accumulate in a pattern similar to ALL but are non-cancerous and generally harmless. The dataset consists of 504 benign images and 2,752 malignant cells, further categorized into 985 early-stage samples, 963 pre-stage samples, and 804 pro-phase samples.\nOn the other hand, Table II is affiliated with ALL-IDB1 dataset includes 108 images in total divided into 59 normal blood samples and 49 cancerous ones. This balance between normal and cancerous samples is crucial for the model to effectively learn the distinguishing features of ALL cells. We decided to merge the normal cells from ALL-IDB1 with the benign cells from the ALL dataset into a single category called Normal. Similarly, we combined the Early, Pre, and Pro classes from the ALL dataset with the Cancer class from ALL-IDB1 into one category called Cancer. As a result, we focused on two classes: Normal and Cancer. This approach exposes the models to different datasets and various shapes of blast cells, allowing for more practical detection and classification."}, {"title": "IV. MODELS AND METHODOLOGIES", "content": "The implementation is divided into several phases, as illustrated in Fig. 1. The first phase involves data preparation, where image segmentation techniques are applied to isolate the relevant elements. Next, the pretrained YOLOv11s and YOLOv8 models are loaded. These models enable data augmentation and experimentation with various optimizers and learning rates. In the final phase, the models are trained to fine-tune the pretrained weights for the specific task at hand.\nDataset Preparation The dataset underwent preprocessing to enhance model performance by removing irrelevant elements like different backgrounds and unrelated blood components. Image segmentation was applied using OpenCV, converting images to the HSV color space and creating a binary mask to isolate white blood cells. To improve robustness and mitigate overfitting, various augmentation techniques were implemented, including geometric transformations, mosaic augmentation, random erasing, and randaugment for diverse data variations.\nImage Classification: The detection of blast cells can be approached in various ways, with image classification being one of the most common. Numerous deep learning architectures have been developed to support this task, with Convolutional Neural Networks (CNNs) being the most widely used for image and video datasets. Models like VGG AlexNet, and GoogleNet (Inception) [17] are all based on CNNs. In this paper, we focus on two versions of YOLO: YOLOv8 and YOLOv11.\nTo train and optimize model performance, we employed two key techniques: transfer learning and fine-tuning.\nFirst, transfer learning was applied using a pretrained YOLOv8 model, imported after installing the Ultralytics pack-age, and then training it on our custom segmented dataset. Various tests were conducted using different optimizers and hyperparameters, but the final results were based on 100 epochs of training, using the AdamW optimizer with a learning rate of 0.000714.\nSecond, YOLOv11s, the latest version in the YOLO series, was also trained on our custom dataset. We experimented with the small version of the model to observe the performance on different versions of YOLO. This gave us the chance to understand the enhancements in the new version of the model."}, {"title": "V. EXPERIMENTAL RESULTS", "content": "In this section, the performance of our different trained models is evaluated using the different metrics mentioned in the previous section. Starting with YOLOv1ls were trained for 100 epochs, which achieved 97.4% training accuracy and 98.8% testing accuracy, while YOLOv11s has achieved a slightly higher testing accuracy of 98.8%.\nThe accuracy graph for the nano version of YOLOv11 shown in Fig. 2b demonstrates improvement in the accuracy's progress with some fluctuations at the beginning. These vari-ations decrease gradually as the number of epochs increases until the graph curve becomes more stable. It can be seen that the training and validation losses were declining steadily as the training advanced in Figures. 2a and 6a.\nNext, we analyze the results from YOLOv8 shown in figures 4a, 4b and 6b in which the accuracy on the training dataset was 98%, and it peaked at 98.4 when evaluated on the testing dataset. Compared to YOLOv11, YOLOv8's small version achieves a slightly lower accuracy. The accuracy, training and validation loss graphs of YOLOv8 shown below follow similar patterns as those of YOLOv11 with the later having more stable curves.", "equations": ["Accuracy = \\frac{TP+TN}{TP+TN+FP+ FN}", "Precision = \\frac{TP}{TP+FP}", "Recall = \\frac{TP}{TP+FN}", "F1Score = 2*\\frac{Precision * Recall}{Precision + Recall}", "Specificity = \\frac{TN}{TN + FP}"]}, {"title": "VI. CONCLUSION AND COMPARISON", "content": "In conclusion, the integration of AI in the medical field is a massive step in the advancement of the health system and services provided to patients. This study was able to detect the presence of ALL in blood even at early stages using YOLOv11 and YOLOv8. The performance of YOLOv11 proved to be slightly better than that of YOLOv8 achieving better accuracies which can be significant in cancer diagnosis."}]}