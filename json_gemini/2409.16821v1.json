{"title": "XAI-guided Insulator Anomaly Detection for Imbalanced Datasets", "authors": ["Maximilian Andreas Hoefler", "Karsten Mueller", "Wojciech Samek"], "abstract": "Power grids serve as a vital component in numerous industries, seamlessly delivering electrical energy to industrial processes and technologies, making their safe and reliable operation indispensable. However, powerlines can be hard to inspect due to difficult terrain or harsh climatic conditions. Therefore, unmanned aerial vehicles are increasingly deployed to inspect powerlines, resulting in a substantial stream of visual data which requires swift and accurate processing. Deep learning methods have become widely popular for this task, proving to be a valuable asset in fault detection. In particular, the detection of insulator defects is crucial for predicting powerline failures, since their malfunction can lead to transmission disruptions. It is therefore of great interest to continuously maintain and rigorously inspect insulator components. In this work we propose a novel pipeline to tackle this task. We utilize state-of-the-art object detection to detect and subsequently classify individual insulator anomalies. Our approach addresses dataset challenges such as imbalance and motion-blurred images through a fine-tuning methodology which allows us to alter the classification focus of the model by increasing the classification accuracy of anomalous insulators. In addition, we employ explainable-AI tools for precise localization and explanation of anomalies. This proposed method contributes to the field of anomaly detection, particularly vision-based industrial inspection and predictive maintenance. We significantly improve defect detection accuracy by up to 13%, while also offering a detailed analysis of model mis-classifications and localization quality, showcasing the potential of our method on real-world data.", "sections": [{"title": "1 Introduction", "content": "The demand for green energy in its current form necessitates an increasing reliance on electrical power grids. Increased usage, e.g., of electric vehicles is estimated to increase the global electricity consumption by 11-20%, with demand"}, {"title": "2 Related Work", "content": ""}, {"title": "2.1 Insulator Defect Detection", "content": "Interest and publication volume regarding deep learning and insulator defect detection has increased substantially over the past years [19]. Although general machine learning and computer vision approaches have been used for defect detection in insulators [20,30], deep learning methods have proved to be a more flexible and accurate approach. Specifically, spurious attributes in the background of the image are the primary obstacles for accurate defect detection, along with large feature variability across different insulator types such as color, position and orientation [19].\nDefect detection methodologies can be broadly categorized into two different categories: parallel or multi-task and sequential methods [19]. In multi-task methods, detection of insulators and damages occurs simultaneously by a single network. R-CNN, Faster-RCNN and YOLO architectures are among the most popular base methods, as used in [1, 4, 14]. Multiple extensions exist, building on these base architectures. An example is MTI-YOLO as introduced in [18], which uses spatial pyramid pooling (SPP) for aerial images accounting for the difficulty of detection in complex backgrounds. Another example can be found in [17] which combines the detection phase using a R-CNN network and a pixel classification using U-Net.\nIn contrast, sequential defect detection first localizes the insulator, and subsequently detects the defective region. Generally, these methods perform slightly better due to reduced background interference, however there is also a larger computational effort involved in these tasks. [28] introduces a two-stage defect detection cascade including a region proposal network (RPN) with a VGG16 backbone. This is followed by a defect detector network using a ResNet-101 inserting RPN and ROI Pooling layers between two sets of convolution layers. Alternatively, instead of an initial detection step, segmentation has also been used as in [16,34]. This has the potential to improve accuracy, but is in return associated with an increased labelling effort. However, despite the vast literature there exist very few works which address the issue of class imbalance. Only a handful of methods such as [22] address this issues, using positive unlabelled (PU) learning and focal loss to reduce the effect of class imbalance. This offers a promising approach to combat class imbalance, and can be extended using grid search (GS) and fixed threshold (FT) methods as introduced in [35] and [31].\nWe use these methods as a baseline comparison in the results."}, {"title": "2.2 Datasets", "content": "The aforementioned methods are applied to one of four publicly available insulator defect datasets. Most frequently encountered is the Chinese Powerline Insulator Dataset (CPLID) [27], consisting of defective and non-defective insulators, whereby the defects are characterized by missing shells. Next, [25] propose the Unifying Public Datasets for Insulator Detection (UPID) which adds to the existing CPLID dataset. Third, [33] extends UPID with synthetic fogging augmentations dubbed synthetic foggy insulator dataset (SFID). These three datasets thus share a base set of images. In contrast, the Insulator Defect Image Dataset (IDID) [13] is a separate dataset with three distinct classes namely: healthy, broken and flash-over pollution damages. This constitutes a greater challenge due to the fact that the damages only comprise a small portion of the overall image, and thus require a more fine-grained analysis. Moreover, few works have been published using this dataset. Among them is the multi-task approach as detailed in [8] and a more broad approach for multiple datasets as outlined in [5]. In [32] the authors also consider the IDID dataset, however they merge flash-over pollution damages and healthy insulators into a single non-defective category, only considering insulators with broken shells as defective. A very recent approach from [26] utilizes a hybrid between YOLO and a Quasi-ProtoPNet to classify individual shells into the respective damage types. They additionally provide a localization mechanism of the defect site using a ProtoPNet architecture [3], however their analysis focuses on overall model performance, and does not take individual class performance into account."}, {"title": "3 Method", "content": ""}, {"title": "3.1 Overview", "content": "Our insulator defect detection pipeline Fig. 1 employs a two-stage object detection strategy to systematically identify and categorize insulator defects from UAV-captured images. The initial stage uses the dataset D = {(xi, bi)|(xi, bi) \u2208 X \u00d7 B}, where X comprises images of insulators and B their corresponding bounding boxes. We utilize a neural network N\u2081 to detect insulators within these images, generating bounding boxes b. These boxes are then used to crop the original images, resulting in a set of insulator-focused images X\u00ba.\nIn the second stage, we generate a specialized dataset Ds = {(x,b)|(x,b) \u2208 X \u00d7 B}, aimed at analyzing the condition of individual insulator shells. Here, Bs represents the set of bounding boxes for each insulator shell. A corresponding network, Ns, is applied to Ds, producing bounding boxes which are used to isolate individual shells from the original image. This yields a set of shell images X\u00b3, which are subsequently classified into predefined defect categories (e.g., broken, flash-over polluted, healthy) based on the dataset Dr = {(x, Yi)|(x, Yi) \u2208 X x Y}, where Y denotes the set of defect condition labels. Finally layer-wise relevance propagation is applied to localize the damaged region on the individual shells by using the predicted label \u0177 of the classification network No."}, {"title": "3.2 Couteracting Imbalance via Finetuning", "content": "In the case of the IDID dataset, healthy shells are far more frequent than damaged shells, approximately in a ratio of 10 : 1 of healthy to broken components and 5:1 for healthy to flash-polluted shells. As a result, the classifier will be biased towards the majority class, favoring the features present in images of healthy components. However, especially in our application for reliable defect detection it is crucial to maximize the performance on defective components. In order to counteract the imbalance, we employ the method from [12] which retrains the final layer by running logistic regression on the model features obtained from the second-to-last layer. This method can be used to improve the worst-class performance, i.e., the class with lowest test accuracy. Specifically, we introduce individual class weights wc in the regression step, assigning a higher weight to faulty classes. To mitigate the imbalance further, we employ undersampling of the majority class, such that the ratio between class samples is approximately equal. This process involves dividing the dataset into ten partitions, Dp C D, each balanced through undersampling the majority class. For each partition, we extract a feature set 2-1 = N-1(xi) from the second-to-last layer of the network, where xi belongs to a balanced partition Dp. We thus obtain feature matrices of shape |Dp| \u00d7 F, which are used as inputs to the logistic regression models, where F is the number of features. For each partition, we derive a weight matrix wi as:\n$w_{i} = argmin_{w} J(w, z^{l-1}, Y_{p}, w_{c})$ (1)"}, {"title": "3.3 XAI-guided Anomaly Localization", "content": "In order to obtain a localization of the damage type, we use Layerwise Relevance Propagation (LRP) [2]. LRP follows a conservation principle, where the relevance received by a neuron must be distributed equally to the lower layer, whereby the general rule is applied:\n$R_{j} = \\sum_{k} \\frac{z_{jk}}{\\sum_{j}z_{jk}}R_{k}$ (2)\nHere, zjk represents how much neuron j contributes to the relevance of neuron k, and R the associated relevance. When applied to all neurons in the network, LRP maintains a layer-wise conservation property \u2211j Rj = \u2211k Rk, and globally, it satisfies the conservation property \u2211; Ri = f(x), where f(x) is the model's prediction. In the context of our work f(x) specifies the neural network Ne, where the predicted label \u0177i is used to generate a heatmap H(i, j). This heatmap represents the relevance R of a pixel at position (i, j) of an input image xi in the testset Dr. It follows, that an accurate attribution, also necessitates an accurate prediction. If damage localization is a priority, then Ne should be able to discern damage types with high fidelity. This justifies the re-weighting scheme, as this improves classification accuracy on damaged components and hence improves the overall quality of heatmaps generated for faulty shells.\nThe effectiveness of our explanation can be based on two general criteria, namely faithfulness and understandability. Faithfulness corresponds to an explanation which accurately represents the output neuron's behavior. In other words, it should faithfully reflect the model's decision process. This assumes that the neural network has correctly identified the relevant visual features for its predictions and has disregarded any irrelevant or adversarial factors in the input data. This assumption allows us to gauge how well the explanation aligns with the network's true reasoning process. In contrast, understandability relates to human interpretation, i.e., that explanations can reliably be understood and interpreted by human observers. For our application we strongly emphasize human understandability, since our model ultimately needs to justify its prediction and localization to users. Moreover, when inspecting a large amount of images it is important that the model's prediction of damages localize a precise area for maintenance to optimize the human intervention in repairs. In order to obtain an understandable explanation, one can choose from a variety of rules which dictate how the relevance Rj of a neuron j is computed. We refer to [21] for more details on the various rules that can be used. Additionally, we have the details and the used rules listed in the supplementary material."}, {"title": "3.4 Assessing Localization Quality", "content": "As mentioned in the previous section, we want to produce understandable explanations of the model predictions. This requires an architecture and associated LRP-rule which maximizes human interpretability. To this end, we generate a set of segmentation masks for the damaged shells contained in the testset, in order to ascertain the quality of our localizations. We use the metric as introduced in [29], where the authors define a pixel-wise intersection tki. In the context of our work, the metric is defined by a binary segmentation mask M for the damaged region of a shell, and a binary mask E of the top-k features of heatmap H. In other words the k pixels of H which have the highest relevance R. The intersection is computed as follows:\n$t_{ki} = \\frac{1}{W H} \\sum_{i=1}^{W} \\sum_{j=1}^{H}(M \\land E)$ (3)\nwhere M and E are the binary masks of size W \u00d7 H, \u039b denotes the pixel-wise boolean AND operation and k is number of pixels which are selected from H. The metric attains a value of tki = 1 if all top-k pixels are contained within the segmentation mask region. Conversely, the metric is zero if no top-k pixels are within the given region. We seek to find the combined network architecture and LRP rule, which maximizes the tki score over the testset Dr. This involves generating segmentation masks and thi scores for each individual image in the testset and subsequently the average over all images."}, {"title": "3.5 Analyzing Mis-classification", "content": "Finally, we conduct an analysis of the source of mis-classifcation. We attempt to determine why certain images are mis-classified or contain erroneous or poor localizations of damage type. To this end, we first analyze the relationship between sharpness and classification accuracy on the test data. We apply a sharpness analysis using a classical 2D high-pass or Laplacian operation as detailed in [23] with the following kernel:\n$K = \\frac{1}{6} \\begin{bmatrix} 0 & -1 & 0 \\ -1 & 4 & -1 \\ 0 & -1 & 0 \\end{bmatrix}$ (4)\nSubsequently, we compute the Laplacian of our image, which approximates the second spatial derivative and enhances high spatial frequencies as strongly related to sharp edges. The luminance grey-scale input image I from set Dr is then filtered:\n$L(x,y) = \\sum_{i}^{Wx} \\sum_{j}^{Wy}I(x + i, y + j) \\cdot K(i, j)$ (5)"}, {"title": "4 Experiments and Results", "content": ""}, {"title": "4.1 Training and Architecture", "content": "For insulator and shell detection we train medium-sized YOLOv8 networks using the ultralytics library [10]. We train for a total of 300 epochs using an input image size of 512 \u00d7 512, and augment the dataset with rotations, horizontal and vertical flips, as well as shears, scales and translations. For all other experimental parameters, the default setting of the Ultralytics library for object detection are used. For classification, we tested MobileNetv2, ResNet18, ResNet50 and ResNet152 architectures pretrained on ImageNet. We used cross-entropy as the loss metric and SGD was used with a momentum value of 0.9, Nesterov acceleration and a learning rate scheduler. All details are listed in the supplementary material."}, {"title": "4.2 Detecting Insulators", "content": "The results of the first object detection stage are shown in Fig. 2. The figure shows that insulators are detected reliably. Overall, high accuracy results were obtained during training, achieving a mAP50 score of 0.97. This is in alignment with current state-of-the-art insulator object detection networks [26]. In practice, the model is successful in separating all insulators in the source images, as required. Further evidence corroborating the success of training is shown in Fig. 2. Even insulators that are on the edges, obstructed or in complex backgrounds are easily detected with high fidelity."}, {"title": "4.3 Detecting Shells", "content": "The separated insulator parts from the source image, are then used to identify individual shells. As mentioned above we use the same experimental setup for shell detection, thus providing a degree of continuity between these two stages. Again, we are able to separate individual shells with high accuracy, mAP50 of 0.98, which suggests that the task of detecting features corresponding to shells is readily achieved, even though the dataset contains a variety of colors, resolutions, lighting conditions and orientations. This is also competetive with current state-of-the-art such as [26]. Furthermore, we can see the success of isolating shells by inspecting shell predictions of individual test images. Fig. 3 shows a sample of images taken from the cropped test set. One can see that shells are identified accurately, even if these shells are damaged. This is crucial for our pipeline, as this allows for extracting healthy and broken shells alike. Therefore, the shell detection network is agnostic towards the detection of broken or healthy shells."}, {"title": "4.4 Classification", "content": "The final step is the classification of shells. Tabulated in Table 1 are the results for various standard deep classification models which were used to classify individual shells. Here, we focus on the per-class accuracy and compute the average"}, {"title": "4.5 Re-biasing the Model", "content": "In order to bias the model towards higher accuracy on defective components, we leverage the fact that neural networks tend to learn general features in upper layers (closer to the input), and specific features towards deeper layers (closer to the output). Especially in our application this is true, due to the fact that the base object of interest, namely the insulator shell, is constant across the classes, with only the damage type or lack thereof being the variant. We adopt a retraining method inspired by [12], where we perform logistic regression using the features generated up to the final linear layer of the network. In addition, we balance the dataset by removing a subset of the healthy-component class such that the final detection head will shift focus on defective components. The results are tabulated in Table 1 in column \"Accuracy Reweighted\". We primarily focus on increasing the classification accuracy with respect to the broken components, as these are most likely to cause powerline failures. We demonstrate that re-biasing is successful with the finetuning procedure. Although we sacrifice some of the accuracy of healthy components, we observe significant gains in both broken and flash damaged shells of up to 12% and 7%, respectively. We find that ResNet50 offers the best overall performance. MobileNetv2 und ResNet18 demonstrate satisfactory performance for individual class accuracy, but are significantly less performant. Compared to the other architectures, the last linear layers of MobileNetv2 and ResNet18 are much smaller, only having dimensions 1240 x 3 and 512 \u00d7 3, in contrast to ResNet50 and ResNet152 which both contain a final layer of dimension 2048 \u00d7 3. This could explain the performance gap, as more parameters are available for the logistic regression. Overall our results using the re-weighting technique are very promising and not only improve performance compared to standard training, but also allows for a degree of flexibility"}, {"title": "4.6 Localizing and Explaining", "content": "Although our classification model is competitive with current literature in detecting damages, the drawback is that, on its own, the classification model does not provide a localization mechanism. Object detection models have visualization baked into their architecture by design by utilizing bounding boxes to highlight a region of interest, however it is also possible to attain effective localization via XAI methods for classification models. We show that the damages can be more precisely localized in comparison to bounding box or other interpretability methods [26], as our approach yields a pixel-wise relevance. In Fig. 4 we demonstrate this concept based on a sample of damaged shells. We utilize LRP to propagate the predicted label and the associated relevance to the input image using the custom layer map as defined above. This results in a pixel-wise explanation where the model locates the damage in the form of a heatmap. Fig. 4 shows the heatmaps of damaged insulator shells. Overall, LRP localizes defects very well, providing the highest relevance to the damaged region on the shell. Moreover, we observe a qualitative performance gap between individual models. Specifically, ResNet50 and MobileNetv2 perform best in terms of visual understandability, as they attribute the highest relevance to the correct region while simultaneously showing the least variance or scattering of relevance in the image. In contrast, ResNet152 and ResNet18 localize the correct region, but also highlight irrelevant regions to a larger degree. For example, both attribute significant relevance"}, {"title": "4.7 Incorrect Classification and Explanation", "content": "Although our pipeline yields accurate localizations, we also investigated the source of incorrect classifications and localizations. Specifically, we investigated heatmaps generated by out-of-focus or blurry images for classification performance. Here, the focus of the image is critical in obtaining accurate predictions as well as interpretable localizations. We additionally find that blurry images produce heatmaps with poor localizations. The attribution is scattered and not focused on relevant regions. This suggest that the model may only detect spurious attributes within the image which do no actually correspond to a localized damage type, even if the classification is correct. Heatmaps of blurry images can be found in the supplementary material.\nBased on these findings we recommend that images are checked for their degree of sharpness and accordingly mark or exclude images which do not pass a"}, {"title": "4.8 Localization Quality", "content": "For assessing the quality of the generated heatmaps, the top-k metric defined in Equation 3 is used as numerical measure. For this, different architectures and variations of the ResNet50 inference method are examined in Table 3. A score of 0 indicates that none of the top-k, i.e., k most relevant features, are within the correct damage location, and a score of 1 indicates that all are within the target area. The table shows that the re-weighting strategy significantly improves"}, {"title": "5 Conclusion", "content": "In this paper, we propose a novel insulator fault detection pipeline with pixel-wise localizations generated by LRP. In order to account for class imbalance we apply a re-weighting procedure to improve the classification performance on defective classes, paying special attention to broken components. For the first time, we address class imbalance in insulator detection from the vantage point of individual class accuracy, and apply XAI methods to render accurate damage localizations for insulator shell defects. Based on LRP, we also analyse failures of defect detection, revealing that blurry or generally unsharp images in the dataset degrade classification and effective localization. Moreover, we show that we can quantify the quality of images with respect to sharpness, and significantly improve the accuracy when applying a threshold to discard out-of-focus images.\nLastly, we want to emphasize that our method can be transferred to wide range of applications, and is not limited to the domain of insulator defect detection. Therefore, future work will focus on additional domains requiring defect detection and localization."}]}