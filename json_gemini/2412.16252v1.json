{"title": "Post-hoc Interpretability Illumination for Scientific Interaction Discovery", "authors": ["Ling Zhang", "Zhichao Hou", "Tingxiang Ji", "Yuanyuan Xu", "Runze Li"], "abstract": "Model interpretability and explainability have garnered substantial attention in recent years, particularly in decision-making applications. However, existing interpretability tools often fall short in delivering satisfactory performance due to limited capabilities or efficiency issues. To address these challenges, we propose a novel post-hoc method: Iterative Kings' Forests (iKF), designed to uncover complex multi-order interactions among variables. iKF iteratively selects the next most important variable, the \"King\", and constructs King's Forests by placing it at the root node of each tree to identify variables that interact with the \"King\". It then generates ranked short lists of important variables and interactions of varying orders. Additionally, iKF provides inference metrics to analyze the patterns of the selected interactions and classify them into one of three interaction types: Accompanied Interaction, Synergistic Interaction, and Hierarchical Interaction. Extensive experiments demonstrate the strong interpretive power of our proposed iKF, highlighting its great potential for explainable modeling and scientific discovery across diverse scientific fields.", "sections": [{"title": "1 Introduction", "content": "In recent years, numerous sophisticated models have emerged, aiming to improve accuracy, efficiency, and robustness across various domains. However, model interpretability and explainability have been relatively overlooked and have not kept pace with the rapid development of emerging model architectures. Given the importance of interpretability in decision-making contexts, such as in medical diagnostics and epistasis interaction detection, it is imperative to design effective techniques to enhance explainability and to understand how models process information and make decisions.\nTo address this research gap, many researchers have explored ways to improve interpretability from various perspectives. On one hand, numerous methods have been developed to select important variables. In statistics, methods including regularization methods, feature screening methods and random forest-based techniques have shown substantial capability for variable selection, but these methods often highly rely on model assumptions, limiting their application to a wider range of scenarios. Furthermore, perturbation-based approaches"}, {"title": "2 Related Works", "content": "In this section, we present an overview of current methods aimed at improving model interpretability by identifying key variables and understanding their intrinsic interactions.\nVarious approaches have been developed to select important variables. Regularization methods use regularization terms for variable selection, especially in high-dimensional data contexts. Variable screening methods formulate computationally efficient procedures for ranking and screening variables, making them well-suited for ultra-high-dimension scenarios. Methods based on random forests select important variable by calculating importance scores or iteratively dropping variables. Perturbation-based approaches introduce data input perturbations and measure variable importance through changes in hidden or output layers. Additionally, attribution techniques, including LIME, DeepLIFT, DeepExplain, and SHAP, backpropagate importance signals from output neurons to inputs, facilitating the interpretability of black-box neural networks.\nBeyond identifying individual variable effects, researchers have also sought to capture variable interactions. Statistical methods explore the collective effects of variable groups, while random forest-based approaches are widely used to detect interaction effects. Variable interactions are especially significant in bioinformatics, where construct biologically-informed neural networks with existing pathway databases, considering gene group"}, {"title": "3 Iterative Kings' Forests", "content": "In this section, we will first introduce the basics of tree structures and their natural rationale for modeling variable interactions. Then, we will highlight the bottlenecks of existing tree-based methods, which motivate the development of our proposed iterative Kings' Forests (iKF).\nNotation. Denote p-dim input variables as $x = (x_1, ..., x_p) \\in R^p$, D is the maximum depth of any tree, K is the number of the leaf nodes. We denote the indices of D chosen variables along a root to leaf path over entire p variables as $(i_1, i_2, ..., i_D) \\subseteq [p]$.", "3.1 Properties of Tree Structure and PVIM": "Recent researches suggest that random forest algorithms perform well in identifying interactions, largely due to the inherent properties of the tree structure:\n\u2022 Hierarchical Structure: In the tree construction process, the split at every node, except for the root node, depends on the previous splits made by its ancestor nodes. This ancestor-descendant hierarchical relationship makes the tree a natural structure for modeling interactions.\n\u2022 Information Gain Search Engine: For each node, the greedy algorithm used to search for the optimal split selects the variable that results in the largest impurity decrease, which could be due to a main effect, an interaction, or even random noise.\nTogether, these two properties enable tree structure to effectively model both main effects and interactions simultaneously, making it a comprehensive structure for interaction discovery.\nPreliminary on tree structure. Consider the leaf node $k \\in [K]$, there is a corresponding indicator function and a D-depth path from the root node all the way to the leaf node k. We denote the set of samples which falls into this path as $B_k = \\{x : X_{i_1} \\in B_{k,1},...,X_{i_D} \\in B_{k,D}\\}$, where $B_{k,d}$ is an interval with form $(-\\infty, s_{k,d})$ or $[s_{k,d}, \\infty)$, and $s_{k,d}$ is chosen to split the node at depth d in path k. Therefore, a tree f(x) can be represented as a linear combination of K indicator functions as:\n$f(x) = \\sum_{k=1}^{K} a_k I(x \\in B_k) = \\sum_{k=1}^{K} a_k I(X_{i_1} \\in B_{k,1},...,X_{i_D} \\in B_{k,D}),$ (1)\nDue to the two properties of tree structure, the selected D variables may include main effects, interactions, and other randomly selected variables. To identify main effects and interactions effectively, we want to exclude unrelated variables, put variables from an interaction in the same path, and identify the interactions' order as much as possible. The proposed iKF algorithm provides a framework for these purposes.\nPermutation variable importance measure (PVIM). In tree structure, PVIM is proposed to conduct variable selection through ranking a measure of variables' importance:\n$PVIM = \\frac{\\sum_{i\\in B}(y_i - \\hat{y}_i)^2 - \\sum_{i\\in B}(y_i - \\tilde{y}_i)^2}{|B|}$ (2)"}, {"title": "3.2 Iterative Kings' Forests", "content": "In this section, we propose a novel method, Iterative Kings' Forests (iKF), designed to uncover interactions among variables. An overview of iKF is illustrated in Figure 1.\nTo start, prior knowledge can guide the selection of an important variable as the first King. In the absence of prior knowledge, a random variable can be selected instead. After choosing the first King, its corresponding King's Forests are constructed by fixing it as the root node for all trees in the forest. The key concepts of King's Forests are detailed in steps 1 through 3. Following this, iKF iteratively determines the most suitable variable to act as the next King and constructs new King's Forests for it. This iterative process continues until a predefined stopping criterion is reached. Key aspects of this procedure are elaborated on in step 4.\n(1) Tree selection & Variable weight update. We compute King's PVIMs for every tree in a King's Forest and only select trees with positive King's PVIMs as informative trees. A larger King's PVIM indicates a tree does better in selecting the King's Core Team, and modeling the interactions about the King. Therefore, we use King's PVIM to quantify the importance of a tree, then add the King's PVIM to the weight of all variables selected in this tree. An informative tree could include the members of King's Core Team, other important variables, and some random noise variables.\nWe initialize an equal weight for all the variables as $w^{(0)} = 1 \\in R^p$, and then iteratively update variables' weight for each variable $x_i$ within all the trees with positive King's PVIM:\n$w^{(t)}_i = w^{(t-1)}_i + \\sum_{j=1}^{N} PVIM_j * I(PVIM_j > 0) * I(x_i \\text{ is in j-th tree}),$ (3)\nwhere N is forest size and iteration t = 1, ..., Niter. In this way, the members of King's Core Team could gradually gain larger weights, and therefore more likely to move toward the root node.\n(2) Variable selection & Depth-d tree paths. After updating the variable weights, we select the top Nc variables as candidates for the King's Core Team and construct D final King's Forests with maximum depths d = 1, 2, ..., D, aiming to recover the King's d-order interactions from all depth-d paths. For a forest of size N and depth d, it contains l (l < N \u00d7 2d-1) distinct paths, or indicator functions, representing potential d-order interactions.\nAs noted earlier, an informative tree could include the members of King's Core Team, other important variables, and some random noise variables. Consequently, a depth-d path does not necessarily represent a true d-order interaction.\n(3) Evaluation metrics & Interaction inference. To better identify interactions, we introduce the following two inference metrics to evaluate a given depth-d path:\n1. King's PVIM: The sum of King's PVIMs across all trees containing the given path.\n2. Path Reproduction Count: The number of times the path is reproduced in the forest.\nNotes: Dividing King's PVIM by the Path Reproduction Count produce the average King's PVIM of a path (potential interaction), offering alternative refined metrics to assess potential interactions.\nFor each depth d, the King's Forests algorithm generates two depth-d path lists, each of size Ntop, ranked according to the two inference metrics. A path is considered a promising candidate of an active order-d interaction if it ranks highly in at least one of the two lists.\nAmong the two metrics, the testing criterion, King's PVIM, is effective for evaluating the order of a King's interaction by analyzing the trend of King's PVIMs as the maximum depth d increases. For instance, if a King's PVIM shows a substantial increase from d = 2 to d = 3, it suggests that the King likely participates in at least one order-3 interaction not captured by forests with maximum depth 1 or 2. Conversely, if no such increase is observed, the King does not contribute to a third-order interaction. A large Path Reproduction Count indicates that all variables in the path are likely important, but it does not necessarily imply they form a single interaction; they could originate from two separate interactions or a combination of a main effect and an interaction.\nWe will illustrate the process of uncovering King's interactions using these two metrics in detail with examples in Sections 4.3 and 5.3. King's Forests Algorithm is outlined in Algorithm 1."}, {"title": "3.3 Scientific Interaction Discovery", "content": "While it is unrealistic for iKF to identify all interactions and their structures with 100% accuracy, we propose the following criteria to evaluate iKF outcomes. These criteria aim to illuminate hidden interaction mechanisms, thereby enhancing interpretability.\n\u2022 Overall Variable Importance. The final weights W are utilized for variable ranking and selection, emphasizing the relative importance of each variable.\n\u2022 Kings' PVIMs. For each King, the progression of King's PVIMs from order 1 to D reflects the interaction orders involving the King. For example, if a King's PVIM increases from order 1 to 2 and then from order 2 to 3, this pattern indicates the King's involvement in at least one second-order interaction and one third-order interaction.\n\u2022 Interaction Candidate Shortlists. A path is considered a strong candidate for an active order-d interaction if it ranks highly in at least one of the two depth-d path shortlists generated using inference metrics.\n\u2022 Path Directions. If both paths (x1,x2) and (x2,x1) appear in the shortlists, it indicates that x1 and x2 have equal status. If only one direction is selected, the interaction is likely hierarchical. Here, x1 and x2 may represent either a single variable or an interaction.\nThree Interaction Types. We categorize interactions into three types to enhance model interpretabil-ity. The first type includes interactions that satisfy the weak heredity condition, where at least one variable shows an accompanied main effect. The second type includes interactions where all vari-ables involved have equal status. Finally, the third type consists of interactions with a nested struc-ture. Their definitions are as follows:\n1. Accompanied Interactions. At least one variable in the interaction exhibits a main effect.\n2. Synergistic Interactions. The interaction lacks an active main effect, with all variables contribut-ing collectively, but not independently.\n3. Hierarchical Interactions. Interactions follow a specific sequence, where a dominant variable must be modeled first to activate a nested variable, rather than the reverse. This ordering is espe-cially crucial in biological research, where, for instance, genes typically function in a sequence, with upstream genes activating the expression of downstream genes.\niKF most readily identifies Accompanied Interactions due to their associated main effects. Simulta-neously, it gradually assigns higher weights to participants in Synergistic and Hierarchical Interac-tions, enhancing the likelihood of selecting these participants as \"Kings\" and detecting the interac-tions they are part of after several iterations. Furthermore, iKF differentiates between Synergistic and Hierarchical Interactions by analyzing the Kings' PVIMs and the order of variables in the se-lected interactions."}, {"title": "4 Interaction Discovery in Experimental Scenarios", "content": "To evaluate the performance of our iKF in variable selection and interaction identification, we conduct simulation experiments using various ground-truth functions to assess whether iKF accurately recovers multi-order interaction effects.", "4.1 Experimental Settings": "Simulated functions. We simulate two categories of functions: In category (a), four variables influence the response through two pairwise interactions of different forms, while in category (b), three variables affect the response through one third-order interaction. Their ground-truth functions, assuming both the error term e and any variable $x_i$ follow a standard normal distribution, are defined as follows:\n(al): $y = 2 * x_1 * x_3  2*x_5 * (x_7 < 0.2) + e$; (b1): $y = 2 * x_1 * (1 + x_3)^2 * sin(x_5) + e$\n(a2): $y = 4 * x_1 * sin(x_3) 4* x_5 * COS(x_7) + e$; (b2): $y = 2*x_1 * sign(1+x_3) * sin(x_5) + e$\n(a3): $y = 2 * x_1 * x_3 + 3 * x_5 * sin(x_7) + e$;\n(b3): $y = 2 * x_1 * x_3 * x_5 + e$"}, {"title": "4.2 Main Experiment", "content": "In this section, we will include two parts to evaluate the performance of variable selection and interaction identification. Specifically, we will assess the iKF's performance in variable selection through comparison with DC-SIS and iRF using minimum recovery size (MRS), and compare iKF and iRF in identifying interaction effects through individual recovery rate (IRR %) for each active interaction and overall recovery rate (ORR %) for all the active interactions.\nVariable selection. For each replicated experiment, we obtain a variable weight list and determine an MRS that covers all active variables. After conducting 100 replications, we collect 100 MRS values, rank them, and report the 5%, 25%, 50%, 75%, and 95% quantile values. From the results in Figure 2, we can observe that our iKF can outperform DC-SIS and iRF across various quantiles in all simulated functions."}, {"title": "4.3 Case Study", "content": "In the previous section, we evaluated the overall performance of different methods in variable selection and interaction identification. However, it is still unclear how our iKF works. To address this, we use two examples in Parts (a) and (b) to delve into the working mechanism of iKF and"}, {"title": "5 Biological Scientific Discovery", "content": "In the previous section, we examined iKF's ability to identify important variables and interactions across various experimental scenarios. In this section, we further demonstrate how iKF operates and highlight its potential for scientific discovery in biological research by applying it to the Drosophila embryo case study.", "5.1 Dataset and Hyper-parameter Configuration": "Dataset. Drosophila embryo dataset consists of 7809 genomic sequences with enhancer status as a binary response, where the sequences driving patterned expression in blastoderm (stage 5) embryos has a positive label. In the early Drosophila embryo, patterning is driven by interactions among about 40 TFs, which makes it a valuable test case to evaluate the performance of iKF.\nHyperparameters. We set $N_c = [p/2]$, $\\alpha = 0.2$, $N_{iter} = 6$, the maximum depth D = 5, forest size N = 200 and the size of depth-d path shortlists $N_{top} = 30$.", "5.2 Gene Expression Regulation in Drosophila Embryogenesis": "Precisely regulated Spatio-temporal gene expression is crucial for multi-cellular organism development, where enhancers play a critical role by coordinating combinatorial transcription factor (TF) binding. These activities lead to patterned gene expression during embryogenesis. One of the best-studied developmental embryogenesis cases is Drosophila embryo in which TF hierarchies act to pattern and subdivide the embryo along the anteroposterior (AP) and dorsoventral (DV) body axes. The zinc-finger protein Zelda (Zld) plays a key role as an early regulatory factor in timing zygotic gene activation and promoting robust expression. When lacking maternal expression of Zld in early embryos, expression profiling studies reveal that many genes normally activated between 1-2 hrs of development are strongly down-regulated and never recovered, including genes related to cellularization, sex determination, and dorsal patterning. Nien et al. points out that Zld binds to 72% of the Bcd targets, 70% of the Cad targets, and 80% of the Tll targets. About 50% overlap is observed between Zld targets and gap gene (Hb, Gt, Kr, Kni) targets. Zld also regulates the expression by orchestrating the timing within the segmentation gene network. In the absence of Zld, embryos initial transcription of gap-genes is delayed by 1-2 nuclear cycle (nc). In addition, their patterns are significantly disrupted, which can be explained by miscued gap-gene interactions. Meanwhile, without Zld, some genes involved in ventral patterning, for example Twi, is just temporally delayed, but later recovered by nc 14. Twi functions as a basic helix-loophelix (bHLH) activator, and is essential for specifying the ventral neurogenic ectoderm. At least half of the tissue-specific enhancers regulated by Dorsal also contain binding sites for Twi.", "5.3 Rediscovery of TF Interaction Mechanisms": "To validate the gene expression regulation mechanism as shown in previous section, we conduct the iKF procedure for interaction identification using early Drosophila embryo data. In this section, we will present identified interaction lists and Kings identification mechanism in iKF."}, {"title": "6 Conclusion", "content": "In this paper, we introduce iKF, a method designed to reveal the underlying mechanisms of data through variable selection and interaction identification. The key contributions of iKF are three-fold. First, it enhances the traditional tree construction process by prioritizing critical variables, referred to as \"Kings,\" to systematically identify and model interactions involving these variables. Second, iKF seamlessly integrates variable and interaction selection by iteratively assessing tree importance and updating variable weights. Third, it categorizes interactions into three distinct types and establishes criteria for determining their type and order. We demonstrate the effectiveness of iKF in identifying complex interactions through a series of experimental scenarios and a real-world scientific re-discovery case, highlighting its potential for advancing variable selection and interaction discovery across diverse scientific fields."}, {"title": "Broader Impact", "content": "This paper proposes a new variable selection and interaction identification algorithm for high-dimensional data, which have frequently been collected in many research areas including genomics, biomedical imaging, functional magnetic resonance imaging, tomography, tumor classifications and finance. Thus, the proposed procedure is expected to benefit a broad range of scientists and researchers in various fields."}, {"title": "A Appendix for Scientific Discovery in Math", "content": "Simulated setting. The main purpose of simulation studies is to assess the performance of the Iter-atively Kings' Forests (iKF) in feature screening and interaction identification through comparison with feature screening procedure DC-SIS and the Iterative Random Forest (iRF). Especially, we focus on comparing them under the model settings that important variables affect the response through participating in some interaction effects.\nSimulation settings are divided into two parts. In the five settings of part (a), four variables affect the response through two pairwise interactions of different function forms.\n(al): $y = s * x_1 * x_3  s* x_5 * (x_7 < 0.2) + e$\n(a2): $y = 2 * s * x_1 * sin(x_3) + 2 * s * x_5 * cos(x_7 + \\pi/2) + e$\n(a3): $y = s *exp(x_1) * x_3/2 - s * log(5* |x_5|) * x_7 + e$\n(a4): $y = s * x_1x_3/2 - s * sign(x_5) * x^2_7 + e$\n(a5): $y = s * x_1 * x_3 + 1.5 * s * x_5 * sin(x_7) + e$\nIn the five cases of part (b), three variables together affect the response through one third-order interaction.\n(b1): $y = s * x_1 * (1 + x_3)^2 * sin(x_5) + e$\n(b2): $y = s * x_1 *log(5 * |1 + x_3|) * sin(x_5) + e$\n(b3): $y = s * x_1 * sign(1 + x_3) * sin(x_5) + e$\n(b4): $y = s * x_1 * x_3 * sin(x_5) + e$\n(b5): $y =s * x_1 * x_3 * x_5 + e$", "A.1 Comparison with DC-SIS in Feature Screening": "In this part, we compare iKF's performance in feature screening with DC-SIS."}]}