{"title": "One Fits All: General Mobility Trajectory Modeling via Masked Conditional Diffusion", "authors": ["Qingyue Long", "Can Rong", "Huandong Wang", "Yong Li"], "abstract": "Trajectory data play a crucial role in many applications, ranging from network optimization to urban planning. Existing studies on trajectory data are task-specific, and their applicability is limited to the specific tasks on which they have been trained, such as generation, recovery, or prediction. However, the potential of a unified model has not yet been fully explored in trajectory modeling. Although various trajectory tasks differ in inputs, outputs, objectives, and conditions, they share common mobility patterns. Based on these common patterns, we can construct a general framework that enables a single model to address different tasks. However, building a trajectory task-general framework faces two critical challenges: 1) the diversity in the formats of different tasks and 2) the complexity of the conditions imposed on different tasks. In this work, we propose a general trajectory modeling framework via masked conditional diffusion (named GenMove). Specifically, we utilize mask conditions to unify diverse formats. To adapt to complex conditions associated with different tasks, we utilize historical trajectory data to obtain contextual trajectory embeddings, which include rich contexts such as spatiotemporal characteristics and user preferences. Integrating the contextual trajectory embedding into diffusion models through a classifier-free guidance approach allows the model to flexibly adjust its outputs based on different conditions. Extensive experiments on mainstream tasks demonstrate that our model significantly outperforms state-of-the-art baselines, with the highest performance improvement exceeding 13% in generation tasks.", "sections": [{"title": "I. INTRODUCTION", "content": "Trajectory data record human movement and reflect the patterns of human activities, supporting various applications, such as urban planning, traffic control, and emergency response [1], [2], [3]. Given the rich information embedded in trajectory data, researchers have developed methods to solve tasks like trajectory generation, recovery, and prediction. Although numerous studies have addressed various trajectory tasks, most existing works still rely on models specifically designed for a single task. For example, in trajectory prediction, researchers typically develop specialized models that use historical trajectory data to predict future locations [4], [5]. In trajectory generation, deep generative models are used to generate synthetic trajectory data that conform to realistic mobility patterns [6], [7]. For trajectory recovery, the common approach involves using statistical interpolation or deep learning techniques to address missing data in trajectories [8], [9]. While these methods excel in specific tasks, they are limited by a lack of flexibility and generality.\nIn fact, different trajectory tasks essentially rely on common human mobility patterns, such as periodicity, sequentiality, and circadian rhythms. Leveraging these shared patterns across various tasks within the same framework can significantly enhance the performance of each task. On the other hand, different application scenarios have diverse conditions for trajectory tasks. For example, in traffic management, short-term trajectory prediction is needed to optimize real-time traffic flow [10]. In contrast, urban planning relies on long-term trajectory prediction to design the layout of future infrastructure [11]. When limited data is available due to privacy protections [12], unconditional trajectory generation can provide a substantial amount of generated data [13], [14]. Moreover, controllable trajectory generation is necessary for personalized advertising or travel recommendations to meet user needs preciselys [15], [16]. Therefore, it is necessary to develop a general framework that can flexibly adapt to various application scenarios.\nThere are remarkable achievements of general frameworks in computer vision and natural language processing [17], [18], such as GPT, which can perform various tasks, including text translation, question answering, and image generation from text [19]. Inspired by these developments, we naturally pose a new research question: Can we address multiple tasks with a general framework for mobility modeling? However, the task-general mobility modeling framework is still an open problem with the following challenges:\n\u2022 Diversity of different task formats. Different tasks are natu-"}, {"title": "II. RELATED WORK", "content": "a) Trajectory-based Tasks: In practical applications, there exist typical trajectory-based tasks such as trajectory generation, recovery, and prediction [20], [21], [22]. The objectives and methods of different tasks vary significantly. Trajectory genera-tion depends on learning the distribution of real trajectories to generate new trajectory data. For example, the EPR model uses patterns of exploring new locations and returning familiar ones to generate trajectories [23]. TrajGen uses GAN to learn the spatial distribution of trajectory locations in the original data [7]. Trajectory prediction uses historical trajectory infor-mation to predict the future location. For example, TrImpute relies on crowd wisdom to guide trajectory recovery using the spatial relationships of neighboring GPS points [8]. AttnMove utilizes various intra-trajectory and inter-trajectory attention mechanisms to better recover the mobility regularity of users [9]. Trajectory recovery focuses on reconstructing missing parts of trajectory data. For example, MobTCast uses a transformer-based context-aware network for mobility prediction [24]. STAN uses non-contiguous but functionally similar visited points to predict the next location [25]. Each task requires different model architectures and training strategies because of the different objectives. In this work, we propose a general model framework to address multiple trajectory-related tasks through a single model.\nb) Task-general Models: Task-general Models utilize a single model to handle multiple tasks, eliminating the need for separate algorithms for each task. They have rapidly advanced in various fields such as computer vision, natural language processing, and time series analysis [19], [26], [27]. Task-general models are typically divided into two categories. The first category involves building models from scratch specifically for a particular domain. For example, TimesNet is designed with specialized backbone networks that capture intra-periodic and inter-periodic temporal variations, addressing multiple time series analysis tasks [28]. TrajGDM uses a trajectory generation framework to capture common mobility patterns in trajectory datasets, accomplishing trajectory-related tasks [29]. The second category involves leveraging pre-trained large language models (LLMs) to adapt to specific domains. Time-LLM is a methodology that utilizes LLMs for broad time series forecasting while leaving the backbone language models intact [30]. UrbanGPT is a general spatiotemporal prediction framework that integrates spatiotemporal information into language models. It enables LLMs to deeply understand the complex connections between time and space [31]. In this work, we develop a task-general framework from scratch for various trajectory modeling tasks. It can handle more complex tasks, such as controllable generation and scarcity-constrained prediction, beyond simple trajectory tasks."}, {"title": "III. PRELIMINARIES", "content": "A. Problem Definition\na) Definition 1: (Mobility Trajectory).: The mobility trajectory of user u is a sequence of locations sampled at equal time intervals, denoted by $s_u = \\{l_1, l_2, ..., l_n\\}$, where each location $l_i$ is represented as the form in latitude and longitude coordinates or a region ID.\nb) Definition 2: (General Mobility Trajectory Modeling Problem).: The objective of this problem is to utilize a single"}, {"title": "IV. METHOD", "content": "Figure 2 shows the procedure of trajectory modeling with GenMove. We formulate the learning of the spatiotemporal distribution of trajectories as a denoising diffusion process. In the diffusion process, noise is progressively added to the trajectory until it becomes random noise. During the denoising process, we use $e_{co}$ from the mask condition module and $p_u$ from the contextual trajectory embedding module as conditions to guide the reconstruction of the trajectory from noise. As shown in Figure 3, the overview architecture of GenMove consists of three modules: mask condition, contextual trajectory embedding, and noise predictor. To handle diverse formats of different tasks, we utilize masking strategies to unify them with the standardized formats of task targets and conditional observations. To adapt to complex conditions associated with different tasks, we utilize contextual trajectory embedding from historical data to provide essential context for specific tasks. Subsequently, we apply this embedding to noise predictor through a classifier-free guidance approach, allowing the model to adapt its outputs flexibly based on the conditions encountered.\nA. Mask Condition\nWe unify diverse formats of different tasks through masking strategies, including task-specific masks and pattern-general masks. Specifically, we apply task-specific masks to mask different trajectory parts as task targets for various tasks, enabling a single model to solve multiple mobility modeling tasks: trajectory generation, prediction, and recovery. We utilize pattern-general masks for modeling common mobility patterns across various tasks.\nFollowing the common strategies adopted in previous works [34], [35], we perform diffusion and denoising processes on the trajectory embedding. To represent the spatiotemporal dependency of the trajectory, we embed the trajectory into a dense representation as the input for other modules. In particular, to improve the geographical continuity of mobility, we build a spatial graph $G = (V, E)$ that includes a set of nodes $V$ that contains all visited locations, and the weight of each edge represents the Euclidean distance between locations. We utilize the LINE method [36] to obtain the current trajectory embedding $e_{all}$.\nThen, we construct the mask distribution $g(\u00b7)$ by mixing five masking strategies based on adjustable ratios. Each time, we sample from the masking distribution to obtain a specific mask $m$. Therefore, we unify the input forms of all tasks as the current trajectory embedding $e_{all}$ and mask $m$. We transform $e_{all}$ into conditional observation $e_{co}$ and task target $\\eta$ through the following operations:\n$\\begin{cases}e_{co} = e_{all} \\odot m,\\\\eta = e_{all} \\odot (1 \u2013 m),\\end{cases}$\nwhere $e_{co}$ denotes conditional observation, $\\eta$ denotes task target, $m \\in \\{0,1\\}$ denotes mask, and $\\odot$ represents element-wise products.\nWe provide five masking strategies as shown in Figure 4, including task-specific masks corresponding to the features of different tasks, and pattern-general masks for modeling common mobility patterns across various tasks.\n(1) Random strategy: This strategy is for the recovery task. It is used when uncertain about missing patterns, selecting recovery targets arbitrarily as a percentage of observed values.\n(2) Terminal strategy: This strategy masks future parts of a trajectory, such as the last point or a few points, and is particularly suited for prediction tasks.\n(3) Complete strategy: This strategy is designed for the generation task. This strategy masks the entire trajectory, as no part is needed for observation in generation tasks.\n(4) Sequential strategy: This strategy is inspired by the inherent pattern of people's mobility in the real world, where movement is the continuous location transition. It continuously masks a certain percentage of observations.\n(5) Circadian rhythm strategy: This strategy aims to capture the circadian rhythm of human mobility, characterized by regular daytime work and nighttime rest patterns. Thus, it masks hours between 12 a.m. and 6 a.m., when people are not frequently moving.\nB. Trajectory-level Embedding\nWe design the trajectory-level embedding to provide essential context for different tasks from historical trajectories, adapting to complex conditions associated with different tasks.\nWe obtain the historical trajectory embedding $h_u$ using the trajectory embedding method. We then use LSTM to map users' historical trajectories to trajectory-level embedding $p_u$, $p_u = \\text{LSTM}(h_u)$ enabling users with similar mobility pat-terns to have similar trajectory-level embedding. The obtained trajectory-level embedding $p_u$ is then introduced into the noise predictor using classifier-free guidance, assisting the trajectory modeling process."}, {"title": "V. EXPERIMENTS", "content": "A. Experimental Settings\n1) Dataset: We conducted broad experiments on two real-world datasets (ISP and MME), which were collected from two cities in China (Shanghai and Nanchang). The details of datasets are summarized in Table I.\n\u2022 ISP: The ISP dataset is sourced from a prominent Internet service provider in China. The dataset contains trajectories of over 90000 users in Shanghai over a week, each containing an anonymous user ID, timestamp, and cellular base station.\n\u2022 MME: The MME dataset is provided by an operator in China. The dataset contains the trajectories of more than 6000 users over a week in Nanchang, with each mobility record containing an anonymous user ID, time stamp, and region ID.\nMoreover, we have taken proactive measures to protect users' privacy in our dataset. Firstly, all data collected in this study are stored on secure data warehouse servers behind the company's firewall. Secondly, staff from our partners, ISP and MME, have anonymized all user information, including personal and location identifiers.\n2) Tasks: As shown in Figure 7, we evaluate our method across six typical trajectory-related tasks. However, our model is not limited to these tasks; it can adapt to a broader range of tasks. These six tasks are categorized into generation, recovery, and prediction. Each type is further divided into basic and extended tasks. For example, in the generation category, the basic task is the unconditional generation, while the extended task is the controllable generation (i.e., generating trajectories that meet specific conditions). In the prediction category, the basic task involves the next location prediction, while the extended task involves long-term prediction (predicting locations over multiple time steps). In the recovery category, the basic task is trajectory recovery, and the extended task is\nscarcity-constrained prediction (i.e., the next location prediction based on sparse trajectories).\n3) Metrics: Following the previous related works [20], [14], [9], [21], [4], [25], we select common metrics for mobility modeling tasks to evaluate the effectiveness of our model.\na) Trajectory Generation: We evaluate the generated trajectory using the following six metrics:\n\u2022 Distance: This is travel distance, which is determined by adding up each user's trip distance over a certain period.\n\u2022 Radius: The spatial range of the user's daily movement is represented by the radius of gyration.\n\u2022 Duration: This refers to the duration of stay, measured as the time spent at each visited destination.\n\u2022 Daily-loc: This refers to the daily frequency of visited locations, quantified as the number of locations each user trips every day.\n\u2022 Density: This metric evaluates the geographical distribution by comparing the density of the total and actual trajectories on a global scale.\n\u2022 Trip: At the trajectory level, this statistic measures the relationship between the starting and ending points of a trip. It involves calculating the probability distributions for the initial and final locations in both the original and generated trajectories.\nWe employ the Jensen-Shannon divergence (JSD) to visually assess the similarity between the generated sequences and the real sequences. Specifically, for two distributions, m and n, the Jensen-Shannon Divergence (JSD) between them is defined as:\n$\\text{JSD}(m, n) = \\frac{1}{2}\\text{KL}(m||\\frac{m+n}{2}) + \\frac{1}{2}\\text{KL}(n||\\frac{m+n}{2}),$ \nwhere KL(\u00b7||\u00b7) is the Kullback-Leibler divergence [42].\nb) Trajectory Recovery: We evaluate the recovered tra-jectory using the following three metrics:\n\u2022 Recall: It evaluates the model's ability to recover all ground-truth locations, averaged over all tested values. If the Recall is 1, it means that all ground-truth locations are fully recovered, as opposed to 0 if they are not recovered at all.\n\u2022 MAP: It assesses the global ranking task to determine the quality of the entire ranking list, encompassing all locations. A higher MAP number indicates superior performance.\n\u2022 Distance: It is defined as the geographical distance between the recovery location's center and the ground truth. The performance will improve as the distance decreases."}]}