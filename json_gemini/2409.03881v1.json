{"title": "Multi-agent Path Finding for Mixed Autonomy Traffic Coordination", "authors": ["Han Zheng", "Zhongxia Yan", "Cathy Wu"], "abstract": "In the evolving landscape of urban mobility, the prospective integration of Connected and Automated Vehicles (CAVs) with Human-Driven Vehicles (HDVs) presents a complex array of challenges and opportunities for autonomous driving systems. While recent advancements in robotics have yielded Multi-Agent Path Finding (MAPF) algorithms tailored for agent coordination task characterized by simplified kinematics and complete control over agent behaviors, these solutions are inapplicable in mixed-traffic environments where uncontrollable HDVs must coexist and interact with CAVs. Addressing this gap, we propose the Behavior Prediction Kinematic Priority Based Search (BK-PBS), which leverages an offline-trained conditional prediction model to forecast HDV responses to CAV maneuvers, integrating these insights into a Priority Based Search (PBS) where the A* search proceeds over motion primitives to accommodate kinematic constraints. We compare BK-PBS with CAV planning algorithms derived by rule-based car-following models, and reinforcement learning. Through comprehensive simulation on a highway merging scenario across diverse scenarios of CAV penetration rate and traffic density, BK-PBS outperforms these baselines in reducing collision rates and enhancing system-level travel delay. Our work is directly applicable to many scenarios of multi-human multi-robot coordination.", "sections": [{"title": "I. INTRODUCTION", "content": "The rapid advancements in the field of autonomous vehicles and intelligent transportation systems herald a future where Connected and Automated Vehicles (CAVs) could become an integral part of our urban landscapes. This integration promises to significantly enhance traffic efficiency, reduce congestion, and improve overall road safety. However, the transition towards fully automated traffic systems is fraught with challenges, particularly due to the necessity for CAVs to coexist and interact seamlessly with Human-Driven Vehicles (HDVs) in mixed-traffic environments. The unpredictable nature of human driving behavior introduces a level of complexity that current autonomous driving systems must adeptly navigate to ensure harmonious and safe traffic flow.\nRecent works in robotics, planning, and artificial intelligence have made significant strides in Multi-Agent Path Finding (MAPF) algorithms, which are designed to optimize multi-agent coordination. These algorithms have been instrumental in solving the coordination problems in various domains, including warehouse automation, drone swarms, and full-autonomy traffic coordination. However, their application in mixed-traffic scenarios, where autonomous systems must interact with uncertain human drivers, reveals significant limitations."}, {"title": "II. RELATED WORK", "content": ""}, {"title": "A. Mixed-traffic Coordination", "content": "While numerous works have proposed coordination methods for CAVs in various traffic settings [2], fewer works have studied mixed autonomy settings where CAVs must coexist with HDVs in the same traffic system. Previous model-based optimal control methods for mixed autonomy typically design algorithms for smoother car-following, platooning, and other relatively simple behaviors [3], [4]. Other works have leveraged model-free reinforcement learning (RL) [5], [6] to automatically discover high-performing control policies for a variety of traffic scenarios, though without explicit collision prevention. Nevertheless, we are the first to study a search-based planning method for mixed autonomy, and we additionally incorporate behavior prediction of surrounding"}, {"title": "B. Behavior Prediction", "content": "Behavior and trajectory prediction constitutes a cornerstone of research in the domain of autonomous driving, offering substantial contributions to the understanding and anticipation of the movements of pedestrians and human-operated vehicles in the vicinity of autonomous vehicles [7]. This field has traditionally favored deep learning approaches for forecasting future positions and actions [8]\u2013[10].\nHowever, the scope of this paper diverges from the task of designing a deep learning model for behavior and trajectory prediction based on extensive real-world datasets. Instead, our research centers on the integration of an existing prediction model into the strategic planning processes of a fleet of autonomous vehicles operating within mixed traffic environments. Our primary interest lies in exploring the synthesis of predictive insights with the dynamic decision-making required for effective navigation and safety in scenarios where CAVs and HDVs coexist."}, {"title": "C. Multi-agent Path Finding", "content": "The classical multi-agent path finding (MAPF) problem [11] is a NP-hard [12] problem which seeks to find the shortest collision-avoiding paths for a set of agents in a discrete graph. Since the space of joint agent trajectories is intractably large to consider [13], nearly all MAPF algorithms rely on repeatedly calling a single-agent path planner such as A* search [14] or SIPP [15], while holding paths of some set of other agents as constraints. In particular, Conflict-based Search (CBS) [13] is a seminal algorithm which first plans independent shortest paths for all agents then relies on backtracking tree-search to resolve pairwise agent collisions by adding local constraints. Priority-based Search (PBS) [1] is a scalable extension of CBS, albeit suboptimal and incomplete, which searches over global priorities between conflicting agents rather than local constraints.\nIn continuous space, several works in multi-robot motion planning [16], [17] have applied sampling based methods like probabilistic roadmaps [18] in conjunction with CBS or other discrete MAPF algorithms to plan over settings with continuous 2D space and time. Alternatively, continuous settings may be discretized for application of MAPF algorithms [19]. [20] proposes a MAPF-based approach for coordination of CAVs in a full autonomy system, but no MAPF-based approach has ever been designed for mixed autonomy to our knowledge."}, {"title": "III. PROBLEM FORMULATION", "content": ""}, {"title": "A. MAPF Formulation of Highway Coordination", "content": "We formulate the highway coordination problem in the Multi-Agent Path Finding (MAPF) framework. The classical MAPF problem involves k agents and is defined by the tuple (G, s, g), where G = (V, E) represents an undirected graph. In this context, s : [1,...,k] \u2192 V assigns each agent to a source position, while g : [1,...,k] \u2192 V assigns each agent to a goal position. We focus on discrete time domain, with each agent occupying a position on the graph at any given timestep and capable of performing one action that determines the next position node to transit to, per timestep.\nApplying this framework to a mixed-traffic highway scenario, we represent each CAV agent in the scene as i\u00ba \u2208 C, and each HDV agent as ih \u2208 H. In coordinating highway traffic, our primary objective is to determine the control inputs for the CAVs; therefore, we only set goals for CAV"}, {"title": "B. Kinematic Bicycle Model", "content": "We adopt the bicycle model [21] for the vehicle kinematics, and the motion primitives translate into low-level bicycle kinematics. The bicycle model allows for a more accurate representation of real-world vehicle motion compared to point-mass models while remaining computationally efficient for trajectory planning and control. Here, the pairs of front and rear wheels are each aggregated into a singular wheel along the midline of the vehicle. The control inputs are acceleration a and front wheel steering angle \u03b4. The distance from the center of gravity to front and rear wheels is half of vehicle length lk. \u03c8 denotes the heading. \u03b2 denotes the slip angle.\n$X_x = v \\cos(\\psi + \\beta)$\n$X_y = v \\sin(\\psi + \\beta)$\n$\\beta = \\tan^{-1} (\\frac{v \\cos(\\beta)}{l_k} \\tan \\delta)$\n$\\dot{v} = a$\n$\\dot{\\psi} = \\frac{v \\cos(\\beta)}{l_k} \\tan \\delta$\n(2)"}, {"title": "IV. METHOD", "content": "For coordinating mixed-traffic, we take insight from a MAPF algorithm called Priority Based Search (PBS) and incorporate an offline learned prediction model to predict and revise the future behavior of HDVs in the PBS planning of CAV trajectories. To accommodate the constraints imposed by the vehicle kinematic model, a multi-phase A* search searches on a discrete state graph where the edges are represented by motion primitives. We name our proposed method as Behavior Prediction Kinematic Priority Based Search (BK-PBS), which is sketched in Algorithm 1."}, {"title": "A. Multi-phase A* with Motion Primitives", "content": "In the context of classical MAPF, system dynamics are often reduced to simplified point-mass agents, with low-level path-finding such as A* search conducted in a grid-based world devoid of kinematic constraints. For the highway coordination problem, we aim to construct a continuous trajectory for each CAV from its starting point to its destination, in compliant with the vehicle kinematics detailed in the referenced bicycle model, while avoiding collisions with other vehicles.\nTo address this, we present a method that combines kinematic constraints with A* search Multi-phase A* with Motion Primitives (M-A*). Let ic be the CAV under planning associated with a BK-PBS node N. This method performs the A* search on a graph where each node represents the position of ic, and each edge represents a motion primitive \u2014 a viable maneuver that conforms to the kinematic constraints outlined by the bicycle model. Trajectories of vehicles other than the CAV under planning are integrated into the graph as dynamic obstacles constraints.\nEach motion primitive delineates a possible segment of T(ic), distinguished by particular steering and velocity profiles. Given a target position of ic, the A* algorithm searches for the sequence of primitives that leads to the lowest cost, collision-free trajectory from the current state to the"}, {"title": "B. Conditional Prediction Model", "content": "In this study, we address the challenge of coordinating a mixed traffic system comprising both HDVs, which exhibit uncertain and uncontrollable behavior, and CAVs. The uncertainty of HDVs complicates the application of PBS for traffic planning. Specifically, if a CAV cannot anticipate an HDV's future movements, planning a collision-free trajectory for the CAV becomes infeasible. A potential solution involves predicting the trajectories of HDVs in advance, treating them as dynamic obstacles in the CAVs' path, and utilizing PBS to navigate CAVs around HDVs. This approach, which we refer to as reactive coordination, inherently prioritizes HDVS within the PBS framework, compelling CAVs to adjust based on HDV actions. However, our objective is to establish a proactive coordination strategy, wherein HDV behavior is also influenced by CAV movements. This is achieved by branching over the priority order between CAVs and HDVs in conflict situations within PBS. Nonetheless, the challenge arises in situations where an HDV is assigned a lower priority than a CAV, as the HDV's trajectory cannot be directly controlled or replanned.\nTo address this issue, we introduce a conditional prediction model, denoted as be, designed to predict the future actions of HDVs based on potential CAV maneuvers. This model enables us to plan for CAV movements in such a way that avoids collisions with HDVs, taking into account the predicted responses of HDVs to CAV actions. Essentially, this model allows for the adjustment of HDV priorities and the subsequent reevaluation of their trajectories in light of CAV movements, facilitating proactive coordination.\nWe illustrate PBS's branching between a CAV and a HDV in the left part of Fig.1."}, {"title": "C. Mixed-traffic Priority Based Planning", "content": "BK-PBS is a centralized planning algorithm that determines actions for all CAVs at once. Like PBS, BK-PBS is a depth-first traversal of a Priority Tree (PT). Let i\u4eba j denotes that vehicle i has priority over vehicle j. Each node N encompasses a priority ordering among vehicle pairs (i, j) through the priority order <\u221a associated with node N, along with a set of minimum-cost trajectories that comply with this priority ordering, ensuring no collision between any vehicle trajectory under the given priority constraints. Given an agent i, we denote the set of agents that has higher or lower priority than i in node N as {<N i} or {>n i}, respectively. The objective of minimizing total travel delay cost J is equivalent to maximize the overall travel speed.\nThe root node of the PT contains no predefined priorities (line 2) and the set of independent minimum-cost trajectories for all vehicles (line 3-7). For a CAV, the root node trajectory is found using M-A* without considering the trajectory of other vehicles as dynamic obstacle constraints; while a HDVs, the root node trajectory is predicted by be without considering any CAV actions.\nWhen the search arrives at a node N in the PT, if no collision are detected among vehicles, N is identified as a goal node in the high-level search (differing from the goal locations described in III). We assume that two HDVs are capable of avoiding collisions with one another through natural coordination, thus eliminating the need for branching in conflicts involving solely HDVs. If a collision arises between a CAV i and any vehicle j (line 14), BK-PBS branches N into two new child nodes, respectively introducing new priority constraints i\u4ebajand j < i to the child nodes (line 17). The left section of Fig.1 illustrates the branching of a CAV-HDV collision, while the right section shows the branching of a CAV-CAV collision. Within each of the newly generated child nodes, a replanning process is invoked to resolve collisions according to the priority ordering (line 18). Within the replanning, BK-PBS first conducts a topological sort to arrange the vehicle indices in accordance with the priority ordering (line 24). It then plans a conflict-free minimum-cost trajectory for each agent subject to the trajectories of all agents with higher priority.\nFor a CAV-HDV collision, assigning a higher priority to an HDV results in adding the predicted HDV trajectory as a constraint in the CAV's low-level planning via the M-A* (line 28). Conversely, if a lower priority is assigned to an HDV, be is invoked to re-predict the HDV's trajectory, conditioned on the CAV's planned trajectory (line 31). It is important to note that within the BK-PBS update plan, the input for be includes the trajectories of all CAVs with higher priority, ensuring the preservation of established priority orders. For a CAV-CAV collision, we use M-A* (line 28) to find the the trajectory for each CAV subject to the constraints induced by the new priority order.\nA child node is pruned if for some agent, no trajectory can be found to avoid conflict with all higher-priority agents (line 32). If no viable child node emerges from an expanded N, BK-PBS backtracks to the parent node. If two child nodes emerge from an expanded N, the child node with lower sum of cost will be searched first."}, {"title": "D. Neural Network-based Conditional Prediction Model", "content": "We parameterize be using neural networks. The architecture of this model is illustrated in the lower-left portion of Fig.1. Our approach utilizes Graph Convolutional Networks (GCNs) [22] to represent the inter-vehicle dependencies.\nLet jh be the HDV under prediction associated with a BK-PBS node N. The model's input is bifurcated: the first input comprises the current observation of the leading and trailing vehicles in agent jh's lane and the adjacent ones. The subsequent input includes the planned trajectories of CAVS with higher priority than jh, within a preview horizon p\u00ba. These inputs are structured as graphs; specifically, the first input forms a graph whose nodes featurize the positions and velocities of the leading and following vehicles on its current and adjacent lane, denoted as o(jh). This graph feeds directly into a GCN block. For the second input, we select CAVS that have higher priority than jh at current planning step, and encode their planned trajectories to a graph sequence denoted as {T(p) | p <n jh, p\u2208 C} (line 31). Each graphs within this sequence has the future positions and velocities of CAVs that have higher priority than jh as node features. A second GCN block processes each graph in the sequence, employing shared weights and averaging the outcomes across the sequence's temporal dimension. We assume that each graph is fully connected.\nPrevious research suggests that the longitudinal behavior of highway drivers is relatively straightforward to predict [23]. Consequently, we posit that an HDV will sustain its current speed for a foreseeable interval, focusing our predictive efforts on the vehicle's lateral movements. The combined GCN outputs are then channeled through two fully-connected layers, culminating in a sigmoid layer that computes the probability of the lane change decision of jh at next timestep. The outcome is a sequence of future lane change decision for jh, which is combined with the library of motion primitives to generate the corresponding trajectory prediction (jh)."}, {"title": "V. EXPERIMENTAL SETUP", "content": ""}, {"title": "A. Simulation Environment", "content": "We modify HighwayEnv [24] to simulate the system with discretization dt = 0.2s for H = 400 timesteps. Fig. 2 illustrates the layout of the highway section. The penetration rate of CAVs is denoted as \u03b1. The highway section has length l = 460, with each lane has width wlane = 4.5m and the merging zone length lm = 180m.\nWe set arrival rate \u03bb veh/hr with initial speed sampled from a uniform distribution % ~ U(25,35) m/s. The CAV penetration rate a is defined as the ratio of populated CAVS to the total number of populated vehicles. Each vehicle has length lk = 5m and width 2m. Vehicles collide when their bounding boxes overlap. Crashed vehicles are removed from the scene after a collision happens. The speed limit on the highway is set as Umax = 35m/s. The longitudinal behavior of HDVs is governed by the IDM [25] while the lateral behavior is governed by MOBIL model [26]. We use the default parameters from [24] for the HDV driver models, except the target speed of IDM is sampled uniformly from 25 m/s to 35 m/s.\nFor a HDV driving on the ramp, its lateral behavior is governed by the stochastic merging model from [27], which shapes the probability of taking the merge action in proportional to the distance to the end of the merging zone."}, {"title": "B. Prediction Model", "content": "We train the prediction model used in BK-PBS and BK-M-A* using supervised learning. For data collection, we run a rollout policy for CAV control and record the states of every CAV and HDV at every simulation step. We post-process the data to match the input-output pairs for the prediction network described in IV-D, resulting a dataset which has 30K training samples in total.\nThe output from all hidden layers in the GCN and fully connected layers has size 64, expect for the last fully connected layers which outputs a single value to the sigmod function to determine the probability for lane change decision of a HDV. For the prediction network used in BK-M-A*, we do not include the planned trajectories of CAVs as conditional input, since there is no priority order among vehicles when planning under BK-M-A*. We train the model for 1000 epochs using Adam Optimizer [28] with learning rate lr = 0.001 and batch size as 64. The training is perform on a desktop with a single RTX 3090 Ti GPU, and the total training time is around 4 hours.\nNote that the model is trained using data collected from environment setting with certain vehicle arrival rate and CAV penetration rate, while deployed in different environment settings."}, {"title": "C. Planning Algorithms", "content": "We compare BK-PBS with three baselines: BK-A*, IDM+MOBIL and RL-PPO.\nBK-M-A* is a decentralized planning algorithm that determines the trajectory of each CAV independently using M-A*. In BK-M-A*, a CAV under planning sees its surrounding vehicles as dynamics obstacles, whose trajectories are predicted using a learned prediction model and encoded as dynamic obstacle constraints into the M-A* planning of that CAV. Compared to BK-PBS, BK-M-A* does not have a high-level planning procedure to resolve the collision conflicts between vehicles. For M-A* used in both BK-PBS and BK-M-A*, according to III-A and IV-A, for CAVs driving on the main road, we set the goal distance in the first phase of A* planning as d = 70 m, while the revised goal distance in the second phase of A* planning as d' = 30 m.\nIDM+MOBIL utilizes the rule-based car-following models [25], [26] for CAV planning. We choose its parameters same as the parameters of the HDV driver model, expect that the target speed of IDM for CAV is set as 35 m/s.\nReinforcement learning is a commonly used approach to coordinate CAV in a highway driving scenario. RL-PPO uses Proximal Policy Optimization [29] to offline train a control policy for a CAV to select the motion primitives. The RL agent is trained in a single CAV environment with a reward function of maintaining a target speed and avoiding collision with up to 14 surrounding HDVs. The policy and value function networks both have two layers and hidden dimensions of 256. We run training with a learning rate of 0.001, discount factor of 0.95, batch size of 512, and 10 epochs per gradient update for 1e8 total environment steps (around 1 day on 48 CPU cores). After training, we inference the policy in a multi-agent environment described in V-A. The trained policy is applied to each CAV independently with weights sharing.\nWe run all the planning algorithms in a rolling-horizon fashion, where the planning frequency is 5 Hz. After each planning round, we take the first n primitives from the each planned primitive sequence of a CAV. In all experiments, n is set to 1.\nFor robustness study we sweep a from 0.4 to 0.8 in both low density (\u03bb = 2500 veh/hr) and high density (\u03bb = 3000 veh/hr) traffic. We test each planning algorithm on 5 environment seeds in all settings and average the results.\nWe track the number of crashed vehicles and travel delay of every vehicle that successfully arrives at the end of the highway section without collision."}, {"title": "VI. EXPERIMENTAL RESULTS", "content": ""}, {"title": "A. Evaluation of Prediction Model", "content": "We conduct an offline evaluation of the trained prediction model be, using a dataset procured in a same manner to the training dataset. As detailed in IV-D, this model predicts the lane-changing decisions of HDV with binary outcomes: 1 signifies executing a lane change, while 0 indicates maintaining the current lane. Due to the different lateral driver model for HDV on ramps versus main roads, we partition the evaluation dataset into two subsets. One subset contains samples exclusively from ramps while the other contains samples solely from main roads, allowing us to assess the model's performance in predicting lane-changing decisions governed by different lateral driver models.\nEach subset comprises 4000 samples, and we present the evaluation outcomes in Table.I for ramp data and Table.II for main road data."}, {"title": "B. Controllable Collision Rate", "content": "After each simulation episode, we compute the collision rate as the ratio between the crashed vehicles and total number of vehicles that inserted to the scene. Note that a HDV can crashed into another HDV during simulation (this happens naturally within our simulator), which is out of the algorithm's control; thus we only focus on collisions that have a CAV involved, and we named the resulting collision rate as the controllable collision rate.\nWe report the controllable collision rate in Fig.3. A visual inspection reveals that the proposed method BK-PBS achieves relatively low collision rate overall, as indicated by the predominance of lighter shades. As mentioned in V-C, the values shown are averaged over 5 random seeds for each scenario setting.\nRL-PPO exhibits the highest collision rates across all penetration and arrival rates. Notably, its collision rates escalate with increasing vehicle arrival rates, suggesting that RL-PPO struggles to maintain safety in denser traffic conditions. IDM+MOBIL appears to fare better, with its heat map exhibiting consistently lighter shades. It exhibits a lesser dependency on arrival rate changes, which implies the robustness of these rule-based driver models in diverse traffic densities. We found collision rates with BK-PBS tend to rise alongside arrival rates, and such trend can also be found with BK-M-A*.\nBK-M-A* shows intermediate performance but demonstrates elevated collision rates under all settings compared to BK-PBS, which is due to the fact that BK-M-A* does not resolve conflicts between vehicles while a CAV-CAV conflict can be effectively solved by BK-PBS, resulting in less collisions between two CAVs. This explanation can be validated by observing that the collision rate with BK-M-A* grows quickly as penetration rate increases.\nOne interesting observation is that at high traffic densities (\u03bb = 3000 veh/hr), IDM+MOBIL occasionally records fewer collisions compared to BK-PBS. This could be because, in heavy traffic, the MOBIL model restricts frequent lane changes due to the presence of vehicles in adjacent lanes most of the time. In contrast, BK-PBS consistently seeks the shortest path to the destination, resulting in more frequent lane shifts and side collisions."}, {"title": "C. Travel Delay", "content": "We compute the average delay of vehicles that successfully arrives at the end of the highway section without collision according to Eq.1 and report it in Table.III and Table.IV."}, {"title": "VII. CONCLUSIONS AND FUTURE WORK", "content": "This paper presents the Behavior Prediction Kinematic Priority Based Search (BK-PBS), a novel framework that utilizes an offline-trained conditional prediction model for forecasting the reactions of HDVs to CAV actions. This prediction model is adeptly integrated into Priority Based Search (PBS), which employing a low-level multi-phase A* search with motion primitives that respect kinematic constraints. In simulated highway merging scenarios with varied traffic densities and AV penetrations, BK-PBS outperformed existing rule-based and RL algorithms, reducing collisions and travel delays. This method holds promise for improving the coordination between humans and robots in mixed-traffic environments, for example, cooperative navigation of mobile robots among crowds.\nWe aim to evolve the BK-PBS framework further by integrating more sophisticated behavior prediction methodologies, enhancing safety measures with the implementation of safety envelopes like control barrier functions, and extending its applicability to larger and more general networks. Additionally, since crashed vehicles are removed from the scene in our simulation, validating BK-PBS in physical testbeds that account for replanning in response to chain reactions caused by crashes is a crucial next step. This will bring us closer to realizing its potential in real-world systems."}]}