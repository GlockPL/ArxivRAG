{"title": "Bridging Dynamic Factor Models and Neural Controlled Differential Equations for Nowcasting GDP", "authors": ["Seonkyu Lim", "Jeongwhan Choi", "Noseong Park", "Sang-Ha Yoon", "ShinHyuck Kang", "Young-Min Kim", "Hyunjoong Kang"], "abstract": "Gross domestic product (GDP) nowcasting is crucial for policy-making as GDP growth is a key indicator of economic conditions. Dynamic factor models (DFMs) have been widely adopted by government agencies for GDP nowcasting due to their ability to handle irregular or missing macroeconomic indicators and their interpretability. However, DFMs face two main challenges: i) the lack of capturing economic uncertainties such as sudden recessions or booms, and ii) the limitation of capturing irregular dynamics from mixed-frequency data. To address these challenges, we introduce NCDENow, a novel GDP nowcasting framework that integrates neural controlled differential equations (NCDEs) with DFMs. This integration effectively handles the dynamics of irregular time series. NCDENow consists of 3 main modules: i) factor extraction leveraging DFM, ii) dynamic modeling using NCDE, and iii) GDP growth prediction through regression. We evaluate NCDENow against 6 baselines on 2 real-world GDP datasets from South Korea and the United Kingdom, demonstrating its enhanced predictive capability. Our empirical results favor our method, highlighting the significant potential of integrating NCDE into nowcasting models.", "sections": [{"title": "1 Introduction", "content": "Nowcasting GDP growth is a crucial task for policymakers and analysts who need timely information about the current state of the economy to make decisions. However, official GDP growth estimates are released with a significant delay and are subject to revisions. In general, the first advance estimates of GDP growth are published about 30 days after the end of the quarter. At the same time, a wealth of information about different aspects of the economy can be obtained from relevant indicators that are released with less or more frequent release delays. For example, governmental institutions such as central banks publish various monthly indicators of economic activity. As a result, the demand for early economic estimates modeled using these more frequent observations has increased, and these initial estimates are called \"nowcasting\".\nGDP nowcasting is very important for Korean governments because it helps them monitor the impact of their policies, adjust their financial and monetary plans accordingly, and respond quickly to any shocks or crises that may affect the economy. The predicted GDP growth can also inform the public and private sectors about the economic outlook and expectations, which can influence their consumption and investment decisions. Therefore, economic research on GDP nowcasting [3, 4, 6, 14, 18, 22, 26, 34, 37, 38, 42, 43, 45] has been actively being conducted for ten years and has focused on 3 main issues: i) how one incorporates data into a model with missing observations caused by mixed or irregular sampling frequencies, ii) how one handles large numbers of variables, and iii) how one allows for time-varying parameters.\nOne of the most prominent methods for nowcasting GDP growth is the use of DFM, which extracts a small number of latent factors representing economic conditions from mixed and irregular time-series data. While there has been remarkable progress in using DFM for nowcasting, they face two challenges: i) difficulty in capturing sudden fluctuations and complex patterns (cf. Fig. 1) due to the lack of non-linear activation, and ii) suboptimal handing of missing values from mixed frequency data. Real-world economic data, even within the same monthly or quarterly indicator, may be released at different times, causing time lags compared to typical sequential data (cf. Fig. 2). NCDEs, which can theoretically generalize RNNs and state-space models [13], have recently gained attention as a possible complement to address these limitations.\nCDE is one of the most suitable ones for building macroeconomic models. CDE was first proposed by financial mathematicians to model complicated dynamics in financial markets, which is a specific application domain of DFM since financial transactions have a few latent factors. NCDE [31] is a set of techniques to learn CDE from data with neural networks. Note that NCDE keeps reading the time-derivative of data over time, and for this reason, NCDE is, in general, considered as continuous RNN. In addition, NCDE is known to be superior in processing irregular time series.\nWe propose NCDENow, a novel GDP nowcasting framework that integrates DFM with NCDE. The novelty of NCDENow lies in its strategic design, which synergizes the interpretability of DFMs with the temporal modeling capabilities of NCDEs. To the best of our knowledge, this is the first research to integrate NCDE with DFMs for economic indicators, offering extensibility to DFM variants.\nNCDENow consists of 3 modules: i) the factor extraction module, which extracts latent factors through DFM; ii) the exposure estimation module, which uses NCDE to estimate factor loadings and idiosyncratic disturbances; and iii) the regression module, which integrates the results from these modules to nowcast GDP growth.\nWe evaluate NCDENow against 6 baselines using GDP datasets from South Korea and the UK. Our method, NCDENow, shows outstanding performance in terms of GDP nowcasting, handling missing data and sudden drop, and interpretability. Our contributions can be summarized as follows:\n\u2022 We propose NCDENow, a novel framework that integrates the strengths of DFM strengths in extracting latent factors with the capabilities of NCDE in handling irregular time series data (Section 3).\n\u2022 NCDENow outperforms the baselines in terms of nowcasting accuracy (Section 4.2), particularly in scenarios with irregular data (Section 4.3) and volatile economic conditions such as COVID-19 (Section 4.4).\n\u2022 NCDENow provides meaningful insights into the relationships between extracted factors and GDP growth (Section 4.5), thereby contributing to a deeper understanding of economic conditions and assisting policymakers in making informed decisions."}, {"title": "2 Preliminaries & Related Work", "content": "This section presents recent GDP nowcasting research and provides background for understanding."}, {"title": "2.1 GDP Nowcasting", "content": "The Atlanta Fed introduces GDPNow [22], which combines the econometric approach from top-down GDP nowcasting with a detailed bottom-up approach. The New York Fed's online GDP nowcasting\u00b9 uses DFM and a big data framework [1, 5, 8]. Similarly, Hayashi and Tachi [21] also employ DFM for GDP nowcasting. The OECD integrates insights from macroeconomics to construct improved tree-based models [42]. Wu et al. [43] employ LSTM with comprehensive datasets. However, these models face challenges under high economic uncertainty, such as COVID-19.\nRecently, the Bank of Korea introduces a GDP nowcasting system [45] that combines DFM and LSTM. They use DFM only for data imputation and rely on LSTM for nowcasting, which may not effectively capture the dynamics of macroeconomic indicators."}, {"title": "2.2 Dynamic Factor Models", "content": "DFM extends the factor model for cross-sectional data to a time-series domain [17]. It assumes that a small number of latent dynamic factors drive the co-movement of high-dimensional time-series data,"}, {"title": "2.3 Neural Controlled Differential Equations", "content": "NCDE [31] is normally regarded as a continuous analogue to RNN and can be written as follows:\n$$h(t_b) = h(t_a) + \\int_{t_a}^{t_b} f(h(t); \\theta_f)dX(t)$$\n$$= h(t_a) + \\int_{t_a}^{t_b} f(h(t); \\theta_f) \\frac{dX(s)}{dt} dt,$$\nwhere $f$ is a CDE function, and $h(t)$ is a hidden vector at time $t$. $X(t)$ is a continuous path created from discrete sequential observations, denoted as ${(x_i, t_i)}_{i=a}^N$. Especially, NCDE keeps their continuous properties by using the interpolated path $X$ and solving the Riemann-Stieltjes integral to get $h(t_b)$ from $h(t_a)$ as shown in Eq. (3) in particular, this problem to derive $h(t_b)$ from the initial condition $h(t_a)$ is known as an initial value problem (IVP). We rely on various ODE solvers to solve the integral problem, such as the explicit Euler method to the 4th order Runge-Kutta (RK4). To make the interpolated continuous path $X$, linear interpolation or natural cubic spline interpolation is generally used among several interpolation methods. Studies using NCDE are being actively researched in various fields ranging from time-series forecasting to generation [11, 12, 24, 27-30, 33, 41].\nWe propose a GDP nowcasting model suitable for uncertain real-world economic conditions. Our model applies the continuous dynamic modeling technique in NCDE to DFM. Moreover, it allows us to analyze the nowcasting results based on factors."}, {"title": "3 Proposed Method", "content": "We design NCDENow based on the DFM and the NCDE. In this section, we first review its overall workflow and then introduce the details."}, {"title": "3.1 Overall Workflow", "content": "Fig. 3 shows comprehensive designs of our NCDENow. Our method includes exposure estimation, factor extraction, and regression modules. The overall workflow is as follows:\n(1) The exposure estimation module first creates a continuous path $X$ from mixed-frequency macroeconomic time-series ${f_i}_{i=1}^N = {(x_i, t_i)}_{i=1}^N$, where $x_i \\in \\mathbb{R}^D$ represents $D$ macroeconomic indicators at time $t_i$. We use natural cubic spline interpolation to create the continuous path. This process happens before training our model. Then, the module creates the last hidden vectors for the idiosyncratic disturbance and the factor loading, denoted $h^\\alpha(t_N) \\in \\mathbb{R}^{dim(h_\\alpha)}$ and $h^\\beta(t_N) \\in \\mathbb{R}^{dim(h_\\beta)}$, respectively. Finally, the exposure decoder outputs the scalar value of the idiosyncratic disturbance $\\alpha_{t_{N+1}}$ and the vector of factor loading $\\beta_{t_{N+1}} \\in \\mathbb{R}^K$, where $K$ is the number of factors. The shapes of idiosyncratic disturbance and factor loading differ from the original DFM due to our method's focus on nowcasting GDP, while DFM predicts all economic indicators.\n(2) In the pipeline that passes through the factor extraction module, data $F$ and factor group information provided by economists are input and latent factor $z_{t_{N+1}} \\in \\mathbb{R}^K$ is output through Kalman filter and smoother.\n(3) The final step is the regression module for GDP nowcasting. We use the learned $\\alpha_{t_{N+1}}$ and $\\beta_{t_{N+1}}$ with the latent factor from the factor extraction modules. Finally, Eq. (12) outputs the predicted GDP growth $\\hat{y}_{t_{N+1}}$.\nWe provide more detailed descriptions for each step in the following subsections."}, {"title": "3.2 Exposure Estimation Module", "content": "The exposure estimation module of NCDENow uses cubic spline interpolation to generate continuous paths from economic indicators, preserving the natural dynamics of time series. NCDE learns from these paths to identify idiosyncratic disturbances and factor loadings. A key part of our method is training $\\theta_f$ to generate a hidden vector $h^\\alpha(t_N)$ of idiosyncratic disturbances and a hidden vector $h^\\beta(t_N)$ of factor loadings. To ensure the theoretical accuracy of our proposed method, we share important properties with the path $X$ and at the same time produce better factor loadings and idiosyncratic disturbances. For this purpose, we define the exposure estimation module as an augmented NCDE as follows:\n$$h(t_n) = h(t_1) + \\int_{t_1}^{t_n} f(h(t);\\theta_f)dX(t), h(t_1) = \\begin{bmatrix}h^\\alpha(t_1) \\\\ h^\\beta(t_1)\\end{bmatrix}$$\nwhere $h(t) \\in [\\mathbb{R}]^{dim(h_\\alpha)+dim(h_\\beta)}$ is the hidden trajectory of the factor loadings and idiosyncratic disturbances, $X$ is generated through the natural cubic spline from raw observations. The initial values $h^\\alpha(t_1)$ and $h^\\beta(t_1)$ are created from $F_{t_1}$ as follows:\n$$h^\\alpha(t_1) = FC_{D \\rightarrow dim(h_\\alpha)}(F_{t_1}),$$\n$$h^\\beta(t_1) = FC_{D \\rightarrow dim(h_\\beta)}(F_{t_1}),$$\nwhere $FC_{input\\_size\\rightarrow output\\_size}$ means a fully-connected layer whose input size is $input\\_size$ and output size is also $output\\_size$.\nThe neural network $f(\\cdot)$ used in Eq. (4) is defined as follows:\n$$f(h(t); \\theta_f) = Tanh(FC_{dim(h) \\rightarrow dim(h)}(m_L)),$$\n$$m_l = ReLU(FC_{dim(h) \\rightarrow dim(h)}(m_{l-1})),$$\n$$m_0 = ReLU(FC_{dim(h) \\rightarrow dim(h)}(h(t))),$$\nwhich consists of fully-connected layers with ReLU or hyperbolic tangent (Tanh) activation. The size of $dim(h)$ is the sum of $dim(h_\\alpha)$ and $dim(h_\\beta)$. The number of layers $L$ is a hyperparameter.\nLet $h(t_N)$ be the last hidden vector, we have an output layer (i.e., exposure decoder) with a typical construction based on $h(t_N)$. For the final regression step, the following exposure decoder produces $\\alpha_{t_{N+1}}$ and $\\beta_{t_{N+1}}$:\n$$\\alpha_{t_{N+1}} = FC_{dim(h_\\alpha) \\rightarrow 1}(h^\\alpha(t_N)),$$\n$$\\beta_{t_{N+1}} = FC_{dim(h_\\beta) \\rightarrow K}(h^\\beta(t_N)).$$\nThis module can incorporate various time series models beyond NCDE, allowing for comparison with RNN-based models in our framework."}, {"title": "3.3 Factor Extraction Module", "content": "In order to estimate the factors, we use the EM algorithm-based Kalman filtering and smoothing method. The estimated factor loadings ($\\Lambda$) and idiosyncratic disturbances ($\\epsilon$) in this process are disregarded, as we use the factor loadings ($\\beta$) and idiosyncratic disturbance ($\\alpha$) re-estimated in the exposure estimation module. The observation and transition equations of DFM are as follows:\n$$z_{t_{N+1}} = Az_t + \\mu_{t+1},$$\n$$y_{t_{N+1}} = \\Lambda z_{t_{N+1}} + \\epsilon_{t_{N+1}},$$\nwhere $\\mu_{t_{N+1}}$ follows $\\mathcal{N}(0, Q)$, $\\epsilon_{t_{N+1}}$ follows $\\mathcal{N}(0, R)$, $Q$ is the variance of $\\mu_t$, and $R$ is the variance of $\\epsilon_{t_{N}}$. The conditional probability distributions of factor $z$ and observed data $y$ are as follows:\n$$P(z_{t_{N+1}} | z_t) = \\mathcal{N}(z_{t_{N+1}}; Az_t, Q),$$\n$$P(y_{t_{N+1}} | z_{t_{N+1}}) = \\mathcal{N}(y_{t_{N+1}}; \\Lambda z_{t_{N+1}}, R).$$\nWe estimate the parameters of Eqs. (10) and (11) using the expectation-maximization (EM) algorithm [15, 39, 40]. In the first step, the initial values of parameters $\\Lambda$, $A$, $Q$, and $R$ are estimated through principal component analysis (PCA). In the E-step, the factor $z$ is computed using the Kalman smoothing method, given the observed data and parameters $\\Lambda$, $A$, $Q$, and $R$. In the M-step, the parameters $\\Lambda$, $A$, $Q$, and $R$ are updated to maximize the expected log-likelihood.\nThe factor extraction process is applied independently to groups of correlated indicators, divided based on domain knowledge. This approach follows the method proposed by Banbura et al. [7]."}, {"title": "3.4 Regression Module", "content": "The variables $\\alpha$ and $\\beta$ at time $t_{N+1}$, estimated through exposure estimation module, are regressed with the factor $z$ extracted through"}, {"title": "3.5 How to Train", "content": "The overall training algorithm in Alg. 1. Our model is trained using the following MSE loss function:\n$$\\mathcal{L} = \\frac{\\sum_{t \\in \\mathcal{T}} (y_{t_{N+1}}^{(\\tau)} - \\hat{y}_{t_{N+1}})^{2}}{|\\mathcal{T}|},$$\nwhere $\\mathcal{T}$ is a training set, $t$ is a training sample, $y_{t_{N+1}}^{(\\tau)}$ is the ground truth, and $\\hat{y}_{t_{N+1}}$ is the predicted value."}, {"title": "3.6 Well-posedness of NCDENow", "content": "The concept of well-posedness, which refers to a problem where a solution exists uniquely and alters continuously with variations in input data, has been established for NCDE as shown in Lyons et al. [35, Theorem 1.3] given the Lipschitz continuity condition. Many activation functions, for instance, ReLU, LeakyReLU, SoftPlus, Tanh, Sigmoid, ArcTan, and Softsign, possess a Lipschitz constant value of 1. Other prevalent neural network layers like dropout, batch normalization, and various pooling techniques also have known Lipschitz constants. As such, in certain scenarios of NCDENow, the Lipschitz continuity for $f(.)$ can be achieved, ensuring that the initial value problem represented in Eq. (4) is well-posed."}, {"title": "3.7 Properties of NCDENow", "content": "Our key innovation is the integration of DFM with the NCDE framework. NCDENow uses the Kalman filter from DFM flexibly, allowing it to work with different DFMs. Furthermore, our proposed method not only unifies CDEs, but can also be theoretically linked to linear CDEs, including S4 [20] and Mamba [19], which have shown significant advancements in sequence modeling. This enables NCDENow to perform continuous dynamic modeling for lagged or missing data and estimate significant variables in DFM to make accurate nowcasts even under challenging patterns of economic uncertainty."}, {"title": "4 Experiments", "content": "We conduct experiments with our proposed GDP nowcasting model to address the following research questions:\n\u2022 RQ1: Is the performance of our proposed NCDENow superior to the baseline model?\n\u2022 RQ2: How is the performance change of NCDENow compared to the baseline according to the missing data rate?\n\u2022 RQ3: How well can NCDENow forecast compare to baselines when the volatility of underlying economic data changes?\n\u2022 RQ4: How can we interpret the GDP nowcasting results?\n\u2022 RQ5: How do different ODE solvers affect the performance of NCDENow?\n\u2022 RQ6: How do the different models compare in terms of the number of model parameters?"}, {"title": "4.1 Experimental Settings", "content": "To evaluate NCDENow, we use 2 GDP datasets from South Korea and the United Kingdom. For South Korea GDP, we collect macroeconomic indicators from Economics Statistics System\u00b2. We include 33 indicators, including 28 months and 5 quarters, collected from Jan. 2002 to Dec. 2021, and following the same setting to Yi et al. [45].\nMacroeconomic indicators are categorized into 4 groups: \"Global\", \"Real\", \"Labor\", and \"Soft\", utilized to extract factors: the global group includes all economic indicators; the real group includes indicators related to the real economy; the soft group includes survey data, considering the importance of soft indicators in GDP nowcasting [32]; the labor group consists of indicators related to the labor market. These settings are identical to Yi et al. [45] and Y. Lee [44].\nUK GDP dataset is from Anesti et al. [2], which is available for download on the Bank of England website 3. Due to the proprietary nature of the series within this dataset, several indicators are not disclosed. Consequently, we use 20 publicly available macroeconomic indicators from Oct. 1996 to Dec. 2017, with 12 months and"}, {"title": "4.2 Performance Comparison (RQ1)", "content": "Table 3 shows the experimental results of GDP nowcasting for all models. The best results are highlighted in bold. NCDENow, a novel framework, outperforms DFM, RNN-based baselines, DFM-NCDE, and NCDE. In particular, for South Korea GDP nowcasting, significant performance improvements of 66.08% on MSE and 45.08% on MAPE are achieved compared to DFM. Similarly, for UK GDP nowcasting, we achieve improved performance with 76.59% on MSE and 59.22% on MAPE."}, {"title": "4.3 Study on Missing Data (RQ2)", "content": "NCDENow uses NCDE to estimate factor loadings and idiosyncratic disturbances, handling irregular time series. To investigate the impact of increased irregularity on performance, we conduct an experiment by randomly removing 10% and 20% of the collected macroeconomic indicators. The processed dataset is then used to conduct GDP nowcasting using NCDENow and DFM. In the experimental results Table 4, the performance of NCDENow overperforms that of DFM. Therefore, we conjecture that NCDENow is more robust to nonlinearity caused by missing data compared to DFM."}, {"title": "4.4 GDP Nowcasting in COVID-19 (RQ3)", "content": "We evaluate the effectiveness of NCDENow in capturing sudden economic shifts. The continuous dynamic modeling capabilities of NCDE allow NCDENow to potentially capture nonlinear patterns and abrupt changes in economic indicators more effectively than DFM. Table 5 shows the result of GDP nowcasting during the initial phase of the COVID-19 pandemic (from Q1 to Q3 2020). As shown in Fig. 1, GDP growth shows a sudden drop during this period. In this context, NCDENow demonstrates superior performance compared to DFM in both MSE and MAPE metrics. Hence, it can be inferred that NCDENow exhibits better capture capabilities of GDP growth during periods of increased economic uncertainty."}, {"title": "4.5 Factor Analysis (RQ4)", "content": "In Fig. 4, we can observe an inverse relationship between the real factor, which reflects real economic activity, and GDP growth. Global factors show a strong connection with GDP growth. In the first half of 2020, the global economic downturn and a sharp contraction due to the COVID-19 pandemic closely resemble the changes in global factors. The substantial increase in the real factor during this period is attributed to actions taken in response to COVID-19, including quantitative easing, disaster relief payments, and vaccination efforts. Furthermore, the rapid increase in global factors in the second half of 2020 can be attributed to effective COVID-19 response measures."}, {"title": "4.6 Impact of ODE Solvers (RQ5)", "content": "We evaluate the influence of ODE solver choice on the performance of NCDENow by comparing the Euler and RK4 methods. RK4 is generally considered more accurate for non-linear differential equations, as it performs four calculations per time step compared to a single Euler computation [25]. Table 6 shows that RK4 consistently outperforms Euler."}, {"title": "4.7 Model Efficiency Analyses (RQ6)", "content": "Fig. 5 shows the number of parameters and the MAPE. Models in the bottom left corner of this figure are preferred. Our NCDENow models are located around the bottom left. On both datasets, RNN-based baselines and DFM-NCDE show low efficiencies. NCDE is located in the upper left corner and has few parameters but low performance. For South Korea GDP nowcasting, NCDENow uses about 4% of the average parameters of DFM-RNN but outperforms it by approximately 3.86 times in MSE. With about twice as many parameters as NCDE, NCDENow shows a performance improvement of approximately 3.85 times in MSE."}, {"title": "5 Conclusion and Limitation", "content": "We introduced a novel model, NCDENow, that combines the strengths of DFM and NCDE for GDP nowcasting. Designed to handle sudden drops and irregular data, NCDENow has been tested under various scenarios, such as different rates of missing data and data volatility. The findings reveal that NCDENow outperforms 6 baselines in accuracy. Furthermore, the analysis of factors extracted by our model provides valuable insights for economic policy-making.\nOur experiments focusing only on 2 datasets might limit the applicability and generalizability of NCDENow in global economic contexts. We will broaden the range of datasets for future work and incorporate continuous modeling of the parameter estimation process within Kalman filtering and smoothing."}]}