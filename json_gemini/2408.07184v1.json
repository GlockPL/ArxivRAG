{"title": "A NEW DATASET, NOTATION SOFTWARE, AND REPRESENTATION FOR COMPUTATIONAL SCHENKERIAN ANALYSIS", "authors": ["Stephen Ni-Hahn", "Weihan Xu", "Simon Mak", "Jerry Yin", "Rico Zhu", "Cynthia Rudin"], "abstract": "Schenkerian Analysis (SchA) is a uniquely expressive\nmethod of music analysis, combining elements of melody,\nharmony, counterpoint, and form to describe the hierarchi-\ncal structure supporting a work of music. However, despite\nits powerful analytical utility and potential to improve mu-\nsic understanding and generation, SchA has rarely been\nutilized by the computer music community. This is in\nlarge part due to the paucity of available high-quality data\nin a computer-readable format. With a larger corpus of\nSchenkerian data, it may be possible to infuse machine\nlearning models with a deeper understanding of musical\nstructure, thus leading to more \"human\" results. To en-\ncourage further research in Schenkerian analysis and its\npotential benefits for music informatics and generation,\nthis paper presents three main contributions: 1) a new\nand growing dataset of SchAs, the largest in human- and\ncomputer-readable formats to date (>140 excerpts), 2) a\nnovel software for visualization and collection of SchA\ndata, and 3) a novel, flexible representation of SchA as a\nheterogeneous-edge graph data structure.", "sections": [{"title": "1. INTRODUCTION", "content": "With the continuously growing availability of \"big data,\"\nmachine learning models and algorithms have made enor-\nmous strides in many fields, such as computer vision and\nlanguage modeling. Recent approaches to music infor-\nmation retrieval (MIR) and music generation tasks are in-\ncreasingly fueled by massive datasets as well, particularly\nwhen working with raw audio. For instance, for genera-\ntion tasks, Meta's MusicGen is trained on approximately\n20,000 hours of licensed music [1], OpenAI's Jukebox\non 1.2 million songs [2], and Google's Noise2Music on\n340,000 hours of music [3]. Castellon et al. show how\nthese large generation models produce useful representa-\ntions for downstream MIR tasks [4]. Won et al. perform\nmultimodal metric learning for tag-based music retrieval\nusing approximately 158,000 tracks [5].\nDespite this promising body of work, many areas of\nmusic research do not have access to such data and are\ntherefore under-researched and underappreciated, particu-\nlarly in the realm of symbolic music or Schenkarian Anal-\nsis (SchA). By infusing an understanding of Schenke-\nrian musical structure, generative machine learning models\nmay be able to learn more artistic, theoretically-informed\nstructural features beyond simple form and metric features\nwhen making inference. Unfortunately, there is currently\nonly one sizeable publicly available dataset for SchA in\ncomputer-readable format, and it is relatively small with\n41 excerpts [6].\nSchenkerian analysis provides a powerful, flexible, and\nbroadly-used analytical framework for understanding mu-\nsical melodic-harmonic structure in a sensitive, \"human\"\nway. Rather than viewing a piece of music as a series of\nvertical chunks or horizontal melodies, SchA instead ana-\nlyzes music as an artistic \u201cunfolding\u201d of harmony through\ntime, taking into account elements of melody, harmony,\nform, and counterpoint. Schenker's theories have inspired\nnumerous performers and composers [7\u20139], helping them\nto understand their own interpretations of musical struc-\nture, which in turn may inform their own performance\nand/or composition. An understanding of Schenkerian\nstructure helps performers determine what notes deserve\nemphasis and which may be more transient. A composer\ncan learn to imitate and develop structures they have seen\nin other pieces of music they admire.\nBecause Schenkerian theory requires a significant\namount of background knowledge in music theory and\npractice and has a difficult learning curve, it is often over-\nlooked or misunderstood. For instance, SchA is often\ndeemed too narrow due to its origins in repertoire of West-\nern common practice tonal music. However, aspects of\nSchenkerian theory have shown strong analytical power in\nworks of popular, rock, jazz, and even African folk mu-\nsic, Chinese opera, and 20th century western atonal mu-\nsic [10-13]. To be clear, we see SchA as a broad and evolv-\ning field with various analytical tools that can be applied to\na wide array of musical genres, not as a static theory solely\ndesigned for common practice tonality.\nIt is our belief that research in computational SchA\ncan enable performers and composers to more easily an-\nalyze music and guide the process of understanding mu-\nsical structure. Computational SchA can also aid the ex-\npert human analyst by offering several potential solutions,"}, {"title": "1.1 Hierarchical Music Analysis", "content": "Music is often composed and understood in terms of hi-\nerarchical structures such as phrase and rhythmic struc-\nture [18, 19], form structure [20, 21], and linear/harmonic\nstructure [22, 23]. In this paper, we focus on the Schenke-\nrian model of harmonic-melodic structure. As mentioned\nearlier, SchA aims to reveal how harmonies are \"unfolded\"\nthrough linear motion on various levels of structure. Figure\n1 shows the relationship between a fugue's subject melody\nand its underlying harmony, as well as the hierarchy of\nmelodic tones.\nSchA has shown that similar harmonic and motivic fea-\ntures often exist on multiple levels of hierarchy, revealing\nmusic's \"fractal\" nature [24]. For instance, in Figure 1,\nthe foreground melody within the first full measure (D4-\nC4-Bb3) can be seen as a parallelism of the deep level\nmelody spanning the entire excerpt (C4-Bb3-A3); the two\nmelodies have a similar motivic descending third in step-\nwise motion. One can also see the first full measure lead-\ning into the second measure as a Vb\nI motion in the key\nof V, paralleling the deep level V\nI shown in the re-\nduction. While these examples are on a very small scale,\none can see more complex harmonic and motivic structures\nunfolded through entire pieces. For instance, see Example\n12 in [24] describing Schubert's Erlk\u00f6nig or Example 2\nin [25] describing The Beatles' Something.\nBecause these same music-theoretical ideas and motifs\npermeate multiple levels of structure, the use of a carefully-\ndesigned machine learning model may reveal such struc-\nture in a layered approach. With the rise of machine learn-\ning in data science, this calls into importance the need for\ncomputer-readable SchA datasets for model training."}, {"title": "1.2 Previous Work and Data for Computational\nSchenkerian Analysis", "content": "The majority of past attempts at computational SchA [26\u2013\n30] were based on heuristics and rule-based algorithms,\nand therefore did not require a true computer-readable\ndataset for SchA. To our knowledge, Marsden [31] was the\nfirst to venture towards a machine learning approach, using\na humble corpus of six Mozart analyses. He developed a\n\"goodness metric\u201d based on these six analyses to find the\nbest candidate analyses within a massive search space.\nMore recently, Kirlin designed a probabilistic model\nfor SchA that understands SchAs as maximal outerplanar\ngraphs (MOPs) and learns how likely certain notes prolong\nothers using random forests [32, 33]. He defines prolon-\ngation as \"a situation where an analyst determines that a\ngroup of notes is elaborating a group of more structurally\nfundamental notes.\" For instance, the syntax follows the\npattern X(Y)Z, where the note(s) of Y prolong the mo-\ntion from note X to note Z.\nOne potential drawback of Kirlin's model is that it al-\nways considers one musical voice as one theoretical voice.\nLooking back at Figure 1, for example, we see there is\nclearly a deep level bass motion from E3 to F3, support-\ning the upper voice, which follows the motion C4-Bb3-A3.\nThe sixteenth notes of m. 2 act to fill the gap between the\nlower and upper theoretical voices. An MOP reduction of\nthe melody would force all notes to be understood as a sin-\ngle theoretical voice, thus obscuring the underlying coun-\nterpoint of the passage. For this reason, we represent SchA\nas a more general graph data structure, described further in\nSection 3.\nFor his model, Kirlin released the first large-scale\ncomputer-readable dataset of symbolic music with cor-\nresponding expert Schenkerian analyses, Schenker41 [6].\nThis collection consists of 41 excerpts from the common\npractice period of European art music, with analyses from\nthree textbooks [23, 34-36] and an independent, anony-\nmous expert in Schenkerian analysis. Kirlin also created"}, {"title": "2. DATASET AND NOTATION SOFTWARE FOR\nSCHENKERIAN ANALYSIS", "content": "We thus introduce a new large-scale dataset of Schenke-\nrian analyses in human- and computer-readable formats.\nAs of the writing of this paper, the dataset contains 145\nanalyses from four analysts for a broad range of com-\nposers including J.S. Bach, Mendelssohn, Brahms, Bart\u00f3k,\nShostakovich, Gentle Giant, and more. The majority of\nanalyses were created by the first author (Stephen Ni-\nHahn) with consultation from one of the other analysts,\nwho wishes to remain anonymous at this time. Ni-Hahn\ncurrently has nearly a decade of experience with SchA\nincluding a graduate degree in music theory. The other\nthree analysts are veteran Schenkerian scholars with sev-\neral decades of experience in the field. The dataset is not\nstatic and aims to grow over time. Please contact Stephen\nNi-Hahn (stephen.hahn@duke.edu) for questions regard-\ning, and access to the dataset and notation software de-\nscribed in this paper.\nCurrently, the vast majority of analyses in the dataset\ndescribe the hierarchical relationships within fugue sub-\njects by Bach and Pachelbel. Fugue subjects are ideal for\npreliminary trials with machine learning models since sub-\njects are generally brief, consist of a single instrumental\nline (which may consist of multiple theoretical voices),\ngenerally have clear functional relationships, and each\nhave a definite sense of closure by their end.\nRather than writing out each prolongation explicitly, we\nproduce prolongations as a by-product when assigning a\nhierarchical depth to each note. For example, Figure 2\nshows a toy example of an analysis in which the numbers\nto the left of the note heads indicate depth. Higher depth\nindicates deeper structure. To retrieve the prolongations,\nwe simply traverse the graph at each depth level (greater\nthan 0), connecting consecutive notes that are at the same\nlevel or higher. Custom prolongations that do not occur\nwithin this system may be added in a similar fashion to\nKirlin's text format by describing the voice and index of\nthe start, middle, and end notes.\nstatistics suggest that surface level treble motions in our\ndataset are mostly stepwise and span larger intervals at\ndeeper levels of structure. Furthermore, deep bass struc-\ntures tend to hold steady and support the upper voice or\nmove along the circle of fifths by jumping 5 or 7 half steps.\nTable 3b describes various statistics regarding the notes\nand depths of our dataset. Columns labeled \"inclusive\"\nmean that notes of higher depth are included when count-\ning notes of lower depths. For instance, a depth 4 note is\ncounted in the number of depth 0 notes, while the depth 4\nnote would not count towards the number of depth 5 notes.\nThe \"literal\" label counts the note depths as they are de-\nfined. The final column describes the distribution of max\ndepths over all excerpts."}, {"title": "2.1 Data Collection Tool", "content": "To facilitate easy collection and visualization of Schenke-\nrian data, we introduce a new computer notation system for\nSchenkerian analyses (see Figure 2 for a screenshot).\nAs of the writing of this paper, our software is capable\nof notating up to four voice structures of any length. Sim-\nple commands allow the user to adjust the pitches, note\ndepths, harmonic/scale-degree label, notes considered part\nof the Ursatz, etc. Slurs and beams of the outer theoretical\nvoices are automatically generated based on the depths of\nthe notes. We are currently working on ways to render cus-\ntom markings, such as voice exchanges, unfoldings, and\nlinear progression beams.\nBehind the scenes, the Schenkerian analysis is a simple\nstandardized object in JavaScript Object Notation (JSON),\nwhich is highly generalizable, lightweight, and simple to\nparse, and is capable of describing any obscurities within\na particular analysis. Our JSON object contains metadata\nabout the analysis, key information, and information on\neach of four theoretical voices. Metadata describes the an-\nalyst, composer, title, subtitle, and any associated written\ndescription of the analysis. Furthermore, each theoretical\nvoice is encoded as a list of pitch names, depths, Ursatz in-\ndices, scale degree/Roman numerals, flagged note indices,\nsharp/flat/natural indices, and parenthetical indices. Ad-\nditionally, the JSON object stores \"cross voice\" symbols\nsuch as voice exchange lines and lines indicating related\ntones across larger spans of time.\nNote that it is straightforward to translate between Kir-\nlin's OPC text notation and our JSON notation. To trans-\nlate from text to JSON, the notes can be parsed from the\nmusicxml and placed in their appropriate voice. Then\nnote depths may be determined by the location and rela-\ntive length of their prolongation. Translating from JSON\nto text is simpler, as one can traverse each depth and re-\ntrieve the prolongations.\nThe software is constructed using languages\nJavascript/Typescript and the Vue web framework. It\nis packaged using Electron Forge. Software access can be\nrequested by emailing the first author."}, {"title": "3. SCHENKERIAN ANALYSIS AS A\nHETEROGENEOUS GRAPH DATA STRUCTURE", "content": "As mentioned in Section 1.2, Kirlin's model simplifies\nthe difficult problem of performing SchA, using a lim-\nited version of Yust's MOP representation for SchA. With\na greater amount of data, less compromising representa-\ntions may be used for modeling. The following section\ndescribes how a musical score may be represented as a\nheterogeneous-edge directed graph data structure and how\nSchA may be conceptualized as a graph clustering prob-"}, {"title": "3.1 Graph Music Representation", "content": "In what follows, we represent music as a heterogeneous\ndirected graph G, where each node describes a note, and\nvarious types of edges describe the relationships between\nnotes. Concretely, G is represented as (A, X), where\n\u0391\u2208 {0,1}h\u00d7n\u00d7n describes the set of h adjacency matri-\nces (one for each edge type) over n nodes, and X \u2208 \u211dnxd\nis the node feature matrix with d as the number of features.\nThese d features may be learned by a neural network, for\ninstance, to correspond with categorical and numerical mu-\nsical features.\nWe adapt the encoding scheme proposed by Jeong et\nal. [38] for the purpose of Schenkerian analysis. Nodes\nmay be encoded with any musical feature present in the\nscore, such as pitch class, octave, absolute duration, posi-\ntion (absolute or relative), metric strength, etc. We suggest\nthe use of five main edge types: (i) forward edges connect\ntwo consecutive notes within a voice, (ii) onset edges con-\nnect notes that begin at the same time, (iii) sustain edges\nconnect notes that are played while the source note is held,\n(iv) rest edges are like forward edges, but imply a rest oc-\ncurs between the two related notes, and (v) linear edges\nconnect each note with the next notes that occur at specific\nintervals from the source."}, {"title": "3.2 Schenkerian Analysis as Hierarchical Clustering", "content": "With this graphical representation of music, the process of\nSchenkerian analysis may then be posed as a hierarchical\ngraph clustering problem. Figure 5 presents a toy example\nof how Schenkerian analysis may be represented as a series\nof hierarchical clusters. The clustering between two subse-\nquent levels of Schenkerian analysis is expressed through\na clustering matrix, S(l) \u2208 \u211dn\u0131\u00d7n1+1, where ni is the num-\nber of nodes in clustering layer l and n\u0131+1 < m is the\nnumber of nodes after one iteration of clustering. We de-\nfine no to be the total number of notes in the music.\nNote that we can understand a clustering between any\ntwo layers as a single matrix, denoted as S(li)\u2192(lj) \u2208\nRniz xnij; i < j, where i and j are the index of the source\nand destination layers respectively. This single matrix is\nobtained by simply multiplying all sequential clustering\nmatrices. For example, in Figure 5, to retrieve the matrix\ndescribing how all five nodes of the original score are clus-\ntered into the two nodes of the final middleground layer,\nwe can multiply each clustering matrix together:\nS(0)\u2192(2) = (0) . (1) . \u03c2(2)\n=\n\u23a111110\u23a4\n\u23a300001\u23a6"}, {"title": "3.3 Converting Schenkerian Analyses from JSON to\nMatrix Notation", "content": "Schenkerian analysis JSON data (collected using our tool\ndescribed in Section 2.1) requires extra processing to be\nrepresented as hierarchical clusters. Here, we provide an\nalgorithm to convert our JSON data into a series of pro-\ngressively smaller clustering matrices (see Algorithm 1).\nEssentially, we first traverse the outer voices of the\nJSON file, clustering notes of depth 0 into the closest note\nof higher depth to the left in the same voice. If that note\ndoes not exist, it defaults to the closest note of a higher\ndepth to the right. For inner voices, if they do not de-\nscribe hierarchical depth (all 0 depth), they are clustered\n50%-50% between the nearest bass and soprano below and\nabove or left to right, in that order. If the inner voice has\nspecified depth, it is treated similarly to the outer voices.\nAll depths are then decremented and the process begins\nagain for the next clustering matrix."}, {"title": "3.4 Implications of SchA Graph Clustering", "content": "The above formulation of SchA as a graph clustering prob-\nlem facilitates more generalizable analysis. Whereas Kir-\nlin's MOP-based model focuses on a single melody as one\ntheoretical voice, a fuller graph representation allows for\ngreater flexibility via any number of theoretical voices.\nThere are, however, several drawbacks with this new ap-\nproach. Because the clustering works with the notes of the\nscore, it is unclear how to handle cases where multiple the-\noretical voices converge on a single note. This issue may\nalso be present when handling inner voices of unspecified\ndepth. In our algorithm, we suggest splitting unspecified\ninner voices 50%-50% between the outer voices, but other\napproaches may also be reasonable.\nAnother advantage that the proposed graph clustering\nrepresentation has over the MOP representation is its abil-\nity to cluster multiple notes into one in a single layer. This\nis particularly common when there are several repeated\nnotes. In a MOP, repeated notes must be given detailed hi-\nerarchy, whereas a human expert would generally think of\nsuch repetitions as structurally redundant. There are also\ninstances of prolongations that span more than one child,\nwhere having only one child would not properly reflect the\nmusic. For instance, if the melody over a C major tonic\ntriad (CEG) quickly plays out the upper tetrachord of the\nscale, G-A-B-C, then the A and B are structurally equal;\nthey both bridge the gap from G to C. On the other hand,\nallowing multiple children for every prolongation makes\nthe search space for potential solutions orders of magni-\ntude larger.\nAs the amount of labeled SchA data grows and compu-\ntational power improves, there is great potential for learn-\ning complex relationships via machine learning that may\nbe unattainable in previous analyses. Deep learning has en-\njoyed considerable success on analyzing the Bach chorale\ndataset [39-41], thus we are optimistic that SchA can also\nbe learned for broad datasets from different genres. The\nproposed dataset, notation software and graph representa-\ntion provides a promising step towards this goal."}, {"title": "4. CONCLUSION", "content": "In this paper, we introduce the largest corpus of Schenke-\nrian analyses in computer-readable format to date. This\nwas largely made possible using our novel SchA notation\nsoftware, which is natural, interpretable, and enables easy\ndata collection and visualization. Finally, we describe and\ndiscuss a novel representation for SchA as a graph clus-\ntering problem that allows representation of any possible\nSchenkerian analysis, avoiding the limitations of MOPs. It\nis our hope that the growing amount of data and ease of its\ncollection will enable broader research into SchA's appli-\ncations."}, {"title": "6. ETHICS STATEMENT", "content": "This particular work has no direct negative ethical impli-\ncations.\nWe acknowledge that Heinrich Schenker (the inventor\nof Schenkerian analysis) was racist and nationalist. His\nsociopolitical views are not condoned by authors of the\npresent work. As originally designed, his style of anal-\nysis did not extend far beyond German composers of the\ncommon practice era. As we address in Section 1, we do\nnot see Schenkerian analysis as a static analysis defined by\nSchenker; rather, we see it as a growing and developing\nset of tools that may be applied to various musical genres,\ndetached from Schenker's personal views."}]}