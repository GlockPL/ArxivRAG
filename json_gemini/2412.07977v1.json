{"title": "Thinking Fast and Laterally: Multi-Agentic Approach\nfor Reasoning about Uncertain Emerging Events", "authors": ["Stefan Dernbach", "Alejandro Michel", "Khushbu Agarwal", "Christopher Brissette", "Geetika Gupta", "Sutanay Choudhury"], "abstract": "This paper introduces lateral thinking to implement System-2 reasoning capabilities\nin Al systems, focusing on anticipatory and causal reasoning under uncertainty.\nWe present a framework for systematic generation and modeling of lateral thinking\nqueries and evaluation datasets. We introduce Streaming agentic Lateral Thinking\n(SALT), a multi-agent framework designed to process complex, low-specificity\nqueries in streaming data environments. SALT implements lateral thinking-inspired\nSystem-2 reasoning through a dynamic communication structure between special-\nized agents. Our key insight is that lateral information flow across long-distance\nagent interactions, combined with fine-grained belief management, yields richer\ninformation contexts and enhanced reasoning. Preliminary quantitative and qualita-\ntive evaluations indicate SALT's potential to outperform single-agent systems in\nhandling complex lateral reasoning tasks in a streaming environment.", "sections": [{"title": "1 Introduction", "content": "The rapid advancement of artificial intelligence (AI) has revolutionized our ability to process and\nunderstand vast amounts of text and multi-modal content. State-of-the-art AI models now demonstrate\nremarkable capabilities in answering complex hypothetical questions based on user-provided context,\nexhibiting traits reminiscent of \"System 1\" thinking as described by Kahneman (2011).\nA key component of human intelligence is the ability to reason under uncertainty and anticipate future\nevents. Many critical events in personal, financial, and security domains do not occur instantaneously\nbut are preceded by identifiable precursors. For instance, a user might be interested in monitoring risks\nto a specific industry supply chain arising from emerging geopolitical events (Fig. 1). Recognizing\nearly signals and tracking their development over time enables proactive planning and appropriate\nresponses as events unfold.\nThese cognitive abilities require sophisticated reasoning about: 1) possible event chains under\nuncertainty, 2) dynamic evaluation of event chain probabilities as new information emerges, and\n3) intelligent aging and retrieval of information from long-term to short-term memory. Such traits\nare hallmarks of \"System 2\" thinking, essential for advanced cognitive processes that distinguish\nhuman-level intelligence (Kahneman (2011)).\nLateral thinking, introduced by Edward de Bono in the late 1960s (De Bono (1970)), involves solving\nproblems through indirect, creative reasoning that may not be immediately obvious. This approach is"}, {"title": "2 Related Work", "content": "From an algorithmic perspective, a complex event can be decomposed into sub-events. See Fig.\n4 and 3 for more illustrative examples. The process of robust prediction of such complex events\ncan generally be reduced to three steps: 1) accurate identification of its sub-events when or before\nthey occur, 2) the ability to connect these sub-events as they emerge over time through a single or\nmultiple data sources, and 3) maintenance of the combined or partially materialized event information\nsuch that that memory complexity does not increase monotonically and lead to system failure. Each\nof these steps has been extensively studied across various fields in computer science, including\ndatabases, natural language processing, and symbolic or probabilistic reasoning methods. Drawing\nstrong inspiration from this prior literature, SALT introduces large-language model Achiam et al.\n(2023); Ram et al. (2023)-based implementation of each of these steps.\nStreaming query/reasoning Complex event processing has been studied extensively over the past\nthree decades, initially motivated by the advent of online financial markets and subsequently by the\ngrowth of cyber data streams and social media. A common approach among these prior solutions\nChandrasekaran et al. (2003); Choudhury et al. (2015); Della Valle et al. (2009): 1) A query\ndecomposition approach where the complex query processing task is decomposed into a data-flow\ngraph, with nodes representing operators that process a stream through SQL, graph, or different\nmodels, and 2) an event graph that guides how partial results are joined to produce a final answer.\nMaintenance of materialized partial query results and their aging over time is a key performance issue\nfor such systems Barbieri et al. (2010); Ren and Pan (2011). As discussed in the next section, SALT\nderives these decomposition graphs from user-specified queries, initiates an agent network structure\nWu et al. (2023), and pursues a dynamic inter-agent communication strategy for dataflow.\nInduction and exploitation of Knowledge Schema Scaling up such methods on unstructured, noisy\ndata streams extracted from text and other modalities introduces new challenges, including query\nevent interpretation from text Lee et al. (2015), induction of unseen events Huang and Ji (2020), and\nevolution of underlying knowledge schema Yu et al. (2021). In the current work, we do not restrict\nSALT to any specific event or knowledge (graph) schema. This choice is primarily driven by the goal\nto support multiple user queries drawn from a wide range of diverse but related domains. Recent\nwork Ghafarollahi and Buehler (2024) illustrates the benefits of grounding the beliefs generated in an\nLLM-Agent network via a knowledge graph.\nProbabilistic approach Probabilistic approaches to event detection have been studied in the past for\nstructured data streams, with \u201cpossible worlds\" representing a probabilistic assignment of various\nevents occurring in the data stream Cormode and Garofalakis (2007). Formulation of query processing\noperators in a Hidden Markov Model fashion and development of probabilistic stream algebra were\nproposed by R\u00e9 et al. (2008). In the broader context beyond event detection, belief propagation\nmethods have been the cornerstone of probabilistic graphical models Murphy et al. (2013). More\nrecently, loopy belief propagation methods have been combined with graph neural networks to\npropose neural message propagation with embeddings Satorras and Welling (2021), inspiring the\nimplementation of the message propagation and belief synthesis steps in our proposed algorithm."}, {"title": "3 Methods", "content": "Streaming agentic Lateral Thinking (SALT) is designed to process streaming information based\non a set of user-registered questions, continuously generating hypotheses about query matches by\nsynthesizing the evolving reasoning outputs produced by multiple specialized agents. The key\ncomponents and mechanisms of SALT are as follows:\n3.1 System Architecture\nThe components of the SALT architecture are defined as follows:\n\u2022 Agents: Each agent A\u00bf in the network is associated with a set of topics T\u2081 = {t1, t2, ..., tn}.\nSee Fig. 1 and the appendix for examples. In a multi-query setting, we compute an union of\nall query specific topics and use the resultant set to initilize the network."}, {"title": "\u2022 Network Topology:", "content": "The agents are connected in a graph structure G(V, E), where vertices\nV represent agents and edges E represent information flow pathways between agents. This\ngraph dynamically evolves based on the context of each batch in the stream."}, {"title": "\u2022 Belief Statements:", "content": "Agents generate and maintain a set of belief statements B\u2081 =\n{b1,b2,..., bm}. Each belief statement bj is characterized by a tuple (s,c,t,r), where\ns is the statement text, c is a confidence score, t is a timestamp, and r is a list of relevant\nreference ids. We provide an example of a belief statement in the next page."}, {"title": "PROBLEM DEFINITION", "content": "Given the aforementioned setup, SALT aims to optimize the function\nf(S, Q, A, G) \u2192 H, where S = {S1, S2, ..., St, ...} is an incoming data stream, Q = {q1, q2, ..., qm}\nis a set of user queries, A = {A1, A2, ..., An } is a set of specialized agents, and G(V, E) is a dynamic\ngraph representing inter-agent connections.\nFor each batch st, SALT updates G, generates and refines belief statements Bi(t) for each agent Ai,\nand synthesizes these to produce a set of hypotheses H(t) = {h1, h2, ..., hk}. The objective is to\nmaximize \u2211 relevance(hi, Q) and \u2211 accuracy(h\u2081) while minimizing computational complexity\nC(f) and ensuring |Bi(t)| \u2264 M for some memory bound M, Vi, t. This formulation encapsulates\nSALT's goal of continuously generating accurate, relevant hypotheses from streaming data using a\ndynamically adapting multi-agent system, subject to real-time processing and memory constraints.\nQuestion: What actions are American semiconductor companies likely to take in response to\nthese vulnerabilities and risks?\nContext: [Query context can be initialized from a batch of articles or prior belief statements.]\nResponse: American semiconductor companies are likely to take several actions, including\ndiversifying their supply chains to reduce dependency on any single region, investing in increased\ncybersecurity measures to protect against cyberattacks, and advocating for diplomatic solutions\nto reduce geopolitical tensions. They might also increase collaboration with international\npartners to bolster their supply chain resilience and seek governmental support for policies that\nencourage domestic manufacturing capabilities.\nConfidence: 0.9\nTimestamp: 127\nReferences: [article-103, article-104]\nWe now proceed to describe three key steps in SALT: initialization of the agent network, initiation of\nnew belief statements and updating pre-computed beliefs, and sharing across the network topology\nto synthesize new belief statements. The latter two steps are executed iteratively for each batch of\nincoming streaming data.\nAgent Initialization SALT is first initialized by translating the user-specified question set into a\nset of topics. In Algorithm 1, the ExtractTopics function uses a pre-trained topic classification\nmodel to identify relevant topics from the input questions. The CreateAgent function handles the\nconstruction of simple RAG agents, and the BuildGraph function creates initial connections between\nagents based on topic similarity. An example output from ExtractTopics is provided in section\nA.1."}, {"title": "Algorithm 1: InitializeNetwork", "content": "Input: Set of questions Q\nOutput: Set of agents A, Graph G\nT\u2190 ExtractTopics(Q);\nA \u2190 {};\nforeach unique topic ti in T do\nAi \u2190 CreateAgent(ti);\nA\u2190 AU{A};\\end{document}\nG\u2190 BuildGraph(A);\nreturn (A, G);\nStream Processing SALT processes streaming information in multiple steps. First, the input query\n(that can be an article, image or a batch of them) assigns a relevance score relative to each expert\nagent, and are processed only by agents with sufficiently high relevance. We use a cosine similarity"}, {"title": "Belief Propagation and Synthesis", "content": "Belief propagation and synthesis are key to SALT's emergent\nlateral thinking capabilities. Algorithm 3 shows how each agent within SALT takes in the most\nrelevant beliefs from its neighbors, and alters its own beliefs based on this information."}, {"title": "Algorithm 2: ProcessInformation", "content": "Input: Information stream I, Set of agents A, Graph G\nforeach information item i in I do\nR\u2190 AssignRelevance(i, A);\nforeach agent Aj in A where Rj > threshold do\nBnew\u2190 Aj.ProcessItem(i);\nAj.B Aj.BU Bnew;\nPropagateBeliefs(Aj, Bnew, G);\nG\u2190 UpdateTopology(G, R);"}, {"title": "Algorithm 3: PropagateBeliefs", "content": "Input: Source agent As, New beliefs Bnew, Graph G\nforeach agent Ar connected to As in G do\nR\u2190 ComputeRelevance(As, Ar, Bnew);\nif R > threshold then\nBshared\nAs.ShareBeliefs (Ar, Bnew);\nBsynthesized \u2190 A.SynthesizeBeliefs(Bshared);\nAr.B \u2190 A\u2084.BU Bsynthesized;"}, {"title": "3.2 Dynamic Network Topology", "content": "While the multi-agent system described in prior subsections has a defined graph structure, all\nconnected agents do not necessarily communicate with each other for every query. Consider a\nsystem which has two agents, one that specializes in the \"weather events\", and another specializes\nin \"agricultural commodities market\". Assume these two agents are connected via the network, and\nthe purpose of such a multi-agent system is to predict how extreme weather events may affect the\nfarmimg industry in the Pacific Northwest. Given a set of articles that pertains only to weather, it\ndoes not necessarily make sense to share those belief statements with our \"commodities\" agent.\nDue to instances like the above, SALT's network topology evolves based on the relevance and of\nagent connections as seen in Equation 1 which follows.\nW_{ij} = \\alpha \\cdot sim(T_i, T_j)\nHere Wij is the connection weight between agents A\u00bf and Aj, which handle topics T\u2081 and Tj\nrespectively. sim(Ti, Tj) is the topic similarity and \u03b1 is a coefficient which controls the relative\nimportance of this particular connection. This construction is important for avoiding simple diffusion-\nlike dynamics. If there were only a communication network structure without any further selective\nbehavior, the network of agents will eventually converge on a nearly static belief set."}, {"title": "4 Dataset", "content": "To rigorously evaluate SALT's performance, we developed a comprehensive dataset of lateral thinking\nquestions and scenarios, accompanied by novel complexity metrics. This section details our data\ngeneration process and benchmarking methodology."}, {"title": "4.1 Lateral Reasoning Complexity Metrics", "content": "To quantitatively model the workload complexity and ensure a balanced distribution, we propose\nfour novel metrics for each query-scenario pair. We'll illustrate each metric using our Taiwan Strait\ntensions scenario from Fig. 1:\n1. Lateral Measure (L): Quantifies the number of intermediate causal steps between the\ntrigger event and the outcome. Range: 1-7. Example: L = 3 for our Taiwan scenario:\nincreased military presence \u2192 disruption of global semiconductor supply chains \u2192 stock\nmarket volatility.\n2. Time Lag Complexity (T): Measures the temporal distance between the trigger event and\nits final impact, in days. Range: 0-21 (for this rapid-evolving scenario). Example: T = 14\nfor our Taiwan scenario, where significant economic impacts manifest two weeks after the\ninitial spike in tensions.\n3. Outcome Uncertainty Coefficient (U): Quantifies the unpredictability of the relationship\nbetween the trigger and its effects on a normalized scale. Range: 0-1. Example: U = 0.9\nfor our Taiwan scenario, due to the highly volatile nature of geopolitical crises and their\npotential for rapid escalation or de-escalation.\nDiversity Assurance: To ensure a wide range of lateral thinking challenges, we categorized queries\ninto 10 broad domains (e.g., geopolitics, technology, climate change) and ensured balanced represen-\ntation across these categories (Fig. 5). We also varied the complexity levels (based on our proposed\nmetrics) across the dataset. Fig. 2a illustrates the diversity of the queries via complexity metrics\ndiscussed above. For illustration of a single query and it's metrics see Fig. 6 in appendix."}, {"title": "5 Experiments", "content": "In this preliminary study, we focus on two primary research questions:\n1. RQ1: How does multi-agentic lateral reasoning compare with single agent approaches?\n2. RQ2: How does the system performance change as a function of query complexity?"}, {"title": "5.1 Experimental Setup", "content": "We explore four model variants in our experiments as listed below. As the name suggests, SingleTem-\nporalReasoningAgent is an agent that processes the batched data stream and executes as prompt on\na rolling window of historical articles. It runs each of the user-specified queries separately with no\ninformation exchange between multiple query execution. See section B for implementation details.\n\u2022 Temporal-Claude: SingleTemporalReasoningAgent with Claude-3.5-Sonnet\n\u2022 Temporal-GPT40: SingleTemporalReasoningAgent with GPT-40\n\u2022 SALT-Claude: SALT with Claude-3.5-Sonnet"}, {"title": "\u2022 SALT-GPT40:", "content": "SALT with GPT-40\nFor brevity, we refer to SingleTemporalReasoningAgent with Claude (or GPT-40) as Temporal-\nClaude (or Temporal-GPT4o) in subsequent discussions. We use our custom dataset of lateral\nthinking queries, as described in Section 3. For this preliminary study, we selected a subset of 30\nqueries from the full dataset to evaluate our models. This relatively small set was chosen to ensure\nwe can manually verify the quality of generated articles and reasoning output from each target model."}, {"title": "5.2 Evaluation Metrics", "content": "We propose two metrics to capture key aspects of lateral thinking:\nRetrieval Performance RP measures the system's ability to identify relevant information from\ndiverse sources. A high RP indicates effective navigation through a large corpus, pinpointing\npertinent articles even when connections are not immediately obvious\u2014a crucial requirement for\nlateral thinking.\nRP = Number of relevant article IDs cited / Total number of relevant articles * 100%\nHypothesis Quality HQ assesses the system's capacity to synthesize information into meaningful\nhypotheses. It evaluates the ability to connect disparate pieces of information, forming information\nrich and specific conclusions.\nHQ = Number of correctly identified sub-events / Total number of sub-events * 100%"}, {"title": "5.3 Results", "content": "Lateral context augmentation drives outperformance Results comparing SALT and SingleTem-\nporalAgents are provided in Table 1. We observe that our agent network-based system achieves\nsignificantly better performance across both hypothesis generation and citation retrieval compared to\nthe single agent based systems. SALT-Claude-Sonnet-3.5 outperforms its corresponding baseline\nimplementation by 39.77% and 29% in citation retrieval and hypothesis quality. Salt-GPT-40 out-\nperforms Temporal-GPT-4o by 60% and 87.63%. Overall, Claude-Sonnet-3.5 based agents perform\nbetter than GPT-40 in retaining facts and generating overall hypotheses.\nKey insight While our study is preliminary and larger-scale experiments are needed to conclusively\nestablish the superiority of lateral thinking, a consistent pattern emerges: SALT's reasoning is driven\nby a significantly larger and diverse context size as measured by the number of belief statements\nand supporting article count. This suggests that the key to it's success lies in its ability to perform\nlateral thinking over related contexts, sometimes multiple hops away in the agent network. The\nsystem's capacity to ensure that relevant information from distant articles is communicated to the\nappropriate agents appears to be crucial. However, further research is necessary to fully understand the\ninformation flow within the agent network and to validate this hypothesis. This insight, if confirmed,\ncould represent a significant advancement in an AI system's ability to reason across diverse and\nseemingly unrelated information sources arriving at different points of time.\nQualitative Analysis Answers generated by SALT are more a) information-rich and b) characterized\nby higher specificity. Below we present a brief case study analyzing results to the query: \"Monitor if\nany new economic activity develops as a result of changing climate patterns\".\n1. Comprehensiveness of assessment: SALT-GPT-40 and SALT-Claude provide more com-\nprehensive assessments covering a broader range of economic activities. For example:\n\u2022 SALT-GPT-40 mentions \"innovations in maritime technologies, including advanced\nice-breaking capabilities and improved navigation systems\" and \"growing economic\nactivity in climate-adaptive technologies across various sectors.\"\n\u2022 SALT-Claude discusses \"innovation in sustainable technologies, including renewable\nenergy, water management systems, and climate-resilient agriculture.\""}, {"title": "2. Depth of analysis on long-term implications:", "content": "SALT versions offer deeper insights into\nlong-term economic consequences:\n\u2022 SALT-GPT-40 states: \"These developments are reshaping global trade patterns and\npotentially shifting economic power towards nations with strong Arctic presences or\nadvanced maritime technologies.\"\n\u2022 SALT-Claude notes: \"Overall, while climate change is creating new economic oppor-\ntunities, it is also fundamentally altering global power dynamics, security concerns,\nand governance structures, which will have long-term implications for international\ntrade and economic partnerships.\"\nThe Temporal-GPT-40 and Temporal-Claude outputs do not address these broader implica-\ntions."}, {"title": "3. Balanced perspective on opportunities and challenges:", "content": "SALT outputs provide a more\nnuanced view of both opportunities and risks:\n\u2022 SALT-GPT-40 mentions: \"The exploitation of Arctic resources raises environmental\nconcerns and potential conflicts over territorial claims. Increased maritime activity in\nthe Arctic also brings risks of oil spills, noise pollution affecting marine life, and the\nintroduction of invasive species.\"\n\u2022 SALT-Claude states: \"These new economic activities come with significant challenges\nand potential conflicts. The competition for resources in the Arctic is intensifying,\nleading to increased militarization and the need for new governance structures to\nmanage conflicting claims.\"\nIn contrast, Temporal-GPT-4o and Temporal-Claude primarily focus on the opportunities\nwithout thoroughly addressing associated challenges."}, {"title": "6 Conclusions", "content": "This paper advances AI reasoning by introducing lateral thinking for agents to address low-specificity\nanticipatory and causal questions in streaming setting. We present a framework for generating lateral\nthinking queries and datasets, and introduce SALT, a multi-agent system implementing System-\n2 reasoning. Preliminary studies reveal SALT's superior performance over single-agent systems,\nsuggesting a novel phenomenon: lateral information flow across long-distance agent interactions,\ncombined with fine-grained belief management, yields richer information contexts and enhanced\nreasoning. Rigorous testing of this hypothesis on large-scale datasets will be subject of future work."}, {"title": "A Details of SALT Architecture", "content": "A.1 Agent network initialization\nUser: I want to know as soon as a geopolitical event between China and Taiwan that will affect\nthe supply chain for American semiconductor companies happens.\nPrompt: Given the following query construct a numbered list of 4 areas of research that should\nbe focussed on to answer the query.\nMaster Agent: To address the query effectively", "on": "n1. **Geopolitical Tensions and Policies**:\n\u2022 Monitoring diplomatic relations and potential conflicts between China and Taiwan.\n\u2022 Analysis of government policies, sanctions, and trade agreements affecting both na-"}]}