{"title": "Conditional Max-Sum for\nAsynchronous Multiagent Decision Making", "authors": ["Dimitrios Troullinos", "Ioannis Papamichail", "Georgios Chalkiadakis", "Markos Papageorgiou"], "abstract": "In this paper we present a novel approach for multiagent decision\nmaking in dynamic environments based on Factor Graphs and the\nMax-Sum algorithm, considering asynchronous variable reassign-\nments and distributed message-passing among agents. Motivated\nby the challenging domain of lane-free traffic where automated\nvehicles can communicate and coordinate as agents, we propose a\nmore realistic communication framework for Factor Graph formu-\nlations that satisfies the above-mentioned restrictions, along with\nConditional Max-Sum: an extension of Max-Sum with a revised\nmessage-passing process that is better suited for asynchronous\nsettings. The overall application in lane-free traffic can be viewed\nas a hybrid system where the Factor Graph formulation undertakes\nthe strategic decision making of vehicles, that of desired lateral\nalignment in a coordinated manner; and acts on top of a rule-based\nmethod we devise that provides a structured representation of the\nlane-free environment for the factors, while also handling the un-\nderlying control of vehicles regarding core operations and safety.\nOur experimental evaluation showcases the capabilities of the pro-\nposed framework in problems with intense coordination needs\nwhen compared to a domain-specific baseline without communi-\ncation, and an increased adeptness of Conditional Max-Sum with\nrespect to the standard algorithm.", "sections": [{"title": "1 INTRODUCTION", "content": "Distributed Constraint Optimization Problems (DCOPs) [3] effec-\ntively tackle multiagent decision making in large problems that can\nbe formulated with a highly decomposable structure. DCOPs have\nbeen widely studied with several extensions that address broader\ndomains such as dynamic and/or sequential environments. Algo-\nrithmic solutions for Dynamic DCOPs usually expect that agents\nupdate their existing configuration concurrently in an online dy-\nnamic environment, or that multiple message-passing iterations\ncan be taken before agents update their current configuration as\na group. These limitations can hinder the actual use of DCOPs in\nmany multiagent environments requiring more flexible frameworks\nthat incorporate communication or timing-related restrictions. Ex-\nisting research either tackles the asynchrony of the agents' decision\nmaking problem without taking into account large-scale and open\ndistributed environments, by resorting to pseudo-tree graph struc-\ntures that are more immutable than Factor Graphs [19]; or requires\nthe synchronization of agents' decisions at every time-step [3].\nTo this end, we propose a distributed communication framework\nfor Factor Graphs (FGs) that relies on information broadcasting\nfor communication among agents, in a way that treats agents as\nindependent entities and not as a unified system.\nA visual illustration of the framework juxtaposed with the corre-\nsponding conventional FG (contains variables x\u2081 that agents control,\nand decomposed factors Fj of local utilities depending on variables"}, {"title": "2 BACKGROUND AND RELATED WORK", "content": "xi \u2208 x that maximize the sum of the factors, i.e., solve the optimiza-\ntion problem: x* = arg maxx \u2211j Fj(sj), where sj \u2286 x. Note that\nfactors Fi connect different variables, and may potentially asso-\nciate more than two (e.g., F\u2081). The corresponding vector s; contains\nall variables xi connected to factor Fj. For instance, in Fig. 1(a):\ns1 = [xk, xm, xn]T. In general, the factors can depend on any subset\nsjx of the control variables.\nMax-Sum [2] is an iterative, inference-based algorithm that\nprovides an approximate solution for this optimization problem\nthrough a message-passing operation involving two types of mes-\nsages. The first type of messages concerns values sent from variable\ni to factor j: qi\u2192j(xi) = cij + \u2211k\u2208M\u2081\\jr\u00b9k\u2192i(xi), where Mi is the\nset of factor indices that variable i is connected to. For instance,\nMk = {j, l} in Fig. 1(a). As such, qi\u2192j (xi) contains an estimate for\neach value of xi to be sent to factor j. Essentially, qi\u2192j (xi) performs\npropagation of evaluations from all the other connected factors\nM\u00a1 \\j, and can be viewed as the agent's current \"intents\" regarding\ntheir final configuration of variable xi. Then, cij is a normaliza-\ntion constant that satisfies \u03a3xi qi\u2192j(xi) = 0. This normalization is\nimportant in cyclic graphs since we need to bound the messages'\nvalues. While convergence in cyclic FGs is not guaranteed, the use\nof cij has proven to be quite effective in many studies [2, 11, 15].\nThe second type of messages involves evaluations that a variable\ni receives from a connected factor j: rj\u2192i(xi) = maxsj\\xi [Fj(sj) +\n\u2211k\u2208Nj\\iqk\u2192j(xk)], where Nj is the set containing the variable\nindices connected to factor j, and the maximization process involves\nall the variables sj connected to factor Fj without xi. For instance,\nin Fig. 1(a), N\u2081 = {k, m, n}, meaning that variables xk, Xm, Xn are\nconnected to factor F\u2081. These messages calculate for each possible\nvalue x\u012f an estimate for the outcome considering both the associated\nfactor, and all other messages sent to it. Since the qk\u2192j values\nprovide these connected N\u012b variables evaluation for their respective\ndecisions, agent i maximizes over all these variables, in order to have\nan evaluation that incorporates both the immediate factor's value\nand other agents' influence. In every new iteration, the previous\nevaluations of the messages are utilized. This operation is performed\nuntil some stopping criterion (e.g., time, iterations number), or if all\nmessage values converge (within a threshold). Finally, each agent\ncomputes the optimal value as: x = arg maxx\u2081 \u2211j\u2208M\u2081 rj\u2192i (xi), i.e.,\nthe x\u2081 that maximizes the sum of all the received messages. Without\nloss of generality, we consider that each agent controls one variable,\nand refer (same indexing) to agents and variables interchangeably."}, {"title": "2.1 Factor Graphs and the Max-Sum Algorithm", "content": "Factor Graphs (FGs) [12] originate from probabilistic graphical mod-\nels but are also well integrated within distributed AI as a common\ntool for DCOP formulation [2, 3]. Given an FG structure as the one\nin Fig. 1(a), we seek to obtain all control variable configurations"}, {"title": "2.2 Related Work", "content": "Dynamic DCOPs (D-DCOPs) [3] extend conventional DCOPs to\ndynamic environments. Consequently, the notion of time is intro-\nduced to the problem. In an FG problem formulation, we consider a\ndynamic graph structure with the possibility to change in time. At\na time-step t, the FG contains a set of factors M, with Fj(sj) \u2208 \u039c,\nand xi \u2208 N, where N is the set of variables. There are two types\nof changes for every update from t to t + 1: (a) existing factors\nFj(sj) can now contain different values; or (b) new variables x\u012f and\nfactors Fj (sj) can be introduced, and existing ones can be removed.\nCommonly, D-DCOPs do not model how the factor evolves over\ntime and algorithmic extensions [3] re-solve every new static in-\nstance of the problem at time t, effectively incorporating domain"}, {"title": "3 ASYNCHRONOUS DECISION MAKING WITH\nTHE MAX-SUM ALGORITHM", "content": "knowledge to improve performance [21]. Prior work in lane-free\nenvironments [25] (and [23]) also solves every new instance of the\nproblem by relying on the previous solution as a starting point, with\nthe assumption that changes in the graph modelling vehicles' inter-\nactions will not be substantially different. In contrast, [16] explicitly\nmodel the FG's evolution as Markovian D-DCOPs, thereby they\ntackle the sequentiality of the problem and incorporate methods\nfrom RL. Moreover, [1] addresses D-DCOPs from the perspective of\nDecMDPs, which can be viewed as a similar problem, and perform\nplanning based on Monte-Carlo tree search with Max-Sum.\nFinally, we note that papers applying Max-Sum on Mobile Sensor\nTeams (MSTs), dealing with exploration issues [27] or collision\navoidance [18], exhibit conceptual similarities to our domain (which\nis natural since MSTs involve a dynamic environment of moving\nagents). Regardless, they do not deal with asynchrony in the agents'\nvariable updates as we do in this paper.\nWe now present a novel extension of Max-Sum for problems that\ncan be formulated as D-DCOPs with specific constraints that ren-\nder them more realistic in a large-scale distributed coordination\nenvironment. The first restriction we impose is we cannot have\nmultiple iterations of the algorithm, since in an open distributed\nenvironment we cannot easily assume that agents will be able to\ncommunicate multiple times before updating their decision and\niteratively propagate messages. We rather rely on a more realistic\nnotion of information broadcasting from the perspective of each\nagent. This is visualized in Fig. 1(b), where each agent broadcasts\nall q messages to be sent to connected factors j that involve other\nagents as well, with additional information (indicated with blue\ncolor) relevant to the Max-Sum extension we later establish. At\ntime-step t, agents first observe the broadcasted q messages of\nnearby agents, then calculate their r messages followed by the\nupdated q messages to be broadcasted. As such, at time-step t, rt\nmessages now rely on the previously broadcasted messages qt\u22121.\nOtherwise, we would need to either establish some form of order\namong agents' message updates (not realistic and potentially restric-\ntive in large environments), or examine the effect of asynchronous\nmessage-passing (essentially a different problem) in this setting, as\nput forward and studied in [30]. Therefore, each agent i at time-step\nt can update its received messages as:\nrji(xi) = max [Fj(sj) + \u03a3qk\u2192j(xk)] (1)\nsj\\Xi\nk\u2208Nji\nand then its qt messages to be broadcasted to other agents:\nqi\u2192j (xi) = cij + \u03a3rj\u2192i (xi) (2)\nkeMi\\j\nNaturally, this choice comes at the cost that a single iteration of\nthe algorithm will probably result in a significantly subpar solution\nquality. However, in realistic dynamic environments such as the\nlane-free traffic domain, it is not reasonable for agents to update"}, {"title": "3.1 Conditional Max-Sum Algorithm", "content": "their configuration at every time-step, since they would not be\nable to commit to their decision and probably result in oscillatory\nbehaviour. In [20], authors are motivated by the same assumption\nand establish the notion of commitment deadlines for agents re-\ngarding their update. Likewise, before introducing asynchronous\noperation, we can provisionally define a common time-period T for\nagents' updates, where all agents can adjust their configuration x\nbased on the received messages r. More specifically, agents update\nx = arg maxxi \u2211j\u2208N; r\u2192\u00a1(xi) periodically, while in intermediate\nsteps they can only communicate and perform one iteration of the\nalgorithm, i.e., update with Equations 1 & 2, and maintain the last\nupdate of x. This effectively allows us to: (1) perform multiple\niterations before agents update their decision but now in a dis-\ntributed setting, and (2) avoid indecisive behaviour of agents due\nto the dynamic nature of the problem. Certainly, this assumes (as\nin related work) that the FG does not change abruptly within this\ntime-period T required for the update. Otherwise, the previously\nexchanged messages have diminishing value.\nEven with this common time-period T, there is a need for a\nsynchronized clock among agents, imposing to them whenever they\nshould update their decisions. We additionally lift this requirement,\nand allow for asynchronous variable updates xi for each agent. This\nintroduces a sense of autonomy as well since agents are not bound\nto make decisions alongside others, and can react in a timely manner\ndepending on their local observations. As a result, at every time-\nstep t, a subset of agents update their existing configuration. In\nthis more flexible framework, one could simply apply the standard\nMax-Sum algorithm with the use of message passing operations in\nEquations 1 & 2, but with the distinction that each agent updates\nx at a potentially different time-step from others. However, the\ncalculation of incoming r\u00b9 messages in Max-Sum (Eq. 1) entails a\ncritical assumption: the local maximization from the perspective\nof an agent i is performed based the propagated q messages that\nreflect the final configuration, i.e., agent i updating its variable at\ntime t assumes that all other agents connected to it through a factor\nwill do so concurrently."}, {"title": "4 MULTIAGENT COORDINATION IN\nLANE-FREE TRAFFIC", "content": "In order to efficiently tackle asynchronous decision making in this\nnew context, we need to redefine the message passing equation for\nrt messages. For this, we request supplementary information from\nagents, namely a time-estimate ti,e from each agent i regarding its\nnext update and its last variable configuration x (cf Fig. 1(b)). As\nmentioned, the issue lies with the local maximization of connected\nvariables in rt messages, due to the underlying assumption of an\none-time variable configuration for all agents. We extend this notion\nby performing a conditional maximization depending on the relative\ntime-estimates between agent's ti,e and the other agents' estimates:\ntj,e = {tk,e : Vk \u2208 Nj \\ i}, and their existing configuration x =\n{x: Vk \u2208 Nj \\ i}. In this manner, instead of maximizing over\nall connected variables sj \\ xi on factor Fj, we examine for each\nvariable Vxk \u2208 {sj \\ xi} whether to: (a) include variable xk in the\nmaximization operation; or instead (b) use directly the existing\nvalue x based on the broadcasted information.\nThis choice depends on the relative time-estimate of agent i with\nrespect to its connected agents (through a factor j). We first consider"}, {"title": "4.1 Problem Description", "content": "In this section, we present the FG formulation based on lateral\nregions that coordinates the vehicles' lateral alignment in lane-free\ntraffic.\nIn the examined lane-free traffic environment, each vehicle popu-\nlating the road operates on a 2-dimensional space consisting of a\nlongitudinal (front/back) and lateral (left/right) axis. The investi-\ngated scenarios consist of a lane-free highway that is either static\n(contains a specific set of vehicles) or an open environment (new\nvehicles constantly enter the highway). Each vehicle possesses a\nseparate desired speed v objective that pursues, consequently result-\ning in many instances where vehicles wish to overtake while being\nsurrounded by nearby traffic in a lane-free setting. The underlying\npolicy of the vehicles is a rule-based method that automatically ad-\njusts their acceleration in response to surrounding traffic. As such,\nthe vehicles have by default a \"reactive\" behaviour that follows\nsafety rules in order to avoid collisions, and do not take strategic\ninitiatives, i.e., perform overtake maneuvers or give priority to\nother vehicles. This type of behaviour is handled by our D-DCOP\nformulation of the problem, where the vehicles need to coordinate\ntheir lateral placement yi in order to perform cooperative maneu-\nvers that benefit their own and/or nearby traffic's objectives. To\nthis end, each vehicle targets a desired lateral placement y through\nour approach, and they are modelled as agents in a FG structure\nthat evolves over time due to the dynamic nature of the problem;\nfollowing the distributed communication framework we propose\nwith asynchronous updates of their desired lateral placements for\nresponding timely to their respective local situation."}, {"title": "4.2 Lane-Free Traffic Environments with\nDynamic Lateral Regions", "content": "The primary tool that enables coordination in a manner suitable\nfor strategic coordination in lane-free traffic is that of dynamic\nlateral regions. With this the vehicles can interpret the observed\nand/or communicated information from nearby traffic in a way that\nprovides a real-time structured representation of the environment,\nand allows them to decide upon their low-level control.\nFrom the perspective of an ego vehicle i, we distinguish between\nupstream (vehicles on the back of i) and downstream traffic (vehi-\ncles on the front of i). Given an observational distance, all vehicles\nare monitored and the lateral space is accordingly partitioned into"}, {"title": "4.3 Factor Graphs in Lane-Free Traffic", "content": "We can form a FG of connected vehicles as visualized in Fig. 2,\nassuming the necessary communication capabilities for vehicle\nwithin close proximity. The control variable xi for each vehicle i\nis the lateral deviation dyi which determines the updated desired\nlateral alignment y of the vehicle. For all calculations relevant\nto the FG formulation, we examine candidate lateral positions y\naccording to a value for xi accordingly: y = yi + xi. Each vehicle\ncan be connected to two types of factors in our formulation. First,\nthe single factor involves only one vehicle and accounts for moti-\nvating the vehicle to remain within the road boundaries. Its form\nis: Fs (xi) = -BcoutOfBoundsi (xi), where the outOfBoundsi (xi)\nelement yields a negative utility according to the coefficient Bc\nif the examined configuration x\u012f results in a lateral placement y\nthat would exceed the road boundaries. More importantly, the FG\nformulation contains a second type of a pairwise factor Fp (xi, xj)\nthat connects two vehicles i and j, with j preceding i. Its presence\nserves to motivate both i and j at moving laterally according to i's\ndesire to overtake through regret minimization. Notably, since the"}, {"title": "4.4 Asynchronous Decision Updates in\nLane-Free Traffic", "content": "factor affects both i and j's decision due to their involvement, they\ncan accordingly control their lateral behaviour in a coordinated\nmanner. This is accomplished by the following formulation:\nFp(xi, xj) = regret(xi, xj) + comfort(xi, xj) (7)\nwhere the first term is the calculated regret from the perspective of\nthe receding agent i, and has the following form:\nregret(xi, xj) = \u2212Rc \u00b7 (ai,free \u2013 ai,j)\u00b2 \u00b7 overlapij(xi, xj) (8)\nand the value ai free is the calculated acceleration of i when lo-\ncated in lateral regions without a leader, meaning that this value\nonly accounts for the desired speed objective of the agent and that\nai,free \u2265 ai,j. As such, the difference (ai,free \u2013 ai,j) expresses the\nregret of agent i for having j in front of it, using a positive co-\nefficient Rc and a negative sign to comply with the algorithm's\nmaximization criterion. Note that whenever this type of factor\nconnects two vehicles, this regret value is assigned to it only for\nconfigurations of xi, xj that would result in the agents having their\nlateral alignments \"overlap\" at any point during lateral deviation\nfrom the current placement yi, yj towards the examined one y';, y';.\nMoreover, the FG relies on some additional components in order\nto establish the notion of coordination, see related section on this\ndocument.\nWith the FG formulation above, we have the necessary components\nto model the lane-free traffic environment as a DCOP. However, ad-\nditional elements need to be prescribed for asynchronous decision-\nmaking as discussed in Sec. 3.1. Agents update the values of all\nconnected factors according to their real-time observation of nearby\nvehicles and the information from the constructed lateral regions,\nbut they also take into account the broadcasted assignments x of\nall factors j connecting them to other vehicles. The information\nfor the lateral placement of vehicles is informed by these assign-\nments so that the FG formulation integrates these in the lateral\npositioning yi, yj for the calculation of the factor's values. This is an\nimportant nuance of the formulation, as the vehicles (through the"}, {"title": "5 EXPERIMENTAL EVALUATION", "content": "i observing j as leader for the examined configuration y', yj.\nDCOP formulation) can proactively \"argue\" regarding their lateral\nalignment decisions and not take into account intermediate states\nwhile they maneuver from one lateral alignment to the next.\nAt each time-step, all agents independently decide (line 5 in\nAlg. 1) whether to update their variable assignment x based on in-\ndependent time-windows [Tmin, Tmax]. Once Tmin time has passed\nsince the agent's last reassignment, only then i examines whether it\nhas reached the selected lateral positioning y within a small error\nye. If so, then it updates x based on the received messages rt. This\nupdate can also take place without the aforementioned condition\nbeing satisfied if the time-window is exhausted, i.e., Tmax time has\npassed since the agent's previous update. Finally, each agent needs\nto provide a time-estimate for the next update in order to comply\nwith the proposed communication scheme (line 6 in Alg. 1). This is\ndone in a very straightforward manner by computing the remaining\ntime-steps to reach the selected lateral positioning y. The lateral\nmaneuver of the vehicle solely depends on the use of the movement\ndynamics and is deterministic. Thereby, the future lateral trajectory\nof the vehicle can be fully predicted (see Appendix C.3 for more\ndetails). Of course, the intended lateral goal of the agent can be\ncompromised in practice by other agents blocking its path towards\nit, due to safety rules for lateral alignment, as mentioned in Sec. 4.2.\nConsequently, the shared time-estimates cannot be fully accurate\nin a realistic environment under uncertainty, hence the reason they\nare updated at every time-step.\nWe empirically evaluate our approach by comparing 3 different\nMax-Sum variants in the proposed distributed framework with\nasynchronous variable reassignments, along with a baseline heuris-\ntic method without communication among agents. Specifically, we\nhave: (a) Max-Sum: the standard Max-Sum algorithm; (b) No-Max-Sum\u2074: we rely solely on the broadcasted assignments from\nneighbors instead of maximizing in Eq. 4, i.e., se is empty; (c)\nCond-Max-Sum: Conditional Max-Sum, as in Sec. 3; and finally (d)\nMOBIL (baseline): Rule-based method based on the popular lane-\nchange model MOBIL [9] that does not employ any communication\namong agents (more information in Appendix D.1).\nEvaluation metrics for experiments contain: (a) the average\nspeed of all vehicles throughout the simulation: vavg x avg in meters per\nsecond (m/s). 5 This metric indicates the efficiency of the vehicles'\nmovement, with higher values suggesting more efficient behaviour,\ngiven that the desired speed goals of vehicles are not lower on aver-\nage than the speed measurements. Additionally, an integral metric\nwe include is: (b) the average speed deviation of all vehicles vavg\ndev in meters per second m/s. This metric effectively measures the\nvehicles' deviation | \u2013 | of their current speed from their\ndesired speed v objective, and consequently how close vehicles are\ntowards their respective desired speed goal. Moreover, we measure:\n(c) the average jerk of vehicles in m/s\u00b3 to be minimized, which is\nthe derivative of acceleration m/s\u00b2, and a commonly used metric for\ndiscomfort of passengers [7]. As we focus on the way vehicles move\nlaterally in the lane-free environment, we show the jerk regard-\ning lateral maneuvers j. Finally, a system-level measurement"}, {"title": "5.1 Lane-Free Coordination Problem", "content": "y avg.\ndev\nTherefore, we investigate in larger environments in order to show\n the impact of the introduced safety metrics in the presented D-DCOP\nscheme.\nIn this new configuration, we focus on whether the proposed approach is valid\nfor larger scenarios, since these metrics can affect the vehicles' performance.\nThe first type of environment we examine in order to gain empiri-\ncal insights for our approach is the small experiment with initial\nplacements for vehicles as visualized in Fig. 5. There, we establish\nthree rows where the desired speeds are set so that vehicles on the\nback need to overtake the vehicles on the front. Each vehicle has a\ndifferent time-estimate for its own next update, meaning that while\nthe vehicles communicate, each one will update its lateral align-\nment at a different time-step. The decision regarding the timing of\nsubsequent lateral alignment updates is affected by the proximity\nof the new selection, resulting again in asynchronous updates due\nto the independency of agents. More details on initial conditions\nand parameter tunings can be found in Appendix D.2.\nResults are presented in Table 1, where we compare all methods\nusing the above-mentioned metrics. A more detailed capture of the\nperformance can be found in the longitudinal speed trajectories of\nFig. 6, where we focus on agent veh-1 located at the beginning of\nthe road, showing how fast and to what extend its desired speed\ngoal is accomplished throughout the simulation time. Since veh-1"}, {"title": "5.2 Open and Large Lane-Free Traffic Settings", "content": "4Reflects simpler local search-based methods, see Appendix A.\nNote that for the examined range [25, 35]m/s = [90, 126]km/h.\n5Videos demonstrating the performance of all methods can be found at: https://bit.ly/\n4k6FXx1.\n is included for Sec. 5.2: (d) the total-time-spent (TTS) hours (h),\na standard metric in transportation that depicts the accumulated\ntravel time summed over all vehicles in simulation.\nWhile experiments in a small environment with a specific set of\nagents allow us to present a detailed depiction of the efficiency by\neven looking into vehicles' trajectories, we further investigate the\nuse of our distributed framework and Cond-Max-Sum in a much"}, {"title": "6\nCONCLUSIONS AND FUTURE WORK", "content": "more demanding large-scale open highway environment. There,\nnew vehicles constantly enter a 2km highway's entry point (and\nare introduced to D-DCOP) while old ones reach the road exit, with\ntraffic flow rates 10000, 15000veh/h that result in hundreds of ve-\nhicles populating the road at any given time, specifically around\n200, 300veh respectively. There is an induced uncertainty in this\ntype of environment due to the constant emergence of new vehicles\n(new variables) and frequent changes regarding vehicles' connec-\ntions (creation/removal of pairwise factors) due to overtakes. Each\nvehicle samples a desired speed from a uniform distribution within\n[25, 35]m/s upon entrance. The environment settings for the open\nhighway can be found in Appendix D.2 and D.4. Then, in D.5 we\ninclude measurements on the size of the FG under such settings\nand a discussion on the communication overhead per agent.\nThe inclusion of a baseline method (MOBIL) without online com-\nmunication among vehicles serves to further motivate the proposed\nframework. As evident in Table 1, all metrics exhibit worse values\nw.r.t. to any Max-Sum variant, with the exception of jerk (that is\nclose to the standard algorithm for 15000veh/h), indicating redun-\ndant lateral maneuvers that are not necessarily followed by the\nintended overtakes. This shows the effect of the communication\namong agents when juxtaposed to only observing nearby traffic.\nRegarding the three Max-Sum variants in Table 1, results on the\naverage metrics are consistent with our findings in Sec. 5.1, albeit\nwith a lower margin on the differences between them. This follows\nfrom the frequent graph changes in this open environment, which\npose an additional challenge compared to the setup in Sec. 5.1 as new\npairwise factors can occur unexpectedly and render the calculated\nmessages less compatible under these situations. Yet, Cond-Max-\nSum still consistently outperforms the other variants. While the\nbenefit in vag is modest on average, the TTS metric showcases bet-\nter system level performance. Then, No-Max-Sum-the variant that\nis akin to simpler local-search methods (cf. Appendix A)-always\ndemonstrates inferior speed, but as a consequence, exhibits lower\ndiscomfort levels since agents do not explore mutually beneficial\ndecisions to the same extent. This is also less aligned with the main\nfocus of the factors towards motivating agents to overtake in a\ncoordinated manner whenever desired.\nIn order to fully capture the efficiency in the large-scale environ-\nment and underline this \"marginal, but consistent\" performance\nincrease for the revised message update of Cond-Max-Sum, we"}, {"title": "A ANALYSIS OF MESSAGE PROPAGATION IN\nCONDITIONAL MAX-SUM", "content": "In this work"}, {}, {"title": "B LANE-FREE TRAFFIC ENVIRONMENTS\nWITH DYNAMIC LATERAL REGIONS", "content": "In a conventional DCOP scenario, a message from i to j to time t is q. Then the values of y = , where f is the value function to maximise and y\nt is now the time when the update happened. If we can have a value from to f\n y\nt =y where is the value function to maximise (9)\n Y \nt+1\nIn this section we present in detail our formulation of lane-free\nenvironments that enables lane-free lateral operations through a\nDynamic DCOP. The primary tool that we design to enable coordi-\nnation in a manner suitable for strategic coordination in lane-free\ntraffic is that of dynamic lateral regions. With this, the vehicles\ncan interpret the observed and/or communicated information from\nnearby traffic in a way that provides a real-time structured represen-\ntation of the environment, and decide upon low-level operations\nregarding their acceleration and account for safety."}, {"title": "B.1 Formation of Lateral Regions", "content": "This process initiates from the perspective of a single ego vehicle i.\nFirst, we distinguish between upstream (vehicles on the back of i)\nand downstream traffic (vehicles on the front of i). For downstream\ntraffic, we scan all vehicles according to a specified observation dis-\ntance obsx longitudinally (in front), and construct the lateral region\nthat each foreign vehicle introduces as illustrated in Fig. 9. The par-\ntitioning of the regions is done based on the monitored information\nfrom each observed vehicle k, namely its: lateral placement on the\nroad yk, lateral speed vy,k and physical dimensions on the lateral\naxis, i.e., its width wk. This is visually shown in Fig. 10, where from"}, {"title": "B.2 Regulation of Lateral Alignment in\nLane-Free Traffic", "content": "the perspective of the white ego vehicle (i), a lateral region due\nto k is formed according to this information, and accounting for\nsafety related gaps, a distance Ysafe, and a time-gap Ty that is only\nadded when the vehicle has a lateral speed towards this direction:\nvvk,right = -vy,k \u00b7 (vy,k < 0), and : vvk,left = vy,k\u00b7 (vy,k > 0).7 The\nconstructed regions correspond to where the center point of the\nego vehicle can be positioned, hence the reason we see the utmost\nleft and right regions not reaching the road's physical boundaries\nas they take into account the ego's width.\nAt any time, the ego vehicle is located at a specific lateral region,\nin which we consider that its longitudinal behaviour is being in-\nfluenced by the front vehicle occupying this region. As such, the\nlongitudinal control (gas/brake) of the vehicle can be decided ac-\ncording to a car-following method as done typically in lane-based\nenvironments, with the vehicle in front as the leader to follow.\nFor this task, we employ the Enhanced Intelligent Driver Model\n(EIDM) [10], which is an extension of one of the most popular car-\nfollowing methods, that calculates the acceleration of the vehicle i\non the longitudinal axis (corresponding to a gas/brake response),\ntaking into account its desired speed of while respecting a desired\ntime-gap value Tx with the vehicle in front to avoid critical situa-\ntions. In this manner, given two vehicles (i, j) with j being in front\nof i, we can calculate the acceleration ai,j of i when j is in front\naccording to EIDM.\nLikewise, we can calculate this acceleration for each lateral re-\ngion, meaning we can have an estimate of the acceleration of ego"}, {"title": "B.3 Control input of vehicles", "content": "With the formulation of lateral regions as described above, we \"fil-\nter out\" potentially unsafe decisions by examining the feasibility\nof a lateral shift from one lateral alignment to the next"}]}