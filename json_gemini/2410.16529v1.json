{"title": "Distributed Online Life-Long Learning (DOL3) for Multi-agent Trust and Reputation Assessment in E-commerce", "authors": ["Hariprasauth Ramamoorthy", "Shubhankar Gupta", "Suresh Sundaram"], "abstract": "Trust and Reputation Assessment of service providers in citizen-focused environments like e-commerce is vital to maintain the integrity of the interactions among agents. The goals and objectives of both the service provider and service consumer agents are relevant to the goals of the respective citizens (end users). The provider agents often pursue selfish goals that can make the service quality highly volatile, contributing towards the non-stationary nature of the environment. The number of active service providers tends to change over time resulting in an open environment. This necessitates a rapid and continual assessment of the Trust and Reputation. A large number of service providers in the environment require a distributed multi-agent Trust and Reputation assessment. This paper addresses the problem of multi-agent Trust and Reputation Assessment in a non-stationary environment involving transactions between providers and consumers. In this setting, the observer agents carry out the assessment and communicate their assessed trust scores with each other over a network. We propose a novel Distributed Online Life-Long Learning (DOL3) algorithm that involves real-time rapid learning of trust and reputation scores of providers. Each observer carries out an adaptive learning and weighted fusion process combining their own assessment along with that of their neighbour in the communication network. Simulation studies reveal that the state-of-the-art methods, which usually involve training a model to assess an agent's trust and reputation, do not work well in such an environment. The simulation results show that the proposed DOL3 algorithm outperforms these methods and effectively handles the volatility in such environments. From the statistical evaluation, it is evident that DOL3 performs better compared to other models in 90% of the cases.", "sections": [{"title": "1 Introduction", "content": "Multi-agent systems (MAS) in Distributed Artificial Intelligence (DAI) have the capability to address complex computing problems in Computer Science,"}, {"title": "1.1 Contribution", "content": "In this paper, we extend the MAS architecture defined in [9] with an observer agent to perform the Trust and Reputation Assessment of service providers. The provider's quality of service can be highly volatile. The incorrect learning during multi-agent interactions leads to a risk that would show infectious growth as agents interact and learn from each other [10].\nIn this paper, we propose a novel Distributed Online Life-Long Learning (DOL3) framework that involves the online learning of trust and reputation scores of service providers by a set of observers communicating their opinions with each other. Each observer runs the DOL3 algorithm in a decentralized manner. The DOL3 algorithm involves an adaptive online learning framework coupled with a trust fusion process, effectively combining an observer's assessment with its neighboring observers in the interaction network. The online learning process in the DOL3 algorithm is inspired by that of the exponentially weighted online learning forecaster [11]. Simulation results show that DOL3 outperforms the state-of-the-art machine learning assessment methods; such machine learning methods usually involve training a machine learning model to assess an agent's trust and reputation in a stationary environment. On the other hand, owing to its rapid online learning capability, DOL3 deals with the non-stationary environment effectively.\nFor the simulation studies, different types of social networks have been considered that are essential to understand how the agents are wired to interact with each other and illustrate the social (network) connections among the agents, as stated in [12]. The three networks - Small world, Scale-free, and Regular networks with Homophily are considered during the simulation to understand how"}, {"title": "2 Distributed Online Life-Long Learning (DOL3)", "content": null}, {"title": "2.1 Problem formulation", "content": "The multi-agent architecture considered in this paper involves three types of citizen-centric agents: service providers, consumers, and observers. The edges (connecting lines) between observers and providers indicate that those specific observers have visibility limited to the linked providers. The edges among the observers indicate their neighborhood where the information sharing happens. The consumers can interact with only those providers that they are connected to as per the interaction network. An observer is tasked to do a timely and effective assessment of the providers' quality of service to guide the consumers with the best possible provider.\nLet there be $N_p$ service providers, $N_o$ observers, and $N_c$ consumers. Let $D_i$ denote the set containing indices of all the providers that are observed by the $i^{th}$ observer as per an interaction network $G$. Denote $A_i$ as the set containing the indices of all the observers that are neighbors to the $i^{th}$ observer as per the interaction network $G$. Further, let $\\Omega_i$ be the set of consumers that receive recommendations from the $i^{th}$ observer as per the interaction network $G$.\nIt is assumed that the consumers can purchase services one by one w.r.t. interaction count $t$, with only one consumer per interaction count, i.e., 1st consumer purchases at $t = 1$, 2nd consumer purchases at $t = 2$, and so on, such that the $i^{th}$ consumer purchases only at the interaction counts given by the count sequence: $t_{n,i} = (n-1) \\cdot N_c+i$, where $n = 1,2,\\dots, \\lceil \\frac{N}{N_c} \\rceil, \\dots, \\infty$, and $i \\in [N_c]$. Each service provider $j$ is characterized by a promise quotient $s_j(t) \\in [0,1]$, which is indicative of how good the quality of service provided by the $j^{th}$ provider at the event of its sale at interaction count $t$ is, where $j\\in [N_p]$. Further, the service providers have a limited stock of services they sell, characterized by the maximum number of sales/purchases a service provider $j$ can undergo, denoted by $n_{max}$. Let $n_{t,j}$ denote the total number of sales by the $j^{th}$ provider until the interaction count $t$ since it became active. When the sales hit the threshold value $n_{max}$ for the $j^{th}$ service provider, the $j^{th}$ provider becomes idle or unavailable to the consumers for the next $T_r$ interaction steps; this duration serves as the"}, {"title": "2.2 The DOL3 algorithm", "content": "For the $i^{th}$ observer, $\\forall i \\in [N_o]$, the DOL3 algorithm involves learning the local trust weights $w_{ij}(t)$, $\\forall j \\in \\Omega_i$, and social trust weights $\\alpha_{lj}(t)$, $\\forall l \\in A_i$ and $\\forall j \\in \\Omega_i \\cup (\\cup_{\\forall l \\in A_i} \\Omega_l)$, which are initialized to 1 at $t = 1$, i.e., $w_{ij}(1) = 1$ and $\\alpha_{lj}(1) = 1$. The local trust weight $w_{ij}(t)$ represents the degree of trust the $i^{th}$ observer puts on the $j^{th}$ service provider which is directly connected to it as per the interaction network $G$, $\\forall j \\in \\Omega_i$. On the other hand, the social trust weight $\\alpha_{lj}(t)$ represents the degree of trust the $i^{th}$ observer puts on the $l^{th}$ observer (which is directly connected to the $i^{th}$ observer, $l \\in A_i$) concerning the $j^{th}$ provider's quality of service, where $j \\in \\Omega_i \\cup (\\cup_{\\forall l \\in A_i} \\Omega_l)$, i.e., $j^{th}$ provider is either directly interacting with the $i^{th}$ observer or the $l^{th}$ observers that are neighbors of the $i^{th}$ observer as per the interaction network $G$, $\\forall l \\in A_i$, or both.\nNote that the conditions in equation (2) imply: if $j^{th}$ provider is observed by both the $i^{th}$ and the $l^{th}$ observer, then the social trust weight $\\alpha_{lj}(t+1)$ decreases if there is a mismatch between the $i^{th}$ observer's local trust score $w_{ij}(t)$ and the $l^{th}$ observer's local trust score $\\hat{w}_{lj}(t)$ since the $i^{th}$ observer would always consider its first-hand observations to be the ground-truth. Whereas, if the $j^{th}$ provider is only observed by the $l^{th}$ observer, the $i^{th}$ observer updates the associated social trust score based on the blind-trust factor $\\epsilon_{trst}$, which is tuned based on how much faith / trust the $i^{th}$ observer can have on its neighboring observers in the interaction network $G$.\nThe trust weight $\\alpha_{lj}(t)$ is updated, which indicates how much trust the $i^{th}$ observer has on the $l^{th}$ neighboring observer (as per the interaction network $G$) for the trust score information on the $j^{th}$ service provider, as follows, $\\forall j \\in $"}, {"title": "3 Performance evaluation", "content": "The idea of Agent Reputation and Trust (ART) testbed [22] which is being used for agent trust- and reputation-related technologies is extended further to simulate the real-life citizen-centric scenario of multi-agent systems interaction, which usually includes a lot of complex interactions that result in open and non-stationary environments, which is the main motivation behind developing a simulator to generate uncertainty in the data and include dynamic agents with random behaviors. The evaluation also involves simulating the conditions of how the agents are connected through the social network types - Small world, Random, and Free scale. This ensures that the models are built to scale and work across various types of networks in terms of volume, connectivity, and complexity."}, {"title": "3.1 Simulation evaluation and comparison", "content": "The top models from the baseline execution were compared with the DOL3 model in a dynamic environment with multiple Monte Carlo runs. As shown in Fig. 1, the DOL3 and ADST performed better than the rest of the models. The DOL3 algorithm was configured in the simulator by changing the hyperparameters like $n_{reset}$ to an optimal value along with the discount factor ($\\gamma$). The heterogeneity of the environment characterized by new providers and the deception of agents characterized by the service quality doesn't impact the speed at which the observers learn the ecosystem. From the various simulation runs, it is evident that DOL3 outperforms the other SOTA models in 90% of the cases."}, {"title": "4 Conclusion", "content": "With the advancement in e-commerce multi-agent architectures, Trust and Reputation Assessment plays a vital role in ensuring the quality of services. The DOL3 algorithm assists in assessing the trust of the provider and observers in a distributed fashion, where each observer learns to recommend trustworthy service providers to the consumers in real time via DOL3's adaptive online learning architecture. The simulation studies show that DOL3 performs substantially better than machine learning methods like MET, ACT, ADST, SPORAS and HISTOS, owing to its multi-layered online learning coupled with a weighted trust score fusion process and the information sharing among the observers. Further, DOL3's periodic reset phase handles the exploration part of the learning, which takes care of the high volatility in the environment; learned (biased) weights are forgotten and re-initialized after every $T_p$ discrete time-steps. The loss incurred due to such frequent explorations is reduced substantially because of the high convergence rate of DOL3's online learning, owing to the multiplicative exponential weights update scheme. With all the comparisons and statistical evaluations on the real world data, it is evident that DOL3 performs better than the state-of-the-art models in 90% of the cases."}, {"title": "4.1 Limitation and future work", "content": "The trade-off between exploration and exploitation in DOL3 needs further investigation. This paper considers all the provider-consumer interactions to be of the same context; DOL3 can be further extended to handle the different or changing contexts scenario. The current problem setting assumes that all the consumers are rational, i.e., they will agree to the observers' recommendations; the problem can be modified further to include irrational consumers as well."}, {"title": "5 Appendix", "content": null}, {"title": "5.1 Related work", "content": "While most researchers rely on contracts for provider-consumer interaction, tracking the transactions and the utility of the corresponding outcome is complex in a large, open, and dynamic environment. In a community of heterogeneous agents where policies define the characteristics of operations, the trust is bounded by the available information. Trust is established based on the past behavior of the agent, and historical events are used computationally to infer or predict future behavior. As stated by [14], there are various basic requirements based on which a trust model can be built, stated as follows:\nEffective trust measure by the trust model\nCapability to handle open MAS\nRobustness against deceptive agents\nSPORAS [14], was used in eBay and Amazon by modeling users' trust centrally through rating aggregation. SPORAS does not consider some of the requirements like the domain or context of the environment and past experience in interacting with the provider. ReGret [25] enables each agent to evaluate the reputation by themselves. However, ReGret doesn't take into account the problem of deceptive agents. DOL3 handles the above-stated requirements quite effectively through its multi-layered adaptive online learning of trust scores of the providers and the observers in a decentralized multi-agent architecture with"}, {"title": "5.2 Typical connectivity among the agents", "content": "In Fig. 2, the observers (prefixed 'O'), consumers (prefixed 'C'), and providers (prefixed 'P') are labeled and shown as connected over an interaction network to represent their interactions (transactions, observations, and communication). The communication is also restricted to the set of agents as indicated in Fig. 2."}, {"title": "5.3 Phases of DOL3", "content": "An iteration of the DOL3 algorithm involves the following phases:\nPeriodic Reset Phase: The trust weights $\\hat{w}_{ij}(t)$, $\\forall j \\in \\Omega_i$, and $\\hat{a}_{lj}(t)$, $\\forall l \\in A_i$ and $\\forall j \\in \\Omega_i \\cup (\\cup_{\\forall y \\in\\Omega_l})$, are re-initialized to 1 after every $T_p$ interactions. This ensures that the weights do not get biased as the number of interactions increases and can handle the non-stationary nature of the service providers'"}, {"title": "5.4 Simulator setup", "content": "The simulator architecture is built on the foundation of MESA [23]. The simulator utilizes MESA's basic components, like Agents and Schedulers, to simulate the Agents mentioned in Fig. 5 and their corresponding interactions."}, {"title": "5.5 Model comparisons", "content": "Baseline execution The simulation evaluation was done with the baseline version described in 5.6 followed by DOL3 evaluation. Hyperparameters are used that are vital for executing the baseline and then the actual algorithm evaluation. The simulation baseline was set up by configuring the parameters mentioned in Table 1. The randomized baseline starts by assigning random providers irrespective of the scores. The baseline, as well as the algorithm implementation, allows the consumers to either explore or exploit the ranked active providers.\nFrom the Fig. 6a and Fig. 6b, it is clear that the BRS outperforms HISTOS and SPORAS in this simulation environment on both Dynamic and Static networks. From the Decentralised models MDT, ACT, and ADST perform better across the interactions. The simulation is also considered with random observers providing expert opinions on a provider based on past interactions. The baseline clearly illustrates that the openness in the environment with the random behavior of the provider agents impacts the overall reward in the ecosystem, and the learning from the past does not add to improving the reward in the current interactions.\nThe baseline helps in understanding the level of complexity the open and dynamic environment adds to the ecosystem in building Trust and Reputation. It is also clear that while past learning helps in understanding the agents' behavior, the model built out of the past interaction can not be solely relied on to determine and decide on the agents' behavior for the current interaction. With the network relation in place, the trust needs to be measured from the self-interactions as well as the opinions of the witnesses."}, {"title": "5.6 Baseline for evaluation", "content": "Most of the Trust and Reputation Assessment models use SPORAS as the baseline for performance [14], [24]. SPORAS uses the assumption that new users start with little reputation, which builds as the services being provided increase. HISTOS was used for measuring trust in a tightly connected environment [7]. We"}, {"title": "5.7 Statistical validation", "content": "The above simulation results help us evaluate the performance of the models against the type of network along with complexity. We applied the same against real-time data of movie recommendation system data set [20]. The recommendation system consisted of consumer agents (users) and service providers (recommenders) along with observers that were connected to represent various social"}]}