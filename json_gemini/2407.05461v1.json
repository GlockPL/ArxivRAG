{"title": "CAV-AD: A Robust Framework for Detection of Anomalous Data and Malicious Sensors in CAV Networks", "authors": ["Md Sazedur Rahman", "Mohamed Elmahallawy", "Sanjay Madria", "Samuel Frimpong"], "abstract": "The adoption of connected and automated vehicles (CAVs) has sparked considerable interest across diverse industries, including public transportation, underground mining, and agriculture sectors. However, CAVs' reliance on sensor readings makes them vulnerable to significant threats. Manipulating these readings can compromise CAV network security, posing serious risks for malicious activities. Although several anomaly detection (AD) approaches for CAV networks are proposed, they often fail to: i) detect multiple anomalies in specific sensor(s) with high accuracy or F1 score, and ii) identify the specific sensor being attacked. In response, this paper proposes a novel framework tailored to CAV networks, called CAV-AD, for distinguishing abnormal readings amidst multiple anomaly data while identifying malicious sensors. Specifically, CAV-AD comprises two main components: i) A novel CNN model architecture called optimized omni-scale CNN (O-OS-CNN), which optimally selects the time scale by generating all possible kernel sizes for input time series data; ii) An amplification block to increase the values of anomaly readings, enhancing sensitivity for detecting anomalies. Not only that, but CAV-AD integrates the proposed O-OS-CNN with a Kalman filter to instantly identify the malicious sensors. We extensively train CAV-AD using real-world datasets containing both instant and constant attacks, evaluating its performance in detecting intrusions from multiple anomalies, which presents a more challenging scenario. Our results demonstrate that CAV-AD outperforms state-of-the-art methods, achieving an average accuracy of 98% and an average F1 score of 89%, while accurately identifying the malicious sensors.", "sections": [{"title": "I. INTRODUCTION", "content": "The rapid advancements in sensor technology have made them suitable for various applications, including satellite communication (Satcom) [1, 2] and connected and autonomous vehicles (CAVs) [3, 4], enabling real-time communication with each other and the surrounding infrastructure. CAVs can operate without direct human input, sensing their environment, navigating roads, and autonomously making driving decisions. Due to their unmatched dependability and efficiency [5], CAVS have great potential for utilization in various other industrial sectors such as public transportation, underground mining [6, 7], and agriculture [8]. CAVs ability to operate in hazardous environments makes them valuable assets in industries like mining. Autonomous hauler trucks, for instance, can navigate rough terrain, tow large loads, and move commodities within mining sites with precision and efficiency. By substituting human operators for risky tasks, CAVs have the potential to increase industry safety and reduce the number of accidents and fatalities [9-11].\nTo harness their significant advantages, CAVs depend an array of sensors, including cameras, radar, lidar, and GPS, in conjunction with advanced computing systems and AI algorithms [12]. These components enable CAVs to perceive and interpret their surroundings accurately, plan optimal routes, and execute maneuvers safely and efficiently.\nChallenges. While the utilization of CAV networks holds promise, their functionality and stability hinge on the robust- ness of their sensors against various attacks [13-17]. Typically, sensors in CAVs communicate over insecure channels, leaving them vulnerable to malicious entities seeking to compromise the entire CAV networks. Attackers may exploit to gain unau- thorized access to sensor readings, monitor vehicle behavior, or even manipulate sensor readings for malicious purposes, potentially leading to catastrophic outcomes or fatal collisions [18\u201322]. As time-series datasets unfold sequentially, they are perceived as one-dimensional (1D), making them suitable for exploitation by a 1D-convolutional neural network (CNN), 1D- CNN, model network [23] to extract temporal properties like traffic patterns and vehicle behaviors. An essential aspect of this process is determining the ideal receptive field size (RF), which represents the length of the input sequence scanned for features a critical task for 1D-CNNs.\nSeveral approaches have been developed to detect sensor integrity and intrusions in CAV networks. For example, Van et al. [24] proposed CNN-KF, which combines a CNN model with a Kalman filter (KF) for anomaly detection. However, the performance of CNN-KF depends on the synchronous of both methods and if CNN fails to detect anomalies, KF may also struggle. Javed et al. [25] introduced MSALSTM-CNN, a CNN based on long short-term memory (LSTM), which employs a multi-stage attention mechanism to improve anomaly identification rates. Despite its effectiveness, this approach cannot select optimal receptive field size for feature extraction and does not address the detection of malicious sensors.\nThese methods, however, share common limitations: they failed i) to detect a specific anomaly type from multiple anomaly data, and ii) to identify the specific sensor(s) targeted in an attack.\nContributions.In response to the challenges and limitations outlined above, this paper proposes a robust framework called CAV-AD for detecting anomalies in CAV networks, particularly those stemming from instant or constant attacks that pose significant risks and are more likely to occur in real-life scenarios. CAV-AD innovates through two key components: i) a novel model architecture named O-OS-CNN (Optimized-Omni Scale CNN), which is designed to select the optimal RF size for 1D-CNNs, thereby improving the detection performance in time series data; ii) an amplification block that enhances the sensitivity for detecting anomalies by increasing the values of anomaly readings. Additionally, CAV-AD incorporates a KF to dynamically identify malicious sensors.\nIn summary, this paper makes the following contributions:\n\u2022\tWe propose CAV-AD, a framework designed to dynam- ically detect anomalies in CAV networks. Unlike exist- ing approaches, CAV-AD succeeds in achieving high F1 scores alongside accuracy, demonstrating its effectiveness in anomaly detection. Furthermore, to the best of our knowledge, CAV-AD stands as the first framework with"}, {"title": "II. RELATED WORKS", "content": "To address the difficulties in identifying abnormal sensor data in CAVs, a number of previous works have been pro- posed. For instance, Javed et al. [25] introduced a multi-stage attention mechanism utilizing a LSTM-based CNN, named MSALSTM-CNN, to identify abnormal sensor readings in autonomous vehicles. They also employed a weight-adjusted fine-tuned ensemble method to demonstrate the efficacy of the MSALSTM-CNN technique. Another approach by the authors of [27] leveraged an attention-enhanced temporal convolutional network (TCN) for anomaly detection in CAV networks. This attention-enhanced TCN overcomes challenges associated with artificial feature selection and improves detection performance by adaptively assigning higher weights to important feature channels through attention branches at each layer.\nAddressing instant attacks in sensor reading detection in CAV networks, Wyk et al. in [24] merged CNN with KF by combining the strengths of both models to outperform individual CNN and KF models. Khan et al. [28] presented a two-stage AD framework to identify instant attacks. Their approach involved utilizing a state-based Bloom filter technique in the first stage to confirm the states of incoming data, followed by a bidirectional LSTM (Bi-LSTM) classifier based on deep learning in the second stage to detect cyberattacks from autonomous vehicles. Cherdo et al. [29] introduced semi-supervised anomaly threshold optimization and unsupervised anomaly detection models employing various state-of-the-art methods, including CNN, LSTM, Gated Recurrent Unit (GRU), and anomaly likelihood, to effectively detect anomalous tem- poral patterns in real complex multivariate sensor time series.\nWhile these existing works have demonstrated promising performance, none of them have evaluated their approaches on multiple types of anomalies or attempted to predict a single type of anomaly. Furthermore, identifying the sensors under attack is a crucial aspect of cybersecurity that has been"}, {"title": "III. NETWORK AND THREAT MODEL", "content": "In this section, we will provide an overview of our network model for the CAV network under consideration, along with the associated threats.\nA. Network Model\nWe consider a set of CAVs denoted by $C = \\{C_1, C_2, ..., C_N\\}$, forming a network of $N$ autonomous vehicles. Each CAV $C_i$ is equipped with a set of sensors, represented by the set $SC_i = \\{s_1, s_2, ..., s_J\\}$. Each sensor $s_j$ within a vehicle $C_i$ can communicate with any other sensor on the CAV network. Communication within our CAV network can be categorized into three classes: intra-vehicle communication, where sensors within the same vehicle exchange information for decision- making, inter-vehicle communication, where the computing management system of one vehicle communicates with others on the network, and vehicle-to-infrastructure communication, which is used to communicate with the network's main server (Fig. 1 provides an illustration). On the one hand, by collecting the information from the intra-vehicle sensors $S_{C_i}$, a vehicle $c_i$ can optimize its driving path and make informed decisions, such as adjusting tire orientation and adapting lane position or speed. On the other hand, inter-vehicle communication is facilitated by establishing links with neighboring CAVs to reach the target vehicle. Additionally, each vehicle $c_i$ utilizes its onboard units for wireless connectivity to communicate with the main network's server through the network infrastructure. This communication typically involves passing through a hub on the main network, e.g., road side unit, to request information via vehicle-to-infrastructure communication.\nB. Threat Model\nThe dependence of CAVs on sensors, network infrastructure, and insecure communication channels renders them vulnerable to unforeseen malfunctions or attacks [30, 31]. To this end, we consider four types of attacks/threats in our CAV network: instant attacks, constant attacks, gradual drift attacks, and bias attacks (see Fig. 2). Below, we provide a brief description of each."}, {"title": "IV. PROPOSED CAV-AD FRAMEWORK", "content": "In this section, we provide an overview of our proposed approach, the CAV-AD framework (illustrated in Fig. 3), de- signed to detect the threats outlined in Section III-B within CAV networks. The CAV-AD operates in three phases: (i) It utilizes the proposed amplification block to enhance the sensitivity of AD, particularly for sensor readings with low- amplitude anomalies; (ii) It employs our novel O-OS-CNN model architecture, which outperforms traditional CNN models in accurately identifying anomalous readings, achieving high accuracy and F1 scores for each sensor; (iii) It integrates the KF block with our O-OS-CNN model to identify the sensor(s) under attack. Below, we provide a detailed description of how the CAV-AD framework operates:\nPhase1 The upper amplification block of the CAV-AD framework on Fig. 3 is fed with a dataset containing anomaly readings from a single sensor. Simulta- neously, for testing purposes, the lower amplifica- tion block is fed with anomalies of four different attack types as outlined in Section III-B (see the bottom right of Fig. 3). Note that, both amplification blocks are designed to increase the magnitude of the anomaly readings, making the anomalies more distinguishable from normal readings.\nPhase 2 The amplified data is subsequently utilized to train our proposed O-OS-CNN model. Concurrently, this amplified data is also used to train the O-OS-CNN model integrated with the KF, enabling the detection of the sensor from which the attack originates (see the middle of Fig. 3).\nPhase 3 For evaluation, the trained O-OS-CNN model will be fed with the amplified testing data to predict the class of the input data as either \"normal\" or \"anomaly\". The final output of the CAV-AD will include the accuracy and F1 score for anomaly sensor detection, along with the identification of the attacked sensor.\nAlgorithm 1 outlines the three phases of the CAV-AD framework: the amplification block, the O-OS-CNN model architecture, and the O-OS-CNN empowered KF block. Each phase is executed by a separate algorithm, which will be discussed in detail in the following sections.\nA. CAV-AD Amplification Block\nWe propose an amplification block to address the challenge of misidentifying or failing to detect anomalies with small amplitudes similar to normal readings, which can lead to reduced accuracy in AD [27]. To achieve this, both the training and test datasets are passed through separate amplification blocks to enhance feature extraction, as illustrated in Fig. 3. Once CAV-AD detects a sudden deviation of a reading from its normal value, it triggers direct amplification.\nTo illustrate how our approach operates, we present Algo- rithm 2, which detects such anomalies. We set a threshold value $\\alpha$ to determine whether the absolute difference between the current reading and the next reading is sufficiently large to be amplified. Additionally, we define an amplification factor $\\beta$ to amplify the sensor reading. In lines 1 through 12, the algorithm iterates over each reading of an individual sensor and then calculates the absolute difference between the current reading and the next reading. For instant anomaly,if the difference exceeds the threshold $\\alpha$ or for constant anomaly if"}, {"title": "B. O-OS-CNN Model Architecture", "content": "This section presents our proposed O-OS-CNN model archi- tecture designed for detecting anomaly data,i.e., sensor reading, with high accuracy and achieving a high F1 score. Unlike traditional 1D-CNNs used in time series classification tasks, which typically have fixed RF sizes that limit AD performance, O-OS-CNN tackles this challenge. Specifically, it dynamically adjusts its RF size based on the characteristics of the dataset, allowing it to select the optimal RF size for each training epoch. This capability is made possible by the inclusion of two-layered OS blocks within the O-OS-CNN architecture. These blocks enable O-OS-CNN to explore a range of kernel sizes, from 1 to the entire length of the time series data to extract features from the input in every possible length.\nFig. 4 illustrates the architecture of the O-OS-CNN model, which comprises two-layered OS blocks, while Algorithm 3 outlines the basic steps followed in this architecture. These blocks utilize a range of natural integers, from 1 to L, where L is half the length of the time series data. Each kernel within the multi-kernel structure of these blocks performs the same input-to-padding convolution.\nA similar OS block was proposed in [33], which utilized only prime numbers in the initial OS block. However, this method"}, {"title": "C. O-OS-CNN Empowered Kalman Filter", "content": "We integrate our developed O-OS-CNN framework with a KF block to enhance the capability of our CAV-AD approach in detecting sensors that are under attack and exhibit anomaly reading (see the top of Fig. 3). This integration of the KF block introduces new functionality to the O-OS-CNN model, leveraging the effectiveness of the KF in estimating the state of dynamic systems in the presence of noisy sensor data.\nOne advantage of integrating the KF over alternative methods such as the Gaussian mixture model (GMM) is its superior performance in detecting attacked sensors. Our experimental comparisons between these two methods show that the KF out- performs the GMM due to its versatility in handling dynamic systems and high computing efficiency. Additionally, the KF is adept at estimating the state of a linear dynamic system from noisy measurements, operating in two main steps: prediction and update.\nAlgorithm 4 outlines the steps for utilizing the KF in each sensor to dynamically predict the next normal value based on the previous value. In line 1, we initialize a threshold T to determine the gap between normal and abnormal values. Line 4 iterates over each sensor in the normal data, and line 6 initializes $X_o$ as the first value of a sensor. Then, in line 7, we predict the next normal value of that reading, $X_{pre}$, using KF, and store this predicted value in a list pre_val.\nFrom line 13, it iterates over the incoming anomaly data, with $X_{in}$ representing the current incoming reading. On line 16, the incoming value $X_{in}$ is stored in a list in_val. Line 17 calculates the absolute difference between the incoming anomalous values and the normal predicted values by the KF. From lines 18 to 20, this absolute difference for each sensor is checked against the threshold to determine if the incoming value $X_{in}$ deviates significantly from the predicted value $X_{pre}$. The threshold T is set to 2 because the normal sensor data (speed or acceleration) are typically much closer to each other"}, {"title": "V. PERFORMANCE EVALUATION", "content": "A. Experimental Setup\nEnvironment. We employ Python 3.12.1 along with PyTorch packages to validate the effectiveness of CAV-AD. The machine specifications consist of a 64-bit operating system, 32 GB memory, and an AMD Ryzen 7 7700X 8-Core Processor paired with an NVIDIA GeForce RTX 3070 graphics card.\nDataset, Training Parameters, and Evaluation Metrics. We utilize the safety pilot model deployment (SPMD) dataset [26] to evaluate our CAV-AD approach. This dataset com- prises real recorded high-frequency data collected every 100 milliseconds over a two-year period for more than 2,500 vehicles that form a CAV network C. The dataset includes both inter- and intra-vehicle communication, as well as vehicle- to-infrastructure communications. Each vehicle $c_i$ is equipped with three sensors $SC_i = \\{s_1, s_2, s_3\\}$: $s_1$ measures in-vehicle speed, $s_2$ measures GPS speed, and $s_3$ measures in-vehicle ac- celeration, capturing vehicle acceleration data. The trip duration for each vehicle $C_i$ is 2,980 seconds. To simulate anomaly scenarios, we use the anomalies generated in [24], which introduce anomalies at a rate of 5% as the original SPMD dataset does not contain any anomalies.\nB. Comparison with SOTA\nPerformance of Detecting anomalies data. We evaluate the performance of our approach, CAV-AD, against our baselines in detecting unknown anomalies, testing it over four types of anomalies as discussed in Section III-B, focusing on detecting instant and constant attacks.\nTable I displays CAV-AD's detection performance for instant anomalies, while Table II presents performance for constant anomalies according to our evaluation metrics. In Table I, $\\mathcal{N}(0, 0.01)$ defines a Gaussian variable [35] with mean and variance of zero and 0.01, respectively. This variable is am- plified by 1000 and added to the base value of sensor mea- surements for one epoch (i.e., 100 ms). In Table II, $\\mathcal{U}(0, 5)$ refers to a uniform distribution between 0 and 5, and d = 10s is the duration of the anomaly. For both types of attacks, our findings show that the accuracy for all three sensors is above 97%. The F1 score for detecting instant anomalies from $s_1$, $s_2$, and $s_3$ is 83.4%, 88.7%, and 88%, respectively, which is less than 90%. On the other hand, the F1 score for all three sensors in constant anomalies is above 90%. It is also evident that the precision follows a similar trend to the F1 score. The reason for this difference is that instant anomalies have no duration, unlike constant anomalies, and are more challenging to identify due to random shifts in magnitude at random time instances. However, this performance supports the strong generalization of the model in detecting these two significant anomaly types.\nIn Fig. 5, we present the comparison results of CAV- AD against the baselines for the instant anomaly, showing that CAV-AD outperforms the current CNN-KF [24] and MSALSTM-CNN [25] approaches in terms of accuracy and F1 score. While our model achieves the same accuracy of 99% across all three sensors, it achieves an F1 score of 83% for $s_1$, 88% for $s_2$, and 88% for $s_3$, representing an improvement of 5- 27% on F1 score compared to the baselines. These results show a significant improvement in F1 scores, underscoring the effec- tiveness of CAV-AD over its counterparts. This improvement can be attributed to the diverse range of kernel sizes utilized in training the O-OS-CNN model.\nIn Fig. 6, we extend the evaluation to identify constant anomalies from mixed anomaly data, achieving an accuracy of 98% across the three sensors. The F1 score for $s_1$, $s_2$, and $s_3$ is 96%, 91%, and 94%, respectively. These results further validate the robustness and effectiveness of CAV-AD in detecting anomalies across various scenarios.\nLastly, in Fig. 7 and Fig. 8, we present the confusion matrices for instant and constant anomalies, respectively, to illustrate how well our model distinguishes between normal and anomaly data. It is evident that the number of true positive in-"}, {"title": "VI. CONCLUSION AND FUTURE WORK", "content": "In this paper, we propose a novel framework named CAV- AD designed to detect anomalous readings of sensor data in CAV networks. The framework not only identifies anomalies in sensor data but also identifies sensors that have been compro- mised. Specifically, CAV-AD stands out against the SOTA by three components: a novel O-OS-CNN model architecture that extracts features from the input data by generating all possible kernel sizes of varying lengths, an amplification block that enhances the model's capability to distinguish anomaly data,"}]}