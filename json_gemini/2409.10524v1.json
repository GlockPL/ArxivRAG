{"title": "3CSim: CARLA Corner Case Simulation for Control Assessment in Autonomous Driving", "authors": ["Mat\u00fa\u0161 \u010c\u00e1vojsk\u00fd", "Eugen \u0160lapak", "Mat\u00fa\u0161 Dopiriak", "Gabriel Bug\u00e1r", "Juraj Gazda"], "abstract": "We present the CARLA corner case simulation (3CSim) for evaluating autonomous driving (AD) systems within the CARLA simulator. This framework is designed to address the limitations of traditional AD model training by focusing on non-standard, rare, and cognitively challenging scenarios. These corner cases are crucial for ensuring vehicle safety and reliability, as they test advanced control capabilities under unusual conditions. Our approach introduces a taxonomy of corner cases categorized into state anomalies, behavior anomalies, and evidence-based anomalies. We implement 32 unique corner cases with adjustable parameters, including 9 predefined weather conditions, timing, and traffic density. The framework enables repeatable and modifiable scenario evaluations, facilitating the creation of a comprehensive dataset for further analysis.", "sections": [{"title": "I. INTRODUCTION", "content": "UTONOMOUS driving (AD) has made substantial progress in recent years, driven by advancements in computational hardware, the availability of high-quality data, and the development of sophisticated sensors such as cameras and LiDARs. The integration of deep learning (DL) techniques has further accelerated the evolution of AD systems. Notable achievements include advancements in perception tasks [1] serving as a foundation for other modules for planning [2], [3] and control through deep reinforcement learning (DRL) [4], [5] or imitation learning [6], [7]. These technological innovations have positioned major companies, such as Tesla and Waymo, to bring autonomous vehicles (AVs) into real-world traffic. However, Waymo autonomous taxis have demonstrated unusual behavior, such as stopping when a pedestrian wears a T-shirt with a printed STOP sign. This raises concerns about the system's ability to generalize effectively, as well as its safety and reliability.\nAD systems perform well in routine situations commonly represented in their training data. However, the real world presents a wide range of rare and unpredictable scenarios, known as corner cases, which are not typically encountered during training. These corner cases, such as a pedestrian suddenly emerging from behind an obstruction or unexpected road obstacles, deviate significantly from standard traffic conditions [8], [9]. As a result, AVs often struggle to generalize effectively in these situations, leading to potential failures in perception and control. While advancements in artificial intelligence (AI) have improved AD systems, the limited representation of corner cases in training datasets remains a critical challenge [10], [11]. Addressing this issue requires comprehensive dataset engineering and the inclusion of diverse corner case scenarios to enhance system robustness and safety. However, obtaining relevant real-world data for these rare and often dangerous scenarios is exceptionally difficult.\nSimulators are crucial in the development of AD systems, offering controlled environments for safe and efficient training and testing. The CARLA simulator, widely used for AD research [12]\u2013[14], allows for the generation of necessary data without the risks of real-world scenarios. These environments equip AD systems to manage routine scenarios. However, the effective handling of rare and unpredictable events in real-world contexts remains a significant challenge yet to be fully implemented. By allowing the repetition of scenarios with varied conditions, simulators like CARLA facilitate comprehensive evaluation and better prepare AD systems for real-world deployment, despite the greater complexity of actual driving conditions.\nThis paper introduces the CARLA corner case simulation (3CSim) for evaluating AD systems in a controlled and deterministic environment. The simulation allows for the repetition of identical or slightly varied events, creating unique scenarios to compare the behavior of advanced AD systems, which is not feasible in real-world settings. Designed to assess the control capabilities of AD systems in rare and unpredictable traffic situations, the 3CSim also enables systematic data collection from these events to build a dataset for further analysis. Additionally, we propose a taxonomy to classify the implemented corner cases into state anomalies, behavior anomalies, and evidence-based anomalies.\nThe main contributions of this paper are summarized as follows:\n1) We propose 3CSim for control assessment of AD models in controlled and deterministic environment.\n2) We propose a taxonomy of advanced corner case sce- narios implemented in our proposed simulation."}, {"title": "II. RELATED WORK", "content": "In this section, we compare our approach to similar methods aimed at simulating corner case scenarios for enhancing generalization of AD systems. Additionally, we evaluate our taxonomy and terminology against other proposed classifications and terms."}, {"title": "A. Synthesizing Corner Cases", "content": "This subsection examines methods for synthesizing corner cases with simulation tools, relevant to our approach of generating unique scenarios for AD model evaluation.\nResearch [15] presents the Stackelberg driver model (SDM), which uses a scenario-based framework to generate safety-critical corner cases. It models AV-other vehicle interactions as a Stackelberg game, allowing iterative policy refinement in response to challenging behaviors. The paper [16] uses heterogeneous graph neural networks (HGNNs) to generate corner cases by perturbing scene graphs in driving simulators like CARLA, achieving 89.9% prediction accuracy. This method effectively tests AV robustness and enhances safety validation. In contrast, our approach involves manually generating corner cases with varied input conditions to ensure diversity of events.\nCornerSim [17] is a framework for generating synthetic corner-case scenarios to test AD systems. It facilitates the creation and modification of diverse driving scenarios, producing raw sensor data and labeled datasets for training and validation. By simulating rare and challenging situations, CornerSim enhances the robustness of perception systems in AVs and provides data, such as the CornerSet dataset, for benchmarking detection algorithms and improving testing and development. Unlike our approach, which focuses on control, CornerSim's data is primarily for perception modules.\nThe paper [18] introduces a first-principles sensor model integrated into the CARLA simulator to enhance safety of intended functionality (SOTIF) testing for AVs particularly in adverse weather conditions like fog. Additionally, it presents a meta-heuristic algorithm to efficiently identify corner cases by reducing the scenario search space. This method improves corner case detection and resolves synchronization issues between simulators and autonomous systems. However, it provides only limited set of representative corner cases in contrast to our approach."}, {"title": "B. Corner Case Taxonomies", "content": "Corner case taxonomies can be divided into two main groups. The first group focuses on neural network interpretation, as described in [19]. The second group is concerned with visual applications. Breitenstein et al. [20] systematize corner cases by abstracting events from the pixel level to complex scenarios, a framework widely adopted by other taxonomies. Bogdoll et al. [10] define corner cases as critical events that are infrequent during AI model training, while Heidecker et al. [21] extend this definition to include data from cameras, LiDAR, and radar. Pfeil et al. [22] categorize corner cases based on environmental factors, functional constraints, and system-internal conditions. Although our taxonomy is also based on visual applications, it specifically focuses on the classification of corner cases by their unusual states, behaviors, or pre-event indicators, as detailed in section IV."}, {"title": "III. CARLA CORNER CASE SIMULATION", "content": "The deployment of AVs in real traffic environments demands a thorough understanding and effective handling of various driving scenarios, including corner cases. As depicted in Fig. 1, advertisements obscuring STOP signs can lead to incorrect decisions by AV. A ball on the road may signal the presence of children who could run onto the street without regard for safety. An unsecured suitcase on a vehicle may fall, requiring prompt reaction by AV. Additionally, AV often faces complex situations, such as navigating between a pothole on the right and children on the left, necessitating the optimal choice of action. The behavior of AVs in such scenarios, along with their potential weaknesses, remains a concern. Even minor variations in traffic situations can overwhelm the AD system, significantly undermining its ability to achieve high reliability.\nWe introduce the 3CSim, specifically designed to simulate a wide range of corner cases for AD systems in urban environments. This simulation facilitates deterministic simulations, allowing for the precise repetition of complex events under identical conditions. It also permits the controlled variation of factors such as weather, vehicle speed, and pedestrian behavior to assess the performance of advanced AD systems. These systems, modeled as AVs, are integrated into the simulation to evaluate their ability to generalize effectively to rare and challenging scenarios, known as corner cases. The 3CSim can also generate extensive dataset by running simulations without any AD systems, providing valuable insights for analyzing these corner cases. By enabling comprehensive evaluation across diverse scenarios, the 3CSim supports the learning and generalization of AD systems, contributing to their safety and reliability in real-world conditions.\nFig. 2 a) presents the inputs to our proposed simulation. The most fundamental are input conditions describing the urban environment and scenario parameters, such as vehicle speed, weather conditions, and traffic density. The 3CSim serves two primary functions: evaluating AD models and generating datasets of corner cases for subsequent analysis. For AD system evaluation, an AD model, such as a reinforcement learning (RL) model like DQN, is loaded as the key participant in the scenario. Evaluation constraints are then established to determine the success or failure of the scenario, either through simple collision detection or a hierarchical system where collisions are weighted differently, such as prioritizing collisions with humans as more severe than those with small traffic signs. To generate datasets for further analysis, the corner case is executed in the CARLA simulator, data is collected according to predefined dataset constraints, and then saved in specified formats.\nOnce all input parameters are defined, the simulation is executed from a predefined start time to to a specified end time tn. The simulation may conclude either after a set duration or upon the occurrence of specific events, such as a collision or the vehicle remaining stationary for a designated period. Fig. 2 b) illustrates a scenario where the AD model, represented by the yellow vehicle, must decide whether to go straight, turn right, turn left, or stop. In this instance, the simulation ended due to a collision with a piece of luggage that had fallen onto the road. The scenario can be repeated with identical conditions or modified by altering variables such as weather conditions or the timing of unexpected events, such as adjusting the moment when the luggage falls onto the road.\nFig. 2 c) illustrates the outputs of the 3CSim. For AD model evaluation, the output includes metrics that determine the success or failure of the model based on the predefined evaluation constrains from the input. For dataset generation, the output consists of data from the simulated urban environment, including sensor data such as RGB frames and LiDAR, which are compiled into datasets for subsequent processing using advanced AI techniques.\nThe code for our 3CSim is publicly available at a GitHub repository 1.\n1https://github.com/Maftej/3csim"}, {"title": "IV. \u03a4\u0391\u03a7\u039f\u039d\u039fMY OF CORNER CASES", "content": "This section presents a taxonomy of corner cases, comprising 32 unique scenarios with variations defined by the simulator's boundaries, such as 9 predefined weather conditions, timing, or traffic density. Fig. 3 illustrates three types of corner cases included. Within this simulation, rare traffic events are classified as anomalies, typically associated with objects exhibiting unusual semantics or behavior. The final category, evidence-based anomalies, involves observable indicators that prompt caution, enabling proactive measures before the corner case occurs. In this subsection, each anomaly is described in detail, along with relevant examples."}, {"title": "A. State Anomaly", "content": "State anomalies occur when there is a mismatch between the semantics of an object and its expected state, leading to potential misinterpretations by a system. Specifically, these anomalies arise when objects alter their appearance or context, falsely suggesting a different function than intended. A typical example is advertisement placed near roads that resemble traffic sign STOP as in Fig. 4.\nIn our 3CSim, several corner cases are implemented to address these challenges. For instance, a video advertisement depicting a pedestrian holding a soft drink with the brand name \"Carla Cola\" prominently displayed could be misidentified as an actual pedestrian by a vehicle's detection system. Similarly, a billboard promoting a party that features an image of a traffic light may be mistaken for a real traffic signal, leading the vehicle to inappropriately stop or change speed.\nAnother case is a billboard displaying the word \"stop\" in the context of sneezing, which could be misinterpreted as a genuine STOP sign, causing the vehicle to halt unexpectedly. Likewise, a sign indicating \"parking ahead\" but specifying \"only for bar members\" might mislead the vehicle into considering it a general parking sign, creating confusion in locating proper parking.\nMoreover, an advertisement showing a turn symbol for a soft drink could be mistaken for an actual turn sign, potentially promising safety and functionality."}, {"title": "B. Behavior Anomaly", "content": "Behavior anomalies refer to discrepancies between observed and expected behaviors, often leading to unpredictability and challenges in system response. These anomalies occur when objects deviate from typical behavior, such as a car breaking traffic laws, making the situation less predictable and more difficult for autonomous systems to handle.\nFor example, a car crash scenario obstructing a lane requires the vehicle's perception system to recognize the incident from a distance, calculate an alternate route, and safely change lanes if necessary. In the case of active emergency vehicles blocking an exit at a roundabout, the autonomous system must recognize the special status of these vehicles and reroute accordingly, while still adhering to road rules and vehicle prioritization.\nAnother complex situation involves a police car chase, where the AV must recognize the urgency and nature of the chase, possibly altering its route or pulling over to avoid interfering with law enforcement activities. Unusual pedestrian or animal behavior, such as a pedestrian standing near a crosswalk without crossing, can confuse prediction models that anticipate pedestrian movements based on proximity to crosswalks.\nErratic biker maneuvers beside the vehicle present a continuous threat, requiring the autonomous system to continuously update its path planning and speed to account for potential sudden turns by the biker. Similarly, a loose shopping cart rolling downhill into the vehicle's path represents a dynamic obstacle that the vehicle must detect and evade without prior warning, highlighting the need for real-time obstacle recognition and avoidance capabilities.\nA particularly risky scenario is when a car drives against the vehicle on a one-way street as depicted in Fig. 6. Here, the vehicle must anticipate the opposing vehicle's potential actions, such as stopping after realizing the mistake or turning around. Finally, a scenario where a ball is launched over an obstacle onto a high-speed road could cause an AV to brake suddenly to avoid a potential collision.\nEach of these scenarios demands that the vehicle's perception algorithms interpret not just the current frame but also the context provided by a sequence of frames. This multi-frame analysis helps in understanding the progression of dynamic elements within the scene, enabling more accurate predictions and safer maneuvering decisions. In our dataset, we introduce these complex scenarios using CARLA's simulation environment, positioning emergency vehicles like firetrucks, ambulances, and police vehicles in non-standard settings to rigorously test the adaptability and accuracy of AD systems under varied, unpredictable conditions.\nWhile most of these scenarios are not inherently dangerous, they require precise action to ensure safety. Evaluations can be conducted based on the vehicle's response to avoid collisions in these scenarios, providing insights into the system's effectiveness in handling behavior anomalies."}, {"title": "C. Evidence-Based Anomaly", "content": "Evidence-based anomalies in AD refer to situations where there is prior evidence indicating a potential forthcoming anomaly, allowing the vehicle to prepare or adjust its strategy to mitigate hazards. These scenarios demand both scene and temporal understanding, requiring the autonomous system to process a sequence of images to detect and respond effectively to irregular or unexpected events. The presence of early indicators in these situations provides the opportunity for the vehicle to anticipate and manage the anomaly before it fully manifests.\nAs depicted in Fig. 7, parked cars obscure the vehicle's vision and a child suddenly runs into the street chasing a football. There is a dual hazard: the blocked line of sight and the unexpected appearance of the child. The AV must rapidly assess the situation and take appropriate action to avoid a potentially fatal accident. Similarly, Fig. 8 depicts luggage falling from the roof of a car, the vehicle must quickly decide whether to swerve, brake, or continue, depending on the object's trajectory and the road conditions.\nIn another scenario, if a car parks too close to the vehicle's lane and a door opens suddenly, the vehicle must predict this behavior and react swiftly to avoid a side collision. A similar challenge arises when a worker runs out from behind a parked van, requiring immediate recognition and response to prevent an accident, highlighting the importance of peripheral detection in cluttered environments.\nMoreover, if a courier causes a barrel to fall from a hand truck into the vehicle's lane, the system must make a quick decision to either swerve or brake to avoid a collision. An EMS vehicle with lights flashing, departing from a hospital while disregarding traffic lights and speeding, presents a risky scenario where the AV must yield and maneuver safely to avoid an accident.\nThese evidence-based anomalies demonstrate the critical need for advanced perception systems in AVs that can interpret complex situations and respond appropriately. The early detection of potential hazards allows the vehicle to take preemptive actions to maintain safety, not only for its passengers but also for surrounding traffic and pedestrians."}, {"title": "V. CONCLUSION", "content": "In this work, we propose the 3CSim for control assessment in AD. This simulation is designed for evaluating AD systems within the CARLA simulator. The scenarios can be repeated under identical conditions or with slight modifications, enabling unique assessments that are not feasible in real-world environments. Data from these simulations are collected to create a dataset for further processing. Additionally, we introduce a taxonomy of corner cases, categorized into three groups: state anomalies, behavior anomalies, and evidence-based anomalies. We implemented 32 unique corner cases, with modifiable parameters such as 9 predefined weather conditions, timing, and traffic density. Future work will focus on extending these corner cases, enhancing simulation flexibility by incorporating more input parameters, and developing custom evaluation metrics for corner cases."}]}