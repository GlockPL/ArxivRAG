{"title": "Congestion Forecast for Trains with Railroad-Graph-based Semi-Supervised Learning using Sparse Passenger Reports", "authors": ["Soto Anno", "Kota Tsubouchi", "Masamichi Shimosaka"], "abstract": "Forecasting rail congestion is crucial for efficient mobility in transport systems. We present rail congestion forecasting using reports from passengers collected through a transit application. Although reports from passengers have received attention from researchers, ensuring a sufficient volume of reports is challenging due to passenger's reluctance. The limited number of reports results in the sparsity of the congestion label, which can be an issue in building a stable prediction model. To address this issue, we propose a semi-supervised method for congestion forecasting for trains, or SURCONFORT. Our key idea is twofold: firstly, we adopt semi-supervised learning to leverage sparsely labeled data and many unlabeled data. Secondly, in order to complement the unlabeled data from nearby stations, we design a railway network-oriented graph and apply the graph to semi-supervised graph regularization. Empirical experiments with actual reporting data show that SURCONFORT improved the forecasting performance by 14.9% over state-of-the-art methods under the label sparsity.", "sections": [{"title": "1 INTRODUCTION", "content": "Forecasting rail congestion plays a significant role in transport systems. In fact, rail congestion leads to risks of injuring or killing commuters, for example, falling off platforms, breaking a glass window, or operations with doors unclosed. Traditionally, rail congestion has been monitored using ticket gates [38, 49] and CCTV videos [51]. However, ticket gates could not quantify passengers inside individual trains. Moreover, it is well known that vision-based technique like CCTVs suffers from occlusion [51].\nCrowdsourced information provided by passengers has received attention from researchers. Latia et al. have revealed the efficacy of crowdsourced information to know timely situations about congestion in transportation systems [33]. In fact, many transportation system-related applications (e.g., transit search apps such as Jordan's Japan Transit Planner\u00b9, NAVITIME2, LY Corporation Transit Navigation App\u00b3) have recently been collecting reports on the congestion of the trains from the passengers as shown in Fig. 1(a). Our study aims to forecast rail congestion by leveraging the reports on the congestion submitted by rail passengers.\nHowever, the passenger reports are often sparse because passengers might be reluctant to submit reports on heavily crowded trains. Thus, most data, that is, railways, stations, and time slots, lack congestion labels, making it difficult to forecast the congestion stably, especially on the date and time in which there were no passenger reports in the past.\nTo address this issue, we propose railroad-graph-based semi-supervised methodology for congestion forecasting of train, or SURCONFORT, which trains a neural network (NN) to classify the degree of congestion at a given station, date, and time. As illustrated in Fig. 1(b), the underlying idea of SURCONFORT is twofold: (1) the adoption of semi-supervised learning (SSL) for mitigating the need for labeled data, and (2) railroad network-oriented graph for complementing predictions for unlabeled data by leveraging geospatially nearby labeled stations.\nFirstly, we adopt the SSL, which has been promising in the computer vision and image classification field in recent years [10, 17, 47]. The SSL is a methodology that leverages both sparsely labeled data - data annotated with congestion labels for railways, stations, and time slots - and large amounts of unlabeled data - data in which only covariates such as railways, stations, and time slots exist - in order to achieve a high predictive performance compared to the model that is trained only by sparsely labeled data. Since the SSL requires a relationship between labeled and unlabeled data, the graph-based extraction of the relationship has been proposed in existing methods [40]. However, highly scarce labeled data makes it challenging to compose graphs or leads to the propagation of label prediction errors on the graph even if the graph could be composed.\nTo compose an effective graph, secondly, we focus on the railroad network; in other words, our approach is to forecast congestion for unlabeled data by using labeled data in geospatially nearby stations. Cai et al. have revealed that once rail congestion has occurred, it propagates through a railroad network [24]. Consequently, nearby stations are likely to have similar congestion status, while distant stations are likely to have different congestion status. To resemble nearby stations for unlabeled data, we design a railroad graph that reflects a railroad network, wherein nodes represent stations, and edges represent stations connectivity, directionality, and spatial proximity. We then apply a graph regularization to the NN with our railroad graph in order to ensure that predictions for proximate stations on the railroad graph are similar.\nEmpirical experiments demonstrate that our method's superiority in tackling the data sparsity: SURCONFORT consistently outperforms state-of-the-art methods for supervised or graph-based semi-supervised learning across the varying degrees of label sparsity. Furthermore, we conduct comprehensive case studies to discuss the benefits and limitations of SURCONFORT.\nThe contributions of this work are as follows:\n\u2022 We propose SURCONFORT for forecasting train congestion by using sparse passenger reports.\n\u2022 We build a railway graph reflecting both line connectivity and geographical proximity to ensure that predictions for proximate stations are similar.\n\u2022 We demonstrate the superiority of SURCONFORT over state-of-the-art methodologies by using actual reporting data collected through a transit application.\nIn the remaining sections that follow: Section 2 introduces the studies related to our work. Section 3 lays out the problem we are tackling and the baseline methods. Section 4 describes our proposed method. Section 5 presents the details of our experiments. Section 6 discusses our results and how our framework can be used. Finally, Section 7 concludes our study."}, {"title": "2 RELATED WORK", "content": "Railroad Congestion Estimation and Forecasting. Analysis of entry and exit records stored at ticket-checking gates is a mainstream approach to understanding railroad congestion. This stems from the fact that the ticket-checking data yield a more precise number of passengers than other types of data (e.g., ticket sales data, passenger number surveys, sensor-based data on vehicle spring pressure) [49]. Researchers extracted the origin-destination (OD) pairs from the ticket checking data and developed a method for passenger flow estimation [38, 49] and short-term forecasting [9].\nHowever, as discussed in [38], OD data do not directly provide information about the rail lines and trains used by passengers.\nThe recent popularity of mobile device-based location histories (e.g., GPS-based mobility logs) and smartphone-based sensing has enabled analyses of congestion in a city [3, 4, 12, 25, 26, 29, 32]. In particular, researchers proposed a framework for predicting crowding at stations that is based on GPS-based mobility logs and transit search logs [3, 4, 32]. However, not all people near a station use the train (e.g., they may be bus passengers or visiting shops at the station), so it cannot be assured that such data accurately reflect railroad congestion. Elhamshary et al. [12] estimated station congestion by using smartphone sensor data, including people's activity status (waiting for a train, buying a ticket, etc.) in real-time. Although compared with GPS location histories, such sensing can more accurately take into account conditions at a train station, installing sensors on each railcar would be rather costly. Moreover, some passengers might be concerned about privacy.\nApart from these approaches, Hu et al. [20, 21] proposed a forecasting framework for train congestion that uses a dataset recording traffic patterns of passengers on the MRT of San Francisco. Their study is orthogonal to ours in the following respects: First, although they used complete data on rail ridership, such data are not always available due to the costs of collection. Second, they provided short-term forecasting of congestion, i.e., 5 minutes ahead, while we can forecast farther into the future, as discussed in Section 6.1.\nCrowdsourcing and User-Generated Content. Crowdsourcing and crowdsensing are being used to gather collective knowledge in various fields of data analysis [13, 18, 42]. An example is an annotation task on a large-scale dataset. Typically, annotations are quite expensive to make, especially in deep learning and image recognition applications that require large amounts of data [11]. To address this issue, researchers have attempted to ensure both the quantity and quality of data by using crowdsourcing to meet this demand and, in some studies, by offering rewards [14, 27, 36]."}, {"title": "3 PRELIMINARIES", "content": "3.1 Description of UGC Data\nOur goal is to forecast train congestion aggregated from user posts. Users submit the level of train congestion through a transit application after searching for train routes (as shown in Fig. 1(a)). At the time of submission, the user selects the degree of congestion he/she has experienced from among four indicators (Level 1: able to sit, 2: able to stand comfortably, 3: shoulders touching, 4: unable to move). Each post consists of the last departure station, the date and time of posting, and the degree of congestion.\n3.2 Problem Formulation\nWe model train congestion based on train stations' information, dates, and time periods. Let s be a station, d be a date, and t be a time period. We define the station feature $s \\in \\mathbb{R}^S$, where S denotes the number of stations on a railway line. Moreover, we define the context feature of the date d as $c(d) \\in \\mathbb{R}^9$, which represents the day of the week and whether it is a holiday or not. As for the time periods, we divide one day into T time segments. For example, if the length of a single time period is 10 minutes, T = 144. We define the time feature of t as $t \\in \\mathbb{R}^T$. The 1-of-K encoding method is used to create these features. Finally, we define the degree of railroad congestion as the average of the user-submitted congestion levels. Its value is discretized, as $y(s,d,t) \\in C := \\{0, 1, 2, 3\\}$ at station s on date d at time t.\nBased on the above notation, we can express a collection of n samples $X = (x_1, ..., x_l, x_{l+1}, ..., x_n)$ with $x_i = [s_i, c_i, t_i] \\in X$, where a tuple of the station, date, and time (s, d, t) is represented by a data index i. The first l samples ($x_i$ for $i \\in L = \\{1, ..., l\\}$), denoted as $X_L$, are labeled according to $Y_L = (y_1, ..., y_l)$. The remaining u = n - l samples ($x_i$ for $i \\in U = \\{l + 1, ..., n\\}$), denoted as $X_U$, are unlabeled, since the number of submissions is very limited and no submission data exists for a certain station or date and time.\nOur objective is to create an effective classifier using the labeled samples $X_L$ with $Y_L$ and unlabeled samples $X_U$. This classifier is represented by a model which takes an input example from X and produces a vector of class confidence scores for the degree of congestion, denoted as $f_\\theta : \\mathbb{X} \\rightarrow \\mathbb{R}^4$, where $\\theta$ is the model parameter. The predicted degree of congestion is the one with the maximum confidence score,\n$\\hat{y_i} = \\arg \\max_j f_\\theta (x_i)_j, \\qquad (1)$\nwhere j represents the j-th dimension of the vector.\n3.3 Prerequisite Methods\n3.3.1 Baseline (1): Simple Neural Network. This model is constructed in a fully-supervised manner, i.e., only based on the labeled data $X_L$ and $Y_L$. The model is trained by minimizing a supervised loss $L_s$ of the form,"}, {"title": "4 PROPOSED METHOD: SURCONFORT", "content": "4.1 Basic Idea of SURCONFORT\nThe discussion in the previous section indicates that the critical issue for learning to predict sparse data is forming the optimal descriptor spaces in the network. Based on our similarity assumption of congestion dynamics, the descriptor space should reflect the adjacency or spatial proximity between stations.\nOur approach is to leverage the idea of graph regularization [5, 6, 48, 54] to rectify the descriptor spaces by mapping feature representations that are neighbors on the graph close to each other so the model outputs similar labels for the neighbor samples. To perform it, we use a neural graph machine (NGM) [6], which is a class of semi-supervised learning that combines neural models and graph regularization. We construct the aforementioned railroad graph and formulate the graph regularization term based on this graph. By doing so, the trained model facilitates descriptors from different inputs (i.e., representing adjacent stations) to share similar representations if they have the same degrees of congestion. A conceptual illustration of our method is shown in Fig. 4.\n4.2 Neural Graph Machine with Railroad Graph\nWe leverage the idea of graph regularization to deal with the dispersion issue discussed in Section 3. The model relies on graph theory, where each node depicts a single station and each edge represents the similarity between two stations. We define the following weighted difference of two descriptors $v_i$ and $v_j$, as follows:\n$W_G(v_i, v_j) = \\frac{1}{2} ||v_i - v_j||W_{i,j}, \\qquad (4)$\nwhere $W_{i,j}$ denotes a railroad network-oriented adjacency matrix reflecting the similarity between two stations $s_i$ and $s_j$ of the descriptors $v_i$ and $v_j$. This regularization term performs the correction of the descriptor space in a model based on the structure of the railroad network.\nTo define the similarity between two stations $W_{i,j}$, we focus on the heterogeneous properties of the railroad; that is, the dynamics of train congestion can propagate to adjacent stations. This phenomenon stems from the fact that the tracks of the railroad network connect stations. One of the simplest strategies to incorporate such an intuition into $W_{i,j}$ is to use a spatial proximity measure, such as the cosine similarity between the locations of two stations: $W_{i,j} = \\cos(\\sigma_i, \\sigma_j)$, where $\\sigma_i$ denotes the spatial embedding vector for station $s_i$ (e.g., latitude and longitude), and $\\cos(i, j) = \\frac{\\sigma_i \\cdot \\sigma_j}{||\\sigma_i|| ||\\sigma_j||}$. However, this formalization does not consider actual connections on railroads or directions (up/down) of travel on a line at a station.\nTherefore, we assume that the similarity between the two stations is represented by their connections as well as spatial proximity. To incorporate such domain knowledge into the graph regularization, we define a railroad network-oriented adjacency matrix by applying a graph cut method based on the train up/down lines as follows:\n$W_{i,j}=\\begin{cases}\n1, & \\text{if } s_i \\in \\phi(s_j) \\text{ or } s_j \\in \\phi(s_i) \\\\\n1-d/d_{max}, & \\text{if } s_i \\notin \\phi(s_j), s_j \\notin \\phi(s_i), d < d_{max} \\\\\n0, & \\text{otherwise}\n\\end{cases} \\qquad (5)$\nwhere d is the distance between station $s_i$ and $s_j$, $d_{max}$ is a predefined maxima of d to ensure the sparseness of the affinity matrix and computational efficiency, and $\\phi(s)$ is the set of stations connecting to station s.\nTo perform semi-supervised learning with the graph-regularized objective, we train the model using NGM [6]. First, the fully-supervised loss function defined in (2) is reformulated with a graph regularization term as follows:\n$L_G (X_L, Y_L; \\theta) = \\sum_{i=1}^l l_s (f_\\theta (x_i), y_i)\n+ \\sum_{i,j=0}^n \\Omega W_G(v_i, v_j) \\qquad (6)$\nwhere $\\Omega$ is a hyperparameter controlling the strength of the graph regularization. This loss function can be expanded into a semi-supervised form as follows:"}, {"title": "4.3 Conceptual Discussion", "content": "Here, we discuss why SURCONFORT works well with railroad network-oriented graph regularization. As discussed in Section 3, it is challenging to create an ideal descriptor space, i.e., a state where features are grouped by the degree of congestion, by using semi-supervised learning when labeled data are very scarce. This is because the graph construction in the label propagation method, i.e., Eq. (3), does not work well with only a small amount of labeled data as it depends on the descriptor space created by the network trained in a fully-supervised manner.\nOur idea is that instead of creating the graph only in a data-driven manner, we incorporate domain knowledge into it for label induction in accordance with Eq. (4) and rectify the descriptor space in the network in accordance with Eq. (7). In the first term of Eq. (7), the model learns the degree of congestion for the context, time of day, and station, which forms a coherent descriptor space for parts of the descriptors for the same station and date/time input. The second to fourth terms of Eq. (7) further promote coherence in the descriptor for stations that are nearby. This cohesion is effective during forecasting because the congestion tends to propagate and its degree tends to be similar at adjacent stations."}, {"title": "5 EXPERIMENTS", "content": "In this section, we describe the empirical experiments on SURCONFORT that used actual data. First, we present the datasets and model setup. Then, we describe the methods we compared SURCONFORT against, including the state-of-the-art method for label propagation. Finally, we describe the experimental results demonstrating our prediction methodology's effectiveness and sensitivity to the strength of the graph regularization.\n5.1 Experimental Settings\n5.1.1 Datasets and Experimental Setups. We evaluated the models on a dataset consisting of actual user-submitted congestion posts. This dataset was collected using the transit search engine released by LY Corporation. The application has been downloaded over 50,000,000 times 4. The dataset consists of six months' worth of records from November 1st, 2020, to May 20th, 2021. As presented in Section 3.1, each post was made after a route search was done"}, {"title": "6 DISCUSSION", "content": "6.1 Analysis of Experimental Results\nAs highlighted in Section 5.2.1, LP-DSSL, which employs label propagation and model retraining based on the SNN, did not achieve results comparable to SURCONFORT, especially in situations with sparse label data. This subpar performance of LP-DSSL can be attributed to the descriptor space, learned within the network, exhibiting a compromised intra-class distribution, thereby impairing effective pseudo-labeling.\nIn the findings of the ablation study presented in Table 2 of Section 5.2.3, we observed a progressive enhancement in prediction performance in the sequence: SNN, NGM, and finally, SURCONFORT. Such outcomes reinforce the effectiveness of both adopting semi-supervised learning and tweaking the descriptor space via graph regularization. The results also underscore the benefits of incorporating knowledge regarding station adjacencies. Although the margin of performance improvement between NGM and SURCONFORT may appear small, it can be rationalized as follows: NGM,"}, {"title": "6.2 Application using SURCONFORT", "content": "The primary objective of this study was to enhance the efficacy of the congestion forecasting system deployed in Yahoo! JAPAN's transit search application6.\nPractical Impact of Real-world Application. This system serves a crucial function, empowering users to navigate and avoid congested areas while providing organizations the data needed to mitigate overcrowding risks. Its value was particularly pronounced during the COVID-19 pandemic in Japan. The congestion forecasting system assesses transportation system congestion levels, proactively offering insights to a vast user community.\nMilestones for Deployment. This research introduced a novel framework designed to deliver more authentic congestion predictions. As it stands, the system utilizes a forecasting model proposed by Konishi et al. [32], drawing on transit search logs to estimate train passenger counts. However, the intricate nature of transit search behaviors-such as repeated searches by one user or searches that don't culminate in actual train boarding-casts doubt on the veracity of these logs as true reflections of passenger volumes. Given this perspective, forecasts rooted in the passenger reports can arguably offer a more accurate representation. In light of these findings, there's an ongoing initiative to supersede the existing forecasting mechanism with the newly proposed method."}, {"title": "6.3 Applicability to other problems", "content": "SURCONFORT offers utility across a range of problems where the graph structure of data serves as domain knowledge, especially in scenarios marked by limited labeled data. Our research zoomed in on the tangible challenge of train congestion, suggesting a strategy that leverages crowdsourced data coupled with railroad network-oriented graph regularization. However, the broader challenge of sparse crowdsourced data echoes across various domains beyond railway congestion."}, {"title": "6.4 Limitations and Future Work of SURCONFORT", "content": "We are aware that the passenger reports may reflect their subjectivity, which could be data noise in model building. Noise issues in crowdsourcing results, such as report data, have been studied extensively [19], and future research could combine such techniques with SURCONFORT to achieve predictions without passenger subjectivity.\nThis study did not account for stations that serve multiple lines. Furthermore, factors such as the ease of transferring between lines - measured by the distance between platforms - and the availability of alternative transportation options near stations should also influence the concept of \"station proximity.\" In future research, we intend to incorporate these additional details into our proximity information to further enhance prediction performance."}, {"title": "7 CONCLUSION", "content": "We presented SURCONFORT, a novel approach to forecasting rail congestion. This method leveraged congestion reports provided by passengers. In order to complement the unlabeled data by using sparse labeled data in nearby stations, we proposed a railway network-oriented graph and applied it to the semi-supervised regularization. Experimental results using actual report data showed the efficacy of the SURCONFORT. Compared to the state-of-the-art graph-based semi-supervised learning method, our model improved forecasting performance by 14.9% under the label sparsity.\nFuture work will address the passenger subjectivity in their reports by combining SURCONFORT with the data selection technique for crowdsourcing such as [19]. The distance between platforms and the availability of alternative transportation options should also be considered for constructing the robust railroad graph. We plan to incorporate such side information into our proximity metric in the railroad graph."}]}