{"title": "Pathway to Secure and Trustworthy 6G for LLMs: Attacks, Defense, and Opportunities", "authors": ["Sunder Ali Khowaja", "Parus Khuwaja", "Kapal Dev", "Hussam Al Hamadi", "Engin Zeydan"], "abstract": "Recently, large language models (LLMs) have been gaining a lot of interest due to their adaptability and extensibility in emerging applications, including communication networks. It is anticipated that 6G mobile edge computing networks will be able to support LLMs as a service, as they provide ultra reliable low-latency communications and closed loop massive connectivity. However, LLMs are vulnerable to data and model privacy issues that affect the trustworthiness of LLMs to be deployed for user-based services. In this paper, we explore the security vulnerabilities associated with fine-tuning LLMs in 6G networks, in particular the membership inference attack. We define the characteristics of an attack network that can perform a membership inference attack if the attacker has access to the fine-tuned model for the downstream task. We show that the membership inference attacks are effective for any downstream task, which can lead to a personal data breach when using LLM as a service. The experimental results show that the attack success rate of maximum 92% can be achieved on named entity recognition task. Based on the experimental analysis, we discuss possible defense mechanisms and present possible research directions to make the LLMs more trustworthy in the context of 6G networks.", "sections": [{"title": "I. INTRODUCTION", "content": "The emergence of attention networks has been a stepping stone for transformer architectures, which also led to the introduction of large language models (LLMs). More recently, LLMs are seen as the most significant advance in the field of artificial intelligence (AI) and a potential pathway to artificial general intelligence (AGI) [1]. Every tech giant is in a race to advance in the field of LLMs by leveraging generative AI (GAI). Notable examples of LLMs from the tech giants are GPT-4 from OpenAI, LLaMA-3 from Meta and PALM from Google. However, there are also new players in this field that surpass the performance of the LLMs mentioned above. These include Mistral (in collaboration with NVIDIA), DCLM from Apple, xLAM from Salesforce, v2 chat from Deepseek, Groq, Claude, SmolLM and many more. These LLMs are trained on diverse and large amounts of datasets scraped or curated from the Internet. Some LLMs focus on increasing model size, such as GPT, while others find new ways to improve the generalization of LLMs through data curation, model quantization, and innovative techniques. Examples of such LLMs are Claude, LLaMA, DCLM and Groq, which have recently outperformed GPT on various language tasks. In continuation of the above-mentioned advances in LLMs, several enterprises are leveraging pre-trained encoders of LLMs to varying degrees to develop their own customized solutions for various applications and sectors, including healthcare, education, law and industrial automation. In view of the rapid development of LLMs, it can be assumed that LLMs will soon also be deployed on edge and handheld devices. Several studies have indicated that the current iteration of 5G networks will not be able to support a plethora of services offered by LLMs. Therefore, researchers are working intensively on the next iteration of communication systems, i.e. Sixth generation (6G), to meet the above requirements [2]. Furthermore, as AI is an integral part of 6G systems, it is assumed that LLMs will be used intrinsically to optimize resources and performance while enabling human-centric customized services.\n The standardization process towards 6G systems is already progressing steadily. It is assumed that the evolution of the communication system will support distributed AI both for edge devices and within the mobile network [2]. Although many researchers argue that the edge devices will not support the use of LLMs, but with continuous breakthroughs in the field of AI, support for edge devices can be extended through distributed learning techniques such as federated learning (FL) and split learning (SL) [3]. In addition, quantization and training can be used to fine-tune an LLM on the edge devices. As proposed in [4], an LLM with 65 billion parameters can be fine-tuned with quantized low-rank adapters (QLoRA) on a downstream task within a single day, achieving comparable performance compared to other state-of-the-art (SOTA) LLMs. It can be assumed that the convergence of quantized networks, LLMs and 6G Multi-Access Edge Computing (MEC) could result in many innovative applications. Researchers have already begun to explore the mutual convergence of LLMs and 6G MEC networks, calling them \"LLMs for networks\" and \"networks for LLMs\" respectively. We illustrate a network for LLMs that corresponds to the vision of the Network for AI (NetAI) with respect to a 6G communication system in Figure 1. The NetAI vision supports LLM deployments related to the MEC architecture [2]. Various services such as smart homes, healthcare, education, emergencies, mission-critical applications and finance can be supported with the network for LLMs.\nMost research today focuses on the integration of LLMs and communication networks, which would undoubtedly bring unprecedented advances and technological innovation. However, one aspect of this technological progress is being overlooked, namely the security aspect. With all the possibilities and potential of LLMs and the 6G ecosystem, we have to ask ourselves, are LLMs trustworthy? Despite their ability to fine-tune to the downstream task, LLMs are deep neural networks that are vulnerable to privacy attacks, such as model inversion, model poisoning and membership leakage [3], [5]. The growing landscape of LLMs and their integration into communication systems therefore makes it necessary to address security concerns and the development of trustable AI encoders to safeguard the integrity of users and services in 6G systems. To the best of our knowledge, the studies have not explored the security vulnerabilities in network for LLMS (Net4LLMs), which subsequently leaves us defenseless against such attacks as we progress towards the Net4AI vision.\nTo address the above problem, in this paper, we propose to audit the trustworthiness of pre-trained AI encoders for membership leakage attacks. The membership leakage attack is an attack in which the adversary tries to find out the distribution of the training data used to train the AI encoders. Considering that the Net4LLMs will focus on fine-tuning the pre-trained AI encoders for service provisioning, the attacker will aim to determine if a data sample was used for the fine-tuning process. The fine-tuning process enables the replacement of task-specific layer in the pre-trained AI encoder to meet tasks such as questions and answers, name entity recognition and classification [5], [6]. We evaluate the trustworthiness of AI encoders against the membership inference attacks. We assume that the adversary has particularly the knowledge of the downstream task and the adversary is provided with the fine-tuned model, also known as black-box setting. We conduct experiments to evaluate the trustworthiness of the AI pre-trained encoders and to develop possible defenses to prevent the membership leakage attacks in the context of Net4LLMs. The specific contributions of this work are characterized as follows:\n\u2022 This is the first study to investigate the trustworthiness of pre-trained AI encoders for Net4LLMs.\n\u2022 Membership leakage attacks in the context of Net4LLMs are explored to assess trustworthiness.\n\u2022 Based on experimental analysis, defenses are proposed to audit trust in Net4LLMs.\n\u2022 At the end of the paper, open issues, challenges and future directions are also proposed to prevent potential adversarial attacks on LLMs."}, {"title": "II. RELATED WORKS", "content": "Recently, we have observed a plethora of advances in the field of LLMs that would be a revolution in the field of communication networks, especially in the design and development of 6G networks. Some studies have already explored and demonstrated the significance of LLMs for potential 6G applications. For example, the study in [7] proposed Net-GPT, which enables personalized services to users through generative networks while handling comprehensive network intelligence and cloud collaboration in real time. Xu et al. [8] focused on the data privacy in 6G communication systems using LLMs. The study proposed to design LLM agents based on the principle of split learning by distributing LLMs for different roles across edge devices to make user interaction efficient and collaborative. Their results show that the split learning setting was effective in improving the communication efficiency while offloading the tasks that are complex in nature to the servers for constructing global LLMs. The study in [9] emphasised that the newer LLMs must offer multimodal services, i.e. they must handle image, text and audio data in order to offer automated services. Therefore, the deployment of LLM agents in the cloud could pose challenges in terms of data privacy, high bandwidth costs and long response times. However, MEC based on 6G communication systems can address the above problems in an effective way. Lin et al. [10]also proposed a split learning framework for the deployment of LLMs in 6G networks. However, their work focused on the efficiency and effectiveness of LLMs in terms of parameter sharing, quantization, and efficient fine-tuning rather than data or model security. Nguyen et al. [5] highlighted the advantages of using LLMs in 6G networks while exploring the security vulnerabilities from an adversarial point of view. However, the discussion of model security was very abstract and brief, focusing more on the attacks on services. The study also suggested the use of blockchain technology to avoid the security threats associated with LLMs and 6G networks. To the best of our knowledge, none of the studies investigated a specific model-based attack scenario related to pre-trained AI encoders and 6G networks."}, {"title": "III. TRAINING/FINE-TUNING LLMS IN 6G", "content": "The training strategies for fine-tuning LLMs in 6G networks are shown in Figure 2. The strategies are presented in accordance with the MEC framework. The cloud layer can leverage the pre-trained AI encoders of LLMs for any of the training modes, but the downstream task would mostly be generalized when passed to the edge and user layers. However, at the edge and user layer, the customization of the LLMs can be done based on the context and resources. As can be seen from the training modes, fine-tuning the pre-trained encoder and classifier requires large amounts of computational resources. The computational resources decrease significantly when moving to the edge and user layer. In this regard, the edge and user layers can at most fine-tune/adapt the LLMs based on their application by keeping the pre-trained encoder frozen and using the final layers to update the parameters. Alternatively, they can simply freeze the entire LLM and extract only the output embeddings that are used as representative features for training deep neural networks or shallow learning methods. An example of this can be found in Figure 1 for an emergency service application where LLM's pre-trained AI encoder can be used and its parameters frozen while a limited amount of labeled data is used to train the classifier or the final layers. This would be beneficial for edge devices to fine-tune the network locally to improve communication efficiency while utilizing computing resources efficiently. As proposed in [10], the customization can be achieved through a split learning strategy, where the cloud wants to fine-tune the LLM for a specific task with respect to the communication system and splits the network into smaller networks that are trained with devices from the edge layer and the user layer. Some specific techniques such as Low Ranking Adaptation (LoRA), Quantized LORA (QLORA), Parameter Efficient Fine-Tuning (PEFT), Deep Speed and ZeRO can be used to fine-tune the LLMs. LORA uses low-rank approximations to fine-tune the LLMs for specific tasks, resulting in reduced financial and computational costs. QLORA further reduces memory utilization while fine-tuning LLMs with the LoRA technique. PEFT adjusts key parameters and uses the catastrophic forgetting technique to fine-tune LLMs with a small subset of parameters. ZeRO uses memory optimization and data parallelism techniques to fine-tune LLMs, and DeepSpeed uses the ZeRO redundancy optimizer to fine-tune LLMs in a distributed learning fashion. The above techniques can be used extensively at the user, edge and cloud layers to fine-tune LLMs for various purposes."}, {"title": "A. Security Issues in LLMs and 6G", "content": "Several studies have now highlighted the security concerns related to the behavior, architecture and design of LLM. The security concerns arise from the complexity of LLMs and the challenges associated with their deployment and training process. In addition, backdoor attacks are possible in LLMs that cannot be overcome with conventional security measures. These backdoor attacks are applicable to LLMs that are fine-tuned in a supervised manner and trained with adversarial learning or reinforcement learning. The different types of attacks in LLMs deployed within 6G networks are defined below.\n\u2022 Adversarial attacks: These attacks are carried out by manipulating data to affect the performance of the model. Adversarial attacks can generally be divided into backdoor attacks and poisoning attacks. In the former, a trigger is hidden in the model to manipulate the inference behavior, while in the latter, malicious examples are injected into the training process to deceive the model.\n\u2022 Inversion attacks: Inversion attacks are performed to reconstruct the data or to extract certain information from the model gradients. Inversion attacks include replicating the model, extracting training data, gradient leakages, feature space and stealing models.\n\u2022 Unfair exploitation and bias attack: This type of attack is related to the training data used to train or fine-tune the LLMs. The attack disproportionately adds data with a particular label to fine-tune or train the network so that the inference perpetuates biases and unintentionally learns to generate misinformation, social inequalities, reinforcement of stereotypes and discrimination in the generation of responses.\n\u2022 Instruction tuning attacks: These attacks aim to overload the system's resources in order to carry out inadvertent actions. Examples of such attacks are Denial of Service (DoS), indirect prompt injection, jailbreaking and the disclosure of guided prompts.\n\u2022 Zero-day attacks: These attacks are usually called sleeper agents because they are embedded with model weights when a particular defense method fails to eliminate them. This type of attack is usually triggered by specific events or phrases. One example of such attacks is data theft.\n\u2022 Inference attacks: Last but not least, inference attacks aim to extract sensitive information from the model, especially in the context of the training data used to fine-tune a model. Examples of such attacks are attribute inference and membership inference attack. In this paper, we focus on the membership inference attack as it can identify specific data used to train or fine-tune the model. Such information can be used to break the trust and confidentiality of the AI model and be used against the user. Other consequences of membership inference attack include breach of confidentiality, unauthorized access, identity theft and violation of privacy."}, {"title": "IV. TRUSTABLE AI ENCODERS", "content": "In this section we provide the information about the threat model, the attack scenario, the datasets used for the attack and the implementation details."}, {"title": "A. Threat Model", "content": "Before we define the threat model, we make some assumptions. We assume that the LLM is pre- trained on a large dataset capable of transforming the input (text) into embeddings. Using the pre-trained AI encoder, a downstream task is fine-tuned by a customized dataset for a specific application in 6G networks using optimization algorithms and a predefined loss function. The fine-tuned model is then able to transform the input into embeddings or classification probabilities accordingly (which differ from the original, pre-trained AI encoder). We define the attacker's purpose in this scenario as a dichotomous classification problem, where the goal is to determine whether the input provided to the pre-trained AI encoder is a member or non-member of the training dataset used for the subsequent task. In general, existing studies assume two dimensions of an attacker's background knowledge when considering membership inference attacks.\nThe first dimension assumes a black box attack, which means that the attacker has no prior knowledge of the pre-trained AI encoder architecture, but the attacker has access to the model that has been trained for the downstream task. This is considered the most realistic scenario, as in 6G AI is used as a service and the models adapted for the downstream task would be directly available to the public. The second dimension assumes that the attacker has access to a very small subset of the member training data, which can be used to create an auxiliary dataset. The auxiliary dataset can then be used to train the attack model. Studies have shown that such assumptions can be true if one infers the location and makes an educated guess about the service used in a particular area [11]. With the large plethora of diverse data available on the Internet, it is reasonable to assume that the attacker can gather meaningful data to create a shadow model for lodging membership inference attack that corresponds to a real-world environment. Considering the two dimensions, we assume in this study that the attacker has access to the downstream task model and has some knowledge of the application, which is taken into account by the pre-trained AI encoder of the LLM."}, {"title": "B. Attack Scenario", "content": "It is known that the LLM's pre-trained AI encoder can be used for feature extraction, i.e. the LLM's task of transforming the input into embedding vectors. The mapping of inputs to embeddings benefits the fine-tuning of LLMs or training with deep neural networks for a specific task. However, when the LLM is fine-tuned with the new data for a particular downstream task, it tends to memorize the data during the training process. The memorization suggests that the member data will have higher confidence values compared to the non-member data. Therefore, it can be deduced that: (i) Pre-trained AI encoders of LLMs behave differently to the member and non-member data. (ii) The behavior is propagated to the embedding vectors that are learned during fine-tuning for the downstream tasks, so that the memorization of model will be a part of the downstream model available to the attacker. We intend to use the above features to categorize whether the data is a member or a non-member of the pre-trained AI encoder. We then apply the following steps to evaluate the effectiveness of the attack for a pre-trained AI encoder.\n\u2022 Our assumptions are that the attacker has some prior knowledge of the application for which the LLM is fine-tuned. Therefore, the attacker scraps the Internet or uses publicly available datasets to create an auxiliary dataset.\n\u2022 The attacker then prepares the auxiliary dataset for training by assigning pesudolabels to the data as members and non-members. The attacker then feeds the pseudo-labeled auxiliary dataset into the downstream model. The training process is then performed to create an attack model that is capable of binary classification, i.e. categorizing the data into members and non-members.\n\u2022 Once the attack model is trained, the attacker can enter the candidate text into the attack model to determine whether the candidate text is a member or a non-member."}, {"title": "C. Dataset", "content": "In this work, we use two state-of-the-art pre-trained language models RoBERTa [12] and ALBERT [13] for our experiments. The two language models differ in their training schemes, loss functions and architectures. It should be noted that we have not trained these language models from scratch, but that we use the pre-trained language models for the attack scenario that are publicly available online\u00b9. According to the assumption considered for the attack scenario, the attacker has access to the fine-tuned model for the downstream task. Therefore, we consider two publicly available datasets, i.e., Yelp Review/AG's News/SST [14] and CoNLL2003 [15]. The first data set is intended for the task of text classification, while the second takes into account the task of Named Entity Recognition (NER). To perform the membership inference attack, we use a small portion of the Yelp Review/AG's News/SST and CONLL2003 dataset, i.e., 0.15%, of each dataset to construct the auxiliary dataset and label it as member data. We also consider other third-party datasets such as AX, CoLA and IMDB for the auxiliary dataset and label them as non-member data."}, {"title": "D. Implementation Details", "content": "To perform membership inference attack, we design a five-layer multilayer perceptron as an attack model that uses the output of the model fine-tuned to the downstream task as input. The dimensions of the first layer vary depending on the model fine-tuned to a specific downstream task. Recall, precision and F1 score are used as evaluation metrics for the performance of the attack. The attack model is trained using the ADAM optimizer with a learning rate of 1e - 5. The model is trained for 100 epochs. The auxiliary dataset was divided into two sets, i.e. a test dataset and a training dataset in a ratio of 1:5."}, {"title": "V. EXPERIMENTAL ANALYSIS", "content": "In Figure 3, we show the performance of the membership inference attack. It should be noted that Yelp Review/AG's News/SST are classification tasks with 5/4/2 classes, respectively. The baseline, random guessing, refers to the value of 0.5 for precision and recall. The attack performance shows that the two pre-trained language models achieve a minimum F1 score of 0.77 in the SST task and a maximum F1 score of 0.94 in the NER task. The results are significantly higher than random guessing, indicating that the membership leak exists in the pre-trained AI encoders.\nThe success rate of the attack raises serious concerns about the trustworthiness of LLMs and pre-trained models in 6G networks. We repeat the above experiment with a reduced auxiliary dataset, i.e., we use Yelp Review/AG's News/SST for training the attack model without considering CoNLL2003 and vice versa to observe the results. The results for this experiment are shown in Figure 4. It can be seen that the performance is still above the random guess. Furthermore, the performance degradation is about 0.12/0.096 for CONNL2003, about 0.07/0.095 for Yelp Review, about 0.06/0.075 for AG's News and about 0.105/0.074 for SST, using ALBERT and RoBERTa, respectively. The attack performance still reaches a maximum of 0.83 F1 score if the attacker only has access to the fine-tuned model for the downstream task, but does not use the part of the same datasets. This behavior confirms our assumption that the pre-trained language models memorize the data and behave differently with member and non-member data.\nAnother interesting aspect was highlighted when we examined the attack performance while varying the number of classes. Since the Yelp dataset has the highest number of classes out of the datasets we selected, namely 5, we varied the number of classes to observe the attack performance. The results of this experiment are shown in Figure 5. It can be seen that the attack performance increases as the number of classes increases. This is very interesting because it shows that the membership inference attack can extract more information from data with a higher number of categories. It also shows why the attack performance on Yelp was better than on AG's News and SST datasets, accordingly."}, {"title": "VI. ENABLING TRUST WITH PRE-TRAINED AI ENCODERS", "content": "Membership leakage and membership inference attacks have been extensively studied in the context of computer vision and image modality. Defenses against such attacks therefore include adversary regularization, differential privacy, data augmentation, adding noise to images, intentional attacks, encryption techniques, and others [3], [11]. Some of the above techniques are difficult to perform in textual modality, such as addition of noise and intentional attack initialization. Such actions can also degrade the performance of LLMs in 6G networks. Adding noise to either the data or confidence scores for classification can be used as a defense mechanism. However, studies suggest that such techniques degrade the performance of the downstream task [5].\nBased on the observations gathered from our experiments, we propose two possible defenses. The first is to reduce the size of the dataset or reduce the number of epochs to fine-tune the network. The intuition is that if the size of the dataset or the number of epochs for fine-tuning in the downstream task is increased, the pre-trained AI encoder would tend to memorize the downstream task data and thus make the membership attack stronger. In this context, we suggest using either active learning or curriculum learning, which can perform the training with less data or fewer epochs.\nThe second defense is based on the intuition \"confidence is defined by trust\" (a quote from Patrick Mosher). In this case, however, we would look at confidence and trust from the perspective of AI. We propose to use a trust evaluation module at the edge layer that could evaluate the trust of the pre-trained AI encoder or a fine-tuned LLM with a predefined metric. One of the examples of such a trust evaluation is as follows, assuming the fine-tuned LLM is trained for medical emergency services using a 6G network.\n\u2022 The LLM is fine-tuned on less number of epochs and a smaller amount of data. The responses do not ask for age or personal information. Results in 88% for the performance metric.\n\u2022 The LLM is fine-tuned on a large amount of data and high number of epochs. The responses do not ask for age or personal information. Results in 89% for the performance metric.\n\u2022 The LLM is fine-tuned on a large amount of data and high number of epochs. The responses asks for personal information. Yields 92% on performance metric.\nGiven the scenario described above, a trust module might favor the first model as it is less vulnerable to membership leakage attack. The idea is simply to prioritize a fine-tuned LLM for 6G services based on trustworthiness and confidence scores."}, {"title": "VII. OPEN ISSUES, CHALLENGES AND FUTURE DIRECTIONS", "content": "The integration of 6G and LLMs can be seen as task-oriented communication services, where integration is achieved by utilizing resources from the communication infrastructure, the edge and mobile devices. In return, users receive LLM agents that can perform certain actions, generate data or call application programming interface (API) functions. As already indicated, such integration can lead to security vulnerabilities, including the theft of personal information and more. We have emphasised the importance of a trust module for considered integration, but designing such a trust module can present some challenges. These challenges include, but are not limited to, the following.\n(i) Active Learning and Curriculum Learning approaches: One of the ways to cope with membership leakage or inference attack is to use less amount of data and number of epochs for fine-tuning. In this regard, two approaches can be opted for making this possible. The design of trust module needs to favor the model with aforementioned characteristics, however, design of such methods can be a challenge that could help in resisting the attack while not compromising on the performance.\n(ii) Multimodal LLMs: In this paper, we have focused on the LLMs that only work with text data. In reality, users opt for multimodal LLMs that can generate text, images and audio. Each modality has its own security issues when it comes to pre-trained AI encoders. However, it would be quite a challenge to design a trust module for 6G and LLMs that is suitable for different data modalities.\n(iii) User Privacy: Similar to the design of trust modules for different data modalities, training processes, architectural modifications, and encryption techniques must be used to improve user privacy. Various attacks such as model inversion, model poisoning, gradient leakages, and adversarial attacks can be used by attackers to disrupt the services and steal users' private information in 6G networks. Therefore, in addition to data modality, the trust module must also defend against various privacy attacks.\n(iv) Latency and Bandwidth Issues: We focused primarily on the trustworthiness of the pre-trained Al encoders. However, the fine-tuning of the LLMs and the deployment of the trust module could burden the services in terms of latency and increased bandwidth. In this context, the selection of suitable models for specific applications, scenarios and needs as well as optimization during deployment must also be researched.\n(v) Responsible AI: Finally, this study explores the trust module in the context of security and privacy. The trust module can be explored in the context of responsible use of AI so that hallucinations in the generation of data modality could be controlled or restricted to prevent the spread of misinformation, identity-related attacks and impersonation."}, {"title": "VIII. CONCLUSION", "content": "This article explores the use of LLM deployment in accordance with the 6G MEC framework. We evaluate the trustworthiness of fine-tuned models to be deployed as services in 6G networks. We discuss in detail about membership leakage and inference attacks with respect to the textual modality and show that the attacks are quite effective in violating user privacy. We propose possible defense mechanisms to cope with the membership inference attacks and give several open issues, challenges, and research directions for the development of a generalization trust module for LLM deployment in the 6G-MEC framework. We believe that this paper provides researchers with the foundation for developing trustworthy LLMs for services in 6G networks."}]}