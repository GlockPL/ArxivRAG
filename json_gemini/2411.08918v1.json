{"title": "Wireless Federated Learning over UAV-enabled Integrated Sensing and Communication", "authors": ["Shaba Shaont", "Tien Nguyen", "Lina Mohjazi", "Aryan Kaushik", "Dinh C. Nguyen"], "abstract": "This paper studies a new latency optimization problem in unmanned aerial vehicles (UAVs)-enabled federated learning (FL) with integrated sensing and communication. In this setup, distributed UAVs participate in model training using sensed data and collaborate with a base station (BS) serving as FL aggregator to build a global model. The objective is to minimize the FL system latency over UAV networks by jointly optimizing UAVs' trajectory and resource allocation of both UAVs and the BS. The formulated optimization problem is troublesome to solve due to its non-convexity. Hence, we develop a simple yet efficient iterative algorithm to find a high-quality approximate solution, by leveraging block coordinate descent and successive convex approximation techniques. Simulation results demonstrate the effectiveness of our proposed joint optimization strategy under practical parameter settings, saving the system latency up to 68.54% compared to benchmark schemes.", "sections": [{"title": "I. INTRODUCTION", "content": "Unmanned aerial vehicles (UAVs), commonly referred to as drones, have been revolutionizing next-generation wireless networks with their versatile capabilities including line-of- sight (LoS) connections, 3D mobility, and flexibility. UAVs can function as airborne base stations (BSs) for delivering communication, computation, and caching services to over- come traditional infrastructure limitations, while can also serve as mobile users for tasks like remote sensing, delivery services, target tracking, and virtual reality support. More recently, UAVs have been integrated with machine learning (ML) to deliver intelligent services such as classification of aerial images captured by UAV's cameras. To ensure data privacy during ML model training in UAV networks, federated learning (FL) has been recently employed where UAVs can train an ML model and only share the trained model updates to a cloud server without data exchange.\nPrevious studies have mainly focused on implementing conventional FL architectures with UAVs, where UAVs typi- cally serve as FL clients with pre-stored datasets or as aerial base stations responsible for model aggregation. More recent research, such as [1], [2], has integrated UAV deployment into the FL system, enabling UAVs to function as relays for efficient data collection from other devices or as aggregators with adaptive positioning to improve FL performance. Furthermore, much of the prior work in this domain has primarily concentrated on communication and/or computation aspects, assuming that the data for training is readily available without accounting for the data sensing process. This assumption overlooks a critical factor, as the sensing process competes with communication and computation for limited resources, which can significantly affect overall learning performance. In FL, sensing, computation, and communication are highly coupled and must be seamlessly integrated to fully unlock its potential. This has given rise to the increasingly prominent research field of integrated sensing and communication (ISAC) [3].\nSeveral studies have explored FL-UAV, FL-ISAC networks. In [4], the authors investigated a UAV-FL system for image classification in area exploration scenarios, while [5] proposed UAV-empowered wireless power transfer to enable sustainable FL-based wireless networks. The works in [6], [7], [8] studied FL-ISAC frameworks where they focus on jointly optimizing sensing, communication, and computation resource alloca- tion. Despite these research efforts, the problem of latency minimization in UAV-enabled FL system with ISAC remains under-explored. Given UAV's limited computational power and battery capacity, optimizing the round-trip ML model training latency, such as ML model training and ML model communication, is crucial to achieve efficient and timely FL while preserving UAVs' resources.\nHence, this paper studies a new latency minimization prob- lem for UAV-enabled FL with ISAC. The contributions of this paper are two-fold: (1) We formulate a new latency minimization problem for UAV-enabled FL with ISAC, by jointly optimizing resource allocation and trajectory of UAVs along with resource allocation of the BS (Section II); (2) This latency minimization problem is computationally challenging, thus we propose a new iterative optimization approach to obtain the optimal solutions by applying block coordinate descent (BCD) and successive convex approximation (SCA) techniques (Section III). Numerical simulations show the su- perior performance of our joint optimization method compared to baseline approaches (Section IV)."}, {"title": "II. SYSTEM MODEL AND PROBLEM FORMULATION", "content": "We consider a UAV-ISAC scenario where distributed UAVs collaboratively train a shared ML model with a base station\n(BS) that functions as a model aggregator. The set of UAVs is denoted by $\\mathcal{N} = \\{1,2,...,N\\}$, where each UAV $n$ is equipped with a single-antenna transceiver that can alternate between sensing and communication modes as required. This switching occurs in a time-division manner using a shared radio-frequency front-end circuit [9].\nEach UAV $n$ is assumed to sense data $\\mathcal{D}_n$ with size $|\\mathcal{D}_n| = D_n$. Moreover, we denote the union of datasets collected across all the UAVs, called global dataset, as $\\mathcal{D} = \\bigcup_{n \\in \\mathcal{N}}\\mathcal{D}_n$ with size $|\\mathcal{D}| \\approx |D|$. The procedure of the considered framework in each global FL round is summarized as follows:\n1) Each of participating UAVs senses data from the ground objects within its coverage area.\n2) Using the initial global model shared by the BS, each UAV trains its local model based on sensed data.\n3) Each UAV transmits its updated local model to the BS.\n4) The BS aggregates the received updated local models to build a new version of the global model.\n5) The BS broadcasts the aggregated global model to the participating UAVs for the next round of training.\nWe consider a three-dimensional (3D) Cartesian coordinate system where ground objects and the BS are static, with the BS at coordinates (0,0,0). Each UAV will hover overhead to sense data and train its local model. Then it flies toward the BS to upload the updated local model. To facilitate the analysis, we assume that UAV $n$ flies from its initial position $(x_n^i, y_n^i, H)$ to its final position $(x_n^f, y_n^f, H)$ at a fixed altitude $H>0$ above the ground during its operation time $T^{\\text{flight}}$. This is the commu- nication period for local model uploading and is discretized into $T$ equal time slots, where each slot is given by $\\delta t = \\frac{T^{\\text{flight}}}{T}$.\nTo guarantee the approximate invariability of the UAV's loca- tion within each slot, the slot length is chosen to be sufficiently small. Therefore, the dynamic horizontal coordinate can be defined by $q_n[t] = (x_n[t], y_n[t])$, $t \\in \\mathcal{T} \\equiv \\{1,2,...,T\\}$.\nLet $V_{\\text{max}}$ denote the maximum UAV speed. Then we have $|\\dot q_n(t^{\\text{flight}})| \\leq V_{\\text{max}}$, $0 \\leq t^{\\text{flight}} \\leq T^{\\text{flight}}$, where $\\dot q_n(t^{\\text{flight}})$ denotes the first derivative of the UAV's location with respect to $t^{\\text{flight}}$. Consequently, we have the constraint on the UAV trajectory as $(x_n[t+1] - x_n[t])^2 + (y_n[t+1] - y_n[t])^2 \\leq (V_{\\text{max}}\\delta t)^2$, where $V_{\\text{max}}\\delta t$ represents the maximum UAV displacement during each time slot $t$. It is assumed that the single-antenna ground objects cannot be served by the BS directly due to the blockage of surrounding obstacles. We further assume that all the links between UAVs and BS, as well as those between UAVs and their sensing targets, are line-of-sight (LoS) channels. Thus, the LoS channel gain between UAV $n$ and BS at time slot $t$ follows free space pathloss model, which can be given by $g_{n,Bs}[t] = \\frac{\\beta_0}{d_{n,Bs}^{(k)}[t]^2}$, where $\\beta_0$ represents channel gain at reference distance $d_0 = 1$m, and $d_{n,Bs}$ denotes distance from UAV $n$ to BS at time slot $t$.\nEach UAV $n$ has a model $w_n$ for its dataset $\\mathcal{D}_n$, which is designed to capture the relationship between the input data and its corresponding label. Each model, when trained on the dataset, yields a predicted label denoted as $\\hat y_n = w_n(D_n)$, where $\\hat y_n$ represents the predicted label generated from model $w_n$ for dataset $D_n$. We denote the local loss function for UAV $n$ as $L_n(w_n;D_n) = \\frac{1}{|D_n|} \\sum_{d \\in D_n} l(w_n;d)$, where $l(w_n;d)$ is the ML model loss function evaluated on data point $d$. Subsequently, the global loss function can be denoted as $L(w) \\overset{\\triangle}{=} \\sum_{n \\in \\mathcal{N}} L_n(w_n; D_n)$, where $w$ is defined as global model. The local model training at each UAV is carried out through a series of minibatch stochastic gradient descent (SGD) iterations. We assume that each UAV $n$ participates in $S$ SGD iterations and $K$ global communication rounds. Specifically, given a local model at UAV $n$, at SGD iteration $s$, at global round $k$ (i.e., $w_n^{k,s}$), the next local model is obtained as $w_n^{k,s+1} = w_n^{k,s} - \\eta_n^{k,s}\\nabla L_n(w_n^{k,s}; \\beta_n^{k,s})$, where $\\nabla L_n(w_n^{k,s}; \\beta_n^{k,s}) \\overset{\\triangle}{=} \\frac{1}{|\\beta_n^{k,s}|} \\sum_{d \\in \\beta_n^{k,s}} \\nabla l(w_n^{k,s}; d)$. Here, $\\beta_n^{k,s}$ denotes a mini-batch of data sampled uniformly at random from $D_n$ and $\\eta_n^{k,s}$ is the SGD learning rate. As UAV $n$ conducts $S$ SGD iterations before transmitting its updated model to the server, we let $w_n^{k,S}$ denote the final model at UAV $n$. After local training, BS receives updated models from all the participating UAVs and performs aggregation of the models as $w^{k+1} = \\frac{\\sum_{n=0}^{N} D_nw_n^{k,S}}{\\sum_{n \\in \\mathcal{N}} D_n}$. The latency for UAV $n$ in communication round $k$ comprises five parts: data sensing, local model training, local model uploading, global aggregation, and global model downloading. We explicitly formulate each of these latency components as below.\n1) Data sensing time: Each ISAC-enabled UAV performs radar sensing within its coverage area to capture radar echo signal reflected from ground targets. This signal is converted into a set of data bits used for local model training. Let us denote the unit sensing time, i.e., the time for generating a sensing sample, as $T_u$. If the number of samples generated by UAV $n$ at communication round $k$ is $D_n^{(k)}$, its data sensing time at round $k$ is given by [7]\n$\\begin{equation}\nT_{\\text{se},n}^{(k)} = T_uD_n^{(k)}.\n\\end{equation}$\nThe corresponding UAV energy consumption is\n$\\begin{equation}\nE_{\\text{se},n}^{(k)} = P_{\\text{se},n}^{(k)}T_{\\text{se},n}^{(k)} = P_{\\text{se},n}^{(k)}T_uD_n^{(k)},\n\\end{equation}$\nwhere $P_{\\text{se},n}^{(k)}$ is the sensing transmit power of UAV $n$ at round $k$.\n2) Local model training time: As the number of local iter- ations for UAV $n$ at round $k$ is $S$, its local computation time at round $k$ can be expressed as\n$\\begin{equation}\nT_{\\text{train},n}^{(k)} = \\frac{SC_n^{(k)}D_n^{(k)}}{f_n^{(k)}},\n\\end{equation}$\nwhere $C_n^{(k)}$ is the number of CPU cycles needed to execute computation of a sample in a local update and $f_n^{(k)}$ is the CPU computation capability (in cycles/s). The corresponding UAV energy consumption can be given by\n$\\begin{equation}\nE_{\\text{train},n}^{(k)} = S\\kappa_n^{(k)} C_n^{(k)}D_n^{(k)} (f_n^{(k)})^2,\n\\end{equation}$\nwhere $\\kappa_n^{(k)}$ is effective switched capacitance that depends on the hardware and chip architecture of the UAV [1].\n3) Local model uploading time: For ease of calculation, we assume that the local model size that each UAV needs to upload in every communication round at time slot $t$ is constant, which is denoted by $s_l[t]$. At time slot $t$, the local model uploading time of UAV $n$ at round $k$ is"}, {"title": "A. System Model", "content": "$\\begin{equation}\nT_{\\text{cm},n}^{(k)} = \\frac{s_l[t]}{R_n^{(k)}[t]},\n\\end{equation}$\nwhere $R_n^{(k)}[t]$ is the uplink transmission rate of UAV $n$ to BS at round $k$ at time slot $t$, which can be given by [10]\n$\\begin{equation}\nR_n^{(k)}[t] = B_n \\text{log}_2 \\left(1 + \\frac{g_{n,BS}^{(k)}[t]p_{\\text{cm},n}^{(k)}[t]}{\\sigma^2}\\right) = B_n \\text{log}_2 \\left(1 + \\frac{\\beta_0p_{\\text{cm},n}^{(k)}[t]}{\\sigma^2 d_{n,BS}^{(k)}[t]^2}\\right) = B_n \\text{log}_2 \\left(1 + \\frac{\\gamma_0p_{\\text{cm},n}^{(k)}[t]}{d_{n,BS}^{(k)}[t]^2}\\right),\n\\end{equation}$\nwhere $\\gamma_0 = \\frac{\\beta_0}{\\sigma^2}$ is the reference signal-to-noise ratio (SNR). Further, $B_n$ is the communication bandwidth allo cated for UAV $n$, $p_{\\text{cm},n}^{(k)}[t]$ is the communication transmit power of UAV $n$ at round $k$ at time slot $t$, $\\sigma^2$ is the additive white Gaussian noise (AWGN) power at the BS, and $d_{n,BS}^{(k)}[t]$ is the LoS distance between UAV $n$ and BS at round $k$ at time slot $t$ which can be given by\n$\\begin{equation}\nd_{n,BS}^{(k)}[t] = \\sqrt{(x_n^{(k)}[t])^2 + (y_n^{(k)}[t])^2 + H^2}.\n\\end{equation}$\nThe UAV energy consumption for $T$ time slots is\n$\\begin{equation}\nE_{\\text{cm},n}^{(k)} = \\sum_{t=1}^{T} T_{\\text{cm},n}^{(k)}p_{\\text{cm},n}^{(k)}[t].\n\\end{equation}$\n4) Global aggregation time: The BS aggregates uploaded local models. Accordingly, the global aggregation time at round $k$ can be written as\n$\\begin{equation}\nT_{\\text{cp},BS}^{(k)} = \\frac{C_{BS}^{(k)}D_{BS}^{(k)}}{f_{BS}^{(k)}},\n\\end{equation}$\nwhere $C_{BS}^{(k)}$ is the number of CPU cycles needed to execute the computation of a sample and $f_{BS}^{(k)}$ is the CPU computation capability (in cycles/s).\n5) Global model downloading time: The BS broadcasts the updated global models to all the UAVs over the entire frequency band. If $R_{BS}^{(k)}$ is the downlink transmission rate of BS to UAV $n$ at round $k$, then it can be formulated as\n$\\begin{equation}\nR_{BS}^{(k)} = B_{BS} \\text{log}_2 \\left(1 + \\frac{g_{BS,n}^{(k)}p_{\\text{cm},BS}^{(k)}}{\\sigma^2}\\right) = B_{BS} \\text{log}_2 \\left(1 + \\frac{\\beta_0p_{\\text{cm},BS}^{(k)}}{\\sigma^2 d_{BS,n}^{(k)2}}\\right) = B_{BS} \\text{log}_2 \\left(1 + \\frac{\\gamma_0p_{\\text{cm},BS}^{(k)}}{d_{n,BS}^{(k)}[t]^2}\\right),\n\\end{equation}$\nwhere $B_{BS}$ is the communication bandwidth that the BS uses to broadcast the global model to each UAV, $g_{BS,n}^{(k)}$ is the LoS channel gain between BS and UAV $n$ at round $k$ which is same as $g_{n,BS}^{(k)}[t]$, $p_{\\text{cm},BS}^{(k)}$ is the communication transmit power of BS at round $k$, $\\sigma^2$ is the AWGN power at UAV $n$, $\\gamma_0 = \\frac{\\beta_0}{\\sigma^2}$ is the reference signal-to-noise ratio (SNR), and $d_{BS,n}^{(k)}$ is the LoS distance between BS and UAV $n$ at round $k$ which is same as $d_{n,BS}^{(k)}[t]$. If we denote global model size as $s_g$, global model downloading time of UAV $n$ at round $k$ can be formulated as\n$\\begin{equation}\nT_{\\text{dl},n}^{(k)} = \\frac{s_g}{R_{BS}^{(k)}}.\n\\end{equation}$\nIn this work, we consider synchronous aggregation at the BS, i.e., the aggregation does not happen until the local models from all the participating UAVs arrive at the BS. Hence, the time consumption of any communication round $k$ is determined by the most time-consuming UAV, i.e.,\n$\\begin{equation}\nT^{(k)} = \\text{max}_{n \\in \\mathcal{N}} \\left\\{T_{\\text{se},n}^{(k)} + T_{\\text{train},n}^{(k)} + T_{\\text{cm},n}^{(k)} + T_{\\text{cp},BS}^{(k)} + T_{\\text{dl},n}^{(k)}\\right\\}.\n\\end{equation}$\nAccordingly, the total FL latency can be written as\n$\\begin{equation}\nT_{\\text{total}}^{\\text{FL}} = \\sum_{k=1}^{K} T^{(k)},\n\\end{equation}$\nwhere $K$ is the total number of communication rounds in the FL training process. In terms of energy consumption, the BS generally has much energy resources, while UAVs are energy constrainted devices. Hence, we focus on energy formulation for UAV, which is expressed as\n$\\begin{equation}\nE_{\\text{total},n}^{\\text{UAV}} = \\sum_{k=1}^{K} \\left\\{E_{\\text{se},n}^{(k)} + E_{\\text{train},n}^{(k)} + E_{\\text{cm},n}^{(k)}\\right\\}.\n\\end{equation}$\nFrom (14), the energy consumption of each UAV comes from three parts: energy for sensing, energy for local computation, and energy for local model uploading. The BS is typically equipped with substantial battery reserves or even connected to the power grid, making it a highly reliable infrastructure element."}, {"title": "B. Problem Formulation", "content": "This work aims to minimize the latency of the UAV-ISAC FL system. Based on the above analysis, we formulate a system latency optimization problem which aims to joinly op timize UAV trajectory $(x_n^{(k)}[t], y_n^{(k)}[t])$ and resource allocation of both UAV $(P_{\\text{se},n}^{(k)}, p_{\\text{cm},n}^{(k)}[t], f_n^{(k)})$ and the BS $(p_{\\text{cm},BS}^{(k)}$ and $f_{BS}^{(k)})$.\nProblem 1:$\\begin{aligned}\n&\\underset{\\substack{x_n^{(k)}[t], y_n^{(k)}[t],\\\\P_{\\text{se},n}^{(k)}, p_{\\text{cm},n}^{(k)}[t], \\\\p_{\\text{cm},BS}^{(k)}, f_n^{(k)} , f_{BS}^{(k)}}}{\\text{min}} & T_{\\text{total}}^{\\text{FL}} \\\\\n&\\text{s.t.} & 0 \\leq P_{\\text{se},n}^{(k)} \\leq P_{\\text{se},n}^{\\text{max}} , \\forall k, n \\\\\n&& 0 \\leq p_{\\text{cm},n}^{(k)}[t] \\leq P_{\\text{cm},n}^{\\text{max}}, \\forall k, n, t \\\\\n&& 0 \\leq p_{\\text{cm},BS}^{(k)} \\leq P_{\\text{cm},BS}^{\\text{max}}, \\forall k \\\\\n&& 0 \\leq f_n^{(k)} \\leq f_n^{\\text{max}}, \\forall k, n \\\\\n&& 0 \\leq f_{BS}^{(k)} \\leq f_{BS}^{\\text{max}}, \\forall k \\\\\n&& E_{\\text{total},n}^{\\text{UAV}} \\leq E^{\\text{max}}, \\forall n \\\\\n&&(x_n[t+1] - x_n[t])^2 + (y_n[t+1] - y_n[t])^2 \\leq (V_{\\text{max}}\\delta t)^2, \\forall n, t.\n\\end{aligned}$\nwhere $P_{\\text{se},n} = \\{P_{\\text{se}, 1}^{(k)}, P_{\\text{se}, 2}^{(k)},..., P_{\\text{se}, N}^{(k)}\\}$, $p_{\\text{cm},n}[t] = \\{p_{\\text{cm},1}^{(k)}[t], p_{\\text{cm},2}^{(k)}[t],...,P_{\\text{cm},N}^{(k)}[t]\\}$, and $f_n = \\{f_1^{(k)}, f_2^{(k)},...,f_N^{(k)}\\}$. In the above problem, $P_{\\text{se},n}^{\\text{max}}$, $P_{\\text{cm},BS}^{\\text{max}}$, $f_n^{\\text{max}}$ are maximum sensing transmit power, maximum communication transmit power, and maximum CPU computation capability of UAV $n$, respectively. $P_{\\text{cm},BS}^{\\text{max}}$, $f_{BS}^{\\text{max}}$ are maximum communication transmit power and maximum CPU computation capability of BS. $E^{\\text{max}}$ is the maximum energy consumption of a UAV. Here, (15b) and (15c) represent the feasible ranges of the sensing and the communication transmit power, respectively, due to the power budgets of UAVs. (15d) implies the constraint of the BS's transmit power. The CPU computation capability of each UAV and BS are constrained in (15e) and (15f), respectively. (15g) is on the maximum energy consumption by UAV $n$. (15h) restricts the maximum distance UAV $n$ is allowed to travel within time slot $t."}, {"title": "III. PROPOSED SOLUTION", "content": "Problem 1 is hard to solve directly due to the non- convex nature of the objective function as well as the con- straints. In order to solve Problem 1, based on the BCD technique, we divide the original optimization problem into two sub-problems. Hence, the control variables of problem 1 are divided into two blocks: UAV parameters optimization $(x_n^{(k)}[t], y_n^{(k)}[t], P_{\\text{se},n}^{(k)}, p_{\\text{cm},n}^{(k)}[t], f_n^{(k)})$ and BS parameters opti- mization $(p_{\\text{cm},BS}^{(k)}, f_{BS}^{(k)})$. Then, we acquire the solution to the original problem by solving the two sub-problems iteratively until the objective function is convergent.\nSub-problem 1:\n$\\begin{aligned}\n&\\underset{\\substack{x_n^{(k)}[t], y_n^{(k)}[t],\\\\P_{\\text{se},n}^{(k)}, p_{\\text{cm},n}^{(k)}[t], \\\\f_n^{(k)}}}{\\text{min}} & \\sum_{k=1}^{K} \\text{max}_{n \\in \\mathcal{N}} \\left(T_uD_n^{(k)} + \\frac{SC_n^{(k)} D_n^{(k)}}{f_n^{(k)}}\\\\ &+\\frac{s_l[t]}{R_n^{(k)}[t]}+T_{\\text{cp},BS}^{(k)}\\right). \\\\\n&\\text{s.t.} & 0\\leq P_{\\text{se},n}^{(k)} \\leq P_{\\text{se},n}^{\\text{max}}, \\forall k, n \\\\\n&& 0\\leq p_{\\text{cm},n}^{(k)}[t] \\leq P_{\\text{cm},n}^{\\text{max}}, \\forall k, n, t \\\\\n&& 0 \\leq f_n^{(k)} \\leq f_n^{\\text{max}}, \\forall k, n \\\\\n&& E_{\\text{total}, n} \\leq E^{\\text{max}}, \\forall n \\\\\n&&(x_n[t+1] - x_n[t])^2 + (y_n[t+1] - y_n[t])^2 \\leq (V_{\\text{max}}\\delta t)^2, \\forall n, t.\n\\end{aligned}$\nSub-problem 2:\n$\\begin{aligned}\n&\\underset{\\substack{p_{\\text{cm},BS}^{(k)}, f_{BS}^{(k)}}}{\\text{min}} & \\sum_{k=1}^{K} \\text{max}_{n \\in \\mathcal{N}} \\left(T_{\\text{se},n}^{(k)} + T_{\\text{train},n}^{(k)} + T_{\\text{cm},n}^{(k)} + \\frac{LC_{BS}^{(k)} D_{BS}^{(k)}}{f_{BS}^{(k)}} + \\frac{s_g}{R_{BS}^{(k)}}\\right), \\\\\n&\\text{s.t.} & 0\\leq p_{\\text{cm},BS}^{(k)} \\leq P_{\\text{cm},BS}^{\\text{max}}, \\forall k \\\\\n&& 0 \\leq f_{BS}^{(k)} < f_{BS}^{\\text{max}} \\forall k.\n\\end{aligned}$\nIt is clear that sub-problem 1 is non-convex due to the objective function (16a) as well as constraint (16e). Therefore, we now focus on convexification of (16a) and (16e)."}, {"title": "A. Convexity of Sub-problem 1", "content": "For the objective function, let us first introduce a slack variable $g$ such that:\n$\\begin{equation}\n\\frac{s_l[t]}{B_n \\text{log}_2 \\left(1 + \\frac{\\gamma_0p_{\\text{cm},n}^{(k)}[t]}{d_{n,BS}^{(k)}[t]^2}\\right)} \\leq g.\n\\end{equation}$\nNow we introduce 3 more slack variables $z$, $\\gamma$, and $\\alpha$, and rewrite (18) as:\n$\\begin{aligned}\n&\\frac{s_l[t]}{g} \\leq z, \\\\\n&B_n \\text{log}_2 (1 + \\gamma) \\geq z, \\\\\n&\\frac{\\gamma_0p_{\\text{cm},n}^{(k)}[t]}{\\alpha} \\geq \\gamma, \\\\\n&(x_n^{(k)}[t])^2 + (y_n^{(k)}[t])^2 + H^2 < \\alpha.\n\\end{aligned}$\nIt is evident that (18) is equivalent to the above set of equations. We now analyze the convexity of each inequality within it:\n(19a): We can equivalently write (19a) as $gz \\geq s_l[t]$ which can be expressed as\n$\\begin{aligned}\n&gz \\geq s_l[t] \\\\\n&\\Leftrightarrow \\frac{1}{4}(g+z)^2 - \\frac{1}{4}(g-z)^2 \\geq s_l[t] \\\\\n&\\Leftrightarrow (g+z)^2 - (g-z)^2 \\geq 4s_l[t] \\\\\n&\\Leftrightarrow (g+z)^2 \\geq 4s_l[t] + (g-z)^2.\n\\end{aligned}$\nIn (20), the RHS is convex and thus we only need to approxi- mate $(g+z)^2$. Using the first-order Taylor expansion, we have\n$\\begin{equation}\n(g + z)^2 \\geq (g_i + z_i)^2 + 2(g_i + z_i)(g + z - g_i - z_i).\n\\end{equation}$\nBy replacing (21) into (20), we get\n$\\begin{aligned}\n&\\frac{1}{4}\\left[(g_i+z_i)^2 + 2(g_i+z_i) (g + z - g_i - z_i)\\right] - s_l[t] \\geq \\frac{1}{4}(g-z)^2.\n\\end{aligned}$\n(19b): By using this inequality [11]\n$\\begin{equation}\n\\text{ln}(1+ z) \\geq \\text{ln}(1+ z_i) + \\frac{1}{z_i+1} \\frac{(z-z_i)^2}{z},\n\\end{equation}$\nwe approximate the LHS of (19b) as\n$\\begin{aligned}\n&\\text{ln}(1+ z) \\geq \\text{ln}(1+ z_i) + \\frac{1}{z_i+1} \\frac{(z-z_i)^2}{z \\text{ln} 2} > \\frac{\\gamma}{\\frac{z}{\\text{ln} 2}}.\n\\end{aligned}$\n(19c): We can equivalently write (19c) as\n$\\begin{equation}\np_{\\text{cm},n}^{(k)}[t] \\geq \\frac{\\alpha\\gamma}{\\gamma_0}.\n\\end{equation}$\nFor $\\alpha > 0$ and $\\gamma > 0$, we apply SCA to approximate RHS of (25) as\n$\\begin{aligned}\n&\\frac{\\alpha\\gamma}{\\gamma_0} \\leq \\frac{1}{2} \\frac{\\alpha^2}{\\alpha_i} + \\frac{1}{2} \\frac{\\gamma^2}{\\gamma_i},\n\\end{aligned}$\nwhere $\\alpha_i$ and $\\gamma_i$ are the feasible point of $\\alpha$ and $\\gamma$ at iteration $i$. Thus, (25) (equivalent of (19c)) can be convexified as\n$\\begin{equation}\np_{\\text{cm},n}^{(k)}[t] \\geq \\frac{1}{2} \\frac{\\alpha^2}{\\alpha_i} + \\frac{1}{2} \\frac{\\gamma^2}{\\gamma_i}.\n\\end{equation}$\n(19d): It is now clear that (19d) is convex that can be directly solved by CVX.\nFor the constraint (16e), we can equivalently write it as $E_{\\text{total}, n} \\leq E^{\\text{max}}, \\forall k$,\n$\\begin{equation}\n\\sum_{k=1}^{K} \\left\\{E_{\\text{se},n}^{(k)} + E_{\\text{train},n}^{(k)} + E_{\\text{cm},n}^{(k)}\\right\\} < E^{\\text{max}}, \\forall k,\n\\end{equation}$\n$\\begin{aligned}\n&\\sum_{k=1}^{K} \\left\\{P_{\\text{se},n}^{(k)} T_uD_n^{(k)} + S\\kappa_n^{(k)} C_n^{(k)}D_n^{(k)} (f_n^{(k)})^2 + \\sum_{t=1}^{T} g p_{\\text{cm},n}^{(k)}\\right\\} < E^{\\text{max}}, \\forall k.\n\\end{aligned}$"}, {"title": "B. Convexity of Sub-problem 2", "content": "From (28), it is clear that the first and the second terms of the LHS are convex, while the third term is still non-convex. By replacing (18) into (28), we get\n$\\begin{aligned}\n&\\sum_{k=1}^{K} \\left\\{P_{\\text{se}", "frac{p_{\\text{cm},n}^{(k)}[t": ""}, {"frac{p_{\\text{cm},n}^{(k)}[t": ""}, {"2}\\right": "right\\} \\leq E^{\\text{max}}, \\forall k.\n\\end{aligned}$\nNow, for $g > 0$ and $p_{\\text{cm}", "n}[t": 0, "p_{\\text{cm},n}[t": "as\n$\\begin{aligned}\n&gp_{\\text{cm}", "n}^{(k)}[t": "leq \\frac{1}{2} g_i + \\frac{1}{2} \\frac{p_{\\text{cm}"}, {"n}^{(k)}[t": ""}, {}]}