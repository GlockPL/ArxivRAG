{"title": "VINEVI: A Virtualized Network Vision Architecture for Smart Monitoring of Heterogeneous Applications and Infrastructures", "authors": ["Rodrigo Moreira", "Hugo G. V. O. da Cunha", "Larissa F. Rodrigues Moreira", "Fl\u00e1vio de Oliveira Silva"], "abstract": "Monitoring heterogeneous infrastructures and applications is essential to cope with user requirements properly, but it still lacks enhancements. The well-known state-of-the-art methods and tools do not support seamless monitoring of bare-metal, low-cost infrastructures, neither hosted nor virtualized services with fine-grained details. This work proposes VIrtualized NEtwork VIsion architecture (VINEVI), an intelligent method for seamless monitoring heterogeneous infrastructures and applications. The VINEVI architecture advances state of the art with a node-embedded traffic classification agent placing physical and virtualized infrastructures enabling real-time traffic classification. VINEVI combines this real-time traffic classification with well-known tools such as Prometheus and Victoria Metrics to monitor the entire stack from the hardware to the virtualized applications. Experimental results showcased that VINEVI architecture allowed seamless heterogeneous infrastructure monitoring with a higher level of detail beyond literature. Also, our node-embedded real-time Internet traffic classifier evolved with flexibility the methods with monitoring heterogeneous infrastructures seamlessly.", "sections": [{"title": "1 Introduction", "content": "Understanding how Internet services and resources are used is essential to support the user experience within Service-Level Agreement (SLA) [1]. Among the Internet resources, the cloud computing infrastructures, which use virtualization and handle vast amounts of data generated by users, require the entire stack monitoring from the hardware to the virtualized applications. In 2014 [2], the cloud computing paradigm evolved to Multi-Acces Edge Computing (MEC) to address the challenges of having centralized computing capabilities geographically distant from users [3].\nMonitoring these infrastructures, especially cloud computing, has become es-sential for maintaining the service's operation, yielding users' service level agree-ments [4]. Also, monitoring is critical to support visibility regarding their resource consumption behavior, enabling the prediction of outages, perform performance di-agnosis, and Service Level Agreement (SLA) violation [5, 6, 7]. Furthermore, due to the large amount of data that monitoring tools generate, it becomes challenging to find methods, frameworks, or tools that detail the status of infrastructure entities, especially bottlenecks, without causing a significant overhead on the system [8].\nBesides, monitoring heterogeneous infrastructures Methods, technologies, and monitoring strategies found in the literature are predominantly integrated with cloud provider tools or tied to a specific SLA [9, 10, 11] and do not take into account container-native monitoring [12].\nHence, this work proposes the Virtualized NEtwork VIsion architecture (VINEVI) framework for seamless monitoring of heterogeneous infrastructures and services. VINEVI provides a set of entities and technological enablers that allow moni-toring cloud infrastructures such as heterogeneous bare-metal (x64) and low-cost (AArc64) [13] architectures. VINEVI advances state of the art with a monitoring method based on Artificial Intelligence (AI) that monitors the infrastructures, consid-ering their resources and services. VINEVI enables the monitoring of network traffic volume by application class for each monitored entity and service. Additionally, this paper innovates with a framework that monitors hosted or virtualized services.\nAmong the contributions of this work, the following stand out:\nA seamless monitoring framework for network entities, hybrid infrastructures, and hosted and virtualized services;\nA traffic volume counter customizable by application class for hybrid architec-tures;\nAn assessment of the performance of CNNs as enabling technologies for real-time sampling network traffic classification.\nThis work is organized as follows. Section 2 presents the current state of the art on network monitoring. Section 3 presents the VINEVI architecture proposed in this paper, whereas the experimental setup as described in detail in Section 4. Section 5 reports results and analysis of the experimental evaluation. Section 6 concludes the paper."}, {"title": "2 Related Work", "content": "Currently, the literature presents different monitoring solutions for virtualized net-works, and infrastructures [14] [15] [16]. Some approaches focus on networks, others on infrastructures, but none rely on seamless monitoring of low-cost and high-performance infrastructures. Also, the well-known monitoring solutions lack monitoring both running on top of virtualized infrastructures or non-virtualized. This section describes some related work considering the seamless infrastructures and network monitoring capabilities.\nBorylo et al. [17] proposed and evaluated a portable monitoring module that com-bines monitoring capabilities to Network Function Virtualization (NFV), Software-defined Networking (SDN), and Cloud. Their solution architecture receives moni-toring statistics through well-known and universal interfaces with SDN controllers, Virtualized Infrastructure Manager (VIM), host, and tenants. Unlike our work, we proposed a seamless infrastructure monitoring that considers a virtualized and non-virtualized infrastructure and its services. Although, we provide fine-grained statis-tical monitoring of the entire network and infrastructure.\nIn [18] contains the description of a seamless platform based on Prometheus and Grafana for the deployment and monitoring of containers over infrastructures. Unlike our proposal, the authors focused on monitoring containers to achieve availability and OPEX reduction. Although our monitoring proposal can monitor container-based services, we go further by intelligently monitoring network traffic. VINEVI monitors bare-metal, low-cost infrastructures, network entities, and services transparently, unlike previous approaches. Similarly, we find other monitoring architectures in [18] which take into account logs [19] while [20] takes into account flow rules.\nWon & Kim [21] believe that open source tools like Prometheus and Zabbix require configuration and rely on empirical knowledge about failures, requiring ad-ministrators to set accurate thresholds for each situation. They proposed an intelligent Multi-Layer monitoring architecture based on Prometheus and machine learning to address these challenges. The authors evaluated the efficiency of some machine learning models such as Random Forest (RF), Support Vector Machine (SVM), and Deep Neural Network (DNN) for monitoring tasks. The results suggest that DNN proved to be a promising technology with reasonable accuracy for predicting CPU, RAM, and network failures. Our paper also deals with statistics gathering and proac-tive submission to related endpoints. However, the VINEVI framework thoroughly monitors the infrastructure, which can be bare-metal, low-cost, network entities, virtualized, or hosted services on top of those infrastructures.\nIn [22] we find DynAMo, an alternative monitoring approach to Prometheus that causes low computational overhead on monitored entities and services. The use case used in the evaluation refers to the communication service integrated into a railway company simulated in a software environment. Among the results reported, the low memory consumption compared to monitoring based on Prometheus stands out. Unlike the authors, VINEVI, in addition to monitoring containers in production environments, monitors the consumption of network resources of containers."}, {"title": "3 VINEVI Architecture", "content": "This work proposes a method for seamlessly monitoring bare-metal, low-cost in-frastructures and network elements. In addition to dealing with the infrastructure, our solution can deal with the services that run on these infrastructures, directly monitoring hosted, virtualized, and nested-virtualized services.\nVINEVI monitors the network elements and the traffic volume detailed by ap-plication class, services, and computing infrastructure. We present the conceptual diagram of the VINEVI framework in Fig. 1 and read it from left to right, and we see network resources, data center infrastructure, and low-cost infrastructures.\nIn the upper flow, the blue arrow refers to the collection of information about network traffic of resources and services running on the infrastructures. In Fig. 1 the s0/3 interface denotes the monitoring of the traffic volume of the router network interface, which can occur live or by samples. These samples feed the previously built [23] Packet Vision component for traffic classification based on Convolution Neural Network (CNN).\nIn the lower flow, information regarding the physical resources of the infrastructure feeds the event-driven statistics collector based on Prometheus [24]. In addition to physical information, the metrics collector receives information related to the service, depending on the service operator specifying what will be monitored from the application and pointing to the corresponding end-point. In addition to monitoring the infrastructure, VINEVI can monitor the service orchestrators of these infrastructures and the Virtualized Infrastructure Managers (VIMs).\nThe VINEVI framework combines service and resource monitoring metrics with specified traffic volume by application class. When combined, we bring novelty"}, {"title": "4 Experimental Setup", "content": "To functionally validate VINEVI, we deploy it in an experimental testbed. This testbed consisted of four (4) distinct hosts: the Monitor Server, Experimental Server, Orchestrator Server, and AI Server as in Fig. 2. Among these hosts represent the infrastructure in the VINEVI framework, the Experimental Server, a bare-metal with four vCPUs and 8 GB RAM with Ubuntu 18.04 LTS. Another type of Experimental Server admitted by VINEVI is the low-cost one. A Raspberry Pi4 is hosting virtual machines and is managed by Orchestrator Service."}, {"title": "4.1 Smart Traffic Monitoring", "content": "For VINEVI to monitor the volume of network traffic by application class, we incorporated the capabilities of CNNs into the framework through Packet Vision. Thus, VINEVI has an intelligent node agent for monitoring network traffic. We train CNNs to classify network traffic into seven (7) typical Internet classes: Bittorrent, Browsing, DNS, IoT, RDP, SSH, and VoIP. In this experimental setup we considered three (3) CNNs to classify traffic on the VINEVI framework: SqueezeNet [25], ResNet-18 [26] and MobileNetV2 [27].\nAmong these three CNNs, the SqueezeNet and MobileNetV2 architectures were explicitly designed for use in mobile and edge devices, so we hypothesized that they are good candidates to compose the VINEVI monitoring agent. SqueezeNet aimed to reduce the number of parameters through fire modules, which use the strategy of compression and expansion of activation maps in the convolution layers [25]. MobileNetV2 [27] uses separable depth convolutions, which consists of factoring the standard convolution into a depth convolution followed by a 1 \u00d71 convolution, called a point convolution.\nThe literature claims that it is not promising to embed large models such as AlexNet or VGG-16 in small devices because they demand high computational load [28]. However, we decided to investigate how the ResNet-18 architecture, which is the smallest network in the ResNet family (composed of \u2248 11 million parame-ters), behaves when embedded. ResNet is composed of residual blocks that allow accelerating convergence and better deal with the [26] overfitting problem.\nA premise of the VINEVI framework is a previous CNN training to enable traffic prediction by application class for the monitoring agent. Once the model has been trained, the CNN has uploaded to the VINEVI intelligent traffic monitoring agent for future on-the-fly predictions on the infrastructures. The Torch framework allows loading previously trained models, avoiding training bottlenecks. Furthermore, due to the hardware restrictions of low-cost infrastructures, embedding the previous trained CNN model proves to be advantageous and functionally correct.\nWe adopted this strategy to enable the smart traffic monitoring agent on RPi4 to enrich infrastructure monitoring with application class details on traffic volume. We configured PyTorch 1.10.0 to run on AArc64 and x64 hardware, thus enabling the"}, {"title": "4.2 Dataset Description", "content": "The dataset images evaluated in this paper were built from the Packet Vision [23] component, which considered the raw information carried in the packet, including header and payload. About 9645 images were obtained from Wireshark traces (pcap) from different sources. These images are categorized into seven (7) classes, as summarized in Table 1. Fig. 3 shows some images from the dataset for each class.\nAll images are in PNG format with 224 x 224 pixels size."}, {"title": "5 Results and Discussion", "content": "Considering the testbed presented above, we carried experiments to validate the VINEVI framework functionally. The objectives of the experiments were to answer the following questions:\n1. For the VINEVI testbed, which CNN outperforms regarding accuracy for real-time network traffic prediction by application class?\n2. For a real-time traffic prediction environment, where the prediction time of packets is essential, which CNN is suitable to compose the intelligent monitoring agent in AArc64 architectures?\n3. When does VINEVI intelligent monitoring agent run on x64 architectures, which CNN is best suited for traffic prediction by application classes?\n4. Is there differentiation in CPU consumption in the traffic class prediction process depending on CNN type and traffic class?\nFor VINEVI's experimental setup, and considering the dataset described above, the CNN that performed best regarding accuracy was MobileNet. The numerical results of the learning and testing process denoted that the accuracy of this CNN"}, {"title": "6 Conclusion", "content": "This work introduced the VINEVI framework for seamless monitoring of network traffic, hybrid infrastructures, and hosted or virtualized services. By combining the monitoring capabilities of well-established state-of-the-art tools [13] with artificial intelligence technologies, we enrich state-of-the-art with detailed monitoring of hybrid entities and services.\nWe proposed and functionally evaluated a counter gauge for monitoring network traffic volume by class of applications. This counter relies on CNN-based network traffic classification. In addition, we assessed the placement of the network traffic prediction agent on top of possible VINEVI monitoring architectures. We found that the traffic monitoring module must consider the underlying architecture type to load the CNN model, which takes the least time and consumes the least CPU to predict the application class of a given packet. Furthermore, seamless monitoring of infrastructures or services requires flexible solutions that are adaptable to the environment regardless of vendor, hardware, or software.\nFor future work, urges to try and validate other AI techniques for traffic prediction. In addition, we consider it essential to create standardized interfaces for infrastructure operation and automation solutions to use metrics monitored by VINEVI to positively impact metrics such as Mean Time to Failure (MTTF) or Mean Time to Recovery (MTR). Furthermore, we consider it necessary to study intelligent pooling and network sampling mechanisms for estimating traffic volume, class of applications, and others."}]}