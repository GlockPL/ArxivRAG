{"title": "Classical and Quantum Physical Reservoir Computing for Onboard Artificial Intelligence Systems: A Perspective", "authors": ["A. H. Abbas", "Hend Abdel-Ghani", "Ivan S. Maksymov"], "abstract": "Artificial intelligence (AI) systems of autonomous systems such as drones, robots and self-driving cars may consume up to 50% of total power available onboard, thereby limiting the vehicle's range of functions and considerably reducing the distance the vehicle can travel on a single charge. Next-generation onboard AI systems need an even higher power since they collect and process even larger amounts of data in real time. This problem cannot be solved using the traditional computing devices since they become more and more power-consuming. In this review article, we discuss the perspectives of development of onboard neuromorphic computers that mimic the operation of a biological brain using nonlinear-dynamical properties of natural physical environments surrounding autonomous vehicles. Previous research also demonstrated that quantum neuromorphic processors (QNPs) can conduct computations with the efficiency of a standard computer while consuming less than 1% of the onboard battery power. Since QNPs is a semi-classical technology, their technical simplicity and low, compared with quantum computers, cost make them ideally suitable for application in autonomous AI system. Providing a perspective view on the future progress in unconventional physical reservoir computing and surveying the outcomes of more than 200 interdisciplinary research works, this article will be of interest to a broad readership, including both students and experts in the fields of physics, engineering, quantum technologies and computing.", "sections": [{"title": "1. Introduction", "content": "The distance between the modern world and the world depicted in science fiction has narrowed dramatically in the last two decades. However, despite the impressive progress in the development of unmanned ground vehicles (UGVs), unmanned aerial vehicles (UAVs) and underwater remotely operated vehicles (ROVs), safe and efficient fully autonomous AI-controlled machines and robots remain elusive.\nOne of the major problems faced by the developers of autonomous platforms is high power consumption by hardware and computers that enable AI systems to communicate with the environment in a manner that mimics human reasoning and perception of the world. Indeed, the rapid progress in the development of AI systems is expected to further increase the global energy consumption since approximately 1.5 million AI server units are expected to be commissioned per year by 2027. Combined together, these devices will consume approximately 85.4 terawatt-hours of electric power annually.\nSeveral strategies have been suggested to resolve the problem of high energy consumption by AI systems. In particular, it has been demonstrated that AI systems themselves can optimise the energy consumption by forecasting supply and demand, helping prevent grid failures and increase reliability and security of energy networks that support the operation of large data centres. There is also a consensus in the research and engineering communities that many AI systems of the future will operate adhering to the principles of Green Al designed to reduce the climate impact of AI.\nHowever, even though a singe self-driving car would need to store and process small datasets compared with large amounts of data processed in data centres, the hardware of its computer may consume up to 50% of total power available onboard of the vehicle,"}, {"title": "2. What is this review article about?", "content": "In this article, we approach the problem of energy-efficient AI systems from a different point of view. We suggest a novel approach to the development of energy-efficient AI systems for autonomous vehicles and discuss the recent relevant academic publications. As schematically illustrated in Figure 1a-c, we propose to create AI systems that would exploit physical phenomena that either surround human-made machines, including aeroplanes, boats and cars, or are induced by their movement. For example, such AI systems would do certain computations employing turbulence in the atmosphere that forms behind an aeroplane or UAV. Similarly, in the case of a boat or a submersible ROV, an AI system could use water waves and other fluid-mechanical phenomena such as the formation of bubbles and vortices in water. We also demonstrate that the physical phenomena illustrated in Figure 1a\u2013c can enable unconventional, neuromorphic and approximate computing systems that are expected to play an increasingly important role in the development of autonomous vehicles.\nUnconventional computing is an approach to computer engineering that exploits the physical properties of mechanical, fluid-mechanical and living systems to perform computations. This category also includes computer architectures that are based on electron devices that are not employed in mainstream digital and analogue computers and intended to enrich the traditional Von Neumann computer architecture and the Turing machine approaches.\nNeuromorphic computers can be regarded as a subclass of unconventional computers that are built using some of the operating principles of a biological brain. While a neuromorphic computer may not be as universal as a traditional digital computer, it can solve certain practically important problems using readily affordable computational"}, {"title": "3. Reservoir computing", "content": "Neural networks employed in AI systems usually consist of thousands or millions of interconnected processing units. Each node has connections of varying strengths to other nodes in the network. The strengths of the connections is updated when the network learns to analyse large datasets.\nThis algorithm enables the AI system to mimic the operation of a biological brain that exploits a large and complex network of neural connections. Since the brain is also a dynamical system that exhibits complex nonlinear and sometime chaotic behaviour (a dynamical system is a system, of either artificial, physical or biological origin, that constantly changes its state in time), it has been demonstrated that a neural network can be constructed using the principles of nonlinear dynamics. Since in the realm of mathematics a dynamical system also employs differential equations, different kinds of nonlinear differential equations have been adopted to describe the variation of the connection strength between units of an artificial neural network.\nThis approach to the design of artificial neural network is called reservoir computing (RC). In a traditional RC algorithm (Figure 2a), the differential equation that governs the nonlinear dynamics of the system of randomly connected nodes can be written as:\n$x_n = (1 \u2212 \\alpha)x_{n\u22121} + \\alpha \\tanh(W_{in}u_n + W x_{n-1}),$\nwhere n is the index denoting entries corresponding to equally-spaced discrete time instances tn, un is the vector of Nu input values, xn is a vector of Nx neural activations, the element-wise operator $tanh(\u00b7)$ is a sigmoid activation function, $W_{in}$ is the input matrix consisting of $N_x \u00d7 N_u$ randomly generated elements, W is the recurrent weight matrix containing $N_x \u00d7 N_x$ randomly generated elements and $\u03b1 \u2208 (0,1]$ is the leaking rate that controls the speed of the temporal dynamics.\nUsing Eq. (1), one calculates the output weights $W_{out}$ by solving a system of linear equations $Y_{target} = W_{out}X$, where the state matrix X and the target matrix $Y_{target}$ are constructed using, respectively, xn and the vector of target outputs yn as columns for each time instant t\u2081. Usually, the solution is obtained in the form $W_{out} = \u05e5^{target}X^T (XX^T + \\beta I)^{-1}$, where I is the identity matrix, \u03b2 is a regularisation coefficient and $X^T$ is the transpose of X. Then, one uses the trained set of weights $W_{out}$ to solve Eq. (1) for new input data un and compute the output vector $y_n = W_{out} [1; u_n; x_n]$ using a constant bias and the concatenation $[u_n; x_n]$.\nRC systems have been successfully applied to solve many important problems, including the prediction of highly nonlinear and chaotic time series, modelling the variation of climate, understanding trends in financial markets and optimisation of energy generation. Importantly, similarly to the efficiency of the brain of some insects, which has a low number of neurons compared with a human brain, RC systems require just several thousands of neurons to undertake certain tasks more efficiently than a high-performance workstation computer running sophisticated software. This property is ideally suitable for the development of AI systems for mobile platforms, where the control"}, {"title": "3.2. Physical reservoir computing", "content": "Many physical systems and processes exhibit nonlinear dynamical behaviour and, therefore, can also be described by differential equations. Hence, as illustrated in Figure 2b, it was suggested that a computationally efficient reservoir can be created using a real-life, either experimental or theoretical, nonlinear dynamical systems. Following this idea, subsequent research works demonstrated computational reservoirs based on spintronic devices, electronic circuits, photonic and opto-electronic devices as well as mechanical and liquid-based physical systems. In the theoretical works, the demonstration of the functionality of a physical reservoir required the researchers to replace Eq. (1) by a differential equation that describes the physical system of interest (e.g., a nonlinear oscillator ). In turn, in the experimental works, the output of Eq. (1) was effectively replaced by measured traces of temporal evolution of the physical system (e.g., curves of microwave power absorption caused by the excitation of spin waves in a ferromagnetic material or optically-detected profiles of solitary waves developed on the liquid surface). Naturally, compared with the theoretical works on physical RC systems, the experimental demonstration of physical reservoirs required an extra step that included such processing procedures as signal amplification, noise filtering and data sampling. However, both theoretical and experimental works unanimously demonstrated substantial advantages of the physical RC systems over the algorithmic ones, including low poser consumption and high accuracy of forecasts while using a reservoir with a relatively small number of artificial neurons."}, {"title": "4. Reservoir computing using the physical properties of fluids", "content": "One of the first experimental demonstrations of a physical reservoir computer was a system that exploited the ripples on the surface of water contained in a tank placed on an electric motor-driven platform (for a review see, e.g., Refs. ). The ripples caused by judiciously controlled vibrations were recorded using a digital camera. Then, the images were processed on a computer and then the processed data were used as the input of the reservoir computing algorithm.\nAlthough that pioneering work clearly demonstrated the potential of liquids to perform RC calculations, for about two decades it was considered to be mostly of fundamental interest to researchers working on physics-inspired AI systems . A similar idea was exploited in the recent theoretical and experimental works, where it was suggested that the ripples created by motors can be replaced by the dynamical properties of solitary waves\u2014nonlinear, self-reinforcing and localised wave packets that can move for long distances without changing their shape.\nImportantly, those novel works demonstrated the ability of water-based RC system to do complex calculations relying only on low computational power microcontrollers (e.g., Arduino models ) that can, in principle, continuously operate for several months without the need to recharge the battery. Therefore, such systems are especially attractive for application in drones, robots and other autonomous platforms."}, {"title": "4.2. Towards Reservoir Computing with Water Waves Created by an ROV", "content": "Figure 3a shows the photographs of an experimental ROV designed to test different kinds of autonomous AI systems. The hull of ROV consists of two wing-like fins that hold two electric motors that rotate the propellers: one in the counterclockwise direction and another one in the clockwise direction. The fins are connected to a cylindrical frame that is also used as a compartment where sensing equipment, including lasers and photodetectors, can be placed. As with many commercial ROV designs, the movement of the experimental ROV is controlled via an electric cable.\nWhen both propellers rotate at the same speed, the ROV moves forward (Figure 3b). However, the ROV will turn left (right) when the speed of the left (right) motor is reduced. Thus, a moving ROV creates a wake wave whose pattern depends on the relative speed of the two motors. The temporal dynamics of the wave pattern can be sensed using two laser-photodiode pairs that measures the light reflected from the waves created by the left and right propellers (a similar detection mechanism was used in Ref. [87]). The resulting optical signals can then be converted in electric signals that are transmitted to the control unit via the cable. The waveform of the so-generated electric signals will be a function of time and it will correlate with the commands (left, right, forward and so on) given to the ROV by the operator. Indeed, as schematically shown in Figure 3b, when the ROV moves forward the waves created by both propellers are approximately the same. However, the wave patterns change when the ROV turns left or right.\nSimilarly to the seminar work Ref. [84], the differences in the wave pattern of the moving ROV can be employed to perform reservoir computations. Such computations can help predict an optimal trajectory of the ROV based on the previous inputs of the human operator and taking into account the environmental factors, including the speed of wind, temperature and salinity of water as well as the presence of obstacles such as rocks and debris. Since the ROV creates the waves that are used to predict the trajectory, the on-board reservoir computer does not consume significant energy apart from the need to power the sensors, thereby satisfying the requirements for autonomous AI systems ."}, {"title": "4.3. Physical Reservoir Computing using Fluid Flow Disturbances", "content": "The research work involving the ROV shown in Figure 3 is still in early development. However, at the time of writing, to the best of our knowledge it is the only experimental attempt to build a prototype of a water drone that employs physical processes in its environment as a means of computation (a UGV designed using similar principles is discussed in Section 5). Nevertheless, similar ideas have been explored theoretically and also tested in laboratory settings . Although the results presented in the cited papers do not involve any autonomous vehicle, in the following we will analyse them in the context of the ROV model discussed above.\nBefore discussing those results, we also highlight the proposals of physical RC systems designed to predict the trajectory of a flying drone. Although the idea of using physical processes taking place in the surrounding environment of the drone were not expressed in Ref. , the approach presented there can be extended to implement the concepts illustrated in Figure 1a, b. In this context, we remind that the discipline of fluid dynamics is concerned with the flow of both liquids and gases. This means that AI systems designed for flying and underwater drones can, in principle, exploit the same physical processes. In fact, as mentioned above, both moving airborne and underwater vehicles create vortices as they move in the atmosphere and water .\nVortices are ubiquitous in nature (e.g., they can be observed in whirlpools, smoke rings and winds surrounding tropical cyclones and tornados) and they exhibit interesting nonlinear dynamical that has been the subject of fundamental and applied research . For instance, it is well-established that when fluid flows around a cylindrical object, the physical effects known as von K\u00e1rm\u00e1n vortex street can be observed in wide a range of flow velocities. The shedding of such vortices imparts a periodic force on the object. In many situations, this force is not significant enough to accelerate the object."}, {"title": "4.4. Acoustic-based Reservoir Computing", "content": "Another promising approach to physical reservoir computing employs acoustic waves, vibrations and adjacent physical processes. Although high-frequency (MHz-range) acoustic waves have been used in the cited papers, the ideas presented in those works can be implemented using the acoustic phenomena observed in a wide range of frequencies. For example, the temporal dynamics of vortices and other disturbances created by ROVs (Figure 4b) has a spectral signature in the frequency range that spans from several tens of Hz to several hundreds of kHz. Such acoustic signals can be detected using hydrophones, sonar technologies and other well-established acoustic location techniques and then processed using an RC algorithm.\nAs with the sound radiated by a moving ship , ROVs and similar autonomous vehicles can produce a tonal (related to the blade pass frequency) acoustic disturbance"}, {"title": "5. Physical Reservoir Computing for UGVs", "content": "The preceding discussion of the fluid flow disturbances and their application in reservoir computing should also be applicable to cars, bicycles and other road vehicles that create turbulence and give rise to other physical effects that can be used in reservoir computing. However, the physical contact of road vehicles with the ground often results in unique nonlinear dynamical processes that can be employed in a physical reservoir computer, as schematically illustrated in Figure 1c.\nTo date, different AI-based approaches to terrain identification have been developed since this functionality is essential for autonomous vehicles and robots that operate in extreme and unstructured environments . Identifying the terrain surface and perceiving its texture, UGVs and robots can dynamically adjust their initial trajectory, achieving safer and more efficient navigation with the help of neural network models. Similarly to flying and underwater drones, UGVs and robots must be able to perceive the surrounding environment with high accuracy, consuming low power and using a low computational onboard computer that can process data in a real-time regime."}, {"title": "6. Adjacent technologies for onboard reservoir computations", "content": "Thus, mechanical whiskered sensors and adjacent sensor technologies open up exciting opportunities for the detection of nonlinear variations in the environment and their application in reservoir computing. In fact, different kinds of whiskered sensor\u2014optical, magnetic, resistive, capacitive and piezoelectric\u2014have also been used in underwater ROVs , which means that not only UGVs but the other types of autonomous vehicles can employ the physics of whiskered sensors for computational purposes.\nHowever, every technology has technical and fundamental limitations. For example, magnetic whiskered sensor can be sensitive to temperature fluctuations, which may renders them inefficient in certain practical situations . Moreover, from the fundamental point of view, the operation of a whiskered sensor requires the application of relatively strong magnetic fields. Subsequently, strictly speaking, such sensors are not suitable for the detection of small magnetic field variations in the surrounding environment.\nMagnetic phenomena have been widely used in the domain of reservoir computing, where a number of magnonic and spintronic RC systems have been demonstrated. Therefore, it is conceivable that a sensor located onboard of an autonomous vehicle can take a series of measurements to determine the magnetic field surrounding the vehicle, which can then be compared to the already known magnetic field maps to provide valuable information about the vehicle's location and serve as a means for reservoir computing.\nWhile certain ultra-sensitive measurement techniques developed in the field of microwave magnetism could be used to implementation this idea in practice, mostly quantum sensors that can measure small magnetic field variations with high accuracy have the potential to serve as an onboard quantum reservoir computer (Figure 1d). Indeed, a number of onboard quantum sensors have been developed and tested both in lab and real-life environments. Therefore, in the following section, we discuss the emergent quantum reservoir computing architectures that can be used to conduct complex real-time calculations onboard of autonomous vehicles."}, {"title": "7. Quantum Reservoir Computing", "content": "Developing a functional quantum computer presents numerous challenges, primarily due to the fragile nature of quantum bits (qubits). Qubits are highly susceptible to de-coherence and various forms of quantum noise, which complicates the engineering of a high-fidelity processor capable of executing quantum algorithms across an exponentially large computational space. Subsequently, robust mechanisms for precise error correction are essential for maintaining computational accuracy. Yet, these mechanisms must be suitable for applications at extremely low temperatures.\nTo resolve this problem, alternative avenues for harnessing the power of quantum physics for computational tasks have been explored. Quantum reservoir computing (QRC) is one of these approaches . QRC systems mimic the computational capabilities of the human brain by using quantum dynamics, which is an innovative approach that holds a tremendous potential to advance the research on quantum AI and neuromorphic computing . One particular advantage of QRC is low training cost and fast learning capabilities, which makes it especially efficient for processing complex data .\nEssentially, QRC is a quantum dynamical system whose quantum states are represented by the density matrices \u03c1k \u2208 \u03a4(H), where T(H) denotes the space of Hermitian, positive semi-definite, trace-one operators. Since quantum dynamics is inherently linear, the achievement of nonlinearity in QRCs requires one to careful choose the quantum observable that can produce a nonlinear input-output transformation. An efficient computational reservoir should also fulfil the echo state and fading memory conditions"}, {"title": "7.1. Spin-Network Based Reservoir", "content": "A spin-network system is a promising platform for implementing QRC algorithms. Indeed, extensive research has delved into the dynamics of spin chain networks, showcasing their potential for complex computational tasks. QRC systems utilising a quantum network of randomly coupled spins Refs. have also been demonstrated using a range of quantum technologies, including solid-state systems like quantum dots , superconducting qubits and trapped ions. Each of these platforms offers distinct advantages in terms of scalability and coherence time.\nIn the context of spin-network-based QRC, the reservoir consists of a network of quantum spins organised in a particular topology (Figure 8). The interactions between these spins govern the dynamics of the reservoir. These quantum spins can represent qubits or higher-dimensional quantum systems, providing a versatile computational platform for diverse information processing tasks. Furthermore, the network topology and the Hamiltonian parameters can be fine-tuned to optimise the performance of the reservoir for specific applications. For example, by adjusting the strength and nature of the interactions between the spins, one can control the response of the reservoir to input signals and its ability to perform different computational tasks . Such a tuneability is crucial for tailoring the reservoir to the requirements of various applications, ranging from pattern recognition and time-series prediction to more sophisticated quantum information processing tasks.\nThe concept of spin-network-based QRC system was introduced in Ref. , where the reservoir exploited the dynamical properties of a nuclear magnetic resonance spin-ensemble architecture, using a multiplexing technique to enhance its computational capabilities . The so-created QRC system utilised the intrinsic properties of a network of qubits-the fundamental two-level quantum systems that reside in a two-dimensional complex Hilbert space H\u00b2 . The state of a qubit can be described as a linear combination of linearly independent bounded operators acting on H\u00b2. These operators are formed from the tensor products of basic Pauli operators $\\{1,8z,8x,8y\\}$ for each qubit. The state of a single qubit can be visually represented on the Bloch sphere, a three-dimensional space that represents the qubit's state vector.\nThe dynamics of the reservoir layer is driven by the transverse-field Ising model and it forms a high-dimensional space. The Hamiltonian of the transverse-field Ising model typically includes the terms that represent the interaction between neighbouring qubits and an external transverse magnetic field, and it is given by\n$H = J\\sum_{i\\neq j} ^{+} h\\sum_i \\sigma\\xi,$\nwhere N is the number of qubits, h is an external magnetic field and Jij denotes the coupling strength between the qubits i and j. The evolution of such closed quantum systems is described by the time-dependent Schr\u00f6dinger equation\n$\u03c1(t) = e^{-iHt}\u03c1(0)e^{iHt},$\nwhere \u03c1 is the reservoir state, H is the Hamiltonian of the system given by Eq. 2 and \u0127 is the reduced Planck constant.\nThe reservoir employs an amplitude encoding scheme to drive its quantum states. In this approach, the state of each qubit is initialised by a set of input signals sk. The state of the qubit is reset at each time step to\n$|\\4_{sk}\\rangle = \\sqrt{1 - Sk}|0\\rangle + \\sqrt{sk}|1\\rangle,$\nrepresented by the density matrix $\u03c1_1 = |4_{sk}\\rangle\\langle\\4_{sk}|$. The updated reservoir state \u03c1 at each time step is given by\n$\u03c1k = \u03c1_1tr_1 (\u03c1_{k\u22121}),$\nwhere tr\u2081 denotes the partial trace over the state of the first qubit.\nThere exist various strategies that can be used to implement the input protocol, in-cluding strong local dissipation followed by a quantum rotation gate or projective"}, {"title": "7.2. Quantum Oscillator for Reservoir Computing", "content": "Errors caused by decoherence and noise remain a significant challenge in the field of quantum information processing . One potential solution of this challenge consists in adapting noise-resilient classical computing modalities to the quantum realm.\nFor example, the study conducted in Ref. proposed a continuously-variable QRC system based on a single nonlinear oscillator, demonstrating that such a quantum-mechanical system serves as a computational reservoir that outperforms its classical counterparts in both performance and reliability. In particular, the continuous-variable approach was implemented using a single nonlinear oscillator with the Kerr nonlinearity  (the state of this system can be described by continuous variables corresponding to its position X and momentum P quadrature). The advantage of using a continuous-variable system lies in its ability to provide a richer set of computational nodes due to the infinite-dimensional Hilbert space associated with these continuous variables, which, in turn, reduces costly repetitions required for accurate measurement of expectation values in discrete-variable quantum machine learning approaches .\nThe dynamics of a classical reservoir can be described by the differential equation\n$\\dot{a} = -iK(a - 2a*) - a - iau(t).$\nIn the case of a quantum reservoir, the Hamiltonian of the Kerr-nonlinear oscillator is\n$\\hat{H}(t) = K\\hat{a}^{+}\\hat{a}\\hat{a}^{+}\\hat{a} + au(t)(\\hat{a}+ \\hat{a}^{\\dagger})$\nand its evolution is described by the Lindblad master equation\n$\\dot{\u03c1} = \u2212i[\\hat{H}(t),\u03c1] + \u03baD[\\hat{a}]\u03c1.$\nIt has been established that a single-oscillator QRC system outperforms its classical counterpart in the task of sine wave phase estimation, primarily due to the nonlinearity of quantum measurements that is known to provide an intrinsic advantage by effectively performing nonlinear transformations on output data (for a relevant discussion of nonlinear transformation in the context of the traditional reservoir computing see Refs. ."}, {"title": "7.3. Quantum Reservoir with Controlled-Measurement Dynamics", "content": "While QRC is a promising platform for quantum information studies, as of time of writing the existing QRC models encounter execution time challenges due to the need for a repeated system preparation and measurement at each time step. To address this problem, improved QRC systems have been proposed relying on repeated quantum non-demolition measurements employed to generate time-series data and reduce the execution time. The system described in Ref. was experimentally implemented using IBM's quantum superconducting devices, and it demonstrated higher accuracy and smaller execution time compared with conventional QRC methods.\nThe concept of Temporal Information Processing Capacity was introduced into re-search practice to evaluate the computational abilities of QRC systems, highlighting the fact that an optimal measurement strength needs to be found to balance the retention and dissipation of information . In the cited paper, the proposed QRC method was applied to a soft robot over 1000 time steps, showcasing its practical utility. Initial experiments on a 120-qubit device were discussed, indicating the method's potential for scalability.\nMoreover, addressing the challenge of integrating quantum measurement while re-taining processing memory and handling large Hilbert spaces, the authors of Ref. proposed additional measurement protocols aimed to achieve optimal performance for both memory and forecasting tasks. The three proposed measurement protocols for QRC are:\nRestarting Protocol (RSP): Repeats the entire experiment for each measurement, maintaining unperturbed dynamics but requiring significant resources.\nRewinding Protocol (RWP): Restarts dynamics from a recent past state (washout time Two), optimising resources compared to RSP.\nOnline Protocol (OLP): Uses weak measurements to continuously monitor the system, preserving memory with less back-action but introducing more noise."}, {"title": "8. Conclusions and Outlook", "content": "Thus, in this article we have reviewed the recent advances in the fields of classical and quantum reservoir computing systems. Although the potential practical applications considered by us in this work are mostly limited to onboard AI systems of autonomous vehicles, the neuromorphic computational reservoirs discussed throughout the main text are expected to find numerous applications in the broad area of science and technology.\nIndeed, at present the world of AI has been enabled by well-established technologies that are about to reach their fundamental operation limits and already consume the power comparable with the annual electricity generation by a medium-size country. Subsequently, since the computational power required for sustaining the demand for novel AI units is doubling approximately every three months, humankind will soon face the problem of finding a balance between the progression of AI with the imperatives of sustainable development.\nOf course, the problem is not exclusively limited to managing the rise of AI and transitioning to green energy. In fact, since several billions of self-driving car, drones and autonomous robotic systems are estimated to enter service by 2050, each of those vehicles will require a source of energy exclusively dedicated to powering their onboard AI. Subsequently, since no current technology is able to satisfy such a high demand for lightweight and high-capacity energy sources, humans will need to invent alternative, low power consuming computational technologies.\nIn his famous talk \u201cPlenty of Room at the Bottom\" addressed to the American Physical Society in Pasadena on December 1959 , Richard P. Feynman suggested exploring the immense possibilities enabled by miniaturisation of devices, thus heralding the coming era of nanotechnologies and quantum computing. A large section of this present review article has been dedicated to computational approaches that directly benefit from the suggestions made by Feynman in that talk. Yet, standing on the shoulders of giants and rephrasing"}]}