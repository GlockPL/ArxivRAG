{"title": "MARS: A FINANCIAL Market Simulation ENGINE POWERED BY GENERATIVE FOUNDATION MODEL", "authors": ["Junjie Li", "Yang Liu", "Weiqing Liu", "Shikai Fang", "Lewen Wang", "Chang Xu", "Jiang Bian"], "abstract": "Generative models aim to simulate realistic effects of various actions across different contexts, from text generation to visual effects. Despite efforts to build real-world simulators, leveraging generative models for virtual worlds, like financial markets, remains underexplored. In financial markets, generative models can simulate market effects of various behaviors, enabling interaction with market scenes and players, and training strategies without financial risk. This simulation relies on the finest structured data in financial market like orders thus building the finest realistic simulation. We propose Large Market Model (LMM), an order-level generative foundation model, for financial market simulation, akin to language model-ing in the digital world. Our financial Market Simulation engine (MarS), powered by LMM, addresses the need for realistic, interactive and controllable order generation. Key objectives of this paper include evaluating LMM's scaling law in financial markets, assessing MarS's realism, balancing controlled generation with market impact, and demonstrating MarS's potential applications. We showcase MarS as a forecast tool, detection system, analysis platform, and agent training environment. Our contributions include pioneering a generative model for financial markets, designing MarS to meet domain-specific needs, and demonstrating MarS-based applications' industry potential.", "sections": [{"title": "1 INTRODUCTION", "content": "The primary aim of generative models is to simulate realistic effects of various actions across different contexts, such as text generation (Achiam et al., 2023) and visual effects (Brooks et al., 2024). Real-world simulators enable human interaction with diverse scenes and objects (Mialon et al., 2023), allow robots to learn from simulated experiences without physical risk (Du et al., 2023), and generate vast amounts of realistic data for training other machine intelligence (Li et al., 2023).\nResearch on real-world simulators is extensive (Zhu et al., 2024; Yang et al., 2024), but the application of generative models for virtual world simulation remains underexplored. The financial market exemplifies such a virtual world. Here, generative models aim to simulate market effects of various financial behaviors. This allows human interaction with diverse scenarios, enables trading strategies to learn without financial risk, and generates vast data for other machine intelligence in finance.\nThe foundation of this simulation is domain-specific structured data, including orders, order batches, and the Limit Order Book (LOB) (Gould et al., 2013). In financial markets, certain information, such as gaming behaviors, transactional trends, and high-resolution market dynamics, is better captured through trading orders and batches rather than text. We propose that the generation of orders, order batches, and LOBs will play a role in financial markets similar to that of language modeling in the digital world. We term our generative market model the Large Market Model (LMM), aiming to replicate the success of recent large language models.\nIn this paper, we introduce a financial Market Simulation engine (MarS) powered by LMM, addressing the domain-specific requirement of modelling orders' market impact and controllable generation"}, {"title": "2 MARS DESIGN", "content": "To achieve a truly Realistic simulation system, MarS must excel in three key dimensions: high-resolution, controllability, and interactivity.\nHigh-resolution refers to the ability of MarS to faithfully replicate the intricate dynamics of financial markets. This is why we leverage trading orders and order batches as the foundational elements of our simulations. These orders, which encapsulate the investment behaviors of market participants, allow us to accurately reproduce historical market trajectories by matching them with corresponding order matching rules. This fine-grained approach is essential for creating simulations that are not just realistic but deeply reflective of actual market conditions.\nControllability in MarS is about offering the flexibility to simulate a wide range of market scenarios and circumstances. Whether studying market trends, monitoring potential risks, or optimizing"}, {"title": "2.1 CONDITIONAL TRADING ORDER GENERATION", "content": "We denote an order clip as a sequence of trading orders $x = (x_0,...,x_n)$. Both controllable and interactive characteristics can be formed in the conditions of a conditional generation process of x. In MarS, the full condition list contains four parts:\n1.  DES_TEXT provides a vague description of the desired market scenario for x (e.g., \"price bump\" or \"volatility crush\u201d), fulfilling the controllable characteristic of MarS.\n2.  $(x_{i+1},..., x_{i+j})$ represents j interactive orders injected by the user after the i-th generated order, forming the i + 1 to i + j orders in x. If j = 0, there is no interactive order between $x_i$ and $x_{i+1}$ in x. This fulfills the interactive characteristic of MarS.\n3.  $(x_0,...,x_m)$ represents m orders as the starting sequence of the target generated order sequence x. A common scenario is using the most recent real orders as a condition to generate subsequent orders as a forecast. This enables simulation based on historical/recent real markets, crucial for practical applications of MarS.\n4.  MTCH_R represents the matching rules of trading orders x, which vary slightly between financial markets. It defines the feasible space of each order in x and indicates the specialty"}, {"title": "2.2 LARGE MARKET MODEL FOR MODELLING THE FINANCIAL MARKET", "content": "The Large Market Model (LMM) is designed with a robust architecture that integrates two complementary modeling approaches: Order Sequence Modeling and Order-Batch Sequence Modeling. These approaches are combined into an ensemble model to leverage their individual strengths while addressing the complexities of financial market simulations."}, {"title": "2.2.1 FRAMEWORK DESIGN OF LARGE MARKET MODEL", "content": "\u2022\tOrder Sequence Modeling. To accurately capture market dynamics and the impact of individual orders, we employ a causal transformer on the order sequence. Each order is encoded along with its preceding Limit Order Book (LOB) information as a single token using a custom design. This approach allows the model to reflect the sequential nature of market orders, ensuring that each order's context within the broader market activity is preserved. The causal transformer enables the generation of order sequences that realistically mirror the flow and impact of trades within the market.\n\u2022\tOrder-Batch Sequence Modeling. While order sequences capture the flow of individual trades, financial markets also exhibit structured patterns over aggregated time intervals, such as minutes or hours. To model these patterns, we apply an auto-regressive transformer to order-batch sequences. This approach aligns the control signals at each time step and adheres to realistic time series patterns. Orders within a specific time step are grouped into batches and converted into a structured representation that captures the overall market behavior during that period. A two-step tokenization and sequence modeling approach is then applied, ensuring that the generated order batches maintain coherence and continuity over time.\n\u2022\tEnsemble Model for Orders and Batches. The distinct advantages of order sequence modeling and order-batch sequence modeling necessitate their integration into a cohesive framework. The ensemble model we designed combines these two approaches, enabling improved market modeling and generation. It achieves this by balancing the fine-grained control of individual orders from the order model with the broader market dynamics captured by the order-batch model. This integration ensures that the generated market simulations are both detailed and contextually accurate, reflecting realistic market conditions.\n\u2022\tFine-grained Signal Generation Interface. To enhance the controllability of MarS, we introduce a fine-grained signal generation interface. This interface can map vague descriptions in natural language or general configurations to fine-grained series of control signals. We provide an implementation that leverages LLM-based historical market record retrieval to generate precise control signals (e.g., price, volume) from vague descriptive prompts, such as DES_TEXT. These signals guide the ensemble model, ensuring that the simulations not only follow realistic market patterns but also adhere to specific user-defined scenarios. This capability is crucial for stress testing, strategy optimization, and scenario analysis, making MarS a versatile tool for financial market simulations."}, {"title": "2.2.2 SCALING LAW IN LARGE MARKET MODEL", "content": "In the design of our four-part foundation model, we employ both an auto-regressive transformer for the order-batch sequence and a causal transformer for the order sequence. These components utilize standard pre-training techniques commonly applied in foundation models, including those used in language modeling (Kaplan et al., 2020) and vision modeling (Zhai et al., 2022)."}, {"title": "2.3 MARS ORDER GENERATION COMBINED WITH SIMULATED CLEARING HOUSE", "content": "After pre-training LMM, realistic order streams for market simulation can be generated. A simulated clearing house matches both generated and interactive orders, providing extensive information (e.g., limit order book) for subsequent order generation. This clearing house merges generated and interactive orders in real-time. For example, after generating order $x_i$, the clearing house waits for j interactive orders (j > 0). The order match engine sequentially matches $x_i$ with the j interactive orders, then sends the matching results back to LMM for generating the next order $X_{i+j+1}$.\nThe trade-off between market impact and control signal is crucial for realistic simulation and achieving the three characteristics of MarS. We adhere to two guiding principles to ensure a realistic trade-off, applying them in the order-batch generation process.\n\u2022\t\"Shaping the Future Based on Realized Realities\". At each time step, order-batch model generates the next order-batch based on recent data from the simulated clearing house.\n\u2022\t\"Electing the Best from Every Possible Future\u201d. At each time step, multiple predicted order-batches are generated. The best match to the fine-grained control signal is selected, enabling soft control of order-batch generation.\nThe order-level transformer, trained on historical orders, naturally learns market impact for subsequent order generation. Concurrently, the ensemble model influences order generation, aligning with the generated next order-batch. Figure 3 illustrates the generation process, balancing market impact and control signals to form a realistic simulation."}, {"title": "3 EXPERIMENTS", "content": "This section evaluates MarS's capability to provide realistic, controllable, and interactive simulations. We assess the realism of MarS by comparing the statistical properties (stylized facts) of historical market data with simulated data, demonstrating MarS's ability to replicate key market"}, {"title": "3.1 REALISTIC SIMULATIONS", "content": "To assess the realism of MarS's market simulations, we compare simulated data against key stylized facts derived from historical market data (Vyetrenko et al., 2020; Coletta et al., 2022; Sherkar & Sen, 2023; Stillman et al., 2023). These stylized facts serve as robust benchmarks, ensuring that our simulations accurately reflect real-world market behaviors. Several prevalent stylized facts are presented in Figure 4. Key findings are as follows:\n\u2022\tAs the interval increases from 1 to 5 minutes, the distribution of log returns becomes more similar to a normal distribution (Aggregational Gaussianity).\n\u2022\tThe auto-correlation of log returns rapidly decreases with increasing intervals (Absence of Autocorrelations).\n\u2022\tThe simulation shows high volatility auto-correlation over periods (Volatility Clustering).\nIn summary, MarS successfully replicates the stylized facts observed in historical data, thereby demonstrating its capability to produce highly realistic market simulations that are suitable for practical applications."}, {"title": "3.2 CONTROLLABLE SIMULATIONS", "content": "We demonstrate MarS's controllability by generating scenarios that mirror replays. An order batch is generated based on minute-level guiding signals from the replay curve, integrated with the order model within an ensemble model to generate trading orders. Figure 5 (Left) shows that the ensemble model closely follows the replay curve, whereas the order model shows less correlation. Figure 5 (Left) illustrates that the simulated curves more accurately follow the replay curve, demonstrating a higher correlation, after the controlled refinement by the Ensemble Model during the order generation process.\nWe further compare the correlation between simulated and replay prices with different simulated trajectory numbers. Figure 5 (Right) shows the ensemble model, even with a single simulated trajectory, achieves higher correlation than the order model with 128 simulated trajectories, demonstrating its superior efficiency and effectiveness in generating controllable scenarios."}, {"title": "3.3 INTERACTIVE MARKET DYNAMICS", "content": "Understanding market impacts is crucial for a wide range of applications. MarS allows for the simulation of market impacts by generating orders based on detailed order-level data. By interacting with a TWAP (Time-Weighted Average Price) agent, we demonstrate how MarS can realistically simulate the market impact of large trades within a short time window.\nFigure 6 (Left) shows the market impact of a TWAP agent executing a large trade volume. The agent aims to purchase 100,000 units of shares within a 5-minute window, with the figure displaying the price trajectories and trading order details. These results illustrate that MarS can effectively model the impact of trading strategies on market prices, providing valuable insights for market participants and aiding in the development of more robust trading strategies."}, {"title": "3.4 TRADE-OFF BETWEEN CONTROL AND INTERACTION", "content": "We evaluate the ability of MarS to balance control and interaction using replay data exhibiting a 0.3% to 0.5% price change over 5 minutes. Our control target is to generate a similar price change scenario. When control is enabled, the ensemble model is guided by the replay curve. When interaction is enabled, a TWAP agent sells 20% to 40% of the replay volume within the same timeframe. We report the correlation between simulated and replay prices under different configurations.\nFigure 6 (Right) illustrates the trade-off between control and interaction. Configurations with control but no interaction achieve the highest correlation scores (0.47), indicating model precision in replicating historical price movements. Introducing interaction reduces control precision (0.47 \u2192 0.33), allowing for more realistic interactions in diverse applications and experiments."}, {"title": "4 APPLICATIONS", "content": "In Sections 2 and 3, we demonstrated the formulation of diverse financial tasks as a conditional trading order generation problem. Our experiments confirmed that MarS is Realistic, Controllable, and Interactive, establishing it as a robust financial market simulator. This section explores potential downstream applications of MarS, further validating its foundational role in financial market simulation. We present practical financial tasks to illustrate: a) MarS's capability to solve financial problems independently, and b) its utility as a simulation platform for other tasks. For a), we showcase Forecast and Detection tasks, and for b), we provide examples of \"What if\u201d Analysis, and Reinforcement Learning Environment.\nHere, we want to highlight that, analogous to text generation v.s. language modeling (Achiam et al., 2023; Abdin et al., 2024; Dubey et al., 2024), and video generation v.s. physical world decision making (Liu et al., 2024; Yang et al., 2024; 2023a), we have constructed a unified task interface"}, {"title": "4.1 FORECASTING", "content": "Forecasting is crucial in many financial applications, with market trend forecasting being a prime example. This task demands models that accurately capture and reflect market dynamics. Traditionally, direct forecasting models are used. In this section, we assess the effectiveness of our market simulation in predicting trends.\nFollowing Ntakaris et al. (2018), we define the price change from t to t + k minute as follows: $l= ((\u2211_{i=1}^n m_i ) \u2013 m_0 ) /m_0$, where $m_0$ is the mid-price at time t, n is the number of orders between t and t + k minutes, and $m_i$ is the mid-price after the ith order event. The price change is categorized into three classes-up, down, and flat-based on the value of l, ensuring similar probabilities for each class. We compare our model with DeepLOB by Zhang et al. (2019), a well-known baseline. Figure 7 illustrates that LMM-based simulations significantly outperform DeepLOB, highlighting its superior market dynamics understanding. Additionally, the 1.02 billion-parameter model outperforms the 0.22 billion-parameter model, indicating that improved validation loss in scaling curve (Fig. 2) correlates with enhanced forecasting performance.\nIt is noteworthy that all forecasting targets can be calculated using simulated trajectories from MarS, whereas traditional direct forecasting models require separate training for each target. This underscores the significant advantage of simulation-based forecasting by MarS."}, {"title": "4.2 DETECTION", "content": "In addition to forecasting future trends, comprehending the current and recent market conditions constitutes a significant category of financial tasks. Regulation particularly market abuse\u00b9 regulation holds a crucial position in this type of tasks.\nHowever, traditional methods for detecting illegal trading activities (e.g., insider trading (Meulbroek, 1992) and market manipulation (Putni\u0146\u0161, 2012)) requires a significant amount of time and effort,"}, {"title": "4.3 \"WHAT IF\" ANALYSIS ON MARKET IMPACT", "content": "One of the most important 'what if' topics in finance is analyzing market impact, the change in asset prices caused by trading activity, which is crucial for understanding and navigating financial markets, e.g., developing optimal trading strategies and detecting manipulation. Most existing research in this area is relied heavily on strong assumptions and empirical formulas (Zarinelli et al., 2015; Almgren et al., 2005; Gatheral, 2010; Gatheral et al., 2012; 2011), limited to costly and risky online experiments. In this section, we take the market impact as an example, showing how MarS can act as a reliable and powerful analysis platform and contribute to \u201cwhat if\u201d analysis. First, we explore the market impact data generated by MarS under various configurations and validate the consistency"}, {"title": "4.3.1 EXPLORATION AND VALIDATION OF GENERATED MARKET IMPACT", "content": "We generate market impact data by the TWAP strategy with four different configurations: L1-P0.1, L1-P0.9, L5-P0.1, and L5-P0.9. The configuration name LX-PY indicates that the aggressive price (AP) is askX and the maximum passive volume ratio (PVR) is Y. These agents are assigned to buy varying volumes over 5 minutes with different instructions and starting times.\nWe explored the market impact generated by these trading agents from 624k simulated trading trajectories. The key findings are summarized as follows:\n\u2022\tAs shown in Figure 9 (left), despite the different configurations, the synthetic market impact follows a pattern similar to the Square-Root-Law market impact model: $\u0394 = \u03b1\\frac{Q}{V} \u03c3 \u221a\u03a9$ where o is the volatility, Q is the trading volume, V is the total market volume, and a is a constant. The Square-Root-Law is widely regarded as the gold standard for testing market impact in the financial industry, known for its broad applicability and significance in capturing the relationship between trading activity and price changes (Moro et al., 2009; Lillo et al., 2003; Almgren et al., 2005).\n\u2022\tAgents with more aggressive configurations (L5-P0.1 and L5-P0.9) are expected to exhibit a larger market impact and achieve a higher fulfillment rate. Our simulations quantify their differences and confirm these assumptions, as illustrated in Figure 9 (left and middle).\n\u2022\tThe agents generate both short-term and long-term market impacts, consistent with previous empirical studies (Bacry et al., 2014; Donier et al., 2015b). We also observe that agents with a larger passive volume ratio generate less momentum after trading ends, as shown in Figure 9 (right).\nThese findings not only confirm the robustness of MarS but also highlight the reliability and convenience of using synthetic data generated by MarS for market impact analysis, allowing for in-depth exploration of market dynamics without the cost, risk, and time constraints associated with real-world experiments."}, {"title": "4.3.2 DISCOVER NEW LAWS OF MARKET IMPACT", "content": "Market impact mechanisms are complex and difficult to predict accurately due to noise and randomness in observed data. Using synthetic data from MarS, we aim to establish a data-driven pipeline to uncover new interpretable laws. Specifically, we seek new factors beyond the Square-Root-Law that strongly influence market impact during trading, and we aim to learn a differential equation (DE) to"}, {"title": "Dynamics of Second-order Market Impact:", "content": "The second order of market impact typically manifests as a gradually decaying sequence of price fluctuation after a trade. Traditional research has often relied on empirical formulas to model this dynamics (Gatheral et al., 2011; Donier et al., 2015a; Bacry et al., 2015), but these approaches can struggle to capture the full complexity of real-world scenarios. To address this, we leverage generated market impact data to develop a more accurate, data-driven approach. Our method models the decay of market impact using an ordinary differential equation(ODE), which integrates both potential influencing factors and decay functions:\n$\\frac{dY(t)}{dt} =\u2211_{i=1}^m (W \u2299 (X \u2297 F_{decay} (t))) = \u2211_{i=1}^m\u2211_{j=1}^n WijX_iF_{decay}^j (t)$ (1)\nwhere Y(t) is the after-trading market impact, $(X \u2208 R^m)$ represents key influencing factors, such as volume, price, etc., and $F_{decay}(t): t \u2192 R^n$ includes possible decay functions, e.g., $F'decay (t) = [1/t, . . ., 1/sqrt(t)]$. Both X and $F_{decay}(t)$ can be customized based on domain knowledge. \u2297 is the outer product, \u2299 is the Hadamard product, $X^T \u2297 F_{decay} (t)$ is a matrix with size $R^{n\u00d7m}$, representing interactions among factors and decay patterns, and W \u2208 $R^{n\u00d7m}$ is the learnable weights"}, {"title": "4.4 REINFORCEMENT LEARNING ENVIRONMENT", "content": "The MarS environment, being both realistic and interactive, is ideal for training reinforcement learning (RL) agents. This environment accurately reflects an agent's impact, provides realistic rewards, and facilitates training robust agents for the financial market. In this experiment, we aim to train a trading agent from scratch using MarS. The trading agent's goal is to purchase a large volume within 5 minutes, optimizing both fulfillment rate and price advantage.\nThe trading agent's state includes features such as remaining time, remaining volume, Limit Order Book (LOB) imbalance, and whether the period is passive or aggressive. The agent's actions are based on a configurable Time-Weighted Average Price (TWAP) strategy, adjusting the maximum passive volume ratio (PVR) from {0, 0.1, ..., 1} and aggressive price (AP) in {0, 1, 2, 3, 4, 5} for each trading part. A PVR of 0 indicates no passive volume during the passive period, while an AP of 0 means no aggressive order during the aggressive period.\nThe reward function is defined as:\nReward = a \u00d7 FulfillmentRate + PriceAdvantage (2)\nwhere a is 1 when the FulfillmentRate < 0.95 and decreases to 0 as the FulfillmentRate approaches 1.\nFor training, we used a batch size of 8192 and a learning rate of 4 \u00d7 10-5. The trading model was updated using a simple policy gradient algorithm (Sutton & Barto, 2018). The performance metric is the price advantage over our best-configured TWAP agent (L1-P0.9), measured in basis points (BP, 1/10000). Figure 12 shows the training performance of the trading agent. The agent's performance improves from -6 BP to 2~6 BP during training. The observed fluctuations between 2~6 BP are attributed to the agent exploring various strategies between high and low fulfillment rates, resulting in corresponding variations in price advantage based on the current reward setting.\nThis demonstration highlights that MarS is capable of training trading agents from scratch by leveraging its realistic and interactive simulation capabilities. A more comprehensive training design could yield even stronger performance."}, {"title": "5 RELATED WORKS", "content": "Financial Market Simulation. Prior to this tech wave of generative foundation models, researchers in the finance area had already envisioned the immense potential of powerful market simulations."}, {"title": "6 CONCLUSION", "content": "We propose MarS, an order-level fine-grained realistic financial market simulation, powered by our a generative foundation model Large Market Model. As far as we know, this paper is the first attempt to evaluate the scaling capability in financial order generation. The evaluation of LMM's scaling law demonstrate the potential of further enhancement of the order generation for financial markets. We also summarized the three key characteristics (i.e., realistic, controllable and interactive) for various financial downstream tasks and designed a framework to address these characteristics. Four types of downstream tasks are demonstrated in the application which we hope inspire the community and industry for this promising direction of financial world model and simulation for various downstream applications."}]}