{"title": "A Metric Hybrid Planning Approach to Solving Pandemic Planning Problems with Simple SIR Models", "authors": ["Ari Gestetner", "Buser Say"], "abstract": "A pandemic is the spread of a disease across large regions, and can have devastating costs to the society in terms of health, economic and social. As such, the study of effective pandemic mitigation strategies can yield significant positive impact on the society. A pandemic can be mathematically described using a compartmental model, such as the Susceptible-Infected-Removed (SIR) model. In this paper, we extend the solution equations of the SIR model to a state transition model with lockdowns. We formalize a metric hybrid planning problem based on this state transition model, and solve it using a metric hybrid planner. We improve the runtime effectiveness of the metric hybrid planner with the addition of valid inequalities, and demonstrate the success of our approach both theoretically and experimentally under various challenging settings.", "sections": [{"title": "Introduction", "content": "A pandemic is the spread of an infectious disease across large regions, and can incur devastating costs to the society in terms of health, economic and social. A pandemic can be mathematically described as a compartmental model, such as the Susceptible-Infected-Removed (SIR) model. (Kermack and McKendrick 1927; Bailey 1975) The SIR model categorizes each individual in the population into three compartments, namely: either Susceptible, Infected or Removed, and uses a system of partial differential equations (PDEs) to describe the interaction between these compartments. As visualized in figure 1, the purpose of a pandemic planning problem is to find a solution that keeps the number of removed individuals under a certain threshold while also keeping the number of infected individuals under a certain threshold (i.e., without overwhelming the healthcare system) over some duration (e.g., until vaccinations are expected to become available), by deciding on the selection, timing and duration of effective mitigation decisions (e.g., lockdowns).\nAutomated planning formally reasons about the selection, timing and duration of actions to reach desired states of the world as best as possible. (Nau, Ghallab, and Traverso 2004) Automated planners have significantly improved the ability of autonomous systems to solve challenging tasks such as, traffic control (McCluskey and Vallati 2017), smart grid control (Thi\u00e9baux et al. 2013), Heating, Ventilation and Air Conditioning (HVAC) control (Say et al. 2017), and Unmanned Aerial Vehicles (UAV) control (Ramirez et al. 2018). While automated planning has been shown to successfully control many physical systems, the control of pandemics still presents non-trivial challenges to many of the existing automated planners mainly due to the complexity of the underlying system of equations that govern the evolution of the spread of the disease over time, which demands constrained and combinatorial sequential reasoning over PDEs.\nA common approach to sequential decision making with a PDE-based model is to discretize the time and approximately update the state of the world with each discrete increment of time. (Morari, Garcia, and Prett 1988; Li and"}, {"title": "Background", "content": "We begin by presenting the definition of the metric hybrid planning problem that will be used to formalize the pandemic planning problem, a metric hybrid planner for solving the pandemic planning problem, and the SIR model that will form the basis of the pandemic planning problem."}, {"title": "The Metric Hybrid Planning Problem", "content": "A metric hybrid planning problem (Say and Sanner\n2018a, 2019; Say 2023) is defined as a tuple \u03a0 =\n(S, A, \u0394, CI, CT, T,V, G, R, H) where\n\u2022 $S = \\{s_1,...,s_n\\}$ is the set of state variables with bounded domains $D_{s_1},...,D_{s_n}$ for positive integer $n \\in Z^+$,\n\u2022 $A = \\{a_1,...,a_m\\}$ is the set of action variables with bounded domains $D_{a_1},...,D_{a_m}$ for positive integer $m \\in Z^+$,\n\u2022 \u0394\u2208 [\u03f5, M] is the duration of a step for positive real numbers \u03f5 \u2208 R+ and M \u2208 R+ such that \u03f5 < M,\n\u2022 CI: $\u03a0_{i=1}^{n} D_{s_i} \\times \u03a0_{i=1}^{m} D_{a_i} \\times [\u03f5, M] \u2192 R$ is the instantaneous constraint function that is used to define the constraint $C_I (s_1,..., s_n, a_1,..., a_m, t) \u2264 0$ for all steps $t \\in \\{1, ..., H\\}$,\n\u2022 CT: $\u03a0_{i=1}^{n} D_{s_i} \\times \u03a0_{i=1}^{m} D_{a_i} \\times [\u03f5, M] \u2192 R$ is the temporal constraint function that is used to define the constraint $C_T (s_1,..., s_n, a_1,..., a_m, \u0394_t) \u2264 0$ for all steps $t \\in \\{1, ..., H\\}$,\n\u2022 \u03a4: $\u03a0_{i=1}^{n} D_{s_i} \\times \u03a0_{i=1}^{m} D_{a_i} \\times [\u03f5, M] \u2192 \u03a0_{i=1}^{n} D_{s_i}$ is the state transition function,\n\u2022 V is a tuple of constants $(V_1,..., V_n) \\in \u03a0_{i=1}^{n} D_{s_i}$ denoting the initial values of state variables,\n\u2022G: $\u03a0_{i=1}^{n} D_{s_i} \u2192 R$ is the goal function that is used to define the constraint $G(s^{H+1}_1,..., s^{H+1}_n) \u2264 0$,\n\u2022 R: $\u03a0_{i=1}^{n} D_{s_i} \\times \u03a0_{i=1}^{m} D_{a_i} \\times [\u03f5, M] \u2192 R$ is the reward function, and\n\u2022 $H \\in Z^+$ is the horizon.\nA solution to \u03a0 is defined as a tuple of values\n$(\\bar{a}_1,...,\\bar{a}_m) \\in \u03a0_{i=1}^{m} D_{a_i}$ for all action variables A and a\nvalue $\\bar{\u0394}_t \\in [\u03f5, M]$ for all steps $t \\in \\{1, ..., H\\}$ and a tuple\nof values $(s^t_1,...,s^t_n) \\in \u03a0_{i=1}^{n} D_{s_i}$ for all state variables S\nand steps $t \\in \\{1, ..., H + 1\\}$ if and only if the following\nconditions hold:\n1. $s^1_i = V_i$ for all $i \\in \\{1, ..., n\\}$,\n2. T($s^t_1,..., s^t_n, \\bar{a}_1,...,\\bar{a}_m, \\bar{\u0394}_t$) = ($s^{t+1}_1,...,s^{t+1}_n$) for steps t \u2208 {1, ...,H},\n3. $C_I(s^t_1, ..., s^t_n, \\bar{a}_1,...,\\bar{a}_m, \\bar{\u0394}_t) \u2264 0$ for steps t\u2208 {1, ..., H},\n4. $C_T (s^t_1, ..., s^t_n, \\bar{a}_1,...,\\bar{a}_m, x_t) \u2264 0$ for steps t \u2208 {1, ..., H} and for all values of $x_t \\in [0, \\bar{\u0394}_t]$, and\n5. $G(s^{H+1}_1,..., s^{H+1}_n) \u2264 0$.\nSimilarly, an optimal solution to \u03a0 is a solution that also maximizes the reward function R over the planning horizon H such that:\n$\\max_{\\substack{\\bar{a}_1,...,\\bar{a}_m\\\\\\bar{\u0394}_1,...,\\bar{\u0394}_H}} \\sum_{t=1}^{H} R(s^t_1,...,s^t_n, \\bar{a}_1,..., \\bar{a}_m, \\bar{\u0394}_t)$ \nNext, we will present a methodology for solving \u03a0."}, {"title": "Solving the Metric Hybrid Planning Problem", "content": "SCIPPlan (Say and Sanner 2018a, 2019; Say 2023) is a metric hybrid planner that performs on mathematical optimization. SCIPPlan compiles \u03a0 into the mathematical optimization model that is provided below."}, {"title": "The SIR Model with Constant Infection and Recovery Rates", "content": "The SIR model (Kermack and McKendrick 1927) is a compartmental model that groups a population into three compartments, namely: Susceptible, Infected and Removed. The SIR model mathematically describes the interaction between these groups using a system of partial differential equations. In this paper, we will build a state transition function T based on the solution equations of the SIR model with constant infection b \u2208 [0, 1] and removal c \u2208 [0, 1] rates. (Bailey 1975; Gleissner 1988; Bohner, Streipert, and Torres 2019)\n$\\frac{dx}{dt} = \\frac{bxy}{x + y}$  (10)\n$\\frac{dy}{dt} = \\frac{bxy}{x+y} - cy$ (11)\n$\\frac{dz}{dt} = cy$ (12)\n$\\frac{x^{t+1}}{y^{t+1}} = \\frac{x^t}{y^t} (\\frac{1+ \\frac{y^t}{x^t}e^{(b-c) \\Delta}}{1+\\frac{y^t}{x^t}})$ (13)\n$y^{t+1} = y^t (1 + \\frac{y^t}{x^t})\\frac{\\frac{b}{c} (1+ \\frac{y^t}{x^t}e^{(b-c) \\Delta}) - (1+\\frac{y^t}{x^t})}{(1+ \\frac{y^t}{x^t}e^{(b-c) \\Delta})}$ (14)\n$z^{t+1} = N - (x^t + y^t)\\frac{b}{c} (\\frac{x^t + y^te^{(b-c) \\Delta}}{x^t + y^t})$ (15)\nwhere xt, yt and zt represents the number of susceptible, infected and removed individuals in a population of size N\u2208 Z+. In this paper, equations (13-15) will form the basis of the state transition function T that will be used to formalize the pandemic planning problem as a metric hybrid planning problem II. Next, we will present the contributions of our paper, namely: (i) the formalization of the pandemic planning problem as a metric hybrid planning problem and (ii) the valid inequalities to help improve the effectiveness of the metric hybrid planner."}, {"title": "Pandemic Planning Using a Metric Hybrid Planner", "content": "In this section, we will demonstrate how the pandemic planning problem can be effectively solved using SCIPPlan."}, {"title": "The State Transition Model with Lockdowns", "content": "We will extend the solution equations of the previously described SIR model to build a state transition function T with lockdowns. The inputs of function T, namely the elements of the tuple ($s_1, s_2, s_3, a_1, \u0394$), are defined as follows.\n\u2022 $s_1, s_2, s_3 \\in [0, N]$ are the bounded state variables representing the number of susceptible x, infected y and removed z individuals in a population of size N,\n\u2022 \u0394 is the fixed duration of a step with the constant value \u03b4\u2208 [\u03f5, M], and\n\u2022 a\u2081 \u2208 {0,1} is the binary action variable representing whether the population is under lockdown (i.e., a\u2081 = 1) or not (i.e., a\u2081 = 0) over the duration \u0394.\nSimilarly, the output of function T is defined as the tuple of state variables ($s_1, s_2, s_3$). Next, we will modify equations (13-15) with the addition of the binary action variable af which will determine the value of the infection rate b(a1) over the duration \u0394. The value of the infection rate b(a1) is defined as:\n$b(a_1) = \\begin{cases} b_1, & \\text{if } a_1 = 1\\\\ b_2, & \\text{otherwise.} \\end{cases}$  (16)\nwhere constants b1, b2 \u2208 [0,1] represent the infection rates with and without a lockdown, respectively, such that b\u2081 >"}, {"title": "The Pandemic Planning Problem", "content": "The remaining components of the metric hybrid planning problem II can be defined to describe the pandemic planning problem as follows.\n\u2022 CT ($s^t_1, s^t_2, s^t_3, a_1, \u0394_t$) \u2264 0 is a constraint on the maximum number of infected individuals allowed at any given time. The temporal constraint enforces that the righthand side of the state transition function for the state variable $s^{t+1}_2$ never exceeds the constant threshold K \u2208 Z+.\nSimilarly, the domain of the state variable $s^t_2$ that represents the number of infected individuals is also bounded by K such that $s^t_2 \u2208 [0, K]$.\n\u2022 V1, V2 and V3 are the initial values of the number of susceptible, infected and removed individuals in the population, and are defined as V\u2081 = N \u2013 I, V2 = I and V3 = 0 where the constant I \u2208 Z+ denotes the initial number of infected individuals.\n\u2022 G($s^{H+1}_1, s^{H+1}_2, s^{H+1}_3$) < 0 is a constraint on the maximum fraction p\u2208 [0,1] of the population that can be removed, and is in the form of: $s^{H+1}_3 < pN$.\n\u2022 R($s^t_1, s^t_2, s^t_3, a_1, \u0394_t$) is the reward function that incurs a penalty for a lockdown, and is in the form of: -a1.\nGiven the components of II are defined, SCIPPlan can compile II into a mathematical optimization model and solve it via constraint generation (i.e., previously described in section) However, the computational effectiveness of the underlying spatial branch-and-bound solver relies on its ability to effectively derive valid upper and lower bounds on the (nonlinear) expressions that make up the mathematical optimization model (i.e., the objective function (1) and the constraints (2-6)). Therefore, we will next derive valid inequalities in order to improve the computational effectiveness of SCIPPlan."}, {"title": "Valid Inequalities", "content": "In this section, we will introduce domain-dependent valid inequalities in order to improve the computational effectiveness of SCIPPlan. Namely, we will introduce two types of valid inequalities that are based on (i) the monotonicity of state variables 81 and 83, and (ii) the assumption that the size of the population is constant.\n1. Monotonic state variables: The analysis of equations (10) and (12) reveals that s\u2081 is non-increasing and 83 is non-decreasing.\n2. Constant population: The SIR model (Bailey 1975) assumes that the size of the population remains constant.\nThe monotonicity of state variables and the constant population size assumption are used to define the instantaneous"}, {"title": "The Mathematical Optimization Model", "content": "In this section, we present the mathematical optimization model that is compiled by SCIPPlan to represent and solve the pandemic planning problem.\n$\\max_{\\substack{a_1,..., a_H\\\\\\Delta_1,..., \\Delta_H}} \\sum_{t=1}^{H} -a_t$  (17)\n$s_1^1 = N - I$ (18)\n$s_2^1 = I$ (19)\n$s_3^1 = 0$ (20)\n$s_1^{t+1} = s_1^t (1+ \\frac{y^t}{x^t})(\\frac{\\frac{b(a_1)}{c} - (1+\\frac{y^t}{x^t})}{e^{(b(a_1)-c)^*)-1}})^{-1} \\forall t\\in \\{1,...,H\\}$ (21)\n$s_2^{t+1} = s_2^t (1+ \\frac{y^t}{x^t})(\\frac{\\frac{b(a_1)}{c} (1+ \\frac{y^t}{x^t}e^{(b(a_1)-c)^*}) - (1+\\frac{y^t}{x^t})}{(1+ \\frac{y^t}{x^t}e^{(b(a_1)-c)^*})}) \\forall t \\in \\{1,...,H\\}$ (22)\n$s_3^{t+1} = N - (s_1^t + s_2^t)\\frac{b}{c} (\\frac{s_1^t + s_2^te^{(b(a_1)-c)^*}}{s_1^t + s_2^t}) \\forall t \\in \\{1,...,H\\}$ (23)\n$s_1^t + s_2^t + s_3^t = N \\forall t\\in \\{1,...,H\\}$ (24)\n$\\frac{(1+ \\frac{s_2^t}{s_1^t}) - (1 + \\frac{s_2^t}{s_1^t} e^{(b(a_1)-c)^*})}{(1 + \\frac{s_2^t}{s_1^t}e^{(b(a_1)-c)^*})} - \\epsilon_1 e^{(b(a_1) - c)^*}) - \\epsilon_1 < 1 \\forall t\\in \\{1,...,H\\}$ (25)\n$(\\frac{s_2^t}{s_1^t + s_2^t}) (s_1^t + s_2^t\\frac{s_2^t e^{(b(a_1)-c)^*}}{s_1^t}) - \\epsilon_3 + s_3^t \u2264 N \\forall t\\in \\{1,...,H\\}$ (26)\n$\\frac{s_2(1+ \\frac{s_2^t}{s_1^t})(1+ \\frac{s_2^t}{s_1^t} e^{(b(a_1)-c)^*}) - \\epsilon_1 e^{(b(a_1)-c)^*}) - \\epsilon_1 e^{-\\epsilon_2} < K \\forall x_t\\in [0, \\bar{\u0394}_t], t\\in \\{1,...,H\\}$ (27)\n$s_1^{H+1}+s_2^{H+1}+s_3^{H+1} = N$ (28)\n$s_3^{H+1} < pN$ (29)\n$s_1^t\u2208 [0, N]  \\forall t \\in \\{1,...,H+1\\}$ (30)\n$s_2^t\u2208 [0, K] \\forall t\\in \\{1,...,H+1\\}$ (31)\n$s_3^t\u2208 [0, N]  \\forall t\\in \\{1,...,H+1\\}$ (32)\n$a_1^t\u2208 \\{0,1\\}  \\forall t\\in \\{1,...,H\\}$ (33)\n$\u0394 = \u03b4 \\forall t \\in \\{1,...,H\\}$ (34)\nwhere \u03f51, \u03f52 and \u03f53 denote the expressions $\\frac{(b(a_1)-c)}{c}$, ($b(a_1) - c)\u0394$ and $\\frac{(b(a_1)-c)}{c}$ respectively. The brief description of the resulting mathematical optimization model is as follows. The objective function (17) minimizes the total number of lockdowns used over the horizon. Constraints (18-20) set the initial values of all state variables. Constraints (21-23) represent the state transition function T. Constraints (24-26) are the valid inequalities that are introduced in section. Constraint (27) is the temporal constraint. Constraints (28-29) are the goal state constraints. Finally, constraints (30-34) specify the domains of state and action variables, and the fixed duration of each step."}, {"title": "Theoretical Results", "content": "In this section, we present our theoretical results on the finiteness and correctness of SCIPPlan for solving the pandemic planning problem with an exponential temporal constraint function CT.\nLemma 1 (Finiteness and correctness of SCIPPlan). SCIP-Plan finds a solution to the pandemic planning problem within some constant y > 0 constraint violation tolerance or proves its infeasibility in finite number of constraint generation iterations.\nProof. We begin our proof with the analysis of equation (14) that governs the evolution of the number of infected individuals y. The joint analysis of equations (10), (13) and (14) reveals that the expression:\n$(\\frac{x^t}{1+ \\frac{y^t}{x^t}})(1+\\frac{y^t}{x^t} e^{(b-c) \\Delta_t}))$ (35)\nis bounded between 0 and 1. This means that the growth of the number of infected individuals y must be bounded by the expression:\n$Ke^{(b-c) \\Delta_t}$ (36)\nwhich concludes our proof since expression (36) can be used as the control function in the analysis of the temporal constraint function CT instead of the Lipschitz function that was used in the original proof. (Say 2023)"}, {"title": "Related Problems and Extensions", "content": "In this section, we introduce a modification of the pandemic planning problem that frequently appears in many other areas of social physics, and also show how to extend the pandemic planning problem to use variable step duration. We begin with the presentation of a modification of the pandemic planning problem that frequently appears in other facets of social physics, such as migration, networks and communities. (Jusup et al. 2022) In this new related planning problem, the total cost is primarily made out of two components, namely: (i) the cost associated with the total duration (i.e., makespan) and (ii) the total action duration. In order to solve this new problem, we modify the goal constraint (29) to:\n$s_3^{H+1} \u2265 qN$ (37)\nwhere q \u2208 [0,1] is the minimum fraction p\u2208 [0,1] of the population that must reach a certain threshold, and run SCIPPlan with increasing values of horizon H. For simplicity, we will refer to the previous version of the planning problem as Problem 1, and refer to the new version as Problem 2.\nWe proceed with the extension of the pandemic planning problem that uses variable step duration. In order to achieve variable step duration, we modify the reward function to:\n$\\max_{\\substack{a_1,..., a_H\\\\\\Delta_1,..., \\Delta_H}} \\sum_{t=1}^{H} -\\Delta_t a_t$  (38)\n$\u03b4_{LB} \u2264 \u0394^t \u2264 \u03b4_{UB} \\forall t\\in \\{1,...,H\\}$ (39)\nwhere \u03b4LB and \u03b4UB denote the lower and upper bounds on the duration of each step, respectively."}, {"title": "Experimental Results", "content": "In this section, we present the results of our detailed computational experiments for testing the effectiveness of using SCIPPlan to perform planning under various problem settings."}, {"title": "Design of Experiments", "content": "We have conducted two sets of computational experiments. First, we tested SCIPPlan under both problem settings (i.e., Problem 1 and 2) over 96 instances where each instance corresponds to a unique combination of the parameters provided in Table 1. Second, we tested the effect of using variable step duration on the solution quality and the runtime performance of SCIPPlan."}, {"title": "Experimental Setup", "content": "All experiments were run on the Apple M1 Chip with 16GB memory, using a single thread with one hour total time limit per instance. SCIPPlan uses SCIP (Vigerske and Gleixner 2018) as its spatial branch-and-bound solver."}, {"title": "Implementation Details", "content": "In all of our experiments, we linearized equation (16) using a system of linear constraints. We added the new linearization constraints as a part of the instantaneous constraint CI ($s_1^t, s_2^t, s_3^t, a_1, \u0394_t$) < 0. We encoded each exponential term of the form ab as eblog(a). We verified the temporal constraint function CT with increments of 0.1.\nIn order to solve Problem 1 with fixed step duration, we ran SCIPPlan with the value of H such that H\u2206 is equal to 26 weeks. In order to solve Problem 2 with fixed step duration, we ran SCIPPlan with increasing values of horizon H until either a solution is found or HA exceeded 52 weeks. If SCIPPlan returned a solution with H\u2206 that is less than 52 weeks, we verified that the temporal constraint CT ($s_1^t, s_2^t, s_3^t, a_1, \u0394_t$) \u2264 0 holds for the remaining duration of the year without using additional actions (i.e., a\u2081 = 0),"}, {"title": "Effect of Valid Inequalities", "content": "We begin our analysis with the evaluation of the effect of valid inequalities that are introduced in section (i.e., constraints (24-26)) on the overall runtime performance of SCIPPlan. Figure 2 visualizes the logarithmic runtime comparison between using SCIPPlan with and without the valid inequalities over all instances. In figure 2, each data point represents an instance that corresponds to a unique combination of the parameters provided in Table 1. The inspection of figure 2 clearly highlights the benefit of including the valid inequalities as a part of the planning problems. On average, we observe that the addition of the valid inequalities improves the runtime performance of SCIPlan by around one to two orders of magnitude. As a result, we report results on the version of the planning problems with the valid inequalities in the remaining of this section."}, {"title": "Problem Coverage", "content": "We proceed with the analysis of our experiments with an overview of the results. Table 2 summarizes the effect of using SCIPPlan to perform planning over both settings with different values of the parameters. Specifically, Table 2"}, {"title": "Runtime Performance", "content": "The runtime performance of SCIPPlan over all unique instances is visualized by figure 3 using heatmaps. The inspection of figure 3 for Problem 1 reveals that decreasing the value of parameter \u03b4 typically decreases the runtime performance of SCIPPlan, since the lower values of \u03b4 correspond higher values of horizon H. The inspection of figure 3 for Problem 2 reveals that decreasing the values of parameters \u03b4 and K can significantly decrease the runtime performance of SCIPPlan, since the lower values of \u03b4 and K typically correspond to the existence of solutions with higher values of horizon H. Overall, we have not found a significant effect of the value of parameter I on the runtime performance of SCIPPlan."}, {"title": "Normalized Solution Quality", "content": "The normalized solution quality of SCIPPlan over all unique instances, that is defined as the total action duration$\\frac{\u03b4}{\\Delta} \\sum_{t=1}^{H} a_t$, is visualized by figure 4. The inspection of figure 4 highlights the clear benefit of using smaller values of parameter \u03b4 which allows for a more granular control of the population. In Problem 2, decreasing the value of \u03b4 by one week decreases the total action duration by around 26 days (i.e., on average). Moreover, we observed that increasing the value of parameter K can significantly decrease the total action duration. Overall, we have not found a significant effect of the value of parameter I on the total action duration."}, {"title": "Effect of Using Variable Step Duration", "content": "In this section, we analyze the effect of using variable step duration over fixed step duration on the runtime performance and the solution quality of SCIPPlan. In order to achieve this, we ran SCIPPlan with both fixed step duration and variable step duration over all instances of Problem 1.\nFigure 5 visualizes the total action duration $\\sum_{t=1}^{H} \\Delta a_t$\ncomparison between using variable step duration and fixed step duration. The inspection of the figures highlights the clear benefit of using variable step duration over fixed step duration where SCIPPlan finds solutions with higher solution quality (i.e., lower total action duration). However, we have found that the increase in solution quality comes at a price. Figure 6 visualizes the logarithmic runtime comparison between using variable step duration and fixed step duration. On average, we observe that the use of variable step size decreases the runtime performance of SCIPlan by around two orders of magnitude, which highlights the additional computational resources required to improve the solution quality using variable step duration."}, {"title": "Discussion and Related Work", "content": "In this section, we discuss the importance of our theoretical and experimental results in relation to the literature for the purpose of opening new areas for future work.\nIn section, we have shown theoretical results on the finiteness and solution quality of SCIPPlan for solving the pandemic planning problem. Our theoretical results yield strong guarantees on the solutions provided by SCIPPlan such that the temporal constraint is satisfied with relatively small val"}, {"title": "Conclusion", "content": "In this paper, we have formalized the pandemic planning problem based on the solution equations of the SIR model and solved it using a metric hybrid planner. We have introduced valid inequalities to improve the runtime effectiveness of the planner. Finally, we have presented both theoretical and experimental results on the performance of our approach to pandemic planning. Overall, we have demonstrated the potential of using metric hybrid planning to help control pandemics and other related systems."}, {"title": "Ethics Statement", "content": "This work studies the computational effectiveness of using the solution equations of a SIR model, and does not constitute as health advice and does not take the place of consulting with the experts of the relevant fields."}]}