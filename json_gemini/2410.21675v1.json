{"title": "BF-Meta: Secure Blockchain-enhanced Privacy-preserving Federated Learning for Metaverse", "authors": ["Wenbo Liu", "Handi Chen", "Edith C.H. Ngai"], "abstract": "The metaverse, emerging as a revolutionary plat-form for social and economic activities, provides various virtualservices while posing security and privacy challenges. Wear-able devices serve as bridges between the real world andthe metaverse. To provide intelligent services without revealingusers' privacy in the metaverse, leveraging federated learning(FL) to train models on local wearable devices is a promisingsolution. However, centralized model aggregation in traditionalFL may suffer from external attacks, resulting in a single pointof failure. Furthermore, the absence of incentive mechanismsmay weaken users' participation during FL training, leading todegraded performance of the trained model and reduced qualityof intelligent services. In this paper, we propose BF-Meta, a secureblockchain-empowered FL framework with decentralized modelaggregation, to mitigate the negative influence of malicious usersand provide secure virtual services in the metaverse. In addition,we design an incentive mechanism to give feedback to usersbased on their behaviors. Experiments conducted on five datasetsdemonstrate the effectiveness and applicability of BF-Meta.", "sections": [{"title": "I. INTRODUCTION", "content": "The metaverse integrates virtual reality [1], artificial intel-ligence [2], 3D constructions [3], and other advanced digitaltechniques to construct a worldwide virtual community. Thedevelopment of advanced applications for the metaverse, suchas virtual games, virtual socialization, and remote healthcare,is transforming the way people engage with the world. Lever-aging machine learning to provide intelligent personaliza-tion and optimize feedback significantly improves the qualityof services (QoS) in metaverse applications. Nevertheless,the training of machine learning models relies heavily oncollecting user data, which introduces significant challengesfor users' privacy and security [4]. Federated learning (FL)provides a distributed training scheme for intelligent servicesin the metaverse while preserving personal privacy [5].However, assuming all participants are trustworthy in FLis unrealistic. Some malicious users may exploit the trainingprocess for personal gain or disrupt the system training perfor-mance [6], [7]. Additionally, when users enjoy intelligent ser-vices in the metaverse, wearable devices continuously collectpersonal information to train local models. The curious servercan easily infer training data distribution and obtain users'personal information with multiple updated local models.Furthermore, once the server is attacked, the risk of privacyleakage increases dramatically, potentially compromising theQoS and leading to system failure. Applying blockchain toFL can mitigate multiple attacks during model training whileensuring secure data storage [8], [9]. Through the designof incentive and consensus mechanisms, blockchains alsoencourage and monitor users to participate in FL honestly[10]\u2013[12] to ensure the QoS in the metaverse.Early blockchain-empowered FL systems are designed torecord users' credits in blocks. Tian et al. [13] propose acredit investigation solution to identify potentially malicioususers by establishing a real-virtual combined credit system.The authors implement a real-name registration mechanismto transfer credits from the real world, incentivizing honestparticipation in FL. Kang et al. [14] apply blockchain witha designed incentive mechanism in FL to encourage users'participation. Gupta et al. [15] investigate the deployment ofblockchain for user authentication and the documentation ofillegal behaviors in the metaverse. The authors propose record-ing illegal behaviors on the blockchain and adjusting userreputation based on these records. However, these studies lacka mechanism to verify uploaded models before aggregation toresist poisoned models and ensure the robustness of training,which is significant for models' performance. Li et al. [16]propose a verification mechanism to ensure the performanceof local model parameters. However, this verification processis time-consuming. A more efficient detection method needs to be developed for time-sensitive services in the metaverse.To address these challenges, this study proposes BF-Meta,a novel blockchain-empowered FL framework with decentral-ized model aggregation, to detect malicious models beforeaggregation. Furthermore, we introduce a reputation-based incentive mechanism to encourage users' honest updates duringtraining and enhance the security of services in the metaverse.The main contributions are listed as follows:We propose BF-Meta, a secure blockchain-empoweredFL framework to collect data from physical wearable de-vices and provide services in the metaverse. A consensusmechanism in BF-Meta is designed to verify FL modelsand provide secure model storage to ensure the securityof training even with potential malicious clients.A reputation-based incentive mechanism is designed tomonitor users' behaviors, detect abnormal behaviors, andexclude malicious users during FL training.We demonstrate the generalisability of BF-Meta and thestability of the framework's performance on five datasets.The sufficient experimental results prove the effectivenessof our proposed framework.The rest of the paper is organized as follows: Section IIpresents the blockchain-empowered FL framework for themetaverse. Section III details the design of the incentivemechanism. Section IV analyzes the security and experimentperformance of BF-Meta. Section V concludes the paper."}, {"title": "II. BLOCKCHAIN-EMPOWERED FL FRAMEWORK FOR METAVERSE", "content": "In this section, we describe the system architecture andworkflow of the proposed BF-Meta."}, {"title": "A. System Overview", "content": "Fig. 1 shows the architecture of BF-Meta consisting of sixlayers from bottom to top: hardware, data, network, consensus,incentive, and application layers.\n1) Hardware Layer: The hardware layer includes multiplewearable devices and a central server. Users' data are collectedwhen using wearable devices and for local training. The serveris responsible for verifying and aggregating local models toprovide applications.\n2) Data Layer: In the data layer, the stored data includeson-chain and off-chain storage. The collected user information,local models, and blockchains are stored on the respectiveusers' wearable devices. The central server stores models fromall clients for verification and aggregation and synchronizesthem on the blockchain. The encrypted hash values of thetrained model parameters are uploaded and stored on theblockchain along with a digital signature.\n3) Network Layer: In the network layer, peer-to-peer (P2P)communication is leveraged to transmit models between de-vices. Each update of the blockchain is synchronized throughbroadcasting.\n4) Consensus Layer: Consensus mechanisms prevent anysingle party or a small group of parties from controlling theentire system. To ensure data interaction security, miners inthe consensus employ proof of worklayer. We also utilize anaccuracy-based verification mechanism to enhance proof ofwork consensus and prevent poisoning.\n5) Incentive Layer: The incentive layer encourages clientsto invest their computation resources and monitor their be-haviors during training. BF-Meta utilizes reputation in themetaverse to reward and punish clients according to theirbehaviors.\n6) Application Layer: After completing the training, themodels in BF-Meta can be utilized to provide various servicesin the metaverse, such as e-commerce, online games, adver-tising recommendations, and virtual socialization."}, {"title": "B. Threat Models", "content": "In the metaverse, communities may involve thousands ofusers worldwide. We consider that all users are semi-trustedand may upload stale parameters without training to reduce thecomputation cost for personal gains. These users are viewedas \"lazy\" users. Repeated stale parameters may reduce theaccuracy of the global model and hinder training convergence.Therefore, it is necessary to detect lazy participants to elim-inate low-quality model parameters from model aggregation.To avoid the detection of hash values stored in blocks, themalicious clients may poison the model by manipulatinghistorical hash values."}, {"title": "C. Latency Calculation", "content": "The latency of BF-Meta consists of two parts: systemlatency tc and blockchain latency tb. The system latency tc represents the total time consumption of FL until convergence,consisting of transmission latency between a client and theserver (steps 2, 3, and 8 in Fig. 2), which may be affected byinternet conditions and device hardware status. Therefore, thesystem latency can be represented as:\n$t_c = n(t_{fi} + t_{c\\rightarrow s} + t_{s\\rightarrow c}),$\n(1)"}, {"title": "D. Secure FL Training in BF-Meta", "content": "The operations of this blockchain-empowered FL systemcan be divided into eight main steps, as shown in Fig. 2. Thedetailed procedure is explained as follows:\n1) Users' historical records and preference information arecollected as a private training dataset.\n2) Users train the local models based on the private datasetwith the received models from the last synchronization.If it is the first round, the initial global model is used.\n3) Clients send their trained local model to the minerdeployed with blockchain service. The transmitted dataare encrypted by the hash function. Miners firstly verifythe received blocks with the proof of work consensusmechanism by calculating a Nonce value that makes thehash value of the new block less than a target value andthen upload the new block to the blockchain in sequence.\n4) The server verifies the validity of the received blocks bytraversing and comparing the hash values stored in theblockchain.\n5) After verifying, qualified local models are downloadedto the server for model aggregation\n6) The server aggregates local models to generatethe global model for FL.\n7) The updated global model is validated and uploaded tothe blockchain.\n8) The latest status of the blockchain is synchronized to allparticipants. By downloading updated models from thelatest blockchain, clients can update their local modelsfor the next round of training."}, {"title": "Algorithm 1: Training process in BF-Meta.", "content": "1 /* Update(k,w) on client k*/\n2 Collect training datasets from wearable devices;\n3 Synchronous updated blockchain;\n4 Obtain the global model;\n5 foreach epoch e do\n6  foreach batch b do\n7   $| \\omega \\gets \\omega - \\eta \\nabla l(\\omega^{-1};b);$\n8  end\n9 end\n10 return the local model to the server for verification.\n11 /* Verify(wk) on server */\n12 Calculate the hash value of $w$ ($Hash(w)$); if\n13  $Hash(w)$ is not duplicated then\n14   $\\beta_k = 0;$\n15  end\n16 else $\\beta_k = 1;$\n17 return error message to client k.\n18 /* Block storing $Hash'(w_k)$ will be uploaded to theblockchain via proof of work. */\n19 /* Aggregate(W) on server */\n20 Synchronous updated blockchain;\n21 foreach model $w$ in model list W do\n22  if $Hash'(w_k) = Hash(w_k^t)$ then\n23   $\\alpha_k = 0;$\n24  end\n25 end\n26 else $\\alpha_k = 1;$\n27 $w^{t+1} \\gets \\Sigma_{k=1}^{K} (1 - \\alpha_k) (1 - \\beta_k) w^{t+1};$\n28 Send model $w^{t+1}$ to miner for uploading toblockchain;\n29 return $w^{t+1}$ to all clients."}, {"title": "III. REPUTATION-BASED INCENTIVE MECHANISM", "content": "To ensure the performance of training, an incentive mecha-nism plays a crucial role in ensuring all clients are motivatedto participate in training honestly. The incentive mechanisminvolves reward and punishment schemes to monitor clients'behaviors. This section explains the design of client monitor-ing and incentive schemes in the proposed BF-Meta."}, {"title": "A. Client Monitoring Scheme", "content": "To detect and record malicious behaviors in FL, ablockchain-enabled incentive mechanism is leveraged to assistthe server in model selection for aggregation. In BF-Meta,each client is assigned a unique address for recording andidentifying both clients and their respective models. Oncethe local parameters are received, the server traverses theblockchain to retrieve the latest model parameters uploaded bythe same client from the blockchain with the unique address."}, {"title": "B. Incentive Mechanism", "content": "This section introduces the designed incentive mechanismin BF-Meta to motivate clients by detecting and punishingmalicious behaviors through the client monitoring schemeand rewarding honest clients accordingly. A typical incentivemechanism [17] is to apply all the past performances to deter-mine the assessment weights. From a long-term perspective,the historical performance of all clients in the vast metaversemay exhibit similarities due to analogous variations in modelaccuracy over time. Applying all records to determine weightscan be challenging, as it may not sufficiently increase thegaps among clients' reputations and effectively encourage theirparticipation in FL. Therefore, we introduce a time-varyingfactor for the reputation mechanism, where the performance ofthe last model aggregation will directly determine the currentreputation.\nSpecifically, we define two reputation factors to evaluate theweights of received models: model quality and data quantity.These two factors denote the accuracy of the local modeland the size of the training datasets, respectively. The serversampled the test dataset to test the model's accuracy andevaluate the model's quality. The server transforms the testaccuracy into data quality weight (wk). The model qualityfactor is calculated by:\n$w_k = \\frac{\\Theta_k - \\Theta_{min}}{\\Theta_{max} - \\Theta_{min}},$\n(3)\nwhere wk is the model quality factor, and \u03b8k denotes the testaccuracy of client k. $ \\Theta_{min}$ and $ \\Theta_{max}$ represent the minimumand maximum values of test accuracy among clients selectedfor aggregation."}, {"title": "IV. SECURITY ANALYSIS AND EXPERIMENTAL STUDY", "content": "In this section, we first discuss several implementationcases. Then, we evaluate the performance of BF-Meta bysecurity analysis and experimental study."}, {"title": "A. Implementation Discussion", "content": "BF-Meta can be implemented on the metaverse to provideintelligent services.\n1) Recommendation System: Metaverse is a virtual map-ping of the real world. Personalized recommendation servicesare necessary to attract and retain users. To achieve this target,the service providers need to collect users' browsing historyand behaviors to train a model for offering personalized servicerecommendations. BF-Meta, with the incentive mechanism,can be implemented as a secure distributed training frameworkto train local models for personalized service without revealingdata privacy and encourage operators to share their userinformation.\n2) Credit Investigation: Credit investigation is crucial forassessing the risk level of users in the metaverse by reviewingtheir credit information from the real world. In this case,BF-Meta can be leveraged to securely train an evaluatingmodel to evaluate the risk of user transactions to guarantee thesecurity of the metaverse. Security of BF-Meta can effectivelyprotect the users' information and training process data fromfalsification and attack.\n3) Decentralized Social Platform: BF-Meta can also beapplied to the architecture of social platforms in the metaverse.By collecting users' historical behaviors and information,operators can train local models for like-minded people'srecommendations. Users with similar models can be recom-mended as friends."}, {"title": "B. Security Analysis", "content": "BF-Meta can resist several attacks. We analyze the securityfrom the following attacks.\n1) Model Poisoning Attacks: In FL, model poisoning at-tacks aim to corrupt the shared model by falsifying the trans-mitting model parameter or continuously uploading untrainedmodel parameters. With BF-Meta, every model update isverified by comparing the hash values between the receivedmodel and the previous hash value stored on the blockchainof the same client so that the repeatedly transmitted modelcan be detected and that client will be blacklisted. Moreover,if a malicious client poisons his model when updating. Theaccuracy of his model will be lower than that of other honestclients'. Once a low-quality model is detected, the reputationpenalty will reduce its probability of being selected in thefollowing rounds, thereby forfeiting the model reward.\n2) Sybil Attacks: In a Sybil attack, an attacker createsmultiple fake identities to gain a disproportionate influenceover the network. BF-Meta can validate each participant'sidentity when receiving the model. By comparing the signaturewith the authorization list of the blockchain, the timestamp ofmodel uploading, and model quality, the server will identifythe fake identity. If the signature of the attacker is not in theauthorization list of the blockchain, it will be detected as amalicious node and blacklisted.\n3) Replay Attacks: In a replay attack, an attacker inter-cepts a valid data transmission and retransmits it to createunauthorized effects. In this case, the speed and efficiencyof training can be reduced by channel blocking and train-ing obstruction. BF-Meta's use of timestamps and sequencenumbers in transaction records helps prevent replay attacksby ensuring that each transaction is uniquely identified andcannot be reused. When receiving model parameters, BF-Metacompares the hash values and timestamps between the currentreceived model and the previous ones of the same client. Oncethe replay attacks are detected, the client will be blacklistedwith its reward forfeited."}, {"title": "C. Experimental Study", "content": "1) Experiment Settings: The experiments are built withPython 3.8.0 and Pytorch running on CPU 12th Gen Intel(R)Core (TM) i7-12700H to establish BF-Meta and use Web3 toachieve the interaction between FL training and the blockchainsystem. The settings of the experiment are listed in Table I. Weconsider a metaverse platform with K = 30 users participatingin FL with private keys. A selection rate \u03b7 is introduced torepresent the chosen clients for model aggregation. Moreover,we set the target accuracy equal to 80% as the criterion forthe termination of FL training. Based on the clients' behaviors,participants are divided into two categories: normal clients andlazy clients. Normal clients participate in training honestly,while lazy clients become \"free-riders\" in FL as mentionedin the threat models. We implement BF-Meta by Pytorchand a blockchain platform named Ganache based on fivepublic datasets. The datasets and the corresponding modelsare detailed as follows:\nMovieLens: we use a deep neural network (DNN) modelwith 5 hidden layers, and the numbers of neurons in eachlayer are 20, 30, 50, 30, and 20, respectively;\nWisconsin Breast Cancer Dataset: we use a DNN modelwith 6 hidden layers, and the numbers of neurons in eachlayer are 10, 30, 40, 40, 30, and 10, respectively;\nWheat Seed Dataset: we use DNN models with 4 hiddenlayers, and the numbers of neurons in each layer are 10,30, 30, and 10, respectively;\nPima Indian Diabetes Dataset: we use a DNN model with6 hidden layers, and the numbers of neurons in each layerare 20, 30, 50, 50, 30, and 20, respectively;\nMNIST: we use a CNN model with 4 convolutionallayers, 4 pooling layers, and 3 full-connecting layerswhose neuron numbers in each are 256, 128, and 10,respectively.\n2) Experimental Evaluation: We simulate the latency onthe mentioned datasets during FL training to evaluate thestability of BF-Meta and analyze the relationship between theaccuracy and malicious user ratio in clients to evaluate theperformance of the detection function."}, {"title": "V. CONCLUSION", "content": "In this paper, we propose BF-Meta, a secure blockchain-empowered FL framework for the metaverse that incorporatesincentive and malicious client monitoring schemes. It canefficiently resist model poisoning attacks and detect lazyclients, thereby ensuring the security of FL training tasks.Furthermore, we introduce a reputation-based incentive mech-anism to encourage users to participate honestly in FL trainingby providing feedback on their behaviors. Overall, BF-Metaprovides a secure framework to support intelligent services inthe metaverse without revealing private user information."}]}