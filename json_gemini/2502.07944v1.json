{"title": "SHACL-SKOS based Knowledge Representation of Material Safety Data Sheet (SDS) for the Pharmaceutical Industry", "authors": ["Brian Lu", "Dennis Pham", "Ti-chiun Chang", "Michael Lovette", "Terri Bui", "Stephen Ma"], "abstract": "We report the development of a knowledge representation and reasoning (KRR) system built on hybrid SHACL-SKOS ontologies for globally harmonized system (GHS) material Safety Data Sheets (SDS) to enhance chemical safety communi-cation and regulatory compliance. SDS are comprehensive documents containing safety and handling information for chemical substances. Thus, they are an essential part of workplace safety and risk management. However, the vast number of Safety Data Sheets from multiple organizations, manufacturers, and suppliers that produce and distribute chemicals makes it challenging to centralize and access SDS documents through a single repository. To accomplish the underlying issues of data exchange related to chemical shipping and handling, we construct SDS related controlled vocabulary and conditions validated by SHACL, and knowledge systems of similar domains linked via SKOS. The resulting hybrid ontologies aim to provide standardized yet adaptable representations of SDS information, facilitating better data sharing, retrieval, and integration across various platforms. This paper outlines our SHACL-SKOS system architectural design and showcases our implementation for an industrial application streamlining the generation of a composite shipping cover sheet.", "sections": [{"title": "I. INTRODUCTION", "content": "Knowledge representation and reasoning (KRR) provides a framework for encoding knowledge in a format that artificial intelligence (AI) systems can utilize to reason, learn, and interact with the world in increasingly sophisticated ways. In 1993, the World Wide Web Consortium (W3C) was founded to develop a set of international standards, the modern beginnings of standardized KRR, for information exchange via the world wide web. One popular KRR model is a knowledge graph which utilizes graph-structured representation and database to store and operate on interconnected entities. In general, these standards created a cohesive set of KRRs that have allowed different systems and devices to communicate effectively fostering an open and interoperable web environment. A number of efforts have been taken (e.g., W3C standards [1], NexIOM [2], regulatory ontologies [3]-[5], OBO [6], etc.) to address general data exchange issues with unified ontologies acting as templates of universal KRRs, defining concepts, terms, and their relationship and properties. However, as the world wide web continues to develop and grow, so are the KRRs as they are increasingly adopted in industry-specific domains. In the case of the pharmaceutical sector, a number of KRRs have already been developed which focus on drug-target identification, drug discovery, drug development [7]\u2013[11], and health outcomes [12]-[16].\nRecently, there has been growing interest in integrating systems related to pharmaceutical manufacturing, quality con-trol, and regulatory compliance to more effectively address concerns related to the shipping and handling process. This necessitates increased interface between information objects to \u201cconnect the dots\u201d across different information domains (i.e., Enterprise Organization, Modeling & Simulations, Process Development, Warehousing & Procurement, Project Timelines, etc.)\nall of which have their own internal domain-specific data models and vocabularies. However, these systems often rely on individually defined ontologies, which upon inte-gration, are faced with a \u201cterminology challenge\u201d as data exchange between systems becomes more complex. Recent alliances, such as Pistoia [17] and Allotrope [18], were formed to support the integration of information gathering, manage-ment, and model development of pharmaceutically relevant in-formation in hopes of overcoming both the interoperability and terminology challenge associated with KRRs. In most cases, pharmaceutically relevant ontologies trend towards alignment with industrial standards for product and process development [19]-[23].\nUnfortunately, user adoption of these individually aligned ontologies have been limited due to complexity and difficulty in implementation. For example, ontologies based on basic formal ontology (BFO) [24] encourage modeling vocabularies as classes, which are subclassed from other BFO classes, making them unwieldy and challenging to understand. As BFO expresses data in the form of overly faceted classes, reasoning at a certain higher-level requires significant and tedious introspection into the class structure. Specifically lim-iting the number of sub-classes to those that are structurally relevant allows implementers and users of the ontology to better understand how the ontology classes show a specific \u201cview\u201d of the data on one abstraction level. Taxonomy con-struction, to support fine-grained vocabularies, can then be"}, {"title": "II. METHODS", "content": "In this section, we outline our strategy for ontology con-struction through SHACL-SKOS concepts, workflow design decisions, and our current implementation of the SHACL-SKOS system for SDS data extraction and summarization.\nA. Ontology Modeling Strategy\nOur SHACL-SKOS system, referred to as DeepPharmGraph (DPG), adopts a graph-structured data model for potentially coupled (deep-learning based) inference and appears as the prefix of modules in Figs.2-6. It simplifies taxonomy con-struction using SKOS, facilitates integration of different vo-cabularies, and offers standardized terms for referencing by multiple shapes. These modules were constructed for the SHACL-SKOS system and are not a part of any public on-tologies/taxonomies. Additionally, our strategy, as elaborated below, supports multiple views on shared taxonomic concepts, enabling diverse models while maintaining consistency and reducing redundancy.\n\u2022 Separation of Shapes and Taxonomies: Recognizing that shapes and taxonomies serve different purposes, we separate them to enhance modularity and reusability. Shapes define the structure and constraints of data, while taxonomies provide the controlled vocabularies and hi-erarchical organization of concepts. By decoupling these components, shapes can reference multiple taxonomies, and taxonomies can be applied across different shapes.\n\u2022 Simplified Taxonomy Construction: We utilize SKOS to create taxonomies that organize concepts in a hierarchi-cal manner. This approach makes taxonomy construction straightforward and facilitates the integration of different vocabularies. Taxonomies like DPG-GHS (aligned with GHS SDS headings and hazard classifications) and DPG-ISA-88 (describing ISA-88 terms) provide standardized terms that can be referenced by multiple shapes.\n\u2022 Multiple Views on Shared Taxa: Shapes represent different \"views\" (or perspectives) on the same set of taxonomic concepts. For example, the DPG-DoC shape models document structures, while the DPG-SafeD shape models safety data. Both shapes can reference the same"}, {"title": "B. Shapes and Taxonomies", "content": "To simplify taxonomy construction, SKOS organizes con-cepts in a hierarchical manner. Scoping of allowed taxa and extended properties is facilitated via subclassing of skos:Concept (user-defined versus inherited within the broader SKOS concept scheme). This approach makes taxon-omy construction straightforward and facilitates the integration of different vocabularies.\nTo accurately capture the relationships between different concepts within SDS documents, ensure semantic clarity, and enhance data interoperability, we employed SKOS, and additionally, SKOS eXtension for Labels (SKOS-XL) for application-specific extensions [29]: GHS datasheet sections (for use in documents) or GHS hazards (for use in clas-sification) are represented as SKOS Concepts. The SHACL shapes for SKOS are derived from those used by SkoHub [30]. SKOS-XL labels are used as additional data when performing document understanding heuristics or rendering user interfaces.\nUsage of SKOS-XL is envisioned as a means to accelerate construction of ontology by performing the heavy-lifting of taxonomy and controlled vocabulary construction (See Fig. 2) by forming the basis of a knowledge organization system. In this development, ontology files reference the following shapes and taxonomies.\nShapes\nDPG-DoC (Document Components): Defines the structure of documents, such as sections, headings, and containers. It provides a schema for representing document components, allowing for consistent parsing and interpretation of various document formats. DPG-DoC has re-written parts of SPAR Pattern Ontology [31], DoCO [32], and FaBiO [33] in the form of SHACL shapes and a SKOS document. The SPAR Pattern Ontology is taken relatively directly, translated to SHACL, representing the structural semantics of a document. The SPAR DOCO ontology is broken down into a SKOS-XL taxonomy as marker concepts for use in shapes. This also opens up opportunity to extend the taxonomy to create more semantically fine-grained markers, such as those for GHS SDS document headings, as opposed to generic headings.\nA document consists primarily of hierarchical containers, but can also represent other shapes such as floats and head-er/footer metadata (See Fig. 3).\nContainers may contain literals and/or concept references. Literals are useful for data values that are not part of a taxonomy, such as numerical values. Otherwise, concepts are preferred, since they can be reused across multiple data and shape graphs (See Fig. 4).\nDPG-SafeD (Safety Data): Models structured represen-tations of safety data, including hazard classifications and safety measures. It defines how safety-related information is organized and constrained within the data."}, {"title": "C. Platform and Workflow Design", "content": "Industry-Standard Data Platform: A modern data platform that leverages industry-standard technologies was deployed for this use-case. The platform is built around a service-oriented architecture (SOA) provisioned using Infrastructure as Code (IaC) on Kubernetes clusters in a hybrid cloud environment. This setup ensures scalability, flexibility, and integration with"}, {"title": "III. RESULTS", "content": "As a practical example, the conventional method of gener-ating a \"Test Product\" composite packing sheet for shipping materials is quite manual. Existing SDS platforms utilize fairly rigid search mechanisms that operate on a set of fixed string search and \"drill-down\" widgets which require users to apply a number of filters to navigate the search results SE for compound E. SE is further distinguished by Manufacturer i, Language j, and Revision Date k. For easier conceptualization, this process is denoted by the following \u201cequation\":\n$S_E = \\Sigma_{i,j,k} S_{E_{i,j,k}}$\nFor multiple compounds N = {E1, E2, ...} contained in a product, search operations to obtain the set of all related SDS SN would then need to be manually performed (search and download) for every compound E\u2081 where i = 1,2,..., as accounted for in a composite shipping and handling cover sheet (e.g. \"Composition/Ingredients\u201d in Fig. 10):\n$S_N = \\Sigma_i S_E$\nAfter obtaining $S_N$, users have to compile a comprehensive set of Hazards HN from hazard statements De listed in different sections P\u2081 in each SE of SN. To make it explicit for the required manual compilation, we write:\n$H_N = \\Sigma_j \\Sigma_{P_j} D_{e_j}^{P_j}$\nOnce obtained, hazards of HR are validated against a list of general hazards statements Hgen to get the final set of hazard statements {D} to be disclosed on the comprehensive cover sheet (see, for example, \"Hazards Disclosure\u201d and \u201cHazard Statement(s) Overview\" in Fig. 10) as:\n$H_N \\cap H_{gen} = {D : D \\in H_N and D \\in H_{gen}}$\nThis manual process has since been automated through the development of an internal system code-named \u201cCrucible\" (see the modules and workflow in Fig. 9) that utilizes our SKOS-SHACL methodology.\nUsing Crucible, users can upload SDS to a graphical user interface (GUI) or select from pre-existing SDS documents. Uploaded SDS are processed via a hosted workflow orchestra-tor that extracts the Safety Data Sheet information conformant to the SHACL-SKOS models. Specifically, Hazard Pictograms and Hazard Statements are extracted and annotated using DPG-GHS taxonomy and validated against SafeD shape. The extracted information from multiple SDS, is integrated into a downstream knowledge graph - allowing for aggregation and analysis. Finally, a composite packing sheet is generated by querying the associated labels for multiple SDS. With the returned triples, a table look-up operation is performed to link and return the 'Hazard Disclosure' components of SDS into\""}, {"title": "IV. CONCLUSION", "content": "There has been significant effort put into the construction of ontologies and KRR in the pharmaceutical industry, as discussed in Section I. However, the adoption of the KRR models into operational systems has been slow. Among many challenges are the agreement on vocabulary, the complexity of integrating knowledge of multiple domains, and the lack of an adaptive, scalable, and flexible SHACL-SKOS KRR sys-tem architecture. Our implementation, with its flexibility and attentiveness, shows a promising pathway to overcome many of these challenges. By separating shapes and taxonomies and allowing shapes to reference multiple taxonomies, we achieve:\n\u2022 Modularity: Components can be developed, maintained, and updated independently, enhancing flexibility.\n\u2022 Reusability: Taxonomies can be reused across different shapes and applications, reducing duplication of effort.\n\u2022 Interoperability: Standardized vocabularies and struc-tures enable seamless data exchange between systems.\n\u2022 Reduced Complexity: Simplifying the modeling ap-proach lowers the complexity of ETL processes and data transformations.\n\u2022 Scalability: The architecture supports scaling to accom-modate growing data volumes and additional domains.\nIn particular, SKOS(-XL) offers the capability to incorporate alternative expressions (in the form of languages, terms, re-lated concepts) and SHACL can enforce data quality assur-ance. Moreover, our emphasis on interoperability and incor-poration of multiple ontologies demonstrates the potential to expand to related workflows in the pharmaceutical develop-ment, although our current use case is limited to KRR of pharmaceutically relevant material SDS."}]}