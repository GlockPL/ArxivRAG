{"title": "When Al Meets Finance (StockAgent): Large Language Model-based Stock Trading in Simulated Real-world Environments", "authors": ["CHONG ZHANG", "XINYI LIU", "MINGYU JIN", "ZHONGMOU ZHANG", "LINGYAO LI", "ZHENTING WANG", "WENYUE HUA", "DONG SHU", "SUIYUAN ZHU", "XIAOBO JIN", "SUJIAN LI", "MENGNAN DU", "YONGFENG ZHANG"], "abstract": "Can AI Agents simulate real-world trading environments to investigate the impact of external factors on stock trading activities (e.g., macroeconomics, policy changes, company fundamentals, and global events)? These factors, which frequently influence trading behaviors, are critical elements in the quest for maximizing investors' profits. Our work attempts to solve this problem through large language model based agents. We have developed a multi-agent AI system called StockAgent, driven by LLMs, designed to simulate investors' trading behaviors in response to the real stock market. The StockAgent allows users to evaluate the impact of different external factors on investor trading and to analyze trading behavior and profitability effects. Additionally, StockAgent avoids the test set leakage issue present in existing trading simulation systems based on AI Agents. Specifically, it prevents the model from leveraging prior knowledge it may have acquired related to the test data. We evaluate different LLMs under the framework of StockAgent in a stock trading environment that closely resembles real-world conditions. The experimental results demonstrate the impact of key external factors on stock market trading, including trading behavior and stock price fluctuation rules. This research explores the study of agents' free trading gaps in the context of no prior knowledge related to market data. The patterns identified through StockAgent simulations provide valuable insights for LLM-based investment advice and stock recommendation.", "sections": [{"title": "1 Introduction", "content": "The stock market operates within a complex and volatile ecosystem where the buying and selling of stocks often occurs amidst high liquidity and constant price fluctuations [13, 16]. This environment is consistently shaped by the interplay of various participants, including individual investors, institutions, and automated trading systems [34, 45]. The trading behaviors of these participants reflect a complex result of competition and cooperation, influenced by uncertainties such as economic trends [29], geopolitical events [15], and psychological factors (e.g., market sentiment) [42]. Consequently, the rapid pace of trading, coupled with the vast amount of available information, poses significant challenges for traders to make consistently well-informed decisions.\nThis underscores the necessity for data-driven tools like algorithms or simulations to facilitate informed and strategic investment decisions. The prevalent method involves backtesting with historical data to simulate trading environments and assess strategies. Popular tools for this purpose include Zipline [26], Backtrader [18], and PyAlgoTrade [19]. These event-driven models for trading simulation can help evaluate trader-designed strategies. In addition, the integration of machine learning techniques has opened up new avenues for supporting investment decisions [12, 25, 35]. Among those, one popular tool is called Trading Gym [30], which leverages reinforcement learning to optimize investment strategies.\nWhile historical data-based analysis offers valuable insights, its static nature and retrospective bias can limit its effectiveness in supporting financial decisions in a dynamic and evolving environment [4, 6]. Consequently, simulations or machine learning models trained on historical data may overfit and fail to accurately reflect real-time market liquidity or the influence of collective sentiment. On the other hand, understanding the mechanisms of market operations, particular the interplay between stakeholders and market sentiment, is crucial for developing robust investment strategies [5, 11]. Simulating human sentiments and behaviors can provide a closer approximation of how investment strategies can work in response to the market's rapidly evolving nature, bridging gaps left by traditional data analysis.\nRecent advancements in large language models (LLMs) like GPT and Gemini can facilitate simulations of complex stakeholder interactions [17, 23]. Integrating these LLMs into agent-based systems has been demonstrated useful in conducting intricate simulations across various disciplines [23, 50]. One reason is that these LLMs are trained on extensive datasets and have shown immense capability to comprehend, generate, and reason through diverse scenarios. These reasoning abilities empower LLMs to model intricate systems where individual LLM-based agents can interact dynamically and make decisions under evolving conditions [1], which is particularly advantageous for simulating the dynamics of stock markets. In this regard, multiple recent studies have leveraged LLMs to enhance stock market simulations that can mimic complex human behaviors, addressing backtesting limitations. These simulations can also replicate social dynamics by leveraging LLMs\u2019 generalization capabilities [10, 17, 23, 36, 49, 52].\nHowever, applying these technologies to fully comprehend the nuanced investor behaviors in financial markets still remains a largely under-explored area. Several research questions are worth further exploration. First, it is imperative to explore how various external factors can influence the trading behaviors and performance outcomes of AI Agents. Second, it is still unclear to what extent the inherent tendencies and learning capabilities of LLM-based agents can impact the reliability and effectiveness of stock recommendations and quantitative trading strategies across various scenarios. To address these gaps, our study introduces StockAgent, an innovative LLM-based multi-agent stock trading framework that operates on event-driven simulations. Our study aims to investigate the following three questions:\n\u2022 RQ1. Simulation Effectiveness Are the simulation results (i.e., trading decisions) of StockAgent reliable when using different LLMs to drive the simulation?\n\u2022 RQ2. LLM Reliability Does StockAgent's stock recommendation and trading strategy be influenced by the inherent tendencies of the selected LLM itself?\n\u2022 RQ3. Simulated Trading under External Conditions Can StockAgent reasonably and autonomously simulate stock trading based on different scenario settings, especially exploring how external factors (e.g., financial data, market indicators, benchmark interest rates, emergencies, and after-hours Bulletin Board System (BBS) discussions) affect its trading behavior?\nWe use two LLMs, namely GPT (gpt-3.5-turbo-0125) and Gemini (Gemini-pro-1.0), to develop StockAgent. Its simulation encompasses multiple stages of trading, including (1) Pre-Trading Preparation, involving interest rates and financial events; (2) Trading Sessions, handling transactions and account updates; and (3) Post-Trading, focusing on future actions and strategy sharing. The unique contribution of StockAgent lies in its ability to assess the impact of external factors, asset quantity, and strategies on trading by tuning its parameters, as detailed in subsection 5.2. In addition, it can minimize the influence of the model's prior knowledge on market predictions. Our study aims to develop a trading agent capable of simulating diverse trading behaviors across scenarios to support stock investment decision-making. It can also be adapted to incorporate more dynamic information for advancing financial AI Agent development."}, {"title": "2 Background and Related Work", "content": "Computational finance leverages platforms like Zipline [44] and Backtrader [26] for backtesting strategies with historical data. These tools allow researchers and traders to test their trading algorithms on past market data and thus assess their potential performance. However, in addition to localized solutions, cloud solutions such as QuantConnect [32] also provide a simulation of the global market, which enables users to validate their strategies in a wider market environment. In addition, Trading Gym provides a reinforcement learning environment dedicated to the development and testing of algorithms [3]. This environment can be very beneficial for those looking to leverage machine learning techniques to optimize their trading strategies.\nIn terms of strategy development and stock trading, PyAlgoTrade and Alpaca are the two very popular tools that simplify the strategy development process and provide the ability to simulate trading [40]. These platforms allow traders to test their ideas and strategies without risking real money to better understand their underlying market behavior and performance.\nWhile these tools are extremely useful for strategy optimization and backtesting, there are challenges in transitioning from the backtesting phase to actual trading. A major problem is overfitting, where strategies perform well on historical data but underperform in real-time markets. In addition, many strategies are developed without considering key factors such as market sentiment"}, {"title": "2.2 Large Language Model based Agents", "content": "LLMs are changing AI Agents' capabilities by giving them advanced cognitive skills for reasoning and interaction. One of the key techniques contributing to this transformation is Chain of Thought (CoT) [46, 47, 51]. CoT enables LLM-driven AI Agents to address tasks that have traditionally been the domain of symbolic AI. By breaking down complex problems into a series of intermediate reasoning steps, CoT enhances the problem-solving capabilities of these agents, making them more effective in handling intricate tasks.\nThese agents are applied to natural language tasks in different domains, such as ChatDev [37] and MetaGPT [21], two platforms that allow users to write or generate their own AI Agents according to their needs, to deal with a wide range of tasks in different scenarios. AutoGen [48] is an open-source framework that allows developers to develop agents. Developers can build LLM applications through multiple agents that can interact with each other to complete various LLM tasks. These tasks include math, programming, decision making, etc. WarAgent [23] simulates a set of adversarial systems that can be used to simulate military operations through an AI Agent. CosmoAgent [27] focuses on the field of universe exploration and scientific research by using AI Agent. Such adaptability is crucial for developing reactive agents that can adjust their strategies based on real-time feedback and evolving contexts.\nThese cross-domain applications underscore the flexibility and diversity of LLM agents in managing complex environments. The integration of advanced reasoning techniques, multimodal learning, and feedback-driven adaptability highlights the significant strides made in enhancing the cognitive and interactive capabilities of AI Agents."}, {"title": "2.3 Large Language Models with Finance", "content": "The intersection of LLMs and economics is changing how we approach financial analysis and prediction. Traditional quantitative models are giving way to LLMs' sophisticated processing of economic literature, improving trend forecasts, as shown by Alonso-Robisco and Carb\u00f3 [2]. For instance, Alonso-Robisco and Carb\u00f3 [2] demonstrates how LLMs can enhance trend forecasts by analyzing economic literature, leading to more nuanced predictions. Compliance and risk management sectors benefit from LLMs' ability to detect textual risks, enhancing regulatory compliance and threat management, as evidenced by [14]. Furthermore, specialized models like PIXIU's Financial Language Model, built on Llama, offer superior assessments of financial statements, as noted by Zhao et al. [53].\nIn algorithmic trading, LLMs can contribute through improved sentiment analysis and financial text interpretation, as highlighted by Huang et al. [24]. This allows for more responsive trading algorithms that can swiftly adapt to market sentiments. Overall, LLMs are significantly impacting economic decision-making and market dynamics by providing more accurate and strategic insights through advanced data processing and interpretation capabilities."}, {"title": "2.4 Behavioral Finance", "content": "Behavioral finance [20] combines the research results of psychology and economics to study the behavior and decision-making process of investors in financial markets. It focuses on how the irrationality and psychological biases of human behavior affect financial markets and investment decisions, arguing that market participants are not always completely rational, which is in opposition to the assumptions of traditional finance [7, 20].\nThe core concepts and theories in behavioral finance include: Bounded Rationality, that is, investors' rationality is limited by cognitive ability and access to information [39]; Psychological Biases, such as overconfidence, loss aversion, and anchoring, significantly influence investment decisions [28]; Market Inefficiency, where the irrational behavior of investors causes market prices to deviate from their intrinsic values, resulting in price bubbles and crashes [38]; Emotions and Feelings, fear and greed affect investors' decisions [31]; And Heuristic Decision-Making, where investors rely on simple rules rather than thorough analysis in complex decision situations [43]. These concepts and theories reveal the complexity and irrational characteristics of human behavior and challenge the rationality assumption of traditional finance."}, {"title": "3 StockAgent Architecture Design", "content": "We design StockAgent as Multi-Agent System (MAS) that can simulate actual stock markets and investor trades through agent interaction, comprising (1) Investment Agent module, (2) Transaction module, and (3) BBS module, structured to prevent agent action conflicts and ensure message availability."}, {"title": "3.1 Investment Agent Module", "content": "Investment Agents: Investment Agents are initialized with random capital, liabilities, and one of four personalities: Conservative, Aggressive, Balanced, and Growth-Oriented, to study personality impacts on decision-making. Initial liabilities incentivize profit-driven trading.\nAgent Interaction: In our framework, agents are tasked with decisions on loans, trading, forecasting tomorrow's actions, and sharing tips on BBS. They must consider varied information, such as market data and BBS exchanges, detailed in Appendix A. Following [23], a \u201csecretary\u201d corrects agents' invalid responses, preventing unrealistic actions like spending beyond available cash."}, {"title": "3.2 Transaction Module", "content": "Agents' buy and sell orders are logged into an order book, which is managed using a dictionary data structure in Stock Agent. After an agent completes a trade, the system assesses if and how much was traded, updating the order book accordingly. With agents competing in simultaneous transactions, our prompt-driven simulation risks deadlock. Therefore, with the help of the page replacement algorithm in the multitasking operating system, we propose a random clock page replacement algorithm, which is shown in Figure 1. Agents are randomly sequenced for decision-making, preventing deadlock by avoiding concurrent contention."}, {"title": "3.3 Bulletin Board System (BBS) Module", "content": "Our framework includes a unique BBS, which allows agents to post messages. At the end of each day, we ask agents to share their trading tips on BBS. By making this information available to all agents, we aim to simulate a realistic environment where others' opinions may influence investor decisions."}, {"title": "4 StockAgent Simulation Design", "content": "In this study, we investigate stock trading within a MAS to understand market dynamics and agent interactions. We simulate trading to observe how AI Agents' decision-making, informed by varied information, influences market indicators like volatility and liquidity. The simulation flow is presented in Figure 2. In the following, we refer to each agent adhering to the StockAgent framework design as an \u201cAI Agent,\u201d since the simulation and backbone LLMs may vary. To clarify, StockAgent is a framework design, while an AI Agent is an independent agent entity that follows the StockAgent framework but is specifically aimed at implementing trading strategies.\nIn addition, our simulation replicates real market conditions to assess agents' impact on these indicators. In this regard, we design our trading processes based on the trading sessions and mechanisms employed by NASDAQ and the Hong Kong Stock Exchange [22, 33]. To further illustrate the trading process, we select two stocks from the United States stock market, referred to as anonymized Stock A and Stock B. We use their financial reports-specifically, the balance sheet, income statement, and cash flow statement\u2014as the basis for calculating the initial settings of our simulation. Overall, Stock A is a stock that is already circulating in the stock market, while Stock B is a newly issued stock that is currently in the IPO stage."}, {"title": "4.1 Initial Assumptions and Settings", "content": "In StockAgent trading simulations, it is crucial to set clear initial assumptions and initial settings. These underlying parameters ensure that the simulation gives a true representation of market conditions and behavior. A clear initial configuration prevents AI agents from behaving unpredictably or arriving at results that are unreliable or difficult to interpret. By setting clear boundaries and capabilities for AI agents and market environments, we can systematically explore how different conditions can affect trading outcomes. These assumptions and settings include (1) agent initial assumptions, (2) agent initialization settings, and (3) market initialization settings."}, {"title": "4.1.1 StockAgent Initial Assumptions.", "content": "\u2022 StockAgent Setup Assuming basic common sense of stock market trading, our StockAgent can make profitable trades to maximize profits. This maximizes profits and consists of maximizing the total value of assets and cash. The StockAgent also has a basic estimation ability.\n\u2022 StockAgent Trading Behavior We restrict the StockAgent actions to buy, sell, hold, long and short. Among them, buying, selling, and holding are defined as basic behaviors, long and short selling are defined as derived behaviors, and StockAgent can use basic behaviors according to the basic knowledge of the stock market.\n\u2022 StockAgent Financial Behavior We assume that under the existing StockAgent framework, the StockAgent can understand the financial attempt settings we set for loans, interest rates, dividends, and bankruptcy and use or avoid the above situations according to the goal of maximizing profits."}, {"title": "4.1.2 StockAgent Initialization Settings.", "content": "\u2022 Personality and Assets Allocation: Each agent is endowed with distinct personality traits, influencing their trading styles. Initial assets are allocated randomly within a range of 100,000 to 5,000,000 currency units, which is the sum of an agent's available cash and the market value of stocks. The random allocation ensures a diverse spectrum of wealth among agents.\n\u2022 Debt Configuration: Agents may incur debt, with the amount not exceeding the value of their capital. The loan-to-value ratio is capped to ensure realistic leverage levels.\n\u2022 Transaction Cost: We set the transaction stamp tax according to the rules of the American stock market. We put the transaction fee of each Agent in purchasing shares to 0.005 currency units per share, the minimum transaction fee of each transaction is 1 currency unit, and the maximum transaction fee is 5.95 currency units."}, {"title": "4.1.3 Market Initialization Settings.", "content": "\u2022 Trading Year: The simulation covers one year comprising 264 trading days, divided into four quarters of 66 trading days each.\n\u2022 Interest Rates and Deposits: For companies and individuals, the deposit rate is 0%, reflecting contemporary low-interest-rate environments.\n\u2022 Personal Loan Costs: Agents are subject to varying interest rates on loans, with different terms and corresponding costs. The actual annualized interest rate is 2.7% for a one-month loan, 3% for a two-month loan, and 3.3% for a three-month loan."}, {"title": "4.2 Simulation Flow", "content": "Figure 2 shows the simulation flow. On each trading day, after repayment, check, and decisions about loans, agents are asked to trade stocks in 3 trading sessions, including pre-trading preparation, trading session, and post-trading procedures. At the end of the trade, agents estimate tomorrow's actions and post trading tips on BBS."}, {"title": "4.2.1 Pre-Trading Preparation.", "content": "\u2022 Interest Repayment: Agents pay interest on their loans with cash on the last day of each month days (e.g., 22, 44, 66), which of these days is the last trading day of each month. We use simple interest as the interest charge.\n\u2022 Loan Repayment: When a loan matures, agents need to repay the loan with cash.\n\u2022 Bankrupt Check: After interest and loan repayment, agents with negative cash undergo bankruptcy proceedings. Bankrupted agents will sell all of their holdings and withdraw from subsequent trading.\n\u2022 Special Events: Pre-defined special events occur on specific trading days, such as a reserve requirement ratio reduction and an interest rate increase.\n\u2022 Financial Report Release: Companies A and B are scheduled to release their quarterly financial reports on days 12, 78, 144, and 210. The financial reports are announced to all agents.\n\u2022 Loan Decision: Agents choose whether to take out a loan and decide the amount and duration of the loan."}, {"title": "4.2.2 Trading Sessions.", "content": "\u2022 Sequence Generation: In each session, our simulation randomly generates a sequence, and agents initiate transactions in this order.\n\u2022 Buy&Sell Decision: Agents can decide whether to buy, sell, or hold shares and determine the transaction price and quantity. Their orders are then matched in a market order book, when the bid and ask coincide, a trade is made.\n\u2022 Price Update: To simplify the actual stock trading procedure, we only update stock prices at the end of trading sessions. Stock prices are updated to the price of the last transaction in this session."}, {"title": "4.2.3 Post-Trading Procedures.", "content": "\u2022 Tomorrow's Action Estimation: Based on current information, agents are asked to estimate whether they will loan, buy, or sell tomorrow.\n\u2022 Trading Tip Sharing on BBS: Agents share their trading tips and insights anonymously on BBS. Messages on BBS are available to all agents on the next day."}, {"title": "4.3 External Event Simulation Settings", "content": "We use external economic and financial events from 2014 to 2019 to align our valuation and volume energy calculations with reality. The specific conditions are listed below:\n\u2022 Suppose that Company A and Company B, which issue Stock A and Stock B, both announce the financial situation of the previous quarter at the end of each quarter; for example, the third quarter of the first year announces the financial data of the second quarter of the first year, and so forth.\n\u2022 Suppose that on the first trading day of the first quarter of the second year, both Company A and Company B announce their financial results for the previous year's fourth quarter. On the same day, the government announces a reduction in the reserve ratio, causing a boost in markets M1 and M2. This results in a decrease in the loan cost for both companies from 6% to 4.5%.\n\u2022 Suppose that on the first trading day of Q1 in year three, the economy overheats, which leads to the government announcing an interest rate hike and balance sheet contraction. This results in a decrease in market liquidity and a rise in loan costs from 4.5% to 5%.\n\u2022 Also assume that on the first trading day of the first quarter of the third year, Company A announces that it expects revenue in the fourth quarter of the second year to be 3% below expectations because of special events in the quarter, and Company B announces that it expects revenue in the fourth quarter of the second year to be 2% above expectations because of special events in the quarter."}, {"title": "4.4 Financial Analysis in the Simulation", "content": "To support the financial analysis in the simulation, we use two companies' stock trading as an example, with Tables 2 to 7 showing the Statement of Valuation, financial indicators, and ideal stock price conclusion for Company A and Company B, respectively. First, the enterprise's financial data are collected, including the income statement, balance sheet, and cash flow statement. We use the income statement to show non-cash expenses, such as net income depreciation and amortization. Further, we use the balance sheet to show long-term debt and shareholders' equity.\nThe valuation method we use is FCFF (discounted free cash flow) valuation, as illustrated below:\nTotal market value = $\\sum_{t=1}^{n} \\frac{FCF_t}{(1 + WACC)^t} + \\frac{FV}{(1 + WACC)^n}$ (1)\nWhich $FCF_t$ represents the cash flow in the growth period, FV represents the present value of the cash flow discounted to the end of the growth period,\nValue of equity = Total market value \u2013 Present value of debt\nIPO listing price = $\\frac{Number\\ of\\ listed\\ shares}{Number\\ of\\ total\\ shares} \\times Value\\ of\\ equity\\ + \\ IPO\\ fees / Number\\ of\\ listed\\ shares$ (3)\nWACC = $\\frac{K_e \\times E}{D + E} + \\frac{K_d \\times D}{D + E}$ (4)\nWeighted average cost of capital (WACC) represents a company's average after-tax cost of capital from all sources, including common stock, preferred stock, bonds, and other forms of debt. Where $K_e$ is the cost of equity, $K_d$ is the cost of debt, E is equity capital, and D is debt capital. According to the Capital Asset Pricing Model (CAPM) :\n$K_e = R_f + \\beta \\times (R_f - R_m)$ (5)\nWhere $R_f$ is the risk-free rate of return, $R_m$ is the expected market rate of return, and $\\beta$ is the beta coefficient. Where $K_d$can be calculated as follows,\n$K_d = \\frac{(SD \\times SR + LD \\times LR)}{D} \\times AF \\times (1 \u2013 TR)$ (6)\nWhere $SD$ is short-term debt, $LD$ is long-term debt, $SR$ is the short-term interest rate, $LR$ is the long-term interest rate, $AF$ is bond adjustment factor, and $TR$ is the income tax rate and $D$ is debt capital."}, {"title": "5 Experiment, Results, and Validation", "content": "Our experimental design is demonstrated in Figure 3. Agents make trading decisions based on numerous external information in our simulations. The simulation evaluation is conducted from"}, {"title": "5.1 Backbone Large Language Models", "content": "For the experiment, we select two widely used LLMs, namely Gemini and GPT at the time of this study, as the backbone LLMs to conduct the stock trading tasks. These two LLMs have shown robust abilities to comprehend and generate information in complex simulated environments, as demonstrated by prior studies listed in Sections 2.3 and 2.4. Both models represent current state-of-the-art in large language models, each with unique strengths in natural language processing and generation. For simplicity, we call them GPT and Gemini in our subsequent experiment and result analysis.\nGemini-Pro (Gemini-pro-1.0): Gemini is a family of multimodal language models developed by Google DeepMind [41]. As the successor to LaMDA and part of the PaLM2 family, it represents a significant advancement in AI capabilities. The Gemini family includes Ultra, Pro, and Nano models, each designed for different use cases. Gemini-Pro, used in this study, offers a balance of advanced language processing and computational efficiency. It can handle various input types including text, images, audio, and video, making it versatile for diverse applications.\nGPT-3.5-Turbo (gpt-3.5-turbo-0125): Part of the GPT (Generative Pre-trained Transformer) series by OpenAI [8], GPT-3.5-Turbo is an improved iteration of the GPT-3.5 model. It offers enhanced accuracy in responding to specific format requests and improved efficiency. This model can generate up to 4,096 output tokens and is optimized for a wide range of language tasks, from simple queries to complex reasoning."}, {"title": "5.2 Simulation Evaluation", "content": "To evaluate the simulation, we focus on three aspects: (1) simulation effectiveness, (2) LLM reliability, and (3) the impact of external factors on simulated stock trading, as highlighted by our three research questions. The first two evaluations aim to establish a foundation for understanding how the selection of LLM can affect the simulation. In contrast, the last evaluation aims to demonstrate that our developed AI Agents can respond to external events and make reasonable trading decisions.\nSimulation Effectiveness. In response to RQ1, we use GPT and Gemini to trade stocks for 10 trading days under the same premise and setup. We collect the transaction logs of each model to conduct price trend correlation, volume, and transaction frequency to judge the similarity of trading volume. Combining these properties, we evaluate the effect of simulation based on different AI Agents and determine the trading preferences of LLMS.\nLLM Reliability. In response to RQ2, we investigate how AI agents, driven by different LLMs, make trading decisions over multiple simulation rounds. Specifically, we aim to assess whether the propensity to trade, influenced by prior LLM knowledge, can impact the decision reliability. Therefore, we simulate each AI Agent's longitudinal decision-making and analyze their trading patterns and outcomes.\nSimulated Stock Trading under External Conditions. In response to RQ3, we first identify trading patterns through data analysis to analyze deviations in trading behavior in simulated stock trading, focusing on frequency, timing, volume, and transaction decisions. Statistical methods can highlight anomalies or notable deviations. We must also evaluate how these biases affect investment performance, often by comparing trading returns against benchmarks. Tools like regression analysis and ANOVA help quantify the impact of behavioral bias on performance. Table 8 and Table 9 below mainly elaborate on the Evaluation method of our Research Questions and the experimental environment setting."}, {"title": "5.3 RQ1. Simulation Effectiveness", "content": "In this simulation effectiveness experiment, we use GPT-3.5-Turbo and Gemini-Pro as two backbone LLMs, respectively, to conduct simulated trading for 10 days under our standard experimental environment. The detailed settings are in Table 9."}, {"title": "5.3.1 Correlation of Price Movements.", "content": "In this part, we analyze the similarity of price movement on two 10-day trading data based on Gemini and GPT. We use the correlation coefficient to measure and visualize the linear relationship between the stock price time series of two stocks, Stock A and B. The visualization results of correlation analysis are listed as follows Figure 4. Based on the experimental results, it is evident that GPT and Gemini exhibit different trading tendencies."}, {"title": "5.3.2 Trading Behavior Analysis.", "content": "In this part, we analyze the difference between GPT and Geminidriven AI Agents' trading behaviors, including trading volume, price, and frequency. From the results shown in Table 10 and Table 11, we observe the trading preferences of the two LLMs from the perspective of the trading volume. The trading volume of the GPT group is significantly higher than that of the Gemini group, but the trading frequency of the GPT group is lower than that of the Gemini group. This feature appears not only in Stock A but also in Stock B. We refer to the idea stock price A and B in Table 6 and Table 7. In addition, GPT agents are more cautious about their trading decisions in Stock B than in Stock A. Regarding trading frequency, Gemini trades more days, while GPT follows the trend."}, {"title": "5.3.3 Al Agent Features.", "content": "In this section, we focus on the AI Agent features. We compare the agents between traders and give a reasonable qualitative analysis. Further, we use clustering analysis to cluster according to the trading behavior of each AI Agent to see whether the trading crowd based on the two models conforms to behavioral finance.\nWe collect each AI Agent's asset changes, earnings, stock holdings, and the number of stock A-shares bought and sold, clustered the situation of each Agent, and perform T-SNE visualization. According to the results in Figure 5, the investors of Gemini Agent have similar characteristics and only a very few investors show performance different from that of the general public in the visualization results. However, in the T-SNE visualization of GPT agents, samples are relatively more dispersed, which means that GPT-driven agents have more subjective decision-making ability and thus conduct fewer herd and trend transactions than Gemini."}, {"title": "5.4 RQ2. Large Language Model Reliability", "content": "Fig.6 and Fig.7 depict the final prices of Stock A and Stock B at the end of each trading day based on the trading decisions made by GPT and Gemini-driven AI Agents, respectively. Overall, the trading price change trend of the same stock on different LLMs is similar, but the final price gap at the end of each trading day is large.\nThe comparison of Gemini and GPT-driven AI Agent trading behaviors reveals interesting insights. First, both agents demonstrate similar overall trends for each stock, suggesting a comparable underlying understanding of market dynamics. However, their execution strategies differ significantly. The Gemini-driven AI Agent exhibits a more conservative approach, with lower volatility and smaller price ranges over a shorter trading period of about 450 rounds. In contrast, the GPT-based agent displays a more aggressive strategy, allowing for larger price fluctuations over a much longer trading duration of approximately 1750 rounds. This results in higher potential gains but also increased risk.\nDespite these differences, both agents consistently show Stock A outperforming Stock B, indicating a shared ability to identify relative stock performance. The GPT-based AI Agent achieves higher final prices for both stocks, while the Gemini-based AI Agent maintains more stable, albeit lower, prices. These observations indicate that while different LLMs share similar foundational knowledge of stock market behavior, their distinct abilities or implementations can lead to different trading outcomes."}, {"title": "5.5 RQ3. Simulated Stock Trading under External Conditions", "content": "In this simulated stock trading experiment, we use Gemini-Pro as the baseline model to conduct an ablation study. The study simulates 30 rounds over 10 days under different experimental environments, removing financial information, BBS, financial state, loan, and interest change, respectively. The detailed settings are presented in Table 9, and detailed experimental data can be found in the Appendix B."}, {"title": "5.5.1 Transaction Pattern Recognition and Behavioral Analysis.", "content": "In this section, we analyze the transaction pattern and transaction behavior through the analysis of the log results. First, here's a comparison of stock price movements in different trading environments in Figure 8. The trading frequency of Stock A and Stock B in each case is shown in Figure 9. According to our experimental results, canceling the benchmark interest rate information significantly promotes Stock A's trading, while the lack of other information has little impact. The AI Agent is relatively sensitive to the interest rate brought by the loan in the transaction style. The cancellation of the interest rate promotes the interest-free loan to a certain extent, which makes the Agent optimistic about the transaction."}, {"title": "6 Discussion", "content": "In this study, we design a MAS called StockAgent to simulate stock trading activities. We utilize two widely used LLMs, namely GPT-3.5-Turbo and Gemini-Pro, to drive the simulation and test StockAgent's performance in an event-driven environment. Through comprehensive financial and statistical analyses, we identify several key findings and implications in response to each research question, which are outlined below:\nDifferent LLMs can cause AI Agents to exhibit significant differences in trading behavior. When comparing GPT-based and Gemini-based AI Agents, we observe significant differences in trading behavior. Although the GPT-driven AI Agents trades less frequently, the volume is significantly higher than that driven by Gemini. In addition, the GPT-driven AI Agents makes more cautious trading decisions on stock A, while the Gemini-driven AI Agents trades with a similar frequency on stocks A and B, showing a higher trading activity. This suggests that different LLMs may have different understandings of the market and strategic preferences. The experimental results of our experiments 5.3 support this view. This finding may have a certain impact on users and exchanges that use StockAgent for testing, and their simulation results may be biased due to different LLM choices.\nAI Agents show differences in in-group trading behavior across simulations. Through cluster analysis and T-SNE visualization, we find that Gemini-based agents exhibit similar characteristics and more consistent group behavior. In contrast, GPT-driven agents display greater individual differences and subjective decision-making abilities. The sample of GPT-driven agents is more dispersed in the visualizations, possibly indicating less herding and trend trading, and instead demonstrating more independence and diversity. This suggests that GPT agents can embody personalized investment strategies and styles when facing the market. This observation can be further helpful for developers when debugging the StockAgent platform, as it helps configure the roles of each group in the agent according to the specific scenarios they need to simulate.\nDifferent external factors can significantly affect AI Agents' trading behaviors. Through our simulated trading experiments, we observe that disabling the functions of non-first round loans and BBS sharing makes individual agents more conservative while canceling the profit report and interest rate change makes some agents turn from loss to profit. At the same time, removing the support of any financial information can widen the profit and loss gap (more variance) between agents, and the overall market competition becomes more intense. This finding is mainly aimed at the Stock exchange that intends to use this simulation. Therefore, to achieve high reliability in the StockAgent simulation, it is crucial to provide comprehensive influence factors."}, {"title": "6.2 Opportunities for Future Work", "content": "This study opens several avenues for future work. First, we could perform more technical analysis by employing different trading strategies on"}]}