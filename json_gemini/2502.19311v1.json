{"title": "Faithful Logic Embeddings in HOL \u2013 A recipe to have it all: deep and shallow, automated and interactive, heavy and light, proofs and counterexamples, meta and object level", "authors": ["Christoph Benzm\u00fcller"], "abstract": "Deep and shallow embeddings of non-classical logics in clas-\nsical higher-order logic have been explored, implemented, and used in\nvarious automated reasoning tools in recent years. This paper presents a\nrecipe for the simultaneous deployment of different forms of deep and\nshallow embeddings in classical higher-order logic, enabling not only\nflexible interactive and automated theorem proving and counterexam-\nple finding at meta and object level, but also automated faithfulness\nproofs between the logic embeddings. The approach, which is fruitful for\nlogic education, research and application, is deliberately illustrated here\nusing simple propositional modal logic. However, the work presented is\nconceptual in nature and not limited to such a simple logic context.", "sections": [{"title": "Motivation and Introduction", "content": "Deep embeddings of logics, or more generally of domain-specific languages, in a\nsuitable metalogic, such as the classical higher-order logic (HOL) [23,4], are typ-\nically based on explicitly introduced abstract data types that essentially axioma-\ntize the inductively defined character of the new language. Shallow embeddings,\non the other hand, identify the embedded logics or languages as fragments of the\nmetalogic and they typically require few or no axiom postulates. Since deep and\nshallow embeddings logics in HOL effectively and elegantly support, for exam-\nple, interactive and automated reasoning with and about such logics in already\nexisting theorem proving systems for the chosen metalogic, they have received\nincreased attention in recent years. This becomes even more relevant if, for ex-\nample, quantified non-classical logics are embedded and mechanized this way,\nsince many such logics have relevant applications, but often only a few or none\ndirect prover implementations exist. This is the case, for example, for deontic\nlogics which e.g. have topical applications in normative reasoning and AI ethics.\nAgainst this background, the motivation and idea of this paper is multi-\nfaceted. First, this paper presents a technique for inherently linking deep and"}, {"title": "Popositional modal logic (PML)", "content": "The syntax of PML is defined by the grammar \u03c6, \u03c8 := a | \u00ac\u03c6\u2502\u03c6 \u2283 \u03c8 | \u25a1\u03c6,\nwhere a \u2208 S are propositional symbols declared in a (nonempty) signature S.\nFurther logical connectives can be defined as usual, e.g.: \u03c6 \u2228 \u03c8 := \u00ac(\u00ac\u03c6 \u2283 \u03c8),\n\u03c6 \u2194 \u03c8 := \u00ac(\u03c6\u2283 \u03c8), \u25ca\u03c6 := \u00ac\u25a1\u00ac\u03c6,T := p \u2283 p (for some p \u2208 S), and \u22a5 := \u00acT.\nA semantics for PML, called relational semantics or possible-world seman-\ntics, determines the truth of a formula relative to a so-called possible world w\nand a relational model. A relational model is a tuple (W, R, V), where W is a\nset of possible worlds (called the universe), R is a binary relation on W (called\nthe accessibility relation), V is a valuation function that assigns a truth value to\neach symbol a \u2208 S in each world w \u2208 W, where S is the signature of proposi-\ntional symbols. Formally, the truth of a formula \u03c6 with respect to a given model\n(W, R, V) and a possible world w \u2208 W is defined as follows:\n(W, R, V), w |= a iff V(a)(w) is true\n(W, R, V), w |= \u00ac\u03c6 iff not (W, R, V), w |= \u03c6\n(W, R, V), w |= \u03c6 \u2283 \u03c8 iff (W, R, V), w |= \u03c6 implies (W, R, V), w |= \u03c8\n(W, R, V), w |= \u25a1\u03c6 iff for all v with Rwv we have (W, R, V), \u03c5 |= \u03c6\nNote that in this recursive definition of truth the only parameter that may\nbe recursively modified is the possible world w in the \u25a1-clause, which states that\na formula \u25a1\u03c6 is \u201cnecessary\u201d a world w iff \u03c6 is true at all reachable worlds v from\nw. Based on the above definitions a notion of validity can be defined: A formula\n\u03c6 is valid (in so called base modal logic K) iff (W, R, V), w |= \u03c6 for all W, R,\nV, and w \u2208 W.\nDifferent systems of modal logic beyond base logic K can be obtained by\nrequiring (combinations) of so called frame conditions. For example, a frame is\ncalled (i) reflexive iff Rxx for all x \u2208 W, (ii) symmetric iff Rxy implies Ryx,\nfor all for all x,y \u2208 W, and (iii) transitive if Rxy and Ryz implies Rxz, for\nall for all x, y, z \u2208 W. Moreover, there are well-known correspondences, known\nas Sahlqvist correspondences [48], between such semantic conditions and the\nvalidity of certain axiom schemata. For example, (i) corresponds to the validity\nof axiom schema M: \u25a1\u03c6 \u2283 \u03c6, (ii) to B: \u03c6\u2283\u25ca\u03c6 and (iii) to 4: \u25a1\u03c6\u2283\u25a1\u25a1\u03c6.\nA proof system for modal logic K is obtained by adding the schematic ne-\ncessitation rule, stating that \u201cif \u03c6 is a theorem of K, then so is \u25a1\u03c6\u201d and the\ndistribution axiom schema \u25a1(\u03c6 \u2283 \u03c8) \u2283 (\u25a1\u03c6 \u2283 \u25a1\u03c8) to the principles of classical\npropositional logic, which in turn can be captured by a simple Hilbert calcu-\nlus [56,50] consisting of the modus ponens rule, if \u03c6 and \u03c6\u2283 \u03c8 are theorems\nof K), then so is \u03c8\u201d, and the three axiom schemata H1: \u03c6 \u2283 (\u03c8 \u2283 \u03c6), H2:\n(\u03c6\u2283 (\u03c8 \u2283 4))\u2283((\u03c6\u2283\u03c8)\u2283(\u03c6\u2283 \u03c8)) and H3: (\u00ac\u03c6\u2283 \u00ac\u03c8)\u2283(\u03c8 \u2283\u03c6).\nWell known modal logics beyond K (which works without additional frame\nconditions) include the logic S4 with e.g. the frame conditions (i) and (iii) and\nthe logic S5 with e.g. the frame conditions (i), (ii) and (iii). Thus, by adding the\nschematic axioms (M)+(4) or (M)+(B)+(4) to the proof system for modal logic\nK above, proof systems for S4 and S5 are obtained."}, {"title": "Classical higher-order logic (HOL)", "content": "The syntax of HOL is defined by s,t := pa | \u03a7\u03b1 | (\u03bb\u03a7\u03b1\u03b4\u03b2)\u03b1\u21d2\u03b2 | (Sa\u21d2\u03b2ta)\u03b2,\nwhere \u03b1, \u03b2, o \u2208 T and with T being a set of simple types defined by \u03b1, \u03b2 :=\no | i | (\u03b1\u21d2\u03b2). Type o, called bool in Isabelle/HOL, denotes truth values, i\nindividuals, and \u21d2 is the function type constructor. The pa \u2208 Sa in the syntax of\nHOL are typed constants symbols declared in a signature I = (Sa)a\u2208T. The Xa\nare typed variables (distinct from the pa). Complex HOL terms are constructed\nfrom given HOL terms via \u03bb-abstraction (\u03bb\u03a7\u03b1\u03c6\u03b2)\u03b1\u21d2\u03b2 and function application\n(Sa\u03c6ta)\u03b2. HOL is thus a logic of terms defined on top of the simply typed \u03bb-\ncalculus, and terms of type o are called formulas. The type of each term is given as\na subscript and may be omitted if obvious in context. It is assumed that signature\nI contains the following primitive logical connectives: \u00aco\u21d2o, \u2228o\u21d2o\u21d2o, \u039e\u03b1\u21d2o\u21d2\u03b1\n(short: =\u03b1) and \u03a0(\u03b1\u21d2o)\u21d2o (short: \u2200\u03b1). Further logical connectives or shorthand\nnotations can be introduced as usual; e.g. \u2192o\u21d2o\u21d2o := \u03bbXo\u03bbYo(\u00acX \u2228Y) and\n\u2200X\u03b1\u03c6\u03bf := \u03a0\u03b1(\u03bb\u03a7\u03b1\u03c6).\nThe definition of a semantics for HOL starts with the notion of a frame D, a\ncollection {Da}a\u2208T of nonempty sets Da, such that Do = {T, F} (for the truth\nvalues true and false). Di is chosen freely and Da\u21d2\u03b2 are collections of functions\nmapping Da into DB. A model for HOL is a tuple M = (D, I), where D is\na frame, and I is a family of typed interpretation functions mapping constant\nsymbols pa \u2208 Ca to appropriate elements of Da, called the denotation of pa. The\nlogical connectives \u00ac, \u2228, \u03a0 and = are given their expected standard denotations,\nfor example, I(\u00ac) is such that I(\u00ac)(T) = F and I(\u00ac)(F) = T, and I(\u03a0\u03b1) is\nsuch that for all s \u2208 Da\u21d2o we have I(\u03a0\u03b1)(s) = T iff s(a) = T for all a \u2208 Da.\nA variable assignment g maps variables Xa to elements in Da, and g[d/W]\ndenotes the g' identical to g, except for variable W, which is now mapped to d.\nThe denotation [sa]M,g of an HOL term sa on a model M = (D, I) under\nassignment g is an element d\u2208 Da defined by [pa]M,g = I(pa), [X\u03b1]M,g =\ng(Xa), [(Sa\u03c6ta)\u03b2]M,g = [Sa\u21d2\u03b2]M,g([ta]M,g), and [(\u03bbX\u03b1\u03c6\u03b2)\u03b1\u21d2\u03b2]M,g = the\nf : Da \u21d2 D\u03b2 s.t. \u2200d \u2208 Da: f(d) = [SB]M,g[d/Xa]. Note that from the given\ndefinitions it e.g. follows [\u2200X\u03b1\u03c6o]M,g = Tiff [\u03c6o]M,g[d/Xa] = T for all d \u2208 Da.\nIn a standard model a domain Da\u21d2\u03b2 is defined as the set of all total functions\nfrom Da to D\u03b2: Da\u21d2\u03b2 = {f | f : Da \u21d2 D\u03b2}. In a Henkin model (or general model)\n[33,2] function spaces are not necessarily required to be the full set of functions:\nDa\u21d2\u03b2 \u2286 {f | f : Da \u21d2 D\u03b2}. However, it is required that every term still denotes.\nso is valid in M under assignment g, denoted as M, g |=HOL so, iff [so]M,g= T\nso is valid in M, denoted as M |=HOL so, iff M, g |=HOL so for all assignments g,\nand so is valid, denoted as |=HOL so, iff so is valid in all Henkin models M.\nEach standard model is obviously also a Henkin model. Consequently, if\n|=HOL so, then so is also valid in all standard models.\nDue to G\u00f6del [30], sound and complete mechanizations of HOL with stan-\ndard semantics cannot be achieved. For HOL with Henkin semantics, however,\nsound and complete calculi exist; see e.g. [5,7]. Relevant for this paper is that\nIsabelle/HOL is also sound and complete for HOL, and that HOL as presented\nis sufficiently well suited as a metalogic for the work presented in this paper."}, {"title": "Deep embedding of PML in HOL", "content": "This section presents a deep embedding of PML in HOL. Both the PML language\nand its semantics are formalized very closely following the definitions given in\n\u00a72. This formalization, and all others presented in this paper, are based on\nsome uniformly assumed conventions, resp. preliminaries. These preliminaries\nare provided in a file PMLinHOL_preliminaries.thy; see Appendix A.3 Relevant\nat this point is that a type S is introduced to represent the signature S of PML,\ni.e. a (finite or infinite) set of propositional logic symbols; type w is the type of\npossible worlds, W := w\u21d2bool is the predicate type of possible worlds (we regard\npredicates of this type as characteristic functions for the associated set of possible\nworlds), R := w\u21d2w\u21d2bool is the type of accessibility relations between possible\nworlds, and V := S\u21d2w\u21d2bool is the type of evaluation functions. \u2200w:W.\u03c6 is a\nW-predicate guarded quantifier that unfolds into \u2200w. W w \u2192 \u03c6 (W is of type\nW). An important remark concerns the sharing of the signature type S between\nall embeddings introduced in this paper. This sharing is essential for enabling\nthe faithfulness proofs between the embeddings as presented in \u00a77.\nThe deep embedding of PML in HOL is defined in file PMLinHOL_deep.thy\nand presented at top of Fig. 1, in which comments are encapsulated in orange\ndelimiters -< >. After importing PMLinHOL_preliminaries.thy, this file starts\nout with defining an abstract datatype\u2074 introducing the inductively defined logic\nlanguage PML, which introduces atomic formulas ad (for a \u2208 S), negated for-\nmulas \u00acd\u03c6, implication formulas \u03c6\u2283d \u03c8, and boxed formulas \u25a1d\u03c6 (see line 4).\nThe superscript d is used to mark all deeply embedded connectives so that they\ncan be properly distinguished from their counterparts defined in the following\nsections. In these sections, the alternative superscripts s (maximal shallow) and\nm (minimal shallow) are used accordingly.\nIn accordance with \u00a72 the further logical connectives \u2228d, \u2227d, \u25ca\u25cad, Td, and \u22a5d\nare introduced as defined terms (lines 6-10).5 Then the primitive recursive defini-\ntion of truth in a world w for a given model (W, R, V), termed RelativeTruthD\nand noted as (W, R, V), w |=d \u03c6, is given (lines 12-16). This definition follows one\nto one, even in presentation style, the definition introduced in \u00a72. Based on this,\nthe validityd of a deeply embedded formula \u03c6 is defined as relative truth\nwrt. all sets of worlds W, accessibility relations R, valuation functions V, and\nworlds w \u2208 W (line 18). Finally, in order to support a convenient, simultaneous\nunfolding of the introduced definitions, a bag DefD is defined (in lines 20-22),\nwhich bundles them and adds them also to the simplifier simp of Isabelle/HOL."}, {"title": "Maximal shallow embedding of PML in HOL", "content": "The shallow embedding of PML in HOL presented in the middle of Fig. 1 and\nformalized in Isabelle/HOL file PMLinHOL_shallow.thy, is a maximal (heavy-\nweight) shallow embedding in the following sense: PML formulas \u03c6 are associated\nhere with HOL predicate terms of type \u03c3 := W\u21d2R\u21d2V\u21d2w\u21d2bool (see line\n5), thus explicitly encoding the entire semantic dependencies of a PML formula\n\u03c6 on a set of worlds W, an accessibility relation R, a valuation function V and\na world w. Remember, that W, R, V, and w have been uniformly declared for\nall embeddings presented in this paper in the imported preliminaries file.\nExploiting \u03bb-abstraction and the logical connectives \u00ac and \u2192 from meta-\nlogic HOL, the definitions of deeply embedded negation \u00acs\u03c6 and implication \u03c6\u2283s \u03c8\n(in lines 7-8), recursively pass on all the dependencies as mentioned: \u00acs\u03c6 :=\n\u03bbWRVw.\u00ac(\u03c6WRVw) and \u03c6 \u2283s \u03c8 := \u03bbWRV w. (\u03c6WRVw) \u2192 (\u03c8WRVw).\nAtoms as, for a \u2208 S, are evaluated (in line 6) using the explicitly maintained\nvaluation function V, that is, as := \u03bbWRVw.Vaw. The only case where\nparts of the recursively passed on dependencies are actually modified is (in\nline 9) for \u25a1s\u03c6, since here the world in which \u03c6 is recursively evaluated may\nchange with the transition, via the accessibility relation R, to world v: \u25a1s \u03c6 :=\n\u03bbWRVw.\u2200v.Rw\u03c5 \u2192 (\u03c6WR V v), where \u2200 is the universal quantifier of met-\nalogic HOL. The definition of the other logical connectives \u2228S, \u2227S, \u25cas, Ts and\n\u22a5 (in lines 11-15) is analogous to the deep embedding and as given in \u00a73.\nTruth in a world w for a given model (W, R, V), called RelativeTruthS and\nnoted as (W, R, V), w |=s \u03c6, is then defined (see line 17) as the application of \u03c6\nto W, R, V and w. Analogous to the deep embedding from above, validity |=s\nof an embedded formula \u03c6 is defined as relative truth wrt. all sets of worlds W,\naccessibility relations R, valuation functions V, and worlds w \u2208 W (line 19).\nAlso analogous to above, a bag DefS is defined (lines 21-23), which conveniently\nbundles all the definitions given in this file and adds them to the simplifier. Note\nthat not a single axiom is being introduced in this maximal shallow embedding,\nwith the effect, that PML is being characterized here as a proper, albeit quite\nheavyeight, fragment of the language of HOL."}, {"title": "Minimal shallow embedding of PML in HOL", "content": "The maximal shallow embedding presented in \u00a75 explicitly maintains more de-\npendencies than seemingly necessary, since the set of worlds W, the accessibility\nrelation R, and the valuation function V are never modified in any of the given\ndefinitions, but simply passed on. Therefore, it makes sense to treat these static\ndependencies as parameters in the metalogic HOL. This is the core idea of the\nminimal (leightweight) shallow embedding of PML in HOL as shown at the\nbottom of Fig. 1 and formalized in file PMLinHOL_shallow_minimal.thy."}, {"title": "Faithfulness automated", "content": "The deep embedding presented in \u00a74 and the maximal and minimal shallow\nembeddings presented in \u00a76 and \u00a75 have been carefully designed to allow for\nautomated proofs of mutual faithfulness within the metalogic HOL. A relevant\naspect is the sharing of the signature S of propositional symbols between all\nembeddings. The automated faithfulness proofs are shown in Fig. 2.\nThe starting points are the mapping functions (.) and [.] (in lines 5-6), which\nmap deeply embedded formulas to maximally and minimally embedded counter-\nparts, respectively. Using these mappings the following faithfulness statements,\nwhich are formulated relative to the deeply embedded proof language PML, are\nproved automatically by induction:\n\u2200W R V w. (W, R, V), w |=d \u03c6 \u2194 (W, R, V), w |=s (\u03c6) (Faithfulla)\n\u2200w. ((\u03bbxw.T), R, V), w |=d \u03c6 \u2194 w |=m [\u03c6] (Faithfullb)\n\u2200w. ((\u03bbxw.T), R, V), w |=d (\u03c6) \u2194 w |=m [\u03c6] (Faithful2)\n\u2200w. ((\u03bbxw.T), R, V), w |=s (\u03c6) \u2194 w |=m [\u03c6] (Faithful3)\nTheorems Faithfulla and Faithfulib are rather obvious; they establish\nthe desired faithfulness correspondence between deeply embedded formulas and"}, {"title": "Experiments", "content": "To provide an idea of the different possibilities that are now possible with the\nlinked embeddings, in particular also for logics education, some experiments are\nreported in this section. The experiments performed also test the soundness\nof our embeddings, and assess proof automation and counterexample finding for\nthem. The embedding that has performed best in terms of proof automation with\nsledgehammer and counterexample finding with nitpick is the minimal shallow\nembedding. This is the reason why file PMLinHOL_shallow_minimal_tests.thy,\nas shown in Fig. 3 is presented here. The corresponding experiment files with the\ndeep embedding and the maximal shallow embedding are shown in Appendix B.\nDerived Hilbert calculus. The first experiments (see lines 4-7) confirm that the\nschematic axioms H1-H3 and the modus ponens rule MP of the propositional\nHilbert calculus from \u00a72 are implied by the minimal shallow embedding. The\nauto tactic, and with it, the simplifier simp are used, which has access to the"}, {"title": "Related work and implications for LOGIKEY", "content": "Much related work on the connections between deep and shallow embeddings\ncan actually be found in the literature, see e.g. [54,34,46,55] and the references\ntherein. However, there seems to be no work reported yet which achieved the\nautomation of faithfulness proofs between deep and (different degrees of) shallow\nembeddings as demonstrated in this paper.\nDeep embeddings. Exemplary developments and applications of non-trivial deep\nlogic embeddings include self-verifications of the HOL light logic [32,1], a for-\nmalization of the Core Why3 logic [24], and a provably sound implementation\nof a differential dynamic logic [19], to name a few. For examples of deep embed-\ndings of logics and their calculi in the Coq proof assistant [14], see e.g. [51] and\nthe references therein, and Isabelle/HOL examples are presented in [18,27,28,26].\nFurther related work on the self-verification or bootstrapping of theorem provers\ncan be found in [21], and more recently in [22] in the context of Lean [42].\nShallow embeddings. Exemplary work in this category, which Nipkow called the\nextensional approach [43], includes a mechanization of HOL reasoning in first-\norder set theory [31], the techniques presented in [34] to overcome some problems\nof shallow embedding for reasoning over the syntax of embedded languages, a\nshallow embedding for a pure type systems in first-order logic [25], and various\nother works such as [47,38]; see also the references given in [55]. Moreover, note\nalso that the automation support for various quantified non-classical logics as\nrealized in the HOL theorem prover Leo3 [52,53] is based on shallow embeddings.\nImplications for LOGIKEY. The logic-pluralistic knowledge and reasoning method-\nology LOGIKEY[8], see Fig. 6, leverages higher-order logic (HOL) as a unifying\nmetalogic to enable the modeling of diverse object logics, so far, primarily via\nusing shallow semantic embeddings.\nLOGIKEY has been used in a number of application domains and contexts\nwhere different object logics, such as free logic or modal higher-order logic, for\nexample, have been used as a starting point; see e.g. [11,13,45]\nThis paper illustrates how the LOGIKEYapproach may benefit in the future\nfrom systematically provided, mutually faithful deep and shallow embeddings\nof all its supported object logics, so that they be used interchangeably. The\ntechnique presented in this paper has also the potential to replace or complement\nmany pen and paper proofs to establish faithfulness results in prior works, such as\ne.g. given in [9,3,10], by verified proofs within the proof assistant. This in turn\nwill be relevant for enabling applications in areas that require highest levels\nof trust. For this note that a particular application direction of LOGIKEY is\nnormative and legal reasoning in the context of AI regulation, see also [39].\nMoreover, with respect to the LOGIKEY context, this paper also illustrates\nthe conceptual changes that were applied in the transition in previous work from\nlightweight shallow embeddings of non-classical logics, as used for example for\nencoding higher-order modal logic [9] or conditional logic [3] (which take into"}, {"title": "Conclusion", "content": "This paper has shown how interlinked deep and (varying degrees of) shallow logic\nembeddings can be modeled and implemented in classical higher-order logic, as\nprovided by many modern proof-assistant systems. This technique allows for the\nmechanization of faithfulness proofs between these embeddings, and, as has been\nshown in this paper, can even support the automation of such proofs.\nThe presented technique is interesting for future research in several ways, and\nis particularly suited to support logic education due to its conciseness, elegance,\nand support for interactive and automated theorem proving and counterexample\nfinding. The latter was a motivation to illustrate the approach in this paper\nusing simple propositional modal logic, which is routinely used as introductory\nmaterial in logic courses worldwide. The provided Isabelle/HOL sources should\nbe easily reusable in such a context, and only some basic features of Isabelle/HOL\nhave been used to additionally support this idea."}, {"title": "Preliminaries", "content": "Figure 7 presents preliminaries that are uniform for all embeddings studied and\nwhich are imported by all Isabelle/HOL theory files presented in this paper.\nTwo HOL base types w and S are declared (in lines 4-5) to denote a (nonempty)\nset of possible worlds and a (nonempty) set of propositional constant symbols,\nthe signature common to all embeddings discussed in this paper. Then (in line 6)\nthe exemplary signature symbols p, q and r are introduced, and type synonyms\nare declared (in lines 7-8): W for sets of possible worlds (universe), R for binary\nrelations on W (accessibility relations), and V for evaluation functions that as-\nsign truth values to the symbols a \u2208 S for each world w. Then some well-known\nrelational properties are introduced as abbreviations (in lines 11-19), and the\nguarded quantifier notation w:W. \u03c6 is defined to stand for \u2200w. W w \u2192 \u03c6 (W\nis of type W). Finally, the useful backward implication \u2190 is defined, which is\nunfortunately missing in Isabelle/HOL."}, {"title": "Alternative experiments", "content": "Experiments with the maximal shallow embedding and the deep embedding of\nPML in HOL are presented in Figs. 8 and 9 respectively. Automation results that\ndivert from those reported for the minimal shallow embedding are highlighted\nby (**)."}]}