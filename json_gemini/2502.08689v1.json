{"title": "Advancing machine fault diagnosis: A detailed examination of convolutional neural networks", "authors": ["Govind Vashishtha", "Sumika Chauhan", "Mert Sehri", "Justyna Hebda-Sobkowicz", "Radoslaw Zimroz", "Patrick Dumond", "Rajesh Kumar"], "abstract": "The growing complexity of machinery and the increasing demand for operational efficiency and safety have driven the development of advanced fault diagnosis techniques. Among these, convolutional neural networks (CNNs) have emerged as a powerful tool, offering robust and accurate fault detection and classification capabilities. This comprehensive review delves into the application of CNNs in machine fault diagnosis, covering its theoretical foundation, architectural variations, and practical implementations. The strengths and limitations of CNNs are analyzed in this domain, discussing their effectiveness in handling various fault types, data complexities, and operational environments. Furthermore, we explore the evolving landscape of CNN-based fault diagnosis, examining recent advancements in data augmentation, transfer learning, and hybrid architectures. Finally, we highlight future research directions and potential challenges to further enhance the application of CNNs for reliable and proactive machine fault diagnosis.", "sections": [{"title": "1. Introduction", "content": "The relentless pursuit of operational efficiency, safety, and economic viability in modern industries has propelled the development of sophisticated machinery capable of performing complex tasks. However, this increased complexity comes at a price: the potential for malfunctions and failures grows exponentially, impacting production, safety, and overall system performance [1][2]. Timely and accurate fault diagnosis becomes crucial for mitigating these risks, enabling proactive maintenance, and minimizing downtime and associated costs [3][4]. Traditional fault diagnosis methods often rely on a combination of expert knowledge, rule-based systems, and signal-processing techniques. While these approaches have proven effective in specific scenarios, they face limitations in handling complex fault patterns, noisy data, variable working conditions, and evolving machine characteristics [5][6]. The rapid advancements in artificial intelligence (AI) and machine learning (ML) have opened new avenues for fault diagnosis, offering data-driven solutions capable of learning complex relationships and making accurate predictions.\nMachine fault diagnosis has witnessed a steady evolution of approaches, driven by the ingenuity of researchers and engineers. These methods can be broadly categorized into four main groups: physical model-based, signal processing-based, machine learning-based, and hybrid approaches [7][8]. Physical model-based methods rely on a deep understanding of the machine's inner workings. However, creating accurate models for modern complex machinery, particularly in dynamic and noisy environments, presents a significant challenge. Furthermore, these models often lack flexibility, proving difficult to update with real-time monitoring data [9][10]. Signal processing-based methods focus on enhancing fault characteristic information through advanced noise reduction and filtering techniques. This approach requires a strong understanding of the relevant equipment and its frequency characteristics. Additionally, establishing a robust theoretical foundation and mathematical basis for fault representations is crucial for its success. Machine learning-based methods, representing data-driven approaches, have gained immense momentum in the modern industrial landscape. While classical machine learning models, such as support vector machines (SVMs) and k-nearest neighbors (kNNs), have achieved impressive results, they face limitations when confronted with the demands of modern industry [11][12]. For instance, the need for manual feature extraction and selection hinders their effectiveness in analyzing complex big data, while still requiring domain expertise. Their shallow structures struggle to effectively mine high-dimensional features. Separate feature mining and decision-making processes lead to inefficient optimization, impacting performance. As sensor diversity and machine complexity increase, traditional algorithms struggle to deliver satisfactory results in the face of growing data dimensionality and dynamics. Hybrid approaches aim to leverage the strengths of different methods, combining the knowledge-driven aspects of physical models with the data-driven power of machine learning and the analytical prowess of signal processing. This combined approach holds immense promise for tackling the complex challenges of machine fault diagnosis in modern industrial settings.\nDeep learning, a rapidly evolving branch of machine learning, has experienced remarkable growth and success across diverse fields like image recognition and language processing. This surge in popularity is driven by a confluence of factors [13]. For instance, Deep learning's inherent ability to process massive datasets and learn complex features, coupled with innovative architectural advancements, has fueled its rapid adoption [14][15]. The explosion of industrial big data, breakthroughs in hardware and IoT technology, and the increasing demand for intelligent solutions in various domains have further propelled the advancement of deep learning [16]. Naturally, this wave of innovation has also impacted machine fault diagnosis. Over the past five years, deep learning has revolutionized fault diagnosis, leading to the development of various models, including deep autoencoders, deep belief networks (DBNs), recurrent neural networks (RNNs), and CNNs.\nAmong these various ML techniques, CNNs have emerged as a powerful tool for machine fault diagnosis. CNNs, renowned for their prowess in image recognition and other visual tasks, exhibit a unique ability to extract spatial features from complex data, making them particularly well-suited for analyzing signals generated by machines. This ability to decipher the intricate patterns present in vibration signals, acoustic emissions, and sensor readings empowers CNNs to identify and classify faults with remarkable accuracy. The general framework of convolutional network-based fault diagnosis (CNFD) is shown in Fig. 1.\nThis comprehensive review delves into the application of CNNs in machine fault diagnosis, providing a comprehensive overview of the theoretical foundations, architectural variations, and practical implementations that have propelled this field forward. The aim is to shed light on the strengths and limitations of CNNs in this domain, discussing their effectiveness in handling various fault types, data complexities, and operational environments. Furthermore, the evolving landscape of CNN-based fault diagnosis is explored, examining recent advancements in data augmentation, transfer learning, and hybrid architectures. Finally, the review highlights future research directions and potential challenges to further enhance the application of CNNs for reliable and proactive machine fault diagnosis."}, {"title": "2. Data acquisition", "content": "The success of training convolutional neural networks for fault diagnosis hinges on the availability of high-quality data. This data acquisition process involves two crucial steps: sensor selection and layout, followed by data sampling and storage.\nAdvances in sensor technology have led to the use of various sensors for monitoring mechanical conditions, including accelerometers, current sensors, and built-in encoders. These sensors capture comprehensive monitoring information for fault diagnosis [17]. Vibration analysis has emerged as the most widely used monitoring technique, rapidly evolving over recent years. While effective, it faces limitations in practical application such as vibration data often suffering from interference due to transmission paths and environmental noise, resulting in a low signal-to-noise ratio. Moreover, vibration data is not sensitive to low-frequency signals, making them unsuitable for monitoring low-speed machinery [18]. Installation of vibration sensors can be challenging in high-temperature, high-pressure, or enclosed environments. To address these limitations, alternative sensors, such as infrared imaging (non-contact measurement) and built-in encoders (improved signal-to-noise ratio and low-frequency response), offer viable solutions. Selecting appropriate sensors requires a holistic approach, considering factors like equipment type, working environment, monitoring objects, and operating conditions. Optimizing sensor placement is crucial for capturing a maximum amount of health information and minimizing the impact of transmission paths and interference.\nData collection requirements include considerations for both hardware and software. For hardware parameters, the natural frequencies of machine components need to be calculated to identify machinery health state classes. Once all machinery components are identified, then a selection for accelerometer sampling frequencies can be made by data scientists. Additionally, when collecting data for ML fault diagnosis it is essential to understand frequency harmonics. Frequency harmonics are multiples of the machine component's natural frequency. Although there is currently no standard for machine component data collection in ML diagnosis, the identification of machine component frequencies will allow for easier data acquisition and sensor selection. Therefore, it is recommended that data scientists and ML researchers work together to identify the number of machine component natural frequency harmonics required to reach a threshold diagnosis accuracy, which in turn, will allow a reduction in the number of samples required, the sampling frequency, and will reduce computer storage requirements. Additionally, software parameters to consider include hyper-parameter optimization such as batch size, input signal length, overlap, stride, learning rate, and number of epochs. Each parameter can be optimized to increase diagnosis accuracy to determine fault classifications. Diagnosis accuracy can also be increased with the creation of synthetic data to complement existing available datasets when there are limited amounts of data. However, the creation of synthetic data requires knowledge of machinery component natural frequencies to imitate realistic datasets as closely as possible. These data collection practices can hopefully bridge the gap between research and industry, allowing ML algorithms to diagnose faults with less computational hardware requirements, in turn tempting internet of things (IoT) companies to integrate ML into viable condition monitoring solutions.\nData sampling is carried out using a data acquisition system. The acquired data is stored on hard drives or cloud platforms for subsequent analysis and utilization [19]. Thus, it can be suggested that obtaining high-quality data for training CNNs involves careful sensor selection, strategic sensor placement, and robust data sampling and storage processes. This comprehensive approach ensures that the network receives an optimal input, facilitating accurate and reliable fault diagnosis. While the process of collecting data for machine fault diagnosis appears straightforward, acquiring high-quality data in real industrial settings presents significant challenges:\n\u2022 Limited fault data: Obtaining fault data is often difficult because machines are typically not allowed to operate under fault conditions for safety and operational reasons [20][21].\n\u2022 Time-consuming life-cycle data: Gathering data that spans the entire life cycle of a machine, from a healthy state to failure, is a time-consuming, expensive, and often impractical endeavor due to the extended operational lifespan of many machines [22][23].\nTo address these limitations, some institutions have generously made their lab created datasets publicly available for research and application. This review introduces several such public datasets, providing researchers and engineers with valuable resources for evaluating the performance of their fault diagnosis approaches."}, {"title": "2.1. Case Western Reserve University (CWRU) bearing fault dataset", "content": "The Case Western Reserve University (CWRU) bearing fault dataset is a widely recognized and valuable resource in machine fault diagnosis. This dataset, meticulously collected and curated at CWRU, provides a rich collection of vibration signals from various bearing conditions, including healthy bearings and bearings with different types and severities of faults [24]. It encompasses a range of operating conditions, such as different motor speeds and applied loads, making it a comprehensive and realistic representation of real-world scenarios. The CWRU dataset, as shown in Fig. 2, has been instrumental in advancing research in fault diagnosis, particularly in the development and validation of data-driven models, such as those based on CNNs [25]. Researchers can use this dataset to train and test their algorithms, compare different approaches, and benchmark their performance. However, it must be acknowledged that this dataset was not created explicitly for training and testing machine learning algorithms and if not considered carefully, can often lead to resulting algorithm performance that does not reflect a meaningful outcome [26]."}, {"title": "2.2. University of Ottawa (UORED-VAFCLS) bearing fault dataset", "content": "To facilitate machine fault detection, the CWRU dataset can be integrated with the University of Ottawa Rolling Element Dataset \u2013 Vibration and Acoustic Faults under Constant Load and Speed conditions (UORED-VAFCLS), as shown in Fig. 3. This dataset includes vibration and acoustic data. Conditions include healthy, as well as ball, cage, inner race, and outer race bearing faults [27]. To replicate realistic conditions, loads were applied to a healthy bearing until failure occured in an accelerated test format. The dataset is helpful for transfer learning since it includes five bearings of each fault type from two distinct bearing manufacturers. The UORED-VAFCLS is particularly well suited as a complement to the CWRU benchmark."}, {"title": "2.3. Huazhong University of Science and Technology (HUST) bearing fault dataset", "content": "The Hanoi University of Science and Technology (HUST) dataset contains bearings with different sizes and shapes collected on the test rig shown in Fig. 4. These different bearings include the 6204, 6205, 6206, 6207, and 6208 [28]. The dataset also includes inner race faults, outer race faults, ball faults, and combination faults. The dataset also allows for transfer learning applications due to the different dimensions of the bearings included. More promising is the possibility of further improving algorithm results via data fusion of the HUST dataset with the data from the CWRU and UORED-VAFCLS datasets. In the development of algorithms, researchers in machine learning can develop their algorithms using these concatenated datasets in their training and testing processes, which supplement other benchmarks already available in the literature."}, {"title": "2.4. University of Ottawa (UOEMD-VAFCVS) induction motor fault dataset", "content": "The University of Ottawa Electric Motor Dataset \u2013 Vibration and Acoustic Faults under Constant and Variable Speed Conditions (UOEMD-VAFCVS) test rig is shown in Fig. 5. This dataset, also collected at the University of Ottawa, includes vibration and acoustic data. Machinery fault classes include healthy, rotor unbalance, rotor misalignment, stator winding faults, voltage unbalance, bowed rotor, broken rotor bars, and faulty bearings [29]. This dataset contains artificially seeded faults created by Spectra Quest. The dataset is helpful for induction motor fault diagnosis since it includes different motor speeds (constant and variable) and load conditions for each fault type. Additionally, machine learning researchers can easily combine this dataset with the UOEMD-VAFCVS dataset during training and testing of algorithms, which can increase deep learning algorithm fault detection for induction motors."}, {"title": "2.5. PHM 09 gearbox fault dataset", "content": "The PHM 09 gearbox fault dataset, as shown in Fig. 6, is a valuable resource in prognostics and health management (PHM), providing a comprehensive collection of data for gearbox fault diagnosis and prediction. Collected during a PHM competition in 2009, the dataset features vibration signals from a gearbox subjected to various operating conditions and fault scenarios, including healthy operation, tooth chipping, bearing damage, and misalignment [30][31]. This dataset offers a realistic representation of gearbox behaviour under various conditions, allowing researchers to develop and evaluate models for fault detection, classification, and prognosis. The diversity of fault types and operating conditions in the PHM 09 dataset makes it an excellent benchmark for evaluating the robustness and accuracy of different PHM algorithms."}, {"title": "2.6. Paderborn dataset", "content": "The Paderborn dataset is a valuable resource for research in machinery fault diagnosis, particularly for analyzing acoustic emission (AE) signals. Collected at the University of Paderborn, as shown in Fig. 7, this dataset contains AE signals from a variety of gearboxes operating under different load and speed conditions [33]. It features various natural and seeded fault scenarios, including tooth damage, bearing defects, and misalignment, providing a rich and realistic representation of gearbox behavior. The Paderborn dataset is notable for its high sampling rate and the inclusion of multiple sensor channels, allowing researchers to investigate the complex relationships between AE signals and specific fault types [34]. Its availability has facilitated the development and validation of advanced AE-based fault diagnosis techniques. The dataset's comprehensive nature has made it a valuable benchmark for evaluating the effectiveness of different fault diagnosis approaches."}, {"title": "2.7. IMS bearing dataset", "content": "The IMS bearing dataset, as shown in Fig. 8, collected from the Inner Motor Shaft (IMS) bearings in automotive engines, serves as a crucial resource for researchers in the field of machine fault diagnosis. This dataset captures the intricate vibration signals emanating from these bearings, often subjected to demanding operating conditions [36]. It encompasses various fault scenarios, such as wear, pitting, and cracks, offering a comprehensive representation of potential bearing failures. The IMS bearing dataset is particularly valuable due to its focus on a specific type of bearing commonly used in automotive applications, allowing researchers to develop and evaluate models tailored for this critical component [37]. The dataset's realistic representation of real-world conditions makes it an ideal platform for testing and validating advanced diagnostic techniques to analyze vibration signals and predict impending failures."}, {"title": "2.8. C-MAPSS dataset", "content": "The C-MAPSS dataset, as shown in Fig. 9, is a valuable resource in the field of PHM, providing a comprehensive collection of data for turbofan engine health monitoring. This dataset, developed by NASA, features sensor readings from a simulated turbofan engine under various operating conditions and degradation scenarios [39]. It includes detailed information about engine parameters, such as fan speed, core speed, and engine pressure ratios, allowing researchers to develop and evaluate models for predicting remaining useful life (RUL) and detecting potential failures. The C-MAPSS dataset offers a realistic representation of turbofan engine operation and degradation, making it an essential benchmark for evaluating the performance of various PHM algorithms, especially those employing deep learning techniques like CNNs [40]."}, {"title": "2.9. PHM 10 CNC milling machine cutters dataset", "content": "The PHM 10 CNC milling machine cutters dataset, as shown in Fig. 10, is a valuable resource for research in the field of machine tool health monitoring and tool wear prediction. This dataset, collected during a PHM competition in 2010, features sensor data from a CNC milling machine during the machining process [42]. It provides detailed information about various cutting parameters, such as cutting force, spindle speed, feed rate, and vibration signals, as well as tool wear measurements. This dataset presents a realistic scenario of tool wear progression during machining operations, allowing researchers to develop and evaluate models for predicting tool wear, identifying the onset of tool failure, and optimizing tool replacement strategies [43]. The PHM 10 dataset has proven valuable in advancing the development of data-driven techniques, particularly those employing CNNs to analyze sensor data and predict tool wear, improving the efficiency and reliability of CNC machining processes."}, {"title": "2.10. FEMTO dataset", "content": "The FEMTO dataset (also known as the PRONOSTIA dataset), collected at the FEMTO-ST Institute in France, is a valuable resource for research in bearing fault diagnosis and prognosis, as shown in Fig. 11. This dataset provides a comprehensive collection of vibration signals from various bearing conditions that have naturally occurred over time, including healthy bearings and bearings with different types and severities of faults, such as inner race, outer race, and rolling element defects. The FEMTO dataset is particularly valuable for its inclusion of multiple sensor locations, capturing vibration signals from different points on the bearing housing [45]. This allows researchers to investigate the propagation of vibration patterns and develop more accurate fault diagnosis techniques. Additionally, the dataset features varying operating conditions, including different speeds and loads, making it more realistic and applicable to real-world scenarios [46]. The availability of the FEMTO dataset has significantly contributed to the development and validation of advanced fault diagnosis techniques, particularly those utilizing CNNs to analyze vibration signals and identify bearing faults."}, {"title": "2.11. Wind turbine datasets", "content": "Wind turbine datasets are becoming increasingly crucial for research in condition monitoring and fault diagnosis of these renewable energy systems, as shown in Fig. 12. These datasets typically encompass a wealth of sensor readings from various components, including blade vibrations, gearbox temperatures, generator currents, and wind speed measurements. They often capture both operational data during normal operation and data associated with various fault scenarios, such as blade damage, gearbox wear, and generator malfunctions [48]. The availability of such datasets enables researchers to develop and evaluate advanced machine learning models, including those based on CNNs, to predict component degradation, detect faults early, and optimize maintenance strategies. The complexity and scale of wind turbine datasets pose unique challenges, requiring sophisticated algorithms and robust models to effectively analyze the data and provide reliable insights into wind turbine health [49]. The continued development and public sharing of these datasets will play a vital role in advancing research and innovation in wind turbine condition monitoring and predictive maintenance, contributing to the reliability and efficiency of this critical renewable energy source."}, {"title": "2.12. Machinery failure prevention technology association (MFPT) bearing dataset", "content": "The Machinery Failure Prevention Technology Association (MFPT) bearing dataset is a valuable resource for researchers in the field of machine fault diagnosis, particularly for analyzing bearing conditions. This dataset, meticulously collected and curated by MFPT, features vibration signals from various bearing conditions, including healthy bearings and bearings with different types and severities of faults [51]. It encompasses a range of operating conditions, such as different motor speeds and applied loads, providing a realistic representation of real-world scenarios. The MFPT bearing dataset has been instrumental in advancing research in fault diagnosis, particularly in the development and validation of data-driven models, such as those based on CNNs. Researchers can use this dataset to train and test their algorithms, compare different approaches, and benchmark their performance. The availability of this publicly accessible dataset has significantly accelerated progress in the field, enabling researchers to focus on developing innovative solutions for accurate and reliable fault detection and diagnosis."}, {"title": "2.13. XJTU-SY bearing datasets", "content": "The XJTU-SY bearing datasets, as shown in Fig. 13, developed at the Xi'an Jiao tong University (XJTU) in China, provide a valuable resource for research in bearing fault diagnosis. These datasets capture vibration signals from various bearing conditions, including healthy bearings and bearings with different types and severities of faults, such as inner race, outer race, and rolling element defects [52]. The XJTU-SY datasets are notable for their inclusion of multiple operating conditions, including varying speeds and loads, which enhance their realism and applicability to real-world scenarios. The datasets also feature different bearing types, providing a broader range of data for training and testing advanced fault diagnosis techniques [53]. The availability of the XJTU-SY bearing datasets has significantly contributed to the advancement of research in this field, particularly in the development and evaluation of machine learning models, including those based on CNNs, for analyzing vibration signals and accurately identifying bearing faults."}, {"title": "2.14. University of Connecticut gear fault dataset", "content": "The University of Connecticut gear fault dataset, as shown in Fig. 14, is a valuable resource for research in gear health monitoring and fault diagnosis. This dataset, collected at the University of Connecticut, provides a comprehensive collection of vibration signals from various gear conditions, including healthy gears and gears with different types and severities of faults, such as tooth chipping, tooth wear, and tooth breakage [55]. The dataset features varying operating conditions, including different speeds and loads, making it more realistic and applicable to real-world scenarios. The dataset's focus on gear faults makes it particularly useful for developing and evaluating advanced diagnostic techniques, including those utilizing CNNs to analyze vibration signals and identify specific gear faults [56]. The availability of this dataset has significantly contributed to the advancement of research in this field, enabling researchers to create and validate models for accurate and reliable gear health assessment."}, {"title": "2.15. Summary", "content": "This section provided a brief overview of the data collection process for machine fault diagnosis, covering sensor selection and layout, data sampling, and data storage. This review highlights fourteen public datasets, providing descriptions and key characteristics of each."}, {"title": "3. The convolutional neural network and its variants", "content": "CNNs, a type of deep learning model, have emerged as a powerful tool in fault diagnosis, leveraging their ability to extract features and patterns from complex data. In fault diagnosis, CNNs excel at analyzing sensor data, vibration signals, or images of machinery to identify subtle anomalies indicative of impending malfunctions [58][59]. By learning hierarchical representations of these data, CNNs can detect faults even in noisy or incomplete datasets, surpassing traditional methods in accuracy and efficiency. This makes them particularly valuable in predictive maintenance, enabling early detection of faults and minimizing downtime."}, {"title": "3.1. The basic convolutional neural network", "content": "The basic convolutional neural network (CNN), as shown in Fig. 15, is a powerful tool for image recognition and other tasks involving structured data. It consists of layers that perform convolutions, a process where a small filter (kernel) slides across a matrix of input data, extracting features. These features, which can be edges, textures, or other patterns, are then passed through pooling layers, which down-sample the data while preserving important information. The resulting feature maps are then flattened and fed into fully connected layers, where they are combined to produce a final output, such as a classification or regression result [60][61]. This architecture also incorporates two common techniques, batch normalization, and dropout, to enhance model performance. Each operation will be discussed in detail in the following sections."}, {"title": "3.1.1. Convolutions", "content": "Convolutional operations play a crucial role in CNNs by extracting meaningful features from sensor data, vibration signals, or even images of machinery. These features, often subtle and hidden within the raw data, can be indicative of impending malfunctions [63]. By identifying these patterns, CNNs can detect faults before they escalate into critical failures, enabling proactive maintenance and minimizing downtime. In fault diagnosis, convolutions operate as follows:\n1. Input Data: The input data consists of time-series signals from sensors, processed frequency domain information, time-frequency images, or images capturing machine operations. These signals often contain intricate patterns, some subtle, that indicate a deviation from normal behavior.\n2. Filters (Kernels): Filters in fault diagnosis are designed to capture specific patterns related to various faults. These filters might focus on:\n\u2022 Frequency Components: Identifying specific frequencies in vibration signals that are associated with certain faults.\n\u2022 Temporal Trends: Detecting sudden changes or drifts in sensor readings that indicate anomalies.\n\u2022 Spatial Features: Recognizing unusual patterns in images of machinery, such as cracks, wear, or misalignment.\n3. Convolution Process: The filter slides across the input signal, performing element-wise multiplications and summations. The result is a new signal, the feature map, where each point represents the strength of the filter's pattern in the original signal.\n4. Feature Extraction: Through convolutional operations, the CNN extracts features that might be missed by traditional analysis methods. These features represent the \"signature\" of specific faults, allowing the model to detect them even in noisy or complex data.\nThe convolution enables the extraction of complex features from noisy data, leading to more accurate fault detection and classification."}, {"title": "3.1.2. Activation function", "content": "Activation functions play a crucial role in CNNs for fault diagnosis by introducing non-linearity into the model, allowing it to learn complex relationships within the data. In essence, they act as \"decision-makers\" within the network, deciding which features are important and how they contribute to the final diagnosis [64]. In fault diagnosis, activation functions operate as follows:\n\u2022 The input to an activation function is the output of a convolutional layer or a fully connected layer. This output represents the extracted features, typically a set of numerical values.\n\u2022 The activation function then applies a non-linear transformation to these input values. This transformation introduces non-linearity into the model, enabling it to capture complex relationships between features that might not be linearly separable.\n\u2022 The output of the activation function is a transformed set of values representing the \"activated\" features. These activated features are then passed on to the next layer of the network.\nThe most common activation functions that are used by researchers include:\n1. ReLU (Rectified Linear Unit): ReLU is a widely used activation function with CNNs for fault diagnosis. It introduces non-linearity by setting any negative values to zero and leaving positive values unchanged. This helps prevent vanishing gradients during training and allows the model to learn features more efficiently.\n2. Sigmoid: The sigmoid function squashes the input values between 0 and 1, making it suitable for tasks involving binary classification (e.g., classifying a sensor reading as \"normal\" or \"faulty\").\n3. Tanh (Hyperbolic Tangent): Like sigmoid, the tanh function also outputs values between -0 and 1. It is often preferred over sigmoid due to its centered output range, which can improve learning in some cases.\nIn conclusion, activation functions are crucial elements in CNNs for fault diagnosis, enabling the model to learn complex relationships, select relevant features, and effectively differentiate between normal and faulty states. They are a key component of the decision-making process within the network, allowing for accurate and efficient fault diagnosis."}, {"title": "3.1.3. Pooling", "content": "Pooling in convolutional neural networks (CNNs), as shown in Fig. 16, plays a crucial role in fault diagnosis by simplifying the feature maps generated by convolutional layers, while preserving essential information for accurate diagnosis [65]. This simplification process, often referred to as down sampling, helps the model become more robust to variations in the input data and improves its efficiency by reducing the number of parameters. In CNNs, pooling works as follows:\n1. The input to a pooling layer is a feature map generated by a convolutional layer. This map represents the extracted features, highlighting patterns relevant to potential faults.\n2. A pooling operation is applied to the feature map, typically using a small window (e.g., 2x2). Common pooling operations include:\n\u2022 Max Pooling: This selects the maximum value within each window, effectively capturing the strongest feature.\n\u2022 Average Pooling: This calculates the average value within each window, providing a smoother representation of the features.\n3. Down sampling: The pooling operation down samples the feature map, reducing its spatial dimensions. This process reduces the number of parameters the model needs to learn, improving efficiency and preventing overfitting.\n4. Output: The output of the pooling layer is a down-sampled feature map, retaining the essential information for fault diagnosis while reducing noise and redundancy.\nIn conclusion, pooling in CNNs is a powerful technique that simplifies feature maps, reduces computational complexity, and enhances the model's robustness to variations in the input data. By preserving essential information, while discarding irrelevant details, pooling contributes to accurate and efficient fault detection and diagnosis."}, {"title": "3.1.4. Batch normalization", "content": "Batch normalization, as shown in Fig. 17, a powerful technique often incorporated into CNNs, plays a crucial role in enhancing the performance of fault diagnosis models by addressing the issue of internal covariate shifts. This shift occurs when the distribution of activations within the network changes during training, leading to slower convergence and instability [67][68]. Batch normalization helps to stabilize the training process, leading to faster convergence and improved accuracy. Here's how batch normalization works in the context of fault diagnosis:\n\u2022 The input to the batch normalization layer is the activations of a previous layer, typically a convolutional or fully connected layer. These activations represent the extracted features from the input data.\n\u2022 The batch normalization layer normalizes the input activations by calculating the mean and standard deviation of the activations within the current batch. This helps to estimate the distribution of activations for the current batch. Normalizing the activations using the calculated mean and standard deviation (i.e., transforms the activations to have zero mean and unit variance).\n\u2022 After normalization, the activations are scaled and shifted using learnable parameters (gamma and beta). This allows the model to retain the expressiveness of the activations while ensuring they are within a suitable range for the subsequent layers.\nBatch normalization addresses the problem of internal covariate shift by ensuring that the distribution of activations remains relatively stable during training. This leads to faster convergence and reduces the risk of the model getting stuck in a local minima. By reducing the internal covariate shift, batch normalization helps the model generalize better to unseen data. This is crucial for fault diagnosis, where the model needs to reliably identify faults in real-world scenarios. It also acts as a regularizer, preventing the model from overfitting to the training data. This is particularly beneficial for fault diagnosis, where limited data is often available. It also helps to improve the flow of gradients during training, allowing the model to learn effectively and adjust its parameters more efficiently. Batch normalization helps to mitigate the issue of vanishing or exploding gradients, particularly in deep networks. This allows the model to train deeper architectures with fewer issues.\nIn conclusion, batch normalization is a powerful tool in CNNs for fault diagnosis, enhancing the stability, efficiency, and generalizability of the model. By addressing the issue of internal covariate shift, batch normalization significantly contributes to improved accuracy and reliability in diagnosing faults."}, {"title": "3.1.5. Dropout", "content": "Dropout, a regularization technique commonly used in CNNs, plays a crucial role in enhancing the robustness and generalizability of fault diagnosis models by preventing overfitting. Overfitting occurs when a model learns the training data too well, leading to poor performance on unseen data [70]. Dropout helps address this issue by randomly dropping out neurons during training, forcing the network to learn more robust and generalizable features. For fault diagnosis, dropout works as follows:\n\u2022 During each training iteration, dropout randomly deactivates a certain percentage of neurons in a layer, effectively removing them from the network's computation. This creates a smaller, randomly thinned network.\n\u2022 By randomly dropping neurons, dropout prevents neurons from becoming too dependent on each other. This encourages the network to learn more independent and robust features.\n\u2022 Dropout can be viewed as creating an ensemble of multiple smaller networks, each with a different set of active neurons. This ensemble effect improves the model's generalizability by averaging the predictions of these smaller networks.\nDropout reduces the model's reliance on specific features, making it less prone to overfitting. This is crucial in fault diagnosis, where limited data availability can lead to overfitting and poor generalization. By forcing the network to learn more robust and generalizable features, dropout improves the model's performance in the presence of noise or variations in the input data. This is essential for reliable fault detection in real-world scenarios. Dropout helps the model generalize better to unseen data. This is crucial for fault diagnosis, where the model needs to be able to accurately detect faults in previously unseen cases. Dropout is relatively simple to implement and can be easily incorporated into existing CNN architectures.\nIn conclusion, dropout is a valuable regularization technique in CNNs for fault diagnosis. By preventing overfitting and encouraging the network to learn more robust features, dropout helps to improve the model's generalizability, leading to more reliable and accurate fault detection."}, {"title": "3.1.6. Fully-connected layers", "content": "Fully-connected layers are another crucial component in CNNs for fault diagnosis by combining extracted features from convolutional layers into a meaningful representation suitable for making final predictions [71][72]. These layers act as the decision-making engine, taking the high-level features learned by the convolutional layers and transforming them into a form that can be used to classify or predict faults. Fully-connected layers work in the following manner:\n\u2022 The input to a fully-connected layer is the output of the previous layer, typically a pooling layer or the final convolutional layer. This output represents the extracted features from the input data, often in the form of a flattened vector.\n\u2022 In a fully-connected layer, each neuron receives an input from all neurons in the previous layer. This means that every feature from the previous layer contributes to the calculation of the output of each neuron in the fully-connected layer.\n\u2022 The fully-connected layer performs a linear transformation on the input features by multiplying them with weights and adding biases. These weights are learned during training to optimize the network's performance.\n\u2022 After the linear transformation, an activation function (e.g., ReLU, sigmoid) is applied to introduce non-linearity, allowing the network to learn complex relationships between features.\n\u2022 The output of the fully-connected layer is a set of values representing the model's predictions. The number of neurons in the output layer corresponds to the number of classes in the fault diagnosis task.\nRole of Fully-Connected Layers in Fault Diagnosis:\n\u2022 Feature Combination: Fully-connected layers combine the high-level features extracted by the convolutional layers into a comprehensive representation of the input data. These features can represent various aspects of the machine's operation, such as vibration patterns, sensor readings, or visual cues.\n\u2022 Decision-Making: The fully-connected layers act as the decision-making component of the CNN. They take the combined features and learn relationships between them to predict the presence or absence of specific faults.\n\u2022 Classification or Regression: Depending on the fault diagnosis task, fully-connected layers can be configured for either classification or regression:\n\u039f Classification: The output layer will have neurons representing different fault classes (e.g., bearing failure, pump malfunction, etc.).\n\u039f Regression: The output layer will predict a continuous value representing the severity of a fault or the remaining useful life of a component.\nIn conclusion, fully-connected layers play a critical role in fault diagnosis by integrating the high-level features learned via convolutional layers, enabling the CNN to make final predictions about the presence, type, or severity of faults. They act as the decision-making engine, leveraging the extracted features to provide accurate and insightful diagnoses."}, {"title": "3.1.7. Decision layer", "content": "The decision layer, often the final layer in a CNN for fault diagnosis, is where the model makes its final prediction about the presence, type, or severity of a fault based on the processed features. It acts as the \"judge\" of the network, taking the combined knowledge from previous layers and transforming it into a"}]}