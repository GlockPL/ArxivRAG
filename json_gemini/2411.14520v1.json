{"title": "Open Challenges in the Formal Verification of Autonomous Driving", "authors": ["Paolo Burgio", "Angelo Ferrando", "Marco Villani"], "abstract": "In the realm of autonomous driving, the development and integration of highly complex and hetero-\ngeneous systems are standard practice. Modern vehicles are not monolithic systems; instead, they are\ncomposed of diverse hardware components, each running its own software systems. An autonomous\nvehicle comprises numerous independent components, often developed by different and potentially\ncompeting companies. This diversity poses significant challenges for the certification process, as it\nnecessitates certifying components that may not disclose their internal behaviour (black-boxes). In\nthis paper, we present a real-world case study of an autonomous driving system, identify key open\nchallenges associated with its development and integration, and explore how formal verification tech-\nniques can address these challenges to ensure system reliability and safety.", "sections": [{"title": "1 Introduction", "content": "The Society of Automotive Engineers (SAE) defines the design goals of autonomous driving across six\ndistinct levels, ranging from Level 0 (L-0) to Level 5 (L-5), as outlined in [27]. These levels represent a\nspectrum of automation: L-0 denotes no automation, followed by L-1 which includes driver assistance,\nL-2 for partial automation, L-3 for conditional automation, L-4 for high automation, and culminating in\nL-5, which signifies full automation. Each level reflects the increasing capability of autonomous sys-\ntems and their interaction with human drivers. Currently, most commercially available vehicles operate\nat L-2 automation. This level encompasses features such as adaptive cruise control and lane-keeping\nassistance, enabling the vehicle to assist the driver while still requiring constant supervision and active\nengagement. A few manufacturers are exploring L-3 systems, which offer conditional automation under\nspecific circumstances. For example, some modern vehicles equipped with L-3 systems can handle high-\nway driving autonomously, including lane-keeping, speed regulation, and adaptive cruise control, but\nrequire the driver to take over when exiting highways or in complex urban environments. Despite such\nadvancements, the industry is still in the early stages of fully implementing higher levels of automation.\nAccording to a recent survey on the subject [17], achieving L-5 autonomy requires the appropriate\nintegration of technologies and efficient communication channels. Realising the full potential of auto-\nmated driving demands a reliable, robust, and widespread mobile network. In this work, we focus on\nthe first item on the list; that is, we are interested in making the components of autonomous driving, as\nwell as their interactions, (more) reliable. To achieve this, we start with a case study of a real-world\nautonomous driving system and address the issues to enhance its reliability from a formal perspective.\nTaking inspiration from [22], we treat the autonomous driving system as a component-based system\ncomposed of black-box components that we are not interested in opening (or cannot open). Instead, we\nfocus on how to achieve the formal verification of the resulting heterogeneous system. That is, how the"}, {"title": "2 Autonomous Driving Case Study", "content": "As a motivational example, we present a case study from the AI4CSM Project\u00b9, funded by the European\nCommission [33]. This study features a L-3/L-4 autonomous vehicle equipped with advanced sensor fu-\nsion capabilities, exemplifying a next-generation automotive platform [29, 35]. The vehicle can interpret\nboth driver status (e.g., drowsiness, distraction) using in-vehicle cameras, and external environmental\nconditions using on-board sensors and data from city sensors, as illustrated in Figure 1.\nIn the simplest scenario, the vehicle operates at a low level of automation (i.e., L-2/L-3), with the\ndriver maintaining control. If the vehicle detects a potentially dangerous situation, such as drowsiness or\nimminent collisions, it triggers a secure takeover strategy, transitioning to L-4 and executing a safety ma-\nnoeuvre. For our study, we focus on the sensor fusion component, where the perception module running\non the on-board Electronic Control Unit (ECU) aggregates information from heterogeneous data streams.\nSpecifically, we implemented a system to monitor the driver using camera-based behavioural analysis,\ncoupled with on-board cameras to inspect the surrounding environment. Additionally, we enhanced\nthe vehicle's perception capabilities by incorporating data from a smart city prototype area, namely the\nModena Automotive Smart Area (MASA)2. Its structure is shown in Figure 2.\nThis area includes smart cameras mounted on poles that detect vulnerable road users and analyse\nor predict their movement trajectories. These data are streamed to the vehicle through the smart city's\n4G-5G wireless connectivity. The vehicle's centralised ECU, also known as the Domain Controller, pro-\ncesses this information to determine the most appropriate response, such as emergency braking, complex\nmanoeuvres, or issuing driver warnings. For research purposes, we implemented this use case on a Cit-\nroen Mehari. We will now explore the main open challenges that must be addressed to facilitate the\nindustrialisation of these complex systems."}, {"title": "Aggregating probabilistic data sources.", "content": "One primary open challenge arises from the inherent na-\nture of most software components used for perception. This stage is the first in any autonomous driving\nstack, where raw sensor data (in our scenario, RGB cameras) are processed to interpret and analyse\nthe driver or the car's surroundings. Numerous algorithms and approaches could be employed, most of\nwhich [29, 35, 5, 19, 24] heavily rely on machine learning, deep learning, or, more generally, on heuristics\nand statistical methodologies to handle the complexity of raw data frames. Additionally, most systems\nhave a hierarchical structure, consisting of sub-components arranged in pipelines. Figure 3 illustrates\nthis decomposition for our camera-based behavioural analysis used for monitoring the driver."}, {"title": "Deploy on embedded systems.", "content": "Deploying intelligence in automation use cases requires two key\ncomponents: powerful computational hardware and numerous sensor modules to accurately interpret"}, {"title": "3 Formal Methods to the Rescue", "content": "In the previous section, we discussed a real-world case study in autonomous driving, highlighting chal-\nlenges in integrating autonomous systems into road infrastructure and progressing towards L-5 capabil-\nities. Here, we explore how formal methods, particularly formal verification, address these challenges.\nFor a comprehensive overview of formal verification techniques in autonomous systems, see [21]."}, {"title": "3.1 Open Challenge 1: Heterogeneous Composition of Untrustworthy Components", "content": "The first challenge involves managing components with varying levels of reliability. Some components\nare open-source (white-box), allowing full access and modifications, while others are closed-source\n(black-box), restricting access to their internal workings. To address this challenge, we propose ex-\nploiting formal verification techniques. Specifically, as outlined in [20], we employ formal verification\nmethods focusing on three key areas (called also recipes): verification of decision-making components,\nAI-based components, and the enforcement of safety claims."}, {"title": "3.2 Open Challenge 2: Efficient Strategies for Mapping the Distributed Computation", "content": "Addressing this challenge involves the use of formal verification techniques to ensure that the mapping\nstrategies are both efficient and reliable (since we are in a real-time system). Formal verification can\nbe employed to systematically verify that the software components are optimally distributed across the\ncomputing cores, and that redundancy and voting mechanisms are correctly implemented to enhance\nfault tolerance and system robustness. By formally verifying these strategies, we can guarantee the sys-"}, {"title": "4 Limitations of Applying Formal Methods in Autonomous Systems", "content": "While Formal Methods provide a promising approach for integrating heterogeneous components and\nefficient mapping in autonomous systems, there are significant practical limitations to their use. The\nmain challenges include the need for specialised knowledge, scalability issues, interpretability of results,\nand difficulties in handling uncertain environments, as well as cost-benefit trade-offs in development.\nOne key limitation is the high barrier to entry, as FM often requires deep expertise in formal logic\nand verification techniques. This specialised skill set is not commonly available within standard engi-\nneering teams, and the process of specifying and verifying systems can be time-consuming. Despite the\ndevelopment of new tools aimed at making FM more accessible, their capabilities are still evolving and\noften require substantial refinement to meet industry needs.\nScalability and complexity also present major obstacles. Autonomous systems comprise numerous\ninteracting components, leading to a state space that grows exponentially, making exhaustive verification\ncomputationally expensive or infeasible. Techniques like compositional reasoning and modular verifi-\ncation attempt to manage this, but they require careful abstraction, which may oversimplify or overlook\ncritical behaviours. Moreover, model checking can be computationally intensive, particularly when ap-\nplied to real-time or resource-constrained systems, and Assume-Guarantee reasoning hinges on accurate"}, {"title": "5 Conclusions and Future Work", "content": "In this short paper, we present a real-world case study in the autonomous driving domain, identify key\nopen challenges, and discuss how formal verification techniques can address these issues.\nWe focus on two primary challenges hindering the achievement of L-5 automation in autonomous\nvehicles. The first is the heterogeneous composition of black-box components, which affects system\nreliability. The second challenge involves the proper mapping of computations within a highly dynamic,\nreal-time distributed system. We propose how existing formal verification techniques can be leveraged to\naddress these issues and explore their implications, along with potential adaptations for integration into\nautonomous driving systems.\nOur aim is to highlight these open challenges in the autonomous driving domain and demonstrate how\nformal verification techniques can theoretically enhance system reliability. For future work, we intend\nto build upon the insights reported here by applying some of the discussed techniques and methodolo-\ngies to our case study, leveraging tools like those proposed in [12, 13] to further explore their practical\napplicability and impact on system robustness."}]}