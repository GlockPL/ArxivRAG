{"title": "Advanced Cyberattack Detection in Internet of Medical Things (IoMT) Using Convolutional Neural Networks", "authors": ["Alireza Mohammadi", "Mehdi Aminian", "Hosna Ghahramani", "Seyyed Amir Asghari"], "abstract": "The increasing integration of the Internet of Medical Things (IoMT) into healthcare systems has significantly enhanced patient care but has also introduced critical cybersecurity challenges. This paper presents a novel approach based on Convolutional Neural Networks (CNNs) for detecting cyberattacks within IoMT environments. Unlike previous studies that predominantly utilized traditional machine learning (ML) models or simpler Deep Neural Networks (DNNs), the proposed model leverages the capabilities of CNNs to effectively analyze the temporal characteristics of network traffic data. Trained and evaluated on the CICIoMT2024 dataset, which comprises 18 distinct types of cyberattacks across a range of IoMT devices, the proposed CNN model demonstrates superior performance compared to previous state-of-the-art methods, achieving a perfect accuracy of 99% in binary, categorical, and multiclass classification tasks. This performance surpasses that of conventional ML models such as Logistic Regression, AdaBoost, DNNs, and Random Forests. These findings highlight the potential of CNNs to substantially improve IoMT cybersecurity, thereby ensuring the protection and integrity of connected healthcare systems.", "sections": [{"title": "I. INTRODUCTION", "content": "The Internet of Medical Things (IoMT) represents a transformative shift in healthcare, enabling enhanced patient monitoring, diagnostics, and treatment through interconnected medical devices. However, as the adoption of IoMT technologies accelerates, so do the security concerns associated with these systems. The critical importance of IoMT security cannot be overstated; vulnerabilities in these networks can lead to dire consequences, including compromised patient safety and breaches of sensitive health information [1-2].\nTraditional security methods, such as rule-based and signature- based approaches, face significant challenges in the dynamic landscape of the IoMT. These methods rely heavily on static rules and known signatures, which limit their ability to detect new and evolving threats. As a result, IoMT devices become vulnerable to novel attack vectors [3-4]. Another significant challenge is scalability. The proliferation of IoMT devices generates vast amounts of data, which traditional security methods can struggle to handle efficiently. Many IoMT devices also have limited processing power and memory, making it impractical to implement comprehensive security solutions [5-6].\nTraditional security methods also lack the necessary context awareness to monitor and protect IoMT environments effectively. The IoMT landscape is highly dynamic, with devices frequently connecting and disconnecting from networks. This variability can create blind spots in security coverage and lead to false positives or negatives in threat detection [7-8]. Furthermore, Traditional security systems, requiring manual intervention, can slow threat response, and lack of skilled personnel can lead to potential security lapses in IoMT environments [9-10]. To address these challenges, Intrusion Detection Systems (IDS), deployed in IoMT networks, offer real- time threat detection, but face scalability issues and high false- positive rates, especially in the rapidly changing IoMT landscape [11-12]. Given the limitations of traditional approaches, machine learning (ML) and deep learning (DL) techniques have emerged as more effective alternatives for IoMT security. ML models can analyze large volumes of network traffic data, learn from it, and adapt to new threat patterns [13-14]. However, many conventional ML models, such as Logistic Regression and Random Forests, have demonstrated limited success in handling multiclass classification tasks, especially when distinguishing between subtle variations in attack types [15].\nIn this context, Convolutional Neural Networks (CNNs) offer a promising solution for intrusion detection in IoMT systems. CNNs excel at processing time-series data, which is crucial for analyzing network traffic in IoMT systems [16-17]. Their ability to automatically extract features from raw data makes them particularly effective in detecting complex, evolving threats that may be missed by traditional methods [18-19]. CNNs are well- suited for high-dimensional data and can be optimized for both binary and multiclass classification tasks [20-21]. By leveraging the power of deep learning, CNN-based intrusion detection systems can achieve high accuracy in identifying malicious activities while maintaining low false positive rates [22]."}, {"title": "II. RELATED WORKS", "content": "The IoMT represents a highly interconnected network of medical devices, creating new avenues for patient care but also exposing critical vulnerabilities. Several studies have examined the security risks within these IoMT ecosystems. Barnett et al. (2024) highlighted the complexity of IoMT environments, where a system- of-systems design exposes networks to numerous attack vectors. Wani et al. (2023) explored specific vulnerabilities in remote patient monitoring, telemedicine, and smart medication delivery systems, pointing to real-world risks such as session hijacking and denial-of- service attacks. Kondeti and Bahsi (2024) conducted a comprehensive taxonomy of attacks on IoMT devices, including spoofing, eavesdropping, and reconnaissance [23-25]. The substantial data generated by IoMT devices, combined with the resource constraints of many medical devices, presents challenges for traditional security methods. These devices often lack the necessary computational power and memory to run comprehensive security solutions, making them easy targets for novel and sophisticated attacks [26].\nThe CICIoMT2024 dataset, a benchmark for cybersecurity models, contains data from 40 IoMT devices with 18 different cyberattacks. While comprehensive, the dataset poses a challenge for traditional ML models. Dadkhah et al.'s study found that while ML models perform well in binary classification, their accuracy drops significantly when trying to distinguish between all 19 attack types, often below 73%. This indicates the limitations of traditional ML in capturing the nuances of different attacks. The dataset also highlights the difficulty in distinguishing similar DDoS attacks, emphasizing the need for more advanced feature extraction and model architectures. Our proposed approach leverages CNNs to address the limitations of traditional IDS and ML models."}, {"title": "III. OVERVIEW OF THE CICIOMT2024 DATASET", "content": "The CICIOMT2024 dataset is a key resource for evaluating cybersecurity solutions in the IoMT. It addresses the increasing need for secure healthcare systems, covering patient monitoring devices and remote care applications."}, {"title": "A. Key Features:", "content": "Devices and Protocols: Includes network traffic data from 40 IoMT devices (real and simulated) using common protocols like Wi-Fi, MQTT, and Bluetooth.\nAttack Types: Features 18 cyberattacks in five categories: DDoS, DoS, Reconnaissance, MQTT- specific, and Spoofing attacks, captured in a controlled environment for accurate security research."}, {"title": "B. Contribution:", "content": "Comprehensive Coverage: Supports security research by offering diverse devices and protocols.\nDetailed Profiling: Aids in detecting vulnerabilities in IoMT devices."}, {"title": "C. Class Distribution:", "content": "Benign: 230,339 instances\nSpoofing: 17,791 instances\nReconnaissance: 926-106,603 instances\nMQTT Attacks: 6,877-214,952 instances\nDoS/DDoS Attacks: 15,904\u20131,998,026 instances\nThis dataset provides an extensive foundation for analyzing cybersecurity threats in IoMT systems."}, {"title": "IV. METHOD", "content": "To detect cyberattacks within IoMT environments, we have designed a CNN model optimized for analyzing time-series network traffic data. This method involves a combination of data preprocessing steps, convolutional operations, and fully connected layers to effectively classify different types of attacks. Each step of the process, from data preparation to model optimization, is crafted to ensure high performance and accuracy in identifying complex attack patterns. The overall architecture includes input layers, convolutional and pooling layers, followed by fully connected layers, as detailed below."}, {"title": "A. The Proposed CNN Model", "content": "This section details the architecture of our proposed CNN model, designed explicitly for detecting cyberattacks within IoMT environments. We will delve into each layer's functionality, rationale behind architectural choices, and the hyperparameter selection process."}, {"title": "1) Input Layer and Data Preprocessing:", "content": "The input layer receives preprocessed time-series network traffic data. Each sample in the dataset is represented by a one-dimensional array of features. Before feeding the data into the model, the following preprocessing steps are applied:\nLabel Encoding and Categorical Conversion: Attack types are encoded into numerical values and then converted to a categorical format for multi-class classification.\nData Standardization: The features are standardized to have a mean of 0 and a standard deviation of 1 to improve model convergence.\nReshaping: The standardized data is reshaped into a 3D tensor with dimensions (samples, features, 1) to be compatible with the 1D CNN layers."}, {"title": "B. Convolutional Layers:", "content": "The CNN architecture consists of two 1D convolutional layers:\nFirst Convolutional Layer:\nNumber of Filters: 32\nFilter Size: 3\nActivation Function: ReLU (Rectified Linear Unit)\nPurpose: Extracts local patterns and important features from the input data. The ReLU activation function introduces non-linearity, helping the model learn complex patterns.\nSecond Convolutional Layer:\nNumber of Filters: 64"}, {"title": "1) Pooling Layers:", "content": "Following each convolutional layer, a max-pooling layer is applied:\nPooling Type: MaxPooling1D\nPooling Size: 2\nPurpose: Reduces the dimensionality of the feature maps, which helps to decrease computational cost and control overfitting by retaining only the most important features."}, {"title": "2) Fully Connected Layers:", "content": "After flattening the pooled feature maps, two dense (fully connected) layers are added:\nFirst Dense Layer:\nNumber of Neurons: 128\nActivation Function: ReLU\nPurpose: Combines features extracted from previous layers and enables the model to learn complex representations and decision boundaries.\nOutput Layer:\nNumber of Neurons: Equal to the number of classes (attack types) in the dataset.\nActivation Function: Softmax\nPurpose: Produces a probability distribution over the classes, where each neuron's output represents the probability of the input belonging to that specific class."}, {"title": "C. Hyperparameter Selection and Optimization Strategy:", "content": "Optimizer: The Adam optimizer is chosen for its adaptive learning rate properties, which help in achieving faster convergence.\nLoss Function: Categorical crossentropy is used as it is well-suited for multi-class classification tasks, helping to minimize the difference between the predicted probabilities and the actual class labels.\nBatch Size: A batch size of 32 is selected as a trade-off between computational efficiency and the stability of the gradient estimates.\nEpochs: The model is trained for 10 epochs, which was determined through preliminary experimentation to ensure the model converges without overfitting."}, {"title": "V. RESULTS", "content": "This section provides a detailed comparison of our proposed model with various machine learning algorithms, including Logistic Regression, AdaBoost, Deep Neural Network, and Random Forest, across different classification tasks: binary classification, six-class classification, and 19-class classification. Table 1 presents the accuracy, precision, recall, and F1-score for each model in these three scenarios. The results clearly demonstrate the superior performance of our CNN model, especially in more complex classification tasks involving multiple attack types."}, {"title": "A. Comparative Model Performance", "content": "Table 1 shows the performance metrics of proposed model and other ML models across different classification tasks. It highlights the effectiveness of our proposed model in handling the complexity of multi-class and categorical classifications, significantly outperforming traditional approaches like Logistic Regression and AdaBoost"}, {"title": "VI. DISCUSSION", "content": "The proposed CNN-based model for IoMT cyberattack detection surpasses traditional ML models like Logistic Regression, AdaBoost, DNN, and Random Forests in performance. Its advantage lies in effectively extracting complex patterns from raw network traffic data, achieving higher accuracy and F1-scores in both categorical and multiclass classification tasks. For example, in multiclass classification of 18 attack types, CNN achieves an F1-score of 0.98, while Logistic Regression scores 0.432.\nA key contribution of the study is the use of the CICIOMT2024 dataset, which is tailored to healthcare- specific traffic and attacks, unlike more generic IoT datasets.\nWhile CNN performs well, slight performance dips occur in multiclass tasks, where it struggles to distinguish closely related attacks, such as different DDoS variants. Further research into feature engineering could address this limitation.\nLimitations include the model's reliance on high-quality, up-to-date training data and the computational expense of CNNs, which poses challenges for resource-limited IoMT devices. Model compression techniques and edge computing could mitigate this. The study also highlights the need for a multi-layered security approach, integrating CNN with other mechanisms like anomaly detection and access control."}, {"title": "VII. CONCLUSION", "content": "This study introduces a CNN-based approach for cyberattack detection in IoMT environments, demonstrating significant advancements over existing machine learning benchmarks. Proposed model's success highlights the practical implications for enhancing IoMT security, particularly in its ability to maintain high accuracy and reliability in diverse and complex scenarios. Future research could focus on exploring other deep learning architectures, developing real-time detection systems, and improving the interpretability of these models, ensuring that IoMT security keeps pace with the rapidly evolving threats in the healthcare domain."}, {"title": "CODE AVAILABILITY", "content": "The code used for the implementation and experimentation of this study is available on GitHub at: https://github.com/alirezamohamadiam/Advanced- Cyberattack-Detection-in-IoMT-Using-CNN"}]}