{"title": "Learning to Measure Quantum Neural Networks", "authors": ["Samuel Yen-Chi Chen", "Huan-Hsin Tseng", "Hsin-Yi Lin", "Shinjae Yoo"], "abstract": "The rapid progress in quantum computing (QC) and machine learning (ML) has attracted growing attention, prompt- ing extensive research into quantum machine learning (QML) algorithms to solve diverse and complex problems. Designing high-performance QML models demands expert-level proficiency, which remains a significant obstacle to the broader adoption of QML. A few major hurdles include crafting effective data encoding techniques and parameterized quantum circuits, both of which are crucial to the performance of QML models. Additionally, the measurement phase is frequently overlooked-most current QML models rely on pre-defined measurement protocols that often fail to account for the specific problem being addressed. We introduce a novel approach that makes the observable of the quantum system-specifically, the Hermitian matrix-learnable. Our method features an end-to-end differentiable learning frame- work, where the parameterized observable is trained alongside the ordinary quantum circuit parameters simultaneously. Using numerical simulations, we show that the proposed method can identify observables for variational quantum circuits that lead to improved outcomes, such as higher classification accuracy, thereby boosting the overall performance of QML models.", "sections": [{"title": "I. INTRODUCTION", "content": "The intersection of quantum computing (QC) and machine learning (ML) has garnered significant attention in recent years, driven by advancements in both quantum hardware and AI/ML technologies. Quantum machine learning (QML) is an emerging field that leverages the principles of quantum mechanics to enhance the performance of machine learning models. Despite the limitations of current quantum computers, hybrid quantum-classical algorithms have been developed to exploit the strengths of both computing paradigms. Variational Quantum Algorithms (VQAs) [1] represent a class of hybrid quantum-classical algorithms where quantum circuit parameters are optimized via classical methods such as gradient descent [2] or metaheuristic techniques like evolutionary algo- rithms [3]. These algorithms enable quantum circuit models, such as Quantum Neural Networks (QNNs) or Variational Quantum Circuits (VQCs), to address a wide range of AI/ML tasks, including classification [2], [4]\u2013[8], time-series forecast- ing [9]\u2013[11], natural language processing [12]\u2013[15], reinforce- ment learning [3], [16]-[20] and model compression [21]\u2013 [25]. Ordinary QNNs are trained with pre-defined observables Bk such as the Pauli-X, Y and Z observables. However, the conventional choice of Pauli matrix X, Y, Z has only eigenvalues X = \u00b11 so that the VQC prediction is always confined in <| H|\u03c8) \u2208 [-1,1] regardless of the unitary gate U(x), W(e) used, which poses a restriction on VQC capabilities. By Rayleigh quotient, we know that Amin \u2264 \u3008\u03c8| H |\u03c8) \u2264 max for any normalized wave function ||4|| = 1. Therefore, increasing the range of the Hermitian spectrum (eigenvalues) will increase the VQC output range for versatile ML tasks, such as classifications and regressions. In this paper, we propose an approach to automatically discover observables through end-to-end gradient-based optimization, as illustrated in Figure 1. Specifically, we parameterize the Hermitian matrix used as observables and train these parameters concurrently with the standard quantum circuit parameters (rotation angles). Numerical simulations demonstrate that the proposed learnable observable framework outperforms standard VQC training with fixed observables."}, {"title": "II. RELATED WORK", "content": "Developing a successful QML model for a specific task de- mands expert knowledge in quantum information science. To expand the range of QML applications, significant efforts have been dedicated to creating automated procedures for designing quantum circuit models. These approaches are explored within the field of Quantum Architecture Search (QAS) [26], which leverages various search algorithms and machine learning techniques to generate high-performance quantum architec- tures. Several approaches, such as reinforcement learning (RL) [27]-[34] and evolutionary algorithms [35], [36], have been explored to address the challenges in QAS. However, a significant challenge with both RL and evolutionary algorithms is the need to assess circuit performance each time a specific architecture is selected. This evaluation becomes increasingly difficult as the search space expands, for example, with the addition of more qubits or circuit components. Furthermore, these methods require tuning multiple hyperparameters, such as mutation rates and crossover probabilities for evolution- ary algorithms, and exploration-exploitation ratios for RL techniques. Differentiable search has emerged as an alter- native approach to mitigate these challenges. Differentiable programming has been utilized in QAS for a range of QML tasks, including optimization, classification, and reinforcement learning [37]-[39]. A key advantage of differentiable QAS is that the parameters governing the quantum circuit architectures are optimized concurrently with the parameters (rotation an- gles) of the VQCs. Additionally, differentiable search requires fewer hyperparameters compared to evolutionary or RL-based approaches, simplifying the optimization process. This paper distinguishes itself from prior work by applying differentiable programming to optimize the measurement process of the quantum system, rather than focusing on the optimization of the VQC architecture itself. Unlike the approach in [40], our method allows for the training of any number of observables or Hermitian matrices for systems with any number of qubits. Additionally, the parameters of the observables are optimized simultaneously with the standard rotation angles, with the flexibility to employ separate optimizers for each."}, {"title": "III. QUANTUM NEURAL NETWORKS", "content": "A VQC, also referred to as a Parameterized Quantum Circuit (PQC), generally comprises three key components: the encoding circuit, the variational or parameterized circuit, and the final quantum measurement. The encoding circuit, denoted as U(x), is designed to map the input vector of classical numerical values 2 into a quantum state, transforming it into U(2) |0)&n, where |0)n represents the ground state of the quantum system and n denotes the number of qubits. The parameterized circuit then processes and transforms the encoded state and it becomes W(\u0398)U(x)|0)&n. Generally, the variational (parameterized or learnable) circuit W() is constructed by multiple layers of trainable circuit layer V;(0) (illustrated in Figure 2), denoted as W(\u0398) = \u041f}=\u043c \u0474;(03), where represents the collection of all learnable parameters {010M}. Then the quantum state vector generated by the encoding circuit and variational circuit can be shown as,\n\n|\u03a8) = W(\u0398)U(x) |0)&n = (\u041f \u03bd; (63)) U(x)|0)&n (1)\nj=M\n\nInformation from the VQC can be extracted by per- forming measurements using predefined observables, de- noted as Bk. The VQC operation can be seen as a quantum function f(x0) = ((B1),\u2026\u2026,(B)), where\n\n(B) = (0|U+(z)W()B&W()U()|0).\n\nExpectation values (Bk) can be estimated by conducting repeated mea- surements (shots) on physical quantum devices or by direct calculation when employing quantum simulation tools. Usu- ally, the observable Bk is a predefined Hermitian matrix. A common choice is the Pauli-Z matrix."}, {"title": "IV. LEARNABLE QUANTUM MEASUREMENTS", "content": "Definition 1. A Hermitian matrix B is used as an observable in quantum mechanics, for it yields real-valued expectations \u3008\u03a8| \u0392 |\u03a8) under a wave function |\u03a8). The condition B = B\u2020 requires each matrix element bij = bji \u2208 C. Consequently, a Hermitian matrix can be generated by 2\u00d7 N(N-1) + N = N2 real parameters,\n\nB =\n\nd11 a12+ ic12\n* d22\n*\n*\n*\n*\n\n* a13+ iC13\na23 + iC23 d33\n: a3N + iC3N\n: : dNN\n\nwhere * denotes the corresponding complex conjugate and aij, Cij, dii are arbitrary real numbers.\n\nThe Hermitian matrix can be initialized randomly and optimized iteratively via gradient-based methods. To elucidate the process, we can write the Hermitian matrix of a n-qubit system with N = 2n as the parametrization of coefficient b = (b11,..., b\u2116\u2116) \u2208 CN\u00d7N as B(b) = \u2211-12)=1 bij Eij, where bij = bji and Eij as the indicating matrix with only one non-zero at entry (i, j),\n\nEij =\n\n00 ... 00\n00 ... 00\n00 ... 10\n00 ... 00\n\n\nGiven a quantum state |\u03a8) (e.g. the one shown in Equation 1), the expectation value with the B(b) can be written as,\n\n(\u03a8 \u0392(6) \u03a8) = (\u03a8\u0399\u03a3\u03a3 bij Eij \u03a8)\n\ni\n=\nNN\n\u03a3\u03a3bij (\u03a8\u0395 \u03a8\n\nij\n\n\n\n(2)\n\n\n\n(3)\n\n(4)"}, {"title": "V. EXPERIMENTS", "content": "We begin by evaluating the proposed methods on the standard make_moons dataset from scikit-learn. The dataset is generated with noise levels of 0.1, 0.2, and 0.3. The training settings are as follows: batch size of 20, training set size of 200, testing set size of 100, 4 qubits, 2 layers in the VQC trainable circuit, a learning rate of 1 \u00d7 10-2, and a learning rate of 1 \u00d7 10-1 for optimizing the Hamiltonian H. The optimizer used for both the standard VQC and the VQC with learnable observables is RMSProp. In the case where the VQC and learnable observables utilize separate optimizers, RMSProp is applied to the VQC parameters, while Adam is used for the parameters of the observables. For the learnable observable component, each class intro- duces 4 additional trainable parameters. For instance, in the make_moons dataset used for binary classification, there are 8 parameters dedicated to the learnable observable. We repeat the experiments five times to calculate the mean and standard deviation, providing a comprehensive evaluation of the model's performance. As shown in Figure 3, with noise set to 0.1 in the make_moons dataset, the VQC model incor- porating both a learnable observable and a separate optimizer (with distinct learning rates) outperforms the VQC model with only a learnable observable. The standard VQC model without learnable observables exhibits the lowest performance. We further increased the difficulty of the make_moons dataset by raising the noise level to 0.2 and 0.3. As shown in Figure4 and Figure 5, the VQC model with both a learnable observable and a separate optimizer (with distinct learning rates) continues to outperform the VQC model with learnable observables trained with the same optimizer, while the conventional VQC model remains the lowest performer in these scenarios."}, {"title": "A. Task 1: Classification"}, {"title": "B. Task 2: Speaker Recognition", "content": "To evaluate our method on more challenging tasks, we utilized a real-world dataset for speaker recognition based on acoustic speech signals.\n\nWe adopted the Voice Bank corpus [41] (VCTK) of 28 speakers [42] (14 male, 14 female); each has approximately 400 clean sentences. For our experiments, we selected 5 male and 5 female out of the 28 speakers and resampled the audio to 16 kHz. The data was split into training and testing sets with a 0.15 ratio, resulting in about 340 sentences for training and 60 for testing per speaker.\n\nThe waveforms were subsequently transformed into spec- trograms via the Short-Time Fourier Transform (STFT), with amplitudes extracted as input features to form the final speaker recognition dataset of 10 speakers (classes). The resulting spectrograms have an input size of (257, 128), where the first dimension 257 is due to the 128 Fourier frequency basis used while the second dimension 128 can be roughly regarded as the time evolution of the temporal sequence. The processed speech dataset is available here: https://bnlbox.sdcc.bnl.gov/ index.php/s/HwLAJWcqtntzayc."}, {"title": "a) Data:"}, {"title": "b) Model architecture:", "content": "A hybrid model joining classical networks with a VQC layer at the end was deployed. Three consecutive CNN layers were used to encode spectrograms regarded as 2D images into vectors of dimension 12,672. A linear layer was then employed to reduce the dimensionality to 10, which then served as the input to a VQC of 10 qubits. Eventually, the VQC with the structure of Figure 2 classifies speakers."}, {"title": "c) Results:", "content": "On this fixed model architecture, we analyze the effect of varying observables for the VQC performance. In Figure 7, experiments of 5 independent trials were shown; each contained 30 epochs of training on every model. The solid lines are the mean of the training accuracies, and the dashed lines are the final testing results on a test set disjoint from the training set. The shades enclosing the solid curves show the variance of the 5 trials.\n\nIt is observed that learning a proper Hermitian measurement rather than conventionally fixed Pauli matrices significantly raises performance. On the final test, the VQC with fixed Pauli- Z measurement (blue line) had accuracy 70.59%, while VQC of varying Hermitian (green line) attained 76.83%. Endowing different parameter learning rates to the unitary gates and the Hermitian (red line) further reached 96.33%. From the result, the reason for the optimizer separation is manifest as the qubit system demands large eigenvalue expansion for complex tasks so that the Hermitian measurement needs to grow quicker with a larger learning rate 0.1 compared to that of the unitary gate 10-3. Other optimization techniques for further improvement are possible; here using different parameter optimizers serves to demonstrate the concept."}, {"title": "VI. CONCLUSION", "content": "In this paper, we demonstrate that by making observables in QNN models learnable parameters to incorporate with varia- tional unitary gates significantly enhances the performance of QNN-based machine learning tasks, such as classification and speech recognition. We show that the parameters governing quantum system measurements can be optimized along with the rotation angles in quantum gates, allowing the entire system to be trained end-to-end using differentiable methods. Consequently, we observe that the VQC tends to expand the range of the Hermitian eigenvalues whenever possible to achieve better predictions. Our approach opens the door to a more generalized framework for designing QNN-based models in AI and ML applications."}]}