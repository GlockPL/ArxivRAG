{"title": "Intelligent Energy Management: Remaining Useful Life Prediction and Charging Automation System Comprised of Deep Learning and the Internet of Things", "authors": ["Biplov Paneru", "Bishwash Paneru", "DP Sharma Mainali"], "abstract": "Remaining Useful Life (RUL) of battery is an important parameter to know the battery's remaining life and need for recharge. The goal of this research project is to develop machine learning-based models for the battery RUL dataset. Different ML models are developed to classify the RUL of the vehicle, and the IoT (Internet of Things) concept is simulated for automating the charging system and managing any faults aligning. The graphs plotted depict the relationship between various vehicle parameters using the Blynk IoT platform. Results show that the catboost, Multi-Layer Perceptron (MLP), Gated Recurrent Unit (GRU), and hybrid model developed could classify RUL into three classes with 99% more accuracy. The data is fed using the tkinter GUI for simulating artificial intelligence (AI)-based charging, and with a pyserial backend, data can be entered into the Esp-32 microcontroller for making charge discharge possible with the model's predictions. Also, with an IoT system, the charging can be disconnected, monitored, and analyzed for automation. The results show that an accuracy of 99% can be obtained on models MLP, catboost model and similar accuracy on GRU model can be obtained, and finally relay-based triggering can be made by prediction through the model used for automating the charging and energy-saving mechanism. By showcasing an exemplary Blynk platform-based monitoring and automation phenomenon, we further present innovative ways of monitoring parameters and automating the system.", "sections": [{"title": "1. Introduction", "content": "A battery's ability to store and release energy steadily diminishes with use as a result of a number of variables, including temperature changes, chemical deterioration, and charge-discharge cycles. An estimate of how long the battery should continue to function dependably is given by the RUL. Predicting RUL with accuracy is crucial to sustaining the functionality and security of battery-powered devices. It makes preventative maintenance possible, aids in replacement planning, and guarantees that the system will continue to function without unplanned breakdowns. Machine learning has lately surfaced as a viable modeling tool in the field of energy storage to ascertain the battery's remaining usable life, health, and level of charge. Initially, we examine the two battery model types that have been researched the most in the literature for battery state prediction [1]: With the recent developments in artificial intelligence (AI) and machine learning (ML), research and development of battery state assessment techniques have greatly improved [2]. An integral component of the design of an electric vehicle (EV) is the battery management system (BMS) [3]. How the battery will age over time is hard to predict [4]. Particularly in urban traffic, the lithium cells experience high dynamic loads and very little static operation. An essential component of the EV's energy management system and one that guarantees dependable functioning is the Battery Management System (BMS) [7].\nThe authors point out the main difficulties, particularly in executing in situ computations, high-throughput data gathering, and accurate modeling over extended periods of time. All things considered, this work offers insights into explainable, real-time machine learning for future battery production, administration, and optimization [1]. This article reviews the most recent findings on widely used ML techniques for predicting the SOC and SOH, giving a thorough overview of both BMSs and ML. It also emphasizes the difficulties involved. This research highlights the prevalence of a support vector machine (SVM), fuzzy logic (FL), k-nearest neighbors (KNN) algorithm, genetic algorithm (GA), and transfer learning in SOC and SOH estimates, in addition to more conventional models such equivalent circuit models (ECMs) and electrochemical battery models [2]. The performance of the suggested techniques is examined using real-time Lithium Ion battery data at various temperature profiles. The study takes into account the R-Square ($\\R^2$) and Root Mean Square Error (RMSE) indices to verify the effectiveness of the suggested approach. The study's findings indicate that the neural network-based prediction method\u2014which has both high and low RMSE indices\u2014is the best one. The advantages of the suggested strategy include its great accuracy and simplicity. Applications for electric vehicles can make use of this anticipated battery model [3]. In this work, the ensemble random forest model is used by the authors to minimize data degradation for RL prediction. For the purpose of predicting RL, the model makes it possible to gather data and use random forest and ensemble random forest for preprocessing and classification. R2 and root mean square error are used in the simulation (RMSE). According to the simulation, the ensemble random forest model produces predictions with a higher accuracy [4]. In addition to discussing improvements to the LSTM (long short-term memory) and Bi-LSTM (bidirectional long short-term memory) methods, this work offers a methodology for comparative analysis that focuses on deep learning and classical approaches. Performance metrics including MSE, MAE, RMSE, and R-squared are used to evaluate the suggested approaches. By forecasting LIB performance, the study hopes to further technological progress in the electric vehicle sector. The remainder of the study is structured as follows: materials and techniques; preparation and analysis of LIB data; machine learning model proposal; assessments; and final remarks with suggestions for further research [5]. The set of mined attributes is then processed by three reliable machine learning (ML) algorithms: decision trees, random forests, and linear regression. The Panasonic Lithium-Ion (Li-Ion) battery cells, made available to the public by McMaster University, are used to test the applicability. MATLAB is used to implement the feature extraction and machine learning (ML) based SoC prediction modules. The prediction performance is evaluated using the correlation coefficient, mean absolute error, and root mean square error. The correlation coefficient value of 0.9988 indicates that the random forest regressor outperforms the planned ones, according to the data [6].\nThe performance of state-of-the-art machine learning techniques in SOC forecasting with regression under dynamic loads is compared in this research. Using multisine signals, a unique dynamic charge/discharge test is performed to generate data. The findings support the notion that one major benefit of advanced machine learning models is their capacity to identify significant correlations between the variables of interest. Studies have shown that State-of-the-Art ML techniques are superior to standard ML approaches and effective in solving SOC prediction problems because they can capture cell dynamics and store historical data, both of which are essential for forecasting future charge levels [7]. Using only 10% of the charge curve as input data, the approach can accurately predict a full battery charge curve with an error of less than 2% by combining a feature extraction phase with a multiple linear regression step. Using publicly-available datasets, the approach is further validated across additional battery chemistries (LiCoO2-based). With only 5% of the charge curve as input data, the LiCoO2-based battery's charge curve prediction error is only about 2%, demonstrating the generalizability of the methodology developed for battery cycling curve prediction. The presented technique opens the door to quick onboard battery health status estimate and monitoring during real-world applications [8]. Characterizing the uncertainty in a model's predictions is crucial for making well-informed decisions on field control tactics or lab battery design. This study analyzes the state-of-the-art probabilistic machine learning models for health diagnostics and prognostics, after giving an overview of lithium-ion battery degradation. There is a"}, {"title": "2. Methodology", "content": "The model was developed in Python to determine the parameters to create the FCEV using the design of a machine learning-based models that used the, RUL of the vehicle, with aid of various parameters like charging cycles, discharge time, maximum voltage etc.. the RUL, can be predicted."}, {"title": "3 Results & Discussions", "content": "The following results as outcomes were with these models development and microcontroller implementation.\n3.1 Results of the Developed Model"}, {"title": "Evaluation metrics", "content": "Accuracy: The percentage of right guesses among all the forecasts made is the measure of accuracy. Although it is a widely used statistic for classification algorithms, an imbalanced dataset may lead to deceptive results.\nAccuracy = $\\frac{TP+TN}{(FP+FN+TP+TP)}$ .Equation 1.\nPrecision:\nPrecision, which is the ratio of true positive forecasts to all positive predictions, is sometimes referred to as positive predictive value. It shows how well the model predicted the good outcomes.\nPrecision= $\\frac{TP}{(FP+TP)}$ .Equation 2.\nRecall quantifies the percentage of real positive cases that the model properly recognized; it is sometimes referred to as Sensitivity or True Positive Rate. It shows how well the model can capture good examples.\nRecall = $\\frac{TP}{(FN+TP)}$ .Equation 3.\nF1-Score\nPrecision and recall are harmonic means, and the F1 score strikes a balance between both. When the dataset is unbalanced and both false positives and false negatives must be taken into account, it is helpful.\nF1 Score=2 \u00d7 $\\frac{Precision Recall}{Precision+Recall}$ .Equation 4.\nBlynk IoT platform\nBlynk is a robust Internet of Things (IoT) platform that facilitates the effective development and management of IoT projects by its customers. Even anyone with no programming knowledge can create unique mobile and web applications that can communicate with IoT hardware using its user-friendly interface. The Blynk App, Blynk Server, and Blynk Libraries are the three primary parts of the Blynk platform."}, {"title": "Pyserial:", "content": "A complete Python package called PySerial makes it easier for Python programs and serial devices to communicate serially. Users may easily send and receive data through serial connections because to its user-friendly interface for controlling serial ports. PySerial's versatility in connecting with sensors, microcontrollers, and other embedded devices originates from its support for a wide range of serial communication protocols, including RS-232, RS-485, and TTL. The library contains functions for reading and writing data synchronously or asynchronously, as well as methods for specifying serial port parameters including stop bits, parity, and baud rate."}, {"title": "Splitting the dataset", "content": "The data was ready for testing and training in this section. Using the train_test_split function, it first divided the synthetic dataset into features (X) and the target variable (y), then into training and testing sets with an 80:20 ratio. Using measures like accuracy and plot-based evaluation such as confusion matrix plots and history plots for deep learning models supports the script-generated predictions on the test set, assesses the model's performance, and reports the evaluation findings."}, {"title": "Limitations of work:", "content": "The work has several limitations, like the system misadjustment and alignment to the charging voltage level, as Esp-32 is sensitive to the high voltages and this might cause failures in charging. Our system also couldn't show real-life implementation currently, as for this the parameters shall be recreated with the real laboratory-like setup as discussed in the methodology section. The IoT monitoring couldn't be done as proposed initially as the charging parameters real-time extraction and acquisition required the use of adaptive sensors and equipment. Another impacting drawback is memory constraints on Esp32, like microcontrollers that can't handle the use of AI models and large data fed from the backend system. Overall, the system shows an example configuration of how artificial intelligence can be utilized for the purpose of developing RUL automated charging systems. The utilized various hardware components and their usage, as well as operating voltage, is given in Table 10."}, {"title": "Future applications", "content": "The developed Python model can have the following applications in modern society:\na) Potential Applications in real-time appliances\nFor power management and faulty system analysis we can create much systems that can allow us to manage batteries and overlook on the outcomes of the remaining useful life, automate them to be intelligent enough for self fault handling and managing the issues related to power management. This allows systems to not only rely on software but also to make physical connection and large power-based damages protections.\nb) Optimization of Vehicle systems:\nThe created model can be used to improve the electric vehicle's performance. Manufacturers can anticipate projected power management by automating the recharging systems in power stations that makes more intelligent and automated charging system useful for EV systems [13-25]. This makes it possible to improve design iteratively and improve overall performance and battery efficiency.\nc) Energy saving mechanism\nThe system being able to adapt the change of battery RUL use of AI based automation can help to allow power management fault analysis and also could handle various hazard related to power consumption and over use.\nd) Decision Support for Manufacturers:\nManufacturers can utilize the model for decision support during the development phase. By inputting various advanced microcontrollers and semiconductors, they can assess the potential charging outcomes, facilitating informed decisions on component selection, vehicle dimensions, and other critical aspects of fuel cell vehicle design.\ne) Evaluating Real-world Scenarios:\nThe resilience of the model enables the assessment of real-world scenarios in addition to real-time data. Manufacturers and researchers can acquire estimates that inform judgments about the performance of fuel cell vehicles in real-world scenarios by entering existing or projected vehicle characteristics [15]."}, {"title": "Future works", "content": "In the future, we aim to deploy the model on a Raspberry Pi system and enhance it with a real-life data extraction-based prototype for developing the system that is directly fed to the data acquisition from the battery along with a recharging system for power management. The IoT-based automation can be enhanced by creating its own database and server for connecting to the hardware system and managing remotely for power-related tasks. The system can be developed with powerful microcontrollers and actuators that can have real-time implementation in charging systems and power management. The integration technique to IoT can be integrated in real-time and deployed in real-time systems automating the battery charging process. Overall, the system can be a great approach for energy management and saving in the future."}, {"title": "Conclusion", "content": "In light of this, power management system-based on AI offer hope for sustainable advancement in the field of rapidly advancing technology. The application of machine learning techniques facilitates the development of predictor procedures for determining the various parameters involved in the design and research of these charging systems for vehicles and different other practical life applications. The machine learning phenomenon used in this case is a method for assembling an idea as a novel approach for determining predictions connected to the development of energy management systems for vehicles using artificial intelligence applications.\nIn conclusion, the developed model shows great promise for real-world applications in the design, optimization, and decision-making processes related to real-time power management and fault handling, in addition to its exceptional accuracy in predicting RUL data. Because of its adaptability, academics and different power sector and industry stakeholders can both benefit from it as a useful tool."}, {"title": "Declaration of conflict of Interest", "content": "Authors declare that there are no known conflicts of interest."}, {"title": "Declaration of LLM use", "content": "The authors would like to declare that they utilized LLM tools for minimizing grammar errors and writing."}, {"title": "Data availability statement", "content": "The data is openly available on kaggle platform."}]}