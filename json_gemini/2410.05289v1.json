{"title": "MARS: A NEUROSYMBOLIC APPROACH FOR INTERPRETABLE DRUG DISCOVERY", "authors": ["Lauren Nicole DeLong", "Paola Galdi", "Daniel Domingo-Fern\u00e1ndez", "Yojana Gadiya", "Jacques D. Fleuriot"], "abstract": "Neurosymbolic (NeSy) artificial intelligence describes the combination of logic or rule-based techniques with neural networks. Compared to neural approaches, NeSy methods often possess enhanced interpretability, which is particularly promising for biomedical applications like drug discovery. However, since interpretability is broadly defined, there are no clear guidelines for assessing the biological plausibility of model interpretations. To assess interpretability in the context of drug discovery, we devise a novel prediction task, called drug mechanism-of-action (MoA) deconvolution, with an associated, tailored knowledge graph (KG), MoA-net. We then develop the MoA Retrieval System (MARS), a NeSy approach for drug discovery which leverages logical rules with learned rule weights. Using this interpretable feature alongside domain knowledge, we find that MARS and other NeSy approaches on KGs are susceptible to reasoning shortcuts, in which the prediction of true labels is driven by \u201cdegree-bias\" rather than the domain-based rules. Subsequently, we demonstrate ways to identify and mitigate this. Thereafter, MARS achieves performance on par with current state-of-the-art models while producing model interpretations aligned with known MoAs.", "sections": [{"title": "INTRODUCTION", "content": "Drug discovery (DD), the search for novel drugs or chemical compounds to treat ailments, often involves the screening of thousands of small compounds (Lin et al., 2020). Many computational approaches have been developed to accelerate and streamline this screening process (Gottlieb et al., 2011; Gan et al., 2023). Specifically, hundreds of such approaches operate upon knowledge graphs (KGs), in which nodes representing drugs, proteins, or medical conditions are connected by edges, representing the relationships between them (Chen et al., 2020). Typically, DD is formulated on a KG as a link prediction task between drugs and the corresponding medical conditions (indications) to be treated (Schultz et al., 2021; Rivas-Barragan et al., 2022).\nMoreover, it is important to understand each drug's mechanism-of-action (MoA), the molecular processes by which it achieves its medicinal effect. For instance, one drug, cortisone acetate, up-regulates the activity of the glucocorticoid (GC) receptor protein, which, in turn, downregulates the cyclooxygenase (COX) protein. Since the COX protein is involved in creating inflammation, its"}, {"title": "2 RELATED WORK AND BACKGROUND", "content": "Drug Discovery and MoA Deconvolution. Amongst previous open-source approaches for DD, many focus on drug repositioning (DR), as opposed to finding novel compounds (Rivas-Barragan et al., 2022; Urbina et al., 2021; Zheng et al., 2019). DR aims to discover new uses for drugs that have already been approved for distribution (Urbina et al., 2021). This prediction task allows researchers to leverage more available knowledge on approved drugs, including recorded clinical outcomes and side effects (Ratajczak et al., 2022; Liu et al., 2020). However, such relations are revealed during or after clinical trials, and are therefore rare or unknown for novel compounds. Furthermore, with such relations present, DR models oftentimes rely on associative patterns (e.g., drugs causing the"}, {"title": "3 MARS: A NESY APPROACH FOR MOA DECONVOLUTION", "content": "Here, we build the MoA Retrieval System (MARS)\u00b9 to perform MoA deconvolution. MARS im-proves upon a method called Policy-guided walks with logical rules (PoLo) (Liu et al., 2020) by introducing dynamic, learned rule weights. This differs from previous approaches, where weights are static and pre-computed (e.g., mined or literature-derived) (Liu et al., 2020; Dranc\u00e9 et al., 2021). As discussed further, these learned weights make MARS shortcut-aware.\nMARS takes two major inputs. The first is a KG. A KG uses nodes to represent entities and edges between them to represent relationships. A KG triple comprises two nodes connected by an edge of some specific type, or relation. For example, interacts(Protein, Protein) states that two Protein nodes are connected via the interacts relation. Node degree describes the number of edges connected to a node.\nSpecifically, the input KG must contain triples involving some relation of interest. To understand each MoA as the biological response to drug administration, we aim to investigate relations between drugs and biological processes (BPs), such as signal transduction or inflammation (Consortium, 2019) (i.e., induces(Drug, BP)). As per our knowledge, this is a novel application in the KG field. Further details on our KG are introduced within section 3.4. The second input includes metapaths of the KG with corresponding weights."}, {"title": "3.1 \u039c\u0395\u03a4APATH-BASED RULES", "content": "Metapaths are abstract representations of instantiated paths in a graph (Sun et al., 2011; Himmelstein et al., 2017; Noori et al., 2023). For example, given the following path, P, in our KG:\nCortisone acetate$\\xrightarrow{upregulates}$ GC receptor$\\xrightarrow{interacts}$ COX protein$\\xrightarrow{participates}$ Inflammation\nthe corresponding metapath, P, would be:\nDrug $\\xrightarrow{upregulates}$ Protein $\\xrightarrow{interacts}$ Protein$\\xrightarrow{participates}$ Biological Process\nWithin this study, metapaths can be understood as a sequence of relations within the KG structure, making them inherently interpretable. In MARS, metapaths are used as the bodies of logical rules, in"}, {"title": "3.2 OVERVIEW OF MARS.", "content": "Using a deep RL process, MARS trains an agent to take walks of length L through the KG to connect pairs of nodes having the pre-defined relation of interest (e.g., induces); such edges are masked from the agent during training. Each walk generates a path, P, which can be understood as a series of L transitions: $P := (e_c \\xrightarrow{e_1} e_2 \\xrightarrow{e_2} ... \\xrightarrow{e_L} e_{L+1})$. The agent may also remain at its current node. Ultimately, the goal of the agent is episodic: to find paths in which the starting node, ec, and the terminal node, eL+1, make up one of the true input pairs. By training the agent to do so, it can identify node pairs with some desired relationship, thus generalizing beyond the training set to predict novel pairs. Through a process akin to a Markov Decision Process (Bellman, 1957), the agent makes decisions about its next move based on information about its current position and the next possible actions. Additionally, however, the history of the agent's previous actions are encoded with an LSTM (Hochreiter & Schmidhuber, 1997; Sherstinsky, 2020), whose parameters are trained to optimize the reward function, $R(S_{L+1})$ (Eq. 1), which is evaluated each time the agent completes L transitions from some starting node, reaching a state SL+1:\n$R(S_{L+1}) = 1\\{e_{L+1}=e_d\\} + \\lambda 1\\{e_{L+1}=e_a\\} \\sum_{i=1}^{m} w(M_i)1\\{P=M_i\\}$ (1)\n$1\\{A\\} = \\begin{cases} 1 \\text{ if } A = \\text{true} \\\\ 0 \\text{ if } A = \\text{false} \\end{cases}$ (2)\nThis reward function, adapted from Liu et al. (2020), quantifies how successful P is according to two summands, where the hyperparameter \u03bb influences the balance between them. The first summand indicates whether the terminal node in the path, eL+1, is one of the desired target (BP) nodes (ed) that forms a true pair with the starting (drug) node, ec. The second summand, contingent upon the first, indicates whether the corresponding metapath, P, matches any metapath-based rule, Mi. Therefore, the agent is not only encouraged to find connections between true pairs of nodes, but it is also guided toward paths which resemble known MoAs. Implementation details and hyperparameter selection are described in Appendices A.2 and A.4, respectively.\nOf note, the second summand is proportional to some metapath-based rule weight, and MARS updates these weights during training. We accomplish this through a novel algorithm we call two-hop joint probability, or P2H."}, {"title": "3.3 WEIGHT UPDATES VIA 2-HOP JOINT PROBABILITY", "content": "After MARS is executed, its learned rule weights reflect each rule's relative usefulness in the pre-diction task. Additionally, during training, weight updates drive the agent toward more informative paths and bypass the assumptions that pre-assigned rule weights are correct and informative. This eliminates the need for pre-computed or literature-derived rule weights; therefore, we initialize all weights uniformly as 0.5, a medium level of importance.\nThe naive way to implement weight updates (MARSnaive) is to increase weights according to the frequency at which each metapath-based rule is satisfied. However, this would not account for partial metapath matches. As an alternative, we propose updates via two-hop joint probability (P2H). This metric approximates the usefulness of metapath-based rules based on the observed frequencies of the two-hop fragments that they comprise. Since the metapaths constituting rule bodies typically"}, {"title": "3.4 DATASETS: MoA-net AND ITS VARIANTS", "content": "We design our KG, MoA-net\u00b2, specifically for MoA prediction. MoA-net consists of drugs, proteins, and BPs (Fig. 1-A). We assemble it using the causal relations between drugs and proteins from Custom KG (Rivas-Barragan et al., 2020) and OpenBioLink KG (Breit et al., 2020). The BP nodes come from molecular function annotations in UniProt (Consortium, 2015).\nTo predict drug-BP triples, which are unique to MoA-net, we make use of publicly available func-tional and biochemical assays in ChEMBL (v33), an open access database of bioactive compounds (Gaulton et al., 2012). Of the 1,622 drug-BP triples obtained, 48 also had known MoAs in Drug-MechDB (Gonzalez-Cavazos et al., 2023), a manually-curated compendium of MoAs. Between the three node types, we define five unique edge types, or relations, shown in Fig. 1-B. We also include all inverse relations, running in the opposite direction of causality.\nUsing the hetnetpy package (Himmelstein et al., 2021), we extract all metapaths (see Section 3.1) from MoA-net which we considered to be valid MoAs: those comprising directed, mechanistic paths between drug and BP nodes (see Appendix A.1). Although other metapaths are possible, we ex-clude them from our set of metapath-based rules. Based on MoAs found in DrugMechDB, we limit metapaths to a maximum length of four relations (or hops).\nFinally, we create variants of MoA-net. To investigate reasoning shortcuts, we use the Zietz et al. (2024) implementation of XSwap (Hanhij\u00e4rvi et al., 2009), which swaps edges in a KG without af-fecting the distribution of node degrees. We call the resultant KG MoA-net-permuted. Additionally, we implement an automatic trimming step, which reduces edges of each class to below a user-specified threshold by iteratively removing those between the highest-degree nodes. By setting the threshold to 10,000 (thereby reducing protein-protein interactions to ~ 50% of edges), our approach can work on a subgraph of the MoA-net, which we refer to as MoA-net-10k."}, {"title": "3.5 EVALUATION", "content": "We split the drug-BP triples within MoA-net into training (60%), validation (20%), and test (20%) sets. We evaluate the models using Hits@k, where k \u2208 {1,3, 10} and mean reciprocal rank (MRR), optimizing for the latter. Hits@k reports the proportion of times the correct results are in the top k ranked entries, while MRR reports how highly ranked the first correct item is amongst ranked results (Chen et al., 2020). In addition to these standard metrics, we report the pruned metrics: these are"}, {"title": "4 RESULTS", "content": "4.1 ASSOCIATIVE PATTERNS IMPROVE ACCURACY BUT OFFER LIMITED PRACTICAL USE\nIn an initial set of experiments on MoA-net, we observed that pruned metrics were consistently lower than standard ones (Fig. 2-A), indicating that the metapath-based rules were not being utilized in most predictions. This can happen because rule-based rewards are contingent upon a true pair being found (Eq. 1). Additionally, amongst recorded trajectories, most did not follow our metapath-based rules; instead, most trajectories used the following metapath, involving inverse edges:\ninduces(Drug1, BP2) \u2190 induces(Drug1, BP1) \u2227\ninduces(Drug2, BP1) \u2227 induces(Drug2, BP2)\nThis associative pattern indicates that two drugs inducing a common BP also likely induce another BP. This type of pattern is also present in a previous NeSy RL study, Liu et al. (2020), in which the most used metapath was the following:"}, {"title": "4.2 P2H UPDATES REVEAL REASONING SHORTCUTS VIA DEGREE BIAS", "content": "In addition to analyzing the agent trajectories, we used P2H to assess how informative each of the metapath-based rules is in making predictions. In particular, MARSP2H weights showed that paths involving consecutive protein-protein interactions (PPIs) (i.e., interacts(Protein, Protein)),"}, {"title": "4.3 IDENTIFYING AND MITIGATING DEGREE BIAS IMPROVES PERFORMANCE", "content": "To temporarily prohibit the models from using associative patterns as in Section 4.1, we removed in-verse edges from MoA-net and corresponding metapath-based rules. Consequently, the performance metrics were poor, (e.g., MRR consistently < 0.1 (Fig. 2-C)). This confirmed that the models relied on associative patterns for predictions.\nNext, we wanted to confirm that the agent was getting lost within the PPIs. As explained in Sec-tion 3.4, MoA-net-10k is a variant of MoA-net with fewer PPIs. We tested MARSP2H, MARSnaive, and PoLo with the same parameters upon on MoA-net-10k (Fig. 2-D). As before, we excluded in-verse edges. Since we set trajectory length L = 4, our approach automatically removed drug-BP triples from the validation/test sets that were no longer connected via directed paths of length < 4, resulting in 100 and 90 triples, respectively. Metrics were markedly improved for PoLo, MARSnaive, and particularly for MARSP2H, in comparison to the full MoA-net without inverse edges (Fig. 2-C).\nWhile removing inverse edges improved metrics, a shortcut-aware system should achieve high per-formance even with the shortcut present (Marconato et al., 2024a). We addressed this next."}, {"title": "4.4 MARS P\u2082H RETAINS PERFORMANCE AMONGST RULE-BASED PREDICTIONS", "content": "We re-introduced inverse edges to MoA-net-10k, thereby restoring the ability to use reasoning short-cuts. Thereafter, we tested each of MARSP2H, MARSnaive, and PoLo again (Fig. 2-E). While each approach was optimized for standard MRR, pruned metrics indicated how well positive predictions aligned with rules. In Fig. 2-E, we show that both MARS variants and PoLo achieved standard met-rics on par with or better than MoA-net-10k without inverse edges (Fig. 2-D). However, MARSP2H"}, {"title": "4.5 EXTERNAL VALIDATION OF MARSP2H ON MOA-net-10k", "content": "In comparison to baseline methods, MARSP2H's metrics outperformed all but MINERVA's, with which they were comparable (Table 1). However, since MINERVA does not, by design, utilize rules for guidance, it suffers the same reasoning shortcuts as PoLo and MARSnaive. In contrast to MINERVA, DWPC suffers the opposite limitation: predictions are based only on metapath-based rules. MARSP\u2082H's pruned metrics, which are directly comparable, also outperform DWPC. Finally, as mentioned in Section 3.4, several drug-BP pairs corresponding to known MoAs in Drug-MechDB were included in the MoA-net test set. Of these, 33 pairs remained within MoA-net-10k's test set, and MARSP2H recovered the correct MoA for all of them. Thus, this comprehensive bench-mark highlights MARS' ability to achieve near state-of-the-art performance by effectively balancing domain-specific knowledge with the capacity to generalize beyond it."}, {"title": "5 DISCUSSION", "content": "NeSy approaches are sometimes portrayed as more trustworthy than their black-box counterparts, partially due to increased interpretability (Gaur & Sheth, 2024; DeLong et al., 2024). Within this study, we enhanced the interpretability of a NeSy RL approach to produce our model, MARSP2H\u00b7 Specifically, through our novel algorithm, two-hop joint probabilities (P2H), MARS learned weights corresponding to path-like rules, serving as a proxy for each rule's importance. However, these insights revealed a new issue: NeSy RL approaches on KGs are susceptible to reasoning shortcuts. Specifically, in our study, predictions were driven by node degree bias. Ultimately, MARS' enhanced interpretability called the trustworthiness of such approaches to question.\nTo address this, we considered Marconato et al. (2024a)'s desiderata for a shortcut-aware NeSy system. Specifically, on MoA-net-10k, MARSP2H showed both competitive performance as well as calibration in comparison to other models. Notably, however, measuring calibration is challenging in this domain. While rule-based predictions, measured through pruned metrics, follow the expected semantics for MoA deconvolution, we can not determine whether every other prediction follows unintended semantics. For example, in the classic MNIST addition task, popularly used to assess NeSy methods Manhaeve et al. (2018), a model is trained to determine the sum of two handwritten digits. In this toy example, the misclassification of a handwritten '2' as '3' and vice versa would still amount to the same sum. Thus, reasoning shortcuts can be objectively identified. On the contrary,"}, {"title": "6 CONCLUSIONS", "content": "We propose a novel prediction task for NeSy approaches on biomedical KGs: mechanism-of-action (MoA) deconvolution. In contrast to previous DD approaches, MoA deconvolution utilizes model interpretability to uncover the molecular mechanisms behind medicinal drugs. We also constructed a publicly available KG, MoA-net, for evaluating this task. To predict drug MoAs alongside indi-cations, we designed the MoA Retrieval System (MARS). Relative to previous NeSy approaches, MARS has enhanced interpretability as it dynamically learns weights corresponding to logical rules. We showed that, with respect to the three desiderata for reasoning-aware NeSy systems, MARS has improved calibration and cost effectiveness compared to its predecessors, thereby enabling the iden-tification and mitigation of a reasoning shortcut based on node degree bias."}, {"title": "A. APPENDIX", "content": "A.1 SELECTED METAPATHS\nTable A1: Metapaths representing feasible MoAs. Drugs are represented with a D, proteins with a P, and biological processes with BP.\ndownregulates(D, P) \u2192 participates(P, BP)\nupregulates(D, P) \u2192 participates (P, BP)\ndownregulates(D, P) \u2192 interacts(P, P) \u2192 participates(P, BP)\nupregulates(D, P) \u2192 interacts(P, P) \u2192 participates(P, BP)\ndownregulates(D, P) \u2192 interacts(P, P) \u2192 interacts(P, P) \u2192 participates (P, BP)\nupregulates(D, P) \u2192 interacts(P, P) \u2192 interacts(P, P) \u2192 participates(P, BP)"}, {"title": "A.2 IMPLEMENTATION", "content": "We implemented MARS using TensorFlow (version 2.10). The method is packaged in Python\u00b3. We used a grid search hyperparameter optimization (Feurer & Hutter, 2019); further details are within Appendix A.4.\nThe baseline KGE models have been trained using the PyKEEN framework (v1.10.1) (Ali et al., 2021). KGEMs were trained using PyKEEN's hyperparameter optimization pipeline over 30 trials using as initial parameters the best configurations from (Rivas-Barragan et al., 2022). The eval-uation in the hyperparameter optimization was conducted using Hits@10 for all the models on a link prediction task for the previously-described splits. Network algorithms were implemented in NetworkX (v3.1) (Hagberg et al., 2008) and metapaths were calculated using the hetnetpy Python package (Himmelstein et al., 2021; Himmelstein & Baranzini, 2015). Lastly, source code and data are openly available4."}, {"title": "A.3 $P_{2H}$ FORMALIZATION", "content": "Here, we describe the weight updates in more detail. Both naive and P2H updates are normalized according to expected values. For naive updates, we record observed frequency, O, at which each metapath-based rule is satisfied. This is normalized by the batch-specific expected frequency, E, in which every rule has a uniform probability across the total number rule groundings in that batch. For instance, if there are 10 metapath-based rules, and the agent satisfied at least one rule 100 times in a given batch, E would compute to 0.10, and each observed frequency OM, would be normalized by E. If the agent found zero groundings, no weight updates would be made in that batch. Ultimately, this produces a metric, \u03bc (Eq. 3) in which any value over one indicates usefulness (the agent used that rule more than others), and any value less than one indicates otherwise.\n$\u03bc_{M_i} = \\frac{O_{M_i}}{E_{M_i}}$ (3)\nNotably, the value of \u03bc was bound to avoid division by zero and extreme values. To adjust weight updates relative to the batch size and rollouts, we defined the minimum and maximum bounds on \u03bc as Eqs. 4 and 5, where p is the total number of metapath-based rules:\n$\u03bc_{min} = \\frac{\u03c1}{batch \\ size \\times rollouts}$ (4)\n$\u03bc_{max} = \u03c1 \\times batch \\ size \\times rollouts$ (5)"}, {"title": "A.4 HYPERPARAMETER SELECTION", "content": "Here, we describe hyperparameter selection. Table A2 describes the hyperparameter search space for optimization, and Table A3 describes the hyperparameters which were fixed for every model."}, {"title": "A.5 POLO METRICS WITHOUT ASSOCIATIVE RULES", "content": "We ran PoLo on the Hetionet KG (Himmelstein et al., 2017) using the same parameters and data splits as reported by Liu et al. (2020). In contrast to Liu et al. (2020), we input all directed metapaths of length L \u2264 4 as rule bodies (as in Appendix A.1). These metapaths served as the metapath-based rules for PoLo. Notably, these metapaths excluded the associative metapath mentioned in section 4.1:\ntreats(Drug\u2081, Disease) \u21d0 causes(Drug\u2081, Side Effect) \u2227\ncauses (Drug\u2082, Side Effect) \u2227 treats(Drug\u2082, Disease)\nDespite the most-used metapath-based rule being absent, PoLo achieved the same standard metrics as previously reported (Table A4)."}, {"title": "A.6 ABLATION STUDY", "content": "Here, we tested the effects of reducing the test set size (n=100) on performance. The lack of change between Fig. 4-C and C (test=100) indicates that a reduction in test set size is not responsible for improvements observed in Fig. 4-D."}, {"title": "A.7 XSWAP PERMUTATIONS: MARSP2H ON MOA-net-10k", "content": "Using the XSwap algorithm as in Section 4.2, we checked, once again, whether the prediction met-rics achieved using MARSP2H on MoA-net-10k were influenced by degree bias. This time, there was a stark decrease in performance metrics upon the permuted KG (Fig. 5). This showed that predictions made by MARS P\u2082H were due to factors beyond node degree bias."}]}