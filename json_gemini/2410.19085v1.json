{"title": "A Counterexample in Cross-Correlation Template Matching", "authors": ["Serap A. Savari"], "abstract": "Sampling and quantization are standard practices in signal and image processing, but a theoretical understanding of their impact is incomplete. We consider discrete image registration when the underlying function is a one-dimensional spatially-limited piecewise constant function. For ideal noiseless sampling the number of samples from each region of the support of the function generally depends on the placement of the sampling grid. Therefore, if the samples of the function are noisy, then image registration requires alignment and segmentation of the data sequences. One popular strategy for aligning images is selecting the maximum from cross-correlation template matching. To motivate more robust and accurate approaches which also address segmentation, we provide an example of a one-dimensional spatially-limited piecewise constant function for which the cross-correlation technique can perform poorly on noisy samples. While earlier approaches to improve the method involve normalization, our example suggests a novel strategy in our setting. Difference sequences, thresholding, and dynamic programming are well-known techniques in image processing. We prove that they are tools to correctly align and segment noisy data sequences under some conditions on the noise. We also address some of the potential difficulties that could arise in a more general case.", "sections": [{"title": "Introduction", "content": "The alignment of images of the same scene is needed for applications as diverse as medical imaging, hyperspectral image processing, and micro/nano analysis [1]. Image registration is an extensively studied topic which uses models of image similarity or transformation to determine how to match images, and it is often influenced by computational considerations [1], [2,"}, {"title": "A Small Example", "content": "Consider the underlying spatially-limited piecewise constant function\n\n\\(g(t) =\n\\begin{cases}\n1, & 0 < t < 1.3T, 2.75T < t < 4.1T \\\\\n-1, & 1.3T < t < 2.75T, 4.1T < t < 5.4T \\\\\n0, & otherwise.\n\\end{cases}\n\nSuppose the sampling interval is T, the first sequence 1 of nine noiseless samples of g(t) has its first sample at t = -0.95T, and the second sequence Y2 of nine noiseless samples of g(t) has its first sample at t = -0.5T. Then Y1 and 2 are\n\n\\(\u00a51 = (\u00a51 [1],..., \u00a51[9]) = (0, 1, 1, -1, 1, 1, -1, 0, 0)\\)\n\\(72 = (2[1],..., 2[9]) = (0, 1, -1, -1, 1, -1, 0, 0, 0).\\)\n\nThere is a collection of piecewise constant functions and sampling grid positions that would result in 1 and 2, so without prior knowledge about g(t) and/or the translations of the sampling grid from one sequence of samples to the next there are limits to the accuracy of estimates pertaining to"}, {"title": "Notation and Some Earlier Results", "content": "In general, our underlying spatially limited piecewise constant function with m regions in its support is given by [3]\n\n\\(g(t) =\n\\begin{cases}\ng_1, & 0<t< R_1 \\\\\ng_i, & \\sum_{j=1}^{i-1}R_j < t \\le \\sum_{j=1}^{i} R_j, i \\in \\{2, ..., m\\} \\\\\n0, & otherwise;\\end{cases}\n\\) \n\nhere \\(g_1 \\neq 0, g_m \\neq 0\\), and \\(g_i \\neq g_{i+1}, i \\in \\{1, ..., m-1\\}\\), and we define \\(g_0 = g_{m+1} = 0\\). For the sampling interval T, region length Ri is given by\n\n\\(R_i = (n_i - f_i)T, i\\in \\{1, ..., m\\}\\),\n\nwhere for each i, ni is an integer that is at least two and 0 < fi < 1; i.e., we take at least one sample from each region.\nLet \u0394\u2081 \u2208 [0, \u03a4) represent the distance from the left endpoint of region i to the first sampling point within the region. The number ni of samples from region i depends on \u2206i. Define [x], x \u2265 0, as the integer part of x. For non-negative integers K, define\n\n\\(\\kappa(i, K) = \\sum_{j=0}^{K} f_{i+j}\\) \n\\(d_{i,K} = \\sum_{j=0}^{K}n_{i+j} - \\kappa(i, K)\\).\n\nThe following result is [4, Proposition 1]:"}, {"title": "Difference Sequences", "content": "Returning to our motivating example, cross-correlation template matching does not account for the variations within the possible patterns of sampling"}, {"title": "A Thresholding Scheme", "content": "We have the following result,\nTheorem 4: Suppose we have two difference sequences d\u2081 and d2 with respective ground truth difference sequences 81 and 82. Define\n\n\\(\\tau = \\max_{0<k<m} |g_{k+1}-g_k|.\\)\n\nLet Zi C {1, ..., N}, i\u2208 {1, 2}, be the set of indices for which di[j] = 0 if j\u2208 Zi and di[j] \u2260 0 if j \u2209 Zi. Suppose there is v \u2208 (0, \u03c4) for which\n\n*   |di[j]] < v, i \u2208 {1, 2}, if j\u2208 Zi,\n*   di[j] \u2265 v, i \u2208 {1, 2}, if j \u2209 Zi and di[j] > 0,\n*   di[j] < \u2212v, i \u2208 {1, 2}, if j \u2209 Zi and di[j] < 0,\n\nThen a thresholding scheme that sets all components of di, i \u2208 {1, 2}, with magnitude less than v to zero results in a sequence that identifies the location of the m +1 samples within yi and yi which immediately follow the discontinuity points of g(t).\nProof: The scheme will by definition identify the exact set of zero components in d\u2081 and 82 and the signs of the non-zero components of 81 and 82. By Proposition 3, the locations of the non-zero components of 81 and"}, {"title": "A Dynamic Programming Scheme", "content": "Dynamic programming is a well-known tool for image segmentation (see, e.g., [8]) and for the decoding of corrupted data in digital communication [9]. We formulate a longest path problem from a starting vertex to a termination vertex in a directed, acyclic graph to seek the most desirable equal length subsequences of d\u2081 and d2 subject to some of the constraints on patterns of sampling counts; additional constraints can be included at the cost of increased computational complexity. The graph also contains 2N - 1 alignment vertices which are neighbors of the starting vertex and 3N2 \u2013 4N + 2 vertices for potential segmentation pairs within d\u2081 and d2 which include some information about past segmentations. The alignment vertices are labeled by ordered pairs\n\n\\((j_1, j_2) \\in \\{(0, 0), (0, 1), ..., (0, N - 1), (1, 0), ..., (N - 1, 0)\\},\\)\n\nwhere vertex (j1, j2) signifies that we begin examining di, i \u2208 {1, 2}, in position ji and position 0 precedes the sequence. We propose three edge weight functions; for all of them any edge from the starting vertex to an alignment vertex has weight zero. Each alignment vertex is also neighbors with a subset of the segmentation vertices.\nThe segmentation vertices and edges associated with them are motivated by two properties from Proposition 1. First, the number nj, i \u2208 {1, ..., m}, of samples from region i of the support of g(t) can differ in two sets of samples by at most one, and the total number of samples from the first i regions of the support of g(t) can also differ by at most one. A segmentation pair (d1(j1), d2(j2)), 11, 12 \u2208 {2, ..., N}, marking the beginning of the same region in the support of g(t) or in the final all-zero region is associated with three vertices in the graph labeled (j1, j2, 0), (j1, j2, 1), and (j1, j2, 2), The vertex (j1, j2, 0) can appear on a path from alginment vertex (k1, k2) to the termination vertex if j1-k\u2081 = j2-k2, the vertex (j1, j2, 1) can appear if j1 \u2013 k\u2081 = j2 - k2 + 1, and the vertex (j1, j2, 2) can appear if j\u2081 - k\u2081 +1 = j2 - k2. If j1 = 1 and/or j2 = 1, then we associate the segmentation pair (d1(j1), d2(j2)) with the vertex (j1, j2, 0). Let W(j1, j2, v) denote the"}, {"title": "Conclusions", "content": "Counterexamples are part of the tradition of mathematical discovery (see, e.g., [10]-[13]). Selecting the maximum from cross-correlation template matching is a well-known alignment strategy for discrete image registration, but it is not always the best alignment technique for noisy signals. Moreover, it does not address the need for segmentation in sequences of noisy samples from quantized signals. Motivated by an example, we prove that schemes based on difference sequences, thresholding, and in some cases dynamic programming offer optimal alignment and segmentation for sequences"}]}