{"title": "Revisiting Reciprocal Recommender Systems: Metrics, Formulation, and Method", "authors": ["Chen Yang", "Sunhao Dai", "Yupeng Hou", "Wayne Xin Zhao", "Jun Xu", "Yang Song", "Hengshu Zhu"], "abstract": "Reciprocal recommender systems (RRS), conducting bilateral recom-mendations between two involved parties, have gained increasingattention for enhancing matching efficiency. However, the major-ity of existing methods in the literature still reuse conventionalranking metrics to separately assess the performance on each sideof the recommendation process. These methods overlook the factthat the ranking outcomes of both sides collectively influence theeffectiveness of the RRS, neglecting the necessity of a more holisticevaluation and a capable systemic solution.In this paper, we systemically revisit the task of reciprocal rec-ommendation, by introducing the new metrics, formulation, andmethod. Firstly, we propose five new evaluation metrics that com-prehensively and accurately assess the performance of RRS fromthree distinct perspectives: overall coverage, bilateral stability, andbalanced ranking. These metrics provide a more holistic under-standing of the system's effectiveness and enable a comprehen-sive evaluation. Furthermore, we formulate the RRS from a causalperspective, formulating recommendations as bilateral interven-tions, which can better model the decoupled effects of potentialinfluencing factors. By utilizing the potential outcome framework,we further develop a model-agnostic causal reciprocal recommen-dation method that considers the causal effects of recommenda-tions. Additionally, we introduce a reranking strategy to maxi-mize matching outcomes, as measured by the proposed metrics.Extensive experiments on two real-world datasets from recruit-ment and dating scenarios demonstrate the effectiveness of ourproposed metrics and approach. The code and dataset are availableat: https://github.com/RUCAIBox/CRRS.", "sections": [{"title": "1 Introduction", "content": "Reciprocal recommender systems (RRS), refer to the task that two-sided adoption has to be achieved for the final match, which hasbeen widely studied and applied to scenarios like marriage mar-kets [5, 14, 24, 41], recruitment [45, 47], and social networks [1, 9]."}, {"title": "2 Related Work", "content": "Reciprocal Recommender System. Reciprocal RecommenderSystems (RRS) have been widely studied for two-sided markets [17,20, 32, 47], recommending users to other users rather than items.RRS are frequently employed in domains where both sides of themarket have their preferences and interactions, such as online dat-ing [14, 23, 24, 35, 41], recruitment [4, 11, 17, 33, 45, 47] and socialnetworks [1, 9]. Since the reciprocal recommendation task can beregarded as two separate tasks, most RRS evaluate their methodsindividually for each task [13, 19, 24, 45, 50, 51], with widely usedtop-K recommendation metrics such as Recall, Precision, and Nor-malized Discounted Cumulative Gain (NDCG). However, thesetwo tasks are two sides of a coin and the final result is determinedby both sides of the market. For a better evaluation of the whole"}, {"title": "3 Problem Definition", "content": "In reciprocal recommender systems (RRS), there are two involvedparties (typically two sets of users) with mutual selection relation-ship, denoted as A = {a1, a2,..., an} and B = {b1,b2,..., bm},where n and m denote the numbers of candidates on each side.The two parties are associated with a set of directed user-to-userinteractions represented by I = {(ai, bj, dij, rij}}. Each tuple rep-resents an interaction between a user a\u00a1 \u2208 A and a user bj \u2208 B,where the binary variable dij \u2208 {0,1} indicates the direction ofthe interaction (1 for a\u00a1 \u2192 bj and 0 for bj \u2192 ai) and rij \u2208 {0,1}represents whether a final match is achieved.In the scenario of reciprocal recommendation, we perform per-sonalized recommendations for users of both sides. Specifically, fora given user ai, the system generates a ranked list of recommen-dations from B. The other side is similar, where users from A areranked when recommending to user bj. Most existing works followconventional evaluation paradigms to assess the ranking perfor-mance of each side individually. However, in a reciprocal scenario,the primary goal should be the overall count of matching pairs.This work focuses on evaluating the recommendations from bothsides from an overall system perspective. This includes how manyactual match pairs are covered by the recommendations (coverage)and whether they are recommended to each other (stability)."}, {"title": "4 Revisiting the Evaluation Metrics", "content": "As discussed in Section 1, to evaluate the performance of RRS, exist-ing methods mainly focus on either single-sided metrics or solelythe overall quantity of matches, which lack consideration of morerobust two-sided measurements, such as coverage and stability.To ensure a more holistic and robust evaluation, we propose toconsider three new evaluation aspects, namely overall coverage,bilateral stability, and balanced ranking."}, {"title": "4.1 Proposed Metrics", "content": "Measures of Overall Coverage. Overall coverage refers to theextent to which a recommender system covers potential matchingrelationships from an overall perspective. To achieve a more ac-curate evaluation of the coverage in RRS, the successful matchingled by the bilateral recommendation, where the two users involvedare recommended to each other simultaneously, should be treatedas a single successful recommendation, rather than being countedtwice. Considering this, we propose two metrics, namely Coverage-adjusted Recall (CRecall) and Coverage-adjusted Precision (CPreci-sion). The corresponding formulas are given as follows:\nCRecall = \\frac{TPA + TPB \u2013 TPA\u2229B}{M}  (1)\nCPrecision = \\frac{\u0422\u0420\u0410 + \u0422\u0420\u0412 - \u0422\u0420\u0410\u041e\u0412}{(n+m)K} (2)\nwhere M denotes the total count of the matching pairs and K de-notes the length of the recommendation list. T\u03a1\u0391 = \u03a3\u03af\u2208\u0391 \u03a4\u03a1\u1f76; and\u03a4\u03a1\u0392 = \u03a3\u03b5\u03b2 \u03a4\u03a1j denote the sum of true positives for side A andside B, where TP; and TP; are the true positives of the single userof the two sides. TPAOB denotes the true positives where both sideshave recommendations simultaneously. As we can see, CRecall andCPrecision refine the positive pairs generated by the RRS by avoid-ing duplicate counting of redundant successful recommendations.\nMeasures of Bilateral Stability. Bilateral stability refers to the ex-tent to which a recommender system simultaneously recommendsa pair of users to each other. Stability is mainly related to the num-ber of mutual recommendations, which potentially increases thelikelihood of successful matching for the involved pairs. To effec-tively evaluate the bilateral stability of RRS, we propose two metrics,namely Stability-adjusted Recall (SRecall) and Stability-adjusted Pre-cision (SPrecision). The formulas are given as:\nSRecall = \\frac{\u0422\u0420\u0410OB}{M} (3)\nSPrecision = \\frac{TPAOB}{(n+m)K} (4)\nSRecall and SPrecision directly show how well the system simul-taneously offers recommendations for the two sides of the givenpair, effectively capturing the essence of bilateral stability.\nMeasures of Balanced Ranking. Balanced ranking refers to theranking performance of the recommendation list ensuring equityacross different group sizes. An essential characteristic of the RRSis the bilateral imbalances and crowding [33]. For instance, in arecruitment scenario, there might be 1000 candidates and merely100 jobs, resulting in a significant disparity in the number of users.To fairly evaluate the ranking performance of each user in theRRS, we propose Reciprocal NDCG (RNDCG) based on the widely-used ranking metric NDCG [39]. It offers a more comprehensiveevaluation of overall ranking performance, considering weightdisparities between different sides. The formula is presented as:\nRNDCG@K = \\frac{n. NDCGA + m. NDCGB}{n+m} (5)\nRNDCG is a weighted sum of NDCG according to the numberof users on each side. Compared with NDCG, RNDCG enhances"}, {"title": "4.2 Effectiveness of the Proposed Metrics", "content": "To better understand the advantage of the proposed metrics, weconstruct three illustrative scenarios as depicted in Figure 2. Forclarity, we consider a top-1 recommendation scenario, where eachuser receives just one recommendation (indicated by arrows). Here,matches cannot be realized without recommendations (namelypotential matching, indicated by black dashed lines).The three scenarios represent distinct recommendation strate-gies. In case 1, four separate recommendations each successfullyestablished a matched relation. In case 2, two mutual recommen-dations resulted in two matched relations while in case 3, threematched relations were successfully established. We calculate bothtraditional and proposed metrics for these cases. For simplicity, wetake Recall, CRecall, and SRecall for comparisons, and the othermetrics can be conducted similarly. It is evident that traditionalmetrics fail to capture the differences among the three cases (all hav-ing Recall=0.5), whereas our proposed metrics CRecall and SRecallcan capture such a distinction (e.g., CRecall=1 in case 1 and CRe-call=0.5 in case 2). Thus, these proposed metrics can provide a morecomprehensive evaluation of the RRS, surpassing the limitations oftraditional metrics.In traditional RRS, when a pair is recommended by both sides andachieves a match, it is unclear through which mechanism the match"}, {"title": "5 Proposed Method", "content": "In the above, we have introduced several new evaluation metricsfor improving the evaluation of RRS. Next, we study how to de-velop more effective reciprocal recommendation models, so as toachieve better performance on RRS. Compared with conventionalrecommendation tasks, reciprocal recommendation becomes moreintricate in the matching mechanism, due to the potential effects oftwo-sided recommendation. In order to achieve a better recommen-dation performance, it is key to effectively model and analyze theeffects of the potential factors in deriving a matching relationship.For this purpose, we formulate the reciprocal recommendation sce-nario from a causal perspective and then introduce the proposedCausal Reciprocal Recommender System (named CRRS) underthe potential outcome framework [28]. The overall architecture ofthe proposed approach is shown in Figure 3."}, {"title": "5.1 Recommendations as Bilateral Treatments", "content": "As previously mentioned, the primary goal of an RRS is to opti-mize the coverage of successful matching relationships. This goal ishighly affected by the recommendation process, either single-sidedor two-sided recommendations. Given a successful matching withbilateral recommendations, it is intricate to infer which recommen-dation actually leads to the matching. To better capture the under-lying effects of potential factors, we view the recommendations as treat-ments from a causal perspective [30, 36]. In this scenario, treat-ments consist of two parts: recommendations for side A (denotedas TA) and recommendations for side B (TB). Formally, we definebilateral treatment as follows:\nDefinition 5.1 (Bilateral Treatments). For a given user pair (ai, bj),TA represents whether the system recommends user bj to ai, whileTB represents the recommendation for the other side, i.e.,\nTA = 1 \u2192 recommending bj to ai, (6)\nTB = 1 \u2194 recommending ai to bj. (7)\nThe coupling of these two distinct treatments influences the out-comes profoundly and results in four unique instances of interven-tion (i.e., TATB \u2208 {10, 11,01,00}). Based on the causal formulation,we next estimate the causal effect of each treatment combinationand calculate the ranking scores for users."}, {"title": "5.2 Causal Reciprocal Recommender System", "content": "To decouple these treatments and model them separately at a finergranularity, we leverage the potential outcome framework [28] toanalyze and estimate the causal effect. The core idea is to estimatethe causal effect of recommendation in a collaborative way, underthe assumption that similar users have similar treatment effectsunder recommendations [42]. By developing a collaborative causal solution, our approach is model-agnostic, ensuring adaptability andversatility. After the causal effect is estimated, we need to determinethe final ranking list presented to both sides' users. To improvethe overall effectiveness of the system, we further propose a reranking"}, {"title": "5.2.1 Potential Outcome Framework", "content": "In causal inference, potentialoutcome framework [28] is a method that directly calculates theeffect of certain treatments for outcomes. In recommendation sce-narios, outcome is often defined as either implicit or explicit userfeedback, such as click or rating [43]. When considering a reciprocalrecommendation scenario, we define outcomes as matching rela-tionships, as this is the most effective feedback observed. Formally,we give the definition of potential outcome in RRS as follows:\nDefinition 5.2 (Potential Outcome for RRS). Given the treatmentassignment T = (TA, TB), the potential outcome Yr denotes match-ing relationship under the specific recommendation strategy whereT = t \u2208 {10, 11, 01, 00} for instance user pair (ai, bj). The potentialoutcomes can be instantiated as a function Yr = f (xi, xj), whichtakes user features xi and xj as input, i.e., \u0177t = ft (xi, xj).\nWe present the correspondence of \u0177 to treatment t in Table 1.Specifically, an estimation of \u017710 = 1 indicates that a match is ex-pected when the treatment combination is assigned as TA = 1 andTB = 0. Conversely, the estimation of yoo consistently remains at 0because no match is expected when neither side receives a recom-mendation. To model these bilateral treatments, a major challengeis that there is only one intervention per sample in RRS. We cannotobserve the final results of different treatments for the same pair"}, {"title": "5.2.2 Causal Effect Modeling and Ranking", "content": "As discussed before, wereformulate the RRS scenario with the potential outcome frameworkand regard bilateral recommendations as treatments. Under thefour treatment assignments mentioned above, the cases that wehave to consider that are likely to be successful are those witht\u2208 {10, 11, 01}. As shown in Table 1, t = 10 is to recommend bj toai, t = 01 is to recommend ai to bj, and t = 11 is to recommendboth users to each other. When t = 00, the pair cannot be matchedbecause neither side is recommended to the other. To support thisfine-grained modeling and predict the potential outcomes underthe three treatments, we construct three functions:\n\u017710 = f10 (ai, bj), \u017711 = f11(ai, bj), \u017701 = fo1 (ai, bj), (8)\nwhere each ft (.) represents a specific recommender model back-bone and each predicted value ranges from 0 to 1. The three back-bone models essentially have few restrictions and can be imple-mented by typical recommendation models (e.g., BPRMF [25] orLightGCN [10]). Nonetheless, they possess unique parameters,which allow them to outperform a single model in effectively pre-dicting outcomes for different treatments. Our proposed method ismodel-agnostic and can be naturally applied to typical recommenda-tion models. Following this paradigm, the expectations of matchingunder different recommendation strategies can be estimated.After the three outcomes have been predicted, we need to rankthe candidates for each user on both sides. For a given user pair(ai, bj), the scores for ranking can be simply calculated using thefollowing formula:\nSa\u2081 = \u017710 + \u017711, Sb; = \u017701 + \u017711, (9)\nwhere sa, and st, are the scores of recommendations for a\u00a1 and bj,respectively. Each score is the aggregate of two scores calculated"}, {"title": "5.2.3 Reranking Strategy with Vacant Slots", "content": "Although the afore-mentioned approach facilitates ranking, it still falls short of fullyaddressing the recommendation mechanism of this scenario.In practice, if one side of a pair (e.g., a\u00a1 and bj) lacks recommen-dations (e.g., TA = 0), there will be an empty spot for the recommen-dation and we term this a vacant slot. Another user (say bo) willbe recommended to ai at this vacant slot. Such a recommendationof bu introduces a new possibility of matching denoted as \u00ff(ai),which is the matching expectation of the pair (ai, bu). Consequently,the global expectation of matching becomes \u017701 + \u00ff(ai). The resultsunder other treatments are shown in Table 1. With the potentialoutcome predictions and matching expectations brought by thevacant slots, we need to choose and refine the scores for rankingusers for the two sides. The formula for ranking scores for the twosides is set as follows:\nsa\u2081 = IsMax(\u017711) \u017711 + IsMax(\u017710 + (bj)) \u017710, (10)\nsb\u2081 = IsMax(\u017711)\u00b7 \u017711 + IsMax(\u017701 + \u04ef(ai)) \u00b7 \u017701, (11)\nwhere IsMax() is a boolean value for the set S = {\u017711, \u017701 +\n\u04ef(ai), \u017710+\u04ef(bj), \u1ef9(ai)+\u1ef9(bj)}, denoting the best recommendationstrategy for a given pair:\nIsMax(y) = {1 if y = max(S),0 otherwise.(12)\nThe aim of IsMax is to ensure that the final recommendationmethod is targeted at maximizing overall matching performance. Toestimate \u00ff(ai) and \u00ff(bj), we sample a certain number of users fromthe opposite side and then calculate their relevance scores using thebackbone model. This estimation serves as an approximation of the\u1ef9(ai) and \u1ef9(bj) based on the sampled users. By considering bothrelevance and direction, the reranking process ensures rankingswith the most matching expectations, taking into consideration thereciprocal nature of the RRS."}, {"title": "5.3 Optimization", "content": "Our proposed CRRS approach consists of two learning stages: pre-training and counterfactual learning. In the pre-training stage, weuse real matching labels to train a backbone recommender model.In the counterfactual learning stage, we finetune the recommender model with direction labels to better predict outcomes, taking intoaccount the causal effects of various recommendation strategies. The full algorithm is described in Algorithm 1."}, {"title": "5.3.1 First Stage: Pre-training", "content": "We optimize the backbone modelusing the Bayesian Personalized Ranking (BPR) loss [25], whicheffectively captures the relative preferences between positive andnegative samples. To describe the pre-training process, we take sideA for illustration when it is symmetric for side B, we define thepre-training loss Lpretrain as follows:\nLpretrain = \\frac{1}{|D|} \u03a3(ai,bj) ED log (o (\u0177 (ai, bj) \u2013 \u0177(ai, bj))), (13)"}, {"title": "5.3.2 Second Stage: Counterfactual Learning", "content": "At this stage, we fur-ther finetune the recommendation model using data under differenttreatment assignments. Similar to the first stage, the counterfactuallearning loss also employs the BPR ranking loss. For each backbonemodel, the loss function is expressed as follows:\nLt = \\frac{1}{|Dt|} log (o (\u00fbt (ai, bj) \u2013 \u0177t (ai, bj))), (14)"}, {"title": "5.4 Discussion", "content": "We conduct a discussion here to clarify our stance on redundantrecommendations. In practice, different scenarios may exhibit vary-ing stances toward redundant recommendations. For example, onLinkedIn\u00b9, mutual recommendations between matched candidatesand recruiters are optional. In contrast, on Tinder\u00b2, two users can"}, {"title": "6 Experiments", "content": "In this section, we aim to evaluate the proposed CRRS's perfor-mance and the proposed metrics' effectiveness. We start with theexperiment setup, followed by a thorough evaluation comparingthe CRRS with baselines. Then we analyze traditional versus pro-posed metrics and present results from ablation studies alongside aranking analysis of redundant recommendations."}, {"title": "6.1 Experimental Setup", "content": "Dataset. To evaluate the effectiveness of our method, we conductexperiments on two large real-world datasets from different recip-rocal recommendation domains: recruitment and online dating.\n\u2022 Recruitment [45]: This dataset contains two weeks of reallogs collected from a large and popular online recruitment plat-form, which records dynamic interactions between job-seekingcandidates and proactive recruiters.\n\u2022 Dating\u00b3: This dataset is collected from the popular onlinedating service Libimseti. It encompasses ratings between users, andwe only keep ratings between opposite-sex pairs (i.e., female-to-male and male-to-female). Pairs with mutual ratings of 8 or aboveare viewed as a successful match, given the increased likelihood ofa match with bilateral exposure.\nFollowing the standard practice [26, 52], we only keep the 5-coreinteractions for both datasets. After preprocessing, we randomlysplit both datasets into training, validation, and test sets with ratiosof 8:1: 1. The statistics of both datasets are summarized in Table 2.\nBaseline models. As our proposed CRRS is model-agnostic, wecan apply it to various recommendation models. We choose thefollowing two popular models as our backbone models:\n\u2022 BPRMF [25]: This model designs Bayesian Personalized Rank-ing (BPR) loss to optimize the Matrix Factorization (MF), which isrepresentative in the collaborative filtering recommendation.\n\u2022 LightGCN [10]: This model designs a simple but competitiveGCN architecture for the graph-based recommendation.\nWe also compare our proposed CRRS with the following recip-rocal recommendation models:\n\u2022 D-BPRMF: This method leverages two same BPRMF but withdifferent parameters to make recommendations for each side."}, {"title": "6.2 Experimental Results", "content": "6.2.1 Overall Performance. We conduct a comprehensive compar-ison of different methods across various evaluation metrics. Theresults on two datasets are reported in Table 3.\nPerformance comparison between models. As we can see, inRecruitment, reciprocal methods LFRR and DPGNN demonstraterecipient performance across most single-sided evaluation metrics,due to their ability to effectively capture the underlying interac-tions. Our proposed CRRS is not necessarily better than a well-designed reciprocal recommendation model in single-sided metricsbut achieves the highest performance in overall coverage metrics"}, {"title": "6.2.2 Metric Comparative Analysis", "content": "We conduct experiments tocompare traditional metrics and the proposed metrics under differ-ent recommendation strategies on dating. For the same model, wemanually adjust the redundant recommendations and consider thefollowing two adjustments: (A) BPRMF-Uni: Convert the redun-dant recommendations with another matching pair that does notappear on both sides. (B) BPRMF-Rep: Convert the non-redundantpairs with other matching pairs that have appeared on one side.The original model is named as BPRMF-Ori. As shown in Figure 4,We depict a rectangular interaction diagram with users from bothsides represented along the horizontal and vertical axes. Blue pointsare true positives for just one side and the green ones are true pos-itives for the two sides. Recommendations on three cases havecompletely identical traditional ranking metrics (Recall, Precision,and NDCG). However, significant differences exist in the proposedmetrics, which directly influence the count of matching pairs. Thus,it is critical to take the proposed metrics into account in RRS."}, {"title": "6.2.3 Ablation Study", "content": "The major technical contribution of our approach lies in the potential outcome framework training algorithm,as well as the proposed reranking strategy. We now analyze howeach part contributes to the final performance. We consider thefollowing three variants of CRRS: (A) CRRS w/o finetuning (Equa-tion (14)); (B) CRRS w/o pre-training (Equation (13)); (C) CRRS w/oreranking (Equation (10));\nIn Table 4, we can observe that the absence of any componentwill lead to performance degradation, with varying impacts acrossdifferent datasets. In recruitment, the reranking strategy contributessignificantly to the overall coverage improvement as its objective isto avoid redundant recommendations. At the same time, we can ob-serve that the result of the model without reranking demonstratessuperior performance in bilateral stability. In dating, pre-trainingand finetuning play more vital roles in enhancing the model per-formance across various metrics. While the benefits brought by thereranking strategy are relatively modest. These results highlightthe usefulness of all components in CRRS."}, {"title": "6.2.4 Ranking Analysis of Redundant Recommendations", "content": "We conduct experiments here to analyze the distribution of redundantrecommendations in the ranking list. We employ the same BPRMFmodel to generate top-50 recommendations for both sides andrecord the ranking of all redundant recommendations. As discussedabove, an effective way to enhance coverage involves reducingduplication between the bilateral ranking lists. However, as Fig-ure 5 shows, the majority of redundant recommendations are foundin the advanced positions, so an objective of directly optimizingthe discrepancy between both sides may be ineffective. This sug-gests that innovative approaches like reranking are essential forachieving more effective and balanced outcomes."}, {"title": "7 Conclusion", "content": "This paper revisited the study of reciprocal recommender systemsby introducing new metrics, formulation, and method. Firstly, weproposed five metrics for evaluating RRS from three new aspects.Then we formulated reciprocal recommendation tasks from a causalperspective, considering the recommendations as bilateral inter-ventions. Furthermore, we proposed a causal reciprocal recommen-dation model using a potential outcome framework. To optimizeoverall performance, we further designed a reranking strategy toenhance the overall performance. Extensive experiments on twodatasets indicate that the proposed approach can achieve superiorperformance on overall performance."}]}