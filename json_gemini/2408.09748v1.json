{"title": "Revisiting Reciprocal Recommender Systems: Metrics, Formulation, and Method", "authors": ["Chen Yang", "Sunhao Dai", "Yupeng Hou", "Wayne Xin Zhao", "Jun Xu", "Yang Song", "Hengshu Zhu"], "abstract": "Reciprocal recommender systems (RRS), conducting bilateral recommendations between two involved parties, have gained increasing attention for enhancing matching efficiency. However, the majority of existing methods in the literature still reuse conventional ranking metrics to separately assess the performance on each side of the recommendation process. These methods overlook the fact that the ranking outcomes of both sides collectively influence the effectiveness of the RRS, neglecting the necessity of a more holistic evaluation and a capable systemic solution.\nIn this paper, we systemically revisit the task of reciprocal recommendation, by introducing the new metrics, formulation, and method. Firstly, we propose five new evaluation metrics that comprehensively and accurately assess the performance of RRS from three distinct perspectives: overall coverage, bilateral stability, and balanced ranking. These metrics provide a more holistic understanding of the system's effectiveness and enable a comprehensive evaluation. Furthermore, we formulate the RRS from a causal perspective, formulating recommendations as bilateral interventions, which can better model the decoupled effects of potential influencing factors. By utilizing the potential outcome framework, we further develop a model-agnostic causal reciprocal recommendation method that considers the causal effects of recommendations. Additionally, we introduce a reranking strategy to maximize matching outcomes, as measured by the proposed metrics. Extensive experiments on two real-world datasets from recruitment and dating scenarios demonstrate the effectiveness of our proposed metrics and approach. The code and dataset are available at: https://github.com/RUCAIBox/CRRS.", "sections": [{"title": "1 Introduction", "content": "Reciprocal recommender systems (RRS), refer to the task that two- sided adoption has to be achieved for the final match, which has been widely studied and applied to scenarios like marriage mar- kets [5, 14, 24, 41], recruitment [45, 47], and social networks [1, 9]."}, {"title": "2 Related Work", "content": "Reciprocal Recommender System. Reciprocal Recommender Systems (RRS) have been widely studied for two-sided markets [17, 20, 32, 47], recommending users to other users rather than items. RRS are frequently employed in domains where both sides of the market have their preferences and interactions, such as online dat- ing [14, 23, 24, 35, 41], recruitment [4, 11, 17, 33, 45, 47] and social networks [1, 9]. Since the reciprocal recommendation task can be regarded as two separate tasks, most RRS evaluate their methods individually for each task [13, 19, 24, 45, 50, 51], with widely used top-K recommendation metrics such as Recall, Precision, and Nor- malized Discounted Cumulative Gain (NDCG). However, these two tasks are two sides of a coin and the final result is determined by both sides of the market. For a better evaluation of the whole"}, {"title": "3 Problem Definition", "content": "In reciprocal recommender systems (RRS), there are two involved parties (typically two sets of users) with mutual selection relation- ship, denoted as $A = \\{a_1, a_2,..., a_n\\}$ and $B = \\{b_1,b_2,..., b_m\\}$, where n and m denote the numbers of candidates on each side. The two parties are associated with a set of directed user-to-user interactions represented by $I = \\{(a_i, b_j, d_{ij}, r_{ij})\\}$. Each tuple represents an interaction between a user $a_i \\in A$ and a user $b_j \\in B$, where the binary variable $d_{ij} \\in \\{0,1\\}$ indicates the direction of the interaction (1 for $a_i \\rightarrow b_j$ and 0 for $b_j \\rightarrow a_i$) and $r_{ij} \\in \\{0,1\\}$ represents whether a final match is achieved.\nIn the scenario of reciprocal recommendation, we perform per- sonalized recommendations for users of both sides. Specifically, for a given user $a_i$, the system generates a ranked list of recommen- dations from B. The other side is similar, where users from A are ranked when recommending to user $b_j$. Most existing works follow conventional evaluation paradigms to assess the ranking perfor- mance of each side individually. However, in a reciprocal scenario, the primary goal should be the overall count of matching pairs. This work focuses on evaluating the recommendations from both sides from an overall system perspective. This includes how many actual match pairs are covered by the recommendations (coverage) and whether they are recommended to each other (stability)."}, {"title": "4 Revisiting the Evaluation Metrics", "content": "As discussed in Section 1, to evaluate the performance of RRS, exist- ing methods mainly focus on either single-sided metrics or solely the overall quantity of matches, which lack consideration of more robust two-sided measurements, such as coverage and stability. To ensure a more holistic and robust evaluation, we propose to consider three new evaluation aspects, namely overall coverage, bilateral stability, and balanced ranking."}, {"title": "4.1 Proposed Metrics", "content": "Measures of Overall Coverage. Overall coverage refers to the extent to which a recommender system covers potential matching relationships from an overall perspective. To achieve a more ac- curate evaluation of the coverage in RRS, the successful matching led by the bilateral recommendation, where the two users involved are recommended to each other simultaneously, should be treated as a single successful recommendation, rather than being counted twice. Considering this, we propose two metrics, namely Coverage- adjusted Recall (CRecall) and Coverage-adjusted Precision (CPreci- sion). The corresponding formulas are given as follows:\n$CRecall = \\frac{TPA + TPB \u2013 TPA\\capB}{M}$\n$CPrecision = \\frac{\u0422\u0420\u0410 + \u0422\u0420\u0412 - \u0422\u0420\u0410\u041e\u0412}{(n+m)K}$\nwhere M denotes the total count of the matching pairs and K de- notes the length of the recommendation list. $TPA = \\Sigma_{i\\inA} TP_{i}$; and $TPB = \\Sigma_{i\\inB} TP_{i}$ denote the sum of true positives for side A and side B, where $TP_i$ and $TP_j$ are the true positives of the single user of the two sides. $TPAOB$ denotes the true positives where both sides have recommendations simultaneously. As we can see, CRecall and CPrecision refine the positive pairs generated by the RRS by avoid- ing duplicate counting of redundant successful recommendations.\nMeasures of Bilateral Stability. Bilateral stability refers to the ex- tent to which a recommender system simultaneously recommends a pair of users to each other. Stability is mainly related to the num- ber of mutual recommendations, which potentially increases the likelihood of successful matching for the involved pairs. To effec- tively evaluate the bilateral stability of RRS, we propose two metrics, namely Stability-adjusted Recall (SRecall) and Stability-adjusted Pre- cision (SPrecision). The formulas are given as:\n$SRecall = \\frac{\u0422\u0420\u0410OB}{M}$\n$SPrecision = \\frac{TPAOB}{(n+m)K}$\nSRecall and SPrecision directly show how well the system simul- taneously offers recommendations for the two sides of the given pair, effectively capturing the essence of bilateral stability.\nMeasures of Balanced Ranking. Balanced ranking refers to the ranking performance of the recommendation list ensuring equity across different group sizes. An essential characteristic of the RRS is the bilateral imbalances and crowding [33]. For instance, in a recruitment scenario, there might be 1000 candidates and merely 100 jobs, resulting in a significant disparity in the number of users. To fairly evaluate the ranking performance of each user in the RRS, we propose Reciprocal NDCG (RNDCG) based on the widely- used ranking metric NDCG [39]. It offers a more comprehensive evaluation of overall ranking performance, considering weight disparities between different sides. The formula is presented as:\n$RNDCG@K = \\frac{n \\cdot NDCGA + m \\cdot NDCGB}{n+m}$\nRNDCG is a weighted sum of NDCG according to the number of users on each side. Compared with NDCG, RNDCG enhances"}, {"title": "4.2 Effectiveness of the Proposed Metrics", "content": "To better understand the advantage of the proposed metrics, we construct three illustrative scenarios as depicted in Figure 2. For clarity, we consider a top-1 recommendation scenario, where each user receives just one recommendation (indicated by arrows). Here, matches cannot be realized without recommendations (namely potential matching, indicated by black dashed lines).\nThe three scenarios represent distinct recommendation strate- gies. In case 1, four separate recommendations each successfully established a matched relation. In case 2, two mutual recommen- dations resulted in two matched relations while in case 3, three matched relations were successfully established. We calculate both traditional and proposed metrics for these cases. For simplicity, we take Recall, CRecall, and SRecall for comparisons, and the other metrics can be conducted similarly. It is evident that traditional metrics fail to capture the differences among the three cases (all hav- ing Recall=0.5), whereas our proposed metrics CRecall and SRecall can capture such a distinction (e.g., CRecall=1 in case 1 and CRe- call=0.5 in case 2). Thus, these proposed metrics can provide a more comprehensive evaluation of the RRS, surpassing the limitations of traditional metrics.\nIn traditional RRS, when a pair is recommended by both sides and achieves a match, it is unclear through which mechanism the match"}, {"title": "5 Proposed Method", "content": "In the above, we have introduced several new evaluation metrics for improving the evaluation of RRS. Next, we study how to de- velop more effective reciprocal recommendation models, so as to achieve better performance on RRS. Compared with conventional recommendation tasks, reciprocal recommendation becomes more intricate in the matching mechanism, due to the potential effects of two-sided recommendation. In order to achieve a better recommen- dation performance, it is key to effectively model and analyze the effects of the potential factors in deriving a matching relationship. For this purpose, we formulate the reciprocal recommendation sce- nario from a causal perspective and then introduce the proposed Causal Reciprocal Recommender System (named CRRS) under the potential outcome framework [28]. The overall architecture of the proposed approach is shown in Figure 3."}, {"title": "5.1 Recommendations as Bilateral Treatments", "content": "As previously mentioned, the primary goal of an RRS is to opti- mize the coverage of successful matching relationships. This goal is highly affected by the recommendation process, either single-sided or two-sided recommendations. Given a successful matching with bilateral recommendations, it is intricate to infer which recommen- dation actually leads to the matching. To better capture the under- lying effects of potential factors, we view the recommendations as treatments from a causal perspective [30, 36]. In this scenario, treat- ments consist of two parts: recommendations for side A (denoted as TA) and recommendations for side B (TB). Formally, we define bilateral treatment as follows:\nDefinition 5.1 (Bilateral Treatments). For a given user pair (ai, bj), TA represents whether the system recommends user bj to ai, while TB represents the recommendation for the other side, i.e.,\n$TA = 1 \\rightarrow recommending \\ b_j to \\ a_i,$\n$TB = 1 \\leftrightarrow recommending \\ a_i to \\ b_j.$\nThe coupling of these two distinct treatments influences the out- comes profoundly and results in four unique instances of interven- tion (i.e., $TATB \\in \\{10, 11,01,00\\}$). Based on the causal formulation, we next estimate the causal effect of each treatment combination and calculate the ranking scores for users."}, {"title": "5.2 Causal Reciprocal Recommender System", "content": "To decouple these treatments and model them separately at a finer granularity, we leverage the potential outcome framework [28] to analyze and estimate the causal effect. The core idea is to estimate the causal effect of recommendation in a collaborative way, under the assumption that similar users have similar treatment effects under recommendations [42]. By developing a collaborative causal solution, our approach is model-agnostic, ensuring adaptability and versatility. After the causal effect is estimated, we need to determine the final ranking list presented to both sides' users. To improve the overall effectiveness of the system, we further propose a reranking"}, {"title": "5.2.1 Potential Outcome Framework", "content": "In causal inference, potential outcome framework [28] is a method that directly calculates the effect of certain treatments for outcomes. In recommendation sce- narios, outcome is often defined as either implicit or explicit user feedback, such as click or rating [43]. When considering a reciprocal recommendation scenario, we define outcomes as matching rela- tionships, as this is the most effective feedback observed. Formally, we give the definition of potential outcome in RRS as follows:\nDefinition 5.2 (Potential Outcome for RRS). Given the treatment assignment T = (TA, TB), the potential outcome $Y_T$ denotes match- ing relationship under the specific recommendation strategy where T = t \u2208 {10, 11, 01, 00} for instance user pair (ai, bj). The potential outcomes can be instantiated as a function $Y_T = f (xi, xj)$, which takes user features $x_i$ and $x_j$ as input, i.e., $\\hat{y}_t = f_t (x_i, x_j)$."}, {"title": "5.2.2 Causal Effect Modeling and Ranking", "content": "As discussed before, we reformulate the RRS scenario with the potential outcome framework and regard bilateral recommendations as treatments. Under the four treatment assignments mentioned above, the cases that we have to consider that are likely to be successful are those with t\u2208 {10, 11, 01}. As shown in Table 1, t = 10 is to recommend $b_j$ to $a_i$, t = 01 is to recommend $a_i$ to $b_j$, and t = 11 is to recommend both users to each other. When t = 00, the pair cannot be matched because neither side is recommended to the other. To support this fine-grained modeling and predict the potential outcomes under the three treatments, we construct three functions:\n$\\hat{y}_{10} = f_{10} (a_i, b_j), \\ \\hat{y}_{11} = f_{11}(a_i, b_j), \\ \\hat{y}_{01} = f_{01} (a_i, b_j),$\nwhere each $f_t(\u00b7)$ represents a specific recommender model back- bone and each predicted value ranges from 0 to 1. The three back- bone models essentially have few restrictions and can be imple- mented by typical recommendation models (e.g., BPRMF [25] or LightGCN [10]). Nonetheless, they possess unique parameters, which allow them to outperform a single model in effectively pre- dicting outcomes for different treatments. Our proposed method is model-agnostic and can be naturally applied to typical recommenda- tion models. Following this paradigm, the expectations of matching under different recommendation strategies can be estimated.\nAfter the three outcomes have been predicted, we need to rank the candidates for each user on both sides. For a given user pair (ai, bj), the scores for ranking can be simply calculated using the following formula:\n$S_{a_i} = \\hat{y}_{10} + \\hat{y}_{11}, \\ S_{b_j} = \\hat{y}_{01} + \\hat{y}_{11},$\nwhere $S_{a_i}$ and $S_{b_j}$ are the scores of recommendations for $a_i$ and $b_j$, respectively. Each score is the aggregate of two scores calculated"}, {"title": "5.2.3 Reranking Strategy with Vacant Slots", "content": "Although the afore- mentioned approach facilitates ranking, it still falls short of fully addressing the recommendation mechanism of this scenario.\nIn practice, if one side of a pair (e.g., ai and bj) lacks recommen- dations (e.g., TA = 0), there will be an empty spot for the recommen- dation and we term this a vacant slot. Another user (say bo) will be recommended to ai at this vacant slot. Such a recommendation of bo introduces a new possibility of matching denoted as \u1ef9(ai), which is the matching expectation of the pair (ai, bo). Consequently, the global expectation of matching becomes \u017701 + \u1ef9(ai). The results under other treatments are shown in Table 1. With the potential outcome predictions and matching expectations brought by the vacant slots, we need to choose and refine the scores for ranking users for the two sides. The formula for ranking scores for the two sides is set as follows:\n$Sa_i = IsMax(\\hat{y}_{11}) \\cdot \\hat{y}_{11} + IsMax(\\hat{y}_{10} + \\bar{y}(b_j)) \\cdot \\hat{y}_{10},$\n$Sb_i = IsMax(\\hat{y}_{11})\\cdot \\hat{y}_{11} + IsMax(\\hat{y}_{01} + \\bar{y}(a_i)) \\cdot \\hat{y}_{01},$\nwhere IsMax() is a boolean value for the set S = {\u017711, \u017701 + \u1ef9(ai), \u017710+\u1ef9(bj), \u1ef9(ai)+\u1ef9(bj)}, denoting the best recommendation strategy for a given pair:\n$IsMax(y) =\\begin{cases}1 & \\text{if y = max(S)}, \\\\0 & \\text{otherwise}.\\end{cases}$\nThe aim of IsMax is to ensure that the final recommendation method is targeted at maximizing overall matching performance. To estimate \u1ef9(ai) and \u1ef9(bj), we sample a certain number of users from the opposite side and then calculate their relevance scores using the backbone model. This estimation serves as an approximation of the \u1ef9(ai) and \u1ef9(bj) based on the sampled users. By considering both relevance and direction, the reranking process ensures rankings with the most matching expectations, taking into consideration the reciprocal nature of the RRS."}, {"title": "5.3 Optimization", "content": "Our proposed CRRS approach consists of two learning stages: pre-training and counterfactual learning. In the pre-training stage, we use real matching labels to train a backbone recommender model. In the counterfactual learning stage, we finetune the recommender model with direction labels to better predict outcomes, taking into account the causal effects of various recommendation strategies. The full algorithm is described in Algorithm 1."}, {"title": "5.3.1 First Stage: Pre-training", "content": "We optimize the backbone model using the Bayesian Personalized Ranking (BPR) loss [25], which effectively captures the relative preferences between positive and negative samples. To describe the pre-training process, we take side A for illustration when it is symmetric for side B, we define the pre-training loss Lpretrain as follows:\n$L_{pretrain} = \\frac{1}{\\vert D \\vert} \\sum_{(a_i,b_j) \\in D} log \\Big( \\sigma \\big( \\hat{y} (a_i, b_j) \u2013 \\hat{y}(a_i, b_{j'}) \\big) \\Big),$"}, {"title": "5.3.2 Second Stage: Counterfactual Learning", "content": "At this stage, we fur- ther finetune the recommendation model using data under different treatment assignments. Similar to the first stage, the counterfactual learning loss also employs the BPR ranking loss. For each backbone model, the loss function is expressed as follows:\n$L_t = \\frac{1}{\\vert D_t \\vert} \\sum_{(a_i,b_j) \\in D_t} log \\Big( \\sigma \\big( \\hat{y}_t (a_i, b_j) \u2013 \\hat{y}_t (a_i, b_{j'}) \\big) \\Big),$\nwhere Dt represents the training data specific to each treatment. To ensure training stability, we combine the counterfactual learning loss with the pre-training loss. The treatment-specific data provides important guidance that instructs the models to refine their per- formance under specific conditions. In this way, the models can more effectively discern the causal effects between treatments and outcomes, thus better achieving better performance for RRS."}, {"title": "5.4 Discussion", "content": "We conduct a discussion here to clarify our stance on redundant recommendations. In practice, different scenarios may exhibit vary- ing stances toward redundant recommendations. For example, on LinkedIn\u00b9, mutual recommendations between matched candidates and recruiters are optional. In contrast, on Tinder\u00b2, two users can"}, {"title": "7 Conclusion", "content": "This paper revisited the study of reciprocal recommender systems by introducing new metrics, formulation, and method. Firstly, we proposed five metrics for evaluating RRS from three new aspects. Then we formulated reciprocal recommendation tasks from a causal perspective, considering the recommendations as bilateral inter- ventions. Furthermore, we proposed a causal reciprocal recommen- dation model using a potential outcome framework. To optimize overall performance, we further designed a reranking strategy to enhance the overall performance. Extensive experiments on two datasets indicate that the proposed approach can achieve superior performance on overall performance."}]}