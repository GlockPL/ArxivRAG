{"title": "Comparative Analysis of Community Detection Algorithms on the SNAP Social Circles Dataset", "authors": ["Yash Malode", "Amit Aylani", "Arvind Bhardwaj", "Deepak Hajoary"], "abstract": "In network research, Community Detection has always been a topic of significant interest in network science, with numerous papers and algorithms proposing to uncover the underlying structures within networks. In this paper, we conduct a comparative analysis of several prominent community detection algorithms applied to the SNAP Social Circles Dataset, derived from the Facebook Social Media network. The algorithms implemented include Louvain, Girvan-Newman, Spectral Clustering, K-Means Clustering, etc. We evaluate the performance of these algorithms based on various metrics such as modularity, normalized cut-ratio, silhouette score, compactness, and separability. Our findings reveal insights into the effectiveness of each algorithm in detecting various meaningful communities within the social network, shedding light on their strength and limitations. This research contributes to the understanding of community detection methods and provides valuable guidance for their application in analyzing real-world social networks.", "sections": [{"title": "1 Introduction", "content": "In recent years, the rise of social media platforms like Facebook, Twitter, Instagram, and LinkedIn has fundamentally reshaped the dynamics of human interaction and information exchange. These platforms have become essential tools for global connectivity, enabling individuals and entities to engage, share, and disseminate information on an unprecedented scale. The proliferation of social media platforms and the volume of data they create from user interactions have given rise to a growing body of study devoted to the analysis of the complex networks and relationships that underlie these platforms. Understanding the structural patterns and behaviors within social networks holds significant promise for applications ranging from targeted marketing to the identification of influential communities and individuals.\nThe task of community detection, which entails locating coherent user groups with shared interests or strong connections, is essential to the research of social media networks. Community detection algorithms play a critical role in uncovering these underlying structures, but the sheer diversity of available algorithms poses challenges in selecting the most suitable approach for a given dataset. With numerous algorithms employing distinct methodologies and assumptions, determining the optimal algorithm for a specific social network dataset remains a complex endeavor.\nIn our research, we conduct a comparative analysis of prominent community detection algorithms using the SNAP Social Circles dataset, a subset of the Facebook social media network. This dataset comprises of anonymized ego networks representing friendships among Facebook users. Our study aims to assess the performance of these algorithms across various metrics such as modularity, normalized cut ratio, silhouette score, compactness, and separability. By systematically evaluating the efficacy of different algorithms in identifying communities within the social network, our research aims to offer insights into their respective strengths, weaknesses, and applicability in real-world scenarios. Through this endeavor, we seek to advance the understanding of community detection methods and provide valuable guidance to researchers, practitioners, and organizations seeking to leverage social media data for diverse purposes, including marketing, social network analysis, and beyond."}, {"title": "2 Literature Review", "content": "Modern-day network research has made great strides towards understanding complex systems, and community structure has become an important tool for analyzing graphs that model real-world systems. The organizing of vertices into clusters with sparse connections between clusters and dense interior connections reflects the compartmentalization seen in many systems, such as biological organisms' tissues or organs. Detecting communities holds substantial importance across disciplines such as sociology, biology, and computer science, where networks serve as fundamental representations of systems.\nFortunato's paper \"Community Detection in Graphs\" [1] offers a thorough summary of the challenges involved in community detection, emphasizing the need to delineate key elements, explore methodologies, and address critical issues such as clustering significance and method evaluation. With graph clustering lacking precise definitions, the literature presents a plethora of algorithms and approaches, spanning graph partitioning, modularity-based methods, spectral algorithms, dynamic techniques, and more. Modularity-based methods like Newman-Girvan modularity and spectral algorithms have garnered attention for their efficiency, while dynamic algorithms and statistical inference methods offer promising avenues. Despite progress, challenges persist in algorithm evaluation, understanding clustering in real-world contexts, and exploring dynamic commu-"}, {"title": "3 Problem Statement", "content": "Community Detection in social networks is a fundamental task crucial for understanding network structure and behavior. As social networks continue to grow exponentially, the need for efficient and accurate community detection algorithms becomes increasingly critical. Our aim in this research paper is to conduct a comprehensive comparative analysis of community detection algorithms using the SNAP Social Circles Dataset. By evaluating various algorithms' performance metrics such as modularity, normalized cut ratio, and silhouette score, we seek to identify the most effective algorithms for detecting communities within this dataset. This comparative analysis aims to provide insights into the strengths and weaknesses of different algorithms, aiding researchers and practitioners in selecting appropriate methods for analyzing large-scale social network data. Through this research, we aim to contribute to advancing community detection techniques and facilitate deeper insights into the structure and dynamics of social networks."}, {"title": "4 Methodology", "content": null}, {"title": "4.1 Terminologies", "content": "Network: A network, also known as a graph, is a collection of nodes (vertices) and edges (links) that represent relationships or interactions between the nodes. Networks can be directed (edges have a specific direction) or undirected (edges have no specific direction), and they can vary in size and complexity, ranging from small-scale social networks to large-scale infrastructure networks.\nNode and Edges : In context of networks, a node (or vertex) represents an individual entity within the network. An edge (or link) in a network connects two nodes and represents a relationship or interaction between them.\nCommunity: A community (or cluster) refers to a subset of nodes that are densely connected but sparsely connected to nodes outside the subset. Communities represent cohesive groups of nodes that exhibit similar properties or behavior within the network. Community detection algorithms aim to identify these groups or clusters to uncover underlying structures or patterns within the network.\nDegree: The degree of a node in a graph represents the number of edges connected to that node. In directed graphs, nodes have both an in-degree (number of incoming edges) and an out-degree (number of outgoing edges).\nCentrality: Centrality measures the importance or influence of a node within a network. Different centrality measures exist, including degree centrality (based on the number of connections), betweenness centrality (based on the shortest paths that pass through the node), closeness centrality (based on the average distance to all other nodes), and eigenvector centrality (based on connections to high-scoring nodes)."}, {"title": "4.2 Metrics", "content": "Modularity: Modularity is a measure that quantifies the strength of the community structure in a network. It evaluates the density of connections within communities relative to connections between communities. Higher modularity values indicate a more pronounced community.\n$Q = \\frac{1}{2m} \\sum_{i,j} [A_{ij} - \\frac{k_i k_j}{2m}] \\delta(C_i, C_j)$  (1)\nNormalized Cut Ratio: The normalized cut ratio is a measure used to evaluate the quality of a partition of nodes into communities. It assesses the balance between intra-community connections and inter-community connections, aiming to minimize the number of edges cut between communities while maximizing the number od edges within communities. Lower normalized cut ratios indicate better community partitions with cohesive communities and minimal inter-community connections.\n$Normalized Cut (\\pi) =  \\sum_{i=1}^{k} \\frac{cut(C_i, C_i^c)}{vol(C_i)}$ (2)\nSilhouette Score: The silhouette score is a metric used to assess the quality of clustering in a dataset. It measures how similar an object is to its own cluster compared to other clusters. A silhouette score ranges from 1 to 1, where a score closer to 1 indicates that the object is well-matched to its own cluster and poorly matched to the neighboring cluster. A score of near 0 indicates overlapping clusters and a score of less than 0 indicates misclassification.\n$S = \\frac{1}{N} \\sum_{i=1}^{N} \\frac{b_i-a_i}{max(b_i,a_i)}$ (3)\nwhere\n$b_i = min_{k \\neq i}  \\frac{1}{|C_k|} \\sum_{j \\in C_k} d(i, j)$ (4)\n$a_i =  \\frac{1}{|C_i|-1} \\sum_{j \\in C_i, i \\neq j} d(i, j)$ (5)\nCompactness: Compactness refers to the degree of cohesion within a community. A highly compact community consists of nodes that are densely interconnected, with strong internal connections and minimal external connections. Lower values of compactness indicate tighter and more compact clusters, while higher values indicate greater dispersion or spread of data points within clusters.\n$Compactness = \\frac{1}{|C_i|} \\sum_{x \\in C_i} dist(x, \\mu_i)^2$ (6)\nCalinski-Harabasz Score: The Calinski-Harabasz score, also known as the variance ratio criterion, is a metric used to evaluate the quality of clustering in a dataset. It measures the ratio of between-cluster dispersion to within-cluster dispersion, aiming to maximize the separation between clusters while minimizing the dispersion within clusters. Higher Calinski-Harabasz scores indicate better-defined and more compact clusters.\n$CH = \\frac{B}{W}  \\frac{N-k}{k-1}$ (7)\nwhere\nB = between-cluster dispersion\nW = within-cluster dispersion\nN = Total data points\nk = Number of clusters\nSeparability It measures the degree of distinction between communities. It evaluates the extent to which communities can be differentiated from one another, with well-separated communities having minimal overlap and clear boundaries.\n$Separability = \\frac{1}{k(k-1)} \\sum_{i=1}^{k} \\sum_{j \\neq i} dist(\\mu_i, \\mu_j)$ (8)"}, {"title": "5 Implementation", "content": null}, {"title": "5.1 Dataset", "content": "SNAP Social Circles: Facebook :\nThis dataset consists of 'circles' (or 'friends lists') from the Facebook social media site. The data was collected from survey participants using the Facebook app. The information has been made anonymous by substituting new values for each user's Facebook internal ID. The dataset consists of more than 4000 nodes having more than 88,000 edges."}, {"title": "5.2 Workflow", "content": null}, {"title": "5.3 Data Analysis", "content": "A quick, initial analysis shows more than 95% of nodes have a degree lying between 0 and 200. While a few nodes possibly the major hub nodes have a much higher degree. (See Figure 2 and Figure 3)"}, {"title": "5.4 Initial Visualization", "content": "In our research, we employed the matplotlib library to conduct preliminary visualizations of the SNAP dataset. Matplotlib, a widely-used Python plotting library, offers a versatile toolkit for creating a variety of plots and charts. Leveraging its functionality, we were able to generate insightful visualizations that provided initial insights into the structure and characteristics of the dataset. By utilizing matplotlib for our visualization needs, we were able to lay the groundwork for further analysis and interpretation of the SNAP dataset, setting the stage for more in-depth explorations and insights in our research."}, {"title": "5.5 Algorithms", "content": "A) K-Means Clustering Algorithm :\n$arg \\min_S \\sum_{i=1}^{k} \\sum_{x \\in S_i} ||x - \\mu_i||^2 = arg \\min_S  \\sum_{i=1}^{k}  |S_i|VarS_i$ (9)\nwhere\n$\\mu = \\frac{1}{|S_i|} \\sum_{x \\in S_i} x$ (10)\nK-means Clustering aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean, serving as a prototype of the cluster. [7] [8]\nAfter experimenting with various values of K in the K-means clustering algorithm, it was determined that setting the number of clusters to 15 yielded the most optimal results. (See Figure 6)\nB) Louvain Method for Community Detection :\nThe Louvain method, developed by Vincent D. Blondel et al. [9], is a popular and efficient algorithm for community detection in complex networks. It is based on the optimization of modularity, a metric that measures the quality of a partition of a network into communities. The Louvain method employs a greedy optimization strategy, iteratively merging smaller communities into larger ones to maximize the overall modularity score. The scalability and capability of the Louvain method to manage massive networks with millions of nodes and edges is well-known due to its iterative approach, being able to identify communities of varying sizes efficiently. Its effectiveness and speed make it widely used in"}, {"title": "C) Spectral Clustering :", "content": "Spectral clustering is an effective method frequently used for community detection in network analysis. It leverages the spectral properties of the network's adjacency matrix or Laplacian matrix to partition the nodes into distinct com-"}, {"title": "D) Label Propagation Algorithm :", "content": "Label propagation is a simple yet effective algorithm for community detection in networks. It operates by iteratively updating the community assignments of nodes according to the labeling of their neighbors. Each node is initially given a unique label, and in each iteration, nodes adopt the most common label among their neighbors. This process continues until convergence, where the labels stabilize and each node becomes associated with a specific community. Label propagation is known for its scalability and computational efficiency, making it suitable for large-scale networks.\nHowever, it may struggle with certain network structures, such as networks with highly interconnected communities or networks with low-density regions. Despite its simplicity, label propagation has been widely used in various applications, including social network analysis, citation networks, and recommendation systems, where identifying communities is crucial for understanding network structure and dynamics [14] [15].\nThe Label Propagation Algorithm identified 44 communities within the network, with some communities containing fewer than 10-15 nodes. To enhance visualization clarity, only the top 15 communities with the highest membership have been depicted in the plots. (See Figure 9)"}, {"title": "E) Infomap Algorithm :", "content": "The Infomap algorithm is a widely used technique for detecting communities in networks, particularly in the realm of complex systems and network science. Developed by Martin Rosvall and Carl T. Bergstrom, Infomap is founded on the notion of optimizing a map of information flow within a network. It treats the network as a flow of random walkers, where nodes represent states and edges represent possible transitions between states. The algorithm aims to find the par-"}, {"title": "F) Leading Eigenvector Algorithm :", "content": "The leading eigenvector algorithm, frequently called the Newman-Girvan algorithm, is a prominent method for community detection in complex networks. Developed by Mark Newman and Michelle Girvan, this algorithm leverages the spectral properties of a network's adjacency matrix to identify communities based on the eigenvector corresponding to the largest eigenvalue.\nThe basic idea behind the algorithm is to iteratively partition the network by splitting it along the direction of the leading eigenvector of the adjacency matrix, which tends to capture the network's underlying community structure. By recursively applying this process, the algorithm identifies cohesive groups of nodes that are densely connected internally while sparsely connected to nodes in other communities. The leading eigenvector algorithm is known for its simplicity, efficiency, and effectiveness in detecting communities in various types of networks, including social networks, biological networks, and communication networks.\nDespite its straightforward approach, the algorithm has demonstrated remarkable performance and has become a foundational tool in the field of network analysis and community detection [17]. The Infomap Algorithm identified 18 communities within the network, with some communities containing fewer than 10 nodes. To enhance visualization clarity, only the top 15 communities with the highest membership have been depicted in the plots. (See Figure 11)"}, {"title": "6 Comparison of Algorithms", "content": null}, {"title": "6.1 Overview of all metrics", "content": "The table below shows the metric values of all algorithms applied in our implementation. As mentioned above, six community detection algorithms have been tested on five separate metrics. (See Figure 12)"}, {"title": "6.2 Graphical Visualization of comparisons", "content": "Here we compare all the algorithms with respect to each metric using radar charts. By plotting each algorithm as a separate axis and representing the metrics as spokes emanating from the center, we are able to present a comprehensive comparison of algorithm performance. The radar charts allow us to easily identify the strengths and weaknesses of each algorithm across different metrics, facilitating nuanced insights into their respective effectiveness in addressing specific objectives. Since the value of the Silhouette Score ranges from 1 to 1, it has been visualized using a bar plot. (See Figure 13 to Figure 18)"}, {"title": "7 Conclusion", "content": "In conclusion, our research has rigorously evaluated five prominent community detection algorithms across six key metrics: Modularity, Normalized Cut Ratio, Compactness, Calinski Harabasz Score, Separability, and Silhouette Score. Through this comprehensive analysis, we now posses valuable insights into the strengths and weaknesses of each algorithm.\nOur findings reveal that while each algorithm excels in certain aspects, there is no one-size-fits-all solution for community detection. Among the algorithms examined, the Louvain Algorithm and Label Propagation Algorithm emerge as particularly robust choices, demonstrating versatility across multiple metrics and applicability to a wide range of scenarios.\nHowever, it is important to acknowledge that community detection remains a complex and evolving field, and further research is warranted. While specific algorithms show promise in their respective metrics, the quest for optimal community detection solutions continues. Researchers and practitioners should consider the unique requirements of their datasets and objectives when selecting an appropriate algorithm for community detection tasks.\nIn essence, our study underscores the importance of thoughtful algorithm selection and ongoing exploration in community detection research. By leveraging the strengths of various algorithms and embracing a spirit of continuous improvement, we can advance our understanding of complex network structures and unlock new insights in diverse domains.\nOur code is available on github\nhttps://github.com/YashM246/Comparative_Analysis_of_Community_De-tection_Algorithm"}]}