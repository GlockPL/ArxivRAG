{"title": "Effective Intrusion Detection for UAV Communications using Autoencoder-based Feature Extraction and Machine Learning Approach", "authors": ["Tuan-Cuong Vuong", "Cong Chi Nguyen", "Van-Cuong Pham", "Thi-Thanh-Huyen Le", "Xuan-Nam Tran", "Thien Van Luong"], "abstract": "This paper proposes a novel intrusion detection method for unmanned aerial vehicles (UAV) in the presence of recent actual UAV intrusion dataset. In particular, in the first stage of our method, we design an autoencoder architecture for effectively extracting important features, which are then fed into various machine learning models in the second stage for detecting and classifying attack types. To the best of our knowledge, this is the first attempt to propose such the autoencoder-based machine learning intrusion detection method for UAVs using actual dataset, while most of existing works only consider either simulated datasets or datasets irrelevant to UAV communications. Our experiment results show that the proposed method outperforms the baselines such as feature selection schemes in both binary and multi-class classification tasks.", "sections": [{"title": "1. Introduction", "content": "Drones are aircraft or submarines that are controlled remotely without a human operator, and they are often called unmanned aerial vehicles (UAVs) [4]. With their low cost, flexibility, and ease of deployment, flying technologies have been becoming increasingly attractive for unmanned missions. These vehicles can perform tasks such as surveillance, crowd control, and wireless coverage [4]. In this context, developing an intrusion detection system (IDS) to ensure safety for UAVs from attacks is really necessary.\nTo the best of the author's knowledge, there have been no studies, which utilizes autoencoder to improve the efficiency of IDS for UAVs in the presence of actual UAV intrusion dataset. Note that the intrusion detection systems for UAVs can use either cyber data or physical data for detecting attacks. Most of existing works in UAV intrusion detection rely either on the simulated datasets or irrelevant datasets (which are not for UAVs), while the actual datasets have been overlooked. Recently, a combination of actual cyber and physical dataset [6] has been proved to be more effective in detecting cyber attacks of UAVs than using either of them. Therefore, our current work will focus on developing a robust intrusion detection method for UAVs in the presence of the real UAV intrusion dataset [6] rather than the simulated datasets or the irrelevant datasets."}, {"title": "2. Related Works", "content": null}, {"title": "2.1. Related Works in Intrusion Detection for UAVs", "content": "As mentioned early, most of research works in UAV intrusion detection utilize either the simulated datasets or the datasets irrelevant to UAVs. For example, in [5], an IDS for UAV that uses a hierarchical LSTM model to secure packet information was proposed, where the CICIDS-2017 dataset [11] was used for to demonstrate its ability of effectively detecting anomalies in UAV communications. Also relying on CICIDS-2017, in [1], a reinforcement Q-learning-based lightweight IDS was developed for detecting cyber attacks in UAVs. In addition, [8] combined a deep autoencoder and a convolutional neural network (CNN) for detecting malicious attacks to drones under software-defined network environments, using the virtualized InSDN dataset [2]. In the context of UAV-delivered systems, in [3], a variety of machine learning models were developed in combination with the blockchain technique for detecting attacks for reducing latency, using the CSE-CIC-IDS2018 dataset [11].\nAs such, all of the aforementioned research works are based on either simulated datasets such as InSDN [2] or irrelevant datasets such as CSE-CIC-IDS2018 and CICIDS-2017 [11]. Recently, a actual dataset for UAV intrusion detection was proposed in [6], which consists of both cyber and physical features. Note that the cyber features are related to communication protocols such as packet size, MAC/IP addresses, while physical features are about physical information of UAVs such as its speed and directions. Also in [6], various machine learning-based detection methods were considered, which are fed by a subset of important features selected based on the Shapley additive explanations (SHAP) analysis. However, such the feature selection schemes may not be optimal in extracting most important features. This motivates us to consider a more advanced method which relies on an autoencoder for better feature extraction, as will be presented in Section 3."}, {"title": "2.2. Autoencoder-based Intrusion Detection for UAVs", "content": "We now review the recent advances in the autoencoder-based IDS for UAVs. Unlike feature selection schemes [9], which simply choose a subset of available features based on some pre-defined criteria [9], the autoencoder-based feature extraction method aims to compress a high-"}, {"title": "3. Proposed Method", "content": "Our IDS, as shown in Figure 1, comprises three main components, namely, data pre-processing, feature extraction, and attack classification. The workflow begins with pre-processing the raw data X, such as handling null values and data normalization. Then, an autoencoder (AE) is introduced for feature reduction, which is capable of capturing intricate patterns in network traffic data, providing a more effective feature reduction than traditional methods. Finally, the AE-extracted data is fed to the attack classifier, which employs machine learning models to classify the network traffic into Normal or Abnormal, and further identify specific attack types."}, {"title": "3.1. Autoencoder-based Feature Extraction", "content": "The AE, depicted in Figure 1, which transforms feature vectors into abstract representations as shown in Figure 2, is an unsupervised neural network with input, hidden, and output layers. The encoding process maps the input vector $x \\in R^M$ (M is the number of input features) to a low-dimensional representation $h \\in R^N$ using the transformation: $h = g_{o_1}(x) = W_{1q}\\sigma(...\\sigma(W_{11}x + b_{11})...) + b_{1q}$, where $W_{1i}$ is the weight matrix and $b_{1i}$ is the bias vector for the the i-th encoding dense layer, for $i = 1, 2, ..., q$ and q is the number of dense layers of the encoder and decoder. The decoding process reconstructs the input vector x from h to y \u2208 RM using the transformation: $y = g_{o_2}(h) = W_{2q}\\sigma(...\\sigma(W_{21}h + b_{21})...) + b_{2q}$, where $W_{2i}$ is the weight matrix and $b_{2i}$ is the bias vector for the i-th dense layer of the decoder. The activation function \u03c3 used in both encoding and decoding layers is the hyperbolic tangent (tanh) function, defined as: $\u03c3(x) = tanh(x) = \\frac{e^x-e^{-x}}{e^x+e^{-x}}$. The detailed AE design in this study is shown in Table 1, where the encoder and decoder have q = 3 dense layers and the output layers of both encoder and decoder are linear layers.\nThe objective is to minimize the reconstruction error given by the mean squared error between x and y:\n$L(\\theta_1,\\theta_2) = \\frac{1}{T} \\sum_{j=1}^T ||x^{(j)} - y^{(j)}||^2, $ (1)\nwhere T is the number of training samples, $\u03b8_1,\u03b8_2$ represent the weight matrices and biases, i.e., ${W_{1i}, b_{1i}}_{i=1}^q$ and ${W_{2i}, b_{2i}}_{i=1}^q$ of the encoder and decoder, respectively."}, {"title": "3.2. Machine Learning-based Intrusion Detection", "content": "Machine learning-based IDS classifies network traffic and detects anomalies using algorithms such as Random"}, {"title": "4. Experimental Results and Discussion", "content": null}, {"title": "4.1. Overview of Dataset", "content": "We evaluate our method using the actual UAV intrusion dataset from [6], which contains around 42,000 records, where there are a Benign class and 4 attack classes, namely, De-Authentication (DoS), Replay, Evil Twin, and False Data Injection (FDI). Figure 3 shows the class distribution. Note that non-essential features such as frame.number, wlan.bssid, and timestamp_c were excluded. Thus, the number of remaining features are M = 54 (see Table 1)."}, {"title": "4.2. Implementation Setting", "content": "Evaluation Metrics: The evaluation metrics considered in this study include Precision, Recall, F1-score, and Accuracy, whose detailed definitions can be found in [9]."}, {"title": "Autoencoder Architecture", "content": "The autoencoder consists of an encoder and a decoder, each with three dense layers, with the encoding dimension N serving as the bottleneck and the input dimension M representing the number of features in the dataset. The model is compiled with the Adam optimizer and mean squared error loss given (1).\nEvaluation Procedure: We evaluate the proposed autoencoder-based method using various machine learning models, from which we select the best models for binary and multi-classification tasks for comparing with the baselines, namely, SVM-SHAP and FNN-SHAP feature selection methods [6]. For this, we consider N = 4,8 extracted features for performance evaluation of all schemes."}, {"title": "4.3. Performance Comparison and Discussion", "content": "Table 2 and Table 3 illustrate the performance of the proposed autoencoder method with different machine learning models, for both binary and multi-class classification tasks, in the presence of 4 and 8 extracted features. It is worth noting from these two table that increasing the number of extracted features helps improve the detection performance, particular for binary classification. For example, the F1-score and accuracy of the best binary classifier, i.e., DT, increases from 89.67% and 88.74% to 94.21% and 94.64%, respectively. However, in multi-class classification, MLP performs the best among classifiers, in terms of Precision, Recall, and F1-score metrics. Therefore, we will employ DT and MLP classifiers for comparing with existing feature selection methods [6] in the following.\nIn Table 4 and Table 5, we compare the performance between the proposed autoencoder-based method and existing feature selection methods, namely, SVM-SHAP and FNN-SHAP [6]. In all schemes, as mentioned in Table 2 and Table 3, DT and MLP classifiers are used for binary and multi-class classification, respectively. It is shown via Table 4 and Table 5 that our method outperforms the base-"}, {"title": "5. Conclusions", "content": "We proposed an effective autoencoder-based machine learning intrusion detection method for UAV communications for the first time, in the presence of the actual cyber dataset. Our method relies on an autoencoder neural network to extract important features from the original data, which are then fed to machine learning models for classifying attack types. We evaluated our proposed method under both binary and multi-class classification tasks, where experiment results showed that using autoencoder-based feature extraction, Detection Tree is the best binary classifier, while MLP is the best multi-class classifier. More importantly, the proposed method outperforms the existing feature selection schemes in terms of various performance metrics, particularly in multi-class classification tasks."}]}