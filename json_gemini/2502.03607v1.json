{"title": "Simultaneous Multi-Robot Motion Planning with Projected Diffusion Models", "authors": ["Jinhao Liang", "Jacob K. Christopher", "Sven Koenig", "Ferdinando Fioretto"], "abstract": "Recent advances in diffusion models hold significant potential in robotics, enabling the generation of diverse and smooth trajectories directly from raw representations of the environment. Despite this promise, applying diffusion models to motion planning remains challenging due to their difficulty in enforcing critical constraints, such as collision avoidance and kinematic feasibility. These limitations become even more pronounced in Multi-Robot Motion Planning (MRMP), where multiple robots must coordinate in shared spaces. To address this challenge, this work proposes Simultaneous MRMP Diffusion (SMD), a novel approach integrating constrained optimization into the diffusion sampling process to produce collision-free, kinematically feasible trajectories. Additionally, the paper introduces a comprehensive MRMP benchmark to evaluate trajectory planning algorithms across scenarios with varying robot densities, obstacle complexities, and motion constraints. Experimental results show SMD consistently outperforms classical and learning-based motion planners, achieving higher success rates and efficiency in complex multi-robot environments.", "sections": [{"title": "1. Introduction", "content": "Multi-Robot Motion Planning (MRMP) is a fundamental problem in robotics and autonomous systems, where the goal is to compute collision-free paths for multiple robots navigating shared environments (Luo et al., 2024; Shaoul et al., 2024). MRMP has widespread applications, from autonomous vehicles to warehouse logistics and search-and-rescue, where robots must operate efficiently in complex and highly constrained settings. Despite its importance, solving MRMP in real-world scenarios remains challenging due to the need to plan trajectories in continuous spaces and the unstructured nature of their inputs. These inputs often lack the structured representations needed by classical algorithms, which require implicit representation of both robot state spaces and obstacles in configuration spaces (LaValle, 2006; Ichter et al., 2018; Luo et al., 2024). Consequently, classical approaches struggle to operate effectively in these high-dimensional environments (Wang et al., 2021; Teng et al., 2023). Moreover, classical sampling-based planners often yield non-smooth paths due to their reliance on discrete connectivity between sampled configurations (Carvalho et al., 2024). Optimization-based methods suffer from similar issues, as they require computationally expensive trajectory refinements to enforce smoothness and feasibility (Ichnowski et al., 2020).\nTo address these challenges, learning-based methods offer a promising alternative by leveraging data-driven priors to handle unstructured environments. Recently, diffusion models, a class of generative models originally developed for image and signal processing tasks (Song & Ermon, 2019; Ho et al., 2020), have shown promise for single-robot motion planning (Carvalho et al., 2023; Christopher et al., 2024). However, extending diffusion models to MRMP presents new challenges: while these models effectively produce diverse trajectories, they fail to enforce hard constraints such as inter-robot collision avoidance and kinematic feasibility.\nExisting diffusion-based approaches attempt to address these constraints through gradient-based guidance or rejection sampling (Okumura et al., 2022b; Carvalho et al., 2023). However, gradient-based methods are prone to fail in such scenarios due to the non-convex nature of collision avoidance constraints, complicating trajectory correction. Rejection sampling methods, conversely, suffer from inefficiencies, discarding large portions of generated trajectories and struggling to generate feasible solutions in cluttered environments (Carvalho et al., 2024; Christopher et al., 2024).\nTo address these limitations, this paper introduces Simultaneous MRMP Diffusion (SMD), a novel approach that integrates constrained optimization directly into the diffusion process to generate feasible multi-robot trajectories. This work reformulates MRMP within a constrained diffusion framework, where diffusion-based trajectory generation is guided by an augmented Lagrangian method."}, {"title": "2. Related Work", "content": "Motion Planning. Motion planning computes a feasible path for a robot to move from its start to its goal state while avoiding obstacle collisions. Sampling-based algorithms, such as Probabilistic Roadmaps (Kavraki et al., 1996) and Rapidly-Exploring Random Trees (RRTs)(LaValle, 1998) have been widely studied for this task. These methods guarantee probabilistic completeness but face significant scalability issues in multi-robot motion planning (MRMP) as the configuration space of MRMP scales. Alternatively, MRMP can be formulated as a constrained optimization problem, employing methods such as gradient optimization techniques (Ratliff et al., 2009) and sequential convex programming (Augugliaro et al., 2012; Chen et al., 2015). However, these approaches encounter difficulties when taking into account changes in acceleration (Ichnowski et al., 2020) and are usually too conservative to find any solution, even if one exists (Chen et al., 2015). Other lines of research focus on a discretized version of this problem, known as multi-agent path finding. Specifically, multi-agent path finding reduces the configuration space by discretizing both time and space into steps and grids, respectively (Stern et al., 2019). This simplification has enabled the development of efficient search-based algorithms (Li et al., 2019; 2021; Okumura et al., 2022a). However, these assumptions create a disconnect from real-world applications (Shaoul et al., 2024). Unlike these approaches, this paper develops SMD, a diffusion-based MRMP framework that directly learns the distribution of collision-free paths and generates feasible solutions for multiple robots simultaneously in complex environments.\nMotion Planning with Generative Models. Recent advancements in generative models have opened new avenues for solving motion planning problems by learning complex, high-dimensional distributions of feasible paths. For example, Okumura et al. (2022b) employed a conditional variational autoencoder to predict cooperative timed roadmaps. Since Janner et al. (2022) introduced diffusion models into motion planning, subsequent research has largely focused on using gradient-based methods to guide the outputs of diffusion models toward feasible solutions (Carvalho et al., 2023; Luo et al., 2024; Saha et al., 2024; Ubukata et al., 2024; Carvalho et al., 2024). These works design tailored"}, {"title": "3. Preliminaries", "content": "Score-based Diffusion Models. Generative diffusion models (Sohl-Dickstein et al., 2015; Ho et al., 2020) produce high-fidelity complex data operating in two phases: A forward step, that gradually introduce noise to clean data samples, followed by a reverse denoising step, in which a deep neural network is trained to iteratively remove noise. This forward process defines a Markov chain {xt}=0, with initial sample xo ~ p(x0) and each transition q(xt | xt-1) realized by adding Gaussian noise according to a variance schedule at. In score-based diffusion (Song & Ermon, 2019; Song et al., 2020), the reverse process relies on a learned score function se(xt, t) = \u2207x_t log p(xt) that approximates the gradient of the log probability density of the noisy data. This score function is trained to minimize\nmin E\n\\frac{1}{T}\\sum_{t=1}^{T} \\mathbb{E}_{t \\sim [1,T],p(x_0),q(x_t|x_0)}\n(1 - \\lambda_t) [|| s_\\theta(x_t, t) - \\nabla_{x_t} log q(x_t|x_0)||^2],\nand is then used to iteratively \u201cdenoise\" random noise samples back into data-like samples. This is also known as the sampling phase.\nMulti-Robot Motion Planning. Multi-Robot Motion Planning (MRMP) involves computing collision-free trajectories for multiple robots navigating a shared environment from designated start positions to goal states. Consider a set of Na robots A = {a1,a2,...,aNa} operating in a continuous workspace. Each robot a\u017c is modeled as a sphere with radius ri > 0 and has a trajectory over H time steps denoted by \u03c0i = [\u03c0?, \u03c0?,..., \u03c0\u0397], where \u03c0? = (x?,y?) \u2208 R2 represents the robot's states at time h. For each robot, their start and target states are"}, {"title": "4. Simultaneous MRMP Diffusion", "content": "To address these challenges, this section introduces Simultaneous MRMP Diffusion (SMD), a diffusion-based method for MRMP. We start by introducing the concept of repeated projections, which constitutes a core building block of SMD. Then, the section discusses how to integrate the multi-robot motion planning constraints into the diffusion framework and, finally, how to enable effective sampling in complex, high-dimensional MRMP tasks.\nRepeated Projections. Incorporating constrained optimization techniques into generative models has been an important direction in ensuring feasibility in structured domains. Diffusion models inherently use a variant of Langevin Monte Carlo sampling, known as Stochastic Gradient Langevin Dynamics (SGLD), for their denoising sampling process. SGLD introduces an additional stochastic perturbation to gradient-based updates, resulting in a non-deterministic version of natural gradient descent. This allows it to from"}, {"title": "4.1. Collision-free Projection Mechanism", "content": "While the application of repeated projections provides a useful primitive to steer samples generated by diffusion models to satisfy relevant constraints, projecting onto the space of collision-free and kinematically viable trajectories presents a critical challenge due to the nonconvex nature of these constraints and the high dimensionality of the problem. These issues make the standard application of projected diffusion ineffective in solving even simple problem instances. To address this shortcoming, this section introduces the augmented Lagrangian method (Boyd et al., 2011) to vastly enhance the tractability of projections onto a multi-robot motion planning feasible set. The following first presents the projection mechanism for SMD, which aims to generate feasible trajectories for all robots in the problem. It then demonstrates how this process can be vastly accelerated by leveraging an augmented Lagrangian method.\nNote that the feasible region \u03a9 for the MRMP problem can be represented by distinguishing between convex and nonconvex constraints. This distinction will be useful later to provide an accelerated version of the projection operator introduced above.\nConvex Constraints. First, note that each robot's trajectory must begin and end at its designated start and goal locations, as enforced by Constraints (1c) and (1d). Additionally, robots must respect maximum velocity limits between consecutive time steps:\n(\u03c0h \u2013 \u03c0h-1)^2 \u2264 (vi^max \u2206t)^2, \u2200i\u2208 [Na], h\u2208 {2,...,H},\nwhere vimax represents the maximum allowable velocity for robot ai, and \u2206t is the time interval between steps. Together, these constraints define a convex set:\n\u03a9c = {\u03a0 \u2208 RNa\u00d7H\u00d72|Constr. (1c), (1d), and (4) hold}.\nNonconvex Constraints. To ensure collision-avoidance the following nonconvex constraints must also be imposed:\n(\u03c0h \u2013 \u03c0h)\u00b2 \u2265 (Ra)\u00b2 ,\u2200i, j, i \u2260 j \u2208 [Na], h\u2208 [H],\nwhere Ra denotes the minimum distance between robots at any time. The above states that any two robots should be far enough from each other at any point in the trajectory.\nSimilarly, the following constraints are imposed to avoid collisions between each robot and static obstacles:\n(\u03c0h \u2013 oj)\u00b2 \u2265 (R\u00b0)\u00b2 ,\u2200i, j \u2208 [Na], h \u2208 [H],\nwhere R\u00ba denotes the minimum distance at which an robot must be to avoid an obstacle. Together, these constraints define a nonconvex set:\n\u03a9\u03b7 = {\u03a0\u0395 RNa\u00d7H\u00d72|Constr. (5), (6), hold},\nand the complete feasible set is given by: \u03a9 = \u03a9c \u2229 \u03a9\u03b7."}, {"title": "4.2. Augmented Lagrangian for Efficient Projections", "content": "Although solving P\u03a9(x) can generate feasible trajectories, the nonconvex nature of the constraint set above results in high computational costs. To address this issue, we seek to relax the nonconvex constraints in MRMP to transform the original nonconvex quadratically constrained quadratic problem (QCQP) into a convex QCQP. To facilitate analysis, we rewrite the inequality constraints as equalities:\nHa : (Ra)\u00b2 \u2013 (\u03c0h \u2013 \u03c0)\u00b2 + d\u03b1i,j,h = 0, i, j, i \u2260 j, \u2200h,\nHo:(Ro)\u00b2 \u2013 (\u03c0h \u2013 oj)\u00b2 + d\u00bai,j,h = 0, i, j, \u2200h,\nwhere d\u03b1i,j,h and d\u00bai,j,h (with vector form d\u03b1 and do, respectively) are positive auxiliary variables. Specifically, Ha corresponds to the robot collision avoidance constraints and Ho to the obstacle collision avoidance constraints.\nThe Lagrangian dual function of the MRMP problem is thus defined as:\nL(\u03a0,\u03bd\u03b1,\u03bd\u03bf) = J(\u03a0) + \u03bd\u03b1\u03a4Ha(\u03a0) + \u03bd\u03bf\u03a4\u0397\u03bf(\u03a0),\nwhere L(II) represents the original MRMP objective function, v\u03b1 and voare Lagrangian multipliers, and Ha and Ho represent the equality constraints enforcing inter-robot collision avoidance and obstacle avoidance, respectively. While the standard Lagrangian formulation provides a means of incorporating constraints into the optimization process, it suffers from slow convergence due to the instability of dual variable updates, particularly in nonconvex settings. To mitigate these issues, we adopt the augmented Lagrangian method (Boyd et al., 2011; Kotary et al., 2022), which introduces additional penalty terms on the constraint residuals:\nL(\u03a0,\u03bd\u03b1,\u03bd\u03bf) = J(II)\n+ v\u03b1\u03a4Ha(\u03a0) + \u03bd\u03bf\u03a4\u0397\u03bf(\u03a0)\n+ \u03c1\u03b1||Ha (\u03a0)||2 + \u03c1\u03bf||Ho(\u03a0)||2,\nwhere \u03c1\u03b1 and \u03c1\u03bf are penalty parameters that control the strength of the constraint enforcement. These penalties improve numerical stability by discouraging constraint violations in early iterations, accelerating convergence.\nThe corresponding Lagrangian dual function can thus be defined by:\nd(\u03bd\u03b1, \u03bd\u03bf) = min\u03a0 L(\u03a0, \u03bd\u03b1, \u03bd\u03bf).\nand associated Lagrangian Dual Problem is defined as maximizing the dual function:\narg max(Va,Vo) d(\u03bd\u03b1, \u03bd\u03bf) s.t. \u03a0\u0395\u03a9.\nThrough weak duality, maximizing (9) provides a lower bound on the optimal objective value of the primal MRMP"}, {"title": "5. Experimental Settings", "content": "This section describes the evaluation methodology for Multi-Robot Motion Planning algorithms, detailing the benchmark maps, task assignment process, and performance metrics. To ensure a comprehensive evaluation, this paper also introduces a new benchmark instances set that captures a variety of real-world MRMP challenges (released as supplemental material).\nMaps. We evaluate MRMP algorithms on both randomly generated and structured, real-world-inspired maps.\n\u2022 Random maps include environments with increasing levels of complexity: empty maps test inter-robot collision"}, {"title": "6. Experiments", "content": "In this section, we evaluate the performance of various MRMP algorithms using our proposed benchmark. In most cases, regular projection methods cannot be applied to obtain solutions in MRMP due to the increased number of robots and obstacles. Thus, for our implementation of SMD, we use the projection with the augmented Lagrangian method for our experiments, except for the narrow-corridor map. The implementation details can be found in Appendix A. Additionally, we introduce supplementary details in the appendix B, including the results of classical algorithms and additional metrics."}, {"title": "6.1. Performance on Random Maps", "content": "We first showcase the methods' performance on random maps."}, {"title": "6.2. Performance on Practical Maps", "content": "Practical maps are designed to evaluate the ability of the methods to generate feasible trajectories for more challenging yet commonly occurring real-world scenarios.\nIn corridor maps, Figure 6(a) shows that our SMD achieves a perfect success rate, whereas all other methods fail to report even a single feasible trajectory. In restrictive environments like this, robots need to swap their positions in a specific area to achieve their goals, as their initial relative positions are opposite to their goals positions, and the narrow corridors do not allow direct position exchange. In this case, the gradient-based guidance used by MPD in the diffusion sampling process is prone to failure, as it cannot globally coordinate different robots to reach their respective goals. Although MMD uses multi-agent path-finding algorithms to account for goal-reasoning, it still relies on gradient-based guidance to generate trajectories. The penalty term employed by this method during gradient computation is thus insufficient to produce feasible solutions in such regions. In contrast, our reformulation of the diffusion sampling process as a constrained optimization problem confers the ability to ensure feasibility in the generated trajectories. As shown in Figure 6(b), the trajectories generated by our SMD allow the two robots to use the only slightly wider area to swap their positions.\nWe also evaluate on shelf maps and room maps, both of which contain narrow passages that must be traversed to reach the goals. Figure 7 shows that MPD and MMD achieve a similar success rate (60%) when there are only three robots in shelf maps, and MPD even provides shorter paths. However, it quickly fails to provide feasible solutions as the number of robots increases, even slightly. SMD again achieves a perfect success rate for three robots, and it only experiences a slight decline as the number of robots increases (90%). SMD also reports the shortest paths among all methods. Similarly, room maps report SMD achieving a perfect success rate for 3 and 6 robots and above 90% when scaling up to 9 robots. In contrast, MPD and MMD fail to produce feasible trajectories as the number of robots increases. In these maps, SMD advantage over the baselines is even more noticeable. These results shows the adaptability of the proposed algorithm to multiple environments and challenging scenarios (such as the narrow passages).\nFinally, Figure 8 provides two illustrative cases for shelf maps (a) and room maps (b) where SMD is the only method across those tested able to generate feasible solutions. A common characteristic of these two instances is that multiple robots need to pass through the same narrow passage, a scenario frequently encountered in real-world applications."}, {"title": "7. Discussion and Limitations", "content": "While SMD provides state-of-the-art results for MRMP tasks, forethought should be given as to the appropriate applications of this approach. First, generative models incur inference-time costs that should be considered when applying these models to motion planning. Diffusion models are most advantageous in scenarios where the complexity of the environment and the need for multimodal trajectory generation outweigh the benefits of faster but more rigid methods. For instance, such architectures are ideal for handling unstructured environments with dense obstacles, dynamic changes, and uncertain sensor inputs, where traditional methods struggle to adapt but may be unnecessary in structured or open spaces."}, {"title": "8. Conclusion", "content": "This work introduced Simultaneous MRMP Diffusion (SMD), a method that integrates constrained optimization with generative diffusion models to generate collision-free, kinematically feasible trajectories for multi-robot systems. By alternating diffusion sampling with projections onto the feasibility set, SMD eliminates the need for rejection sampling or post-processing. To handle complex nonconvex constraints, the paper incorporates an Augmented Lagrangian Method enabling scalability to challenging multi-robot scenarios where other methods fail. To support rigorous evaluation, a benchmark suite was also introduced, covering environments that reflect real-world motion planning challenges. Extensive experiments across varying obstacle densities and increasing robot counts demonstrated that SMD achieves significantly higher success rates and better objective values than competing methods. The results highlight its robustness in handling both static obstacles and dynamic interactions, making it a promising approach for real-world MRMP applications.\nFuture work will focus on improving scalability through decomposition techniques and constraint relaxations."}, {"title": "A. Implementation Details", "content": "Software: The software used for experiments is Rocky Linux release 8.9, Python 3.8, Cuda 11.8, and PyTorch 2.0.0.\nHardware: For each of our experiments, we used 1 AMD EPYC 7352 24-Core Processor and 1 NVIDIA RTX A6000 GPU."}, {"title": "A.1. MRMP Details", "content": "In our experiments, the size of each local map was 2 \u00d7 2 units. The robot radius was set to 0.05 units in all cases, except for the corridor map, where it was 0.1 units. The obstacle sizes in random maps varied between 0.05 and 0.1 units.\nTo adopt the EECBS algorithm, we discretized the map into a grid with a cell size of 0.1 units, which corresponds to the robot's diameter. If an obstacle was present within a grid cell, the cell was marked as an obstacle. The robot's starting position was determined by the grid cell in which its center was located."}, {"title": "A.2. Training Details", "content": "Our implementation builds upon the official code of Carvalho et al. (2023) and Shaoul et al. (2024), with modifications to accommodate our specific requirements. Since MMD can be trained with single-robot motion planning data, we first trained it accordingly. Then, by running MMD, we obtained the feasible solutions of MRMP it generated and used them as training data. shows the hyperparameters used for training the score-based diffusion models in our experiments."}, {"title": "A.3. Evaluation Details", "content": "We conducted experiments on six types of maps, each with 25 different parameters, such as obstacle size and positions. For all map types except corridor maps, we evaluate three different numbers of robots (3, 6, and 9). In corridor maps, only two robots are tested. For each number of robots, we generate 10 test cases, resulting in 4,000 test instances for each method."}, {"title": "B. Additional Experimental Results", "content": "Our manuscript primarily evaluates learning-based algorithms based on their performance in terms of success rate and path length (Figure 4, Figure 6(a), and Figure 7). While these metrics are sufficient to demonstrate SMD's ability to consistently"}]}