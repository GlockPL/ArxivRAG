{"title": "Formalization of Dialogue in the Decision Support System of Dr. Watson Type.", "authors": ["Saveli I Goldberg", "Vladimir Sluchak"], "abstract": "The article further develops and formalizes a theory of friendly dialogue in an AI System of Dr. Watson type, as proposed in our previous publication[4],[19]. The main principle of this type of AI is to guide the user toward a solution in a friendly manner, using questions based on the analysis of user input and data collected in the system.\nKeywords: AI system, decision support, human-machine interaction", "sections": [{"title": "1 Introduction", "content": "The use of Al systems [17] may run into a problem of distrust from specialists and loss of professional skills caused by the transfer of decision-making responsibility. Hence, the search for Friendly AI - a term coined by Eliezer Yudkowsky [18]. Dr.Watson-type of friendly AI was proposed in our previous publications [4],[19] and here we further develop its theory."}, {"title": "2 Principles of Dr. Watson-type systems (DWS).", "content": "When creating requirements for our friendly Decision Support System[19], we found a model of AI-\nhuman collaboration in the classic literary interaction between Mr. Holmes and Dr. Watson from the stories by Arthur Conan Doyle[9]. The principles of DWS reflect the qualities of Dr. Watson in dialogue\nwith Mr. Holmes:\n1. Dr. Watson is Mr. Holmes' chronicler. He documents Mr. Holmes' victories, failures, and reasoning.\n2. Dr. Watson asks questions every time he misses or doesn't understand the logic in Mr. Holmes's train\nof thought, thus stimulating thinking and promoting Holmes's creativity.\n3. Dr. Watson does not compete but rather collaborates with Mr. Holms. Therefore, Mr. Holmes doesn't\nperceive him as a threat.\n4. Dr. Watson covers Mr. Holmes in dangerous situations, but he does not take over the cases even under\nthose circumstances.\n5. Mr. Holmes trusts Dr. Watson and does not expect him to create problems.\n6. Collaboration between Mr. Holmes and Dr. Watson resembles a game in which both enthusiastically\nplay their roles.\nTranslating these features of Dr. Watson's style and adding some technical items such as visualization, a\nuser-friendly interface, and contextual directories we get the requirements for our system:\n1. The system should analyze and document the progress of the professional growth of the user. For\nexample, the variability in the accuracy of their decisions/predictions from patient to patient, how the\naccuracy of their decisions/predictions changes over time, and how their performance compares with the\naverage results in the specialty and/or a certain subgroup of specialists.\n2. The system should discover contradictions and omissions in the user's reasoning and help the user\novercome these logical inconsistencies"}, {"title": null, "content": "3. The system-user interaction process should start with setting the goals for the desired outcome and\nthe user's care plan. Subsequently, the system should influence decision-making by organizing and\npresenting the data or asking clarifying questions.\n4. The system should provide alarms in situations of \"obvious\" errors hence it should have a list of\nthose errors.\n5. The confidentiality of specialist-machine interaction must be ensured. The documentation of the user-\nsystem interaction and interim solutions should be unavailable to anyone except for the system.\n6. The system should provide context-based references and help. Game elements should be included in\nthe interaction between the user and the system.\n7. The system should have a convenient, efficient, and friendly user interface\nEvaluating and refining user solutions is fundamental for DWS. This implies the generation of internal\nDWS solutions at certain steps of the user-machine interaction. If a DWS-generated solution doesn't\nmatch the one by the user, DWS attempts to influence the user to reconsider. This is done by presenting\nquestions generated by DWS at each step of the decision-making process.\nEssentially DWS decision-making process is a dialogue that should lead to an optimal solution. It can be\nformalized as branching into two sub-processes running in parallel and exchanging information at certain\npoints of their trajectories. The exchange of information is organized in a way that facilitates fast\nconversion of the process. This technique has proven to be effective and is widely used in machine\ncomputations [14]. In our case, one sub-process runs inside a machine and another one in a human's\nmind. The sides are not equally open at this exchange, DWS does not show its internal solutions; to make\nthe information psychologically palatable the system presents it to the user implicitly \u2013 with questions\nthat should stimulate a fast-thinking (\u201cSystem1", "inequality\" of information exchange is reflected \u2013 in the box where DWS machine\ncomputes its internal solution hidden from the user.\"\n    },\n    {\n      \"title\": null,\n      \"content\": \"Some learning systems use a so-called Socratic method of leading the user to a predefined solution with\npredefined questions organized as a tree and sequentially presented to the user at each step of the\nsolution-finding process (for instance SASK [http://www.edutek.net/Kofi/sask/]). In DWS, the questions\nare generated \\\"on the fly\\\" in the user-machine dialog based on the input parameters and interim solutions\nprovided by the user.\"\n    },\n    {\n      \"title\": \"3 Formalization of user-DWS dialogue.\",\n      \"content\": \"In the DWS process schema (Fig. 1) the user-DWS dialogue is localized in the 5 central boxes.\nHere are all the scenarios of that dialogue.\n1. DWS shows the inconsistency between the user's decision and the parameters based on which he made\nthe decision\n2. DWS indicates the presence of additional information that may change the user's decision.\n3. DWS shows that the input data could be distorted, and this could lead to a false decision.\n4. DWS finds the precedents and asks the user to analyze them, the user can add precedents to the history.\nWe think this set of scenarios is complete, that is- it covers all cases of the decision-making process. This\ncompleteness is asserted by the last scenario, which is supposed to catch additional problems and\nprecedents not stored and not discoverable by the machine algorithm but coming directly from the user.\"\n    },\n    {\n      \"title\": null,\n      \"content\": \"Consider a formal description of the DWS-user dialogue:\nLet $x = [x_1, x_2, ..., x_n]$ be a vector of n parameters (symptoms, components) where $x_i$ is a name-value pair\nand the value can be continuous (Numerical), categorical (Boolean), or descriptive (any type allowing to\nextract conditions and define mathematical operations on data).\nLet X be the space of all such vectors, then n will be the dimension of it: $dim(X) = n$.\nWe assume that the values of vector components can always be presented as intervals or sets, so the methods\nof comparison will be well-defined. For instance, for the vectors $x^1$ and $x^2$, the conditions of equality of\ntheir components $x^1_i$ and $x^2_j$ with values given as numerical intervals will be defined as $name(x^1_i) = name$\n$(x^2_j)$ with intersecting intervals of values.\nLet vector $x^2$ be defined as a sub-vector of $x^1$ if each component of $x^2$ is found in $x^1$.\nAs the DWS machine is to operate on the vectors in X, the latter should be a metric space, that is the\ndistance $\\delta (x^1, x^2)$ between any pair of vectors in X should be defined. We assume that the distance $\\delta (x^1$,\n$x^2)$ and the notion of proximity are defined specifically for each particular subject domain (see [Goldberg,\nPinsky, 2022] and an example of the SAGE system further below).\nLet $\\Omega(x_i)$ be a set of values in the proximity of $x_i$ and $\\Omega(x) \\subset X$ - be the proximity of the vector x. For\nexample, $\\Omega(37.7\u00b0C)$ is ($37.4\u00b0C$ \u2013 $38.0\u00b0C$), and $\\Omega$(Small Headache) is (Small Headache, Moderate\nHeadache).\nLet A\u2282 X be a subset of X.\nAny vector y which is a sub-vector of some x \u2208 A - will be called a syndrome of A.\nA vector y will be called an antisyndrome of A if for every x \u2208 A y is not a sub-vector of x.\nMinimal antisyndrome of A is such an antisyndrome, that any sub-vector of it will be a syndrome of A.\nFor example, of all emergency calls, 35% were for men and 10% for pregnant patients. Combination\n{pregnant patient: True; gender: Male} will be a minimal antisyndrome for the set of ambulance patients.\nA combination of \\\"General aches\\\" and \\\"Headache": "s minimal antisyndrome for \u201cAirborne Allergy\"\nThe minimal antisyndrome (Goldberg, S., 1984) of A plus any other parameter is an antisyndrome of A.\nIf we exclude any parameter (symptom) from the minimal antisyndrome, the combination of remaining\nparameters becomes a syndrome for A. A complete set of minimal antisyndromes of A defines the\nboundary of this subset. (Minimal antisyndromes of A can be obtained from the experts or the training\nsample A* \u2282 A.)\nLet {a} be the set of possible solutions (set of diagnosis, for instance).\nLet $f(x)$: X -> {a} be a decision-making function (for example, specific diagnostic rules that each\nphysician uses for illness definition).\nLet's name A($a_i$,f) \u2282 X a class of $a_j$ if $f(x)=a_i$.\nEach solution a allows a typical representation (typical vector) s(a)=[$s_1 (\\alpha)$, $s_2 (\\alpha)$, ...., $s_n (\\alpha)$] \u2208 X, which\nis either the center of gravity of the training sample of A(a,f) or a set of median values of parameters in\nsuch a sample. A typical vector for solution a can be provided by the experts, whose participation in the\nprocess is usually expected. For example, the typical picture of \u201cFlu\u201d is : {temperature > 38\u00b0 C, strong\nheadache, severe general aches, weakness, extreme exhaustion, no cough, no stuffy running nose, and no\nsneezing}."}, {"title": null, "content": "The interaction between the DWS machine and the user is a dialogue, where DWS poses questions, and\nthe user responds. Before the start of this dialogue, the user provides his solution $a_u$ and a vector of\nparameters v = [$V_1,..V_m$] (m<=n, where n is a number of all input parameters) based on which he came to\nhis solution ($f_{user} (v)= a_u$).\nDWS machine has $f_{DWS} (x)$ for any x \u2208 X, a set of minimal antisyndromes of A($a_i$, $f_{DWS}$) for expected\nsolutions {$a_i$} and a set of typical representations of parameters as s($a_i$) = [$s_1 (a_i), s_2 (a_i), ...., s_n (a_i)$] for\nany $a_i$\u2208 {$a_i$}.\nBasic scenarios for a dialogue between the DWS machine and the user are described in detail below.\nDuring the dialogue, the user can change both input data and decisions. Scenarios may change\naccordingly. The user solution will be denoted $a_u$, DWS machine solution will be denoted $a_w$.\nAlgorithms for local explanation [13] play an important role in our process, especially those that assign\nweights of importance to the parameters for a given solution. For example, this could be LIME Local\nInterpretable Model-Agnostic Explanations [15] or SHAP Shapley Additive Explanations [12]. Below we\nconsider the formal description of all scenarios along with an example of a case.\nDWS shows the inconsistency between the user's decision and the parameters based on which he\nmade the decision\nIt is assumed that the dialogue begins with the announcement of the user decision ($a_u$) and vector of\nm<=n parameters (v), based on which this decision was made. For example, the user describes his\ncondition as slight general aches, sneezing, small headache, stuffy running nose, No Cough, Airborne\nAllergy in Anamneses, and his diagnosis is a relapse of Airborne Allergy. DWS machine checks if this\nset of options matches the selected solution. For this, the presence of antisyndromes of A ($a_u$, $f_{user}$) is\nchecked. If antisyndromes are found, they are presented to the user for analysis (Fig 2). In our case\n\"slight General aches\u201d and \u201csmall Headache\u201d is a minimal antisyndrome for \u201cAirborne Allergy\", so the\nuser changes his diagnosis to Cold and DWS does not find the inconsistency."}, {"title": "DWS indicates the presence of additional information that may change the user's decision.", "content": "Let the information in the sub-vector v from m parameters (m<n) be consistent with the user solution, in\nour case in the previous step the user changed the diagnosis from \u201cAirborne Allergy\u201d to \u201cCold\".\nHowever, there may be additional information that could make the user change his mind. DWS machine\ntries to check it and if such information exists then DWS asks the user to check it. DWS machine finds all\nvectors $V_{SD}$ = [v, $S_{m+1} (a_D)$,..., $S_n (a_D)$] for all $a_D$\u2208 {$a_i$}, where s ($a_{D,}$) is a typical representation for $a_D$. If\na case is found where $f_{DWS}$ ($V_{SD}$) = $a_D$ and $a_D\u2260 a_u$, a local explanation of the $V_{SD}$ decision is sought (Fig 3).\nHigh fever and extreme exhaustion should change the diagnosis from cold to flu. Based on local\nexplanations, looking at the weights of parameters DWS machine finds the most important of those not\nprovided by the user (not included in vector v) and poses a question about the importance of this\nparameter.\nIn our example, the first question is about fever. After responding to this question, the user can insist on\nhis decision or change it. As 37.8 is not a high fever the user saves the diagnosis \u201cCold\u201d. The next\nquestion from DWS will be about Extreme exhaustion. Let the answer is \u201cNo\u201d, then the diagnosis of\nCold remains."}, {"title": "DWS shows that the input data could be distorted, and this could lead to a false decision.", "content": "Let the data be consistent with the user's decision and there are no additional parameters that should\ninfluence this decision. However, information can be distorted by measurement errors. The system checks\nwhether such distortions can affect the user's decision, and if such a danger exists, the system asks to\nclarify the dangerous parameters. Fever could be 38.0, Headache could be Moderate, exhaustion could be\nsmall, and, in this situation, our case could be \"Flu\"\nAt this step, the DWS machine randomly selects vectors from the proximity $\\Omega$(v) of vector v ($f_{user} (v)=$\n$a_u$). Let there are vectors x \u2208 X, where $f_{DWS}(x)= a_D$ and the solution $a_D \u2260 a_u$and $x \u2208 \\Omega(v)$. Let's select\n$X_{DWS}$ which has a minimum value of the metric $\\delta(x,v)$. A local explanation for $x_{DWS}$ is sought by the DWS\nmachine (Fig. 4). The question on the meaning of the most sensitive parameters in this explanation is\nasked. Such a question may concern the refinement of parameters already present in v or not yet involved\nin the description of the case. DWS asks to check the temperature again. The user gets 38.0 and begins to\nthink about \"Flu\"."}, {"title": "DWS finds precedents and asks the user to analyze them.", "content": "The precedents are collected in the DWS: for each case, the user is asked to explain the errors and predict\nthe consequences of their decision. As for the prediction, if the reality differs, the user has to explain the\ndiscrepancy. The need to predict the results and explain the failures has a positive effect on the quality of\nsolutions in the long term. The explanations are collected and analyzed by the DWS, and the analysis is\noffered to the user in the following forms\n1. Summary table of error descriptions.\n2. Warnings about possible errors. The system selects the most probable error in each situation and shows\nit with an explanation of the probable cause. Since the current situation will not be identical to the one\nfound in the history, the user is presented with a table of explanations for his error, sorted by the\nproximity of the situations. The computation of proximity [7] is based on\nMeasurement errors\nEvaluation of parameters according to the Norm-Pathology Scale\n-Difference in the informational weight of the parameters\nUsers can filter and sort the entries in the Error Explanation Table according to their preferences.\nThe result of it in our case could be \u201cCheck the fever every 2 hours in the first 2 days\".\nSometimes the requirement to describe the causes of errors may seem not safe to the user, so DWS must\nensure that such information does not become available to third parties. Also, the system can allow the"}, {"title": null, "content": "user to edit the description of the cause of the error, and only the latest update is stored in the history. The\nloss of information in this case is offset by the effect of a double analysis of one's mistakes."}]}