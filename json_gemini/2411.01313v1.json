{"title": "False Data Injection Attack Detection in Edge-based Smart Metering Networks with Federated Learning", "authors": ["Md Raihan Uddin", "Ratun Rahman", "Dinh C. Nguyen"], "abstract": "Smart metering networks are increasingly susceptible to cyber threats, where false data injection (FDI) appears as a critical attack. Data-driven-based machine learning (ML) methods have shown immense benefits in detecting FDI attacks via data learning and prediction abilities. Literature works have mostly focused on centralized learning and deploying FDI attack detection models at the control center, which requires data collection from local utilities like meters and transformers. However, this data sharing may raise privacy concerns due to the potential disclosure of household information like energy usage patterns. This paper proposes a new privacy-preserved FDI attack detection by developing an efficient federated learning (FL) framework in the smart meter network with edge computing. Distributed edge servers located at the network edge run an ML-based FDI attack detection model and share the trained model with the grid operator, aiming to build a strong FDI attack detection model without data sharing. Simulation results demonstrate the efficiency of our proposed FL method over the conventional method without collaboration.", "sections": [{"title": "I. INTRODUCTION", "content": "The smart grid has an advanced power system based on enabling reliability, efficiency, and accuracy in the power supply system. Advanced metering infrastructure (AMI) is the most important part of achieving this goal, where smart meters (SMs) are used to measure energy consumption to facilitate data analytics [1], [2]. Due to the open and distributed nature of AMI, SMs are vulnerable to cyber threats including false data injection (FDI) attacks that aim to modify state estimation and energy consumption recordings at SMs [3]. This results in financial loss and poses energy recordings under threats. For example, personal information can be compromised into the meter measurement by cybercriminals for data theft and financial profit. Hence, developing an efficient solution to detect FDI attacks is of paramount importance for safe smart metering networks."}, {"title": "A. Related Works", "content": "Recently, machine learning (ML) has been employed as an efficient technique to learn and detect FDI attacks in smart grids due to its data learning and prediction abilities. For example, neural networks were employed in [1] for estimating anomalies in meter measurements and detecting falsified system states. Another work in [4] employed deep neural networks (DNNs) to extract features of FDI attackers in AC power transmission system simulations. Further, the work in [5] studied FDI attack with DL for transmission-line protective relays and substation automation systems. These works typically use centralized learning, deploying FDI attack detection models at the control center, which requires data collection from local utilities like meters and transformers. However, end customers may be unwilling to share their meter measurements for attack analysis due to privacy concerns.\nMoreover, FL has been investigated for collaborative FDI attack detection in smart grids. The authors in [3] worked in the smart grid to detect the attack detection in the solar farms. Another author in [6] mentioned the power grid state estimation on unknown system parameters and small decentralized data sets with strategic data owners. The author in [2] illustrates the view on detecting the attacks on the power system focused on privacy-preserving using federated Learning. The FDI attack detection to tackle data privacy enhancing cross-silo federated learning was proposed in [7].\nDespite these research efforts, the application of FL in FDI attack detection in edge-based smart metering networks has not been investigated."}, {"title": "B. Motivation and Key Contributions", "content": "Motivated by the aforementioned limitations, we present a new FDI attack detection method using an FL framework for edge-based smart metering networks. Edge computing that offers low-latency services is useful for timely running FDI attack detection models for SMs. The use of SMs has become more reliable nowadays, but there are security threats to the use of SMs. Conversely, Some basic steps have been taken to secure the network between the clients, meter, and authority. So our concern is to secure the bond between the clients, SMs, and the authority. We found some slide works, like as this research shows the existing methods for identifying FDI attacks only identify the presence of the condition; [8] they provide crucial information regarding the precise injection locations. Motivated by the latest developments in deep learning, they put forth a deep-learning-based locational detection architecture (DLLD) to accurately identify the precise locations of FDIA instantaneously. A typical bad data detector (BDD) and a convolutional neural network (CNN) are combined in the DLLD architecture. Low-quality data is eliminated using the BDD. In order to identify the co-occurrence dependency and inconsistency in the power flow data caused by prospective attacks, the following CNN is used as a multiple-label classifier. FL uses a central server to compile all client updates. This can cause snags and a decline in performance, particularly when there are a lot of clients. Furthermore, communication delays may arise since each iteration requires all clients to communicate with the central server, particularly for distant clients or crowded networks. In a nutshell, the main contributions of this paper are summarized as follows.\n1) We propose a privacy-preserved FDI attack detection method over edge-based smart metering networks, by developing an efficient FL framework across distributed edge computing servers. Our method allows for training a global FDI attack detection model at the grid operator's server with good generalization.\n2) We explicitly analyze our method design and algorithm development. We focus on developing a robust FDI attack detection model without sharing data by having distributed ESs, located closer to customers, running an ML-based FDI attack detection model, and sharing the trained model with the grid operator. Hence, our method can achieve FDI attack detection without data sharing for data privacy preservation.\n3) We validate our proposed framework using the IEEE 14-bus system, showing that the DLLD achieves an average detection accuracy of 88%. This demonstrates that federated learning is highly accurate, scalable, and robust."}, {"title": "C. Paper Organization", "content": "The remainder of this paper is organized as follows. We present our power system state estimation architecture in Section II. We present our federated learning (FL) framework in the SMs network with edge computing in Section III. In Section IV, we present the simulation and evaluation of our proposed method compared with the existing methods. Section VI concludes the paper."}, {"title": "II. SYSTEM MODEL", "content": "In this paper, we consider a FDI attack detection model shown in Fig. 1, consisting of a grid operator's server and a netnetwork of edge servers (ESs). Each ES manages a group of SMs in its coverage area and implements FDI attack detection on behalf of its SMs. The set of ESs is represented by $M = {1,2,...,M}$. We consider that the FL model training takes place over a number of global rounds, denoted by $K = {1, 2, . . ., K}$. In this regard, in each global round k, an ES m runs an ML-based FDI attack detection for its group of SMs and shares its trained model update to the grid operator for model aggregation. The ultimate goal is to build a global FDI attack detection model with good generalization during the training stage, aiming to effectively detect FDI attacks in the inference stage."}, {"title": "A. Power System State Estimation", "content": "In FDI attacks, the attacker tries to modify the state es- timation recorded by SMs. The process of state estimation involves determining a power system's operating condition from the available meter measurements. The state estimation is a crucial analytical technique for accurate power system monitoring. It offers feedback on the network's operating state using measurement data and network information [9]. The state estimation of Alternating Current (AC) is widely used in smart grids. This method makes use of a nonlinear relationship between the system states and the measurements. The AC state estimation model is expressed as follows [9]:\n$y = f(v) + d,$\t\t\t\t\t\t\t\t\t\t\t\t\t(1)\nwhere $y \\{Y_1, Y_2,..., Y_I\\}$ represents the measurement vector, which includes the power injection at each bus and the power flow across each branch; $v = \\{1, 2,...,V_J\\}$ denotes the state vector, indicating the voltage amplitude and phase angle at each bus; $f(v)$ is the measurement function mapping the state vector; $d = \\{d_1,d_2, ..., d_I\\}$ symbolizes the measurement noise; I and J are the number of measurement variables and state variables, respectively. Various methods for determining the system state vectors, v, have been suggested in [10]. The most widely employed method in power systems is the Weighted Least Squares (WLS). This approach seeks to find the estimate that minimizes the objective function, which is the sum of the squares of the discrepancies between the actual measurement vector y and the estimated state vector v. The objective of our analysis is to estimate the state vector v"}, {"title": "B. False Data Intrusion Attack (FDIA) Model", "content": "The technique for creating covert (unobservable) FDI attacks on SM networks is described in this section. The creation of FDIA, based on the chosen system state estimation, is effective and does not result in appreciable computing costs, as stated in [11]. Because the used state estimator has a roughly linear connection, the state estimator can be expressed linearly as follows:\n$\\tilde{y} = H\\tilde{v} + e,$\t\t\t\t\t\t\t\t\t\t\t\t\t(5)\nwhere $\\tilde{y}$ and $\\tilde{v}$ denote the measurement and the closed-form estimated vector, respectively. With the introduction of the attack vector a, the residual of the compromised measurements $r_a$ can be expressed as:\n$r_a = \\tilde{y}_a - H\\tilde{v} = \\tilde{y} + a \u2212 H \\big( \\tilde{v} + (H^TWH)^{-1}H^TWa \\big),$\t\t\t\t\t(6)"}, {"title": "C. FL-based FDI Attack Detection Model", "content": "We consider that each ES m runs an ML model to train a local FDI attack detection model. Specifically, each ML model (e.g., a neural network) associated with data point i has a loss function $f(w,i) \\in R$, where $w_m \\in R^d$ represents the ML model (e.g., weights of neurons) of ES m at round k. Denote $D_m^k$ as the dataset size at ES m at global round k, the loss function at ES m, $F_m^{(k)}(w)$, is calculated as follows:\n$F_m^{(k)}(w) = \\frac{1}{D_m^{(k)}} \\sum_{i\\in D_m^{(k)}} f(w,i),$\t\t\t\t\t\t\t\t\t\t\t\t\t(9)\nwhere, $f (w, i)$ represents the loss associated with the i-th data point, and w denotes the parameter vector of the ML model. This formula calculates the average loss over all data points within $D_m^k$, reflecting the performance of the model at ES m based on the data it received from smart meters during round k.\nWe now formalize the ML model training procedure at ESs and the grid operator's server. Each model training round k starts with the broadcast of a global model, $w^{(k)}$, from one of the ESs. During round k, each ES m performs $e_m^{(k)}$ iterations of SGD over its local dataset, which may vary from one ES to another. The evolution of its local model parameters is given by:\n$w_m^{(k,e)} = w_m^{(k,e-1)} - \\eta_k \\sum_{d \\in B_{m,k,e}} \\nabla f(w_m^{(k,e-1)}, d),$\t\t\t\t\t\t\t\t\t\t\t\t\t(10)\nwhere, $w_m^{(k,e)}$ denotes the parameters of the model at ES m, at iteration e of round k. $\u03b7_k$ is the learning rate in round k. $B_{m,k,e}$ is the size of the mini-batch used during the SGD iterations at ES m in round k. $B_{m,k,e}$ is the mini-batch of data points used in iteration e at ES m during round k. $\\nabla f(w_m^{(k,e-1)}, d)$ is the gradient of the loss function f with respect to the model parameters, evaluated at the data point d and the parameter set $w_m^{(k,e-1)}$."}, {"title": "III. SIMULATIONS AND EVALUATION", "content": "The training and testing of the measurement data are shown in this section. We will then go into the model algorithms and execution specifics. Additionally examined are robustness of presence and accuracy detection. For this topic, we will employ multilabel classification with Federated Learning (FL) in order to predict several labels against features of power measurements."}, {"title": "A. Dataset Description", "content": "The efficacy of the detection techniques created for geo- graphically targeted FDI attacks is covered in this section. The experimental framework is the IEEE 14-bus system. There are 19 power measuring locations in this system, which are situated on buses or on connecting lines and are where the measurements are significantly correlated. Line meters are arranged according to index, while injection meters have labels that are arranged in ascending order according to bus indices. Details regarding the dataset and the IEEE 14-bus system are provided in [8]. Artificial load adjustments are applied to all buses to supplement the real-world dataset and create a baseline of unaffected data. Compromise data sets are subsequently generated as well. Since unstructured data anomalies are usually easily detected by traditional bad data detectors, a well-structured FDIA was designed for this study to test detection skills."}, {"title": "B. Implementation Details", "content": "The system used for all simulations has an RTX3080 GPU, 64.0 GB RAM, and a 12th Gen Intel (R) Core(TM) i9- 12900K 3.20 GHz processor. MATLAB'S MATPOWER is used for data production, while Python, via PyTorch, is used for the federated learning component. Using Keras [13], the multilayer perceptron network (MLP), CNN, and FL are built for increased computational speed.\nRegarding the model architecture, the learning rate is set dynamically by the ReduceLROnPlateau callback, and the number of layers includes two hidden layers with 128 and 64 neurons, respectively. Each hidden layer uses ReLU activation, L2 regularization with a factor of 0.01, batch normalization, and a dropout rate of 0.4. The output layer uses a sigmoid activation function. The optimizer selected is Adam, and the binary cross-entropy is chosen as the loss function. As for federated learning, the dataset is split among 5 clients, each training locally for 5 epochs per global round. The total number of global communication rounds is set at 100. During training, the learning rate is adjusted using the ReduceLROnPlateau callback, which reduces the learning rate by a factor of 0.1 if the validation loss does not improve for 10 consecutive epochs. StandardScaler is used to normalize the data before training."}, {"title": "C. Detection Performance", "content": "1) Performance Evaluation Matrix: As performance evalu- ation criteria, we use precision and recall in our experiments. The mathematical definitions of precision and recall are as follows:\n$Precision = \\frac{True Positive Rate}{True Positive Rate + False Positive Rate},$\t\t\t\t\t\t\t\t\t\t\t\t\t(13)\nand\n$Recall = \\frac{True Positive Rate}{True Positive Rate + False Negative Rate}$\t\t\t\t\t\t\t\t\t\t\t\t\t(14)\nThe probability that a compromised location is correctly labeled as compromised, an uncompromised location is incor- rectly labeled as compromised, and an uncompromised loca- tion is correctly labeled as uncompromised are the definitions of the terms true positive rate (TPR), false positive rate (FPR), and false negative rate (FNR) in this article. [8], [14]\nWe also compute the F1-score in an effort to achieve a balance between recall and precision. The harmonic mean of recall and precision, or the F1-score, can be written as follows:\n$F1-Score = \\frac{2 \\times Precision \\times Recall}{Precision + Recall}$\t\t\t\t\t\t\t\t\t\t\t\t\t(15)"}, {"title": "IV. CONCLUSIONS", "content": "This paper introduces a novel FL framework to detect FDI attacks by developing an efficient federated learning (FL) framework in the SMs network with edge computing. Major concerns about user privacy and data security in smart grids are addressed by this, as it decentralizes the detection process and greatly improves data privacy while reducing the need for extensive data sharing across the network. We demonstrate significant improvements in detection capabilities by precisely identifying attack locations using a multilabel CNN-based FL framework, which is a novel approach. Our methodology is effective based on simulation results using the IEEE 14-bus system, where our FL framework achieved an impressive 88% average detection accuracy, which is 20% more accurate than existing methods. This performance is much better than conventional detection techniques, highlighting how federated learning can revolutionize cybersecurity protocols in smart grids. Future work could involve expanding the application of this model to larger grid systems and integrating additional security protocols to fortify defenses against an increasingly sophisticated landscape of cyber threats."}]}