{"title": "The Challenges of Effective AGM Belief Contraction", "authors": ["Dominik Klumpp", "Jandson S. Ribeiro"], "abstract": "Despite the significant interest in extending the AGM paradigm of belief change beyond finitary logics, the computational aspects of AGM have remained almost untouched. We investigate the computability of AGM contraction on non-finitary logics, and show an intriguing negative result: there are infinitely many uncomputable AGM contraction functions in such logics. Drastically, even if we restrict the theories used to represent epistemic states, in all non-trivial cases, the uncomputability remains. On the positive side, we identify an infinite class of computable AGM contraction functions on Linear Temporal Logic (LTL). We use B\u00fcchi automata to construct such functions as well as to represent and reason about LTL knowledge.", "sections": [{"title": "1 Introduction", "content": "The field of belief change (Alchourr\u00f3n, G\u00e4rdenfors, and Makinson, 1985; G\u00e4rdenfors, 1988; Hansson, 1999) investigates how to keep a corpus of beliefs consistent as it evolves. The field is mainly founded on the AGM paradigm (Alchourr\u00f3n, G\u00e4rdenfors, and Makinson, 1985), named after its authors' initials, which distinguishes, among others, two main kinds of changes: belief revision, which consists in incorporating an incoming piece of information with the proviso that the updated corpus of beliefs is consistent; and belief contraction whose purpose is to retract an obsolete piece of information. In either case, the incurred changes should be minimized so that most of the original beliefs are preserved, known as principle of minimal change. Contraction is central as it can be used to define other forms of belief change. For example, belief revision can be defined in terms of contraction: first, remove information in conflict with the incoming belief via contraction, only then incorporate the incoming belief. When classical negation is at disposal, this recipe for defining revision from contraction is formalised via the Levi identity (Alchourr\u00f3n and Makinson, 1982; G\u00e4rdenfors, 1981).\nThe AGM paradigm prescribes rationality postulates that capture the principle of minimal change, and constructive functions that satisfy such postulates, called rational functions, as for instance partial meet (Alchourr\u00f3n, G\u00e4rdenfors, and Makinson, 1985), (smooth) kernel contraction (Hansson, 1994), epistemic entrenchment (G\u00e4rdenfors, 1988) and Grove's system of spheres (Grove, 1988). Originally, the AGM paradigm was developed assuming some conditions about the underlying logic (G\u00e4rdenfors, 1988; Flouris, 2006). Although such conditions cover some classical logics such as classical Propositional Logic and First Order Logic, they restrict the reach of the AGM paradigm into more expressive logics including several Descriptions Logics (Baader et al., 2017), Modal Logics (Blackburn, van Benthem, and Wolter, 2007) and Temporal Logics such as LTL, CTL and CTL* (Clarke et al., 2018). It turns out that the AGM paradigm is independent of such conditions (Flouris, 2006), although rational contraction functions do not exist in every logic (Flouris, 2006; Ribeiro et al., 2013). Logics in which rational contraction functions do exist are dubbed AGM compliant (Flouris, 2006). As a result, several works have been dedicated to dispense with the AGM assumptions in order to extend the paradigm to more expressive logics: Horn logics (Delgrande and Peppas, 2015; Delgrande and Wassermann, 2010; Booth et al., 2014), paraconsistent logics (da Costa and Bueno, 1998), Description Logics (Ribeiro and Wassermann, 2008; Ribeiro et al., 2013; Flouris, 2006), and non-compact logics (Ribeiro, Nayak, and Wassermann, 2018). See (Wassermann, 2011) for a discussion on several other works in this line.\nAlthough much effort has been put into extending the AGM paradigm to more expressive logics, few works have investigated the computational aspects of the AGM paradigm such as (Nebel, 1998; Eiter and Gottlob, 1992; Schwind et al., 2020). All these works, however, focused on investigating the complexity of decision problems for some fixed belief change operators on classical propositional logics and Horn. With the interest and effort of expanding the AGM paradigm for more expressive non-classical logics, it is paramount to comprehend the computational aspects of belief change in such more expressive logics. In this context, there is a central question that even precedes complexity:\nComputability / Effectiveness: given a belief change operator, does there exist a Turing Machine that computes, and stops on all inputs?\nThe answer to the question above depends on two main elements: the underlying logic, and the chosen operator. Clearly, it only makes sense to answer such questions for logics that are AGM compliant. However, independently of the operator, the question is trivial for finitary logics, that is,"}, {"title": "2 Logics and Automata", "content": "We review a general notion of logics that will be used throughout the paper. We use P(X) to denote the power set of a set X. A logic is a pair L = (Fm, Cn) comprising a countable\u00b9 set of formulae Fm, and a consequence operator Cn : P(Fm) \u2192 P(Fm) that maps each set of formulae to the conclusions entailed from it. We sometimes write FML and Cn for brevity.\nWe consider logics that are Tarskian, that is, logics whose consequence operator Cn is monotonic (if $X_1 \\subseteq X_2$ then $Cn(X_1) \\subseteq Cn(X_2)$), extensive ($X \\subseteq Cn(X)$) and idempotent ($Cn(Cn(X)) = Cn(X)$). We say that two formulae \u03c6, \u03c8 \u2208 Fm are logically equivalent, denoted \u03c6 = \u03c8, if Cn(4) = Cn(\u03c8). Cn(\u00d8) is the set of all tautologies. L is Boolean, if Fm is closed under the classical boolean operators and they are interpreted as usual. A theory of L is a set of formulae K such that Cn(K) = K. The expansion of a theory K by a formula is defined as the theory K + \u03c6 := Cn(KU {4}). Let Th\u2081 denote the set of all theories from L. If Th\u2081 is finite, we say that L is finitary; otherwise, IL is non-finitary. Equivalently, IL is finitary if L has only finitely many formulae up to logical equivalence.\nA theory K is consistent if K \u2260 Fm, and it is complete if for all formulae \u03c6 \u2208 Fm, \u03c6 \u2208 K or (\u00ac\u03c6) \u2208 K. The set of all complete consistent theories of IL is denoted as CCTL. For a formula, the set of all CCTs that do not contain is given by w(\u03c6). We omit subscripts where the meaning is clear from context.\n2.1 Linear Temporal Logic\nWe recall the definition of linear temporal logic (Clarke et al., 2018), LTL for short. For the remainder of the paper, we fix an arbitrary finite, nonempty set AP of atomic propositions.\nDefinition 1 (LTL Formulae). Let p range over AP. The formulae of LTL are generated by the following grammar:\n$\\varphi ::= \\top \\mid p \\mid \\neg \\varphi \\mid \\varphi\\lor \\varphi \\mid X \\varphi \\mid \\varphi \\mathcal{U} \\varphi$\nFMLTL denotes the set of all LTL formulae.\nIn LTL, time is interpreted as a linear timeline that unfolds infinitely into the future. The operator X states that a formula holds in the next time step, while 4 U & means that holds until & holds (and & does eventually hold). We define the usual abbreviations for boolean operations (\u03a4, \u039b, \u2192) as well as the temporal operators F6 := T U (finally, at some point in the future), G\u00a2 := \u00abF \u00ac6 (globally, at all points in the future), and Xk 4 for repeated application of X, where k \u2208 N.\nFormally, timelines are modelled as traces. A trace is an infinite sequence \u03c0 = a0a1 ..., where each ai \u2208 P(AP) is a set of atomic propositions that hold at time step i. The infinite suffix of \u3160 starting at time step i is denoted by $\\pi^i = a_i a_{i+1}...$. The set of all traces is denoted by P(AP)W.\nThe semantics of LTL is defined in terms of Kripke structures (Clarke et al., 2018), which describe possible traces.\nDefinition 2 (Kripke Structure). A Kripke structure is a tuple M = (S,I,T, X) such that S is a finite set of states; IC S is a non-empty set of initial states; T C S \u00d7 S is a left-total transition relation, i.e., for all s \u2208 S there exists\nA set X is countable if there is an injection from X to the natural numbers."}, {"title": "3 AGM Contraction", "content": "In the AGM paradigm, the epistemic state of an agent is represented as a theory. A contraction function for a theory K is a function: Fm \u2192 P(Fm) that given an unwanted piece of information outputs a subset of K which does not entail. Contraction functions are subject to the following rationality postulates (G\u00e4rdenfors, 1988)\n(K\u2081) $K-\u03c6 = Cn(K - \u03c6)$\n(K\u2082) $\u039a\u2286 K$\n(K\u2083) If 4 \u2209 K, then K \u00f7 4 = K\n(K\u2084) If y & Cn(\u00d8), then 4 \u2209 K-4\n(K) K\u2286 (K\u00f7 4) + \u03c6\n(K) If y = 4, then K \u00f7 4 = K\u4ea0 \u03c8\n(K\u012b) (K-4) \u2229 (K \u4ea0 \u2084) \u2286 K \u4ea0 (\u03c6\u2227 \u03c8)\n(K) If y\u00a2 K\u4ea0 (6\u2227 \u03c8) then K \u00f7 (\u03c6 \u2227 \u03c8) \u2286 K -\u03c6\n(closure)\n(inclusion)\n(vacuity)\n(success)\n(recovery)\n(extensionality)\nFor a detailed discussion on the rationale of these postulates, see (Alchourr\u00f3n, G\u00e4rdenfors, and Makinson, 1985; G\u00e4rdenfors, 1988; Hansson, 1999). The postulates (K\u012b) to (K) are called the basic rationality postulates, while (K\u012b) and (Kg) are known as supplementary postulates. A contraction function that satisfies the basic rationality postulates is called a rational contraction function. If a contraction function satisfies all the eight rationality postulates, we say that it is fully rational.\nThere are many different constructions for (fully) rational AGM contraction such as Partial Meet (Alchourr\u00f3n, G\u00e4rdenfors, and Makinson, 1985), Epistemic Entrenchment (G\u00e4rdenfors, 1988), and Kernel Contraction (Hansson, 1994). All these functions are characterized by the AGM postulates of contraction. For an overview, see (Ferm\u00e9 and Hansson, 2018; Hansson, 1999). These contraction functions, however, are rational only in very specific logics, precisely in the"}, {"title": "4 Finite Representation and its Limits", "content": "In the AGM paradigm, the epistemic states of an agent are represented as theories which are in general infinite. However, according to Hansson (2017, 2012), the epistemic states of rational agents should have a finite representation. This is motivated from the perspective that epistemic states should resemble the cognitive states of human minds, and Hansson argues that as \"finite beings\", humans cannot sustain epistemic states that do not have a finite representation. Additionally, finite representation is crucial from a computational perspective, i.e., to represent epistemic states in a computer.\nDifferent strategies of finite representation have been used such as (i) finite bases (Nebel, 1990; Dalal, 1988; Dixon, 1994), and (ii) finite sets of models (Hans, van Der Hoek, and Kooi, 2007; Baltag, Moss, and Solecki, 1998). In the former strategy, each finite set X of formulae, called a finite base, represents the theory Cn(X). In the latter strategy, models are used to represent an epistemic state. Precisely, each finite set X of models represents the theory of all formulae satisfied by all models in X, that is, the theory {\u2208 FML | M |= 4, for all M \u2208 X}. The expressiveness of finite bases and finite sets of models are incomparable, that is, some theories expressible in one method cannot be expressed in the other method and vice versa. For instance, the information that \u201cJohn swims every two days", "John swims": ".", "Anna will swim eventually": "s expressible as a single LTL formula (F s, where s stands for \u201cAnna swims", "c\u2081": {"c2": {"f": "\u03a3\u60d3 \u2192 Th\u0139.\nGiven an encoding (Ec, f), a word w \u2208 \u03a3 represents a theory K, if f(w) is defined and f(w) = K. Observe"}, "title": "5 Reasoning on the B\u00fcchi Encoding of LTL", "content": "The encoding in which epistemic states are expressed is of fundamental importance. On the one hand, the encoding must be expressive enough to capture a non-trivial space of epistemic states. On the other hand, the encoding must support reasoning. Most fundamentally, an agent should be able to decide whether it believes a given formula 4, i.e., whether is entailed by the theory representing the agent's epistemic state. Such a problem might be decidable for one (perhaps less expressive) encoding, but undecidable for a different (more expressive) encoding. We call this problem the entailment problem on an encoding (\u03a3c, f):\nInput: (\u03c9,\u03c6) \u0395 \u03a3 \u00d7 FmL, such that f(w) is defined\nOutput: true if y \u2208 f (w), otherwise false\nThis problem is a generalisation of several decision problems that support reasoning. For example, on the finite base encoding, it corresponds to the usual entailment problem between formulae. Entailment on the encoding based on finite sets of models corresponds to the model checking problem. For other encodings, as we will see, it can be more general than either of these problems.\nSpecifically, we investigate a suitable encoding for epistemic states over LTL, a commonly used compendious logic in model checking and planning. In both these domains, the primary approach to reasoning about LTL is based on B\u00fcchi automata. Thus, from a reasoning standpoint, B\u00fcchi automata are predestined to be the basis for an encoding of epistemic states over LTL. To this end, we give the following definition for the set of LTL formulae represented by a B\u00fcchi automaton:\nDefinition 17 (Support). The support of a B\u00fcchi automaton A is the set $S(A) := { \\varphi \\in F_{M_{LTL}} \\mid \\forall \\pi \\in L(A) . \\pi \\models \\varphi }$. If y\u2208 S(A), we say that A supports 4.\nSince the purpose of an encoding is to represent theories, it remains to show that the support of a B\u00fcchi automaton is indeed a theory. One may observe that the support depends only on the B\u00fcchi automaton's accepted language, i.e., the"}}, {"title": "6 The Impossibility of Effective Contraction", "content": "Assume that the space of epistemic states that an agent can entertain is determined by an excerpt E. In this section, we investigate which properties make an excerpt suitable from the AGM vantage point. Clearly, not every excerpt is suitable for representing the space of epistemic states. For example, if a non-tautological formula appears in each theory of E, then 4 cannot be contracted. The chosen excerpt should be expressive enough to describe all relevant epistemic states that an agent might hold in response to its beliefs in flux. Precisely, if an agent is confronted with a piece of information and changes its epistemic state into a new one, then the new epistemic state must be expressible in the excerpt. A solution is to require the excerpt to contain at least one rational outcome for each possible contraction. We say that a contraction - remains in E if img() \u2286 E.\nDefinition 24 (Accommodation). An excerpt E accommodates (fully) rational contraction iff for each K\u2208 E there exists a (fully) rational contraction on K that remains in E.\nAccommodation guarantees that an agent can modify its beliefs rationally, in all possible epistemic states covered by the excerpt. There is a clear connection between accommodation and AGM compliance. While AGM compliance concerns existence of rational contraction operations in every theory of a logic, accommodation guarantees that the information in each theory within the excerpt can be rationally contracted and that its outcome can yet be expressed within the excerpt. Surprisingly, rational accommodation and fully rational accommodation coincide.\nProposition 25. An excerpt E accommodates rational contraction iff E accommodates fully rational contraction."}, {"title": "7 Effective Contraction in the B\u00fcchi Excerpt", "content": "Despite the strong negative result of Section 6, computability can still be harnessed, however, in very particular excerpts: excerpts E in which for every theory, there exists at least one computable (fully) rational contraction function that remains in E. We say that such an excerpt E effectively accommodates (fully) rational contraction. If belief contraction is to be computed for compendious logics, it is paramount to identify such excerpts as well as classes of computable contraction functions. In this section, we show that the B\u00fcchi excerpt of LTL effectively accommodates fully rational contraction, and we present classes of computable contraction functions.\nFor a contraction on a theory K\u2208 EB\u00fcchi to remain in the B\u00fcchi excerpt, the underlying choice function must be"}, {"title": "8 Conclusion", "content": "We have investigated the computability of AGM contraction for the class of compendious logics, which embrace several logics used in computer science and AI. Due to the high expressive power of these logics, not all epistemic states admit a finite representation. Hence, the epistemic states that an agent can assume are confined to a space of theories, which depends on a method of finite representation.\nWe have shown a severe negative result: no matter which form of finite representation we use, as long as it does not collapse to the finitary case, AGM contraction suffers from uncomputability. Precisely, there are uncountably many uncomputable (fully) rational contraction functions in all such expressive spaces. This negative result also impacts other forms of belief change. For instance, belief revision is interdefinable with belief contraction, via the Levi Identity. Therefore, it is likely that revision also suffers from uncomputability. Accordingly, uncomputability might span to iterated belief revision (Darwiche and Pearl, 1997), update and erasure (Katsuno and Mendelzon, 2003), and pseudo-contraction (Hansson, 1993), to cite a few. It is worth investigating uncomputability of these other operators.\nIn this work, we have focused on the AGM paradigm, and logics which are Boolean. We intend to expand our results for a wider class of logics by dispensing with the Boolean operators, and assuming only that the logic is AGM compliant. We believe the results shall hold in the more general case, as our negative results follow from cardinality arguments. On the other hand, several logics used in knowledge representation and reasoning are not AGM compliant, as for instance a variety of Description Logics (Ribeiro et al., 2013). In these logics, the recovery postulate (K) can be replaced by the relevance postulate (Hansson, 1991), and contraction functions can be properly defined. Such logics are called relevance-compliant. As relevance is an weakened version of recovery, the uncomputability results in this work translate to various relevance-compliant logics. However, it is unclear if all such logics are affected by uncomputability. We aim to investigate this issue in such logics.\nEven if we have to coexist with uncomputability, we can still identify classes of operators which are guaranteed to be computable. To this end, we have introduced a novel class of computable contraction functions for LTL using B\u00fcchi automata. This is an initial step towards the application of belief change in other areas, such as methods for automatically repairing systems (Guerra and Wassermann, 2018). The methods devised here for LTL form a foundation for the development of analogous strategies for other expressive logics, such as CTL, \u00b5-calculus and many Description Logics. For example, in these logics, similarly to LTL, decision problems such as satisfiability and entailment have been solved using various kinds of automata, such as tree automata (Kupferman, Vardi, and Wolper, 2000; Hladik and Pe\u00f1aloza, 2006)."}, {"title": "A Proofs for Section 2 (Logics and Automata)", "content": "L is Boolean if for every \u03c6, \u03c8 \u2208 Fm there exist formulae \u00ac resp. 6 V \u03c8 such that:\n(\u00ac\u315c) $Cn(\\varphi) \\cap Cn(\\neg\\varphi) = Cn(\\emptyset)$ \n(\u00ac1) $Cn(\\varphi, \\neg \\varphi) = F_m$\n(V1) If y\u2208 Cn(X) then (\u03c6 \u2228 \u03c8) \u2208 Cn(X)\n(VE) If a \u2208 Cn(XU {4}) and a \u2208 Cn(XU {4}), then \u03b1\u2208 Cn(XU {\u03c6\u2228\u03c8})\nfor all formulae \u03b1, \u03c6, \u03c8 and all sets of formulae X.\nObservation 5. LTL is Tarskian and Boolean.\nProof. It is easy to show that LTL is Tarskian. Regarding the Boolean operators, the disjunction is straightforward. The only interesting aspect is negation:\n(\u00ac\u315c) Let \u03c8 \u2208 Cn(())\u2229Cn(()\u00ac6), and let M be a Kripke structure. Assume M \u2260 \u03c8. Then there exists an ultimately periodic trace \u03c0of M such that \u3160 # 4. But then the Kripke structure M\u2081 with Traces(Mn) = {\u03c0} either satisfies 6 or \u00ac, and in either case it follows that \u039c\u03c0 = 4. Thus we have a contradiction, and it must indeed be the case that every Kripke structure M satisfies \u03c8. Hence \u03c8 \u2208 Cn(\u00d8).\n(\u00ac1) Let \u03c6\u2208 FMLTL. Since there is no Kripke structure such that M and M = \u00ac6, we can conclude that all such models satisfy \u03c8. Hence \u03c8\u2208 Cn(\u03c6, \u00ac\u03c6).\nNote that our notion of negation, in particular (\u00ac\u315c), is weaker than requiring M = 4 or M = \u00ac for all formulae 4, a property not satisfied by LTL.\nProposition A.1 ((Clarke et al., 2018)). If L(A) is nonempty, then A accepts an ultimately periodic word."}, {"title": "B Proofs for Section 4 (Finite Representation and its Limits)", "content": "Proposition B.1. The theory Cn(F p) is not expressible via a finite set of models.\nProof. Suppose there was a finite set of models, i.e., Kripke structures {M1,..., Mn} such that\n{\u2208 FM LTL | Mi |= 6, for i = 1, ..., n} = Cn(Fp)\nEach Kripke structure M\u2081 has some finite number of states mi. Clearly, we must have Mi Fp. It follows that for every trace of Mi, p must hold at least once within the first mi time steps: otherwise, there must be a cycle that can be reached and traversed without encountering an occurrence of p. If this were the case, there would also be an infinite trace corresponding to infinite repetition of this cycle, where p never holds; this would contradict Mi Fp.\nLet now m be the maximum over all mi for i = 1, ..., n. Then each of the models Mi satisfies $\\bigvee_{k=0}^{m}X^k p$. Thus, $\\bigvee_{k=0}^{m}X^k p$ is in the theory represented by the models M1,..., Mn. But this formula is not in Cn(Fp), so we arrive at a contradiction.\nLemma B.2. A Tarskian, Boolean logic L is (Discerning) if and only if for every K \u2208 CCTL, there exists a formula \u03c6 with K = Cn(\u03c6).\nProof. Let IL be a Tarskian, Boolean logic.\n\"\u2192\": Assume that L satisfies (Discerning), i.e., that X = NY implies X = Y for all sets X, Y \u2286 CCTL. Let K be an arbitrary complete consistent theory.\nConsider the set X = CCT\\{K}. By assumption, since X \u2260 CCT, it follows that \u2229X \u2260 \u2229 CCT = Cn(\u00d8). Consequently, there must exist some formula a \u2208 \u2229 X \\ Cn(\u00d8). Every CCT K' \u2208 X contains a, and hence by consistency we have that (a) \u2209 K'. However, since a is by assumption non-tautological, there must exist some CCT that does not contain it. The only choice is K, and so we conclude that a & K and by completeness, (\u00aca) \u2208 K. It follows that\n$Cn(\\neg a) = {\\widehat{K} \\in CCT \\mid Cn(\\neg a) \\subseteq \\widehat{K} } = \\{K\\} = K$\nThus we have shown for an arbitrary CCT K, that there exists a formula \u03c6 (namely, 6 :\u2261 \u00aba) such that K = Cn(\u03c6).\n\"\u2190\": Assume that for every K\u2208 CCTL, there exists a formula such that K = Cn(p). To show that IL satisfies (Discerning), we proceed by contraposition. To this end, let X,Y CCTL such that X \u2260 Y. Wlog. there exists some K \u2208 X \\ Y. By assumption, there exists some formula \u2208 FmL such that K = Cn(\u03c6).\nLet K' be any CCT other than K. If it were the case that \u03c6\u2208 K', it would follow that KC K'. But this is a contradiction, as any strict superset of K must be inconsistent.\nThus for any CCT K' other than K, it holds that & K' and hence (\u00ac6) \u2208 K'. It follows that the formula \u00ac is in the intersection \u2229 Y (since K \u2209 Y) but not in X (since K\u2208 X). We conclude that \u2229 X \u2260 NY.\nTheorem 14. The logics LTL, CTL, CTL*, \u03bc-calculus and monadic second-order logic (MSO) are compendious.\nProof. We refer to (Clarke et al., 2018) for the definition of syntax and semantics of CTL, CTL* and the \u00b5-calculus, and to (B\u00fcchi, 1962) for MSO (there called SC). From these definitions, it is easy to see that these logics are Tarskian and Boolean. To show that they are non-finitary, it suffices to find an infinite set of pairwise non-equivalent formulae. For the case of LTL, such a set is for instance given for instance by {p, X p, X2 p,...}. It remains to show that the logics satisfy (Discerning).\nWe begin by proving this for CTL. The same proof also applies directly to CTL* and \u00b5-calculus (noting that CTL can be embedded in both these logics). Browne, Clarke, and Grumberg (1987) show that CTL formulae can characterize Kripke structures up to bisimilarity. More precisely, for every Kripke structure M, there exists a CTL formula M such that M is satisfied precisely by Kripke structures that are bisimilar to M. They also show that bisimilar Kripke structures in general satisfy the same CTL formulae. From these results, it follows that every CCT of CTL has a finite base, and thus by Lemma B.2, (Discerning) follows. We"}, {"title": "C Proofs for Section 5 (Reasoning on the B\u00fcchi Encoding of LTL)", "content": "As a basis for our results on LTL, we develop a tight connection between ultimately periodic traces and complete consistent formulae. We begin by defining formulae that uniquely identify an ultimately periodic trace.\nLemma C.1 (Identifying Formulae). For every ultimately periodic trace \u03c0, there exists an LTL formula id(\u03c0) that is satisfied by \u3160 and not by any other trace.\nProof. Let \u03c0 = \u03c1\u03c3\u03c9 be an ultimately periodic trace, where p = a\u2081... an and \u03c3 = b\u2081... bm. We define the formula\n$id(\\pi) := (\\bigwedge_{i=1}^{n}X^{i-1}a_i) \\land (\\bigwedge_{j=0}^{m}X^{n+j}b_j)$\n$ \\land X^{n} G(\\alpha \\rightarrow X^{m+1} \\alpha)$\n$\\alpha \\in \\Sigma$\nwhere a letter a \u2208 \u03a3 = P(AP) abbreviates the formula $\\bigwedge_{p \\in a} p \\land \\bigwedge_{p \\in AP\\setminus a} \\neg p$.\nIn this formula, the first conjunct establishes the (possibly empty) prefix a\u2081 . . . an. The second conjunct establishes the subsequent (non-empty) sequence bo... bm. And finally, the third conjunct describes the shape of the trace, i.e. that after a prefix of length n it becomes periodic with a period of length m + 1. Any trace that satisfies these constraints is necessarily equal to \u03c0.\nIn Section 5, we define the function $Th_{Up} : UP \\rightarrow CCT_{LTL}$ with $Th_{Up}(\\pi) := {\\varphi \\in F_{M_{LTL}} \\mid \\pi \\models \\varphi }$. This function can also be expressed via identifying formulae.\nLemma C.2. It holds that $Th_{Up}(\\pi) = Cn(id(\\pi))$.\nProof. Let \u03c6\u2208 Thup(\u03c0). Then \u03c0 |= \u03c6. Any Kripke structure M that satisfies id(\u03c0) must have Traces(M) = {\u03c0}, and hence M also satisfies . Therefore we conclude that \u03c6\u2208 Cn(id(\u03c0)).\nConversely, let \u03c6\u2208 Cn(id(\u03c0)). Consider a Kripke structure M with Traces(M) = {\u03c0}. As \u03c0 is ultimately periodic, such a Kripke structure (with a finite number of states) exists. Then M\u2081 = id(\u03c0), so by assumption also M = 4. But this implies \u03c0 = \u03c6 and thus \u03c6\u2208 Thup(\u03c0).\nLemma C.3. For every \u03c0\u2208 UP, Thup(\u03c0) is a complete consistent theory. Hence, the function Thup is well-defined.\nProof. Let \u03c0 = \u03c1\u03c3\u03c9 be an ultimately periodic trace, where p = \u03b1\u2081... an and \u03c3 = b\u2081 ... bn. From Lemma C.2, it immediately follows that Thup (\u03c0) is a theory.\nTo show consistency, we identify a model (i.e., a finite Kripke structure) that satisfies every formula in the theory. In particular, we construct a Kripke structure M = (S, I, \u2192, A) with as follows: The set of states is given by S = {91,...,qn, Po,..., Pm} with initial states I = {0}. We define (qi) = a\u017c for i \u2208 {1, ..., n}, and X(pj) = bj for j \u2208 {0,..., m}. Finally, \u2192 is the smallest relation with qiqi+1, qn \u2192 Po, Pj \u2192 Pj+1 and pm \u2192 po for all i\u2208 {1, ..., n \u2212 1} and j \u2208 {0, . . ., m \u2013 1}.\nThis Kripke structure only has a single trace, namely Traces(M) = {\u03c0}. Thus it follows that M\u2081 = id(\u03c0), and consequently M\u2081 = Cn(id(\u03c0)) = Thup(\u03c0). Thereby we have shown that Thup(\u03c0) is consistent.\nIt remains to show that Thup (\u03c0) is complete, i.e., for every 6 \u2208 FMLTL, we must either have \u03c6\u2208 Cn(id(\u03c0)) or (\u00ac\u03c6) \u2208 Cn(id(\u03c0)). We distinguish two cases:\nCase 1: \u03c0 = \u03c6. Consider some Kripke structure M such that M = Cn(id(\u03c0)). Then every trace of M must satisfy id(\u03c0), i.e., it must hold that Traces (M) = {\u03c0}. Since \u03c0 = 6, it follows that M = \u03c6.\nThis reasoning applies to any M with M = Cn(id(\u03c0)), and thus we have shown that \u03c6 \u2208 Cn(id(\u03c0)).\nCase 2: \u03c0 = \u00ac6. We show that (\u00ac\u03c6) \u2208 Cn(id(\u03c0)), analogously to the previous case.\nSince one of these two cases always applies, for any 4, we have shown that Thup(\u03c0) is complete.\nLemma C.4. The function Thup is injective."}, {"title": "D Proofs for Section 6 (The Impossibility of Effective Contraction)", "content": "Definition D.1. A theory is K is supreme iff K is not tautological and for all a \u2208 K, either Cn(a) = K or Cn(a) =\nCn(\u00d8).\nObserve that by definition, supreme theories always have a finite base.\nLet r be a function that ranks each CCT to a negative integer, such that distinct CCTs are ranked to different negative integers. Let <r be the induced relation from r that is X < Y iff r(X) < (Y). Note that <, is a strict total order. Also note that it satisfies (Maximal Cut) and due to totality it satisfies (Mirroring).\nGiven a theory K, we define\n$K \\circ \\varphi = \\{\\begin{array}{ll}K \\cap \\bigcap min_{\\<}(\\omega(\\varphi)) & \\text{if} \\varphi \\neq \\top \\text{and} \\varphi \\in K \\\\K & \\text{otherwise}\\end{array}$\nObservation D.2. Koo is fully AGM rational."}]}