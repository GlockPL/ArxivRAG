{"title": "THE S2 HIERARCHICAL DISCRETE GLOBAL GRID AS A NEXUS\nFOR DATA REPRESENTATION, INTEGRATION, AND QUERYING\nACROSS GEOSPATIAL KNOWLEDGE GRAPHS", "authors": ["Shirly Stephen", "Mitchell Faulk", "Krzysztof Janowicz", "Colby Fisher", "Thomas Thelen", "Rui Zhu", "Pascal Hitzler", "Cogan Shimizu", "Kitty Currier", "Mark Schildhauer", "Dean Rehberger", "Zhangyu Wang", "Antrea Christou"], "abstract": "Geospatial Knowledge Graphs (GeoKGs) have become integral to the growing field of Geospatial\nArtificial Intelligence. Initiatives like the U.S. National Science Foundation's Open Knowledge\nNetwork program aim to create an ecosystem of nation-scale, cross-disciplinary GeoKGs that provide\nAI-ready geospatial data aligned with FAIR principles. However, building this infrastructure presents\nkey challenges, including 1) managing large volumes of data, 2) the computational complexity of\ndiscovering topological relations via SPARQL, and 3) conflating multi-scale raster and vector data.\nDiscrete Global Grid Systems (DGGS) help tackle these issues by offering efficient data integration\nand representation strategies. The KnowWhereGraph utilizes Google's S2 Geometry a DGGS\nframework to enable efficient multi-source data processing, qualitative spatial querying, and\ncross-graph integration. This paper outlines the implementation of S2 within KnowWhereGraph,\nemphasizing its role in topologically enriching and semantically compressing data. Ultimately, this\nwork demonstrates the potential of DGGS frameworks, particularly S2, for building scalable GeoKGs.", "sections": [{"title": "1 Introduction", "content": "Knowledge Graphs (KGs), originating from Semantic Web research [Hitzler, 2021], have revolutionized the data\nscience landscape by facilitating the integration and enrichment of vast, multi-source, and heterogeneous data while\nempowering AI applications to deliver high-quality, trusted insights for scientific decision-making [Ji et al., 2021,\nAbu-Salih, 2021]. To support translational research bridging the gap between fundamental research and real-world\napplications \u00b7 initiatives like the U.S. National Science Foundation's Open Knowledge Network (OKN) program\u00b9 and\nthe Linked Open Data (LOD) Cloud\u00b2 are driving the development of comprehensive ecosystems of nation-scale KGs\nthat adhere to FAIR (Findable, Accessible, Interoperable, Reusable) data principles [Wilkinson et al., 2016]. These\ninitiatives aim to create data-centric infrastructures for addressing complex cross-disciplinary challenges, ranging from\nclimate change to economic equity. A central theme interlinking the various domain KGs in these infrastructures is\nthe geospatial layer comprised of Geospatial Knowledge Graphs (GeoKGs), such as the KnowWhereGraph [Janowicz\net al., 2022] and Urban Flooding Open Knowledge Network (UF-OKN) [Johnson et al., 2022]. GeoKGs are now a\ncritical component of modern Geospatial Artificial Intelligence (GeoAI), providing a structured and interconnected\napproach to managing and analyzing extensive spatial datasets from heterogeneous sources [Janowicz et al., 2022, Yan\net al., 2020]. The Resource Description Framework (RDF) [Manola et al., 2004] is the widely adopted paradigm for\nGeoKGs due to its semantic richness, high interoperability, and adherence to open standards. Additionally, the Open\nGeospatial Consortium's (OGC) GeoSPARQL standard [Car and Homburg, 2022] enhances the representation of spatial\ninformation in RDF, enabling quantitative and qualitative spatial querying. This capability of GeoKGs is leveraged in\nAI systems to provide more intelligent, multi-faceted, and context-aware services [Janowicz et al., 2023].\nDespite the promise of GeoKGs, three primary challenges impede their effective implementation: handling and storing\nimmense volumes of (geospatial) data, the computational complexity involved in large-scale spatial querying, and\nanalyzing raster and vector data together at various spatial scales. Graph databases capable of managing large datasets\n(e.g., Neptune, Neo4j) lack any GeoSPARQL support. GeoSPARQL-compliant RDF databases [Jovanovik et al.,\n2021] like Blazegraph\u00b3, GraphDB4, Virtuoso, and Stardog\u00f3 use indexing methods such as R-trees, quadtrees, and\ngeohashing. However, these methods are not optimized for cross-scale analyses, global datasets, and dense graphs with\nhigh degrees of spatial overlap [Huang et al., 2019, Theocharidis et al., 2019]. High memory costs from building and\nmaintaining extensive indexes, computational costs of traversing deep R-trees and quadtrees [Kothuri et al., 2002],\nand inefficiencies in proximity searches due to boundary ambiguities in geohashing [Acharya, 2023] are just some\nchallenges with large graphs. While these indexing methods can accelerate fundamental spatial filtering queries such as\npoint-based queries, containment queries, and spatial joins for range and nearest-neighbor queries, complex queries\ninvolving spatial refinements, such as polygon intersection, spatial cross-matching, and identifying spatial patterns,\nremain highly expensive. For example, queries like \u201cFind the regions where earthquakes occurred in 2023"}, {"title": "2 Theoretical Background and Related Research", "content": "2.1 Geospatial Knowledge Graphs\nGeospatial knowledge graphs (GeoKGs) emerged in the late 2000s as open data ecosystems, primarily aiming to\ndemocratize data access in alignment with FAIR (Findable, Accessible, Interoperable, Reusable) data principles\n[Wilkinson et al., 2016]. Early graphs such as GeoNames7 and LinkedGeoData predominantly comprised explicit\ngeographic entities, such as named places, natural features, landmarks, roads, and historical features, with point\ngeometries and limited semantics. In recent years, GeoKGs have expanded in scope to model geographically themed\ndata across many domains, such as from environmental [Janowicz et al., 2022, Zhu et al., 2021a], public health [Jiang\net al., 2020, Zhu et al., 2022a], disaster management [Janowicz et al., 2022], transportation [B\u00f6ckling et al., 2024,\nQi et al., 2023], production logistics [Zhao et al., 2022], and gaming domains [Jiang et al., 2020] demonstrating the\nversatility and impact of GeoKGs in various application areas. These GeoKGs play a pivotal role in cross-domain\ngeospatial analytics [Janowicz et al., 2022], geospatial question answering [Mai et al., 2021, Weinberger et al., 2022],\nand geo-visualization [Balla et al., 2020, Li et al., 2023]. Moreover, their rich contextual information makes them\nessential training data for spatial models, facilitating the development of spatial and temporal reasoning [Zhu et al.,\n2022b], predictive analytics, and decision support systems [Zhu et al., 2022b, Mai et al., 2022]. Examples of such rich\nGeoKGs in the OKN ecosystem [U.S. National Science Foundation, November 2018] include the KWG that focuses\non environmental intelligence [Janowicz et al., 2022]; the UF-OKN10 for flood prediction, response, mitigation, and\nprevention [Saksena, 2022]; and the Safe Agricultural Products and Water Graph\u00b9\u00b9 (SAWGraph) to understand per- and\npolyfluoroalkyl substances (PFAS) contamination in food and water systems.\nA. Preliminaries of the RDF Data Model: The structure and principles of RDF and the Web Ontology Language\n(OWL) [Hitzler et al., 2009] directly influence how S2 is used to synthesize, integrate, and query data within KWG, as\nwill be discussed later in Section 4. To facilitate understanding, this section briefly introduces the basic components and\nstructure of RDF and SPARQL. For a more comprehensive introduction to RDF and SPARQL, refer to [Manola et al.,\n2004, Hitzler et al., 2010, World Wide Web Consortium and others, 2013].\nDefinition 2.1. RDF triple: An RDF triple t(s, p, o) is the basic atomic entity of a knowledge graph. It expresses\na single statement about semantic data. The subject (s) and object (o) are considered graph vertices referring to a\nresource or a simple value (called literal), and the property (p) (a.k.a. predicate) is the directed edge that connects the\ntwo vertices. The resources in t(s, p, o) are given uniform resource identifiers (URI) or are blank nodes (denoting an\nunknown resource).\nDefinition 2.2. RDF graph: An RDF graph is a collection of RDF triples. Such a graph can essentially be viewed as a\ndirected graph G = (V, E) where V denotes the set of vertices that can be resources or literals, and E denotes the set\nof directed edges.\nDefinition 2.3. SPARQL query: A SPARQL query Q is defined as tuple Q = (E, G, R). E denotes the algebraic\nexpression built from graph patterns and solution modifiers. G is the RDF graph being queried. R denotes the result\nform, such as SELECT, CONSTRUCT, DESCRIBE, or ASK, which specifies how the query results are processed and"}, {"title": "3 Methodology", "content": "This section outlines the technical aspects of integrating and utilizing S2 within KWG. It provides an overview of\nhow S2 geometry is modeled and ingested into KWG, followed by a discussion of the general technical approach for\nimplementing various quantization methods. These methods will be further detailed in Section 4."}, {"title": "3.1 Conceptual Schema for the S2 Geometry in KnowWhereGraph", "content": "GeoSPARQL 1.1 [Car and Homburg, 2022] introduces the geo:asDGGS property to link a DGGS cell to its cell ID\nserialization in the geo:dggsLiteral datatype. However, GeoSPARQL does not natively interpret DGGS literals,\nnecessitating external implementations for handling them. Currently, GeoSPARQL-DGGS [David Habgood] is the\nonly library available that leverages RDFlib to support GeoSPARQL's topological functions on DGGS literals, but it is\nlimited to the rHEALPix DGGS. Given this limitation, we chose to represent S2 cells as vector geometries (with cell\nvertices forming a polygon) using the WKT specification. This approach ensures compatibility with existing geospatial\nstandards and tools, providing a robust solution for integrating S2 cells within GeoSPARQL-extending frameworks\nsuch as KWG.\n3.2 Challenges\nUsing S2 cells as polygon geometry representations in WKT serialization introduces certain ambiguities. The discrep-\ncies between edges in planar and spherical spaces can result in indexing challenges and visualization artifacts, which\nare discussed in this section.\nIndexing: The default CRS for WKT literals is WGS84. Geographic coordinates in WGS84 span from 180\u00b0 to 180\u00b0\nlongitude and -90\u00b0 to 90\u00b0 degrees latitude, but some S2 cells span the antimeridian (\u00b1180\u00b0) and the poles. Since\nindexing in GraphDB uses WGS84, indexing issues with cells that cross the antimeridian or the poles because they\nare not normalized (either through wrapping or splitting) rendering them topologically invalid. Figure 7a illustrates\nan example of an S2 cell crossing the antimeridian that cannot be indexed in the graph. This issue occurs when the\nlongitude difference between two consecutive points in the path is >=180\u00b0. In spatial databases like GraphDB, this\nambiguity must be resolved to ensure accurate representation and querying. Possible solutions include splitting S2 cells\nat the antimeridian or representing them as points.\nVisualization Artifacts: When S2 cells are visualized on maps with a Mercator projection, as in most web maps, their\ntrue shape and size on the sphere may not be accurately reflected, with more pronounced distortion at higher latitudes.\nS2 uses geodesic edges, meaning that the edges of the cells follow the shortest path on the spherical Earth approximation.\nOn a Mercator projection, geodesic paths in the east-west direction, except at the Equator, appear as curves bulging\ntowards the poles. Consequently, the \u201chorizontal\" edges of S2 cells appear curved towards the poles (Figure 8b). When\nS2 cells are represented by straight lines connecting their four corner vertices in a Mercator projection, their east-west\nedges are incorrectly rendered as rhumb lines, or paths that follow a constant bearing relative to north, like lines of\nlatitude (Figure 8a). This shape distortion can lead to potential misinterpretations of the spatial data. For example,\npoints that are topologically within an S2 cell may appear to lie outside the cell, and vice versa (an example using the\nstate of Illinois is compared in Figure 8). Additionally, S2 quadrilaterals do not tessellate perfectly on planar maps,\nleading to gaps or overlaps between cells. Figure 7b denotes another visualization artifact, where an S2 cell that crosses\nthe antimeridian appears stretched across the world when represented on a flat map that uses Mercator map projection.\n3.3 Technical Strategy for Data Quantization in KnowWhereGraph\nS2 in KWG facilitates efficient data storage and retrieval through different data quantization strategies. As previously\nmentioned, indexing and query operations provided by the S2 Geometry are not natively available within GraphDB.\nQuantization is adapted in the KWG environment by way of view materialization [Ibragimov et al., 2016], where triples\nspatial, temporal, thematic, or their combinations are pre-computed using the s2sphere library and persisted\nwithin the graph. These materialized views enhance the scalability of query processing, particularly for complex spatial\nanalytic operations, by circumventing direct access to geometric data (e.g., WKT literals) within the graph. We employ"}, {"title": "4 Implementing Data Quantization on S2 in KnowWhereGraph", "content": "In this section, we elaborate on the two quantization strategies adopted in KWG, the ontology patterns adopted for\nmaterializing views, and their specific benefits."}, {"title": "4.1 Topological Enrichment of Vector Data", "content": "Research on computational time and space trade-offs in GeoKGs has demonstrated that precomputation of topolog-\nical relations can yield significant performance benefits [Regalia et al., 2016, 2019]. Traditionally, places (repre-\nsented as kwg-ont: Region nodes in KWG) have been central for topologically linking other spatial features (e.g.,\nkwg-ont:Hazard and kwg-ont:RoadSegment) within GeoKGs [Regalia et al., 2019]. However, place boundaries\nare inherently dynamic, meaning their topological relationships with intersecting features can change over time. For\ninstance, before 2011, South Sudan was spatially within Sudan, but after gaining independence, the relationship changed\nto a border-sharing or touches relationship. In contrast, S2 cell boundaries are fixed and immutable, providing a stable\nspatial framework for linking features and supporting multi-resolution and hierarchical spatial reasoning [Timpf and\nFrank, 1997].\nThe S2 grid at level 13 is selected as the reference layer, offering an appropriate level of detail (~1.27 km\u00b2 per cell) for\ntopologically interlinking KWG data. From this point forward, cells in this layer will be referred to as S2 reference\ncells. Topological enrichment of vector data is achieved by precomputing and materializing topological relations\nbetween entities with explicit geometries and S2 reference cells in the graph, creating a dense network of interconnected\nspatial objects. The spatial relations utilized are a subset of topological relations from T (see Section 2.2), which are\nsub-properties of kwg-ont:spatialRelation. Figure 9a illustrates the ontology pattern for this view materialization.\nCertain datasets ingested into KWG (e.g., public health departments, and pharmacies) provide addresses or other\nlocation-based information, such as ZIP codes, which are geocoded into point coordinates for topological linking to S2\ncells.\nFigure 9b represents the OWL properties [Hitzler et al., 2009] defined over the topological relations in T. We\nprecompute most of the implicit triples induced by properties to reduce graph initialization costs (total materialization\nat load time). We leave the triples resulting from the transitive property (on kwg-ont:sfWithin) to be entailed from\nforward chaining during graph initialization."}, {"title": "A. Optimized Topological Enrichment:", "content": "Classic topological enrichment uses S2 cells at level 13, but applying this resolution to large polygons, such as drought\nor smoke plume areas, can result in inefficiencies due to the massive data volumes involved. For example, a temporally\nsliced multi-polygon representing drought could cover up to 6.8 million square kilometers of the contiguous United\nStates. To improve efficiency, a discrete and compressed enrichment framework [Zalewski et al., 2021] is employed,\ncombining DE-9IM with hierarchical S2 cell nesting. This method links large polygons to the largest S2 cells at coarser\nresolutions, leveraging the transitivity of within/containment relations in the spatial ontology to infer triples describing\nspatial relationships between the region and S2 reference cells. This approach reduces data volume and speeds up\ncomputations by limiting the number of cells processed in each query."}, {"title": "B. Computational Method for Boolean Topological Relationships:", "content": "The S2 Geometry library provides classes for\nrepresenting shapes (points, curves, and regions) on the Earth's surface. These shapes are defined using points and\ngeodesic curves, which presents challenges when working with vector data serialized in the WGS84 format, as these data\ndo not inherently conform to geodesic boundaries. To address this incompatibility, we developed a custom algorithm\nto compute topological relationships (based on the DE-9IM) between the S2 reference cells and geometric objects\nin KWG. This algorithm leverages the s2sphere python wrapper for the library alongside Shapely, which handles\nplanar geometric objects. Key methods from the S2 library's S2RegionCoverer class, such as GetCovering and\nGetInteriorCovering, were instrumental in generating S2CellUnion objects that either cover or are contained\nwithin the specified region. The technical steps of the algorithm are as follows:\n1. Geometry approximation: Each WGS84 geometry ([multi-]point, [multi-]line, [multi-]polygon) is approxi-\nmated as its analogous S2 object(s) on the unit sphere. In the case of polygons, the boundary is segmented\nby adding vertices such that the distance between any two consecutive vertices does not exceed a specified\ntolerance. This ensures that linear edges are replaced by geodesic curves that closely approximate the original\nplanar shapes.\n2. Creating coverings: The S2RegionCoverer is then used to approximate the S2 object as unions of S2\nreference cells, known as cell coverings. This includes ordinary coverings (cells at various levels that cover the\ngeometry), homogeneous coverings (cells that cover the geometry at a specified level), and interior coverings\n(cells at various levels strictly within the geometry).\n3. Topological relationship computation: For point data, each point is directly mapped to an S2Point and\nassociated with an S2CellID at the maximum resolution level. For line and polygon data, topological\nrelationships are computed by identifying overlapping or contained cells using the coverings generated. For\nexample, to identify the cells at a specified level that are strictly within the given shape, an interior covering is\nused. Overlaps are determined by the difference between homogeneous and interior coverings."}, {"title": "4.2 Grid-Based Data Discretization", "content": "Data discretization involves transforming non-DGGS spatial data (vector or raster) through different transformation\nstrategies (statistical aggregation, decomposition, spatial overlay, etc.) to represent them as S2 cell-based gridded\ndata for flexible representation and analysis while maintaining spatial relationships and scalability across different\nresolutions. Cells are indicated as the sosa: FeatureOfInterest [Janowicz et al., 2019] to which various data values\nare mapped, via object properties or data properties. These data values can be 1:1 grid mapping (for raster cells),"}, {"title": "4.2.1 Vector Data to S2 Cell Discretization", "content": "The Soil Survey Geographic Database17 (SSURGO) contains detailed information on hundreds of soil attributes,\nincluding chemical and physical properties, as well as their derived interpretations. The dataset comprises over 36\nmillion soil map units distributed across more than 70 shapefiles, with varying scales depending on the region. For\nexample, states like Nevada and Utah have large polygons mapped at a scale of 1:63,360, while agriculturally intensive\nstates like Indiana and Iowa have finer polygons at a scale of 1:12,000. Due to its size and complexity, SSURGO\ndata can be impractical for use in integrated analytics environments. In KWG, this dataset is decomposed onto the\nS2 reference cells. Figure 12 demonstrates the ontology pattern employed. Overlap areas between individual soil\npolygons and an S2 reference cell (measured in square kilometers) are precomputed and materialized as instances of the\nkwg-ont:SoilMapUnitS2OverlapObservation class, with the S2 cell serving as the feature of interest. The geome-\ntries of the original soil map units, represented by the kwg-ont : SoilMapUnit class, are also included in the graph along\nwith the associated soil attributes, modeled as kwg-ont:SoilMapUnitObservableProperty. These geometries en-\nable more accurate visualizations, as a single S2 cell can contain disconnected geometries from a soil multipolygon.\nThrough the composition of relationships, kwg-ont:overlapObservedWith o sosa:isFeatureOfInterestof,\nusers can efficiently explore all soil properties linked to an S2 cell without the need to directly access soil polygon\ngeometries. By discretizing soil data over a high-resolution S2 grid, the level of detail and accuracy is enhanced,\nallowing for integration with other thematic datasets such as landforms, floodplains, crop types, and high-resolution\ndigital elevation models."}, {"title": "4.2.2 Raster Data to S2 Cell Discretization", "content": "The USDA National Agricultural Statistics Service Cropland Data Layer18 (CDL) is a raster-based land cover dataset\nproduced annually using satellite imagery and extensive agricultural ground reference data. The dataset has a ground\nresolution ranging from 30 to 56 meters, depending on the state and year. It tracks changes in forest extent and\nheight, cropland, built-up areas, surface water, perennial snow and ice, and over 134 distinct crop types, making it\nhighly valuable for monitoring agricultural land use in KWG. To integrate this data into KWG, the pixel-based raster\ninformation is transformed into data values representing the areal extent of each crop type within an S2 reference cell.\nFigure 13 illustrates the ontology pattern for this materialization in the graph. The areal percentage of each crop type\nwithin a reference cell, modeled as kwg-ont: CroplandObservableProperty, is computed and materialized as a\ntemporally scoped observation instance of kwg-ont: CroplandS2OverlapObservation. To ensure data accuracy,\nwe verify that the sum of all land cover observations within each cell, for a given timestamp, equals 100%. This\ndiscretization process reduces the large volume of raster CDL data and represents it in the graph, facilitating more\nefficient and scalable computations. As a result, queries are attribute-based rather than spatial, improving both\nperformance and manageability."}, {"title": "5 Analytical Capabilities in KnowWhereGraph With S2 Integration", "content": "This section presents four use cases that demonstrate how the two quantization strategies enhance the analytical pipeline\nin KWG by optimizing storage and computation, while improving spatial query efficiency over heterogeneous datasets.\n5.1 Conflating S2 Cells with Thematic Observation Data via Object Property Paths\nObservation data, such as hurricane severity and impacts, population demographics, air quality indices, and public\nhealth observations, are collected through explicit or implicit sampling strategies. These datasets contain regional\nidentifiers (e.g., ZIP code, FIPS code, NWZ code, statistical area code) but are not explicitly connected to region\ngeometries. In KWG, these georeferenced observation data are linked to their corresponding geographic entities or\nregions, such as ZIP code tabulation areas, administrative region boundaries, national weather zones, and statistical\nareas, via the sosa:hasFeatureOfInterest relation as shown in Figures 14 and 15a.\nFrom a query performance perspective, using S2 cells to topologically enrich geographic entities with explicit geometries\nis highly beneficial. This approach consequentially conflates S2 cells with various observation data via object property\npaths, thereby thematically contextualizing the cells. Figure 14 shows an example of the property path from various\nobservations to S2 cells via connected geographic regions. The result of this process is a set of mappings from\nobservations to geographic entities to sets of S2 cells at multiple levels of the S2 grid. This thematic enrichment of S2\ncells entails a level of abstraction determined by the chosen geographic region and the resolution of the cells. However,\nit plays a crucial role in uncovering latent patterns, for example identifying that regions with high social vulnerability\nscores have an increased exposure to air pollution.\nFigure 2 illustrates the ontology pattern that explicitly links observations to geographic regions using the\nsosa:hasFeatureOf Interest relation. The path between observations and S2 cells is defined using OWL 2\nproperty chains [Potoniec, 2022], specifically through the composition of sosa:hasFeatureOfInterest and\nkwg-ont:sfOverlaps. In KWG, these object paths are computed on-demand via SPARQL queries.\nThematic contextualization of S2 cells provides significant advantages for use cases requiring granular spatial sum-\nmarization, cross-theme data exploration, and spatial interpolation. Conflating different observational themes with S2\ncells enables users to navigate geographically through thematic data spaces. This is especially valuable for locating\nrelated places within the knowledge graph. For example, an analyst from a humanitarian aid organization may search\nfor regions based on thematic criteria, such as identifying S2 cells associated with fire forecasts, weather conditions\nconducive to fires, and socioeconomically vulnerable neighborhoods. This integrated data approach assists the analyst in\ndeveloping effective emergency response plans."}, {"title": "5.2 Multi-scale Representation of Quantitative Geospatial Data", "content": "Quantitative datasets consist of various observation datasets typically represented as numerical values associated with\nspecific locations. Examples include the Social Vulnerability Index (SVI) linked to counties and PM 2.5 concentrations\nmeasured at point-based air quality monitoring sites. While these datasets can be queried through conflation at specific\nS2 grid levels, some statistical queries may not benefit from a multi-scale spatial representation. This largely depends\non the type of quantity (amounts versus measurements, as discussed in [Top, 2024]). For instance, while a county-level\nSVI measurement can be mapped to all S2 reference cells within that county, these values cannot simply be summed\nor averaged to derive a value for a larger spatial region, such as a state. In contrast, the spatial overlap areas of a\nspecific crop type from multiple S2 cells can be summed to determine the total overlap area within a larger S2 cell that\ncontains them. The distinction between quantities that can be aggregated (mereotopological quantities) and those that\ncannot (arithmetic quantities) is further defined and axiomatized in [Top, 2024]. While discussing the implications of\ndiscretizing both types of quantities and their aggregations over multiple resolutions is beyond the scope of this paper,\nunderstanding these distinctions is crucial for accurate geospatial analysis and data integration within the S2 Geometry\nframework.\nWhen aggregating certain quantity measurements over a larger region, it is important to incorporate weighting measures\nto adjust for spatial biases or the uneven distribution of data points within that region. For example, an averaging query\nthat requests the mean of data values within a specified spatial polygon can benefit from information regarding the S2\ncell containing each data point, its spatial relationship to the polygon, and the size of the S2 cell. These details help\ndetermine how data points are placed within the polygon and the appropriate weights to allocate. By incorporating\nthese weighting factors, the aggregated results may more accurately reflect the true characteristics of the entire area,\nrather than being skewed by the concentration or distribution of the data points. A key objective in defining such a\nrepresentation is to facilitate queries at the data's coarse scale without significant loss of accuracy.\nConsider the air quality observation dataset in KWG, which contains concentration measurements for pollutants such\nas Ozone and PM 2.5. The PM 2.5 concentration is a critical metric in air quality assessment. Typically, air quality\nmonitoring sites are associated with counties, but their distribution within counties is neither uniform nor evenly spaced.\nThis uneven distribution complicates the derivation of accurate county-level estimates since PM 2.5 concentrations\nexhibit nonlinear spatial variations. For example, urban areas require data with a spatial resolution of 200 - 400 meters\nto achieve acceptable modeling accuracy of pollution exposure [Stroh et al., 2007]. In KWG, individual PM 2.5\nmeasurements are mapped onto 1 x 1 km\u00b2 grid cells represented by S2 reference cells. These measurements are then\nhierarchically contained within lower-resolution S2 cells, which are also topologically connected to county polygon\nboundaries through spatial quantization. This hierarchical structuring enables users to analyze the spatial distribution of\nmonitoring sites within counties, facilitating the calculation of appropriate weights for more accurate regional estimates.\nThis hierarchical structuring helps users analyze the distribution of monitoring sites within counties and calculate\nweights for more accurate regional estimates. It accounts for the uneven density of monitoring sites, their proximity\nto pollution sources, and any spatial biases from uneven observation distribution. Moreover, the fine-grained overlap\nof monitoring sites with other data layers \u2013 achieved through S2 enrichment and discretization \u2013 enhances the ability\nto identify additional controlling factors or measures that may disproportionately influence PM 2.5 concentrations at\nspecific locations. Thus, the combination of quantization and the hierarchical and topological relationships within the\nS2 grid framework significantly improves the precision and reliability of aggregating quantities over spatial scales,\nparticularly in regions with complex spatial characteristics."}, {"title": "5.3 Cross-Graph Integration", "content": "S2 serves as the spatial fabric for cross-disciplinary graph integration and interoperability within the OKN framework,\nwhich includes SAWGraph and UFOKN, as outlined in Section 2. SAWGraph integrates datasets related to water, soil,\nplant and animal tissue, feed, and agricultural food products tested for per- and polyfluoroalkyl substances (PFAS),\ncovering test results, testing locations, and potential contamination sources. This integration supports the analytical\nneeds for PFAS monitoring and management. SAWGraph is connected with KWG and UFOKN to trace PFAS transport\nand accumulation pathways within the U.S. food and water systems, and to prioritize further sampling at specific\nlocations, such as wells, agricultural lands, or crops, using federated querying with S2 cells as points of interest. To\nenable such functionality, each graph must implement S2 integration with relevant datasets. Figure 16 illustrates key\nspatial features from each graph that are linked to S2 cells via topological enrichment, enabling the contextualization\nand conflation of datasets by leveraging complementary information across graphs. Inferred links (depicted with dashed\nblue arrows) allow for advanced queries, such as: \u201cWhat is the relationship between PFAS releases from paper mills\nand PFAS test results in nearby or downstream water bodies\". Figure 17 shows a map demonstrating how spatial data\nfrom the three graphs are integrated and utilized in this context. This integrated spatial framework enhances the ability\nto conduct cross-regional comparisons and make informed decisions regarding contamination and sampling priorities.\""}, {"title": "5.4 Graph Sharding", "content": "KWG is a continuously expanding knowledge graph, with the number of geometry nodes increasing significantly -\nfrom approximately 5.5 million in version 2.0 (KWG - Manhattan) to approximately 48 million in version 3.0 (KWG\nSanta Barbara). This growth is expected to continue, necessitating careful consideration of scalability for both\nmaintenance and performance. Managing such large volumes of data introduces challenges not only for efficient\nsearch but also for data ingestion, indexing, and updating, especially as highly dynamic environmental datasets are\nintegrated into the graph. To mitigate the challenges posed by the increasing size, the graph can be partitioned into\nsmaller sub-graphs or shards, which can be distributed across a cluster of servers for parallel processing. This approach\nleverages distributed computing to manage both the storage and query processing loads. Federated SPARQL queries\ncan then be executed to aggregate results from the distributed shards, enabling efficient querying across the graph's full\ndataset while maintaining scalability and performance [W3C, 2021", "2023": ".", "2018": "."}]}