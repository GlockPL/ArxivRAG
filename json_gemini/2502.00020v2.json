{"title": "Temporal Reasoning in AI Systems", "authors": ["Abhishek Sharma"], "abstract": "Commonsense temporal reasoning at scale is a core problem\nfor cognitive systems. The correct inference of the duration\nfor which fluents hold is required by many tasks, including\nnatural language understanding and planning. Many AI\nsystems have limited deductive closure because they cannot\nextrapolate information correctly regarding existing fluents\nand events. In this study, we discuss the knowledge\nrepresentation and reasoning schemes required for robust\ntemporal projection in the Cyc Knowledge Base. We\ndiscuss how events can start and end risk periods for fluents.\nWe then use discrete survival functions, which represent\nknowledge of the persistence of facts, to extrapolate a given\nfluent. The extrapolated intervals can be truncated by\ntemporal constraints and other types of commonsense\nknowledge. Finally, we present the results of experiments to\ndemonstrate that these methods obtain significant\nimprovements in terms of Q/A performance.", "sections": [{"title": "Introduction and Motivation", "content": "Modern cognitive systems are expected to reason about a\ncomplex and dynamic world. Commonsense temporal\nreasoning plays an important role in reasoning about a\ncontinuously changing environment. Since even the largest\nknowledge bases (KBs) lack complete knowledge of the\noutside world, cognitive systems must employ heuristic\nreasoning and estimate how long a given state is likely to\npersist. For example, if Fred falls down and sprains his\nankle, he is expected to be in pain for a short while. If\nFred's younger brother was born in 2013, it is to be\nexpected that he will start to walk and talk within a few\nyears. How can an Al system with incomplete information\nreason about these events? How long do facts persist? How\ndo individuals change over time and what factors are\nrelevant for understanding inter-individual differences?\nWhat events are expected to occur and when do they\noccur? What changes their probabilities of occurrence?\nMany knowledge-based systems do not represent time\ncorrectly and they do not perform sophisticated temporal\nreasoning. In particular, the problem of temporal projection\n(i.e., the persistence of facts) has not received sufficient\nattention in the knowledge-based systems community. For\nthis reason, many cognitive systems have limited deductive\nclosure because existing facts (true at a given time point)\ncannot be extrapolated to answer questions at other time\npoints. What types of knowledge representation and\nreasoning schemes are needed to solve these problems?\nIn this study, we use techniques from discrete time\nsurvival analysis to answer these questions. We discuss\nhow events start and end risk periods during which an\ninterval for a fluent (a time-varying property of the world)\ncould be terminated. After identifying the starting points of\nthe risk periods, we use hazard functions to construct an\ninterval during which a time-dependent sentence is highly\nlikely to be true. These intervals can be truncated by\ntemporal constraints and other types of commonsense\nknowledge. We discuss how different temporal properties\nof predicates and collections can be used to infer hazard\nfunctions. Next, we explain how time (in)dependent\ncovariates can be specified to scale the parameters of\nhazard functions. The role of event calculus in the context\nof temporal projection is then discussed, which is often\nused to maintain correct temporal intervals for fluents in\ndatabases. However, some of the predictions made by\nevent calculus might be erroneous if relevant information\nabout the expected duration for which fluents hold is not\navailable. Thus, we discuss how survival functions can be\nused to alleviate this problem. Next, we explain how the\nparameters of these survival distributions can be learnt\nfrom data.\nThis paper is organized as follows. We start by\ndiscussing related work. Then we provide a brief\nintroduction to the Cyc Knowledge Base (Cyc KB). Next,\nwe discuss our temporal projection algorithm and the\nknowledge representation it requires. We conclude by\ndiscussing our experimental results and plans for future\nresearch."}, {"title": "Related Work", "content": "In AI, the problem of temporal projection has been studied\nin the context of the frame problem [Hanks & McDermott\n1986]. The use of survival functions for temporal\nprojection in AI was initiated by [Dean & Kanazawa 1988]\nand it was extended by other researchers [Tawfik &\nNeufeld 2000]. Issues related to temporal abstraction in the\nmedical domain were discussed in [Shahar 1997] and\ntemporal-semantic properties were introduced in [Shoham\n1987]. However, none of these addressed the problem in\nthe context of improving Q/A performance of large-scale\ncognitive systems. The work presented in the present study\nis closest to that discussed by [Lenat 1998] and [Singer &\nWillet 2003]. Previous studies have developed\nprobabilistic models for temporal and probabilistic\nreasoning [Hanks & McDermott 1993], but few researchers\nhave focused on discussing knowledge-representation and\nreasoning issues that would help large logic-based Al\nsystems to perform robust temporal projection and answer\na wide range of answers."}, {"title": "Background", "content": "In this section, we summarize the key conventions used by\nCyc [Lenat & Guha 1990, Matuszek et al. 2006]. Cyc\nrepresents concepts as collections. Each collection is a kind\nor type of thing, the instances of which share a certain\nproperty, attribute, or feature. For example, Cat is a\ncollection of all cats, and only cats. Collections are\narranged hierarchically by the genls relation. (genls <sub>\n<super>) means that anything that is an instance of <sub>\nis also an instance of <super>. Predicates are also arranged\nin hierarchies. (genlPreds <s> <g>) means that <g> is a\ngeneralization of <s>. The collection Situation is an\nimportant part of Cyc's ontology. Each instance of\nSituation is a state or event that comprises one or more\nobjects with certain properties or certain relations with\neach other. Event and StaticSituation are notable\nspecializations of Situation. In Cyc, contexts are\nrepresented as microtheories. Each microtheory groups a\nset of assertions together that share some common\nassumptions. The time dimension of contexts can be\nspecified [Lenat 1998]. For example, the following\nsentence represents the fact that Tony Greig was a cricketer\nbetween 1972 and 1977.\nMonadic microtheory\u00b9: PeopleDataMt\nTime dimension:\n(TimeIntervalInclusiveFn (YearFn 1972) (YearFn 1977))\nSentence: (isa TonyGreig-Cricketer Cricketer)\nIn Cyc, instances of TimeDependentCollection and\nTimeDependentRelation can be used to represent fluents.\nEach instance of TimeDependentCollection is a collection"}, {"title": "Risk Periods and Discrete-Time Survival\nAnalysis", "content": "Let us assume that To was the last time point when fluent P\nwas known to be true and no events are known to have\noccurred that affect the persistence of P2. If we lack perfect\nknowledge, we need to extrapolate and find a reasonable\nassessment of whether P would be true at time \u03a4\u03bf+\u0394.\nSystems that use probabilistic logic might compute and use\nProb (holds (P, To+A)) directly. Other systems that use\ntraditional forward and backward inference might compute\nProb (holds (P, t)) for different values of t, and derive an\ninterval ([T1,\nT2]) around To in which the fluent P is\nhighly likely to be true. If we assert that P is true in [T1,\nT2], this assertion can participate in forward and backward\ninference in the same manner as any other assertion in the\nKB3.\nConsider the following sentences:\n(isa Fred BiologicalLivingObject)                                                                  ...(A1)\n(isa Fred Married)                                                                                    ...(A2)\n(isa Fred MicrosoftEmployee)                                                              ...(A3)\nLet us assume that A1, A2, and A3 were true in the year\n1990, and we need to find the likelihood of their being true\nin the year 1992. Since the state represented by Al is\nterminated by a death event, we have to find the\nprobability of the occurrence of a death event in the time\ninterval 1990-1992. Similarly, the likelihood of the truth of\nA2 in 1992 depends on Fred's age and on the duration for\nwhich he has been married. Therefore, the process of\ncomputing these likelihoods involves the following steps.\n(a) Identification of the starting points of risk periods\nwhen a state could be terminated: Since states can be\nterminated as soon as they are started, this starting point is\nspecified by the event that initiates the state. For example,\nthe starting points of the risk periods for A1, A2, and A3\nare given by the birth date, the wedding date, and the\nhiring date, respectively. This knowledge can be"}, {"title": "Temporal projection", "content": "represented in the following format:\n(eventTypeStartsRolePlayersRiskPeriodForState\nEVENT-TYPE ROLE STATE). This states that an event of type\n'EVENT-TYPE' starts a risk period in which the individual\nwho plays the role 'ROLE' in the event\u00b9 could become an\ninstance of 'STATE'. This information can be used to derive\nsentences such as A5.\n(eventStartsRiskPeriodForSentence\nWeddingEvent-001 (isa Fred Divorced))                                                                         ...(A5)\nIf Fred's wedding event happened on July 1, 1988, then we\ncan derive A6.\n(startingPointOfRiskPeriodOfSentence\n(isa Fred Divorced) (DayFn 1 (MonthFn July (YearFn 1988))))                                          ....(A6)\nAssertions such as A6 can be derived for each of Fred's\nweddings.\n(b) Specification of the hazard function: Given the\nstarting point of the risk period, we can calculate the\nprobability that a state-terminating event would occur in a\ngiven time interval. Let us divide continuous time into a\nsequence of time intervals (0, t1], (t1, t2], .... and so forth,\nand let (tj-1, tj] be the jth time interval. Then, if T is the\ndiscrete random variable that indicates the time interval\nduring which a state terminating event occurs, then the\ndiscrete hazard, $h_j$, is the conditional probability that a\nrandomly selected individual will experience the state-\nterminating event in the jth time interval, given that he/she\nhas not experienced it in preceding time intervals [Singer\n& Willett 1993, Singer & Willett 2003]:\n$h_j$ = Pr ( T = j | T \u2265 j)\n=\n...(\u03951)\nThus, it follows that:\nPr (T > k) = $(1-h_1)(1-h_2)...(1-h_k)$\n(E2)\nPr( T = k) = $(1-h_1)(1-h_2)...(1-h_{k-1}).h_k$  = $h_k.\u03a0(1-h_j)$\n.(E3)\nused to calculate the likelihood that sentences such as A1,\nA2, and A3 persist at the time To+\u2206. An example of such\nsurvival likelihoods (estimated by Cyc) is shown in Figure\n1. We see that the professional career of cricketers starts\nending when they are in their mid-30s, and virtually all of\nthem retire before they are 45 years old. Each instance of\nthe time-dependent collection and relations will potentially\nrequire different types of distributions and parameter\nvalues. Given the type of these distributions and the values\nof their associated parameter values, Cyc will use them\nautomatically to extrapolate fluents. However, some\ndistributions can be specified more easily if we use the\nfollowing temporal semantic properties. (a) Initial\nCollections: In CycL, an instance, COL, of\nInitialCollection is defined such that any instance of COL\nstarts as an instance of it, and if the instance changes so it\nis no longer an instance, it can never become an instance\nagain. \"NeverSchooled\" and \"FemaleInfant\" are instances\nof InitialCollection. Thus, if (isa Tom NeverSchooled) was\ntrue on January 1, 1980, Cyc would use the property of the\ninitial collection and assert that Tom was an instance of\nthat collection from his birth until January 1, 1980. (b)\nTerminal Collection: Similarly, in CycL, an instance,\nCOL, of TerminalNonInitialCollection, is a collection such\nthat when a thing becomes an instance of COL, it must\nremain so while it exists. The collection \"HumanAdult\"\nand \"Graduate\" are examples of terminal collection. (c)\nBidirectional Projection: In some cases, fluents persist as\nlong as the individual exists (e.g., FemaleHuman). Cyc's\ntemporal projection module uses these properties.\nHow does this analysis change when we know other\nfacts that affect the persistence of a given sentence? In the\npresent study, we consider two ways in which this change\nmight occur.\n(a) Temporal Constraints: Consider the following\nsentences:\nMicrotheory: PeopleDataMt\nTime Interval: (YearFn 1998)\nSentence: (isa JohnMcCarthy-ComputerScientist Professor) ...(A7)\nMicrotheory: PeopleDataMt\nTime Interval: (YearFn 2001)\nSentence: (isa JohnMcCarthy-ComputerScientist RetiredPerson) ...(A8)\nGiven a sentence such as A7, Cyc's temporal projection\nmodule would try to extrapolate and construct a time\ninterval around 1998 during which John McCarthy was a\nprofessor. However, a sentence such as A8 suggests that he"}, {"title": "Temporal projection", "content": "was not a professor in 2001. We represent this information\nusing the following sentence.\n(followingStageTypes Professor RetiredPerson)...(A9)\nSentence A9 represents that a person's life as a professor\nends before his life as a retired person begins. Let P\nrepresent the fluent \u201cJohn McCarthy is a professor.\" Then,\nbased on only A8 and A9, Cyc can infer that John\nMcCarthy was a professor at time point T if the following\nconditions are met: (a) Prob (P, T) > threshold, and (b) -\n(Prob (Q, T) > threshold), where Q is an assertion that is\nincompatible with P.\n(b) Covariates: Temporal constraints can help us to\nrepresent the incompatibility of two assertions that mainly\nlimit the time interval during which assertions are deemed\nto hold. However, additional information about an\nindividual might change the rate of decay of persistence.\nFor example, a sentence such as A10 is a time-dependent\ncovariate for A11.\nMicrotheory: PeopleDataMt\nTime interval: 1970 to 1975.\nSentence: (isa Fred (FrequentPerformerFn Smoking)) ...(A10)\nSentence: (isa Fred BiologicalLivingObject) ...(A11)\nOther covariates (e.g., gender) can be time independent. To\nscale the hazard when such covariates are present, an\nexpression such as E4 is used.\nh(i) + 1/(1+e-a(i) e(-\u03a3\u03b2(i)*X(i)))\n...(\u03954)\nRecall that h(i) is the hazard for the ith time interval. Here,\neach X(i) is a Boolean variable that corresponds to a\ncovariate such as A10. The value of X(i) is 1 if the\ncovariate is present in the ith time interval, but zero\notherwise. The parameters \u1e9e(i) represent the strengths of\nthe covariates. When a sentence such as All is true in an\ninterval i, the value of h(i) increases, which leads to a\nsharper decline in the probability of the persistence of\nA11. When all of the values of X(i) are zero, the hazard\nfunction for the ith time interval reduces to E5.\nh(i) \u21901/ (1+ e-a(i))\n...(E5)\nExpression E5 represents the baseline hazard function,\nwhich is determined by the parameter a(i). Information\nabout covariates can be represented by assertions such as\nthe following.\n(timeDependentCovariateForCollection BiologicalLivingObject\n(FrequentPerformerFn Smoking) 0.3)\n...(A12)\nThe last argument in A12 is used to specify the value of\n\u1e9e(i). Similar assertions are used for time-independent\ncovariates.\nHazard functions can also be used to infer the persistence\nof time-dependent predicates. However, in some cases, we\nneed an additional vocabulary for plausible inferences.\nConsider the following sentences:\n(owns AlbertEinstein Car-780)                                                                                                                            ...(A13)\n(owns AlbertEinstein Toothbrush-392) ...(A14)\nThe sentences A13 and A14 should have different decay\nrates. Therefore, we need to specify hazard functions for\nhandling sentences where an instance of a certain\ncollection appears in a given argument position in a\npredicates. If the known specific conditions are not\nsatisfied for a given assertion, then we must employ\ngeneric hazard functions that apply to a given predicate."}, {"title": "Event Calculus in Temporal Projection", "content": "The inferences made by the methods discussed above are\nnon-monotonic in nature. When contradictory information\narrives, we can use methods based on both event calculus\nand survival analysis to maintain a consistent KB. Let us\nstart with the basics of event calculus. Briefly, fluents are\nconsidered true at a time point if they have been initiated\nby an event previously, but have not been terminated in the\nmeantime. Similarly, a fluent is false if it has been\nterminated previously but has not been initiated in the\nmeantime [Miller & Shanahan 2002]. In Cyc, domain-\ndependent axioms are written to derive sentences such as\nthe following, which represent knowledge about situations\nthat start and end time intervals for fluents.\n(situationStartsIntervalForSentences f) ...(A15)\n(situationEndsIntervalForSentence t g) ...(A16)\nThe first sentence above denotes that situation s starts a\ntime interval during which the fluent f holds. The core\npersistence axiom employed in simplified event calculus is\nas follows [Sadri & Kowalski 1995].\nHolds(P, T) - Happens (E1, T1) and Initiates (E1, P) and\nT1 < T and ~\u2203E2, T2 (Happens (E2, T2) and\nTerminates (E2, P) and T1 < T2 < T) ...(A17)\nHowever, the original event calculus description [Kowalski\n& Sergot 1986] suggested that extra application-specific\nrules can be added to infer whether an interval for a fluent\nhas been broken if the known events are too far apart for it\nto hold continuously. This problem can be solved if we\ncombine the event calculus with the survival analysis-\nbased methods discussed above. In step la of the algorithm"}, {"title": "Temporal Projection Algorithm", "content": "shown in Figure 2, we use A17 to construct an interval\n[T1, T2] for a fluent P. However, the intervals created in\nstep 1b are preferred if they are subsumed by [T1, T2].\nSince hazard functions represent knowledge about how\nlong states persist, this helps us to avoid the error caused\nwhen excessively wide time intervals are produced due to\nincomplete knowledge of the outside world. Since many\nevents that start/end intervals for P might be known to us,\nwe create a timeline of events and choose El and E2 such\nthat following condition is satisfied.\nhappens (E1, T1), happens (E2, T2), T1 < T < T2,\nInitiates(E1, P), Terminates (E2, P),\n~E3 such that (happens(E3, T3), Initiates (E3, P),\nT1 < T3 < T < T2), ~\u2203E4 such that (happens(E4, T4),\nTerminates (E4, P), T1 <T<T4< T2)\n...(C1)\nIn step 2, when all known events start time intervals for P,\nwe use C2 to choose an event El, and use the hazard\nfunction to create an interval that extends forward from E1.\nhappens(E1, T1), Initiates (E1, P) and ~\u2203E2 such that\n(happens (E2, T2) and T1 < T2 < T and Initiates (E2, P))\n...(C2)\nhappens(E1, T1), Terminates (E1, P) and ~\u2203E2 such that\n(happens (E2, T2) and T < T2 <T1 and Terminates (E2, P)).\n...(C3)\nConditions C1, C2 and C3 help us identify events that are\nmost temporally proximate to P. When all known events\nend intervals for the given fluent, we use C3 to choose the\nclosest event and create an interval that extends backwards\nfrom it (step 3). If the intervals created by these events do\nnot subsume T, then the truth of Pat T is unlikely to be\nrelated to their occurrence and step 4 is executed. In step 4,\nwe use the hazard functions and create a time interval [T5,\nT6]. In step 5, we look at different constraints that might\nbe applicable and we truncate the interval if necessary.\nNon-survival Analysis-related Vocabulary: Although\nsurvival analysis provides a natural framework for\ntemporal projection, some fluents are less amenable to\nmonotonically decreasing persistence likelihoods. For\nexample, consider the following sentence:\n(isa BillClinton UnitedStatesPresident)                                                                                                                                                                                                                                                                                                                                                                                                                                                ...(A17)\nIt is plausible to infer that a sentence such as A17 would be\ntrue for four years from the inauguration date of the\npresident. To handle these cases, we can derive sentences\nsuch as A17.\n(statePersistsForDurationFromDate\n(isa BillClinton UnitedStatesPresident)\n(DayFn 21 (MonthFn January (YearFn 1993))) (YearsDuration 4)) (A17)\nThese assertions are derived from domain-specific axioms\n(e.g., axioms about presidential inauguration) and they are\ntreated as default statements. They can be overridden when\ncontradictory information10 is available and assertions such\nas A16 are derived."}, {"title": "Algorithm: TemporallyProject", "content": "Input: A Knowledge Base, KB\nA fluent, P, true during a time interval, T.\nA likelihood threshold, a.\nOutput: A time interval [T1, T2] that subsumes T, such\nthat if T3 \u03b5 [T1, T2], then Prob (P, T3) > a.\n1. If events El and E2 exist such that they start and end\nintervals for P respectively and satisfy condition C1,\nthen execute la-lc, else goto step 2.\n(1a) Use A17 to construct an interval [T1, T2] that\nsubsumes T for P.\n(1b) Use the hazard function for P to construct another\ninterval [T3, T4] for P.\n(1c) If [T1, T2] subsumes [T3, T4], then return [T3,\nT4], else return [T1, T2].\n2. If all known events start intervals for P, use condition\nC2 to choose an event, and use the relevant hazard\nfunction to create an interval [T5, T6] that extends\nforward from the event. If T is subsumed by [T5, T6]\nthen return [T5, T6] else goto step 4\n3. If all known events terminate intervals for P, use\ncondition C3 to choose an event and use the relevant\nhazard function to create an interval [T5, T6] that\nextends backward from the event. If T is subsumed by\n[T5, T6] then return [T5, T6] else goto step 4.\n4. Use hazard functions to create a time interval [T5, T6]\nthat subsumes T.\n5. If applicable, use temporal constraints to truncate [T5,\nT6]. Return the resulting time interval.\nLearning: How can we learn the parameters of the\nprobability distributions discussed above? We recall that\nthe definitions of hazard functions are reliant on\nidentifying the time interval during which the state\nterminating event occurs. Therefore, the task of learning\nthe hazard functions requires information in the following\nformat [Singer & Willet 2003].\n(i) A time period variable, j: We need to divide the time\nperiod since the start of the risk period into intervals with a\nsuitable length. The time period variable specifies the time\nperiod j of the record. For example, let us consider\nsentence A11. Fred's birth event starts the risk period and\nintervals with a length of one year are suitable for\nestimating the likelihood of its persistence. Therefore, the"}, {"title": "Experimental Results", "content": "To assess the validity of these concepts, we conducted a set\nof experiments. Five query sets were selected based on the\navailability of temporally qualified ground facts and their\nrelevance to temporal projection. Every query was in the\nform: \"Sentence s was (will be) true at time T\u201d11, where s\nwas a fully bound fluent of the type '(isa <ins> <col>)'.\nFor each of these query sets, we measured the Q/A\nperformance in two modes, as follows. Mode M1: In this\nmode, we aimed to simulate the performance of a\ntraditional reasoning system with no temporal projection\nmodule. In addition to simply looking up the KB and using\nthe predicate generalization hierarchy, the inference engine\nperformed a temporal subsumption12 test during reasoning.\nMode M2: In the second mode, in addition to the\nreasoning done in mode M1, we enabled temporal\nprojection methods discussed in this paper. The results of\nthese experiments are shown in Table 1. We see that there\nhas been significant improvement in Q/A performance in\nall query sets 13. The overall improvement in performance\nwith respect to M1 is 49%. The results are statistically\nsignificant (p < 0.05)."}, {"title": "Conclusions and Discussion", "content": "Commonsense temporal reasoning is a core problem for\ncognitive systems. To improve commonsense reasoning in\ngeneral and Q/A performance in particular, modern AI\nsystems must find better ways to reason about how long\nfacts persist. In this study, we proposed different types of\nknowledge representation schemes, which may help such\nsystems to perform robust temporal projection. The\nspecification of risk periods and hazard functions\nfacilitates the calculation of plausible intervals for fluents.\nTemporal constraints help to limit intervals and the\npresence of covariates can scale the parameters of the\nhazard functions. Event calculus can be integrated with\nsurvival analysis to alleviate some of the problems caused\nby incomplete knowledge. Experiments on a set of over\n7000 queries shows that the methods proposed here lead to\n49% improvement in Q/A performance on average.\nOur results suggest the following future areas of\nresearch. First, we have found that in the case of many\ntime dependent collections (e.g., Entertainer, Singer), once\npeople enter these states; the fluent persists until the end of\ntheir active life. Therefore, we would like to reason about\nwhen individuals are likely to enter a given state, and how\nthey might make transitions among states. Previous\nresearch into multi-state processes might be relevant in this\ncontext [Crowder 2012]. Second, we would like to extend\nthis research to ensure that we can reason about recurrent\nand periodic events (e.g., sleeping or going to a grocery\nstore). Finally, the capability to reason about probabilistic\neffects of events, and estimating the likelihood of event\noccurrence in a given time interval would be very useful\nfor further improving the results shown in Table 1."}]}