{"title": "Lexicographic optimization-based approaches to learning a representative\nmodel for multi-criteria sorting with non-monotonic criteria", "authors": ["Zhen Zhang", "Zhuolin Li", "Wenyu Yu"], "abstract": "Deriving a representative model using value function-based methods from the perspective of preference\ndisaggregation has emerged as a prominent and growing topic in multi-criteria sorting (MCS) problems.\nA noteworthy observation is that many existing approaches to learning a representative model for MCS\nproblems traditionally assume the monotonicity of criteria, which may not always align with the complexities\nfound in real-world MCS scenarios. Consequently, this paper proposes some approaches to learning a\nrepresentative model for MCS problems with non-monotonic criteria through the integration of the threshold-\nbased value-driven sorting procedure. To do so, we first define some transformation functions to map the\nmarginal values and category thresholds into a UTA-like functional space. Subsequently, we construct\nconstraint sets to model non-monotonic criteria in MCS problems and develop optimization models to\ncheck and rectify the inconsistency of the decision maker's assignment example preference information. By\nsimultaneously considering the complexity and discriminative power of the models, two distinct lexicographic\noptimization-based approaches are developed to derive a representative model for MCS problems with non-\nmonotonic criteria. Eventually, we offer an illustrative example and conduct comprehensive simulation\nexperiments to elaborate the feasibility and validity of the proposed approaches.", "sections": [{"title": "1. Introduction", "content": "Nowadays, multi-criteria sorting (MCS) problems, which involve the assignment of a set of alternatives\nto several predefined ordered categories in terms of multiple criteria, have garnered growing interest and find\nwidespread application across diverse fields. These fields include inventory management (Chen et al., 2008;\nLiu et al., 2016), policy assessments (Dias et al., 2018), consumer preference analysis (Guo et al., 2020),\necological risk assessments (Qin et al., 2021), supplier evaluation (Pelissari & Duarte, 2022) and green\nbuilding rating (Zhang & Li, 2023). Within the literature, various MCS approaches have been proposed,\nencompassing value function-based approaches (Doumpos et al., 2001; Greco et al., 2010; Kadzi\u0144ski et al.,\n2015, 2017; Liu et al., 2020b), outranking-based approaches (Almeida-Dias et al., 2010; Kadzi\u0144ski & Ciomek,\n2016; Olteanu & Meyer, 2022; Kadzi\u0144ski & Szczepa\u0144ski, 2021), distance-based approaches (Chen et al., 2007;\nde Lima Silva & de Almeida Filho, 2020), and rule-based approaches (Dembczy\u0144ski et al., 2009; Kadzi\u0144ski\net al., 2016).\nAmong the various mainstream MCS approaches, value function-based approaches stand out for their\ncomputational simplicity and intuitive interpretability (Liu et al., 2019; Li & Zhang, 2024). These approaches\nrely on preference information provided by decision makers. Typically, decision makers have two ways to\nfurnish their preferences: the direct and indirect methods (Tomczyk & Kadzi\u0144ski, 2019; Belahc\u00e9ne et al.,\n2023a; Cinelli et al., 2022; Belahc\u00e9ne et al., 2023c). The direct method entails decision makers providing\nspecific parameter information required for value function-based MCS approaches, such as the shape of\nmarginal value functions. In contrast, the indirect method involves decision makers offering holistic judgment\ninformation, such as assignment example preference information. Related parameters are then inferred\nusing preference disaggregation techniques (Jacquet-Lagr\u00e8ze & Siskos, 2001; Liu et al., 2020a). The indirect\nmethod is gaining popularity among value function-based MCS approaches due to its reduced cognitive\ndemands on decision makers (Corrente et al., 2013). Notably, UTilit\u00e9sAdditivesDIScriminantes (UTADIS)\nand its variants have become classic and prevalent approaches in this category (Zopounidis & Doumpos,\n2001; Doumpos & Zopounidis, 2002; Sobrie et al., 2018). In UTADIS and its various variants, the holistic\njudgement information provided by a decision maker is typically translated into constraints, forming an\nextensive feasible domain and thus yielding multiple compatible parameters (Ru et al., 2023; Arcidiacono\net al., 2024). Consequently, the selection of a representative model, defined by a set of representative\nparameters, has emerged as a prominent research area for MCS problems. For instance, Greco et al. (2011)\nintroduced a robust ordinal regression method to select a representative value function for MCS problems.\nKadzi\u0144ski & Tervonen (2013) presented a stochastic ordinal regression method to select a representative\nvalue function and yield robust sorting results in MCS problems. Doumpos et al. (2014) developed an\noptimization model to select a representative sorting model by maximizing the minimal difference between\nthe global values of reference alternatives and the corresponding category thresholds.\nMany of the aforementioned approaches for learning a representative sorting model operate under the\nassumption of criteria monotonicity. However, in real-life scenarios, numerous MCS problems involve non-\nmonotonic criteria (Rezaei, 2018; Bagherzadeh et al., 2022). For instance, in the financial domain, when\nclassifying firms based on their financial status, the total liabilities to total assets is often considered as a\nnon-monotonic criterion. Specifically, as the total liabilities to total assets decreases, the firm's ability to\nutilize external funds worsens, and as it increases, the financial risk of the firm rises. Consequently, the\ntotal liabilities to total assets must be maintained within a specific range. Similarly, in medical diagnosis,\nblood glucose levels also exhibit non-monotonic property; if the blood glucose level falls outside the normal\nrange (either too high or too low), a patient is diagnosed with hyperglycemia or hypoglycemia. Consequently,\nmodeling blood glucose levels necessitates the use of non-monotonic value functions (Belahc\u00e9ne et al., 2023b)."}, {"title": "To address non-monotonic criteria for multi-criteria decision making problems, various approaches have\nbeen developed. For instance, Despotis & Zopounidis (1995) introduced a linear programming method for\nlearning non-monotonic value functions with a quadratic shape, requiring the decision maker to specify\nthe evaluation value at which monotonicity changes in advance. Based on the UTASTAR algorithm, Kliegr\n(2009) proposed a new method to allow any shape of value functions to accommodate non-monotonic criteria\nby introducing numerous binary variables. Eckhardt & Kliegr (2012) utilized a local preference transfor-\nmation method to handle non-monotonic criteria in the UTilit\u00e9 Additive (UTA) method. Doumpos (2012)\ndevised an evolutionary optimization-based approach for constructing non-monotonic value function models,\nconsidering different types of value functions with non-monotonic criteria. Ghaderi et al. (2015) proposed\na new preference disaggregation approach that allows non-monotonic additive models, and applied it to\nanalyze the impact of brand colour on brand image. Ghaderi et al. (2017) constructed a linear fractional\nprogramming model to infer non-monotonic additive value functions based on indirect pairwise comparisons.\nCorrente & Tasiou (2023) proposed a robust TOPSIS method for multi-criteria decision making problems\nwith hierarchical and non-monotonic criteria. Although significant progress has been made in addressing\nnon-monotonic criteria, most of these approaches are designed for multi-criteria ranking problems and are\nnot directly applicable to MCS problems. Recently, Guo et al. (2019) introduced a progressive method for\nselecting representative marginal value functions for MCS problems with non-monotonic criteria. Kadzi\u0144ski\net al. (2020) developed a mixed-integer linear programming model to derive a representative instance of\nthe sorting model by considering different types of monotonic and non-monotonic marginal value functions.\nFurthermore, Kadzi\u0144ski et al. (2021) introduced a novel approach to address non-monotonic criteria by\nmodeling the marginal value function for each criterion as the sum of non-decreasing and non-increasing\ncomponents. While significant advancements have been achieved, two primary challenges persist. Firstly,\nsome methods are constrained to learning marginal utility functions with specific shapes, limiting their\nwidespread applicability. Secondly, even though some methods can handle marginal utility functions of\nany shape, they frequently necessitate the introduction of binary variables, consequently increasing the\ncomputational complexity during model solving. Alternatively, they may not completely adhere to specific\nnormalization constraints, thereby compromising the interpretability of the models.", "content": "To address the previously mentioned challenges, this paper introduces lexicographic optimization-based\napproaches to learning a representative model for MCS problems with non-monotonic criteria. The contri-\nbutions of this paper are outlined as follows:\n(1) We define some transformation functions to map the marginal values and category thresholds in the\noriginal functional space into UTA-like functional space. These functions ensure that the resulting marginal\nvalue functions and category thresholds are in UTA-like standard forms, preserving the sorting result for\nalternatives after the transformation.\n(2) We construct constraint sets tailored to model the non-monotonic criteria in MCS problems. On\nthis basis, we proceed to develop models for checking and addressing inconsistency in the decision maker's\nassignment example preference information. Subsequently, we introduce two lexicographic optimization-\n3"}, {"title": "2. Threshold-based value-driven sorting procedure", "content": "In this section, we review the threshold-based value-driven sorting procedure (Greco et al., 2010), which\nserves as the foundation for the subsequent research discussed in this paper.\nLet $A = \\{a_1,a_2,...,a_n\\}$ represent a set of alternatives that need to be assigned to several predefined\nordered categories $C = \\{C_1,...,C_q\\}$ based on a family of criteria $G = \\{g_1,g_2,...,g_m\\}$. In this context, $a_i$\ndenotes the $i$-th alternative, $i \\in N = \\{1, 2, ..., n\\}$, $g_j$ refers to the $j$-th criterion, $j \\in M = \\{1, 2, . . ., m\\}$, and\n$C_h$ represents the $h$-th category, such that $C_h > C_{h-1}$ for $h \\in Q = \\{1, . . ., q\\}$. The performance level of the\nalternative $a_i$ with respect to the criterion $g_j$ is denoted as $g_j(a_i)$, $i \\in N$ and $j \\in M$. By defining $x_{ij} = g_j(a_i)$,\nthe decision matrix encompassing all alternatives can be represented as $X = (X_{ij})_{n \\times m}$. Furthermore, we\nintroduce a category threshold vector $b = (b_0,b_1,...,b_q)^T$ to delineate the categories, with $b_{h-1}$ and $b_h$\nbeing the lower and upper thresholds of the category $C_h$, respectively, where $b_h > b_{h-1}$ for $h \\in Q$. For\nconvenience, we set $b_0 = 0$ and $b_q = 1 + \\varepsilon$, where $\\varepsilon$ is a very small positive number.\nIn order to represent the decision maker's preferences and obtain the global value of each alternative $a_i$,\nan additive value function $V(a_i)$ is usually used, i.e.,"}, {"title": null, "content": "$$V (a_i) = \\sum_{j=1}^m V_j (x_{ij}), i \\in N,\\eqno{(1)}$$\nwhere $v_j(.)$ is the marginal value function on the criterion $g_j$, $j\\in M$.\nLet $[\\beta_j^-, \\beta_j^+]$ be the performance range of the criteria $g_j$, where $\\beta_j^-$ and $\\beta_j^+$ are the minimum and\nmaximum performance levels for the criterion $g_j$, respectively, $j\\in M$. To ensure that $V(a_i) \\in [0,1]$, the"}, {"title": null, "content": "below normalization condition should be satisfied for an additive value function $v_j(\u00b7)$:\n$$v_j (\\beta_j^-) = 0, j \\in M$$\n$$\\sum_{j=1}^m v_j (\\beta_j^+) = 1.\\eqno{(2)}$$\nIn this context, we call an additive value function is in UTA-like standard form if Eqs. (1) - (2) hold.\nIn the threshold-based value-driven sorting procedure, a piecewise linear marginal value function, denoted\nby $v_j()$ is typically employed to represent the decision maker's preferences concerning the criterion $g_j$.\nSpecifically, the performance range of each criterion $g_j$ is divided into $s_j$ equal subintervals, denoted as\n$[\\beta_j^{0}, \\beta_j^{1}],...,[\\beta_j^{l-1}, \\beta_j^{l}],...,[\\beta_j^{s_j}, \\beta_j^{s_j+1}]$, where $\\beta_j^{0} = \\beta_j^-, \\beta_j^{s_j+1} = \\beta_j^+, \\beta_j^{l} = \\beta_j^- + l(\\beta_j^+ - \\beta_j^-)/s_j$ and each $\\beta_j^{l}$\nis termed a breakpoint, $l = 1,..., s_j + 1$.\nFor an alternative $a_i$, given an performance level $x_{ij}$ for the criterion $g_j$, its marginal value can be\ndetermined through linear interpolation, i.e.,"}, {"title": null, "content": "$$v_j(x_{ij}) = v_j(\\beta_j^{l-1}) + \\frac{x_{ij} - \\beta_j^{l-1}}{\\beta_j^{l} - \\beta_j^{l-1}}(v_j(\\beta_j^{l}) - v_j(\\beta_j^{l-1})), if x_{ij} \\in [\\beta_j^{l-1}, \\beta_j^{l}].\\eqno{(3)}$$\nFollowing this, the sorting result (i.e., the assigned category) for each alternative $a_i$ can be determined\nby comparing its global value $V(a_i)$ with the category thresholds. To elaborate, if $b_{h\u22121} < V(a_i) < b_h$, then\nthe alternative $a_i$ is assigned to the category $C_h$, $i \\in N$, $h\\in Q$.\nIn the fundamental framework of the threshold-based value-driven sorting procedure, it is typically\nassumed that the criteria exhibit a monotonically increasing behavior. Nonetheless, practical MCS problems\noften involve non-monotonic criteria. To address this challenge, a novel approach is introduced in the\nsubsequent sections."}, {"title": "3. Problem formulation", "content": "We consider the following MCS problem with non-monotonic criteria, which seeks to assign a set of\nalternatives $\\{a_1, a_2,..., a_n \\}$ into predefined ordered categories $\\{C_1, C_2..., C_q\\}$, based on a family of criteria\n$\\{g_1,g_2,..., g_m\\}$. It is noteworthy that this MCS problem accommodates non-monotonic criteria, but no\nprior information is available regarding these non-monotonic criteria.\nTo facilitate the assignment of alternatives, the decision maker will offer some assignment example prefer-\nence information, typically consisting of holistic judgments for reference alternatives and their corresponding\nassigned categories. Let $A^R \\subset A$ represent the set of reference alternatives, and the set of assignment ex-\nample preference information can be succinctly denoted as $\\{a_i \\rightarrow C_{B_i}|a_i \\in A^R\\}$. Additionally, we define\n$A^N = A\\backslash A^R$ as the set of non-reference alternatives.\nThis paper is dedicated to introducing lexicographic optimization-based approaches to learning a repre-\nsentative model for MCS problems with non-monotonic criteria from the perspective of preference disaggre-\ngation and then obtain the sorting result for non-reference alternatives. The proposed approaches consist"}, {"title": "of the following parts:\n(1) Modeling the non-monotonic criteria using transformation functions", "content": "In this part, we employ a transformation function designed to convert non-monotonic marginal value\nfunctions into a UTA-like standard form (Ghaderi et al., 2017). Accordingly, we also introduce another\ntransformation function that maps the category thresholds within the non-monotonic functional space into a\nUTA-like functional space. These transformations serve a dual purpose: simplifying the subsequent modeling\nprocess and ensuring that the sorting result for alternatives remain unchanged after the transformation.\nAfterwards, utilizing the proposed transformation functions, we proceed to construct several constraint sets\ntailored to model non-monotonic criteria for MCS problems. These constraint sets serve as the foundation\nfor the subsequent development of our models (see subsections 4.1 and 4.2).\n(2) Consistency check and preference adjustment\nTo check whether the assignment example preference information provided by the decision maker is\nconsistent, we develop a consistency check model that takes into consideration the non-monotonic criteria.\nIn instances where the assignment example preference information is identified as inconsistent, we formulate\na minimum adjustment optimization model to rectify this inconsistency (see subsection 4.3).\n(3) Learning a representative sorting model\nOnce the inconsistency of the decision maker's assignment example preference information is eliminated,\nwe proceed with developing lexicographic optimization-based approaches to learning a representative model\nfor MCS problems with non-monotonic criteria. By solving the models, we can determine the representative\nmarginal value functions and category thresholds effectively (see subsection 4.4).\n(4) Obtaining the sorting result for non-reference alternatives\nUsing the representative sorting model, we are equipped to assign non-reference alternatives to predefined\nordered categories based on the threshold-based value-driven sorting procedure."}, {"title": "4. The proposed approaches", "content": "In this section, the proposed approaches are detailed. We commence by introducing the transforma-\ntion functions that will be used throughout the remainder of the paper. Subsequently, we provide the\nnon-monotonic criteria modeling method for MCS problems. Following this, we develop some consistency\ncheck and preference adjustment models. Additionally, we introduce the lexicographic optimization-based\napproaches and the robustness analysis method based on the proposed approaches.\n4.1. Transformation functions\nSince the marginal value functions may be non-monotonic in MCS problems, the performance levels asso-\nciated with the maximum and minimum marginal values taken for each criterion are not known beforehand.\nConsequently, the marginal value functions may not adhere to a UTA-like standard form. To address this\nchallenge and represent the marginal value functions in a UTA-like standard form for MCS problems with\n6"}, {"title": "non-monotonic criteria, some transformation functions are introduced below. These functions are designed\nto guarantee that the sorting result for alternatives remain unchanged even after transformation.\nLet $v_j(.)$ and $V^S(\u00b7)$ denote the marginal value functions for the criterion $g_j$ and the overall marginal\nvalue function in the UTA-like functional space, respectively, then we have", "content": "$$V^S(.) = \\sum_{j=1}^m v_j^S(\u00b7)$$\n$$v_j^S (g_j^-) = 0, j \\in M$$\n$$\\sum_{j=1}^m v_j^S (g_j^+) = 1.\\eqno{(4)}$$\nwhere $g_j^-$ and $g_j^+$ are the performance levels corresponding to the minimum and maximum marginal values\nof the criterion $g_j$, $j\\in M$, respectively, and the superscript S denotes that the functions are in UTA-like\nstandard forms.\nMoreover, let $b^S = (b_0^S,b_1^S,...,b_q^S)^T$ be a category threshold vector in the UTA-like functional space,\nthen the following conditions should satisfy:\n$$b_0^S = 0, b_q^S = 1 + \\varepsilon^S$$\n$$b_h^S-b_{h-1}^S \\geq \\varepsilon^S, h \\in Q.\\eqno{(5)}$$\nwhere $\\varepsilon^S$ is an arbitrarily small positive number.\nAnalogously to Ghaderi et al. (2017) wherein a mapping function is proposed to address non-monotonic\nmarginal value functions in multi-criteria ranking problems, this paper defines some transformation functions\nthat convert marginal value functions in the non-monotonic functional space into that in a UTA-like standard\nform for MCS problems.\nDefinition 1. Let $v_j (.)$ denote the marginal value function of the criterion $g_j$, $j\\in M$, then the trans-\nformation function that converts the marginal value $v_j(x_{ij})$ into the UTA-like functional space is defined\nas"}, {"title": null, "content": "$$f_v(x_{ij}) = \\frac{v_j (x_{ij}) - v_j (g_j^-)}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))}, i \\in N, j\\in M.\\eqno{(6)}$$\nAccording to Definition 1, if $x_{ij} = g_j^-$, then we have $f_v(x_{ij}) = 0$; if $x_{ij} = g_j^+$, then we have $\\sum_{j=1}^m f_v(x_{ij}) =$$\n$\\frac{\\sum_{j=1}^m v_j (g_j^+) - v_j (g_j^-)}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))} = 1$. Therefore, the transformation function $f_v(\u00b7)$ ensures that marginal value functions\nafter transformation adhere to the UTA-like standard form.\nIn a similar manner, we define the function that maps the category thresholds in the original functional\nspace into the UTA-like functional space as follows.\nDefinition 2. Let $b = (b_0,b_1,..., b_q)^T$ be the category threshold vector in the original functional space,"}, {"title": null, "content": "then the function that maps a category threshold $b_h$ into the UTA-like functional space is defined as\n$$f_b(b_h) = \\frac{b_h - \\sum_{j=1}^m v_j (g_j^-)}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))}, h = 0, 1, ..., q.\\eqno{(7)}$$\nAccording to Definition 2, it is evident that when $b_h = \\sum_{j=1}^m v_j(g_j^-)$, we obtain $f_b(b_h) = 0$. Conversely,\nwhen $b_h = \\sum_{j=1}^m v_j(g_j^+)$, we have $f_b(b_h) = 1$. Furthermore, in accordance with the threshold-based value-\ndriven sorting procedure, we have $b_h -b_{h-1} \\geq \\varepsilon$, where $\\varepsilon$ is an arbitrarily small positive number. As a result,\nit follows that $f_b(b_h) - f_b(b_{h-1}) = \\frac{b_h-b_{h-1}}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))} \\geq  \\frac{\\varepsilon}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))}$. Let $\\varepsilon^S = \\frac{\\varepsilon}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))}$ since\n$f_b(b_h) - f_b(b_{h-1}) > \\varepsilon^S$, we can conclude that $b_h - b_{h-1} \\geq \\varepsilon$. \u03a4o summarize, it can be concluded that the\ntransformation function $f_b(\u00b7)$ ensures that the transformed category thresholds satisfy the basic conditions\noutlined in Eq. (5).\nProposition 1. By employing the transformation functions $f_v(\u00b7)$ and $f_b(\u00b7)$, the sorting result for alternatives\nremain unchanged after transformation.\nProof. Proposition 1 means that if the alternative $a_i$ is assigned to the category $C_h$, i.e., $b_{h-1} \\leq V(a_i) < b_h$,\nthen we have $b_{h-1}^S \\leq V^S(a_i) < b_h^S$. We first prove that $b_{h-1} \\leq V(a_i)$ is equivalent to $b_{h-1}^S \\leq V^S(a_i)$. In\nterms of Definitions 1 - 2, it is apparent that $V^S(a_i)-b_{h-1}^S = \\frac{\\sum_{j=1}^m v_j(x_{ij})-\\sum_{j=1}^m v_j(g_j^-)}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))} - \\frac{b_{h-1}-\\sum_{j=1}^m v_j(g_j^-)}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))} = \\frac{V(a_i)-b_{h-1}}{\\sum_{j=1}^m (v_j (g_j^+) - v_j (g_j^-))}$.\nConsequently, we obtain $V(a_i) - b_{h-1} \\geq 0 \\Leftrightarrow V^S (a_i) - b_{h-1}^S \\geq 0$. Analogously, it\nfollows that $V(a_i) - b_h < 0 \\Leftrightarrow V^S(a_i) -b_h^S < 0$. Therefore, we have that $b_{h-1} \\leq V(a_i) <b_h \\leftrightarrow b_{h-1}^S\\leq\nV^S(a_i) < b_h^S$. This completes the proof of Proposition 1.\nThe transformation functions introduced in this subsection enable us to convert marginal values and cat-\negory thresholds from the original functional space into the UTA-like functional space. This transformation\nsimplifies the modeling process for MCS problems with non-monotonic criteria.\n4.2. Modeling the non-monotonic criteria in MCS problems\nIn this subsection, we model the non-monotonic criteria in MCS problems by constructing some constraint\nsets based on the transformation functions proposed in Section 4.1.\nIn this paper, it is assumed that the decision maker provides assignment examples as his/her preference\ninformation, and the threshold-based value-driven procedure is employed for assigning alternatives. For a\nreference alternative $a_i \\in A^R$ with the category assignment $C_{B_i}$, the following constraint set can be utilized\nto model the decision maker's assignment example preference information:"}, {"title": null, "content": "$$\\begin{cases}\nV^S (a_i) \\geq b_{B_i-1}^S , \\forall a_i \\in A^R\\\\\nV^S (a_i) \\leq b_{B_i}^S -\\varepsilon^S , \\forall a_i \\in A^R.\\end{cases}\\eqno{(8)}$$\nFurthermore, some fundamental conditions of the threshold-based value-driven sorting procedure should\n8"}, {"title": null, "content": "be satisfied, i.e.,\n$$\\begin{cases}\nV^S (a_i) = \\sum_{j=1}^m v_j(x_{ij}), \\forall a_i \\in A^R\\\\v_j^S (g_j^-) = 0, j \\in M\\\\\\sum_{j=1}^m v_j^S (g_j^+) = 1\\\\v_j (X_{ij}) = v_j(\\beta_j^{l-1}) + \\frac{X_{ij} - \\beta_j^{l-1}}{\\beta_j^{l} - \\beta_j^{l-1}}(v_j(\\beta_j^{l}) - v_j(\\beta_j^{l-1})),\\\\if x_{ij} \\in [\\beta_j^{l-1}, \\beta_j^{l}], \\forall a_i \\in A^R, j \\in M\\\\b_0^S = 0, b_q^S = 1 + \\varepsilon^S\\\\b_h^S- b_{h-1}^S \\geq \\varepsilon^S, h\\in Q.\n\\end{cases}\\eqno{(9)}$$\nProposition 2. In terms of the transformation functions $f_v(\u00b7)$ and $f_b(\u00b7)$ proposed in Section 4.1, the con-\nstraint set $E^{AR^0}$ and $E^{Sort}$ can be equivalently converted into the following constraint sets $E^{AR^1}$ and $E^{Sort^1}$\nrespectively, i.e.,\n$$\\begin{cases}\nV(a_i) \\geq b_{B_i-1}, \\forall a_i \\in A^R\\\\\nV(a_i) \\leq b_{B_i} -\\varepsilon, \\forall a_i \\in A^R.\\end{cases}\\eqno{(10)}$$\n$$\\begin{cases}\nV(a_i) = \\sum_{j=1}^m V_j (X_{ij}), \\forall a_i \\in A^R\\\\V_j (X_{ij}) = V_j(\\beta_j^{l-1}) + \\frac{X_{ij} - \\beta_j^{l-1}}{\\beta_j^{l} - \\beta_j^{l-1}}(V_j(\\beta_j^{l}) - V_j(\\beta_j^{l-1})),\\\\if x_{ij} \\in [\\beta_j^{l-1}, \\beta_j^{l}], \\forall a_i \\in A^R, j \\in M\\\\b_0 = \\sum_{j=1}^m v_j(g_j^-), b_q = \\sum_{j=1}^m v_j(g_j^+) + \\varepsilon\\\\b_h - b_{h-1} \\geq \\varepsilon, h\\in Q.\n\\end{cases}\\eqno{(11)}$$\nProof. As per Proposition 1, we have that $b_{h\u22121} \\leq V(a_i) < b_h \\Leftrightarrow b_{h-1}^S \\leq V^S (a_i) < b_h^S$. Consequently, the\nconstraint set $E^{AR^0}$ can be converted into $E^{AR^1}$. Furthermore, By substituting $v_j (\u00b7)$ with $f_v(\u00b7)$, the fourth\nconstraint in $E^{Sort}$ can be equivalently replaced by the second constraint in $E^{Sort^1}$. This also leads to\nV(a_i) = \\sum_{j=1}^m V_j (X_{ij})$. Additionally, based on the transformation function $f_b(\u00b7)$, the last two constraints in\n$E^{Sort}$ can be transformed into the last two constraints in $E^{Sort^1}$. This completes the proof of Proposition\n2.\nThe constraint set $E^{sort^1}$ includes some variables $v_j (g_j^-), v_j (g_j^+)$ that are utilized to denote $b_0$ and\n$b_q$. However, accounting for potential non-monotonic criteria makes it challenging to directly represent $b_0$\nand $b_q$ without introducing additional binary variables. This could increase the model's complexity. As a\nresult, when formulating the representative sorting model, we omit the constraints $b_0 = \\sum_{j=1}^m v_j (g_j^-), b_q =$\n$\\sum_{j=1}^m v_j (g_j^+) + \\varepsilon$ from $E^{sort^1}$. It is important to note that such omissions do not impact the sorting result\nsince $b_0$ and $b_q$ are derived after obtaining the values of $v_j(\\beta_j^{l})$. Consequently, we can express the constraint\n9"}, {"title": null, "content": "sets $E^{AR"}], "follows": "n$$\\begin{cases}\nb_{B_i-1} \\leq V(a_i) \\leq b_{B_i} -\\varepsilon, if B_i \\in \\{2, . . ., q - 1\\}, \\forall a_i \\in A^R\\\\\nV(a_i) \\leq b_1 -\\varepsilon, if B_i = 1, \\forall a_i \\in A^R\\\\\nV(a_i) \\geq b_{q-1}, if B_i = q, \\forall a_i \\in A^R.\\end{cases}\\eqno{(12)}$$\n$$V(a_i) = \\sum_{j=1}^m V_j (X_{ij}), \\forall a_i \\in A^R$$\n$$V_j (X_{ij}) = v_j(\\beta_j^{l-1}) + \\frac{X_{ij} - \\beta_j^{l-1}}{\\beta_j^{l} - \\beta_j^{l-1}}(V_j(\\beta_j^{l}) - V_j(\\beta_j^{l-1})),$$\n$$if x_{ij} \\in [\\beta_j^{l-1}, \\beta_j^{l}], \\forall a_i \\in A^R, j \\in M\\eqno{(13)}$$\n$$b_h - b_{h-1} \\geq \\varepsilon, h = 2, ..., q - 1.$$\nFurthermore, when modeling the non-monotonic criteria in MCS problems, it is typically desirable to\nbound the solution space of the marginal"}