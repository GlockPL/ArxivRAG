{"title": "A Logic for Policy Based Resource Exchanges in Multiagent Systems", "authors": ["Lorenzo Ceragioli", "Pierpaolo Degano", "Letterio Galletta", "Luca Vigan\u00f2"], "abstract": "In multiagent systems autonomous agents interact with each other to achieve individual and collective goals. Typical inter-actions concern negotiation and agreement on resource exchanges. Modeling and formalizing these agreements pose significant chal-lenges, particularly in capturing the dynamic behaviour of agents, while ensuring that resources are correctly handled. Here, we pro-pose exchange environments as a formal setting where agents specify and obey exchange policies, which are declarative statements about what resources they offer and what they require in return. Further-more, we introduce a decidable extension of the computational frag-ment of linear logic as a fundamental tool for representing exchange environments and studying their dynamics in terms of provability.", "sections": [{"title": "1 Introduction", "content": "Multiagent systems represent complex environments where au-tonomous agents interact to achieve individual and collective goals. Central to these interactions is the concept of resource exchange, which requires agents to negotiate and reach an agreement about the allocation of resources. Modeling and formalizing these agree-ments pose significant challenges to capture the behaviour of agents, in particular for ensuring that resources are allocated profitably for the agents involved in exchanges. Besides AI, the study of such mod-els has an effect on a broad spectrum of research domains, ranging from cooperative problem-solving to sharing economy scenarios. In cooperative problem-solving, the allocation of resources to agents is essential for enabling each agent to fulfill its assigned tasks effec-tively. In a typical sharing economy scenario, a community of users rely on a digital platform to foster collaboration and to share and transfer to each other resources and assets via peer-to-peer transac-tions. Dynamic resource management has been addressed from di-verse perspectives, including the design of negotiation and optimiza-tion strategies, game-theoretical analysis and logics. In particular, the last approach emphasizes the development of frameworks to repre-sent and study resource allocation and negotiation in multiagent sys-tems, leveraging logic as a fundamental tool for this purpose. Here, we follow the logical approach, and provide a twofold contribution. First, we introduce the notion exchange environment to formalize a multiagent system that aims to model both cooperative and com-petitive behavior. An exchange environment is a transition system, where states record the ownership of the resources, and transitions represent resource exchanges between agents, who can form coali-tions. Furthermore, exchanges are constrained by declarative state-ments, called exchange policies, which agents specify in isolation to prescribe what resources they offer and what they require in re-turn (examples are in Section 2). Using such policies, agents regulate competitiveness and foster cooperation. The exchanges in a transition must guarantee that each participant gives the promised resources and gets the required ones, namely it is an agreement. In addition, we consider agent's evaluation functions, and charac-terize when each permitted exchange is beneficial to all the agents of a coalition, namely it is a deal. Our second contribution is checking that a resource exchange is a deal. To achieve that, it suffices to in-spect all the rules of a policy and to check that the utility value of the obtained resources is greater than that of those given away. Moreover, a crucial issue arises when verifying that the policies of all the participants are met, i.e. the exchange is an agreement. Agreements may be circular, as it is typical of human and of virtual contracts. To address this issue, we extend the computational frag-ment of linear logic to obtain Computational Exchange Logic, CEL for short. This logic handles circularity through a specific operator, called linear contractual implication, inspired by PCL [3]. To the best our knowledge, CEL is the first logic that combines linear and contractual aspects. Every exchange $exc$ is then encoded as a CEL formula, and verifying that $exc$ is indeed an agreement is reduced to proving the corresponding formula. This procedure is effective be-cause the validity of CEL formulas is decidable, which is another main technical result of ours. Another advantage of CEL is that it provides us with the means to consider as legal sequences of exchanges where an agents can con-tract temporary debts by offering resources that they do not currently have, but will acquire in a subsequent exchange. Remarkably, the cut rule of the logic suffices to handle debts. We proceed as follows. Section 2 presents a running example. We formalize exchange environments, policies and their relation with valuation functions in Section 3. Our logic CEL is in Section 4, and its extension to deal with debts in Section 5. Finally, Section 6 presents related works and Section 7 draws conclusions. The appen-dices contain the full proofs."}, {"title": "2 Working examples and exchange policies", "content": "Consider three agents Alice, Bob and Carl (abbreviated A, B and C). Let their set of resources consists of kiwis, lemons and mandarins (written k, l and m). Assume agents freely form a coalition and interact by exchanging resources among them to obtain others more valuable for them. Instead of directly bargaining one with the others, agents define their policies in advance whose application is automatic: an agent accepts to perform an exchange if and only if it obeys her policy. Our goal is twofold: (1) to propose a model rich enough to handle the circular reasoning needed for resolving the conditions expressed by the poli-cies; and (2) to guarantee that the policy of a coalition accepts an exchange if and only if it advantages its members.\nExample 1. Assume A(lice) prefers k(iwis) over l(emons), while B(ob) preferences are opposite. Assume also that A accepts to per-form exchanges with B. Then, A's policy includes a rule stating that she wills to exchange kiwis for lemons with B. Say that B accepts exchanges with A as far as he gets l in return for k from someone. Their policies can be roughly described as the following statements, which permit the direct exchange depicted in Figure 1a:\nA1 I give B a l if I get a k in return from him;\nB1 I give A a k if I get a l in return.\nDirect exchanges can be composed, e.g. A and B can exchange two fruits at a time. However, not every agreement involves two parts only: circular agreements allow agents to perform exchanges that cannot be expressed as combination of direct exchanges.\nExample 2. Assume A accepts to exchange a k for a l, B a m(andarin) for a k, and C a l for a m. Their policies include:\nA2 I give any agent a k if I get a l in return;\nB2 I give any agent a m if I get a k in return;\nC1 I give any agent a l if I get a m in return.\nSuppose that A, B, C have each a single k, m, and l, and want a l, a k, and a m, respectively. No exchange between two agents satisfies their policies at the same time. But a circular exchange as in Fig-ure 1b can take place, where each agent gives something to another and is payed by a third one so that all of them are satisfied at the end. It is not always the case that an agent wants something in return for herself: resources can be given for free (e.g. if their value is less than zero for the owner) or for helping someone else, e.g. a member of the same coalition.\nExample 3. Assume A and C are in a coalition: A accepts to pay a m to everyone who gives a k to C, and C accepts to give a l in return for any k given to A. The policy of their coalition includes\nAC1 A gives you a m if you give a k to C in return;\nAC2 C gives you a l if you give a k to A in return.\nSince B accepts to exchange k for l (rule B1), the exchange in Fig-ure 1c can occur: B is happy to receive a l for a k, A to receive k, and C to pay for her (in the rules, \"you\" stands for any agent). So far we have only evaluated exchanges in terms of satisfaction of agent's policies. However, another constraint is put on exchanges: an agent $a$ offering a resource $r$ must possess it before getting the wanted resource. In Section 5, we show that $a$ can still obtain what she wants, incurring a temporary debt that is paid back by acquiring $r$ by some other agent.\nExample 4. Assume that B and A want to exchange a l for two m of B. Their policies then contain the rules:\nA3 I give B a l if he gives me two m in return;\nB3 I give A two m if she gives me a l in return.\nA direct exchange can take place, if both have the needed resources, but assume that A has no l and m. A can however perform an ex-change with C (allowed by rule C1) incurring a temporary debt of 1, that is given to B to obtain two ms, and pay the debt."}, {"title": "3 Policy Based Exchange Environments", "content": "In this section, we first introduce the notion of exchange environ-ment as a formal model of scenarios where agents join coalitions and exchange resources according to their preferences and goals. This model is a transition system where states are resources allocations and transitions are resource exchanges between agents of a coalition. Then, we introduce the notion of exchange policies that are state-ments defined by coalitions in isolation to express what they offer to others and what they want in return. The transitions must obey the policies of the involved agents and we call them agreements. More-over, we introduce the notion of valuation function to capture the utility that a given resource allocation has for each agent. We char-acterize then a deal as an exchange that increases the utility for the agents of a coalition, and a policy as rational when it leads to deals.\n3.1 Exchange Environments\nBelow, we assume the following finite sets: a set $R$ of resources, ranged over by $r,r', r''$ each associated with a (fixed) quantity $q(r) \\in \\mathbb{N}$; a set $A$ of agents, ranged over by $a, a', a''$. We start by defining resource allocations. Intuitively, they specify the resources each agent owns under the condition that we cannot assign more resources than the available ones. Formally,\nDefinition 1 (Resource Allocation). A resource allocation $st$ is a function associating each agent with a multiset of $R$ such that $\\sum_{a \\in A} st(a)(r) = q(r)$.\nNext, we introduce the notions of transfer and exchange. A trans-fer occurs when a agent $a$ sends her resource $r$ to another agent $a'$. An exchange is a finite multiset of transfers. Then, we define an ex-change environment as a transition system with allocations as states and exchanges as transitions.\nHereafter we use multisets, i.e. sets with many occurrences of the same object. As usual, we represent multisets by functions $f, g,...$ from each element to the natural number of its occurrences in the multiset. Also, the disjoint union for multisets $(f \\uplus g)(x)$ is defined as $f(x) + g(x)$ for every $x$ in the domain. For simplicity, we carry the set notation over multisets."}, {"title": "3.2 Exchange Policies", "content": "So far, agent intents play no role, and thus there is no guarantee that a transition of the exchange environment complies with their pref-erences. We propose an operational characterization of these prefer-ences via exchange policies where each policy specifies under which conditions an agent accepts an exchange. The next subsection also introduces valuation functions to provide a quantitative measure of exchanges, associating each allocation with a utility value for each agent. As common in real world, agents can join coalitions, i.e. sets of agents that define shared policies to obtain mutual benefits. Coali-tions define their policies in isolation, and rely on them to perform decisions about exchanges. Roughly, an exchange policy is a set of exchange rules, written $exc < exc'$ to be read as follows: the agents in the coalition are will-ing to perform the exchanges $exc$ in return for the exchange $exc'$. Of course, it is not possible to promise transfers on behalf of agents not in the coalition. The exchange policy determines whether an exchange requires the pay-off to be given directly to the agent who gives away some resources or to another agent in the coalition, there-fore allowing some agent to pay for others (and to accept that others are paying for them). Formally:\nDefinition 3 (Exchange Rules and Policies). Given a coalition $C \\subseteq A$, an exchange rule is a pair $exc < exc' \\in Exc \\times Exc$ such that for all $a \\xrightarrow[]{r} a' \\in exc$ and for all $a' \\xrightarrow[]{r'} a \\in exc'$, $a \\in C$. The exchange policy $pol_C$ of $C$ is a set of exchange rules. The simplest policies are for single agents (i.e. singleton coali-tions) giving resources for something in return.\nExample 5. We restate the rule A1 of the example above, i.e. A wants to exchange $l$ resources with B for $k$.\n$pol_{\\{A\\}} \\supseteq \\{ \\{ A \\xrightarrow[]{l} B \\} < \\{ B \\xrightarrow[]{k} A \\} \\}$\nThe rule B1 is more general, as B does not care who is paying him.\n$pol_{\\{B\\}} \\supseteq \\bigcup_{a,a' \\in A} \\{ \\{ B \\xrightarrow[]{k} A \\} < \\{ a \\xrightarrow[]{l} B \\} \\}$\nFinally, in C1, C accepts to perform exchanges with everybody.\n$pol_{\\{C\\}} \\supseteq \\bigcup_{a,a' \\in A} \\{ \\{ C \\xrightarrow[]{m} a \\} < \\{ a' \\xrightarrow[]{l} C \\} \\}$\nThe same is also true for the rules A2 and B2.\n$pol_{\\{A\\}} \\supseteq \\bigcup_{a,a' \\in A} \\{ \\{ A \\xrightarrow[]{l} a \\} < \\{ a' \\xrightarrow[]{k} A \\} \\}$\n$pol_{\\{B\\}} \\supseteq \\bigcup_{a,a' \\in A} \\{ \\{ B \\xrightarrow[]{k} a \\} < \\{ a' \\xrightarrow[]{l} B \\} \\}$"}, {"title": "3.3 Policies and Valuation Functions", "content": "We now characterize when a coalition increases its evaluation of an assignment through an agreement. First, each resource is assigned a value by each agent $a$, using which $a$ gets the overall value of an assignment. Note that the following definition introduces special valuation functions that are called additive in [16].\nDefinition 6. Let $ava: A \\times R \\rightarrow \\mathbb{Z}$ represent the (positive or negative) value that the agent $a$ associates with the case that $a'$ holds a resource $r$. The valuation function $va: St \\rightarrow \\mathbb{Z}$ of the agent $a$ is the function $va(st) = \\sum_{a' \\in A} \\sum_{r \\in R} st(a')(r) \\cdot ava(a', r)$.\nDefinition 7 (Deal). Given a coalition $C$ and an exchange $exc$, let $exc \\downarrow C = \\{ a_1 \\xrightarrow[]{r} a_2 \\in exc | a_1 \\in C \\lor a_2 \\in C \\}$. Then $excc$ is a deal for $C$ if and only if $a \\in C$ all the transitions $st \\xrightarrow{exc \\downarrow C} st'$ are such that $va(st') \\geq va(st)$.\nTheorem 1 (Policies and deals). Let $C$ be a coalition and let $exc$ be an exchange accepted by $pol_C$. If every $exc'' < exc' \\in pol$ is such that $a \\in C. W(a, exc'' \\uplus exc') > 0$, then $exc$ is a deal for $C$, where $W(a, \\{ a_i \\xrightarrow[]{r_i} a_i' \\}_{i \\in I}) = \\sum_{i \\in I} (ava(a'_i, r_i) - ava(a_i, r_i))$. An immediate consequence of Theorem 1 is that a policy is sound, in that it accepts only deals for $C$ if its rules $exc' < exc$ are such that the increment of value granted by its payoff $exc'$ is greater than the loss of its contribution $exc$. One would like to have in addition that the policy $pol$ accepts all the deals for $C'$, a sort of completeness. If both cases hold, one has the so-called rational policies. While Theorem 1 suggests an easy way of checking a policy sound, verifting it is complete may require a brute force analysis in the case of finite resources. Also, one can build one (out of the equiv-alent) less restrictive correct policy, namely a rational one, starting from the valuation function in hand, because the proof of the fol-lowing theorem is constructive. The idea is to split an $exc \\downarrow C$ in all possible pairs $exc'', exc'$ such that their weight $W$ is non negative and insert the rule $exc''< exc'$ in the policy $pol_C$. Theorem 2. Given the valuation functions of all the agents of a coalition $C$, there exists a rational policy for $C$. Even when the policies of all the coalitions are rational, it is not always the case that a transition is a deal for every coalition. E.g. let $C = \\{a_1, a_2\\}$ and $C' = \\{a_1', a_2'\\}$ be two disjoint coalitions and let $a_1$ and $a_1'$ exchange some resources with $a_2$ and $a_2'$, respectively. Even if the gain of $a_1$ performing the exchange with $a_2$ is positive for C, it may be less than the loss of value for $a_1$ caused by $a_1'$ and $a_2'$ performing their exchange. This is never the case with special valua-tion functions, through which an agent assigns the same value to all the resources that does not belong to her. In this case an agreement, which is also a deal, causes a quasi-Pareto improvement, because the value of the allocation does not decrease for all agents. Theorem 3. If every policy is rational and $ava(a', r) = k_a$ for some fixed $k_a \\in \\mathbb{Z}$ when $a \\neq a'$, then each transition $st \\xrightarrow{exc} st'$ with $exc$ an agreement is such that $va(st') \\geq va(st)$ for all $a$."}, {"title": "4 A Logic for Characterizing Agreements", "content": "So far, we have characterised agreements at the basic level of ex-change environments and coalition policies. We develop now a linear logic for modeling exchange environments, policies and agreements, and reduce the check of an exchange being an agreement to the va-lidity of the sequent modelling it. We choose linear logic for its unique features to declaratively rep-resent resources and their usage. In this view, resources are repre-sented as logical assumptions in a proof, and each of them can only be used once and only once during the proof: resources can neither be duplicated nor thrown away at will. A deduction in the logic mod-els the way resources are manipulated, and this is convenient in our approach to formalize exchange environments and their behaviour.\n4.1 Contractual Exchange Logic\nTo define Contractual Exchange Logic (CEL) we start from a compu-tational fragment of linear logic, following [9], and we then extend it with a new operator, inspired by PCL [3], to express the typical offer/return actions of contracts.\nDefinition 8 (CEL Propositions). A CEL proposition $\\phi$ is defined as\n$\\phi ::= \\sigma | \\delta \\multimap \\theta | \\omega | \\xi$$\\delta ::= I | r@a | r@a \\otimes r@\\alpha | \\delta \\otimes \\delta$$\\xi ::= !\\delta | \\xi \\coppa \\xi$$\\sigma ::= \u0399 | r@a | \\sigma \\otimes \\sigma$$\\theta ::= 1 | \\delta \\coppa \\delta | \\theta \\otimes \\theta$$\\omega ::= !\\theta | \\omega \\coppa \\omega$\nWe denote multisets of propositions using (the corresponding) Greek capital letters: $\\Phi, \\Sigma, \\Delta, \\Theta, \\Xi, \\Omega$. We refer to the common resource-based interpretation of linear logic for describing the intuitive meaning of the propositions above. In this interpretation $r@a$ stands for a resource association, meaning that $r$ currently belongs to the agent $a$. A predicate $r@a \\multimap r'@a'$ is a consumable processes (they can run only once) transforming the atomic $r@a$ into $r'@a'$. Predicates of the form $\\delta \\multimap \\delta'$, com-posed with our new operator called linear contractual implication, are promises stating that $\\delta'$ will be performed if also $\\delta$ is. Finally, $\\omega$ and $\\coppa$ represents (non-linear) information about promises and pro-cesses that can be used ad libitum, and tensor product allows com-posing multisets of previous entities, where I (representing true in linear logic) is the empty multiset. The CEL sequents are as follows.\nDefinition 9 (CEL Sequent). A CEL sequent is of form\n$\\Omega, \\Xi, \\Theta, \\Delta, \\Sigma \\vdash \\Phi$.\nA sequent is initial if $\\Delta = \\Theta = 0$ and $\\Phi = \\sigma$ for some $\\sigma$, i.e. if it has the form $\\Omega, \\Xi, \\Sigma \\vdash \\sigma$ (we omit hereafter the empty components). The CEL sequent $\\Xi, \\Omega, \\Theta, \\Delta, \\Sigma \\vdash \\sigma$ intuitively means that the state $\\sigma$ is a possible transformation of $\\Sigma$ using the processes and promises in the assumptions $\\Xi, \\Omega, \\Theta, \\Delta$. The deduction system for $\\vdash$ are in Figure 2. They mostly result from instantiating the standard ones of the multiplicative fragment of linear logic on the CEL sequents. Note that we omit the cut rule in this fragment. In addition there are two rules for the linear contractual implication: the ($\\multimap$-left) rule introduces the operator on the left if what is required by the contract is satisfied by the consequences; the ($\\multimap$-split) rule deals with composition of contracts."}, {"title": "4.2 Deriving Transitions of Exchange Environments", "content": "In the following we show how to encode exchange environments and policies as CEL propositions.\nDefinition 11. We write $\\phi^n$ with $n \\in \\mathbb{N}$ for the tensor product of $n > 0$ instances of the proposition $\\phi$, meaning I if $n = 0$.\n$(st) ::= \\bigotimes_{a \\in A, r \\in R} (r@a)^{st(a)(r)}$\n$(exc) ::= \\bigotimes_{a, a' \\in A, r \\in R} (r@a \\multimap r@a')^{exc(a \\xrightarrow[]{r} a')}$\n$(pol_C) ::= !(\\bigotimes_{excc' \\xrightarrow[]{} exc \\in pol_C} ((exc') \\multimap (exc)))$\nExample 9. Consider a state $st$ with three agents A, B, and C owning a k, a m and an l, respectively. Then its encoding is as follows:\n$(st) = k@A \\otimes m@B \\otimes l@C$\nThe encoding of $exc = \\{ A \\xrightarrow[]{k} B, B \\xrightarrow[]{m} C, C \\xrightarrow[]{l} A \\}$ is\n$(exc) = (k@A \\multimap k@B) \\otimes (m@B \\multimap m@C) \\otimes (l@C \\multimap l@A)$\nFinally, suppose that the policies $pol_{\\{A\\}}$, $pol_{\\{B\\}}$, $pol_{\\{C\\}}$ contain only the rules A2, B2 and C1 in Example 5, respectively. Their en-coding follows.\n$(pol_{\\{A\\}}) = !(\\bigotimes_{a,a' \\in \\{B,C\\}} ((l@a \\multimap l@A) \\multimap (k@A \\multimap k@a')))$\n$(pol_{\\{B\\}}) = !(\\bigotimes_{a,a' \\in \\{A,C\\}} ((k@a \\multimap k@B) \\multimap (m@B \\multimap m@a')))$\n$(pol_{\\{C\\}}) = !(\\bigotimes_{a,a' \\in A} ((m@a \\multimap m@C) \\multimap (l@C \\multimap l@a')))$\nThe following sequent is valid, as shown in the proof in Figure 3\n$(pol_{\\{A\\}}), (pol_{\\{B\\}}), (pol_{\\{C\\}}), (st) \\vdash k@B \\otimes m@C \\otimes l@A$\nNote that $exc$ is an agreement labelling the transition $st \\xrightarrow{exc} st'$ where $(st') = k@B \\otimes m@C \\otimes l@A$. In the theorem below the current allocation $st$ and the policies $pol$ determine the left part of an initial sequent, while the right part is for the candidate next allocation $st'$. Then, a transition $st \\xrightarrow{exc} st'$ where $exc$ is an agreement exists if and only if the obtained initial sequent is valid. Note that this result implies that CEL proofs are witnesses for fairness of exchanges.\nTheorem 8. Let $(St, \\rightarrow)$ be an exchange environment; let $st, st' \\in St$; and let $pol_C$ be the policies of the coalition $C$. Then $\\bigotimes_{C \\in 2^A} (pol_C), (st) \\vdash (st')$ is valid if and only if there exists an agreement $exc$ such that $st \\xrightarrow{exc} st'$. The proof is carried on in three steps. First, we note that a proof for $\\bigotimes_{C \\in 2^A} (pol_C), (st) \\vdash (st')$ can always be transformed in one in the normal form 2, where $\\Xi = \\Delta = 0$. Then we show that the deriva-tions $\\Pi_1$, $\\Pi_2$ and $\\Pi_3$ exist whenever $\\delta = (exc)$ for some $exc$ that is an agreement. Finally, a proof $\\Pi_4$ exists for $(exc), (st) \\vdash (st')$ if and only if $st \\xrightarrow{exc} st'$ is a transition of the exchange environment."}, {"title": "5 Extending CEL with debts", "content": "So far, we have only considered exchanges where no debts are per-mitted: an agent must possess a resource she promises as required by condition (1) of Definition 2. In case agents trust each other or there is a regulating trusted third party, it is possible to extend our model and logic to consider a wider class of transitions, as that in Exam-ple 4. This requires updating the exchange environments by weaken-ing the condition (1), allowing an agent to incur a temporary debt.\nDefinition 12. An exchange environment with debts is $(St, \\rightarrow_d)$ with $St$ defined as in Definition 2, and $\\rightarrow_d \\subseteq St \\times Exc \\times St$ contains the triples $st \\xrightarrow{exc} st'$ if and only if for all $a \\in A$ and $r \\in R$ both (2) from Definition 2 and the following hold\n$\\sum_{a' \\in A} exc(a \\xrightarrow[]{r} a') \\leq st(a)(r) + \\sum_{a' \\in A} exc(a' \\xrightarrow[]{r} a)$\nFor brevity, we write below $ok \\subseteq St \\times St$ for the transition in-duced by agreements only: $st \\xrightarrow{ok} st'$ if and only if $st \\xrightarrow{exc} st'$ for some agreement $exc$. As a matter of fact, in an exchange environ-ment, every pair of allocations are connected by a transition, but not by one labelled by an agreement. Now, we similarly filter $\\rightarrow_d$ and de-fine $\\rightarrow_{d,ok}$ to be the transition relation in an exchange environment with debits for which a fair exchange exists. Note that some allo-cations reachable with these transitions cannot be reached without permitting debits, i.e. $\\xrightarrow{ok} \\neq \\xrightarrow{d,ok}$\nExample 10. Consider again Example 4, where B and A want to exchange a l for two m of B. Assume that the current assignment st is such that A has nothing, B has two m and C has one l. The relevant policy rules are A3, B3, C1:\n$pol_{\\{A\\}} \\supseteq \\{ \\{A \\xrightarrow[]{l} B\\} < \\{B \\xrightarrow[]{m} A \\} \\}$\n$pol_{\\{B\\}} \\supseteq \\{ \\{B \\xrightarrow[]{m} A, B \\xrightarrow[]{m} A\\} < \\{A \\xrightarrow[]{l} B\\} \\}$\n$pol_{\\{C\\}} \\supseteq \\bigcup_{a, a' \\in A} \\{ \\{C \\xrightarrow[]{l} a\\} < \\{a' \\xrightarrow[]{m} C\\} \\}$\nThe exchange $exc = \\{C \\xrightarrow[]{l} A, A \\xrightarrow[]{l} B, B \\xrightarrow[]{m} A, B \\xrightarrow[]{m} A\\}$ depicted in Figure 1d is forbidden in st using exchange environments without debts, since A has no ls. Instead, the transition $st \\xrightarrow{exc} st'$ results in the state $st'$ where A and C have each a m, and B a l. Note that the transfer $A \\xrightarrow[]{l} B$ causes a temporary debt of A, which is repaid with the transfer $C \\xrightarrow[]{l} A$. Again logic comes to our rescue for deciding if a transition in an exchange environment with debts is an agreement. This is done by adding the rule (Cut) in Figure 4. Consequently, we extend the corre-spondence between exchange environments and CEL in presence of debts through the following corollary of Theorem 8.\nCorollary 9. Under the same conditions of Theorem 8, a transition $st \\xrightarrow{d,ok} st'$ exists, if and only if $\\bigotimes_{C \\in 2^A} (pol_C), (st) \\vdash (st')$ is valid in CEL augmented with the (Cut) rule. Decidability of CEL is not affected by the (Cut) rule.\nCorollary 10. An always-terminating algorithm exists that decides if an initial sequent is valid in CEL augmented with the (Cut) rule."}, {"title": "6 Related Work", "content": "The problem of fairly exchanging electronic assets among a set of agents has been addressed by different communities, e.g. artificial in-telligence, fair exchange protocols in distributed systems [2, 4, 5, 6]. Below, we focus on those approaches that use linear logic to capture these issues, and we conclude with a comparison with logics having contractual aspects.\nLogical Modelling of Resource Exchange Linear logic has been used to model resource-aware games and problems in the artificial in-telligence community. They all describe the desire of agents in terms of their goals or valuation functions, and derive or recognise reason-able offers and strategies. A contribution of ours is instead a way of directly modelling what agents offer via exchange policies, combin-ing a descriptive approach and a prescriptive one. Harland et al. [8] show how linear logic enables reasoning about negotiations, encoding agents' goals and what they offer. Linear logic proofs recognise the negotiation outcomes that satisfy all parties. K\u00fcngas et al. [12, 11] propose a model of cooperative problem solving, and use linear logic for encoding agents' resources, goals and capabilities. Then, each agent determines whether she can solve the problem in isolation. If she cannot, then she starts negotiating with other agents in order to find a cooperative solution. Partial de-duction [10] is used to derive possible deals. The authors of [13, 14] extend their work by considering coalition formation. Porello et al. [16] target distributed resource allocation. They en-code resource ownership and transfers, as well as valuation func-tions representing user preferences in (various fragments of) linear and affine logic. They show how logic proofs discriminate mutually satisfactory exchanges that increase the value of the assignment for every user, thus recovering a notion of social welfare in terms of Pareto optimality. Since the valuation functions of users used to de-cide exchanges are assumed known, offers and negotiation are not modeled. They prove that any sequence of individually rational deals will always converge to an allocation with maximal social welfare, as known from [17]. In contrast, we directly encode the user exchange policies. Afterward we further constrain the exchanges compliant with policies with valuation functions obtaining deals. Moreover, we extend the computational fragment of linear logic with a contractual implication and we prove decidability results. Troquard [18] models the interaction of resource-conscious agents who share resources to achieve their goals in cooperative games. Al-gorithms are proposed for deciding whether a group of agents can form a coalition and act together in a way that satisfies them all. Vari-ous problems concerning cooperative games are modelled in suitable fragments of linear and affine logic and their computational com-plexity is discussed. Our focus is instead on resource exchanges, and our context is a mixture of cooperative and competitive behaviour. In a subsequent work, Troquard [19] studies how a central authority can modify the set of Nash equilibria in a cooperative game by redis-tributing the initial assignment of resources to agents. The complex-ity of this optimization problem is discussed in terms of the chosen (fragment of) resource-sensitive logic.\nContractual logics We formalised the contractual aspects follow-ing the pioneering PCL proposed by Bartoletti and Zunino [3], which is a logic for modelling contractual reasoning. Our operator is ac-tually a linear version of their $\\looparrowright$. The main difference with respect to PCL is that from the premise $p \\multimap p',p' \\multimap p$ one can derive $p, p'$, and $p \\land p'$. Instead, in CEL only the conjunction $p \\land p'$ can be derived from the premise $p \\multimap p', p' \\multimap p$. The syntactic form of CEL sequents is inspired by Kanovich [9], who proposed a compu-tational fragment of linear logic for reasoning on computations with consumable resources."}, {"title": "7 Conclusions and future work", "content": "We introduced exchange environments as a formal model for scenar-ios where agents join coalitions and exchange resources to achieve individual and collective goals. Our model is a transition system where states are resource allocations to agents and transitions are labelled by the exchanged resources. Moreover", "cooperation": "agents prescribe in isolation what they offer and what they require in return. We characterised the notion of agreement as a resource exchange where the policies of all the involved agents are met. Since agree-ments are often circular, checking an exchange to be such is crucial and hard. For that, we extended the computational fragment of linear logic with a new operator that handles both contracts and circularity. The resulting logic, called CEL, is decidable (Theorem 7), so check-ing that an exchange is an agreement is reduced to finding a proof for its encoding in CEL. We also modeled the case in which an agent incurs a temporary debt that is paid with resources she can obtain dur-ing the same exchange. Extending our logic with the cut rule sufficed to handle these cases, still maintaining decidability (Corollary 10). In addition, we formalised when an agreement is beneficial to all the agents of a coalition, dubbed a deal, allowing agents to assign a utility value to resource allocations. Checking that a resource ex-change is a deal consists in showing that the utility value of the of-fered resources is less than that of those required back (Theorem 1). We also showed that there exists a rational policy, i.e. accepting all and only the deals for a coalition (Theorem 2), and characterized those that guarantee to reach a Pareto increment (Theorem 3). Future"}]}