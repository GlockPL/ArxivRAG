{"title": "A Novel Self-Attention-Enabled Weighted Ensemble-Based Convolutional Neural Network Framework for Distributed Denial of Service Attack Classification", "authors": ["Kanthimathi S", "Shravan Venkatraman", "Jayasankar K S", "Pranay Jiljith T", "Jashwanth R"], "abstract": "Distributed Denial of Service (DDoS) attacks are a major concern in network security, as they overwhelm systems with excessive traffic, compromise sensitive data, and disrupt network services. Accurately detecting these attacks is crucial to protecting network infrastructure. Traditional approaches, such as single Convolutional Neural Networks (CNNs) or conventional Machine Learning (ML) algorithms like Decision Trees (DTs) and Support Vector Machines (SVMs), struggle to extract the diverse features needed for precise classification, resulting in suboptimal performance. This research addresses this gap by introducing a novel approach for DDoS attack detection. The proposed method combines three distinct CNN architectures: SA-Enabled CNN with XGBoost, SA-Enabled CNN with LSTM, and SA-Enabled CNN with Random Forest. Each model extracts features at multiple scales, while self-attention mechanisms enhance feature integration and relevance. The weighted ensemble approach ensures that both prominent and subtle features contribute to the final classification, improving adaptability to evolving attack patterns and novel threats. The proposed method achieves a precision of 98.71%, an F1-score of 98.66%, a recall of 98.63%, and an accuracy of 98.69%, outperforming traditional methods and setting a new benchmark in DDoS attack detection. This innovative approach addresses critical limitations in current models and advances the state of the art in network security.", "sections": [{"title": "I. INTRODUCTION", "content": "Network security is significantly threatened by DDoS attacks, targeting various online services and systems. It is a cyber-attack where genuine applications are denied from accessing network services [1]. These attacks overwhelm the targeted system with an excessive volume of traffic, effectively making it unavailable to legitimate users. DDoS attacks utilize a collection of compromised devices, often termed as zombies or bots, to overwhelm network infrastructure services with excessive traffic, aiming to disrupt normal operations [2]. Maintaining network service availability and integrity relies on detecting and mitigating these attacks. Conventional methods of detecting DDoS attacks, such as signature-based detection and rate-limiting techniques, are often ineffective against sophisticated and evolving attack strategies [3]. This is because these methods fail against evolving DDoS attacks since attackers frequently modify their tactics, making it difficult to recognize predefined patterns or maintain thresholds. These static defenses cannot adapt to dynamic and novel attack vectors, leaving systems vulnerable. DDoS Attacks continue to pose significant challenges to the security of Internet of Things (IoT) devices. There has been a formidable increase in the severity and frequency of DDoS Attacks in recent years [4]. According to Yandex and Qrator Labs, individuals were denied access to online resources of non-profit and various commercial organizations [5]. ML-based approaches offer a promising solution by enabling the detection of anomalies in network traffic patterns indicative of DDoS attacks.\nThere are two primary ways by which we can detect and prevent DDoS Attacks Anomaly-based and Signature- based detection methods [6]. Signature-based detection methods can only detect previously known attacks and they cannot detect novel or unknown attacks where the signature is not previously known [7]. However, there are studies that show that signature-based detection methods like Snort are able to detect zero-day attacks but with a significantly lower detection rate compared to theoretically known attacks [8]. Anomaly-based detection method can detect"}, {"title": "II. RELATED WORKS", "content": "Gaur et al. [16] proposed a hybrid methodology aimed at the early detection of DDoS attacks on IoT devices, addressing the ongoing challenge of quickly diagnosing such attacks. The research focuses on enhancing the performance of ML classifiers by applying feature selection methods like Extra Trees, ANOVA, and chi-square on classifiers such as XGBoost, K-Nearest Neighbors, Decision Tree, and Random Forest. Utilizing the CICDDoS2019 dataset, the study demonstrated that combining XGBoost with ANOVA resulted in a significant feature reduction of 82.5% while achieving an accuracy of 98.34%. However, due to poor model inference capabilities, the study's reliance on a specific dataset and classifiers limits its generalizability across diverse IoT environments. Future work suggested includes tuning hyperparameters to enhance the detection accuracy further, thereby mitigating potential issues of overfitting and underfitting.\nTuan et al. [17] proposed an evaluation of various machine learning algorithms for detecting Botnet DDoS attacks, a significant and sophisticated threat to network security. The study assessed the performance of algorithms such as Unsupervised Learning (USML), Decision Tree (DT), Na\u00efve Bayes (NB), Artificial Neural Network (ANN), and Support Vector Machine (SVM) on two prominent datasets, UNBS-NB 15 and KDD99, using metrics like accuracy, false alarm rate, and specificity. The results indicated that USML outperformed other methods in distinguishing between Botnet and normal network traffic, particularly on the KDD99 dataset. However, the study's focus on a limited number of datasets and attack types restricts its applicability to other scenarios. Future work suggests exploring additional datasets and introducing new ML algorithms based on neutrosophic theory for more targeted attack detection.\nCan et al. [18] proposed a model for detecting and classifying DDoS attacks, focusing on the challenges posed by class imbalance in datasets. The research introduced a neural network-based approach that incorporates an automatic feature selection component, tailored to optimize the detection process. By applying this method to the CIC-DDoS 2019 dataset, the model significantly outperformed other machine learning-based approaches, particularly in managing imbalanced data through hinge loss and weighted loss techniques. However, the study highlighted limitations in handling rare and hierarchical labels, which led to suboptimal performance in specific attack classes like UDPLag. Additionally, discrepancies between training and testing data distributions further impacted the model's accuracy. Future work will aim to address these issues to enhance model robustness.\nSadaf et al. [19] proposed an intrusion detection method (Auto-IF) tailored for fog computing environments, where real-time network traffic classification as normal or malicious is crucial. The approach combines Isolation Forest (IF) and Autoencoder (AE) to detect intrusions, focusing on binary classification. The AE is trained to recognize normal data, and when attack data is encountered, it fails to encode it, resulting in a high reconstruction loss. IF further enhances the accuracy by refining this classification process. The method was validated using the NSL-KDD dataset, achieving an accuracy rate of 95.4%, outperforming several state-of-the-art methods. However, their feature extraction capabilities were not efficient, leading to relatively less optimal performance.\nAjeetha et al. [20] proposed a machine learning-based approach for detecting DDoS attacks, a significant threat in the field of cybersecurity. The research focuses on distinguishing between legitimate and malicious traffic flows to prevent the adverse effects of DDoS attacks, which can range from server failures to revenue loss. The authors introduced a detection system using Naive Bayes and Random Forest classifiers, which analyze traffic traces to classify network activity as normal or abnormal. Their experimental results showed that the Naive Bayes algorithm outperformed Random Forest, achieving a detection accuracy of 90.90%. However, the study's reliance on a single specific attack type limits its applicability in more diverse or evolving attack scenarios, because of which a wide range of features were not extracted effectively. Future research could explore the integration of additional datasets and advanced algorithms to enhance the detection system's robustness.\nDeepa et al. [21] proposed a hybrid machine learning model to enhance the detection of DDoS attacks targeting the control plane in Software-Defined Networking (SDN) environments. The research highlights the vulnerability of the SDN controller, a critical component that manages the network, to DDoS attacks that can severely disrupt network operations. By combining Support Vector Machines (SVM) and Self-Organizing Maps (SOM), the study aimed to improve detection accuracy, and detection rate, and reduce the false alarm rate compared to traditional machine learning models. The experimental results confirmed that the hybrid model outperformed standalone algorithms in all measured metrics. However, the study's focus on the control plane limits its effectiveness across the entire SDN environment. Future work is suggested to extend the approach by developing ensemble ML models for detecting DDoS attacks in the data plane, thereby providing a more comprehensive security solution.\nShieh et al. [22] proposed a novel DDoS attack detection framework that addresses the challenge of Open Set Recognition (OSR) in ML/DL systems, particularly in the context of evolving DDoS attack techniques. The framework integrates Incremental learning, Gaussian Mixture Model (GMM), and Bi-Directional Long Short-Term Memory (BI-LSTM) to detect both known and unknown DDoS attacks. The BI-LSTM is effective in distinguishing between legitimate and malicious traffic based on training data, while the GMM identifies novel attack patterns for further labelling and retraining. Experimental results using CIC-IDS2017 and CIC-DDoS2019 datasets demonstrated the model's ability to achieve up to 94% accuracy. However, the system's performance significantly degrades when encountering novel attacks, with recall dropping to 41.2% on certain datasets, highlighting the need for continuous updates and human intervention. Future research is suggested to enhance the framework's robustness by automating configurations and reducing dependency on traffic engineers.\nSharma et al. [23] introduced a novel approach to intrusion detection in network traffic using the Nearest Neighbour Distance Variance (NNDV) classifier, which leverages the variance of distances between objects to classify them as either malicious or normal. The study employed the KDD CUP-99 dataset to evaluate the effectiveness of NNDV and compared its predictive accuracy to the well-known K-Nearest Neighbour (KNN) classifier. The results demonstrated that NNDV often performs better than KNN, particularly with normalized data, achieving accuracy rates up to 99%. The paper also explored different cross-validation techniques to further refine the model's performance. The conclusion emphasizes that while NNDV shows promise as an intrusion detection method, fine-tuning its parameters (k, p, and threshold u) could enhance accuracy even further. Unlike deep learning or neural network models, NNDV's results remain consistent across runs. The author suggests that future work should focus on optimizing these parameters, possibly through automated methods, and exploring feature selection and multiclass prediction extensions for the algorithm.\nAssis et al. [24] proposed a security system for SDN environments in IoT networks, addressing the significant challenge of mitigating DDoS attacks. The authors introduced a Convolutional Neural Network (CNN) to detect such attacks in near real-time, demonstrating its superiority over other anomaly detection methods like Logistic Regression and Multi-Layered Perceptron. Their approach also includes a Game Theory-based mitigation strategy to optimize packet discard rates, enhancing SDN resilience. Although effective, the system's performance gets constrained by the complexity of larger, more varied SDN environments and potential limitations in handling evolving attack strategies.\nGohil et al. [25] explored the detection of DDoS attacks, focusing on the effectiveness of various supervised classification algorithms. Their research aimed to accurately distinguish between malicious and legitimate network traffic using the CICDDoS2019 dataset, which includes recent DDoS attack signatures. The study found that tree-based classifiers like Decision Tree and Random Forest, as well as distance-based classifiers like K-Nearest Neighbors (K-NN), outperformed other models in accuracy. However, the research is limited by the scope of the dataset and the types of DDoS attacks considered, indicating a need for further expansion and testing on a broader range of attacks in future work.\nRajagopal et al. [26] proposed a meta-classification approach for network intrusion detection, focusing on both binary and multiclass classification, and implemented it on the Azure cloud platform. The study aimed to address the evolving threat landscape by optimizing hyperparameters and feature subsets to improve detection accuracy. Using robust classifiers like Decision Jungle, Bayes Point Machine, and Logistic Regression, the model was tested on datasets including UNSW NB-15, CICIDS 2017, and CICDDOS 2019, achieving high accuracy rates. Although the model demonstrated strong performance, its reliance on predefined datasets limits its adaptability to novel attacks. Future research should explore incorporating additional datasets and employing deep learning within cloud-based environments.\nNiyaz et al. [27] addressed the challenge of developing an efficient and flexible Network Intrusion Detection System (NIDS) capable of handling unforeseen network security breaches. They proposed a DL-based approach using self-taught learning (STL), which was applied to the NSL-KDD dataset as a benchmark for network intrusion detection. The research demonstrated that their approach outperformed previous NIDS implementations in terms of accuracy, precision, recall, and f-measure. Despite its promising results, the study's limitations include the potential need for more advanced techniques like Stacked Autoencoders and other classifiers for further improvement. Future work should focus on real-time implementation and feature learning from raw network traffic.\nPerakovic et al. [28] proposed a specialized DDoS detection model to address the increasing challenge of mitigating DDoS attacks in smart home environments, which often consist of a diverse array of IoT devices. The research tackles the problem by categorizing IoT devices into four distinct classes based on their traffic predictability and applying a boosting method of logistic model trees tailored to each class. This innovative approach departs from traditional models that assume a single legitimate traffic profile for all devices, thereby improving detection accuracy, which the study reports to be between 99.92% and 99.99% for the different classes. The study's findings demonstrate the model's high efficacy, but it also highlights a potential limitation: the reliance on predefined device classes may restrict the model's adaptability to new and evolving IoT devices. Consequently, the authors suggest further exploration into extending this approach to other IoT environments and attack types to enhance its generalizability and robustness.\nSingh et al. [29] conducted a survey on Distributed Denial-of-Service (DDoS) attacks, focusing on the vulnerabilities of web-enabled platforms like IoT, cloud computing, and Software-Defined Networking (SDN). The authors underscore the distributed nature of these platforms, which has made them increasingly susceptible to large-scale DDoS attacks. They review a variety of detection methods, including the K-Nearest Neighbors (KNN)-based DDoS detection algorithm by Dong & Sarem (2019), which shows potential but needs further refinement for real-time application in SDN environments. Another significant work cited is Yuan et al.'s (2017) DeepDefense system, which employs Recurrent Neural Networks (RNNs) and Convolutional Neural Networks (CNNs) to analyze historical packet data, though it is highly resource-intensive. The survey also references the LUCID technique by Doriguzzi-Corin et al. (2020), a lightweight CNN-based method aimed at distinguishing between malicious and safe traffic, though it still faces challenges in scalability. Singh et al. conclude that while existing solutions show promise in controlled environments, they are often hampered by high computational costs and real-world implementation difficulties, particularly in resource-constrained settings like IoT networks. This highlights the need for more efficient, adaptable, and scalable defenses against the evolving nature of DDoS attacks.\nAnupama Mishra et al. [30] proposed a defensive mechanism to detect and mitigate DDoS attacks in Software-Defined Networks (SDNs) integrated with cloud computing. The research addresses the challenge of detecting DDoS attacks, which remain a significant threat despite existing solutions. Their approach leverages variations in entropy and flow table attributes to recognize and alleviate DDoS attacks with low computational overhead. The proposed method demonstrates high detection rates (98.2%) and a low false positive rate (0.04%) under different attack strengths. While the research shows promising results, it is limited by its focus on a single controller and does not address slow DDoS attacks that mimic legitimate traffic. Future work could explore the use of multiple controllers and extend detection to more subtle attack types.\nKathirkamanathan et al. [31] proposed a solution to mitigate Distributed Denial of Service (DDoS) attacks targeting financial services, which are particularly vulnerable in cloud computing environments. The study focused on using deep neural networks, specifically stacked Long Short-Term Memory (LSTM) networks, to classify and mitigate DDoS attacks at the HTTP layer of transactional endpoints. The authors compared various neural networks, including simple Artificial Neural Networks (ANN) and Gated Recurrent Units (GRU), concluding that stacked LSTM outperformed the others, achieving an accuracy of 99.3%. However, the research was limited to HTTP-based flooding attacks, with no consideration for other types of DDoS attacks like UDP or ICMP. Future work could involve extending the model to handle other attack types and automating the tuning of hyperparameters for improved performance.\nNajafimehr et al. [32] proposed a hybrid machine learning method to address the growing threat of DDoS attacks on network service availability. The problem they identified was that traditional machine learning algorithms, though effective against known DDoS attacks, struggle to detect previously unseen attacks. Their contribution combines an unsupervised clustering technique, DBSCAN, with a supervised classification model, allowing for the separation of anomalous traffic and the labeling of clusters based on statistical measures. The method demonstrated significant improvements in detection performance when tested on CICDDOS2019 data. While the approach shows strong results, a possible limitation is the reliance on accurate feature engineering and proper parameter tuning, which may affect scalability across different network environments.\nBatham et al. [33] proposed a CNN DL technique for detecting botnet attacks within IoT applications. The problem addressed in the study is the increasing threat of botnet attacks, which involve devices infected with malware and remotely controlled to carry out large-scale cyber assaults. To combat this, the research leverages machine learning and deep learning classification methods, particularly focusing on CNN and LSTM networks. The study used the Bot-IoT dataset to validate the effectiveness of the proposed method in both binary and multi-class classification scenarios. The results demonstrated a significant improvement in detection accuracy, achieving 99.80%, with a reduced error rate of 0.20%. However, the method still has limitations in terms of generalization across different types of botnet attacks or IoT devices not represented in the dataset, along with suboptimal feature extraction. Further research is necessary to test its robustness in more diverse environments."}, {"title": "III. PROPOSED WORK", "content": "This section presents a novel Self-Attention (SA) Enabled Weighted Ensemble Classifier for detecting DDoS attacks, combining 3 different individual classification algorithms within the overall ensemble classifier. Initially, the CIC-DDoS2019 benchmark dataset undergoes extensive data preprocessing, including merging individual datasets, managing high feature correlations, handling null values statistically, and selecting the most relevant features. After preprocessing, the preprocessed data is split into training and testing subsets, with 80% allocated for training the proposed model and 20% reserved for its validation. This allocation is made to ensure a balance between having enough data for training and ensuring a reliable testing process. Each model, a Self-Attention-enabled Convolutional Neural Network (CNN) combined with XGBoost, LSTM, and Random Forest, is designed to enhance feature representation and improve the detection of DDoS attacks.\nThe trained models are then evaluated, and their performance results are used to determine their contribution weights in a weighted ensemble approach. This ensemble combines the strengths of each individual model through a stacking-based weighted prediction mechanism, improving the overall accuracy of the system. Finally, the model's effectiveness is assessed using key metrics such precision, accuracy, F1 score, and recall, ensuring a robust and reliable detection system for"}, {"title": "A. DATASET DESCRIPTION AND PREPROCESSING", "content": "This research is based on the CIC-DDoS2019 dataset, which comprises real-world network traffic data to evaluate DDoS attack detection algorithms. The dataset offers diverse DDoS attack scenarios and realistic traffic patterns, aiding in developing robust detection models. With comprehensive labelling and widespread use in research, it serves as a trusted benchmark for evaluating DDoS detection techniques. The total dataset is formed by merging eight different attack files such as PortMap, NetBIOS, and LDAP. Preprocessing involved the elimination of duplicate rows, the management of highly correlated columns, and the statistical handling of null values. Feature selection involved carefully choosing columns that provide essential information for identifying DDoS attacks. Among the selected columns are source and destination IPs, which are fundamental for identifying the origin and destination of network traffic. By analyzing these IPs, patterns, and anomalies indicative of DDoS attacks can be detected. Additionally, source and destination ports are included to gain insights into the specific services or applications being targeted by potential attackers. Considering features like protocols and timestamps provides valuable contextual information for understanding the nature and timing of network activities.\nThe 'Source Port' and 'Destination Port' columns indicate the source and destination ports of network traffic, providing insights into the specific services or applications involved in communication. The 'Protocol' column specifies the protocol used for communication, such as ICMP, TCP, or UDP, aiding in understanding the communication mechanism between network entities, while the term \u201cTotal Length of Fwd Packets' represents the cumulative length of packets forwarded within a flow, offering information on the amount of data transmitted. The 'Flow IAT Mean' represents the average time between two consecutive packets in a flow, aiding in analyzing traffic patterns' regularity or irregularity, and the 'Fwd Packets/s' feature calculates the rate of forwarded packets per second, providing insights into traffic intensity. The 'Packet Length Mean' represents the average packet length in a flow, useful for detecting anomalies or patterns in packet sizes. To ensure quality and relevance of the features, a heatmap was generated to visualize the correlation between features, helping to identify and eliminate highly correlated variables that could potentially introduce multicollinearity into the model. This correlation matrix, as illustrated in Figure 2, provides a comprehensive overview of the relationships between all numerical features.\nFurthermore, a Pareto chart was employed to highlight the most significant factors contributing to the variance in the dataset. It highlights the distribution of various features within the dataset, demonstrating that a small subset of values for each feature accounts for the majority of occurrences. For instance, in features like Source Port and Protocol, a few specific values dominate the dataset, contributing to a steep rise in the cumulative percentage. This indicates that certain values play a disproportionately significant role, which aligns with the Pareto principle (80/20 rule). This suggests that focusing on these dominant values could yield the most significant impact in detecting patterns or anomalies. The Pareto analysis results are depicted in Figure 3.\nThe features discussed above are chosen during feature extraction and following this, all features except the target column were scaled to normalize their range between [0, 1]. This preprocessed data consisting of 1,341,858 rows, is then used for training the proposed model."}, {"title": "B. PROPOSED WEIGHTED ENSEMBLE CLASSIFIER", "content": "The proposed model is a weighted ensemble of three deep neural networks SA-enabled CNN with XGBoost, SA- enabled CNN with LSTM, and SA-enabled CNN with Random Forest. The core strength of the proposed model lies in its unique diverse feature extraction capabilities. Each of the three neural networks receives preprocessed data individually, allowing them to extract different intricate features. Additionally, a self-attention mechanism is incorporated at the end of each neural network to further refine the feature extraction process. This emphasizes additional focus on the most critical features for training, thereby improving its predictive capabilities. Finally, predictions are obtained from individual models combined using a stacking-based weighted sum approach to collectively include inferences from each model. This process ensures that the model comprehensively learns how different features impact its predictions. The combined inferences are then processed through a fully connected layer, followed by a sigmoid activation function, to classify the input as either a DDoS attack or safe. Existing models rely on a single CNN or traditional ML algorithms such as SVMs and decision trees for feature extraction and fail to effectively capture the diverse range of features required for precise classification, resulting in suboptimal performance. The proposed model tackles the challenge of limited feature extraction by using three CNN backbones to capture features at different scales. A self-attention mechanism at each stage refines these features, resulting in a more comprehensive understanding of the data. This diversity in feature extraction is crucial for capturing a broad spectrum of relevant details that improve prediction accuracy."}, {"title": "1) SELF-ATTENTION ENABLED CNN WITH XGBOOST", "content": "The preprocessed input undergoes convolutional operations (1) in the first layer. Here, 128 filters with a kernel size of 3 convolve across the input, extracting localized patterns and DDoS-relevant features. Following this, batch normalization (2) and ReLU activation (3) functions are applied to stabilize and introduce non-linearity to the convolved output. These features are then fed to another set of convolutions, batch normalization, and activation layers. The second convolutional layer applies an additional 64 filters, allowing the model to capture higher-order features essential for distinguishing subtle differences between DDoS attacks and safe traffic. The batch normalization layer then normalizes these new feature maps, and the ReLU activation enables learning of non-linear decision boundaries. The features then undergo self-attention (SA) (4), where they are transformed into query (Q), key (K), and value (V) vectors. The SA mechanism (SAM) calculates the query and key vectors' dot product to obtain attention scores, which are scaled to ensure gradient stability and prevent large values. Then, they are normalized via softmax (5) to indicate feature importance and fed into an XGBoost classifier, where sequential decision trees are trained to produce the predicted probabilities for DDoS attacks or safe traffic.\nO(m, n, o) = \\sum_{x=0}^{M-1}\\sum_{y=0}^{N-1}\\sum_{z=0}^{C-1} I(m + x,n + y, z) \u00b7 K(x, y, z, o) + b (1)\nwhere,\n0(m, n, o) output feature map at position (m, n)\nI(m + x, n + y, z) \u2190 input feature map at position (m + x, n + y)\nK(x, y, z, o) convolutional kernel\nb - bias\nm - width of convolutional kernel\nn - height of convolutional kernel\nc\u2190 number of input channels\nYi = \\gamma\\frac{Xi - \\mu}{\\sigma} + \\beta (2)\ny(x) = (0, x) (3)\nSA(Q, K, V) = softmax(\\frac{QKT}{\\sqrt{dk}})V (4)\nsoftmax(px) = \\frac{e^{px}}{\\sum_{i=1}^{n}e^{py}} (5)"}, {"title": "2) SELF-ATTENTION ENABLED CNN WITH LSTM", "content": "The preprocessed data is convolved (1) using 128 filters to extract indispensable spatial features critical for detecting DDoS attacks. Following this, long short-term memory (LSTM) (6-10) layers process the sequential data, capturing temporal dependencies and long-term interactions within the input data. With its ability to retain information over time, LSTM units effectively analyze the dynamic patterns inherent in network traffic, allowing for the identification of subtle changes and anomalies indicative of DDoS attacks. ReLU activation (3) adds non-linearity to enhance feature representations. In the subsequent repeat, the process iterates through convolutional, LSTM, and ReLU layers once again, refining the model's understanding of the input data and capturing increasingly nuanced patterns and relationships. SAM (4) is applied to the refined features, dynamically adjusting the model's focus to highlight crucial aspects of the data. The highlighted features are pooled using an average pooling layer to reduce the spatial dimensions of the features while retaining their essential information. Finally, a sigmoid activation function is applied to the pooled features, producing a probability score for each feature map.\nInput Gate,\nit = \u03c3(Wxixt + Whiht-1 + WciCt-1 + bi) (6)\nForget Gate,\nft = \u03c3(Wxfxt + Whfht\u22121 + WcfCt-1 + bf) (7)\nCell State,\nCt = ftCt-1 + it tanh tanh (Wxcxt + Whcht-1 + bc) (8)\nOutput Gate,\nOt = \u03c3(Wxoxt + Whoht-1 + Wcoct-1 + bo) (9)\nHidden State (output),\nht = ot tanh (ct) (10)"}, {"title": "3) SELF-ATTENTION ENABLED CNN WITH RANDOM FOREST", "content": "The preprocessed input is convoluted (1) with 128 filters to extract localized DDoS-relevant features. Batch normalization (2) and ReLU activation (3) are applied to mitigate internal covariate shift, after which a second convolutional layer with 64 filters captures higher-order features. This is followed by another round of batch normalization and ReLU activation to normalize the features and introduce non-linearity. These refined features are fed into a SAM (4), transforming them into value (V), key (K), and query (Q) vectors to compute scaled attention scores, which are normalized using a softmax function. The SA outputs are then input into a Random Forest classifier, where multiple decision trees classify the data as either a DDoS attack or safe, with final predictions made by aggregating the individual tree results."}, {"title": "4) STACKING-BASED WEIGHTED ENSEMBLE CLASSIFIER", "content": "A stacking-based weighted sum methodology is applied to integrate the output probabilities from each classifier, aiming to consolidate their performances and create a more resilient and high-performing model. Stacking, also known as stacked generalization, is an ensemble technique aimed at mitigating overfitting by allowing the global classifier to generalize from the predictions of the base classifiers. Different base classifiers SA-Enabled CNN with XGBoost (3.2.1), SA-Enabled CNN with LSTM (3.2.2), and SA-Enabled CNN with Random Forest (3.2.3) - perform well in extracting different scales and contexts of features, resulting in predictions framed out of different learning algorithms. A weighted sum was computed to integrate the obtained predictions from these models, labelled as \u03b1, \u03b2, and y. The weights for \u03b1, \u03b2, and y - 0.34, 0.41, and 0.25, respectively - are determined based on the model's performances (as depicted in Table 1) using a grid-search algorithm, which is presented in Algorithm 1."}, {"title": "IV. EXPERIMENTAL RESULTS", "content": "In this section, a thorough analysis is conducted to compare the performance of the proposed model with existing approaches. The models are evaluated using various performance metrics, such as the confusion matrix, accuracy (Equation 12), loss (Equation 11), precision (Equation 13), recall (Equation 14), and F1-score (Equation 15).\naccuracy \u2190\\frac{TP + TN}{TP + TN + FP + FN} (12)\nprecision \u2190\\frac{TP}{TP + FP} (13)\nrecall \u2190\\frac{TP}{TP + FN} (14)\nF1 Score \u2190\\frac{2.TP}{2.TP + TN + FP} (15)\nWhere,\nTP - true positives\nTN \u2190 true negatives\nFP \u2190 false positives\nFN \u2190 false negatives\nThese metrics offer a thorough assessment of the model's effectiveness, highlighting the rigorous analysis and empirical evidence supporting the research. The individual models SA-Enabled CNN with XGBoost, SA-Enabled CNN with LSTM, and SA-Enabled CNN with Random Forest - were trained separately on the CIC-DDoS dataset, and their results were recorded. Table 2 showcases the performance assessment of these models, serving as the basis for determining each model's contribution weight to the ensemble. Combining the entire predictions from each model is not effective, since a model might be biased towards a particular feature set for certain inputs. Thus, a weighted ensemble method is proposed in this research, which is followed by a fully connected layer to process these final weighted predictions to obtain final outputs. Table 3 comprehensively tabulates the performance comparison among these models, conducted based on the evaluation metrics outlined in Figure 1.\nDuring the training process, the model consistently reduces its loss, reaching a final value of 0.005. This decline in loss signifies successful optimization of the model's parameters across the total 64 epochs, resulting in improved convergence towards the desired output. The accuracy curve displays a significant upward trajectory, indicating a continuous improvement in the model's ability to classify DDoS attacks. This steady increase in accuracy underscores the capacity of the model to learn from the training data and generalize patterns, ultimately leading to more precise predictions. The loss and accuracy curves for training and validation sets obtained while training the proposed model have been displayed in Figures 5 and 6 respectively, and the normalized confusion matrix depicting its performance in distinguishing between DDoS and non-DDoS traffic is illustrated in Figure 7."}, {"title": "V. CONCLUSION", "content": "The research presents a thorough investigation into the application of advanced ML and DL techniques to detect DDoS attacks within the sector of network security and proposes a self-attention-enabled ensemble classifier for the same. It showcases the potential of high-performing DL models such as CNNs and LSTMs, and self-attention mechanisms in combination with ML models such as XGBoost and Random Forest to increase the robustness and performance of DDoS attack detection systems. In essence, it underscores the importance of employing ML and DL algorithms to enhance network security defenses and address evolving cyber threats."}, {"title": "VI. FUTURE WORK", "content": "This research investigated the efficacy of DL models in NID, yielding promising findings. Future work can delve deeper into addressing the vulnerability of the model to adversarial attacks, ensuring robustness against malicious manipulation of input data to evade detection or trigger false alarms. Additionally, efforts can focus on scaling the model to large-scale network environments with high volumes of traffic, overcoming challenges related to computational efficiency and resource management. Furthermore, enhancing the model's ability to generalize effectively to unseen DDoS attack patterns or variations in network conditions will be essential for advancing its practical utility in real-world scenarios."}, {"title": "VII. STATEMENTS AND DECLARATIONS", "content": "FUNDING: No funding was received for conducting this research.\nCONFLICTS OF INTERESTS: The authors do not have any competing interests related to the content of this article to disclose.\nAVAILABILITY OF MATERIAL AND DATA: Not Applicable.\nCODE AVAILABILITY: Not Applicable."}, {"title": "VII. AUTHOR BIOGRAPHY", "content": "Dr. Kanthimathi S is presently associated with Vellore Institute of Technology, Chennai, Tamil Nadu. She earned her Ph.D. in Computer Science and Engineering from Visveswaraya Technological University, Karnataka. She specializes in the research areas of Cloud Computing, Network Security, and Machine Learning\nShravan Venkatraman, born in Chennai, India, is a B.Tech Computer Science Engineering student at Vellore Institute of Technology, Chennai. With over two years of deep research experience, Shravan has delved into artificial intelligence, machine learning, deep learning, computer vision, generative AI, and software development. As an Al engineer, he is passionate about streamlining innovative solutions for real-world challenges. His academic journey is marked by multiple presentations at international conferences and publications in high-impact journals, demonstrating his commitment to advancing technology. Shravan's dedication to continuous learning and problem-solving is evident in his active participation in research and development, where he persistently seeks new frontiers to explore and conquer."}]}