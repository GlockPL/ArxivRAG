{"title": "CONSTRUCTA: Automating Commercial Construction Schedules in Fabrication Facilities with Large Language Models", "authors": ["Yifan Zhang", "Xue Yang"], "abstract": "Automating planning with LLMs presents transformative opportunities for traditional industries, yet remains underexplored. In commercial construction, the complexity of automated scheduling often requires manual intervention to ensure precision. We propose CONSTRUCTA, a novel framework leveraging LLMs to optimize construction schedules in complex projects like semiconductor fabrication. CONSTRUCTA addresses key challenges by: (1) integrating construction-specific knowledge through static RAG; (2) employing context-sampling techniques inspired by architectural expertise to provide relevant input; and (3) deploying Construction DPO to align schedules with expert preferences using RLHF. Experiments on proprietary data demonstrate performance improvements of +42.3% in missing value prediction, +79.1% in dependency analysis, and +28.9% in automated planning compared to baseline methods, showcasing its potential to revolutionize construction workflows and inspire domain-specific LLM advancements.", "sections": [{"title": "Introduction", "content": "Automating construction schedules in large-scale commercial projects, such as semiconductor fabrication, is an inherently complex task due to the dynamic nature of project contexts, intricate dependency structures, and the critical need for expert-driven decision-making (Neelamkavil, 2009; Azimi et al., 2011). The difficulty lies in managing the vast number of interdependent activities, each with unique resource requirements and constraints, while simultaneously adapting to real-time changes and unforeseen disruptions (Zavadskas et al., 2004). These factors necessitate seamlessintegration of domain knowledge and human expertise to ensure project feasibility and efficiency. Traditional methods, relying on rigid rules and static assumptions, often fail to adapt to the variability and uncertainty inherent in large-scale construction projects, leaving a critical need for more flexible and context-aware approaches (Alegre et al., 2016; Al Ali, 2020).\nDespite recent advancements in machine learning, the potential of large language models (LLMs) for construction scheduling remains underexplored due to several limitations. LLMs, pretrained on broad datasets, lack the domain-specific knowledge needed for intricate project dependencies and constraints (Xu et al., 2024b; Banerjee et al., 2024). Moreover, the size and complexity of construction plans make it impractical to load entire projects into LLMs for automation (Gidado, 1996). Instead, construction scheduling demands dynamic handling of real-time updates and evolving conditions. LLMs face three key challenges: (1) capturingthe intricate dependencies between construction activities, (2) adapting to context-sensitive changes in task priorities or resource availability, and (3) aligning outputs with expert-driven preferences. These challenges highlight the need for tailored frameworks to bridge the gap between LLM capabilities and the demands of large-scale construction projects.\nTo address these limitations, we present CONSTRUCTA, a novel framework designed to optimize construction schedules dynamically by leveraging LLMs with three key components: (1) Static Retrieval-Augmented Generation (SRAG or Static RAG), which introduces domain-specific construction knowledge, enabling LLMs to understand definitions, rules, and constraints critical to commercial construction; (2) Contextualized Knowledge RAG (Knowledge RAG or KRAG), which incorporates the expertise of architects by dynamicallysampling context-sensitive information, ensuring the relevance of inputs to evolving project conditions; and (3) Construction RLHF, which aligns the outputs of LLMs with expert feedback to enhance their in-depth understanding and produce human-aligned scheduling decisions.\nWe evaluate Constructa on a proprietary dataset comprising 4,340 semiconductor fabrication activities characterized by intricate dependencies and constraints. CONSTRUCTA delivers substantial performance improvements, including a 42.3% boost in missing value prediction, 79.1% in dependency analysis, and 28.9% in automated planning compared to baseline methods. Further analysis across levels and areas shows adaptability, while Construction RLHF distills raw data into actionable insights, demonstrating scalability and robustness for complex construction tasks."}, {"title": "Methodology", "content": "Our methodology starts with an expert-provided schedule (Figure 1, part (a)) and refines it using Static RAG for retrieval, Knowledge RAG for dependencies, and Construction RLHF for rule alignment (parts (c), (b), and (d)). The outputs, including retrieved knowledge and preference-aligned task relationships, are integrated into prompts for dynamic, context-aware scheduling."}, {"title": "Static Retrieval-Augmented Generation", "content": "Static RAG equips LLMs with construction-specific knowledge, as shown in part (c) of Figure 1. It bridges the gap between general-purpose models and scheduling needs by generating embeddings for retrieval, with Local Static RAG providing precise definitions and Global Static RAG offering broader domain knowledge.\nLocal Static RAG provides precise definitions for construction-specific terms like Work Breakdown Structure (WBS) using curated online resources. For each term \\(t\\) in the terminology set \\(T\\), its definition \\(d_t\\) is retrieved and embedded as \\(e_t = f_{\\text{embed}}(d_t)\\) using an embedding model \\(f_{\\text{embed}}\\). These embeddings are stored for contextualizing activities in schedule optimization.\nGlobal Static RAG retrieves domain-specific knowledge from resources like textbooks or manuals. Raw text \\(D\\) is cleaned and segmented into chunks \\(C = \\{C_1, C_2,..., C_n\\}\\), each embedded as \\(e_{C_i} = f_{\\text{embed}}(C_i)\\) and stored in a database. For a query \\(q\\), the system retrieves the most relevant chunk \\(c^*\\) by maximizing similarity \\(\\text{sim}(e_q, e_{C_i})\\), where \\(e_q = f_{\\text{embed}}(q)\\) and \\(c^* = \\text{arg max}_{C_i \\in C} \\text{sim}(e_q, e_{C_i})\\). Combining Local and Global Static RAG ensures precise definitions and broad domain knowledge for construction scheduling."}, {"title": "Contextual Knowledge RAG", "content": "Contextual Knowledge RAG samples task-specific contexts from a dependency graph \\(G = (V, E)\\), where \\(V\\) represents activities and \\(E\\) their dependencies. As shown in part (b) of Figure 1, it aggregates hierarchical, first-order, and sequential relationships, using the combined context to retrieve relevant embeddings from the knowledge database for construction scheduling.\nSequential Context captures predecessor and successor activities up to three hops by traversing the graph in both directions. Random paths are sampled to reflect relevant sequential relationships while avoiding revisits and cycles, ensuring the selection of meaningful task flows.\nHierarchical Context retrieves nodes within the same Work Breakdown Structure (WBS) up to two levels. Tasks sharing WBS attributes are identified, and bidirectional traversal ensures that hierarchically consistent nodes are included in the context.\nFirst-Order Context includes direct predecessors and successors of the target node, focusing on immediate task dependencies critical for accurate schedule representation.\nEach task \\(i\\) is assigned a combined context \\(C_i = \\{\\text{FirstOrder}(i), \\text{Hierarchical}(i), \\text{Sequential}(i)\\}, reflecting one-hop, two-hop, and three-hop constraints. Using the same embedding model as Static RAG, embeddings for \\(C_i\\) retrieve local knowledge and the top three global knowledge chunks from books and references, balancing dependencies to optimize rule generation and scheduling."}, {"title": "Construction RLHF", "content": "The Construction RLHF pipeline (Figure 2) refines schedules by integrating expert feedback and dynamic adjustments. Starting with raw contexts and rules (1), the Plan Agent combines task-specific details with context retrieved from SRAG and KRAG (2). Refined outputs, evaluated as positive or negative completions, are stored in the Preference Database (3). The smaller Expert Agent, compared to the Plan Agent, utilizes this feedback and memorized domain knowledge to ensure schedules align with dynamic project requirements (4), supporting robust and adaptive scheduling.\nCPA-RLHF acts as the overarching framework, transforming the initial construction schedule into a dynamic environment for offline reinforcement learning. This is achieved by masking certain ground-truth values to simulate real-world uncertainties, effectively leveraging the expertise of architects in providing feedback on schedule optimization. The masked environment serves as a feedback loop where evaluated completions inform the refinement of the preference model. This process enables CPA-RLHF to address complex scheduling requirements by integrating domain knowledge, contextual adjustments, and expert preferences.\nWithin this framework, CPA-DPO refines the preference alignment process through supervised fine-tuning (SFT) and direct preference optimization. SFT establishes an initial alignment by minimizing the cross-entropy loss \\(L_{\\text{SFT}} = \\frac{1}{N} \\sum_{i=1}^N Y_i \\text{log } P_i\\), grounding the model in expert-labeled schedules to produce coherent and contextually relevant outputs. Building on this, the preference alignment phase optimizes the totalloss \\(L_{\\text{total}} = L_{\\text{SFT}} + \\alpha L_{\\text{CR}} + \\beta L_{\\text{PA}}\\), where \\(\\alpha\\) and \\(\\beta\\) balance contributions from Context-Rule Interaction Loss (\\(L_{\\text{CR}}\\)) and Preference Alignment Loss (\\(L_{\\text{PA}}\\)). The latter, defined as \\(L_{\\text{PA}} = -\\sum_{i=1}^N (y_i \\text{log}(p_i) + (1 - y_i) \\text{log}(1 - p_i))\\), ensures model outputs align with expert-defined preferences while respecting project constraints. This integrated approach enables the model to dynamically adapt to construction complexities, improving task prioritization and resource allocation."}, {"title": "Experimental Design", "content": "This section outlines the experimental configurations for Static RAG, Knowledge RAG and Construction RLHF, emphasizing embedding methods, model configurations, and optimization strategies.\nStatic and Knowledge RAG The SRAG setup used 500-token chunks for efficient processing, with embeddings generated via all-MiniLM-L6-v2. Static RAG focused on terminologies and definitions, while Knowledge RAG retrieved context from manuals and domain-specific references.\nConstruction RLHF The Plan Agent used GPT-40 (Islam and Moushi, 2024), and the Expert Agent employed Llama3.2-3B model (Touvron et al., 2023) for expert preference alignment. Training involved 10 epochs of SFT for initialization, followed by 10 epochs of CPA-DPO for preference refinement. The trained Expert Agent supported contextual refinements.\nLLM Training Configuration Efficient training was achieved using 4-bit quantization, gradient checkpointing, mixed precision training, and the AdamW optimizer (Zhuang et al., 2022). Data collection employed a random seed of 42, while inference utilized a seed of 12345, ensuring the generation of diverse datasets to enhance generalizability.\nPrompt Design Comprehensive prompt categories tailored for each task are provided in the appendix to address construction-specific challenges effectively. Each result reflects the top-2 predictions (k = 2) for enhanced accuracy, with Construction RLHF ensembled with KRAG to combine expert alignment and domain-specific knowledge retrieval."}, {"title": "Result and Analysis", "content": "We evaluate CONSTRUCTA across key scheduling tasks, highlighting its ability to address complex dependencies, handle missing data, and align schedules with expert-defined constraints."}, {"title": "Evaluation Metrics", "content": "CONSTRUCTA is evaluated using three key metrics to assess its ability to predict missing elements in construction schedules while ensuring logical consistency and expert alignment.\nMissing Value Prediction (MVP) measures the model's ability to reconstruct values from three randomly removed columns. This tests its capability to handle incomplete data while preserving schedule coherence and minimizing disruptions caused by missing information.\nDependency Analysis (DA) evaluates prediction accuracy for relational columns, including Activity Status, Level, Area, and Discipline. Since these dependencies define task sequencing and workflow constraints, this metric ensures that predicted schedules maintain logical task relationships and prevent inconsistencies.\nAutomated Planning (AP) assesses the model's ability to predict Current Start and Current Finish dates while considering real-world constraints. It measures how well the generated schedules align with expert workflows, resource availability, and project feasibility to ensure practical execution."}, {"title": "Overall Performance Gains", "content": "Table 1 demonstrates the overall performance improvements of CONSTRUCTA across MVP, DA, and AP tasks. Static RAG shows limited impact, with marginal or decreased performance, as it provides domain knowledge without contextual adaptation. Knowledge RAG boosts MVP and DA by incorporating task-specific dependencies, improving inference of missing values and logical sequencing."}, {"title": "Construction Disciplines, Levels, and Areas in Evaluation", "content": "Effective construction scheduling depends on disciplines, structural levels, and spatial areas, each with unique dependencies. We evaluate CONSTRUCTA across these dimensions to ensure adaptability to real-world constraints.\nDisciplines Construction projects encompass Civil, Structural, and Architectural (CSA) and Mechanical, Electrical, and Plumbing (MEP) disciplines. CSA tasks, such as structural assemblies and load-bearing elements, require precise sequencing for stability. MEP tasks, including waste processing and high-pressure systems, demand coordinated integration for efficient infrastructure.\nLevels Evaluation covers Equipment (EQ), Utility Level (UL), Standard Floor (SF), and Roof Floor (RF). SF and RF are the most complex, with RF requiring detailed sequencing for reinforcements and installations.\nAreas Performance is analyzed in construction zones such as 6E, 9E, and SU. High-complexity areas like SU E and 10E have dense interdependencies, making effective scheduling essential for coordination and resource optimization."}, {"title": "Performance by Discipline", "content": "The grouped results in Table 2 provide insights into CONSTRUCTA's performance across construction disciplines. For CSA disciplines, including CSA.Struc.Modules and CSA.Struc.Piers, CONSTRUCTA excels in accurately modeling dependencies and generating optimized schedules, effectively addressing challenges such as sequencing structural assemblies, ensuring load-bearing integrity, and maintaining alignment with construction constraints.\nSimilarly, for MEP disciplines, including MEP.Proc.Waste and MEP.Proc.HP, significant improvements are observed in DA and AP, demonstrating CONSTRUCTA's ability to capture intricate interdependencies between mechanical, electrical, and plumbing systems. This highlights the model's robustness in specialized workflows where precise coordination of installations and operational constraints is critical to overall project efficiency."}, {"title": "Performance by Level and Area", "content": "Figure 3 compares performance across construction levels (EQ, UL, SF, RF) and areas (6E, 9E, SU). CONSTRUCTA consistently outperforms other methods across all categories, demonstrating its ability to adapt to varying spatial and structural complexities.\nFor levels, the largest improvements are observed in SF and RF, highlighting the model's capability to handle complex roof-level dependencies, structural reinforcements, and standard floor operations with greater accuracy. The gains in RF indicate that CONSTRUCTA effectively accounts for elevated sequencing constraints and installation workflows that are more intricate at higher levels.\nFor areas, CONSTRUCTA achieves the highest gains in zones with high complexity, such as SU E and 10E, where interdependencies between tasks are more intricate. This suggests that CONSTRUCTA effectively learns and adapts to localized construction constraints, optimizing sequencing and resource allocation in highly constrained or densely coordinated zones."}, {"title": "Knowledge Distillation and Observations", "content": "Figure 4 shows the reduced context length after CPA-DPO alignment, demonstrating effective knowledge distillation from the Plan Agent to the Expert Agent. By filtering out redundant details and retaining only essential scheduling constraints, CONSTRUCTA enhances efficiency while preserving decision-making accuracy. By prioritizing critical dependencies, it enables more precise scheduling adjustments and minimizes the risk of misaligned task sequencing.\nAnother key observation is that CONSTRUCTA refines scheduling inputs by reducing context length while preserving essential constraints. CPA-DPO alignment streamlines DA and MVP, filtering excess details that obscure dependencies. This distillation enhances adaptability by emphasizing key relational structures, improving interpretability and alignment with industry requirements."}, {"title": "Future Applications and Industry Adoption", "content": "CONSTRUCTA presents strong potential for LLM adoption in construction scheduling, improving automation, adaptability, and decision support. Traditional methods struggle with real-time changes, while CONSTRUCTA continuously refines schedules based on evolving constraints (Pan and Zhang,2021; Neelamkavil, 2009). By learning from historical schedules and domain-specific constraints, it optimizes resource allocation, mitigates conflicts, and enhances project execution.\nFor broader adoption, CONSTRUCTA can integrate with existing construction management software as an intelligent planning tool. Its ability to handle dynamic scheduling and dependency modeling makes it valuable for large-scale projects. Future work will address deployment challenges, including computational efficiency, latency, and seamless integration with industry platforms (Zhang et al., 2023; Amer et al., 2023), ensuring scalability for commercial applications such as semiconductor fabrication."}, {"title": "Related Works", "content": "Research on LLM-powered construction scheduling is limited, with prior work focusing on deterministic methods and RL in other domains (Srivastava et al., 2022; Dashti et al., 2021; Bademosi and Issa, 2021; Pan and Zhang, 2021; Li et al., 2021). This work pioneers construction automation using RAG and RLHF."}, {"title": "Construction Automation", "content": "Traditional construction automation has predominantly utilized deterministic scheduling algorithms (Peiris et al., 2023; Khodabakhshian et al., 2023; Peiris et al., 2023) and rule-based systems (Zhang et al., 2023; Amer et al., 2023; A\u011far, 2024). While these methods are effective in static environments, they often fail to adapt to the dynamic and complex nature of real-world construction projects, which involve evolving dependencies and resource constraints (Xie et al., 2023; Al-Sinan et al., 2024; Parekh, 2024; He et al., 2024; Huang et al., 2024). Our approach addresses these limitations by integrating domain-specific knowledge and context, enabling more flexible and responsive scheduling."}, {"title": "Retrieval-Augmented Generation (RAG)", "content": "Retrieval-Augmented Generation (RAG) techniques enhance language models by incorporating external knowledge sources, improving their ability to generate contextually relevant information (Gao et al., 2023; Chen et al., 2024; Jiang et al., 2024; Li et al., 2024a; Acharya et al., 2025). However, existing RAG methods may not effectively retrieve and integrate the highly specialized and structured information required for construction scheduling (Zhao et al., 2024; Fan et al., 2024; Barnett et al., 2024). Our method overcomes this challenge by employing a static RAG framework tailored to the construction domain, ensuring the retrieval of precise and pertinent information that informs scheduling decisions."}, {"title": "Reinforcement Learning from Human Feedback (RLHF)", "content": "Reinforcement Learning from Human Feedback (RLHF), including Direct Preference Optimization (DPO), aligns model outputs with human preferences through comparative feedback (Wang et al., 2023; Yang et al., 2024; Dong et al., 2024; Xu et al., 2024a; Saeidi et al., 2024). In software engineering, RLHF has been used to enhance model alignment with human reasoning, leveraging human attention and feedback to improve code summarization, model focus, and explainability (Bansal et al., 2023; Karas et al., 2024; Li et al., 2024b; Zhang et al., 2024). Additionally, studies show that LLMs can learn structured decision patterns from human-provided code comments and summarization patterns (Zhang et al., 2022; Zhang, 2022), demonstrating RLHF's potential for domains requiring contextual understanding, such as construction.\nHowever, applying RLHF in traditional industries like construction remains challenging due to the need for domain-specific knowledge, complex dependencies, and expert-driven priorities (Wang et al., 2024; Xiao et al., 2024; Feng et al., 2024). While RLHF has been applied in various domains, its use in construction scheduling remains underexplored. Our approach extends DPO by incorporating construction-specific knowledge and structured context, resulting in schedules that better reflect expert preferences and project-specific requirements."}, {"title": "Conclusion", "content": "In conclusion, we presented CONSTRUCTA, an approach for automating construction schedules by integrating LLMs, contextualized knowledge RAG, and RLHF to optimize workflows with expert input. This framework advances traditional methods, offering flexibility, scalability, and adaptability for large-scale projects with complex dependencies. Future work includes implementing the Construction DPO model, incorporating multimodal inputs, and evolving CONSTRUCTA into a dynamic recommender system for continuous project adaptation."}, {"title": "Complexity of the Construction Dependency Graph", "content": "Understanding the structural complexity of the dependency graph is critical for automating construction schedules effectively. We analyzed two key metrics to highlight the challenges posed by real-world construction scenarios:\n\u2022 Degree Distribution: This metric captures the number of connections each activity node has within the dependency graph. As shown in Figure 5, the degree distribution exhibits a mean value of 3.86, with some nodes having as many as 20 connections. These values indicate the extensive interdependencies among activities, which require careful management to maintain project feasibility and avoid resource bottlenecks.\n\u2022 Maximal Hop Distribution: This measures the farthest distance, in terms of hops, to dependent nodes. The average maximal hop distance is 13.93, with the highest value reaching 73. These long-range dependencies demonstrate the need for multi-level propagation strategies to capture hierarchical and sequential task relationships effectively.\nThese metrics emphasize the intricate nature of construction scheduling, with both high interconnectivity and significant multi-level dependencies. The insights derived from these analyses underline the importance of advanced frameworks like CONSTRUCTA to manage such complexity in commercial construction projects."}, {"title": "Correlation and Similarity Analysis of Project Attributes", "content": "Understanding relationships among project attributes is essential for optimizing construction scheduling and dependency management. We conducted two types of analyses to capture both linear correlations and deeper semantic relationships:\n\u2022 Correlation Analysis (Encoded Data): We examined linear dependencies between attributes by encoding categorical data as numeric codes and calculating Pearson correlation coefficients across project attributes. This method identifies direct dependencies that impact the project timeline and resource allocation, revealing structural insights into task sequences.\n\u2022 Cosine Similarity Analysis (Embeddings): Using embeddings generated from the distilbert-base-uncased pre-trained language model, we captured semantic relationships among attributes that linear correlations might miss. This analysis highlights implicit, context-driven dependencies such as role interactions and spatial relationships, providing a nuanced view of project structure.\nIn summary, these correlations reveal structural dependencies in project attributes, assisting in identifying key points in the scheduling and sequencing workflow. These insights enable more effective scheduling strategies by understanding which attributes inherently impact each other.\nCosine Similarity Matrix (Embeddings): The right heatmap reveals semantic relationships between attributes, which help identify context-based dependencies:\n\u2022 Subcontractor and Superintendent: High similarity implies overlapping responsibilities between these roles, which can guide role-based dependencies in scheduling.\n\u2022 Discipline and Zone: This similarity reflects the association between certain disciplines and zones, useful for location-based dependency prompts.\n\u2022 Project Phase and Activity Status: Semantic alignment between phases and statuses provides a structured basis for task progression, useful for designing prompts that ensure coherent task sequences.\nOverall, these embedding-based relationships uncover context-driven dependencies beyond simple correlations, offering a richer view of the project structure. Such insights are critical for tasks involving nuanced scheduling needs, as they reveal role interactions and locational dependencies that direct scheduling and resource assignment decisions."}, {"title": "Unified Context Sampling Visualization", "content": "To support effective construction scheduling, we employ a unified sampling method that extracts three distinct types of contextual information from project activities: Sequential Context, Hierarchical Context, and First-Order Context. Each method offers a unique approach to capturing dependencies and relationships among construction activities, facilitating comprehensive schedule optimization. Figures 7, 8, and 9 illustrate the structure and details of each context sampling method.\nIn Figure 7, Sequential Context Subgraph 1 (left) shows a network of activities where nodes represent individual tasks required for project completion, connected by directed edges that denote task dependencies. Each node connects to predecessors and successors up to three hops away, capturing dependencies such as Finish-to-Start (FS), Finish-to-Finish (FF), Start-to-Start (SS), and, though less common, Start-to-Finish (SF) relationships. This structure is critical for visualizing the overall task flow, identifying critical paths, and highlighting potential bottlenecks that could delay project delivery. Sequential Context Subgraph 2 (right) extends this by including a larger set of interconnected nodes, where tasks are annotated with additional details such as task duration, resource requirements, and start or finish times. This dense layout offers a comprehensive view of task sequences, helping project managers forecast delays, pinpoint bottlenecks, and dynamically adjust schedules to accommodate unforeseen changes.\nFigure 8 shows the Hierarchical Context Sampling. Hierarchical Context Subgraph 1 (left) presents nodes representing major project phases or milestones and their sub-tasks, organized within a structured hierarchy. Starting from a root node that signifies the overall project, dependencies cascade down through the graph, capturing relationships such as Start-to-Start and Finish-to-Start within a single WBS segment. This layout allows for visualizing dependencies specific to each phase, which is crucial for managing resources and time within discrete project stages. Hierarchical Context Subgraph 2 (right) shows a more streamlined arrangement, where tasks follow a linear progression, emphasizing phase-aligned scheduling adjustments. This structure helps project managers identify the critical path within each phase and adjust scheduling as needed to optimize workflow and resource allocation, while ensuring flexibility to adapt to phase-specific constraints and objectives.\nFigure 9 illustrates the First-Order Context Sampling. First-Order Context Subgraph 1 (left) shows a minimal structure with only one dependency, representing a direct, Finish-to-Start relationship between two tasks. This sparse setup allows for focused adjustments on critical dependencies without the complexity of additional nodes, making it ideal for high-priority scheduling where immediate, direct task relationships are paramount. First-Order Context Subgraph 2 (right) presents a more intricate structure with multiple tasks directly connected to a central node. This setup captures immediate predecessors and successors, including Start-to-Start (SS) and Finish-to-Finish (FF) dependencies, providing a concise overview of key relationships around the central task. Such a layout enables project managers to address dependencies that directly impact the timing and prioritization of essential tasks, helping maintain schedule adherence while focusing on high-impact areas of the project.\nEach sampling method uniquely extracts relevant information from the project table, allowing the model to adaptively balance broad, phase-level dependencies with immediate task relationships. This unified approach to context sampling is instrumental in generating a well-rounded understanding of the construction schedule, enabling dynamic and context-aware adjustments."}, {"title": "General Predefined Prompt Categories and Context Mapping", "content": "The prompt system utilizes predefined categories and context mappings to structure data collection for various tasks in construction scheduling. Each category aligns with specific aspects of project analysis, guiding the language model to interpret context effectively. This design ensures the capture of dependencies, durations, and resource-based relationships essential for scheduling.\n\u2022 Activity Sequence and Timing: This prompt helps the model list construction activities based on 'Current Start' and 'Current Finish' dates, following dependencies defined by 'Predecessor Details' and 'Successor Details'. This captures the linear progression of tasks, aiding structured timeline generation.\n\u2022 Calculate Activity Duration: Focusing on each activity's duration based on start and finish dates, this prompt aids in establishing a timeline for the project. The model uses these durations to enhance scheduling precision and identify critical periods in the workflow.\n\u2022 Hierarchical Tree Structure: By organizing tasks according to the Work Breakdown Structure (WBS), this prompt helps arrange tasks hierarchically and identify sequential requirements, essential for maintaining the logical flow within each project phase.\n\u2022 Assess Sequence Reconstruction: This prompt directs the model to assess if task sequences can be reconstructed from available data, highlighting missing elements. Such reconstruction ensures dependencies are respected, crucial for seamless project continuity.\n\u2022 Analyze Time Relationships: By analyzing time-based dependencies (e.g., FS, SS), this prompt helps identify parallel tasks and branches in dependency graphs, enabling effective time management across activities.\n\u2022 Overlapping Disciplines and Inter-Disciplinary Dependencies: These prompts capture dependencies across overlapping and interconnected disciplines, facilitating resource alignment and identifying areas where interdisciplinary coordination is needed.\n\u2022 Area-Based Dependencies: This prompt encourages the model to examine how dependencies align with specific areas, ensuring location-based planning aligns with the project's spatial organization."}, {"title": "Task-Specific Prompts for Data Collection", "content": "For each specific task (Automated Planning (AP), Missing Value Prediction (MVP), Dependency Analysis (DA), and Construction Preference Alignment Direct Preference Optimization (CPA-DPO)), dedicated prompts have been designed to guide the language model in generating relevant outputs. Here's an outline of each task-specific prompt:\n\u2022 Prompt for AP: This prompt instructs the model to focus on scheduling tasks based on 'Current Start' and 'Current Finish' dates, ensuring that task sequences respect dependencies. By using rules for sequencing and timing, the AP prompt facilitates logical task progression, essential for maintaining project coherence.\n\u2022 Prompt for MVP: This prompt guides the model to predict missing values using both context and generated rules. It emphasizes the identification of critical data points for completion, enhancing data quality and completeness in project tables.\n\u2022 Prompt for DA: Instructing the model to examine dependencies based on 'Predecessor Details' and 'Successor Details,' the DA prompt helps the model identify crucial task interactions. This supports dependency mapping, crucial for understanding the ripple effects of scheduling changes.\n\u2022 Context Polishing for CPA-DPO: This prompt refines the generated output, ensuring it aligns with expert standards. The model adjusts for adherence to preferences, dependencies, and task prioritization, essential for optimized scheduling.\nEach prompt targets specific construction scheduling needs, aligning outputs with project management best practices and dynamically addressing task complexities."}, {"title": "Industry Relevance and Considerations", "content": "The automation of construction scheduling has long been an industry challenge due to the dynamic nature of project constraints, interdependent tasks, and expert-driven decision-making. While traditional methods rely on predefined heuristics and rule-based scheduling, they struggle to adapt to unexpected changes in workforce availability, material delays, or regulatory shifts. Large-scale projects, such as semiconductor fabrication, further complicate scheduling due to high coordination demands across multiple disciplines. Addressing these challenges requires an intelligent, adaptive system capable of learning from past schedules and dynamically updating plans based on new constraints.\nA major consideration in adopting LLM-driven solutions for construction is their real-world integration and deployment feasibility. Existing project management software, such as Primavera P6 and BIM-based scheduling tools, is widely used by industry professionals. For AI-driven scheduling to be effective, it must complement these tools rather than replace them. The ability of retrieval-augmented models to incorporate structured industry knowledge and expert-aligned reinforcement learning provides a pathway for seamless integration, allowing construction professionals to leverage AI insights while maintaining human oversight in critical decision-making.\nAdditionally, concerns about data dependency and scalability must be addressed for broader industry adoption. While proprietary datasets are necessary for high-fidelity scheduling predictions, future research could explore the use of open-source construction datasets or synthetic data generation techniques to improve model robustness across diverse projects. Furthermore, factors such as computational overhead, latency, and cost must be considered in deployment, ensuring that AI-powered scheduling remains practical for real-world applications. By tackling these challenges, LLM-driven scheduling can move from a research prototype to a reliable industry tool that enhances efficiency, reduces project risks, and scales across complex construction environments."}]}