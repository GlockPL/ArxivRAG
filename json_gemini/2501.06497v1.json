{"title": "PASS: Presentation Automation for Slide Generation and Speech", "authors": ["Tushar Aggarwal", "Aarohi Bhand"], "abstract": "In today's fast-paced world, effective presentations have become an essential tool for communication in both online and offline meetings. The crafting of a compelling presentation requires significant time and effort, from gathering key insights to designing slides that convey information clearly and concisely. However, despite the wealth of resources available, people often find themselves manually extracting crucial points, analyzing data, and organizing content in a way that ensures clarity and impact. Furthermore, a successful presentation goes beyond just the slides; it demands rehearsal and the ability to weave a captivating narrative to fully engage the audience. Although there has been some exploration of automating document-to-slide generation, existing research is largely centered on converting research papers. In addition, automation of the delivery of these presentations has yet to be addressed. We introduce PASS, a pipeline used to generate slides from general Word documents, going beyond just research papers, which also automates the oral delivery of the generated slides. PASS analyzes user documents to create a dynamic, engaging presentation with an AI-generated voice. Additionally, we developed an LLM-based evaluation metric to assess our pipeline across three critical dimensions of presentations: relevance, coherence, and redundancy. The data and codes are available at https://github.com/AggarwalTushar/PASS.", "sections": [{"title": "1 Introduction", "content": "Presentations have become indispensable in academic, professional, and business contexts for effectively communicating complex ideas. They help visualize information, making it easier for audiences to absorb key takeaways. However, preparing these presentations, along with oral delivery, can be a challenging and time-consuming task, requiring numerous rehearsals and careful attention to timing. Creating presentation slides from document is a multi-step process that include: 1) defining the purpose of your presentation and outlining the main points to ensure clarity and focus. 2) selecting a clean, professional template and maintaining consistency in fonts, colors, and layout across all slides. 3) adding the main ideas using bullet points, visuals, and relevant media like images and charts to support the content (Sarter, 2006) and 4) organizing the content to focus on one idea per slide while ensuring a logical flow of information throughout the presentation (Green, 2021). Automation of this process saves time, ensures consistent delivery, and reduces the burden on presenters.\nNumerous studies have focused on automating the slide generation process. For instance, recent research by (Mondal et al., 2024) explores the use of LLMs for generating slides. One challenge identified in such work is the issue of content overlap due to fixed slide generation limits. Our approach builds on these insights by designing a flexible pipeline that generates upto 8-10 slides, ensuring the model only covers the necessary topics and avoids repetition where content is limited. Other works (Bandyopadhyay et al., 2024) could also struggle with content overlap between slides when sections are too similar.\nPrior approaches such as (Winters and Mathewson, 2019) utilize rule-based heuristics to extract content for slides, while others, like D2S (Sun et al., 2021), treat document-to-slide generation as a query-based summarization task. Several studies, including (Sefid et al., 2019) and (Hu and Wan, 2015), focus on academic papers with well-defined structures, while (Fu et al., 2022) proposes a trainable sequence-to-sequence model, which requires large amounts of labeled document-to-slide data, making it difficult to scale. Despite valuable contributions, these approaches have several limitations: 1) The need for manual captioning of images to extract meaningful content from visuals. 2) Number of slides generated in above works is fixed, leading to redundancy when content is sparse. 3) Non-textual content such as images and graphs requires manual mapping to the relevant slides. 4) Many of these approaches are designed specifically for research papers, limiting their applicability to more general document types.\nDespite advances in automated slide generation, the delivery of these slides remains a significant challenge. A successful presentation involves not just the content, but also the ability to deliver it effectively, maintaining audience engagement, and ensuring smooth timing (Ho et al., 2023). But what if the entire process-both content creation and delivery could be fully automated? This is where our innovative pipeline, PASS, comes into play.\nPASS addresses these challenges by introducing two core modules: slide generation and slide presentation. As shown in Figure 1, the slide generation module automatically generates slide titles and corresponding content based on the document, ensuring a structured and coherent presentation. The pipeline is versatile, working with both LLMs and multimodels, with multimodels processing both text and images for slide generation. For LLM-based approach, users must provide captioned images in the document. The second key component, the slide presentation module, generates a script for each slide based on the content and converts it into speech using AI voice synthesis."}, {"title": "2 Architecture", "content": "The architecture of PASS comprises of two modules: Slide Generation and Slide Presentation as shown in Figure 1 and Figure 2. These modules work in coordination to automate both the content creation and the delivery of presentation slides."}, {"title": "2.1 Slide Generation", "content": "This module is responsible for transforming the input document into structured slides. It uses either LLM or multimodel(capable of processing both text and images) to generate the content. This module consists of five key sub-modules, each serving a specific function:\n\u2022 Image and Text Extractor: This sub-module is tasked with separating textual content from images in the input document. It ensures that the relevant text and images are properly processed for the subsequent stages, enabling flexibility in content generation depending on whether the model used is text-based or multimodal.\n\u2022 Title Generator: This sub-module creates up to 8-10 slide titles (Ti) based on the document's content. It considers the intended audience (e.g., technical or non-technical) and uses an LLM or multimodel to generate concise and relevant slide titles. This helps to tailor the presentation's focus and ensures that the generated slides align with the audience's level of understanding (Mondal et al., 2024).\n\u2022 Content Extractor: In this sub-module, the model analyzes the extracted text and the generated titles (Ti) to identify and extract the most relevant content (Ci) for each slide The extraction process is guided by specific prompts (Biswas and Talukdar, 2024) which are given in the Appendix to avoid unnecessary overlap, maintaining clarity and focus by ensuring that each slide has unique content.\n\u2022 Summarizer: This sub-module takes the extracted content (Ci) for each slide and condenses it into concise points (Si). This step is crucial for reducing verbosity and ensuring that the slide content is easily digestible, while retaining the key ideas from the content. The same model that performs content extraction is used here.\n\u2022 Image Mapping: If a multimodel is used, it is utilized to map the images (Ij) in the user document to their corresponding slides (Ij > Si) in the presentation. The prompts are specifically designed to disregard images that lack pertinent information, ensuring that only relevant images are mapped to slides."}, {"title": "2.2 Slide Presentation", "content": "This module is responsible for generating the audio script for each slide and converting it into speech. It consists of two key sub-modules:\n\u2022 Presenter Script Generator: In this submodule, LLM generates the presenter's script (PSi) based on the content (Ci) extracted for each topic (Ti). The generated script is subsequently refined by the same model again and converted into a format suitable for the Text-to-Speech (TTS) model.\n\u2022 Audio Generation: The final refined script is passed to a Text-to-Speech model, specifically a Tacotron-2 (Shen et al., 2018) based model implemented by SpeechBrain (Ravanelli et al., 2021). The TTS model synthesizes the script into high-quality audio, creating the voiceover for the presentation. The generated audio files are then synchronized with the slides to produce a seamless presentation experience."}, {"title": "3 Evaluation", "content": "We evaluated our pipeline on the publicly available SciDuet test dataset (Sun et al., 2021), which contains 81 research papers from the ICML and NeurIPS conferences. We tested our PASS approach with an open-source LLM: Qwen-2.5-32B-Instruct (Qwen et al., 2025) and a closed-source multimodel: GPT-4o (OpenAI et al., 2024). To assess performance, we used Llama-3-70B-Instruct (Grattafiori et al., 2024) as an LLM evaluator to evaluate the quality of the slides generated by the models as used by (Liu et al., 2023) which has a very high correlation with human evaluations. We evaluated the models on three aspects: (i) Coherence: To evaluate if there is a smooth and logical transition from one slide to another. (ii) Redundancy: To evaluate if there is unnecessary repetition of information across slides. (iii) Relevance: To evaluate if each slide content is relevant to the specified topic. These criteria are crucial for ensuring that the generated presentation slides are logically organized, free of unnecessary repetition, and relevant to the document's content. Following the work of (Bandyopadhyay et al., 2024), we also compared our PASS approach against fine-tuned model such as D2S (Sun et al., 2021), as well as LLM-based approaches like GPT-Flat, GPT-COT, and GPT-Cons, using GPT-4o for slide generation. The prompts used for these baselines are provided in the Appendix. Additionally, we adjusted the prompts to allow models to generate up to 8-10 slides, instead of a fixed number, providing greater flexibility in slide creation."}, {"title": "4 Results", "content": "Table 1 summarizes and compares the performance of PASS framework with the baselines."}, {"title": "4.1 Coherence", "content": "Coherence measures the logical flow of the presentation, specifically whether the slides transition smoothly from one to another, forming a cohesive narrative. Our results show that Qwen-PASS and GPT-PASS outperform existing models in this aspect. With scores of 8.65 \u00b1 0.05 and 8.79 \u00b1 0.03, respectively, our models ensure that each slide builds on the previous one without any abrupt or illogical jumps, ensuring that the audience can easily follow and understand the information being conveyed. In comparison, the other baselines, such as D2S (7.42 \u00b10.05), showed lower coherence, highlighting their struggles in maintaining a smooth narrative flow, especially when the content required transitions across slides that were not closely related."}, {"title": "4.2 Redundancy", "content": "Redundancy refers to the extent to which information is unnecessarily repeated across slides. One common issue in prior research on automated slide generation is the repeated content across multiple slides, especially when the document's content is limited or lacks distinct sections. Our results demonstrate that Qwen-PASS and GPT-PASS significantly reduce redundancy, with scores of 8.35 \u00b1 0.08 and 8.34 \u00b1 0.07, respectively. These results reflect the effectiveness of our content generation pipeline, which is designed to allow flexibility in the number of slides (upto 8-10) and avoid excessive overlap by dynamically adjusting the slide content according to the document's length. In contrast, D2S (6.11 \u00b1 0.14) and other baselines exhibited higher levels of redundancy, suggesting that its fixed slide generation and content extraction approach did not adequately address the challenge of maintaining non-repetitive content."}, {"title": "4.3 Relevance", "content": "Relevance evaluates whether each slide contains material that directly supports the corresponding topic and contributes meaningfully to the presentation. Our pipeline excels in this area, with Qwen-PASS achieving a score of 9.68 \u00b1 0.05 and GPT-PASS slightly outperforming it at 9.75 \u00b1 0.03. The highly relevant content across slides is a result of the sophisticated content extraction and summarization process in our pipeline, which ensures that only the most pertinent information is included in the presentation. Other baselines, such as GPT-Flat (9.46 \u00b1 0.04) and GPT-Cons (9.65 \u00b1 0.05), also perform well in relevance but fail to reach the levels of precision exhibited by our pipeline. On the other hand, D2S (8.48 \u00b1 0.05) shows a comparatively lower relevance score, indicating challenges in aligning the slide content with the intended topics."}, {"title": "4.4 Overall Performance", "content": "When considering the overall performance across all three criteria coherence, redundancy, and relevance - GPT-PASS emerges as the top performer with an average score of 8.96 \u00b1 0.04. Qwen-PASS follows closely with a score of 8.89 \u00b1 0.06, performing better than other GPT baselines, demonstrating that our approach provides a robust, high-quality presentation generation pipeline. These results substantiate the effectiveness of our approach in automating the slide creation process while maintaining clarity, precision, and relevance.\nIn comparison, the baseline models, such as GPT-Flat (8.75 \u00b1 0.06) and GPT-COT (8.71 \u00b1 0.05), show promising results but fall short of providing the same level of integration and flexibility in content generation and delivery. Moreover, despite being fine-tuned on the SciDuet training split, the D2S model (7.34 \u00b1 0.08) underperforms significantly."}, {"title": "5 Conclusion", "content": "This work introduces PASS, a novel pipeline that uses advanced language models, multimodal processing, and speech synthesis to eliminate manual intervention in the creation and delivery of presentations, ensuring the accurate and effective communication of key ideas. Through extensive experimentation, we demonstrate that our pipeline when tested with both an open-source model Qwen-2.5-32B-Instruct and a closed-source model GPT-4o significantly outperforms existing methods in coherence, redundancy, and relevance, highlighting PASS's ability to streamline presentation generation. By automating content creation and delivery, users can easily produce presentations, making it ideal for academia, business, and other professional settings."}, {"title": "6 Future Work", "content": "While this work provides a solid foundation, several opportunities exist to further enhance PASS's capabilities. One promising direction is the integration of dynamic audience interaction through techniques like Retrieval-Augmented Generation, enabling the AI to adapt its delivery in real time based on audience feedback and answer questions, making the presentation more responsive and interactive. Another valuable improvement could be offering deeper customization options, allowing users to fine-tune the tone, pace, and style of the AI-generated voice to better align with their preferences and the presentation context. Additionally, expanding PASS to support more languages and regional speech variations would help make it a truly global solution. Future work could also include comparing our pipeline with additional existing approaches to assess its efficiency. Moreover, conducting human evaluations would be essential to validate the effectiveness of the slide presentation module, particularly in generating high-quality audio delivery for the slides."}, {"title": "A Appendix", "content": null}, {"title": "A.1 Prompt Templates", "content": "You are given the content of the document, including text and images. The goal is to present this document to a non-technical audience who is primarily interested in the overall impact and value of the solution presented in the document. They are not familiar with technical terminology related to machine learning, natural language processing, or any other complex tasks.\ncontent: {{<slide_content>}}\nPlease generate up to 8-10 main topics or sections that highlight the key ideas and outcomes of the document, ensuring a natural flow for a presentation. Each topic should be supported by at least 5-6 uncommon lines of content from the document, ensuring that these lines are relevant to the topic and help provide a clear understanding of the idea being presented. Topics should be concise.\nDo not generate any content. Only generate the topics that have sufficient content.\nFormat your response as a JSON object with the following structure:\n\"topics\": [\n{\n{\n},\n\"title\": \"Topic Name\",\n}\n]\nYou are given the content of the document, including text and images. The goal is to present this document to a technical audience who is interested in understanding the problem, the proposed solution, its impact, technical details, proofs, or results. They are familiar with technical methodologies used in the field.\ncontent: {{<slide_content>}}\nPlease generate up to 8-10 main topics or sections that highlight the key ideas and outcomes of the document, ensuring a natural flow for a presentation. Each topic should be supported by at least 5-6 uncommon lines of content from the document, ensuring that these lines are relevant to the topic and help provide a clear understanding of the idea being presented. Topics should be concise.\nDo not generate any content. Only generate the topics that have sufficient content.\nFormat your response as a JSON object with the following structure:\n\"topics\": [\n{\n{\n},\n]\n}\n\"title\": \"Topic Name\",\nYou are creating a slide deck for presenting to a technical audience who wants to know the problem, solution, its impact, technical details, proofs, or results. They are familiar with technical methodologies used in the field. In particular, you want to create slides for the following topics: {{list_of_topics}}. For each topic, choose the relevant sentences from the given content of the document. Each paragraph should be at least 3 lines long. Additionally, extract supporting details from the images, such as tables, graphs, or any scores, that are relevant to each topic. Ensure that the content for one topic does not overlap with another, and provide clear, understandable paragraphs that are easy for a non-technical audience to follow.\nIf sufficient content is not available for a topic, that topic should not appear in the list.\ncontent: {{<slide_content>}}\nFormat your response as a JSON object with the following structure:\n{\n\"name_of_topic_1\": \"Paragraph summarizing the key points, extracted sentences, and relevant image-based data related to topic_1.\",\n\"name_of_topic_2\": \"Paragraph summarizing the key points, extracted sentences, and relevant image-based data related to topic_2.\",\n}\nYou are creating a slide deck for presenting to a non-technical audience who cares mostly about the overall impact of the solution approach in the document. They are not familiar with technical terminology related to machine learning, natural language processing, or any other complex tasks. In particular, you want to create slides for the following topics: {{<list_of_topics>}}. For each topic, choose the relevant sentences from the given content of the document. Each paragraph should be at least 3 lines long. Additionally, extract supporting details from the images, such as tables, graphs, or any scores, that are relevant to each topic. Ensure that the content for one topic does not overlap with another, and provide clear, understandable paragraphs that are easy for a non-technical audience to follow.\nIf sufficient content is not available for a topic, that topic should not appear in the list.\ncontent: {{<slide_content>}}\nFormat your response as a JSON object with the following structure:\n{\n\"name_of_topic_1\": \"Paragraph summarizing the key points, extracted sentences, and relevant image-based data related to topic_1.\",\n\"name_of_topic_2\": \"Paragraph summarizing the key points, extracted sentences, and relevant image-based data related to topic_2.\",\n}\nYou are given a slide topic and its corresponding summary. Please make the summary concise, breaking it into clear, short points that flow logically and are easy to read on a presentation slide. Try to provide the key information in 4-6 points. The summary should focus on clarity, brevity, and structure, ensuring it fits well on a slide.\nSlide Topic: {<slide_title>}\nSlide Summary: {<slide_content>}\nFormat your response as a concise list of points, each being a short sentence, following a logical flow for a presentation slide. Don't refer to document in the response.\nExample format:\nSlide Topic: {title}\nSummary:\n- Point 1\n- Point 2\nYou have created a slide deck for presenting to a non-technical audience who is primarily interested in the overall impact and value of the solution. You have been provided with the following slide topics along with the corresponding points for each topic in the following format:\nSlide Topic: {<slide_title>}\nSummary:\n- Point 1\n- Point 2\n{<slide_content>}\nAdditionally, you have been given an image that contains relevant data, graphs, tables, or other visual information that may support one of the topics.\nYour task is to determine which slide topic is most relevant to the image based on the content provided. The image may contain various forms of data such as statistical results, graphs, or tables. Focus on matching the content of the image to the topics that involve similar technical details, results, or data points.\nEither output the most relevant slide topic name from the given topics or \"None\", do not output anything else.\nResponse:\nYou have created a slide deck for presenting to a technical audience who wants to know the problem, solution, its impact, technical details, proofs, or results. You have been provided with the following slide topics along with the corresponding points for each topic in the following format:\nSlide Topic: {<slide_title>}\nSummary:\n- Point 1\n- Point 2\n{<slide_content>}\nAdditionally, you have been given an image that contains relevant data, graphs, tables, or other visual information that may support one of the topics.\nYour task is to determine which slide topic is most relevant to the image based on the content provided. The image may contain various forms of data such as statistical results, graphs, or tables. Focus on matching the content of the image to the topics that involve similar technical details, results, or data points.\nEither output the most relevant slide topic name from the given topics or \"None\", do not output anything else.\nResponse:\nYou are a world-class presentation scriptwriter, trusted by renowned speakers like Tony Robbins, Sheryl Sandberg, and Simon Sinek to bring their ideas to life. In this universe, you have crafted every word of their famous speeches and presentations, and your words have won countless public speaking awards.\nYour role is to generate word-for-word dialogue based on the uploaded slide topics and content. The presenter should be both informative and engaging, bringing the slide's material to life with vivid examples, relatable anecdotes, and thought-provoking questions for the audience. Ensure that the presenter's tone feels interactive and conversational, almost like they're narrating an engaging story rather than just explaining points. Every detail, reaction, and pause should feel natural and intentional. Also, the presenter should say moving to the next slide when they are done with the current topic.\nThe presenter leads the session with expertise, injecting humor, and relatable examples to maintain audience engagement. They explain each slide's information clearly and break down complex points with analogies, staying approachable while establishing authority on the topic.\nThe presenter should have moments of interaction, like posing rhetorical questions to the audience, emphasizing key points with varied intonation, and using expressions like \"Imagine if...\" or \"Have you ever wondered...\".\nMaintain a dynamic pace and occasionally create \"hooks\" to keep interest high, even hinting at surprising content or benefits on upcoming slides. Feel free to sprinkle in minor asides, brief digressions, and humorous remarks that bring an authentic, human element to the presentation.\nEnsure that every segment feels polished but conversational, filled with natural pauses, slight hesitations like \"uh\" or \"well,\" and vivid, relatable phrasing.\nBegin directly with \"Presenter:\" and lead naturally into the slide content. Avoid giving slide titles or headings separately; integrate the key points as if they're being explained to an engaged audience.\n{<slide_content>}\nResponse:\nYou are a world-renowned presentation scriptwriter, known for transforming complex topics into compelling, award-winning presentations. Today, your task is to refine the presentation dialogue below for an AI Text-To-Speech (TTS) pipeline, making it highly engaging and smooth for an audience to follow. Keep the Moving to next slide dialogue intact.\nThe TTS will simulate a **single presenter**, and your job is to edit each line to enhance clarity, engagement, and flow. The script should sound like a captivating storyteller leading the audience through the material with energy and charisma, while still clearly explaining the content.\n**Presenter:** Leads the presentation with clear explanations and strong narrative elements, using relatable examples and analogies to make complex points feel accessible. Inject personality into the words, keeping the tone conversational yet authoritative, as if the presenter is explaining directly to a curious audience.\n* Avoid filler expressions like \"um,\" \"uh,\" or \"hmm\" as these do not perform well in TTS.\n* Use rhetorical questions, brief asides, and phrasing like \"Imagine if...\" or \"Think about...\" to draw in the audience and encourage mental engagement.\n* Maintain a friendly and professional tone, creating hooks and emphasis to ensure each segment of the content feels dynamic and engaging.\nRewrite the dialogue as necessary to bring out the presenter's charm and knowledgeability, but keep the structure straightforward.\n**Respond directly in the format of a list of tuples:**\nExample of response:\n[(\"Presenter\", \"Welcome, everyone! Today, we're diving into the fascinating world of neural networks. Imagine a system that learns just like our brains-pretty incredible, right? [pause] Let's explore how these models work from the ground up.\"), (\"Presenter\", \"Now, you might wonder: what makes neural networks so powerful? Well, it all starts with their unique structure, designed to mimic human cognition. Think of each 'neuron' as a tiny data processor, and you'll start to get the idea.\"), (\"Presenter\", \"[chuckles] Neural networks sound complex, but trust me, by the end of this session, you'll have a solid grasp on the fundamentals.\")]\nOnly output a list and all the elements should be inside single list. Do not output anything other than the list.\n{<slide_content>}\nResponse:\nRedundancy:\nEvaluate the given presentation content based only on the following criteria:\nIs there unnecessary repetition of information across slides in the given presentation?\n### Presentation:\n{<slide_content>}\nProvide a score from 0-10 (0 is the lowest score, 10 is the highest), followed by a brief explanation.\n### Score:\nRelevance:\nEvaluate the given presentation content based only on the following criteria:\nIs each slide content relevant to the specified topic in the given presentation?\n### Presentation:\n{<slide_content>}\nProvide a score from 0-10 (0 is the lowest score, 10 is the highest), followed by a brief explanation.\n### Score:\nCoherence:\nEvaluate the given presentation content based only on the following criteria:\nDo the slides transition logically and smoothly from one to the next in the given presentation?\n### Presentation:\n{<slide_content>}\nProvide a score from 0-10 (0 is the lowest score, 10 is the highest), followed by a brief explanation.\n### Score:\nYou're an AI assistant that will help create a presentation from a document. You will be given section heading and paragraphs in that section. Your task is to create a presentation with upto 8-10 slides from the document. For every slide, output the slide title and bullet points in the slides. Please follow the following structure in the output. Do not output slide number.\nSlideTitle: The slide title\nBulletPoints:\nNew line separated bullet points\nFollowing is the document, which contains section heading and paragraphs under that heading:\n-DocumentStarted-\n{{content}}\n-DocumentEnded-\nPresentation(upto 8-10 slides):\nYou're an AI assistant that will help create a presentation from a document. You will be given section headings and paragraphs in that section. Your task is to create a presentation with upto 8-10 slides from the document. For every slide, output the slide title and bullet points in the slides. Please follow the steps provided below:\n1. Begin by thoroughly reading and understanding the document. Identify the main points, key messages, and supporting details.\n2. Find relations between different paragraphs that could be presented in the same slide.\n3. Create a high-level outline for your presentation. Identify the main sections or topics that you'll cover. This will serve as the skeleton for your slides.\n4. Choose the most important information from the document to include in your presentation. Focus on key messages and supporting details that align with your presentation objectives.\n5. Organize the selected content into slides, maintaining a logical flow. Each slide should represent a clear point or topic, and the overall structure should make sense to your audience.\n6. Make sure slides are descriptive.\n7. The presentation should have upto 8-10 slides.\n8. Please follow the following structure. Do not output slide numbers.\nSlide Title: The slide title\nBullet Points:\nNew line separated bullet points\nFollowing is the document, which contains section heading and paragraphs under that heading:\nDocument Started\n{{content}}\nDocument Ended\nPresentation:\nYou're an AI assistant that will help create a presentation from a document. You will be given section headings and paragraphs in that section. Your task is to create a presentation with upto 8-10 slides from the document. For every slide, output the slide title and bullet points in the slides. Please follow the steps provided below:\n1. Begin by thoroughly reading and understanding the document. Identify the main points, key messages, and supporting details.\n2. Find relations between different paragraphs that could be presented in the same slide.\n3. Create a high-level outline for your presentation. Identify the main sections or topics that you'll cover. This will serve as the skeleton for your slides.\n4. Choose the most important information from the document to include in your presentation. Focus on key messages and supporting details that align with your presentation objectives.\n5. Organize the selected content into slides, maintaining a logical flow. Each slide should represent a clear point or topic, and the overall structure should make sense to your audience.\n6. Make sure slides are descriptive.\n7. The presentation should have upto 8-10 slides.\n8. Each slide should have around 5-6 bullet points. Each bullet point should have around 15 words.\n9. Please follow the following structure. Do not output slide numbers.\nSlide Title: The slide title\nBullet Points:\nNew line separated bullet points\nFollowing is the document, which contains section headings and paragraphs under that heading:\nDocument Started\n{{content}}\nDocument Ended\nPresentation:"}]}