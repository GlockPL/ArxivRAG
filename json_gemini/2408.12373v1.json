{"title": "Cell-ontology guided transcriptome foundation model", "authors": ["Xinyu Yuan", "Zhihao Zhan", "Zuobai Zhang", "Manqi Zhou", "Jianan Zhao", "Boyu Han", "Yue Li", "Jian Tang"], "abstract": "Transcriptome foundation models (TFMs) hold great promises of deciphering the transcriptomic language that dictate diverse cell functions by self-supervised learn-ing on large-scale single-cell gene expression data, and ultimately unraveling the complex mechanisms of human diseases. However, current TFMs treat cells as independent samples and ignore the taxonomic relationships between cell types, which are available in cell ontology graphs. We argue that effectively leveraging this ontology information during the TFM pre-training can improve learning biologically meaningful gene co-expression patterns while preserving TFM as a general purpose foundation model for downstream zero-shot and fine-tuning tasks. To this end, we present single cell, Cell-ontology guided TFM (scCello). We introduce cell-type coherence loss and ontology alignment loss, which are minimized along with the masked gene expression prediction loss during the pre-training. The novel loss component guide scCello to learn the cell-type-specific representation and the structural relation between cell types from the cell ontology graph, respectively. We pre-trained scCello on 22 million cells from CellxGene database leveraging their cell-type labels mapped to the cell ontology graph from Open Biological and Biomedical Ontology Foundry. Our TFM demonstrates competitive generalization and transferability performance over the existing TFMs on biologically important tasks including identifying novel cell types of unseen cells, prediction of cell-type-specific marker genes, and cancer drug responses.", "sections": [{"title": "Introduction", "content": "Cells are basic units of all living organisms. Deciphering diverse cell functions through gene expression is a long-standing challenge in life science and yet the essential path towards precision and personalized medicine. In this context, single-cell RNA sequencing (scRNA-seq) has emerged as a pivotal technique to measure the gene expression in individual cells. The vast amount of publicly available scRNA-seq data offers a rich transcriptomic data source [44] for learning cell representations towards various research applications, such as cancer therapy [56] and drug discovery [4].\nRecently, several Transcriptome Foundation Models (TFMs) were developed to improve cell represen-tation learning. They mainly utilize pre-training methods analogous to natural language processing like masked token prediction, treating genes as \"tokens\" and cells as \u201csentences\" [14, 55, 63, 51]. However, the existing TFMs treat cells as independent samples and ignore their cell-type lineages. On the other hand, prior knowledge of the taxonomic relationships of cell types has been made available through the cell ontology graph by Open Biological and Biomedical Ontology Foundry [3]. Effec-tively leveraging the ontology knowledge can improve the quality of the pre-training on large-scale scRNA-seq atlases, which are heterogeneous and encompass hundreds of cell types. This can be done by training the TFM to recognize the inherent ontology relationships among cell types, thereby refining the cell representations. For instance, \u201cmature \u03b1-\u03b2 T cell\" should be closer to \u201cmature T"}, {"title": "Method", "content": "Fig. 1 illustrates an overview of scCello. We present the details of individual components below."}, {"title": "Data Preprocessing", "content": "Cell ontology graph. Cell ontology is a widely used metadata schema for standard cell type annotations [16]. We downloaded the ontology from Open Biological and Biomedical Ontology Foundry (https://obofoundry.org/). It is structured as an unweighted directed acyclic graph G = (V,E), where each node v \u2208 V corresponds to a distinct cell type and each directed edge (u, v) \u2208 E denotes a hierarchical lineage relationship of the form \"is a subtype of\" between cell types (Fig. 1a). To accurately represent the inherently symmetric \"being biologically similar\" relationship between cell types, the directed graph was transformed into an undirected one for subsequent calculation of cellular ontology relationships in Sec. 2.4.\nscRNA-seq data. The scRNA-seq data were downloaded from CellxGene. After the preprocessing (App. B), we obtained 22 million cells. Each single-cell transcriptome is represented by a sequence of tuples, each containing genes and their expression counts. Each sequence was then ordered by the rank of the gene expression values [55], akin to the sequential ordering of natural languages. Given a batch of B cells, each cell i \u2208 {1, ..., B} was assigned a cell type ontology identifier ci \u2208 V from the CellxGene database, to enable mapping between cell and cell ontology."}, {"title": "Masked Gene Prediction", "content": "Same as BERT [15], scCello predicts a randomly masked gene token in each cell based on its surrounding context in the sequence. This objective $\\mathcal{L}_{MGP}$ aims to learn the dynamic gene co-expression network."}, {"title": "Intra-Cellular Ontology Coherence", "content": "A straightforward approach to encourage learning the cell representations that are coherent to the cell type labels is to apply cross-entropy loss for supervised cell type classification. However, this approach is limited in learning cell representation for the foundation model. Instead, we employed a supervised contrastive loss as our objective $\\mathcal{L}_{Intra}$, which directly optimizes the TFM rather than"}, {"title": "Inter-Cellular Relational Alignment", "content": "To encourage TFMs to learn inter-cellular ontology relationships, scCello forces cell representations to truthfully reflect the pairwise node structural similarity derived from the cell ontology graph, using a relational alignment objective. This objective constitutes the most important part of scCello.\nOntology relationships. To effectively quantify ontology relationships between cell types from the ontology graph, scCello estimates pairwise node structural similarities as proxies using Personalized PageRank (PPR) [20]. PPR is a graph learning algorithm. The PPR score $PPR(u, v)$ estimates the probability for a random walk. It starts from a given target node $u \\in V$ and terminates at another node $v \\in V$. Importantly, this is a context-sensitive structural similarity measure that accounts both direct connections and broader subgraph patterns [60]. It also provides robustness against variations in global network structures, such as variable node degrees and clustering coefficients [10]. To improve robustness (as justified in App. A), we transform $PPR(\\cdot)$ through a non-linear function to derive the structural similarities $sim(\\cdot)$ as ontology relationships tunable by a hyper-parameter threshold $s$:\n$sim(u, v) = \\begin{cases}    [log_2(PPR(u,v) + 1)], & \\text{if } PPR(u, v) \\geq s\\\\    1, & \\text{otherwise}  \\end{cases}$"}, {"content": "To encourage TFMs to learn inter-cellular ontology relationships, scCello forces cell representations to truthfully reflect the pairwise node structural similarity derived from the cell ontology graph, using a relational alignment objective. This objective constitutes the most important part of scCello.\nOntology relationships. To effectively quantify ontology relationships between cell types from the ontology graph, scCello estimates pairwise node structural similarities as proxies using Personalized PageRank (PPR) [20]. PPR is a graph learning algorithm. The PPR score $PPR(u, v)$ estimates the probability for a random walk. It starts from a given target node $u \\in V$ and terminates at another node $v \\in V$. Importantly, this is a context-sensitive structural similarity measure that accounts both direct connections and broader subgraph patterns [60]. It also provides robustness against variations in global network structures, such as variable node degrees and clustering coefficients [10]. To improve robustness (as justified in App. A), we transform $PPR(\\cdot)$ through a non-linear function to derive the structural similarities $sim(\\cdot)$ as ontology relationships tunable by a hyper-parameter threshold $s$:\n$sim(u, v) = \\begin{cases}    [log_2(PPR(u,v) + 1)], & \\text{if } PPR(u, v) \\geq s\\\\    1, & \\text{otherwise}  \\end{cases}$"}, {"content": "Cells with closely related cell types tend to be more similar than those with distinct cell types. This observation guides scCello to align the distances between cell representations w.r.t. a target cell, with their structural similarities $sim(\\cdot)$ (as shown in Fig. 1c). Specifically, given a batch of B cells, if we consider a target cell $i$ and another cell in the batch $j \\neq i$, the representation distance $z_i^Tz_j$ should reflect their structural similarity $sim(c_i, c_j)$. Accordingly, a negative sample set $\\Omega_{i,j} = \\{k | sim(c_i, c_j) > sim(c_i, c_k), 1 \\leq k \\leq B\\}$ can be produced, where cell pair $(i, k)$ are considered less similar to the cell pair $(i, j)$ and should be contrasted against in the representation space using the objective $\\mathcal{L}_{Inter}$:\n$\\mathcal{L}_{Inter} = \\sum_{i=1}^{B} \\sum_{j=1, j\\neq i}^{B} log (\\frac{exp(z_i^T z_j / T)}{exp(z_i^T z_j / T) + \\sum_{k \\in \\Omega_{i,j}} exp(z_i^T z_k / T)})$"}, {"content": "Cells with closely related cell types tend to be more similar than those with distinct cell types. This observation guides scCello to align the distances between cell representations w.r.t. a target cell, with their structural similarities $sim(\\cdot)$ (as shown in Fig. 1c). Specifically, given a batch of B cells, if we consider a target cell $i$ and another cell in the batch $j \\neq i$, the representation distance $z_i^Tz_j$ should reflect their structural similarity $sim(c_i, c_j)$. Accordingly, a negative sample set $\\Omega_{i,j} = \\{k | sim(c_i, c_j) > sim(c_i, c_k), 1 \\leq k \\leq B\\}$ can be produced, where cell pair $(i, k)$ are considered less similar to the cell pair $(i, j)$ and should be contrasted against in the representation space using the objective $\\mathcal{L}_{Inter}$:\n$\\mathcal{L}_{Inter} = \\sum_{i=1}^{B} \\sum_{j=1, j\\neq i}^{B} log (\\frac{exp(z_i^T z_j / T)}{exp(z_i^T z_j / T) + \\sum_{k \\in \\Omega_{i,j}} exp(z_i^T z_k / T)})$"}, {"content": "Notably, ancestor cell types, which can reach the target cell type via the directed \"is a subtype of\" edge on the ontology graph, are structurally distant from the target cell type. Despite being distant, they fall into the same, broader cell type category. Contrasting cells associated with these distant ancestor cell types with the target cell is counter-intuitive. Therefore, scCello explicitly excludes such cells from the negative sample set, avoiding inappropriately pushing away biologically similar cells. This enhances scCello's capability to discern subtle similarities and differences within the cell types."}, {"title": "Overall Pre-training Objective", "content": "During pre-training, we seek to minimize the loss functions of all pre-training tasks simultaneously:\n$\\theta^* = arg \\underset{\\theta}{min} \\mathcal{L}_{MGP} + \\mathcal{L}_{Inter} + \\mathcal{L}_{Intra} + \\mathcal{L}_{Reg}$"}, {"title": "Related Work", "content": "The rapid growth of scRNA-seq datasets has opened new avenues for constructing TFMs, enabling transfer learning across various biological downstream tasks. Initial efforts, such as scBERT [65],"}, {"title": "Experiments", "content": "As an overview, the following experiments show that, (1) scCello can generalize to unseen cells, and to more difficult settings, such as cells of unseen cell types, tissues, and donors (Sec. 4.2.1); (2) scCello can benefit from fine-tuning on target datasets (Sec. 4.2.2); (3) the structural similarity embedded in scCello helps to classify novel cell types in a zero-shot manner (Sec. 4.3); (4) scCello effectively transfers to different downstream tasks (Sec. 4.4 and Sec. 4.5); (5) scCello is robust to batch effects that arise from different experimental conditions (Sec. 4.6); (6) Each loss component in Eqn. 5 is beneficial to scCello (Sec. 4.7). For every table reported, we used bold to highlight the best performance and results within 0.005 difference from the best. We used underlining to denote the second-best performances. For all metrics, \u2191 indicates the higher the better."}, {"title": "Setups", "content": "Pre-training and downstream datasets. We collected a large pre-training dataset consisting of 22 million cells along with downstream datasets. In particular, we generated one in-distribution (ID) and six out-of-distribution (OOD) datasets (App. B). The ID dataset is denoted as $D_{id}$. For the OOD setting, we introduced three scenarios: unseen cell types $(\\{D_{ct}^i\\}_{i=1}^2)$, unseen cell tissues $(\\{D_{ts}^i\\}_{i=1}^2)$, and unseen donors $(\\{D_{dn}^i\\}_{i=1}^2)$. Each scenario has two datasets. Notably, the OOD donor setting presents more realistic challenges than ID and other OOD settings because of the potential batch effects in the test donors.\nPre-training configurations. An Adam optimizer [35] (learning rate: 0.001, weight decay: 0.001, warm-up steps: 3,333) was used to train the scCello for 40,000 steps on 4 NVIDIA A100 GPUs on Compute Canada. We used 192 for batch size. More details are introduced in App. C.\nBaselines. Across all downstream tasks, scCello is benchmarked with leading open-source large-scale TFMs: Geneformer [55], scGPT [14], scTab [18], UCE [51], and three TFM ablations. We also implemented ablated versions of scCello that only differ in the pre-training objectives from scCello: scCello using only the masked gene prediction loss (denoted as MGP), scCello using only the cell type supervised classification (denoted as Sup), and scCello using only the two losses (denoted as MGP+Sup). The three ablated TFMs provide a reference to isolate the effect of implementation details and training configurations. For each task, we also selected state-of-the-art non-TFM methods for fair comparison.\nDownstream metrics. We evaluated the 3 tasks by the following metrics. (1) Clustering metrics include normalized mutual information (NMI), adjusted rand index (ARI), average silhouette width (ASW), and the average of the 3 scores (AvgBio) to assess both between-cluster separation and within-cluster closeness [14]. The batch integration task (Sec. 4.6) is evaluated by ASW\u266d, graph connectivity (GraphConn) and their average (AvgBatch), along with an overall score (Overall = 0.6\u00d7AvgBio +0.4\u00d7AvgBatch) to balance biological relevance and batch consistency following [14]. (2) Classification metrics include accuracy (Acc), Macro F1 and area under the ROC curve (AU-ROC) [46]. (3) Regression task metrics include Pearson correlation coefficient score (PCC) [46]. Details for each metric were provided in App. D.1."}, {"title": "Cell Type Identification", "content": "Setup. For the cell type clustering task, TFM baselines and four non-TFM methods were evaluated: (1) raw data expressions of highly variable genes (abbr., Raw Data) [33]; (2) Seurat [26]; (3) Harmony [36] (4) scVI [40]. Cell representations were extracted from the baselines and clustered by Louvain algorithm [5]. We evaluated the clustering performance of each method on both ID dataset $D_{id}$ and OOD datasets $D_{cond}^i$ (cond\u2208{ct, ts, dn}, i\u2208{1,2}).\nID and OOD generalization. We reported zero-shot cell type clustering performance in Tab. 1, and included all the metrics for all datasets in App. D.2.1 due to space constraint. For both the ID and OOD settings, scCello consistently outperforms all baselines, achieving a 16.1% improvement in AvgBio on the ID dataset and a 12.1% improvement in average AvgBio across the six OOD datasets. Interestingly, while scCello outperforms non-TFM methods by a large margin, Geneformers and scGPT barely surpass these methods. The latter is consistent with previous observations [66].\nIn the OOD experiments, scCello confers strong generalization capability across unseen cell types tissue, and donors. In cell type clustering, scCello is the second best only trailing UCE by 0.03 and the best method for dataset 1 and 2. The OOD tissue setting highlights scCello's ability to transfer its learned knowledge to different unseen tissues. Specifically, scCello achieve 0.6 and 0.7 while most methods conferred below 0.6 and 0.7 for the two datasets, respectively. For the unseen OOD donor scenario, most methods perform poorly with AvgBio ranging between 0.45 and 0.55. scCello led the chart achieving AvgBio above 0.6 in both datasets. Overall, scCello showcases strong model generalization capabilities across a range of biological conditions, which is attributable to the integration of cell ontology priors during its TFM pre-training. Indeed, the ablated models namely MGP, Sup, and MGP+Sup conferred lower scores compared to the full model."}, {"title": "Fine-tuning Results", "content": "Setup. We benchmarked all TFM baselines except UCE for its lack of fine-tuning support. These TFMs were fine-tuned on a subset of our pre-training data with supervised classification loss (details in App. D.2.2). We assessed both classification and clustering performance on the ID dataset $D_{id}$.\nImprovement with fine-tuning. In Tab. 2, The fine-tuned scCello outperforms other TFMs on both classification and clustering metrics, achieving up to 25.9% improvement in Macro F1 over the best baseline. Moreover, scCello without fine-tuning still surpasses the performance of the other fine-tuned methods, further highlighting its superior transferability."}, {"title": "Novel Cell Type Classification", "content": "Novel cell type classification aims to label cells of unseen cell types without further fine-tuning. This task is useful for annotating completely new scRNA-seq datasets but infeasible for most of the"}, {"title": "Marker Gene Prediction", "content": "Cell-type-specific genes, or marker genes, are highly expressed in a specific cell type but exhibit low expression in others. These genes play a crucial role in delineating cell functions in diverse tissue contexts. Identifying marker genes in less characterized cell types is an ongoing challenge [48].\nSetup. We sought to assess whether the pre-trained TFMs can discriminate marker from non-marker genes for any cell type without any supervised fine-tuning. This zero-shot experiment evaluates whether the TFM is able to learn biologically meaningful gene co-expression patterns without supervision. For each cell, we quantified the marker gene potential of each gene by the changes in TFM-generated cell representations after in-silico knockout of the target gene (details in App. D.4). Here we assume that the larger the change the higher the marker gene potential. We discussed the caveat of this approach in Sec. 5. As test data, we used GSE96583 [31] ($D_{mk}$) and GSE130148 [58] ($D_{mk}$). We obtained the marker gene labels from CellMarker2 [28] and PanglaoDB [21].\nZero-shot transferability. In Tab. 3, scCello outperforms other TFMs, improving upon the second-best method by 1.8% in average AUROC. The inclusion of cell label information during pre-training boosts TFM performance, as evidenced by the strong results of scTab, Sup, MGP+Sup and scCello."}, {"title": "Cancer Drug Response Prediction", "content": "Developing effective drugs for cancer treatment is challenging due to individual variability in drug responses. Accurately predicting cancer drug responses (CDR) can greatly aid anti-cancer drug development and improve our understanding of cancer biology [39].\nSetup. Following the approach of scFoundation [25], cell representations were extracted from fixed TFMs and integrated into the DeepCDR [39] pipeline to estimate the half-maximal inhibitory concentration ($IC_{50}$) values of drugs (details in App. D.5). We benchmarked our method against DeepCDR, scFoundation, and other TFM baselines, using the same pre-processed data as DeepCDR.\nZero-shot transferability. In Tab. 4, scCello is among the top 3 along with scGPT and UCE, achieving 7.4% improvement in PCC over the base method DeepCDR. This highlights scCello's transferability in enhancing specialized task-oriented methods. In particular, it can be used as an powerful feature extractor for diverse downstream tasks."}, {"title": "Batch Integration", "content": "The scRNA-seq atlases, assembled from datasets across various labs and conditions, are prone to unwanted technical variations known as batch effects [42]. These effects can significantly affect the generalization ability of TFMs especially because they require pre-training on a massive amount of heterogeneous scRNA-seq data pooled from many studies. Here we sought to evaluate scCello's robustness to batch effects without fine-tuning.\nSetup. We adopted the same baselines as in zero-shot cell type clustering (Sec. 4.2.1), and followed the evaluation protocol of scGPT [14]. We evaluated on one ID dataset $D_{id}$ and six OOD datasets $D_{cond}^i$ (cond \u2208 {ct,ts, dn}, i \u2208 {1,2}) (see complete results of all metrics in App. D.6).\nRobustness to data noise. Fig. 3 shows that scCello excels in 3 out of 7 datasets, and achieves comparable performance on another 3 datasets. The performance is attributable to the use of cell type information as the ablated baseline MGP conferred much lower batch integration score compared to Sup and scCello."}, {"title": "Ablation Study", "content": "Ablation of pre-training losses. Tab. 5 reports the cell type clustering (Sec. 4.2.1) and novel cell type classification (Sec. 4.3) performance of scCello by using full or partial pre-training losses. Removing any of the four losses in Eqn. 5 resulted in decreased performance, corroborating the benefits of the proposed pre-training losses. Notably, removing the inter-cellular ontology relation loss $\\mathcal{L}_{Inter}$ led to 56.1% and 65.3% decrease in terms of Acc. and Macro F1 on novel cell type classification task, respectively. This shows the upmost importance of the structurally induced loss and ultimately the use of cell ontology graph information."}, {"title": "Discussion and Conclusion", "content": "Limitation and future work. The cell ontology is constantly revised and expanded. In the future, we plan to investigate more efficient methods for fine-tuning scCello to enable continual learning of updated ontology, rather than retraining the entire model. Additionally, we aim to scale up the model size of scCello to increase its expressiveness and capacity. For the zero-shot marker gene prediction experiments (Sec. 4.4), one caveat is that our in-silico gene knockout approach also detects essential genes such as housekeeping genes [17] and transcription factors that are master regulators [8], which may not necessarily be marker genes. Nonetheless, deletion of these influential genes will also lead to large change of the transcriptome landscape of the cell. We will explore this in future study.\nSocietal impact. This work proposes a novel cell-ontology guided TFM, scCello, to enhance cell representation learning. On the positive side, once pre-trained, scCello can serve as a foundational model capable of facilitating scientific discoveries across various downstream tasks related to cells and cellular processes. However, on the negative side, the pre-training of scCello requires significant computational resources, potentially resulting in substantial carbon dioxide emissions that could contribute to environmental harm.\nConclusion. The proposed scCello incorporates cell ontology knowledge into its pre-training process by simultaneously modeling at the gene level, intra-cellular level, and inter-cellular level. We constructed a large-scale cell type identification benchmark to evaluate the model's generalization capabilities, both in-distribution and out-of-distribution. Our evaluation demonstrates that scCello also exhibits strong transferability, as evidenced by its performance on other biologically meaningful downstream tasks such as zero-shot novel cell type classification and cell-type-specific marker gene prediction. Foundational models are typically heavy on the parameters for them to have sufficient capacity to learn from unlabeled data from scratch. This limits their usage to only fine-tuning tasks as pre-training them is prohibitive without large compute. Our proposed approach provides an efficient way of leveraging the prior knowledge at the pre-training, which led to much smaller parameter size while achieving performance comparable of the TFMs that are 5-60 times bigger. Together, scCello is a knowledge-informed and general purpose deep learning model that can be fine-tuned for a wide array of downstream applications, aiding in the rapid identification of novel cell types, disease-associated genes, and effective cancer drugs."}, {"title": "PPR Transformation", "content": "Personalized PageRank (PPR). Personalized PageRank (PPR) extends the classic PageRank algo-rithm, which Google originally developed to rank web pages in search engines. PageRank conducts this by analyzing large-scale hyperlinked graphs on the web using random walker simulations. Unlike traditional PageRank that assigns a universal score to each web page, PPR customizes these scores. Specifically, individual user preferences during searches are incorporated, so that PPR can focus on web pages particularly relevant to each user. Due to its flexibility and effectiveness, PPR has been widely applied in graph learning across various fields, such as social networks, recommendation systems, and biological data analysis.\nAs illustrated in Fig. 4, this algorithm starts with a predefined preference node (or target node), which is emphasized according to the user's interests. Subsequently, a random walk is conducted on the graph to facilitate graph traversal. At each step of the walk, there is a fixed probability $a$ that the walker will jump back to the target node from the current node instead of moving to an adjacent node chosen at random. This process of jumping, commonly referred to as \"teleportation\", biases the walk towards subgraphs that are of particular importance to the target node, thus personalizing the results according to user preferences. The walk continues until it reaches a steady state, at which point the likelihood of being on each node stabilizes into a steady-state distribution. These stabilized"}, {"title": "PPR transformation", "content": "In scCello, the PPR algorithm is applied to the cell ontology graph to assess the structural similarities among cell types, or to measure their importance relative to a specified target cell type. We implemented PPR using the \"pagerank\" function in NetworkX [23] with \"personalization\" as arguments.\nHowever, modification is needed to integrate PPR into TFM pre-training. The PPR scores are in real-number format and susceptible to numerical noise. Also, as shown in Fig. 5a, these scores typically exhibit a skewed distribution, concentrated around lower magnitudes. Consequently, setting precise thresholds to differentiate between node similarity and dissimilarity is challenging. Moreover, the vast amount small PPR values may be indistinguishable from noise.\nTo mitigate the effects of numerical noise and skewed magnitudes for the PPR scores, we employ truncation, logarithmic scaling, and discretization as outlined in Eqn. 3. Note that Eqn. 3 defines a monotonic, non-decreasing function that preserves the relative order between nodes. Its minimum value is set to 1 for the least similar cell types.\nThis equation transforms the raw PPR score, PPR(\u00b7), into the final structural similarity, sim(\u00b7). This transformation ensures that sim(\u00b7) accurately reflects pronounced similarities as defined by the cell ontology and avoids emphasizing minor dissimilarities that could mislead during TFM pre-training.\nAnalyses. In Fig. 5, we present a comparison of the distributions for the PPR score, PPR(\u00b7), and the transformed structural similarity, sim(\u00b7). After transformation, the distribution of sim(\u00b7) is less skewed and exhibits clear discretization. This facilitates the setting of definitive thresholds for distinguishing between similarity and dissimilarity among cell types, thereby enabling the effective incorporation of the cell ontology graph in scCello's pre-training.\nIn addition, we provide detailed insights into the scale of structural similarity, the distribution of these similarities for each cell type, and examples of cell types associated with various levels of structural similarity:\n(1) Fig. 6 illustrates the correspondence between the structural similarity after PPR transfor-mation and the original PPR scores, showcasing a log-linear relationship as expected. This helps clarify the scaling of structural similarity, which is discretized into integer levels ranging from 1 to 11.\n(2) Fig. 7 demonstrates how frequently each target cell type is associated with other cell types at specific levels of structural similarity. Consequently, during scCello's pre-training, a substantial number of negative samples are expected to be utilized in the inter-cellular relational alignment objective, as outlined in Sec. 2.4."}, {"title": "Data Preprocessing Details", "content": "Download and Preprocessing. We downloaded from CellxGene [1] census version 2023-7-25. We focused on 291 datasets for human scRNA-seq. We preprocessed the dataset by the following steps:\n(1) Remove non-primary cells. Some data on CellxGene was duplicated due to multiple submissions of the same dataset from different research groups, therefore cells marked as \"non-primary\" were filtered out to prevent label leakage between pre-training and down-stream.\n(2) Filter out cells not produced by 10x-based [62] sequencing protocols. There are numerous sequencing protocols in CellxGene database besides 10x-based sequencing [62], such as Drop-seq [53] and MARS-seq [34]. Only sequencing data from 10x-based sequencing protocols was kept to avoid large variation of data signals [42].\n(3) Exclude cancer cells. Cancer cells were highly dissimilar to normal cells and even occupied a large amount in the CellxGene database (nearly 12%). These cells could bring unexpected signals and skew the data, therefore we excluded these cancer cells.\nTo build downstream datasets for out-of-distribution (OOD) generalization evaluation, we first held out two category sets for each of the three settings: unseen cell types, unseen tissues and unseen"}, {"title": "Implementation Details", "content": "scRNA-seq Data. scRNA-seq can enable the quantification of gene expression profiles of individual cells. Each cell's gene expression profile can be described by the set X = {(g1,e1), (g2,e2), ..., (gM,eM)}, where ek denotes the expression count of gene gk, with ek \u2265 0. A value of ek = 0 indicates that the gene gk is not expressed or not detected by the sequencing experiment. We use the same gene vocabulary set as [55], with the number of genes M=25, 424.\nGene Token Vocabulary. The gene vocabulary set contains both protein-coding genes and miRNA genes. M, the number of genes, is not the same as the number of all tokens in the model vocabulary. scCello has M gene tokens plus three more special tokens [MASK] for masking, [CLS] for the start of a sentence and [PAD] for padding.\nRank Value Encoding. Unlike natural languages, which inherently follow a sequential order, scRNA-seq data presents a unique challenge due to the lack of intrinsic order among gene tokens. Therefore, we employ Rank Value Encoding [55] approach to rank genes based on their normalized expression set {(\u0113i, gi)}11. Specifically, gene expressions are first normalized by the total count within a cell [64] in a cell-wise manner, and then normalized through gene-specific weighting factors in a gene-wise manner. These factors are adopted from [55], which calculates the non-zero median value of expression of each detected gene across all cells. By design, these factors are assigned to emphasize lowly-expressed but essential genes, such as transcription factors [37], while deprioritizing ubiquitously expressed housekeeping genes [17].\nAfter the normalization and ranking, it results in an ordered sequence of gene identities X = [g\u03c0(1), g\u03c0(2),\u00b7\u00b7\u00b7, g\u03c0(M)] with an index permutation \u03c0(\u00b7), satisfying \u0115\u03c0(1) \u2265 \u0115\u03c0(2) \u2265 ... \u2265 \u0115\u03c0(M). To mitigate memory consumption, zero-expressed genes are removed and the gene sequence is"}, {"title": "Evaluation Metrics", "content": "All metrics used in downstream tasks are summarized in Tab. 10 and introduced below.\nNormalized Mutual Info Score (NMI). The NMI is a metric that quantifies the similarity between two differen clustering assignments or labelings of the same set of samples. We use NMI to compare the cell-type labels, with the cluster indices obtained from applying the Louvain clustering algorithm [12] on the target dataset.\nWe denote the two label assignments of the same N cell samples as C and K, representig the cell-type labels and the Louvain cluster indices, respectively. The entropy of a label assignment, say C, is a measure of the uncertainty associated with that assignment set. It's calculated as:\n$H(C) = - \\sum_{i=1}^{|C|} P(i) log P(i)$"}, {"content": "All metrics used in downstream tasks are summarized in Tab. 10 and introduced below.\nNormalized Mutual Info Score (NMI). The NMI is a metric that quantifies the similarity between two differen clustering assignments or labelings of the same set of samples. We use NMI to compare the cell-type labels, with the cluster indices obtained from applying the Louvain clustering algorithm [12] on the target dataset.\nWe denote the two label assignments of the same N cell samples as C and K, representig the cell-type labels and the Louvain cluster indices, respectively. The entropy of a label assignment, say C, is a measure of the uncertainty associated with that assignment set. It's calculated as:\n$H(C) = - \\sum_{i=1}^{|C|} P(i) log P(i)$"}, {"content": "where |C| is the number of unique cell types and $P(i) = \\frac{|C_i|}{N}$ is the probability that a randomly selected sample belongs to the class $C_i$. The entropy H(K) for the cluster indices K is computed similarly, with $Q(j) = \\frac{|K_j|}{N}$ being the probability of a sample belonging to the cluster $K_j$:\n$H(K) = - \\sum_{j=1}^{|K|} Q(j) log Q(j)$"}, {"content": "where |C| is the number of unique cell types and $P(i) = \\frac{|C_i|}{N}$ is the probability that a randomly selected sample belongs to the class $C_i$. The entropy H(K) for"}]}